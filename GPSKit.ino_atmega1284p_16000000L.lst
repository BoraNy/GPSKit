
C:\Users\nyvir\AppData\Local\Temp\arduino_build_146255/GPSKit.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	0c 94 6a 10 	jmp	0x20d4	; 0x20d4 <__dtors_end>
       4:	0c 94 c6 6b 	jmp	0xd78c	; 0xd78c <__vector_1>
       8:	0c 94 f1 6b 	jmp	0xd7e2	; 0xd7e2 <__vector_2>
       c:	0c 94 1c 6c 	jmp	0xd838	; 0xd838 <__vector_3>
      10:	0c 94 3d 62 	jmp	0xc47a	; 0xc47a <__vector_4>
      14:	0c 94 3d 62 	jmp	0xc47a	; 0xc47a <__vector_4>
      18:	0c 94 3d 62 	jmp	0xc47a	; 0xc47a <__vector_4>
      1c:	0c 94 3d 62 	jmp	0xc47a	; 0xc47a <__vector_4>
      20:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      24:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      28:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      2c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      30:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      34:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      38:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      3c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      40:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      44:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      48:	0c 94 48 6c 	jmp	0xd890	; 0xd890 <__vector_18>
      4c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      50:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      54:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      58:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      5c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      60:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      64:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      68:	0c 94 04 56 	jmp	0xac08	; 0xac08 <__vector_26>
      6c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      70:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      74:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      78:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      7c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      80:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      84:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      88:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      8c:	03 6e       	ori	r16, 0xE3	; 227
      8e:	db 36       	cpi	r29, 0x6B	; 107
      90:	3d 9a       	sbi	0x07, 5	; 7
      92:	99 99       	sbic	0x13, 1	; 19
      94:	99 3d       	cpi	r25, 0xD9	; 217
      96:	ab aa       	std	Y+51, r10	; 0x33
      98:	aa 2a       	or	r10, r26
      9a:	3e 00       	.word	0x003e	; ????
      9c:	00 00       	nop
      9e:	80 3f       	cpi	r24, 0xF0	; 240
      a0:	08 4a       	sbci	r16, 0xA8	; 168
      a2:	d7 3b       	cpi	r29, 0xB7	; 183
      a4:	3b ce       	rjmp	.-906    	; 0xfffffd1c <__eeprom_end+0xff7efd1c>
      a6:	01 6e       	ori	r16, 0xE1	; 225
      a8:	84 bc       	out	0x24, r8	; 36
      aa:	bf fd       	.word	0xfdbf	; ????
      ac:	c1 2f       	mov	r28, r17
      ae:	3d 6c       	ori	r19, 0xCD	; 205
      b0:	74 31       	cpi	r23, 0x14	; 20
      b2:	9a bd       	out	0x2a, r25	; 42
      b4:	56 83       	std	Z+6, r21	; 0x06
      b6:	3d da       	rcall	.-2950   	; 0xfffff532 <__eeprom_end+0xff7ef532>
      b8:	3d 00       	.word	0x003d	; ????
      ba:	c7 7f       	andi	r28, 0xF7	; 247
      bc:	11 be       	out	0x31, r1	; 49
      be:	d9 e4       	ldi	r29, 0x49	; 73
      c0:	bb 4c       	sbci	r27, 0xCB	; 203
      c2:	3e 91       	ld	r19, -X
      c4:	6b aa       	std	Y+51, r6	; 0x33
      c6:	aa be       	out	0x3a, r10	; 58
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	3f 07       	cpc	r19, r31
      ce:	2c 7a       	andi	r18, 0xAC	; 172
      d0:	a5 ba       	out	0x15, r10	; 21
      d2:	6c c5       	rjmp	.+2776   	; 0xbac <gps_map_icon+0x106>
      d4:	90 da       	rcall	.-2784   	; 0xfffff5f6 <__eeprom_end+0xff7ef5f6>
      d6:	3b 93       	.word	0x933b	; ????
      d8:	65 fc       	sbrc	r6, 5
      da:	8b bc       	out	0x2b, r8	; 43
      dc:	53 f8       	bld	r5, 3
      de:	10 fd       	sbrc	r17, 0
      e0:	3c 56       	subi	r19, 0x6C	; 108
      e2:	92 83       	std	Z+2, r25	; 0x02
      e4:	4d bd       	out	0x2d, r20	; 45
      e6:	87 9d       	mul	r24, r7
      e8:	3a b6       	in	r3, 0x3a	; 58
      ea:	3d cb       	rjmp	.-2438   	; 0xfffff766 <__eeprom_end+0xff7ef766>
      ec:	c9 bf       	out	0x39, r28	; 57
      ee:	5b be       	out	0x3b, r5	; 59
      f0:	73 da       	rcall	.-2842   	; 0xfffff5d8 <__eeprom_end+0xff7ef5d8>
      f2:	0f c9       	rjmp	.-3554   	; 0xfffff312 <__eeprom_end+0xff7ef312>
      f4:	3f 05       	cpc	r19, r15
      f6:	a8 4c       	sbci	r26, 0xC8	; 200
      f8:	cd b2       	in	r12, 0x1d	; 29
      fa:	d4 4e       	sbci	r29, 0xE4	; 228
      fc:	b9 38       	cpi	r27, 0x89	; 137
      fe:	36 a9       	ldd	r19, Z+54	; 0x36
     100:	02 0c       	add	r0, r2
     102:	50 b9       	out	0x00, r21	; 0
     104:	91 86       	std	Z+9, r9	; 0x09
     106:	88 08       	sbc	r8, r8
     108:	3c a6       	std	Y+44, r3	; 0x2c
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	2a be       	out	0x3a, r2	; 58
     10e:	00 00       	nop
     110:	00 80       	ld	r0, Z
     112:	3f 06       	cpc	r3, r31
     114:	64 ec       	ldi	r22, 0xC4	; 196
     116:	1b 3c       	cpi	r17, 0xCB	; 203
     118:	04 bc       	out	0x24, r0	; 36
     11a:	16 3e       	cpi	r17, 0xE6	; 230
     11c:	3b e5       	ldi	r19, 0x5B	; 91
     11e:	b9 3c       	cpi	r27, 0xC9	; 201
     120:	c9 3c       	cpi	r28, 0xC9	; 201
     122:	37 c2       	rjmp	.+1134   	; 0x592 <altimeter_logo+0xd6>
     124:	9e 5a       	subi	r25, 0xAE	; 174
     126:	3d 66       	ori	r19, 0x6D	; 109
     128:	04 98       	cbi	0x00, 4	; 0
     12a:	08 3e       	cpi	r16, 0xE8	; 232
     12c:	ea 69       	ori	r30, 0x9A	; 154
     12e:	aa aa       	std	Y+50, r10	; 0x32
     130:	3e 00       	.word	0x003e	; ????
     132:	00 00       	nop
     134:	80 3f       	cpi	r24, 0xF0	; 240

00000136 <__trampolines_end>:
__trampolines_start():
     136:	44 45       	sbci	r20, 0x54	; 84
     138:	47 00       	.word	0x0047	; ????

0000013a <WaypointMenu()::__c>:
     13a:	6d 20 00                                            m .

0000013d <WaypointMenu()::__c>:
     13d:	30 00                                               0.

0000013f <WaypointMenu()::__c>:
     13f:	4e 4f 20 44 41 54 41 00                             NO DATA.

00000147 <WaypointMenu()::__c>:
     147:	53 45 4c 45 43 54 45 44 20 57 41 59 50 4f 49 4e     SELECTED WAYPOIN
     157:	54 3a 20 00                                         T: .

0000015b <WaypointMenu()::__c>:
     15b:	50 52 45 53 53 20 28 42 29 20 54 4f 20 53 45 4c     PRESS (B) TO SEL
     16b:	45 43 54 00                                         ECT.

0000016f <WaypointMenu()::__c>:
     16f:	57 41 59 50 4f 49 4e 54 3a 20 00                    WAYPOINT: .

0000017a <WaypointMenu()::__c>:
     17a:	53 45 4c 45 43 54 20 57 41 59 50 4f 49 4e 54 00     SELECT WAYPOINT.

0000018a <drawBitmap(int)::__c>:
     18a:	53 41 54 45 4c 4c 49 54 45 20 54 52 41 43 4b 45     SATELLITE TRACKE
     19a:	52 00                                               R.

0000019c <drawBitmap(int)::__c>:
     19c:	44 45 56 49 41 54 49 4f 4e 20 4d 41 50 00           DEVIATION MAP.

000001aa <drawBitmap(int)::__c>:
     1aa:	47 50 53 20 4e 41 56 49 47 41 54 49 4f 4e 00        GPS NAVIGATION.

000001b9 <drawBitmap(int)::__c>:
     1b9:	48 41 52 44 57 41 52 45 20 49 4e 46 4f 00           HARDWARE INFO.

000001c7 <drawBitmap(int)::__c>:
     1c7:	41 4c 54 49 4d 45 54 45 52 00                       ALTIMETER.

000001d1 <drawBitmap(int)::__c>:
     1d1:	44 49 47 49 54 41 4c 20 43 4f 4d 50 41 53 53 00     DIGITAL COMPASS.

000001e1 <drawBitmap(int)::__c>:
     1e1:	47 50 53 20 4e 41 56 49 47 41 54 49 4f 4e 00        GPS NAVIGATION.

000001f0 <UIMenu()::__c>:
     1f0:	47 4d 54 00                                         GMT.

000001f4 <UIMenu()::__c>:
     1f4:	55 54 43 00                                         UTC.

000001f8 <StartPointLog()::__c>:
     1f8:	45 45 50 52 4f 4d 20 52 45 43 4f 56 45 52 59 20     EEPROM RECOVERY 
     208:	44 41 54 41 00                                      DATA.

0000020d <StartPointLog()::__c>:
     20d:	64 65 67 00                                         deg.

00000211 <StartPointLog()::__c>:
     211:	44 49 53 54 2e 20 46 52 4f 4d 20 53 54 41 52 54     DIST. FROM START
     221:	20 50 4e 54 00                                       PNT.

00000226 <StartPointLog()::__c>:
     226:	53 54 41 52 54 20 50 4f 49 4e 54 00                 START POINT.

00000232 <StartPointLog()::__c>:
     232:	44 41 54 41 20 4c 4f 47 47 49 4e 47 00              DATA LOGGING.

0000023f <SatelliteTracker()::__c>:
     23f:	41 43 51 55 49 52 49 4e 47 2e 2e 2e 00              ACQUIRING....

0000024c <SatelliteTracker()::__c>:
     24c:	53 41 54 3a 20 00                                   SAT: .

00000252 <LogMenu()::__c>:
     252:	45 52 41 53 49 4e 47 20 45 45 50 52 4f 4d 2e 2e     ERASING EEPROM..
     262:	2e 00                                               ..

00000264 <LogMenu()::__c>:
     264:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

00000271 <LogMenu()::__c>:
     271:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

0000027e <LogMenu()::__c>:
     27e:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

0000028b <LogMenu()::__c>:
     28b:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

00000298 <LogMenu()::__c>:
     298:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

000002a5 <LogMenu()::__c>:
     2a5:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

000002b2 <LogMenu()::__c>:
     2b2:	44 45 43 4f 44 49 4e 47 20 45 45 50 52 4f 4d 2e     DECODING EEPROM.
     2c2:	2e 2e 00                                            ...

000002c5 <InfoMenu()::__c>:
     2c5:	31 35 2e 30 33 32 30 32 32 00                       15.032022.

000002cf <InfoMenu()::__c>:
     2cf:	56 45 52 53 49 4f 4e 00                             VERSION.

000002d7 <InfoMenu()::__c>:
     2d7:	31 2e 37 30 25 00                                   1.70%.

000002dd <InfoMenu()::__c>:
     2dd:	45 45 50 52 4f 4d 00                                EEPROM.

000002e4 <InfoMenu()::__c>:
     2e4:	31 35 25 00                                         15%.

000002e8 <InfoMenu()::__c>:
     2e8:	52 41 4d 00                                         RAM.

000002ec <InfoMenu()::__c>:
     2ec:	34 37 25 00                                         47%.

000002f0 <InfoMenu()::__c>:
     2f0:	46 4c 41 53 48 00                                   FLASH.

000002f6 <InfoMenu()::__c>:
     2f6:	53 55 4e 53 45 54 00                                SUNSET.

000002fd <InfoMenu()::__c>:
     2fd:	53 55 4e 52 49 53 45 00                             SUNRISE.

00000305 <receptionSignalGraphMenu()::__c>:
     305:	47 50 53 20 53 54 41 52 54 55 50 3a 20 00           GPS STARTUP: .

00000313 <receptionSignalGraphMenu()::__c>:
     313:	48 44 4f 50 20 56 41 4c 55 45 3a 20 00              HDOP VALUE: .

00000320 <receptionSignalGraphMenu()::__c>:
     320:	6d 73 00                                            ms.

00000323 <receptionSignalGraphMenu()::__c>:
     323:	55 50 44 20 49 4e 54 45 52 56 41 4c 3a 20 00        UPD INTERVAL: .

00000332 <receptionSignalGraphMenu()::__c>:
     332:	43 4f 4e 4e 45 43 54 49 4f 4e 20 49 4e 46 4f 00     CONNECTION INFO.

00000342 <receptionSignalGraphMenu()::__c>:
     342:	52 45 43 45 50 54 49 4f 4e 20 53 49 47 4e 41 4c     RECEPTION SIGNAL
	...

00000353 <GPSMenu()::__c>:
     353:	48 44 4f 50 20 00                                   HDOP .

00000359 <GPSMenu()::__c>:
     359:	64 65 67 00                                         deg.

0000035d <GPSMenu()::__c>:
     35d:	53 41 54 45 4c 4c 49 54 45 00                       SATELLITE.

00000367 <GPSMenu()::__c>:
     367:	20 4b 6d 2f 68 00                                    Km/h.

0000036d <GPSMenu()::__c>:
     36d:	53 50 45 45 44 00                                   SPEED.

00000373 <GPSMenu()::__c>:
     373:	20 6d 00                                             m.

00000376 <GPSMenu()::__c>:
     376:	41 4c 54 49 54 55 44 45 00                          ALTITUDE.

0000037f <GPSMenu()::__c>:
     37f:	4c 4f 4e 47 49 54 55 44 45 20 00                    LONGITUDE .

0000038a <GPSMenu()::__c>:
     38a:	4c 41 54 49 54 55 44 45 00                          LATITUDE.

00000393 <GPSMenu()::__c>:
     393:	41 43 51 55 49 52 49 4e 47 20 53 41 54 45 4c 4c     ACQUIRING SATELL
     3a3:	49 54 45 53 00                                      ITES.

000003a8 <GPSMenu()::__c>:
     3a8:	41 43 51 55 49 52 49 4e 47 20 53 41 54 45 4c 4c     ACQUIRING SATELL
     3b8:	49 54 45 53 00                                      ITES.

000003bd <noReceptionSignal()::__c>:
     3bd:	41 52 45 20 59 4f 55 20 49 4e 44 4f 4f 52 3f 00     ARE YOU INDOOR?.

000003cd <noReceptionSignal()::__c>:
     3cd:	41 52 45 20 59 4f 55 20 49 4e 44 4f 4f 52 3f 00     ARE YOU INDOOR?.

000003dd <noReceptionSignal()::__c>:
     3dd:	20 55 54 43 00                                       UTC.

000003e2 <noReceptionSignal()::__c>:
     3e2:	30 00                                               0.

000003e4 <noReceptionSignal()::__c>:
     3e4:	43 48 45 43 4b 20 54 48 45 20 41 4e 54 45 4e 4e     CHECK THE ANTENN
     3f4:	41 00                                               A.

000003f6 <noReceptionSignal()::__c>:
     3f6:	54 4f 4f 20 4c 4f 4e 47 00                          TOO LONG.

000003ff <noReceptionSignal()::__c>:
     3ff:	53 49 47 4e 41 4c 20 52 45 43 45 50 54 49 4f 4e     SIGNAL RECEPTION
     40f:	20 54 4f 4f 4b 00                                    TOOK.

00000415 <DeviationMap()::__c>:
     415:	4e 4f 20 44 41 54 41 00                             NO DATA.

0000041d <CompassMenu()::__c>:
     41d:	44 49 47 49 54 41 4c 20 43 4f 4d 50 41 53 53 00     DIGITAL COMPASS.

0000042d <ButtonIO()::__c>:
     42d:	6d 61 6b 65 2e 62 65 6c 69 65 76 65 00              make.believe.

0000043a <ButtonIO()::__c>:
     43a:	42 4f 52 41 20 4e 59 00                             BORA NY.

00000442 <ButtonIO()::__c>:
     442:	50 52 4f 47 52 41 4d 4d 45 44 20 42 59 00           PROGRAMMED BY.

00000450 <AltitudeMenu()::__c>:
     450:	4e 4f 20 44 41 54 41 2e 2e 2e 00                    NO DATA....

0000045b <AltitudeMenu()::__c>:
     45b:	41 4c 54 49 54 55 44 45 20 47 52 41 50 48 00        ALTITUDE GRAPH.

0000046a <setup::__c>:
     46a:	5b 46 41 49 4c 45 44 5d 20 44 48 54 31 31 00        [FAILED] DHT11.

00000479 <setup::__c>:
     479:	5b 20 20 4f 4b 20 20 5d 20 4c 53 4d 33 30 33 44     [  OK  ] LSM303D
     489:	4c 48 43 00                                         LHC.

0000048d <setup::__c>:
     48d:	5b 20 20 4f 4b 20 20 5d 20 4e 45 4f 2d 36 4d 00     [  OK  ] NEO-6M.

0000049d <setup::__c>:
     49d:	5b 20 20 4f 4b 20 20 5d 20 47 50 49 4f 00           [  OK  ] GPIO.

000004ab <setup::__c>:
     4ab:	5b 20 20 4f 4b 20 20 5d 20 53 53 44 31 33 30 36     [  OK  ] SSD1306
	...

000004bc <altimeter_logo>:
	...
     4c4:	00 1f ff 00 00 00 00 00 ff ff e0 00 00 0f ff ff     ................
     4d4:	ff ff fe 00 0f ff f0 01 ff ff 00 1c ff 81 f8 3f     ...............?
     4e4:	e7 00 18 7e 09 fa 0f c3 00 18 7c 21 f8 03 c3 00     ...~......|!....
     4f4:	1c f0 80 f0 91 e7 00 1f e6 90 60 a4 ff 00 1f c2     ..........`.....
     504:	40 00 28 7f 00 1f 89 00 00 19 3f 00 1f 05 00 00     @.(.......?.....
     514:	12 5f 00 1f 30 00 00 00 8f 00 1e 88 00 00 01 07     ._..0...........
     524:	00 1c 40 00 00 01 67 00 1c 20 18 00 06 83 80 39     ..@...g.. .....9
     534:	80 1c 00 0c 33 80 38 40 0e 00 38 43 c0 3b 00 06     ....3.8@..8C.;..
     544:	00 70 1d c0 78 c0 07 00 c0 71 c0 70 00 03 03 80     .p..x....q.p....
     554:	01 c0 73 80 01 87 00 19 e0 70 00 01 cc 00 00 e0     ..s......p......
     564:	77 80 00 f8 00 1c e0 70 00 00 f0 00 00 e0 70 00     w......p......p.
     574:	01 f0 00 00 e0 74 00 07 f8 00 04 e0 70 00 0f 3c     .....t......p..<
     584:	00 01 e0 73 80 07 3e 00 1d c0 70 00 00 3c 00 01     ...s..>...p..<..
     594:	c0 79 c0 00 38 00 79 c0 3a 00 00 00 00 09 c0 38     .y..8.y.:......8
     5a4:	40 00 00 00 63 c0 3d 00 00 00 00 13 80 1c 20 00     @...c.=....... .
     5b4:	00 00 87 80 1e c0 00 00 00 27 00 1e 10 00 00 01     .........'......
     5c4:	0f 00 1f 20 00 00 04 8f 00 1f 05 00 00 12 1f 00     ... ............
     5d4:	1f 89 00 00 09 3f 00 1f c2 40 00 2c 7f 00 1f e4     .....?...@.,....
     5e4:	90 40 a4 ff 00 1c f8 a5 42 91 e7 00 18 7c 21 42     .@......B....|!B
     5f4:	03 c3 00 18 7f 09 4a 0f c3 00 1c ff c0 48 3f e7     ......J......H?.
     604:	00 0f ff f8 03 ff ff 00 07 ff ff ff ff fe 00 00     ................
     614:	00 7f ff e0 00 00 00 00 0f fe 00 00 00 00 00 00     ................
     624:	00 00 00 00                                         ....

00000628 <compass_logo>:
	...
     630:	00 01 10 00 00 00 00 00 01 90 00 00 00 00 00 01     ................
     640:	50 00 00 00 00 00 01 30 00 00 00 00 00 01 10 00     P......0........
	...
     65c:	60 00 00 00 00 00 00 60 00 00 00 00 00 0f 6f 00     `......`......o.
     66c:	00 00 00 00 3f 6f c0 00 00 00 00 f8 01 f0 00 00     ....?o..........
     67c:	00 01 e0 00 78 00 00 00 03 80 00 1c 00 00 00 07     ....x...........
     68c:	03 fc 0e 00 00 00 0e 0f ff 07 00 00 00 1c 3f ff     ..............?.
     69c:	83 80 00 00 18 7f ff e1 80 00 00 38 ff ff e1 c0     ...........8....
     6ac:	00 00 30 ff fe f0 c0 00 00 71 ff f8 78 e0 00 00     ..0......q..x...
     6bc:	61 ff e0 f8 60 00 00 63 ff 80 f8 60 00 88 63 fe     a...`..c...`..c.
     6cc:	01 fc 63 e0 a8 03 f0 01 fc 02 00 ab e3 c0 03 fc     ..c.............
     6dc:	7b c0 ab e3 80 03 fc 7a 00 50 03 80 07 fc 03 e0     {......z.P......
     6ec:	00 63 f0 07 fc 60 00 00 63 fc 0f f8 60 00 00 61     .c...`..c...`..a
     6fc:	fe 0f f8 60 00 00 71 fe 1f f8 e0 00 00 30 ff 1f     ...`..q......0..
     70c:	f0 c0 00 00 38 7f 3f e1 c0 00 00 18 7f 3f c1 80     ....8.?......?..
     71c:	00 00 1c 1f ff 83 80 00 00 0e 0f ff 07 00 00 00     ................
     72c:	07 01 f8 0e 00 00 00 03 80 00 1c 00 00 00 01 e0     ................
     73c:	00 78 00 00 00 00 f8 01 f0 00 00 00 00 3f 6f c0     .x...........?o.
     74c:	00 00 00 00 0f 6f 00 00 00 00 00 00 60 00 00 00     .....o......`...
     75c:	00 00 00 60 00 00 00 00 00 00 00 00 00 00 00 00     ...`............
     76c:	00 f0 00 00 00 00 00 01 00 00 00 00 00 00 00 e0     ................
     77c:	00 00 00 00 00 00 10 00 00 00 00 00 01 e0 00 00     ................
	...

00000794 <falling_icon>:
     794:	04 00 8a 40 51 40 20 c0 03 c0                       ...@Q@ ...

0000079e <no_changing_icon>:
     79e:	01 00 00 80 ff c0 00 80 01 00                       ..........

000007a8 <rising_icon>:
     7a8:	03 c0 20 c0 51 40 8a 40 04 00                       .. .Q@.@..

000007b2 <mini_satellite_icon>:
     7b2:	87 08 8f 88 9f c8 ff f8 9f c8 8f 88 87 08           ..............

000007c0 <connecting_icon>:
	...
     7c8:	00 00 00 10 00 00 00 00 00 00 38 00 00 00 00 00     ..........8.....
     7d8:	00 fe 00 00 00 00 00 01 c7 1b 00 00 00 00 01 c3     ................
     7e8:	bf 80 00 00 00 00 e3 ff c0 00 00 00 00 77 e6 c0     .............w..
     7f8:	00 00 00 00 3f c3 c0 00 00 00 00 1b 81 c0 00 00     ....?...........
     808:	00 00 07 01 c0 00 00 00 00 06 03 80 00 00 00 00     ................
     818:	0c 03 00 00 00 00 00 0c 0f 80 00 00 00 00 0c 1f     ................
     828:	c0 00 00 00 00 06 3f e0 00 00 00 00 07 f6 70 00     ......?.......p.
     838:	00 00 01 79 ce 30 00 00 00 03 78 0e 18 00 03 f8     ...y.0....x.....
     848:	03 f8 07 38 00 1f ff 81 d8 03 f0 00 7f 7f c0 e0     ...8............
     858:	01 e0 00 f6 6e e0 78 00 c0 01 c4 66 78 10 00 00     ....n.x....fx...
     868:	07 8c 63 1e 00 00 00 0f 98 61 be 00 00 00 0f f8     ..c......a......
     878:	61 fe 00 00 00 18 ff ff e3 00 00 00 18 3f ff 83     a............?..
     888:	80 00 00 10 30 60 81 80 00 00 30 30 60 81 c0 00     ....0`....00`...
     898:	00 30 60 60 c0 c0 00 00 30 60 60 c0 c0 00 00 60     .0``....0``....`
     8a8:	60 60 c0 60 00 00 60 60 60 c0 60 00 00 7f ff ff     ``.`..```.`.....
     8b8:	ff e0 00 00 7f ff ff ff e0 00 00 60 60 60 c0 60     ...........```.`
     8c8:	00 00 60 60 60 c0 60 00 00 60 60 60 c0 60 00 00     ..```.`..```.`..
     8d8:	30 60 60 c0 c0 00 00 30 30 60 80 c0 00 00 30 30     0``....00`....00
     8e8:	60 81 c0 00 00 10 30 60 81 80 00 00 18 3f ff 83     `.....0`.....?..
     8f8:	80 00 00 18 ff ff e3 00 00 00 0f f8 61 fe 00 00     ............a...
     908:	00 07 0c 63 0e 00 00 00 03 8c 63 1c 00 00 00 01     ...c......c.....
     918:	c4 66 78 00 00 00 00 f6 6e e0 00 00 00 00 7f ff     .fx.....n.......
     928:	c0 00 00 00 00 03 f8 00 00 00 00 00 00 00 00 00     ................
	...

0000093a <task_icon>:
     93a:	7f ff ff ff ff ff e0 ff ff ff ff ff ff f0 c0 1a     ................
     94a:	26 66 45 80 30 c0 1b 66 66 6d 80 30 c0 1f ff ff     &fE.0..ffm.0....
     95a:	ff 80 30 c0 00 00 00 00 00 30 c0 00 00 00 00 00     ..0......0......
     96a:	30 c0 00 00 00 00 00 30 c0 00 00 00 00 01 30 c0     0......0......0.
     97a:	00 00 00 00 03 f0 c0 00 00 00 00 03 00 f8 00 31     ...............1
     98a:	08 c0 03 00 f8 00 31 08 c0 03 00 c8 00 31 08 c0     ......1......1..
     99a:	03 f0 f8 00 00 00 00 00 30 d8 00 ff fc f0 00 30     ........0......0
     9aa:	c8 01 ff fc 78 00 30 d8 01 80 00 18 00 30 f8 1d     ....x.0......0..
     9ba:	ff 80 19 80 30 c8 1d ff c0 19 80 30 c8 01 80 c0     ....0......0....
     9ca:	18 00 30 f8 01 80 c0 18 00 30 f8 01 80 c0 18 00     ..0......0......
     9da:	30 c8 1d 80 c2 1b 80 30 c8 01 80 c2 18 00 30 f8     0......0......0.
     9ea:	01 80 c2 18 00 30 f8 01 80 42 18 00 30 c8 01 80     .....0...B..0...
     9fa:	02 18 00 30 c8 1d 80 02 1b 80 30 f8 01 80 c0 18     ...0......0.....
     a0a:	00 30 f8 01 80 c0 18 00 30 c8 01 80 c0 18 00 30     .0......0......0
     a1a:	c8 1d ff c0 19 80 30 f8 1d ff 80 19 80 30 d8 01     ......0......0..
     a2a:	80 00 18 00 30 c8 01 ff ff f8 00 30 d8 00 ff ff     ....0......0....
     a3a:	f0 00 30 f8 00 00 00 00 00 30 c8 00 01 08 00 3f     ..0......0.....?
     a4a:	30 f8 00 31 08 c0 31 30 f8 00 31 08 c0 21 30 c0     0..1..10..1..!0.
     a5a:	00 00 00 00 21 30 c0 00 00 00 00 21 30 c0 00 00     ....!0.....!0...
     a6a:	00 00 3f 30 c0 00 00 00 00 3f 30 c0 00 00 00 00     ..?0.....?0.....
     a7a:	00 30 c0 00 00 00 00 00 30 c0 1f ff ff ff 80 30     .0......0......0
     a8a:	c0 1b 66 66 6d 80 30 c0 1a 26 66 45 80 30 f8 ff     ..ffm.0..&fE.0..
     a9a:	ff ff ff ff f0 79 ff ff ff ff ff e0                 .....y......

00000aa6 <gps_map_icon>:
     aa6:	ff ff ff ff ff fc 00 ff ff ff ff ff fc 00 ff ff     ................
     ab6:	ff ff ff fc 00 e0 00 00 e3 80 0c 00 e0 00 00 61     ...............a
     ac6:	80 0c 00 e0 00 00 61 80 0c 00 e0 3f 00 71 80 0c     ......a....?.q..
     ad6:	00 e0 7f 80 71 c0 0c 00 e1 ff e0 71 c0 0c 00 e1     ....q......q....
     ae6:	80 70 30 c0 0c 00 e3 8c 30 38 c0 0c 00 e7 3f 38     .p0.....08....?8
     af6:	38 e0 0c 00 e7 3f 38 38 e0 0c 00 e6 73 9f f8 7f     8....?88....s...
     b06:	fc 00 e6 73 98 00 00 0c 00 e7 7f 98 00 00 0c 00     ...s............
     b16:	e7 3f 38 00 00 0c 00 e3 9e 30 00 00 0c 00 e3 80     .?8......0......
     b26:	70 00 00 0c 00 ff c0 ff 0f cc fc 00 ff e0 ff 0f     p...............
     b36:	cc fc 00 ff e1 ff 1f 00 7c 00 e0 73 87 18 00 0c     ........|..s....
     b46:	00 e0 3f 0e 38 00 0c 00 e0 1e 1c 70 3f cc 00 e0     ..?.8......p?...
     b56:	0c 1c e0 ff fc 00 e0 04 38 e3 e0 fc 00 e0 00 39     ........8......9
     b66:	c7 80 1e 00 e0 00 31 c7 00 0f 00 ff c4 71 9c 00     ......1......q..
     b76:	07 c0 ff c4 63 38 00 01 c0 e0 00 e3 38 00 00 c0     ....c8......8...
     b86:	e0 00 e7 70 00 00 40 e0 01 c7 60 00 00 60 e0 03     ...p..@...`..`..
     b96:	ce e7 cf 0f 60 e0 03 9c c7 cf 9f 70 e0 07 1c cc     ....`......p....
     ba6:	0d 98 70 e0 07 38 cc 0f 98 70 ff ff ff cc ef 9f     ..p..8...p......
     bb6:	70 ff ff ff cf ef 01 f0 00 00 00 e7 ec 1f 70 00     p.............p.
     bc6:	00 00 e7 8c 1e 60 00 00 00 60 00 00 60 00 00 00     .....`...`..`...
     bd6:	70 00 00 60 00 00 00 78 00 00 c0 00 00 00 1c 00     p..`...x........
     be6:	01 c0 00 00 00 1c 00 03 80 00 00 00 0e 00 07 00     ................
     bf6:	00 00 00 07 00 0e 00 00 00 00 07 ff fc 00 00 00     ................
     c06:	00 00 7f f0 00 00 00 00 00 1f 80 00                 ............

00000c12 <borany_icon>:
     c12:	00 00 22 73 cf 8f 22 00 00 00 00 36 8a 28 08 a2     .."s.."....6.(..
     c22:	00 00 00 00 2a fa 2f 0f 14 00 00 00 00 22 8a 28     ....*./......".(
     c32:	08 88 00 00 00 00 22 8b cf 8f 08 00 00 00 00 00     ......".........
	...
     c76:	07 f8 1f 87 f8 1f 80 00 00 07 f8 1f 87 f8 1f 80     ................
     c86:	00 00 06 06 60 66 06 60 60 00 00 06 06 60 66 06     ....`f.``....`f.
     c96:	60 60 00 00 07 f8 60 67 f8 7f e0 00 00 07 f8 60     ``....`g.......`
     ca6:	67 f8 7f e0 00 00 06 06 60 66 18 60 60 00 00 06     g.......`f.``...
     cb6:	06 60 66 18 60 60 00 00 07 f8 1f 86 06 60 60 00     .`f.``.......``.
     cc6:	00 07 f8 1f 86 06 60 60 00 00 00 00 00 00 00 00     ......``........
     cd6:	00 00 00 00 00 00 24 00 00 00 00 00 00 00 00 2c     ......$........,
     ce6:	00 00 00 00 00 00 00 ff ff ff 80 00 00 00 00 00     ................
     cf6:	80 2c 00 80 00 00 00 00 00 80 24 00 80 00 00 00     .,........$.....
     d06:	00 00 80 00 00 80 00 00 00 00 00 80 00 00 80 00     ................
     d16:	00 00 00 e0 80 00 00 83 80 00 00 00 ff f8 0f ff     ................
     d26:	ff 80 00 00 00 e0 08 08 08 03 80 00 00 00 00 08     ................
     d36:	08 08 00 00 00 00 00 00 08 3e 08 00 00 00 00 00     .........>......
     d46:	00 08 1c 08 00 00 00 00 00 00 08 08 08 00 00 00     ................
     d56:	00 00 00 3e 3e 3e 00 00 00 00 00 00 00 00 00 00     ...>>>..........
     d66:	00 00 00 00 00 ff ff ff 80 00 00 00 00 00 00 00     ................
     d76:	00 80 00 00 00 00 00 00 00 00 80 00 00 00 00 00     ................
     d86:	00 00 00 80 00 00 00 00 00 00 00 00 80 00 00 00     ................
     d96:	00 00 00 00 00 80 00 00 00 00 00 00 00 01 c0 00     ................
     da6:	00 00 00 00 00 00 01 c0 00 00 00 00 00 00 00 01     ................
     db6:	c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     dc6:	00 00 00 00 00 00 00 f3 e7 be f9 c8 00 00 00 00     ................
     dd6:	88 88 08 22 28 00 00 00 00 88 89 88 23 e8 00 00     ..."(.......#...
     de6:	00 00 88 88 88 22 28 00 00 00 00 f3 e7 3e 22 2f     ....."(......>"/
     df6:	80 00 00 00 00 00 00 00 00 00 00 fa 28 a2 f3 ef     ............(...
     e06:	1e f9 cf 22 22 28 b2 8a 08 a0 22 28 b6 23 e8 aa     ...""(...."(.#..
     e16:	8b cf 1c 22 2f 2a 22 28 a6 8a 09 02 22 29 22 22     ..."/*"(....")""
     e26:	27 22 f3 e8 bc 21 c8 a2                             '"...!..

00000e2e <route_icon>:
     e2e:	00 fc 00 00 00 00 00 01 ff 80 00 00 00 00 07 ff     ................
     e3e:	e0 00 00 00 00 1f 01 f0 00 00 00 00 18 00 38 00     ..............8.
     e4e:	00 00 00 30 00 18 00 00 00 00 30 7c 1c 00 00 00     ...0......0|....
     e5e:	00 70 fe 0c 00 00 00 00 e1 ff 0e 00 00 00 00 e3     .p..............
     e6e:	c7 86 00 00 00 00 e3 83 86 00 00 00 00 e3 83 86     ................
     e7e:	00 00 00 00 e3 83 86 00 00 00 00 e3 c7 86 00 00     ................
     e8e:	00 00 61 ff 0e 00 00 00 00 70 fe 0e 00 00 00 00     ..a......p......
     e9e:	70 7c 1c 00 00 00 00 30 00 1c 00 00 00 00 30 00     p|.....0......0.
     eae:	18 00 01 fe 00 1c 00 38 00 1f ff 80 1c 00 70 00     .......8......p.
     ebe:	1c 03 e0 0e 00 70 00 38 00 f0 0e 00 e0 00 70 00     .....p.8......p.
     ece:	70 07 00 c0 00 f0 00 30 03 83 c0 01 e0 f8 18 01     p......0........
     ede:	83 80 01 c1 fc 18 01 87 00 01 83 fe 1c 00 c6 00     ................
     eee:	01 87 8f 1c 00 ee 00 01 87 07 1c 00 fc 00 01 87     ................
     efe:	07 1c 00 7c 00 01 87 07 1c 00 7e 00 01 87 8f 1c     ...|......~.....
     f0e:	00 ff 00 01 c3 fe 18 00 e7 ff 81 c1 fc 18 00 e7     ................
     f1e:	ff c0 e0 f8 18 00 ff ff f0 f0 00 70 00 ff 00 70     ...........p...p
     f2e:	30 00 70 00 7e 00 30 30 00 e0 00 18 00 30 18 00     0.p.~.00.....0..
     f3e:	e0 00 00 00 30 1c 01 c0 00 00 00 f0 1e 03 80 00     ....0...........
     f4e:	ff ff f0 06 03 00 01 ff ff c0 07 06 00 03 ff ff     ................
     f5e:	00 03 86 00 07 80 00 00 03 8e 00 07 00 00 00 01     ................
     f6e:	dc 00 06 00 00 00 00 fc 00 06 00 00 00 01 f8 00     ................
     f7e:	07 00 00 00 03 fc 00 03 80 00 00 03 9c 00 03 ff     ................
     f8e:	fc cf ff 9c 00 00 ff fc cf ff fc 00 00 00 00 00     ................
     f9e:	01 f8 00 00 00 00 00 00 f0 00                       ..........

00000fa8 <reception_signal_icon>:
	...
     fb0:	00 00 30 00 00 00 00 00 00 78 00 00 00 00 00 00     ..0......x......
     fc0:	cc 00 00 40 00 00 01 c6 00 00 e0 00 00 03 e3 00     ...@............
     fd0:	0d c0 00 00 06 37 80 1f 80 00 0f 07 1e c7 f7 00     .....7..........
     fe0:	00 3f 03 9c 6e f3 80 00 70 01 fe 38 31 80 00 e3     .?..n...p..81...
     ff0:	00 f3 30 1f 00 00 cf 00 71 e1 8e 00 01 9c 00 39     ..0.....q......9
    1000:	c3 c6 00 01 99 80 1d 86 e6 00 01 b3 c0 0f 0c 62     ...............b
    1010:	00 01 b6 60 06 18 c6 00 00 06 60 0c 31 86 00 00     ...`......`.1...
    1020:	03 c0 0c 63 0c 00 00 01 80 07 76 18 00 00 00 00     ...c......v.....
    1030:	0f 3c 3c 00 00 00 00 7d 98 66 00 00 00 00 70 c0     .<<....}.f....p.
    1040:	e3 00 00 00 00 38 71 f1 80 00 00 00 1c 33 1b c0     .....8q......3..
    1050:	00 00 00 0e 7f 8f 60 00 00 00 07 6d ce 30 00 00     ......`....m.0..
    1060:	00 03 c0 ff 18 00 00 e0 01 c0 79 98 00 01 f0 00     ..........y.....
    1070:	c0 38 f0 01 ff 90 00 00 1c e0 1f ff f0 00 00 0e     .8..............
    1080:	c0 3f 71 e0 00 00 07 80 37 3b 40 00 00 03 00 63     .?q.....7;@....c
    1090:	9e c0 00 00 00 00 61 ce c0 00 00 00 00 60 e7 c0     ......a......`..
    10a0:	00 06 00 00 60 73 c0 00 0f 00 00 60 39 c0 00 19     ....`s.....`9...
    10b0:	80 00 60 1c e0 00 19 b6 00 60 0e c0 00 0f 36 00     ..`......`....6.
    10c0:	20 07 80 00 06 66 00 30 03 80 00 00 e6 00 18 01      ....f.0........
    10d0:	c0 00 03 cc 00 1c 01 c0 00 03 1c 00 1f 87 00 00     ................
    10e0:	00 38 00 13 fe 00 00 03 f0 00 10 60 00 00 03 c0     .8.........`....
    10f0:	00 10 60 00 00 00 00 00 1f e0 00 00 00 00 00 1f     ..`.............
    1100:	f8 00 00 00 00 00 10 1e 00 00 00 00 00 1f ff 00     ................
    1110:	00 00 00 00 3f ff 00 00 00 00 00 00 00 00 00 00     ....?...........
	...

00001122 <radar_icon>:
    1122:	00 00 00 20 00 00 00 00 00 00 20 00 00 00 00 00     ... ...... .....
    1132:	03 ff 00 00 00 00 00 3c 20 e0 00 00 00 00 c0 20     .......< ...... 
    1142:	18 00 00 00 03 00 20 06 00 00 00 04 00 20 01 00     ...... ...... ..
    1152:	00 00 78 00 20 00 c0 00 00 f8 00 20 00 20 00 00     ..x. ...... . ..
    1162:	f8 00 20 00 10 00 00 f8 00 20 00 08 00 01 70 00     .. ...... ....p.
    1172:	20 00 04 00 01 00 01 fc 00 04 00 02 00 0e 23 b8      .............#.
    1182:	02 00 04 00 10 20 7c 01 00 04 00 60 20 7c 01 00     ..... |....` |..
    1192:	08 00 80 20 7c 00 80 08 01 00 20 3c 00 80 10 01     ... |..... <....
    11a2:	0e 20 04 00 80 10 02 1f 20 02 00 40 10 04 1f 20     . ...... ..@... 
    11b2:	01 00 40 10 04 1f f8 01 00 40 20 04 0f 24 01 00     ..@......@ ..$..
    11c2:	20 20 08 02 22 00 80 20 20 08 04 21 00 80 20 20       .."..  ..!..  
    11d2:	08 04 21 00 80 20 ff ff ff ff ff ff f0 20 08 04     ..!.. ....... ..
    11e2:	21 00 80 20 20 08 04 21 00 80 20 20 08 02 22 70     !..  ..!..  .."p
    11f2:	80 20 20 04 01 24 f9 00 20 20 04 00 f8 f9 00 40     .  ..$..  .....@
    1202:	10 04 00 20 f9 00 40 10 02 00 20 72 00 40 10 02     ... ..@... r.@..
    1212:	00 20 04 00 40 08 01 70 20 04 00 80 08 00 f8 20     . ..@..p ...... 
    1222:	08 00 80 04 00 f8 20 30 01 00 04 00 f8 20 40 01     ...... 0..... @.
    1232:	00 02 00 7e 23 80 02 00 01 00 01 fc 00 04 00 01     ...~#...........
    1242:	00 00 20 00 04 00 00 80 00 20 00 08 00 00 40 00     .. ...... ....@.
    1252:	20 00 10 00 00 20 00 20 00 20 00 00 18 00 20 00      .... . . .... .
    1262:	c0 00 00 04 00 20 01 00 00 00 03 00 20 06 00 00     ..... ...... ...
    1272:	00 00 e0 20 18 00 00 00 00 1c 21 e0 00 00 00 00     ... ......!.....
    1282:	03 fe 00 00 00 00 00 00 20 00 00 00                 ........ ...

0000128e <satellite_tracker_icon>:
	...
    1296:	02 00 00 01 00 00 00 07 00 00 03 80 00 00 0f 80     ................
    12a6:	00 07 c0 00 00 19 80 00 06 60 00 00 3b 80 00 07     .........`..;...
    12b6:	30 00 00 1f 00 00 03 f0 00 00 fe 00 00 01 fc 00     0...............
    12c6:	01 fc 00 00 00 fe 00 01 38 00 00 00 32 00 01 f0     ........8...2...
    12d6:	00 00 00 3e 00 0f ff 00 00 03 ff c0 1f de 00 00     ...>............
    12e6:	01 ef e0 33 1c a0 00 0a e3 30 77 1a a0 00 09 63     ...3.....0w....c
    12f6:	90 7e 11 20 00 0a 21 d0 3c 06 41 f8 09 c0 f0 18     .~. ..!.<.A.....
    1306:	00 86 06 04 00 60 00 0f 08 01 03 c0 00 00 00 14     .....`..........
    1316:	cc 80 00 00 00 00 2f ff 40 00 00 00 00 5f ff 60     ....../.@...._.`
    1326:	00 00 00 00 5f ff 60 00 00 00 00 9f fe 50 00 00     ...._.`......P..
    1336:	00 00 83 d9 50 00 00 00 00 8f c3 10 00 00 00 00     ....P...........
    1346:	9f e2 10 00 00 00 00 9f e7 90 00 00 00 00 8f f0     ................
    1356:	d0 00 00 00 00 43 f0 20 00 00 00 00 41 e3 a0 00     .....C. ....A...
    1366:	00 00 00 21 c7 c0 00 00 00 00 10 c7 80 00 00 00     ...!............
    1376:	00 08 c5 3e 00 00 00 00 06 06 40 03 00 00 00 01     ...>......@.....
    1386:	f8 8c 07 80 00 00 00 00 91 0f c0 00 00 00 00 ab     ................
    1396:	1d c0 00 00 00 00 a7 19 80 00 00 00 00 8f 7f 00     ................
    13a6:	00 00 00 00 1f fe 00 00 00 00 00 01 f0 00 00 00     ................
    13b6:	00 00 03 90 00 00 00 00 00 07 f0 00 00 00 00 00     ................
    13c6:	0f e0 00 00 00 00 00 1f 00 00 00 00 00 00 3b 80     ..............;.
    13d6:	00 00 00 00 00 33 00 00 00 00 00 00 3e 00 00 00     .....3......>...
    13e6:	00 00 00 1c 00 00 00 00 00 00 08 00 00 00 00 00     ................
    13f6:	00 00 00 00                                         ....

000013fa <sunrise_sunset_icon>:
    13fa:	02 00 40 42 10 e0 20 21 50 07 00 40 08 80 40 10     ..@B.. !P..@..@.
    140a:	40 40 d0 58 00 10 40 40 08 80 40 07 00 40 20 21     @@.X..@@..@..@ !
    141a:	50 42 10 e0 02 00 40                                PB....@

00001421 <menuGPS>:
    1421:	00 00 00 00 fe 00 01 01 00 02 00 80 02 38 80 02     .............8..
    1431:	44 80 02 44 80 02 44 80 02 38 80 02 00 80 02 00     D..D..D..8......
    1441:	80 01 01 00 00 82 00 00 44 00 00 28 00 00 10 00     ........D..(....
    1451:	00 00 00 00 00 00 0e 78 f0 10 45 00 13 78 e0 11     .......x..E..x..
    1461:	40 10 0e 41 e0 00 00 00                             @..A....

00001469 <menuSatellite>:
	...
    1471:	00 18 3e 0c 18 41 0c 18 80 8c 18 80 8c 1f 80 fc     ..>..A..........
    1481:	18 80 8c 18 80 8c 18 41 0c 18 3e 0c 00 00 00 00     .......A..>.....
	...
    149d:	00 00 07 9c f8 08 22 20 07 3e 20 00 a2 20 0f 22     ......" .> .. ."
    14ad:	20 00 00 00                                          ...

000014b1 <menuRadar>:
    14b1:	00 00 00 00 00 00 01 ff 80 02 00 c0 04 7e 20 04     .............~ .
    14c1:	81 20 05 03 a0 05 07 a0 05 0f a0 05 07 a0 05 03     . ..............
    14d1:	a0 04 81 20 04 7e 20 02 00 c0 01 ff 80 00 00 00     ... .~ .........
    14e1:	00 00 00 00 00 00 79 f4 5f 25 04 44 25 e4 44 25     ......y._%.D%.D%
    14f1:	02 84 79 f1 1f 00 00 00                             ..y.....

000014f9 <menuCompass>:
	...
    1501:	00 00 08 00 00 1c 00 00 3e 00 00 3e 00 00 3e 00     ........>..>..>.
    1511:	00 00 00 20 22 02 20 32 02 2a aa aa 20 26 02 20     ... ". 2.*.. &. 
    1521:	22 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     "...............
    1531:	00 3c e4 5e 41 16 d1 41 15 5e 41 14 50 3c e4 50     .<.^A..A.^A.P<.P

00001541 <menuAltimeter>:
	...
    154d:	00 40 00 00 e1 00 01 f3 80 03 ff c0 05 5d 60 08     .@...........]`.
    155d:	04 10 10 02 08 20 01 04 40 00 82 ff ff ff 00 00     ..... ..@.......
	...
    1579:	00 72 0f be 8a 02 08 fa 02 08 8a 02 08 8b e2 3e     .r.............>

00001589 <menuHardware>:
    1589:	01 55 00 01 55 00 00 00 00 03 ff 80 1a 00 b0 02     .U..U...........
    1599:	80 80 1a 00 b0 02 00 80 1a 00 b0 02 00 80 1a 00     ................
    15a9:	b0 02 00 80 1a 00 b0 03 ff 80 00 00 00 01 55 00     ..............U.
    15b9:	01 55 00 00 00 00 00 00 00 0f 44 f0 10 45 00 0e     .U........D..E..
    15c9:	28 e0 01 10 10 1e 11 e0                             (.......

000015d1 <menuLog>:
    15d1:	00 00 00 0f fc 00 08 06 00 08 05 00 08 04 80 08     ................
    15e1:	04 40 08 04 20 08 07 f0 09 f0 10 09 10 10 09 10     .@.. ...........
    15f1:	10 09 f0 10 09 00 10 09 00 10 09 00 10 08 00 10     ................
    1601:	0f ff f0 00 00 00 10 38 e0 10 45 00 10 45 30 10     .......8..E..E0.
    1611:	45 10 1f 38 e0 00 00 00                             E..8....

00001619 <menuNavigation>:
    1619:	00 00 00 00 00 3e 00 00 22 00 55 22 00 00 3e 01     .....>..".U"..>.
    1629:	00 20 00 00 20 01 00 00 00 00 00 00 55 40 3e 00     . .. .......U@>.
    1639:	00 3e 00 10 3e 00 00 3e 00 10 20 00 00 21 55 40     .>..>..>.. ..!U@
    1649:	00 00 00 00 00 00 44 e4 5f 65 14 44 55 f4 44 4d     ......D._e.DU.DM
    1659:	12 84 45 11 1f 00 00 00                             ..E.....

00001661 <navFlag>:
    1661:	3f c0 3f c0 3f c0 3f c0 3f c0 3f c0 20 00 20 00     ?.?.?.?.?.?. . .
    1671:	20 00 20 00                                          . .

00001675 <navCurrentPos>:
    1675:	0c 00 0c 00 33 00 21 00 cc c0 cc c0 21 00 33 00     ....3.!.....!.3.
    1685:	0c 00 0c 00                                         ....

00001689 <font>:
    1689:	00 00 00 00 00 3e 5b 4f 5b 3e 3e 6b 4f 6b 3e 1c     .....>[O[>>kOk>.
    1699:	3e 7c 3e 1c 18 3c 7e 3c 18 1c 57 7d 57 1c 1c 5e     >|>..<~<..W}W..^
    16a9:	7f 5e 1c 00 18 3c 18 00 ff e7 c3 e7 ff 00 18 24     .^...<.........$
    16b9:	18 00 ff e7 db e7 ff 30 48 3a 06 0e 26 29 79 29     .......0H:..&)y)
    16c9:	26 40 7f 05 05 07 40 7f 05 25 3f 5a 3c e7 3c 5a     &@....@..%?Z<.<Z
    16d9:	7f 3e 1c 1c 08 08 1c 1c 3e 7f 14 22 7f 22 14 5f     .>......>.."."._
    16e9:	5f 00 5f 5f 06 09 7f 01 7f 00 66 89 95 6a 60 60     _.__......f..j``
    16f9:	60 60 60 94 a2 ff a2 94 08 04 7e 04 08 10 20 7e     ```.......~... ~
    1709:	20 10 08 08 2a 1c 08 08 1c 2a 08 08 1e 10 10 10      ...*....*......
    1719:	10 0c 1e 0c 1e 0c 30 38 3e 38 30 06 0e 3e 0e 06     ......08>80..>..
    1729:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
    1739:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
    1749:	56 20 50 00 08 07 03 00 00 1c 22 41 00 00 41 22     V P......."A..A"
    1759:	1c 00 2a 1c 7f 1c 2a 08 08 3e 08 08 00 80 70 30     ..*...*..>....p0
    1769:	00 08 08 08 08 08 00 00 60 60 00 20 10 08 04 02     ........``. ....
    1779:	3e 51 49 45 3e 00 42 7f 40 00 72 49 49 49 46 21     >QIE>.B.@.rIIIF!
    1789:	41 49 4d 33 18 14 12 7f 10 27 45 45 45 39 3c 4a     AIM3.....'EEE9<J
    1799:	49 49 31 41 21 11 09 07 36 49 49 49 36 46 49 49     II1A!...6III6FII
    17a9:	29 1e 00 00 14 00 00 00 40 34 00 00 00 08 14 22     ).......@4....."
    17b9:	41 14 14 14 14 14 00 41 22 14 08 02 01 59 09 06     A......A"....Y..
    17c9:	3e 41 5d 59 4e 7c 12 11 12 7c 7f 49 49 49 36 3e     >A]YN|...|.III6>
    17d9:	41 41 41 22 7f 41 41 41 3e 7f 49 49 49 41 7f 09     AAA".AAA>.IIIA..
    17e9:	09 09 01 3e 41 41 51 73 7f 08 08 08 7f 00 41 7f     ...>AAQs......A.
    17f9:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
    1809:	40 7f 02 1c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
    1819:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 26     .....>AQ!^...)F&
    1829:	49 49 49 32 03 01 7f 01 03 3f 40 40 40 3f 1f 20     III2.....?@@@?. 
    1839:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 03 04 78     @ .?@8@?c...c..x
    1849:	04 03 61 59 49 4d 43 00 7f 41 41 41 02 04 08 10     ..aYIMC..AAA....
    1859:	20 00 41 41 41 7f 04 02 01 02 04 40 40 40 40 40      .AAA......@@@@@
    1869:	00 03 07 08 00 20 54 54 78 40 7f 28 44 44 38 38     ..... TTx@.(DD88
    1879:	44 44 44 28 38 44 44 28 7f 38 54 54 54 18 00 08     DDD(8DD(.8TTT...
    1889:	7e 09 02 18 a4 a4 9c 78 7f 08 04 04 78 00 44 7d     ~......x....x.D}
    1899:	40 00 20 40 40 3d 00 7f 10 28 44 00 00 41 7f 40     @. @@=...(D..A.@
    18a9:	00 7c 04 78 04 78 7c 08 04 04 78 38 44 44 44 38     .|.x.x|...x8DDD8
    18b9:	fc 18 24 24 18 18 24 24 18 fc 7c 08 04 04 08 48     ..$$..$$..|....H
    18c9:	54 54 54 24 04 04 3f 44 24 3c 40 40 20 7c 1c 20     TTT$..?D$<@@ |. 
    18d9:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 4c 90 90     @ .<@0@<D(.(DL..
    18e9:	90 7c 44 64 54 4c 44 00 08 36 41 00 00 00 77 00     .|DdTLD..6A...w.
    18f9:	00 00 41 36 08 00 02 01 02 04 02 3c 26 23 26 3c     ..A6.......<&#&<
    1909:	1e a1 a1 61 12 3a 40 40 20 7a 38 54 54 55 59 21     ...a.:@@ z8TTUY!
    1919:	55 55 79 41 22 54 54 78 42 21 55 54 78 40 20 54     UUyA"TTxB!UTx@ T
    1929:	55 79 40 0c 1e 52 72 12 39 55 55 55 59 39 54 54     Uy@..Rr.9UUUY9TT
    1939:	54 59 39 55 54 54 58 00 00 45 7c 41 00 02 45 7d     TY9UTTX..E|A..E}
    1949:	42 00 01 45 7c 40 7d 12 11 12 7d f0 28 25 28 f0     B..E|@}...}.(%(.
    1959:	7c 54 55 45 00 20 54 54 7c 54 7c 0a 09 7f 49 32     |TUE. TT|T|...I2
    1969:	49 49 49 32 3a 44 44 44 3a 32 4a 48 48 30 3a 41     III2:DDD:2JHH0:A
    1979:	41 21 7a 3a 42 40 20 78 00 9d a0 a0 7d 3d 42 42     A!z:B@ x....}=BB
    1989:	42 3d 3d 40 40 40 3d 3c 24 ff 24 24 48 7e 49 43     B==@@@=<$.$$H~IC
    1999:	66 2b 2f fc 2f 2b ff 09 29 f6 20 c0 88 7e 09 03     f+/./+..). ..~..
    19a9:	20 54 54 79 41 00 00 44 7d 41 30 48 48 4a 32 38      TTyA..D}A0HHJ28
    19b9:	40 40 22 7a 00 7a 0a 0a 72 7d 0d 19 31 7d 26 29     @@"z.z..r}..1}&)
    19c9:	29 2f 28 26 29 29 29 26 30 48 4d 40 20 38 08 08     )/(&)))&0HM@ 8..
    19d9:	08 08 08 08 08 08 38 2f 10 c8 ac ba 2f 10 28 34     ......8/..../.(4
    19e9:	fa 00 00 7b 00 00 08 14 2a 14 22 22 14 2a 14 08     ...{....*."".*..
    19f9:	55 00 55 00 55 aa 55 aa 55 aa ff 55 ff 55 ff 00     U.U.U.U.U..U.U..
    1a09:	00 00 ff 00 10 10 10 ff 00 14 14 14 ff 00 10 10     ................
    1a19:	ff 00 ff 10 10 f0 10 f0 14 14 14 fc 00 14 14 f7     ................
    1a29:	00 ff 00 00 ff 00 ff 14 14 f4 04 fc 14 14 17 10     ................
    1a39:	1f 10 10 1f 10 1f 14 14 14 1f 00 10 10 10 f0 00     ................
    1a49:	00 00 00 1f 10 10 10 10 1f 10 10 10 10 f0 10 00     ................
    1a59:	00 00 ff 10 10 10 10 10 10 10 10 10 ff 10 00 00     ................
    1a69:	00 ff 14 00 00 ff 00 ff 00 00 1f 10 17 00 00 fc     ................
    1a79:	04 f4 14 14 17 10 17 14 14 f4 04 f4 00 00 ff 00     ................
    1a89:	f7 14 14 14 14 14 14 14 f7 00 f7 14 14 14 17 14     ................
    1a99:	10 10 1f 10 1f 14 14 14 f4 14 10 10 f0 10 f0 00     ................
    1aa9:	00 1f 10 1f 00 00 00 1f 14 00 00 00 fc 14 00 00     ................
    1ab9:	f0 10 f0 10 10 ff 10 ff 14 14 14 ff 14 10 10 10     ................
    1ac9:	1f 00 00 00 00 f0 10 ff ff ff ff ff f0 f0 f0 f0     ................
    1ad9:	f0 ff ff ff 00 00 00 00 00 ff ff 0f 0f 0f 0f 0f     ................
    1ae9:	38 44 44 38 44 fc 4a 4a 4a 34 7e 02 02 06 06 02     8DD8D.JJJ4~.....
    1af9:	7e 02 7e 02 63 55 49 41 63 38 44 44 3c 04 40 7e     ~.~.cUIAc8DD<.@~
    1b09:	20 1e 20 06 02 7e 02 02 99 a5 e7 a5 99 1c 2a 49      . ..~........*I
    1b19:	2a 1c 4c 72 01 72 4c 30 4a 4d 4d 30 30 48 78 48     *.Lr.rL0JMM00HxH
    1b29:	30 bc 62 5a 46 3d 3e 49 49 49 00 7e 01 01 01 7e     0.bZF=>III.~...~
    1b39:	2a 2a 2a 2a 2a 44 44 5f 44 44 40 51 4a 44 40 40     *****DD_DD@QJD@@
    1b49:	44 4a 51 40 00 00 ff 01 03 e0 80 ff 00 00 08 08     DJQ@............
    1b59:	6b 6b 08 36 12 36 24 36 06 0f 09 0f 06 00 00 18     kk.6.6$6........
    1b69:	18 00 00 00 10 10 00 30 40 ff 01 01 00 1f 01 01     .......0@.......
    1b79:	1e 00 19 1d 17 12 00 3c 3c 3c 3c 00 00 00 00 00     .......<<<<.....

00001b89 <Adafruit_SSD1306::display()::dlist1>:
    1b89:	22 00 ff 21 00                                      "..!.

00001b8e <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)::postmask>:
    1b8e:	00 01 03 07 0f 1f 3f 7f                             ......?.

00001b96 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)::premask>:
    1b96:	00 80 c0 e0 f0 f8 fc fe                             ........

00001b9e <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init5>:
    1b9e:	db 40 a4 a6 2e af                                   .@....

00001ba4 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init3>:
    1ba4:	20 00 a1 c8                                          ...

00001ba8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init2>:
    1ba8:	d3 00 40 8d                                         ..@.

00001bac <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init1>:
    1bac:	ae d5 80 a8                                         ....

00001bb0 <splash2_data>:
    1bb0:	00 00 60 00 00 00 00 00 00 00 00 00 00 00 00 00     ..`.............
    1bc0:	00 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 01     ................
    1bd0:	e0 00 00 00 00 00 00 00 00 00 00 00 00 00 01 f0     ................
	...
    1bec:	00 03 f0 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1bfc:	07 f0 00 00 00 00 00 00 00 00 00 00 00 00 00 07     ................
    1c0c:	f8 00 00 00 00 00 00 00 00 00 00 00 00 00 0f f8     ................
    1c1c:	00 00 00 03 c0 00 7e 00 00 01 e0 00 7f 0f f8 00     ......~.........
    1c2c:	00 00 03 c0 00 fe 00 00 01 e0 00 ff ef f8 00 00     ................
    1c3c:	00 03 c0 00 fe 00 00 01 e0 00 ff ff f8 00 00 00     ................
    1c4c:	03 c0 00 f0 00 00 00 0f 00 7f fe 7f c0 00 00 03     ................
    1c5c:	c0 00 f0 00 00 00 0f 00 3f fe 7f f8 3f f1 fb cf     ........?...?...
    1c6c:	fc fe f3 bc 3d ef e0 1f fe 7f ff 7f fb ff df fe     ....=...........
    1c7c:	fe ff bc 3d ef e0 1f c6 ff ff 7f fb ff df fe fe     ...=............
    1c8c:	ff bc 3d ef e0 0f e3 c7 fe 78 7b c3 de 1e f0 ff     ..=......x{.....
    1c9c:	bc 3d ef 00 07 ff 87 fc 78 7b c3 de 1e f0 f8 3c     .=......x{.....<
    1cac:	3d ef 00 01 ff ff f0 00 7b c3 c0 1e f0 f0 3c 3d     =.......{.....<=
    1cbc:	ef 00 01 f3 7f e0 3f fb c3 cf fe f0 f0 3c 3d ef     ......?......<=.
    1ccc:	00 03 e3 3f 80 7f fb c3 df fe f0 f0 3c 3d ef 00     ...?........<=..
    1cdc:	07 e7 3c 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 07     ..<.x{.....<=...
    1cec:	ff be 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 07 ff     ...x{.....<=....
    1cfc:	fe 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 0f ff fe     ..x{.....<=.....
    1d0c:	00 7f fb ff df fe f0 f0 3f fd ef e0 0f ff ff 00     ........?.......
    1d1c:	7f fb ff df fe f0 f0 3f fd ef e0 0f f9 ff 00 3e     .......?.......>
    1d2c:	79 f9 cf 9e f0 f0 1f 3d e7 e0 1f f1 ff 00 00 00     y......=........
	...
    1d44:	00 1f 80 ff 00 7f ff ff ff ff ff ff ff ff ff e0     ................
    1d54:	1c 00 7f 00 7f ff ff ff fe b4 6d 88 8d 18 e0 00     ..........m.....
    1d64:	00 1f 00 7f ff ff ff fe 95 ad 7d b5 77 e0 00 00     ..........}.w...
    1d74:	0f 00 7f ff ff ff fe a5 ad 9d 8d 19 e0 00 00 06     ................
    1d84:	00 7f ff ff ff fe b5 ad ed b5 7e e0                 ..........~.

00001d90 <splash1_data>:
    1d90:	00 00 00 00 00 01 80 00 00 00 00 00 00 00 00 00     ................
    1da0:	03 80 00 00 00 00 00 00 00 00 00 07 c0 00 00 00     ................
    1db0:	00 00 00 00 00 00 07 c0 00 00 00 00 00 00 00 00     ................
    1dc0:	00 0f c0 00 00 00 00 00 00 00 00 00 1f e0 00 00     ................
    1dd0:	00 00 00 00 00 00 00 1f e0 00 00 00 00 00 00 00     ................
    1de0:	00 00 3f e0 00 00 00 00 00 00 00 00 00 3f f0 00     ..?..........?..
	...
    1df8:	7f f0 00 00 00 00 00 00 00 1f f8 7f f0 00 00 00     ................
    1e08:	00 00 00 00 3f fe 7f f0 00 00 00 00 00 00 00 3f     ....?..........?
    1e18:	ff 7f f0 00 00 00 00 00 00 00 1f ff fb e0 00 00     ................
    1e28:	00 00 00 00 00 0f ff f9 ff c0 00 00 00 00 00 00     ................
    1e38:	0f ff f9 ff f8 00 00 00 00 00 00 07 ff f1 ff ff     ................
    1e48:	00 00 00 00 00 00 03 fc 73 ff ff 80 00 00 00 00     ........s.......
    1e58:	00 01 fe 3f ff ff 80 00 00 00 00 00 00 ff 1e 0f     ...?............
    1e68:	ff 00 00 00 00 00 00 00 7f fe 1f fc 00 00 00 00     ................
    1e78:	00 00 00 3f ff ff f8 00 00 00 00 00 00 00 0f df     ...?............
    1e88:	ff e0 00 00 00 00 00 00 00 1f 19 ff c0 00 00 00     ................
    1e98:	00 00 00 00 3f 3c ff 00 00 00 00 00 00 00 00 7e     ....?<.........~
    1ea8:	7c f8 00 00 00 00 00 00 00 00 7f fe 7c 00 00 00     |...........|...
    1eb8:	00 00 00 00 00 ff ff fc 00 00 00 00 00 00 00 00     ................
    1ec8:	ff ff fe 00 00 00 00 00 00 00 00 ff ff fe 00 00     ................
    1ed8:	00 00 00 00 00 01 ff ef fe 00 00 00 00 00 00 00     ................
    1ee8:	01 ff cf fe 00 00 00 00 00 00 00 03 ff 07 fe 00     ................
    1ef8:	00 00 00 00 00 00 03 fc 07 fe 00 00 00 00 00 00     ................
    1f08:	00 03 f0 03 fe 00 00 00 00 00 00 00 01 80 00 fe     ................
	...
    1f20:	00 00 7e 00 00 00 00 00 00 00 00 00 00 3e 00 00     ..~..........>..
	...
    1f38:	0c 00 00 00 00 00 00 07 80 00 fc 00 00 03 c0 00     ................
    1f48:	00 00 07 80 01 fc 00 00 03 c0 00 00 00 07 80 01     ................
    1f58:	fc 00 00 03 c0 00 00 00 07 80 01 e0 00 00 00 1e     ................
    1f68:	00 00 00 07 80 01 e0 00 00 00 1e 00 7f e3 f7 9f     ................
    1f78:	f9 fd e7 78 7b df c0 ff f7 ff bf fd fd ff 78 7b     ...x{.........x{
    1f88:	df c0 ff f7 ff bf fd fd ff 78 7b df c0 f0 f7 87     .........x{.....
    1f98:	bc 3d e1 ff 78 7b de 00 f0 f7 87 bc 3d e1 f0 78     .=..x{......=..x
    1fa8:	7b de 00 00 f7 87 80 3d e1 e0 78 7b de 00 7f f7     {......=..x{....
    1fb8:	87 9f fd e1 e0 78 7b de 00 ff f7 87 bf fd e1 e0     .....x{.........
    1fc8:	78 7b de 00 f0 f7 87 bc 3d e1 e0 78 7b de 00 f0     x{......=..x{...
    1fd8:	f7 87 bc 3d e1 e0 78 7b de 00 f0 f7 87 bc 3d e1     ...=..x{......=.
    1fe8:	e0 78 7b de 00 ff f7 ff bf fd e1 e0 7f fb df c0     .x{.............
    1ff8:	ff f7 ff bf fd e1 e0 7f fb df c0 7c f3 f3 9f 3d     ...........|...=
    2008:	e1 e0 3e 7b cf c0 00 00 00 00 00 00 00 00 00 00     ..>{............
    2018:	00 ff ff ff ff ff ff ff ff ff ff c0 ff ff ff ff     ................
    2028:	fd 68 db 11 1a 31 c0 ff ff ff ff fd 2b 5a fb 6a     .h...1......+Z.j
    2038:	ef c0 ff ff ff ff fd 4b 5b 3b 1a 33 c0 ff ff ff     .......K[;.3....
    2048:	ff fd 6b 5b db 6a fd c0                             ..k[.j..

00002050 <digital_pin_to_timer_PGM>:
    2050:	00 00 00 02 03 00 0a 0b 00 00 00 00 05 04 09 08     ................
	...

00002070 <digital_pin_to_bit_mask_PGM>:
    2070:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 40 80     ..... @...... @.
    2080:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 40 80     ..... @...... @.

00002090 <digital_pin_to_port_PGM>:
    2090:	02 02 02 02 02 02 02 02 04 04 04 04 04 04 04 04     ................
    20a0:	03 03 03 03 03 03 03 03 01 01 01 01 01 01 01 01     ................

000020b0 <port_to_input_PGM>:
    20b0:	00 00 20 00 23 00 26 00 29 00                       .. .#.&.).

000020ba <port_to_output_PGM>:
    20ba:	00 00 22 00 25 00 28 00 2b 00                       ..".%.(.+.

000020c4 <port_to_mode_PGM>:
    20c4:	00 00 21 00 24 00 27 00 2a 00                       ..!.$.'.*.

000020ce <__ctors_start>:
__ctors_start():
    20ce:	55 1c       	adc	r5, r5
    20d0:	e2 54       	subi	r30, 0x42	; 66

000020d2 <__ctors_end>:
__dtors_start():
    20d2:	ce 1c       	adc	r12, r14

000020d4 <__dtors_end>:
__dtors_end():
    20d4:	11 24       	eor	r1, r1
    20d6:	1f be       	out	0x3f, r1	; 63
    20d8:	cf ef       	ldi	r28, 0xFF	; 255
    20da:	d0 e4       	ldi	r29, 0x40	; 64
    20dc:	de bf       	out	0x3e, r29	; 62
    20de:	cd bf       	out	0x3d, r28	; 61

000020e0 <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2373
    20e0:	13 e0       	ldi	r17, 0x03	; 3
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2374
    20e2:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2375
    20e4:	b1 e0       	ldi	r27, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2376
    20e6:	e2 e7       	ldi	r30, 0x72	; 114
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2377
    20e8:	fe ee       	ldi	r31, 0xEE	; 238
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2378
    20ea:	00 e0       	ldi	r16, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2379
    20ec:	0b bf       	out	0x3b, r16	; 59
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2380
    20ee:	02 c0       	rjmp	.+4      	; 0x20f4 <__do_copy_data+0x14>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2382
    20f0:	07 90       	elpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2383
    20f2:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2385
    20f4:	a6 30       	cpi	r26, 0x06	; 6
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2386
    20f6:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2387
    20f8:	d9 f7       	brne	.-10     	; 0x20f0 <__do_copy_data+0x10>

000020fa <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
    20fa:	2a e0       	ldi	r18, 0x0A	; 10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
    20fc:	a6 e0       	ldi	r26, 0x06	; 6
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
    20fe:	b3 e0       	ldi	r27, 0x03	; 3
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
    2100:	01 c0       	rjmp	.+2      	; 0x2104 <.do_clear_bss_start>

00002102 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
    2102:	1d 92       	st	X+, r1

00002104 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
    2104:	ab 3d       	cpi	r26, 0xDB	; 219
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
    2106:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
    2108:	e1 f7       	brne	.-8      	; 0x2102 <.do_clear_bss_loop>

0000210a <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
    210a:	10 e1       	ldi	r17, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
    210c:	c9 e6       	ldi	r28, 0x69	; 105
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
    210e:	d0 e1       	ldi	r29, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
    2110:	04 c0       	rjmp	.+8      	; 0x211a <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
    2112:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
    2114:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
    2116:	0e 94 25 75 	call	0xea4a	; 0xea4a <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
    211a:	c7 36       	cpi	r28, 0x67	; 103
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
    211c:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
    211e:	c9 f7       	brne	.-14     	; 0x2112 <__do_global_ctors+0x8>
    2120:	0e 94 47 70 	call	0xe08e	; 0xe08e <main>
    2124:	0c 94 2c 77 	jmp	0xee58	; 0xee58 <__do_global_dtors>

00002128 <__bad_interrupt>:
__vector_22():
    2128:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000212c <AButtonISR()>:
_Z10AButtonISRv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:9
  for(int x = 0; x <= SCREEN_WIDTH; x++)
  {
    display.drawPixel(x, y, invBit);
    invBit = !invBit;
  }
}
    212c:	0f 93       	push	r16
    212e:	1f 93       	push	r17
    2130:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    2134:	00 91 86 03 	lds	r16, 0x0386	; 0x800386 <AButtonISR()::last_interrupt_time>
    2138:	10 91 87 03 	lds	r17, 0x0387	; 0x800387 <AButtonISR()::last_interrupt_time+0x1>
    213c:	20 91 88 03 	lds	r18, 0x0388	; 0x800388 <AButtonISR()::last_interrupt_time+0x2>
    2140:	30 91 89 03 	lds	r19, 0x0389	; 0x800389 <AButtonISR()::last_interrupt_time+0x3>
    2144:	60 1b       	sub	r22, r16
    2146:	71 0b       	sbc	r23, r17
    2148:	82 0b       	sbc	r24, r18
    214a:	93 0b       	sbc	r25, r19
    214c:	65 3f       	cpi	r22, 0xF5	; 245
    214e:	71 40       	sbci	r23, 0x01	; 1
    2150:	81 05       	cpc	r24, r1
    2152:	91 05       	cpc	r25, r1
    2154:	60 f0       	brcs	.+24     	; 0x216e <AButtonISR()+0x42>
    2156:	80 91 48 09 	lds	r24, 0x0948	; 0x800948 <menu+0x2>
    215a:	91 e0       	ldi	r25, 0x01	; 1
    215c:	89 27       	eor	r24, r25
    215e:	80 93 48 09 	sts	0x0948, r24	; 0x800948 <menu+0x2>
    2162:	90 93 4d 09 	sts	0x094D, r25	; 0x80094d <menu+0x7>
    2166:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <altitude_graph+0x3>
    216a:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <altitude_graph+0x2>
    216e:	81 e0       	ldi	r24, 0x01	; 1
    2170:	99 e0       	ldi	r25, 0x09	; 9
    2172:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    2176:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    217a:	60 93 86 03 	sts	0x0386, r22	; 0x800386 <AButtonISR()::last_interrupt_time>
    217e:	70 93 87 03 	sts	0x0387, r23	; 0x800387 <AButtonISR()::last_interrupt_time+0x1>
    2182:	80 93 88 03 	sts	0x0388, r24	; 0x800388 <AButtonISR()::last_interrupt_time+0x2>
    2186:	90 93 89 03 	sts	0x0389, r25	; 0x800389 <AButtonISR()::last_interrupt_time+0x3>
    218a:	1f 91       	pop	r17
    218c:	0f 91       	pop	r16
    218e:	08 95       	ret

00002190 <EEPROMClass::read(int) [clone .isra.0]>:
_ZNK5EERefdeEv():
    2190:	0c 94 16 77 	jmp	0xee2c	; 0xee2c <eeprom_read_byte>

00002194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>:
_ZN5EERefaSEh():
    2194:	0c 94 1e 77 	jmp	0xee3c	; 0xee3c <eeprom_write_byte>

00002198 <BButtonISR()>:
_Z10BButtonISRv():
    2198:	cf 92       	push	r12
    219a:	df 92       	push	r13
    219c:	ef 92       	push	r14
    219e:	ff 92       	push	r15
    21a0:	0f 93       	push	r16
    21a2:	1f 93       	push	r17
    21a4:	81 e0       	ldi	r24, 0x01	; 1
    21a6:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    21aa:	89 2b       	or	r24, r25
    21ac:	51 f5       	brne	.+84     	; 0x2202 <BButtonISR()+0x6a>
    21ae:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    21b2:	00 91 82 03 	lds	r16, 0x0382	; 0x800382 <BButtonISR()::last_interrupt_time>
    21b6:	10 91 83 03 	lds	r17, 0x0383	; 0x800383 <BButtonISR()::last_interrupt_time+0x1>
    21ba:	20 91 84 03 	lds	r18, 0x0384	; 0x800384 <BButtonISR()::last_interrupt_time+0x2>
    21be:	30 91 85 03 	lds	r19, 0x0385	; 0x800385 <BButtonISR()::last_interrupt_time+0x3>
    21c2:	60 1b       	sub	r22, r16
    21c4:	71 0b       	sbc	r23, r17
    21c6:	82 0b       	sbc	r24, r18
    21c8:	93 0b       	sbc	r25, r19
    21ca:	69 3c       	cpi	r22, 0xC9	; 201
    21cc:	71 05       	cpc	r23, r1
    21ce:	81 05       	cpc	r24, r1
    21d0:	91 05       	cpc	r25, r1
    21d2:	60 f0       	brcs	.+24     	; 0x21ec <BButtonISR()+0x54>
    21d4:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <menu+0x3>
    21d8:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <menu+0x4>
    21dc:	80 97       	sbiw	r24, 0x20	; 32
    21de:	90 93 4a 09 	sts	0x094A, r25	; 0x80094a <menu+0x4>
    21e2:	80 93 49 09 	sts	0x0949, r24	; 0x800949 <menu+0x3>
    21e6:	81 e0       	ldi	r24, 0x01	; 1
    21e8:	80 93 4d 09 	sts	0x094D, r24	; 0x80094d <menu+0x7>
    21ec:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    21f0:	60 93 82 03 	sts	0x0382, r22	; 0x800382 <BButtonISR()::last_interrupt_time>
    21f4:	70 93 83 03 	sts	0x0383, r23	; 0x800383 <BButtonISR()::last_interrupt_time+0x1>
    21f8:	80 93 84 03 	sts	0x0384, r24	; 0x800384 <BButtonISR()::last_interrupt_time+0x2>
    21fc:	90 93 85 03 	sts	0x0385, r25	; 0x800385 <BButtonISR()::last_interrupt_time+0x3>
    2200:	d1 cf       	rjmp	.-94     	; 0x21a4 <BButtonISR()+0xc>
    2202:	40 91 4b 09 	lds	r20, 0x094B	; 0x80094b <menu+0x5>
    2206:	50 91 4c 09 	lds	r21, 0x094C	; 0x80094c <menu+0x6>
    220a:	60 91 49 09 	lds	r22, 0x0949	; 0x800949 <menu+0x3>
    220e:	70 91 4a 09 	lds	r23, 0x094A	; 0x80094a <menu+0x4>
    2212:	60 5e       	subi	r22, 0xE0	; 224
    2214:	7f 4f       	sbci	r23, 0xFF	; 255
    2216:	d1 2c       	mov	r13, r1
    2218:	c1 2c       	mov	r12, r1
    221a:	83 e0       	ldi	r24, 0x03	; 3
    221c:	e8 2e       	mov	r14, r24
    221e:	f1 2c       	mov	r15, r1
    2220:	00 e2       	ldi	r16, 0x20	; 32
    2222:	10 e0       	ldi	r17, 0x00	; 0
    2224:	20 e2       	ldi	r18, 0x20	; 32
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	81 e0       	ldi	r24, 0x01	; 1
    222a:	99 e0       	ldi	r25, 0x09	; 9
    222c:	0e 94 c6 47 	call	0x8f8c	; 0x8f8c <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)>
    2230:	1f 91       	pop	r17
    2232:	0f 91       	pop	r16
    2234:	ff 90       	pop	r15
    2236:	ef 90       	pop	r14
    2238:	df 90       	pop	r13
    223a:	cf 90       	pop	r12
    223c:	08 95       	ret

0000223e <CButton()>:
_Z7CButtonv():
    223e:	cf 92       	push	r12
    2240:	df 92       	push	r13
    2242:	ef 92       	push	r14
    2244:	ff 92       	push	r15
    2246:	0f 93       	push	r16
    2248:	1f 93       	push	r17
    224a:	cf 93       	push	r28
    224c:	c1 e0       	ldi	r28, 0x01	; 1
    224e:	80 e0       	ldi	r24, 0x00	; 0
    2250:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    2254:	89 2b       	or	r24, r25
    2256:	09 f0       	breq	.+2      	; 0x225a <CButton()+0x1c>
    2258:	40 c0       	rjmp	.+128    	; 0x22da <CButton()+0x9c>
    225a:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    225e:	00 91 7e 03 	lds	r16, 0x037E	; 0x80037e <CButton()::last_interrupt_time>
    2262:	10 91 7f 03 	lds	r17, 0x037F	; 0x80037f <CButton()::last_interrupt_time+0x1>
    2266:	20 91 80 03 	lds	r18, 0x0380	; 0x800380 <CButton()::last_interrupt_time+0x2>
    226a:	30 91 81 03 	lds	r19, 0x0381	; 0x800381 <CButton()::last_interrupt_time+0x3>
    226e:	60 1b       	sub	r22, r16
    2270:	71 0b       	sbc	r23, r17
    2272:	82 0b       	sbc	r24, r18
    2274:	93 0b       	sbc	r25, r19
    2276:	69 3c       	cpi	r22, 0xC9	; 201
    2278:	71 05       	cpc	r23, r1
    227a:	81 05       	cpc	r24, r1
    227c:	91 05       	cpc	r25, r1
    227e:	58 f0       	brcs	.+22     	; 0x2296 <CButton()+0x58>
    2280:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <menu+0x3>
    2284:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <menu+0x4>
    2288:	80 96       	adiw	r24, 0x20	; 32
    228a:	90 93 4a 09 	sts	0x094A, r25	; 0x80094a <menu+0x4>
    228e:	80 93 49 09 	sts	0x0949, r24	; 0x800949 <menu+0x3>
    2292:	c0 93 4d 09 	sts	0x094D, r28	; 0x80094d <menu+0x7>
    2296:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    229a:	60 93 7e 03 	sts	0x037E, r22	; 0x80037e <CButton()::last_interrupt_time>
    229e:	70 93 7f 03 	sts	0x037F, r23	; 0x80037f <CButton()::last_interrupt_time+0x1>
    22a2:	80 93 80 03 	sts	0x0380, r24	; 0x800380 <CButton()::last_interrupt_time+0x2>
    22a6:	90 93 81 03 	sts	0x0381, r25	; 0x800381 <CButton()::last_interrupt_time+0x3>
    22aa:	40 91 4b 09 	lds	r20, 0x094B	; 0x80094b <menu+0x5>
    22ae:	50 91 4c 09 	lds	r21, 0x094C	; 0x80094c <menu+0x6>
    22b2:	60 91 49 09 	lds	r22, 0x0949	; 0x800949 <menu+0x3>
    22b6:	70 91 4a 09 	lds	r23, 0x094A	; 0x80094a <menu+0x4>
    22ba:	60 52       	subi	r22, 0x20	; 32
    22bc:	71 09       	sbc	r23, r1
    22be:	d1 2c       	mov	r13, r1
    22c0:	c1 2c       	mov	r12, r1
    22c2:	83 e0       	ldi	r24, 0x03	; 3
    22c4:	e8 2e       	mov	r14, r24
    22c6:	f1 2c       	mov	r15, r1
    22c8:	00 e2       	ldi	r16, 0x20	; 32
    22ca:	10 e0       	ldi	r17, 0x00	; 0
    22cc:	20 e2       	ldi	r18, 0x20	; 32
    22ce:	30 e0       	ldi	r19, 0x00	; 0
    22d0:	81 e0       	ldi	r24, 0x01	; 1
    22d2:	99 e0       	ldi	r25, 0x09	; 9
    22d4:	0e 94 c6 47 	call	0x8f8c	; 0x8f8c <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)>
    22d8:	ba cf       	rjmp	.-140    	; 0x224e <CButton()+0x10>
    22da:	cf 91       	pop	r28
    22dc:	1f 91       	pop	r17
    22de:	0f 91       	pop	r16
    22e0:	ff 90       	pop	r15
    22e2:	ef 90       	pop	r14
    22e4:	df 90       	pop	r13
    22e6:	cf 90       	pop	r12
    22e8:	08 95       	ret

000022ea <writeToEEPROM(int, double)>:
_Z13writeToEEPROMid():
    22ea:	4f 92       	push	r4
    22ec:	5f 92       	push	r5
    22ee:	6f 92       	push	r6
    22f0:	7f 92       	push	r7
    22f2:	8f 92       	push	r8
    22f4:	9f 92       	push	r9
    22f6:	af 92       	push	r10
    22f8:	bf 92       	push	r11
    22fa:	cf 92       	push	r12
    22fc:	df 92       	push	r13
    22fe:	ef 92       	push	r14
    2300:	ff 92       	push	r15
    2302:	0f 93       	push	r16
    2304:	1f 93       	push	r17
    2306:	cf 93       	push	r28
    2308:	df 93       	push	r29
    230a:	ec 01       	movw	r28, r24
    230c:	6a 01       	movw	r12, r20
    230e:	7b 01       	movw	r14, r22
    2310:	20 e0       	ldi	r18, 0x00	; 0
    2312:	30 e0       	ldi	r19, 0x00	; 0
    2314:	a9 01       	movw	r20, r18
    2316:	cb 01       	movw	r24, r22
    2318:	b6 01       	movw	r22, r12
    231a:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    231e:	61 e0       	ldi	r22, 0x01	; 1
    2320:	87 ff       	sbrs	r24, 7
    2322:	60 e0       	ldi	r22, 0x00	; 0
    2324:	ce 01       	movw	r24, r28
    2326:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    232a:	6a e0       	ldi	r22, 0x0A	; 10
    232c:	70 e0       	ldi	r23, 0x00	; 0
    232e:	80 e0       	ldi	r24, 0x00	; 0
    2330:	90 e0       	ldi	r25, 0x00	; 0
    2332:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    2336:	c7 01       	movw	r24, r14
    2338:	b6 01       	movw	r22, r12
    233a:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    233e:	8b 01       	movw	r16, r22
    2340:	77 ff       	sbrs	r23, 7
    2342:	04 c0       	rjmp	.+8      	; 0x234c <writeToEEPROM(int, double)+0x62>
    2344:	00 27       	eor	r16, r16
    2346:	11 27       	eor	r17, r17
    2348:	06 1b       	sub	r16, r22
    234a:	17 0b       	sbc	r17, r23
    234c:	b8 01       	movw	r22, r16
    234e:	11 0f       	add	r17, r17
    2350:	88 0b       	sbc	r24, r24
    2352:	99 0b       	sbc	r25, r25
    2354:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2358:	9b 01       	movw	r18, r22
    235a:	ac 01       	movw	r20, r24
    235c:	c7 01       	movw	r24, r14
    235e:	b6 01       	movw	r22, r12
    2360:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    2364:	6b 01       	movw	r12, r22
    2366:	7c 01       	movw	r14, r24
    2368:	20 e0       	ldi	r18, 0x00	; 0
    236a:	30 e0       	ldi	r19, 0x00	; 0
    236c:	48 ec       	ldi	r20, 0xC8	; 200
    236e:	52 e4       	ldi	r21, 0x42	; 66
    2370:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2374:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    2378:	2b 01       	movw	r4, r22
    237a:	07 2e       	mov	r0, r23
    237c:	00 0c       	add	r0, r0
    237e:	88 0b       	sbc	r24, r24
    2380:	99 0b       	sbc	r25, r25
    2382:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2386:	2a e0       	ldi	r18, 0x0A	; 10
    2388:	37 ed       	ldi	r19, 0xD7	; 215
    238a:	43 e2       	ldi	r20, 0x23	; 35
    238c:	5c e3       	ldi	r21, 0x3C	; 60
    238e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2392:	9b 01       	movw	r18, r22
    2394:	ac 01       	movw	r20, r24
    2396:	c7 01       	movw	r24, r14
    2398:	b6 01       	movw	r22, r12
    239a:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    239e:	4b 01       	movw	r8, r22
    23a0:	5c 01       	movw	r10, r24
    23a2:	20 e0       	ldi	r18, 0x00	; 0
    23a4:	30 e4       	ldi	r19, 0x40	; 64
    23a6:	4c e1       	ldi	r20, 0x1C	; 28
    23a8:	56 e4       	ldi	r21, 0x46	; 70
    23aa:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    23ae:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    23b2:	6b 01       	movw	r12, r22
    23b4:	60 2f       	mov	r22, r16
    23b6:	ce 01       	movw	r24, r28
    23b8:	01 96       	adiw	r24, 0x01	; 1
    23ba:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    23be:	6a e0       	ldi	r22, 0x0A	; 10
    23c0:	70 e0       	ldi	r23, 0x00	; 0
    23c2:	80 e0       	ldi	r24, 0x00	; 0
    23c4:	90 e0       	ldi	r25, 0x00	; 0
    23c6:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    23ca:	64 2d       	mov	r22, r4
    23cc:	ce 01       	movw	r24, r28
    23ce:	02 96       	adiw	r24, 0x02	; 2
    23d0:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    23d4:	6a e0       	ldi	r22, 0x0A	; 10
    23d6:	70 e0       	ldi	r23, 0x00	; 0
    23d8:	80 e0       	ldi	r24, 0x00	; 0
    23da:	90 e0       	ldi	r25, 0x00	; 0
    23dc:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    23e0:	6c 2d       	mov	r22, r12
    23e2:	ce 01       	movw	r24, r28
    23e4:	03 96       	adiw	r24, 0x03	; 3
    23e6:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    23ea:	6a e0       	ldi	r22, 0x0A	; 10
    23ec:	70 e0       	ldi	r23, 0x00	; 0
    23ee:	80 e0       	ldi	r24, 0x00	; 0
    23f0:	90 e0       	ldi	r25, 0x00	; 0
    23f2:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    23f6:	b6 01       	movw	r22, r12
    23f8:	dd 0c       	add	r13, r13
    23fa:	88 0b       	sbc	r24, r24
    23fc:	99 0b       	sbc	r25, r25
    23fe:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2402:	27 e1       	ldi	r18, 0x17	; 23
    2404:	37 eb       	ldi	r19, 0xB7	; 183
    2406:	41 ed       	ldi	r20, 0xD1	; 209
    2408:	58 e3       	ldi	r21, 0x38	; 56
    240a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    240e:	9b 01       	movw	r18, r22
    2410:	ac 01       	movw	r20, r24
    2412:	c5 01       	movw	r24, r10
    2414:	b4 01       	movw	r22, r8
    2416:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    241a:	20 e0       	ldi	r18, 0x00	; 0
    241c:	34 e2       	ldi	r19, 0x24	; 36
    241e:	44 e7       	ldi	r20, 0x74	; 116
    2420:	59 e4       	ldi	r21, 0x49	; 73
    2422:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2426:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    242a:	ce 01       	movw	r24, r28
    242c:	04 96       	adiw	r24, 0x04	; 4
    242e:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    2432:	6a e0       	ldi	r22, 0x0A	; 10
    2434:	70 e0       	ldi	r23, 0x00	; 0
    2436:	80 e0       	ldi	r24, 0x00	; 0
    2438:	90 e0       	ldi	r25, 0x00	; 0
    243a:	df 91       	pop	r29
    243c:	cf 91       	pop	r28
    243e:	1f 91       	pop	r17
    2440:	0f 91       	pop	r16
    2442:	ff 90       	pop	r15
    2444:	ef 90       	pop	r14
    2446:	df 90       	pop	r13
    2448:	cf 90       	pop	r12
    244a:	bf 90       	pop	r11
    244c:	af 90       	pop	r10
    244e:	9f 90       	pop	r9
    2450:	8f 90       	pop	r8
    2452:	7f 90       	pop	r7
    2454:	6f 90       	pop	r6
    2456:	5f 90       	pop	r5
    2458:	4f 90       	pop	r4
    245a:	0c 94 c3 6c 	jmp	0xd986	; 0xd986 <delay>

0000245e <decodeFromEEPROM(int)>:
_Z16decodeFromEEPROMi():
    245e:	4f 92       	push	r4
    2460:	5f 92       	push	r5
    2462:	6f 92       	push	r6
    2464:	7f 92       	push	r7
    2466:	8f 92       	push	r8
    2468:	9f 92       	push	r9
    246a:	af 92       	push	r10
    246c:	bf 92       	push	r11
    246e:	cf 92       	push	r12
    2470:	df 92       	push	r13
    2472:	ef 92       	push	r14
    2474:	ff 92       	push	r15
    2476:	cf 93       	push	r28
    2478:	df 93       	push	r29
    247a:	00 d0       	rcall	.+0      	; 0x247c <decodeFromEEPROM(int)+0x1e>
    247c:	00 d0       	rcall	.+0      	; 0x247e <decodeFromEEPROM(int)+0x20>
    247e:	cd b7       	in	r28, 0x3d	; 61
    2480:	de b7       	in	r29, 0x3e	; 62
    2482:	7c 01       	movw	r14, r24
    2484:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    2488:	89 83       	std	Y+1, r24	; 0x01
    248a:	6a e0       	ldi	r22, 0x0A	; 10
    248c:	70 e0       	ldi	r23, 0x00	; 0
    248e:	80 e0       	ldi	r24, 0x00	; 0
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    2496:	c7 01       	movw	r24, r14
    2498:	01 96       	adiw	r24, 0x01	; 1
    249a:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    249e:	48 2e       	mov	r4, r24
    24a0:	51 2c       	mov	r5, r1
    24a2:	6a e0       	ldi	r22, 0x0A	; 10
    24a4:	70 e0       	ldi	r23, 0x00	; 0
    24a6:	80 e0       	ldi	r24, 0x00	; 0
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    24ae:	c7 01       	movw	r24, r14
    24b0:	02 96       	adiw	r24, 0x02	; 2
    24b2:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    24b6:	a8 2e       	mov	r10, r24
    24b8:	b1 2c       	mov	r11, r1
    24ba:	6a e0       	ldi	r22, 0x0A	; 10
    24bc:	70 e0       	ldi	r23, 0x00	; 0
    24be:	80 e0       	ldi	r24, 0x00	; 0
    24c0:	90 e0       	ldi	r25, 0x00	; 0
    24c2:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    24c6:	c7 01       	movw	r24, r14
    24c8:	03 96       	adiw	r24, 0x03	; 3
    24ca:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    24ce:	88 2e       	mov	r8, r24
    24d0:	91 2c       	mov	r9, r1
    24d2:	6a e0       	ldi	r22, 0x0A	; 10
    24d4:	70 e0       	ldi	r23, 0x00	; 0
    24d6:	80 e0       	ldi	r24, 0x00	; 0
    24d8:	90 e0       	ldi	r25, 0x00	; 0
    24da:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    24de:	c7 01       	movw	r24, r14
    24e0:	04 96       	adiw	r24, 0x04	; 4
    24e2:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    24e6:	c8 2e       	mov	r12, r24
    24e8:	d1 2c       	mov	r13, r1
    24ea:	6a e0       	ldi	r22, 0x0A	; 10
    24ec:	70 e0       	ldi	r23, 0x00	; 0
    24ee:	80 e0       	ldi	r24, 0x00	; 0
    24f0:	90 e0       	ldi	r25, 0x00	; 0
    24f2:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    24f6:	b5 01       	movw	r22, r10
    24f8:	bb 0c       	add	r11, r11
    24fa:	88 0b       	sbc	r24, r24
    24fc:	99 0b       	sbc	r25, r25
    24fe:	05 2c       	mov	r0, r5
    2500:	00 0c       	add	r0, r0
    2502:	66 08       	sbc	r6, r6
    2504:	77 08       	sbc	r7, r7
    2506:	09 2c       	mov	r0, r9
    2508:	00 0c       	add	r0, r0
    250a:	aa 08       	sbc	r10, r10
    250c:	bb 08       	sbc	r11, r11
    250e:	0d 2c       	mov	r0, r13
    2510:	00 0c       	add	r0, r0
    2512:	ee 08       	sbc	r14, r14
    2514:	ff 08       	sbc	r15, r15
    2516:	29 81       	ldd	r18, Y+1	; 0x01
    2518:	21 30       	cpi	r18, 0x01	; 1
    251a:	09 f0       	breq	.+2      	; 0x251e <decodeFromEEPROM(int)+0xc0>
    251c:	50 c0       	rjmp	.+160    	; 0x25be <decodeFromEEPROM(int)+0x160>
    251e:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2522:	2a e0       	ldi	r18, 0x0A	; 10
    2524:	37 ed       	ldi	r19, 0xD7	; 215
    2526:	43 e2       	ldi	r20, 0x23	; 35
    2528:	5c e3       	ldi	r21, 0x3C	; 60
    252a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    252e:	69 83       	std	Y+1, r22	; 0x01
    2530:	7a 83       	std	Y+2, r23	; 0x02
    2532:	8b 83       	std	Y+3, r24	; 0x03
    2534:	9c 83       	std	Y+4, r25	; 0x04
    2536:	c3 01       	movw	r24, r6
    2538:	b2 01       	movw	r22, r4
    253a:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    253e:	9b 01       	movw	r18, r22
    2540:	ac 01       	movw	r20, r24
    2542:	69 81       	ldd	r22, Y+1	; 0x01
    2544:	7a 81       	ldd	r23, Y+2	; 0x02
    2546:	8b 81       	ldd	r24, Y+3	; 0x03
    2548:	9c 81       	ldd	r25, Y+4	; 0x04
    254a:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    254e:	2b 01       	movw	r4, r22
    2550:	3c 01       	movw	r6, r24
    2552:	c5 01       	movw	r24, r10
    2554:	b4 01       	movw	r22, r8
    2556:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    255a:	27 e1       	ldi	r18, 0x17	; 23
    255c:	37 eb       	ldi	r19, 0xB7	; 183
    255e:	41 ed       	ldi	r20, 0xD1	; 209
    2560:	58 e3       	ldi	r21, 0x38	; 56
    2562:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2566:	9b 01       	movw	r18, r22
    2568:	ac 01       	movw	r20, r24
    256a:	c3 01       	movw	r24, r6
    256c:	b2 01       	movw	r22, r4
    256e:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    2572:	4b 01       	movw	r8, r22
    2574:	5c 01       	movw	r10, r24
    2576:	c7 01       	movw	r24, r14
    2578:	b6 01       	movw	r22, r12
    257a:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    257e:	2d eb       	ldi	r18, 0xBD	; 189
    2580:	37 e3       	ldi	r19, 0x37	; 55
    2582:	46 e8       	ldi	r20, 0x86	; 134
    2584:	55 e3       	ldi	r21, 0x35	; 53
    2586:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    258a:	9b 01       	movw	r18, r22
    258c:	ac 01       	movw	r20, r24
    258e:	c5 01       	movw	r24, r10
    2590:	b4 01       	movw	r22, r8
    2592:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    2596:	90 58       	subi	r25, 0x80	; 128
    2598:	0f 90       	pop	r0
    259a:	0f 90       	pop	r0
    259c:	0f 90       	pop	r0
    259e:	0f 90       	pop	r0
    25a0:	df 91       	pop	r29
    25a2:	cf 91       	pop	r28
    25a4:	ff 90       	pop	r15
    25a6:	ef 90       	pop	r14
    25a8:	df 90       	pop	r13
    25aa:	cf 90       	pop	r12
    25ac:	bf 90       	pop	r11
    25ae:	af 90       	pop	r10
    25b0:	9f 90       	pop	r9
    25b2:	8f 90       	pop	r8
    25b4:	7f 90       	pop	r7
    25b6:	6f 90       	pop	r6
    25b8:	5f 90       	pop	r5
    25ba:	4f 90       	pop	r4
    25bc:	08 95       	ret
    25be:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    25c2:	2a e0       	ldi	r18, 0x0A	; 10
    25c4:	37 ed       	ldi	r19, 0xD7	; 215
    25c6:	43 e2       	ldi	r20, 0x23	; 35
    25c8:	5c e3       	ldi	r21, 0x3C	; 60
    25ca:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    25ce:	69 83       	std	Y+1, r22	; 0x01
    25d0:	7a 83       	std	Y+2, r23	; 0x02
    25d2:	8b 83       	std	Y+3, r24	; 0x03
    25d4:	9c 83       	std	Y+4, r25	; 0x04
    25d6:	c3 01       	movw	r24, r6
    25d8:	b2 01       	movw	r22, r4
    25da:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    25de:	9b 01       	movw	r18, r22
    25e0:	ac 01       	movw	r20, r24
    25e2:	69 81       	ldd	r22, Y+1	; 0x01
    25e4:	7a 81       	ldd	r23, Y+2	; 0x02
    25e6:	8b 81       	ldd	r24, Y+3	; 0x03
    25e8:	9c 81       	ldd	r25, Y+4	; 0x04
    25ea:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    25ee:	2b 01       	movw	r4, r22
    25f0:	3c 01       	movw	r6, r24
    25f2:	c5 01       	movw	r24, r10
    25f4:	b4 01       	movw	r22, r8
    25f6:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    25fa:	27 e1       	ldi	r18, 0x17	; 23
    25fc:	37 eb       	ldi	r19, 0xB7	; 183
    25fe:	41 ed       	ldi	r20, 0xD1	; 209
    2600:	58 e3       	ldi	r21, 0x38	; 56
    2602:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2606:	9b 01       	movw	r18, r22
    2608:	ac 01       	movw	r20, r24
    260a:	c3 01       	movw	r24, r6
    260c:	b2 01       	movw	r22, r4
    260e:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    2612:	4b 01       	movw	r8, r22
    2614:	5c 01       	movw	r10, r24
    2616:	c7 01       	movw	r24, r14
    2618:	b6 01       	movw	r22, r12
    261a:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    261e:	2d eb       	ldi	r18, 0xBD	; 189
    2620:	37 e3       	ldi	r19, 0x37	; 55
    2622:	46 e8       	ldi	r20, 0x86	; 134
    2624:	55 e3       	ldi	r21, 0x35	; 53
    2626:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    262a:	9b 01       	movw	r18, r22
    262c:	ac 01       	movw	r20, r24
    262e:	c5 01       	movw	r24, r10
    2630:	b4 01       	movw	r22, r8
    2632:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    2636:	b0 cf       	rjmp	.-160    	; 0x2598 <decodeFromEEPROM(int)+0x13a>

00002638 <getTimeZone(double)>:
_Z11getTimeZoned():
    2638:	cf 92       	push	r12
    263a:	df 92       	push	r13
    263c:	ef 92       	push	r14
    263e:	ff 92       	push	r15
    2640:	6b 01       	movw	r12, r22
    2642:	7c 01       	movw	r14, r24
    2644:	20 e0       	ldi	r18, 0x00	; 0
    2646:	30 e8       	ldi	r19, 0x80	; 128
    2648:	4c e2       	ldi	r20, 0x2C	; 44
    264a:	53 ec       	ldi	r21, 0xC3	; 195
    264c:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2650:	18 16       	cp	r1, r24
    2652:	54 f4       	brge	.+20     	; 0x2668 <getTimeZone(double)+0x30>
    2654:	20 e0       	ldi	r18, 0x00	; 0
    2656:	30 e8       	ldi	r19, 0x80	; 128
    2658:	4d e1       	ldi	r20, 0x1D	; 29
    265a:	53 ec       	ldi	r21, 0xC3	; 195
    265c:	c7 01       	movw	r24, r14
    265e:	b6 01       	movw	r22, r12
    2660:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    2664:	87 fd       	sbrc	r24, 7
    2666:	d4 c1       	rjmp	.+936    	; 0x2a10 <getTimeZone(double)+0x3d8>
    2668:	20 e0       	ldi	r18, 0x00	; 0
    266a:	30 e8       	ldi	r19, 0x80	; 128
    266c:	4d e1       	ldi	r20, 0x1D	; 29
    266e:	53 ec       	ldi	r21, 0xC3	; 195
    2670:	c7 01       	movw	r24, r14
    2672:	b6 01       	movw	r22, r12
    2674:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2678:	18 16       	cp	r1, r24
    267a:	54 f4       	brge	.+20     	; 0x2690 <getTimeZone(double)+0x58>
    267c:	20 e0       	ldi	r18, 0x00	; 0
    267e:	30 e8       	ldi	r19, 0x80	; 128
    2680:	4e e0       	ldi	r20, 0x0E	; 14
    2682:	53 ec       	ldi	r21, 0xC3	; 195
    2684:	c7 01       	movw	r24, r14
    2686:	b6 01       	movw	r22, r12
    2688:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    268c:	87 fd       	sbrc	r24, 7
    268e:	c3 c1       	rjmp	.+902    	; 0x2a16 <getTimeZone(double)+0x3de>
    2690:	20 e0       	ldi	r18, 0x00	; 0
    2692:	30 e8       	ldi	r19, 0x80	; 128
    2694:	4e e0       	ldi	r20, 0x0E	; 14
    2696:	53 ec       	ldi	r21, 0xC3	; 195
    2698:	c7 01       	movw	r24, r14
    269a:	b6 01       	movw	r22, r12
    269c:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    26a0:	18 16       	cp	r1, r24
    26a2:	54 f4       	brge	.+20     	; 0x26b8 <getTimeZone(double)+0x80>
    26a4:	20 e0       	ldi	r18, 0x00	; 0
    26a6:	30 e0       	ldi	r19, 0x00	; 0
    26a8:	4f ef       	ldi	r20, 0xFF	; 255
    26aa:	52 ec       	ldi	r21, 0xC2	; 194
    26ac:	c7 01       	movw	r24, r14
    26ae:	b6 01       	movw	r22, r12
    26b0:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    26b4:	87 fd       	sbrc	r24, 7
    26b6:	b2 c1       	rjmp	.+868    	; 0x2a1c <getTimeZone(double)+0x3e4>
    26b8:	20 e0       	ldi	r18, 0x00	; 0
    26ba:	30 e0       	ldi	r19, 0x00	; 0
    26bc:	4f ef       	ldi	r20, 0xFF	; 255
    26be:	52 ec       	ldi	r21, 0xC2	; 194
    26c0:	c7 01       	movw	r24, r14
    26c2:	b6 01       	movw	r22, r12
    26c4:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    26c8:	18 16       	cp	r1, r24
    26ca:	54 f4       	brge	.+20     	; 0x26e0 <getTimeZone(double)+0xa8>
    26cc:	20 e0       	ldi	r18, 0x00	; 0
    26ce:	30 e0       	ldi	r19, 0x00	; 0
    26d0:	41 ee       	ldi	r20, 0xE1	; 225
    26d2:	52 ec       	ldi	r21, 0xC2	; 194
    26d4:	c7 01       	movw	r24, r14
    26d6:	b6 01       	movw	r22, r12
    26d8:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    26dc:	87 fd       	sbrc	r24, 7
    26de:	a1 c1       	rjmp	.+834    	; 0x2a22 <getTimeZone(double)+0x3ea>
    26e0:	20 e0       	ldi	r18, 0x00	; 0
    26e2:	30 e0       	ldi	r19, 0x00	; 0
    26e4:	41 ee       	ldi	r20, 0xE1	; 225
    26e6:	52 ec       	ldi	r21, 0xC2	; 194
    26e8:	c7 01       	movw	r24, r14
    26ea:	b6 01       	movw	r22, r12
    26ec:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    26f0:	18 16       	cp	r1, r24
    26f2:	54 f4       	brge	.+20     	; 0x2708 <getTimeZone(double)+0xd0>
    26f4:	20 e0       	ldi	r18, 0x00	; 0
    26f6:	30 e0       	ldi	r19, 0x00	; 0
    26f8:	43 ec       	ldi	r20, 0xC3	; 195
    26fa:	52 ec       	ldi	r21, 0xC2	; 194
    26fc:	c7 01       	movw	r24, r14
    26fe:	b6 01       	movw	r22, r12
    2700:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    2704:	87 fd       	sbrc	r24, 7
    2706:	90 c1       	rjmp	.+800    	; 0x2a28 <getTimeZone(double)+0x3f0>
    2708:	20 e0       	ldi	r18, 0x00	; 0
    270a:	30 e0       	ldi	r19, 0x00	; 0
    270c:	43 ec       	ldi	r20, 0xC3	; 195
    270e:	52 e4       	ldi	r21, 0x42	; 66
    2710:	c7 01       	movw	r24, r14
    2712:	b6 01       	movw	r22, r12
    2714:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2718:	18 16       	cp	r1, r24
    271a:	54 f4       	brge	.+20     	; 0x2730 <getTimeZone(double)+0xf8>
    271c:	20 e0       	ldi	r18, 0x00	; 0
    271e:	30 e0       	ldi	r19, 0x00	; 0
    2720:	45 ea       	ldi	r20, 0xA5	; 165
    2722:	52 ec       	ldi	r21, 0xC2	; 194
    2724:	c7 01       	movw	r24, r14
    2726:	b6 01       	movw	r22, r12
    2728:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    272c:	87 fd       	sbrc	r24, 7
    272e:	7f c1       	rjmp	.+766    	; 0x2a2e <getTimeZone(double)+0x3f6>
    2730:	20 e0       	ldi	r18, 0x00	; 0
    2732:	30 e0       	ldi	r19, 0x00	; 0
    2734:	45 ea       	ldi	r20, 0xA5	; 165
    2736:	52 ec       	ldi	r21, 0xC2	; 194
    2738:	c7 01       	movw	r24, r14
    273a:	b6 01       	movw	r22, r12
    273c:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2740:	18 16       	cp	r1, r24
    2742:	54 f4       	brge	.+20     	; 0x2758 <getTimeZone(double)+0x120>
    2744:	20 e0       	ldi	r18, 0x00	; 0
    2746:	30 e0       	ldi	r19, 0x00	; 0
    2748:	47 e8       	ldi	r20, 0x87	; 135
    274a:	52 ec       	ldi	r21, 0xC2	; 194
    274c:	c7 01       	movw	r24, r14
    274e:	b6 01       	movw	r22, r12
    2750:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    2754:	87 fd       	sbrc	r24, 7
    2756:	6e c1       	rjmp	.+732    	; 0x2a34 <getTimeZone(double)+0x3fc>
    2758:	20 e0       	ldi	r18, 0x00	; 0
    275a:	30 e0       	ldi	r19, 0x00	; 0
    275c:	47 e8       	ldi	r20, 0x87	; 135
    275e:	52 ec       	ldi	r21, 0xC2	; 194
    2760:	c7 01       	movw	r24, r14
    2762:	b6 01       	movw	r22, r12
    2764:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2768:	18 16       	cp	r1, r24
    276a:	54 f4       	brge	.+20     	; 0x2780 <getTimeZone(double)+0x148>
    276c:	20 e0       	ldi	r18, 0x00	; 0
    276e:	30 e0       	ldi	r19, 0x00	; 0
    2770:	42 e5       	ldi	r20, 0x52	; 82
    2772:	52 ec       	ldi	r21, 0xC2	; 194
    2774:	c7 01       	movw	r24, r14
    2776:	b6 01       	movw	r22, r12
    2778:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    277c:	87 fd       	sbrc	r24, 7
    277e:	5d c1       	rjmp	.+698    	; 0x2a3a <getTimeZone(double)+0x402>
    2780:	20 e0       	ldi	r18, 0x00	; 0
    2782:	30 e0       	ldi	r19, 0x00	; 0
    2784:	42 e5       	ldi	r20, 0x52	; 82
    2786:	52 ec       	ldi	r21, 0xC2	; 194
    2788:	c7 01       	movw	r24, r14
    278a:	b6 01       	movw	r22, r12
    278c:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2790:	18 16       	cp	r1, r24
    2792:	54 f4       	brge	.+20     	; 0x27a8 <getTimeZone(double)+0x170>
    2794:	20 e0       	ldi	r18, 0x00	; 0
    2796:	30 e0       	ldi	r19, 0x00	; 0
    2798:	46 e1       	ldi	r20, 0x16	; 22
    279a:	52 ec       	ldi	r21, 0xC2	; 194
    279c:	c7 01       	movw	r24, r14
    279e:	b6 01       	movw	r22, r12
    27a0:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    27a4:	87 fd       	sbrc	r24, 7
    27a6:	4c c1       	rjmp	.+664    	; 0x2a40 <getTimeZone(double)+0x408>
    27a8:	20 e0       	ldi	r18, 0x00	; 0
    27aa:	30 e0       	ldi	r19, 0x00	; 0
    27ac:	46 e1       	ldi	r20, 0x16	; 22
    27ae:	52 ec       	ldi	r21, 0xC2	; 194
    27b0:	c7 01       	movw	r24, r14
    27b2:	b6 01       	movw	r22, r12
    27b4:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    27b8:	18 16       	cp	r1, r24
    27ba:	54 f4       	brge	.+20     	; 0x27d0 <getTimeZone(double)+0x198>
    27bc:	20 e0       	ldi	r18, 0x00	; 0
    27be:	30 e0       	ldi	r19, 0x00	; 0
    27c0:	44 eb       	ldi	r20, 0xB4	; 180
    27c2:	51 ec       	ldi	r21, 0xC1	; 193
    27c4:	c7 01       	movw	r24, r14
    27c6:	b6 01       	movw	r22, r12
    27c8:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    27cc:	87 fd       	sbrc	r24, 7
    27ce:	3b c1       	rjmp	.+630    	; 0x2a46 <getTimeZone(double)+0x40e>
    27d0:	20 e0       	ldi	r18, 0x00	; 0
    27d2:	30 e0       	ldi	r19, 0x00	; 0
    27d4:	44 eb       	ldi	r20, 0xB4	; 180
    27d6:	51 ec       	ldi	r21, 0xC1	; 193
    27d8:	c7 01       	movw	r24, r14
    27da:	b6 01       	movw	r22, r12
    27dc:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    27e0:	18 16       	cp	r1, r24
    27e2:	54 f4       	brge	.+20     	; 0x27f8 <getTimeZone(double)+0x1c0>
    27e4:	20 e0       	ldi	r18, 0x00	; 0
    27e6:	30 e0       	ldi	r19, 0x00	; 0
    27e8:	40 ef       	ldi	r20, 0xF0	; 240
    27ea:	50 ec       	ldi	r21, 0xC0	; 192
    27ec:	c7 01       	movw	r24, r14
    27ee:	b6 01       	movw	r22, r12
    27f0:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    27f4:	87 fd       	sbrc	r24, 7
    27f6:	2a c1       	rjmp	.+596    	; 0x2a4c <getTimeZone(double)+0x414>
    27f8:	20 e0       	ldi	r18, 0x00	; 0
    27fa:	30 e0       	ldi	r19, 0x00	; 0
    27fc:	40 ef       	ldi	r20, 0xF0	; 240
    27fe:	50 ec       	ldi	r21, 0xC0	; 192
    2800:	c7 01       	movw	r24, r14
    2802:	b6 01       	movw	r22, r12
    2804:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2808:	18 16       	cp	r1, r24
    280a:	54 f4       	brge	.+20     	; 0x2820 <getTimeZone(double)+0x1e8>
    280c:	20 e0       	ldi	r18, 0x00	; 0
    280e:	30 e0       	ldi	r19, 0x00	; 0
    2810:	40 ef       	ldi	r20, 0xF0	; 240
    2812:	50 e4       	ldi	r21, 0x40	; 64
    2814:	c7 01       	movw	r24, r14
    2816:	b6 01       	movw	r22, r12
    2818:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    281c:	87 fd       	sbrc	r24, 7
    281e:	3a c1       	rjmp	.+628    	; 0x2a94 <getTimeZone(double)+0x45c>
    2820:	20 e0       	ldi	r18, 0x00	; 0
    2822:	30 e0       	ldi	r19, 0x00	; 0
    2824:	40 ef       	ldi	r20, 0xF0	; 240
    2826:	50 e4       	ldi	r21, 0x40	; 64
    2828:	c7 01       	movw	r24, r14
    282a:	b6 01       	movw	r22, r12
    282c:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2830:	18 16       	cp	r1, r24
    2832:	54 f4       	brge	.+20     	; 0x2848 <getTimeZone(double)+0x210>
    2834:	20 e0       	ldi	r18, 0x00	; 0
    2836:	30 e0       	ldi	r19, 0x00	; 0
    2838:	44 eb       	ldi	r20, 0xB4	; 180
    283a:	51 e4       	ldi	r21, 0x41	; 65
    283c:	c7 01       	movw	r24, r14
    283e:	b6 01       	movw	r22, r12
    2840:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    2844:	87 fd       	sbrc	r24, 7
    2846:	05 c1       	rjmp	.+522    	; 0x2a52 <getTimeZone(double)+0x41a>
    2848:	20 e0       	ldi	r18, 0x00	; 0
    284a:	30 e0       	ldi	r19, 0x00	; 0
    284c:	44 eb       	ldi	r20, 0xB4	; 180
    284e:	51 e4       	ldi	r21, 0x41	; 65
    2850:	c7 01       	movw	r24, r14
    2852:	b6 01       	movw	r22, r12
    2854:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2858:	18 16       	cp	r1, r24
    285a:	54 f4       	brge	.+20     	; 0x2870 <getTimeZone(double)+0x238>
    285c:	20 e0       	ldi	r18, 0x00	; 0
    285e:	30 e0       	ldi	r19, 0x00	; 0
    2860:	46 e1       	ldi	r20, 0x16	; 22
    2862:	52 e4       	ldi	r21, 0x42	; 66
    2864:	c7 01       	movw	r24, r14
    2866:	b6 01       	movw	r22, r12
    2868:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    286c:	87 fd       	sbrc	r24, 7
    286e:	f4 c0       	rjmp	.+488    	; 0x2a58 <getTimeZone(double)+0x420>
    2870:	20 e0       	ldi	r18, 0x00	; 0
    2872:	30 e0       	ldi	r19, 0x00	; 0
    2874:	46 e1       	ldi	r20, 0x16	; 22
    2876:	52 e4       	ldi	r21, 0x42	; 66
    2878:	c7 01       	movw	r24, r14
    287a:	b6 01       	movw	r22, r12
    287c:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2880:	18 16       	cp	r1, r24
    2882:	54 f4       	brge	.+20     	; 0x2898 <getTimeZone(double)+0x260>
    2884:	20 e0       	ldi	r18, 0x00	; 0
    2886:	30 e0       	ldi	r19, 0x00	; 0
    2888:	42 e5       	ldi	r20, 0x52	; 82
    288a:	52 e4       	ldi	r21, 0x42	; 66
    288c:	c7 01       	movw	r24, r14
    288e:	b6 01       	movw	r22, r12
    2890:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    2894:	87 fd       	sbrc	r24, 7
    2896:	e3 c0       	rjmp	.+454    	; 0x2a5e <getTimeZone(double)+0x426>
    2898:	20 e0       	ldi	r18, 0x00	; 0
    289a:	30 e0       	ldi	r19, 0x00	; 0
    289c:	42 e5       	ldi	r20, 0x52	; 82
    289e:	52 e4       	ldi	r21, 0x42	; 66
    28a0:	c7 01       	movw	r24, r14
    28a2:	b6 01       	movw	r22, r12
    28a4:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    28a8:	18 16       	cp	r1, r24
    28aa:	54 f4       	brge	.+20     	; 0x28c0 <getTimeZone(double)+0x288>
    28ac:	20 e0       	ldi	r18, 0x00	; 0
    28ae:	30 e0       	ldi	r19, 0x00	; 0
    28b0:	47 e8       	ldi	r20, 0x87	; 135
    28b2:	52 e4       	ldi	r21, 0x42	; 66
    28b4:	c7 01       	movw	r24, r14
    28b6:	b6 01       	movw	r22, r12
    28b8:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    28bc:	87 fd       	sbrc	r24, 7
    28be:	d2 c0       	rjmp	.+420    	; 0x2a64 <getTimeZone(double)+0x42c>
    28c0:	20 e0       	ldi	r18, 0x00	; 0
    28c2:	30 e0       	ldi	r19, 0x00	; 0
    28c4:	47 e8       	ldi	r20, 0x87	; 135
    28c6:	52 e4       	ldi	r21, 0x42	; 66
    28c8:	c7 01       	movw	r24, r14
    28ca:	b6 01       	movw	r22, r12
    28cc:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    28d0:	18 16       	cp	r1, r24
    28d2:	54 f4       	brge	.+20     	; 0x28e8 <getTimeZone(double)+0x2b0>
    28d4:	20 e0       	ldi	r18, 0x00	; 0
    28d6:	30 e0       	ldi	r19, 0x00	; 0
    28d8:	45 ea       	ldi	r20, 0xA5	; 165
    28da:	52 e4       	ldi	r21, 0x42	; 66
    28dc:	c7 01       	movw	r24, r14
    28de:	b6 01       	movw	r22, r12
    28e0:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    28e4:	87 fd       	sbrc	r24, 7
    28e6:	c1 c0       	rjmp	.+386    	; 0x2a6a <getTimeZone(double)+0x432>
    28e8:	20 e0       	ldi	r18, 0x00	; 0
    28ea:	30 e0       	ldi	r19, 0x00	; 0
    28ec:	45 ea       	ldi	r20, 0xA5	; 165
    28ee:	52 e4       	ldi	r21, 0x42	; 66
    28f0:	c7 01       	movw	r24, r14
    28f2:	b6 01       	movw	r22, r12
    28f4:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    28f8:	18 16       	cp	r1, r24
    28fa:	54 f4       	brge	.+20     	; 0x2910 <getTimeZone(double)+0x2d8>
    28fc:	20 e0       	ldi	r18, 0x00	; 0
    28fe:	30 e0       	ldi	r19, 0x00	; 0
    2900:	43 ec       	ldi	r20, 0xC3	; 195
    2902:	52 e4       	ldi	r21, 0x42	; 66
    2904:	c7 01       	movw	r24, r14
    2906:	b6 01       	movw	r22, r12
    2908:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    290c:	87 fd       	sbrc	r24, 7
    290e:	b0 c0       	rjmp	.+352    	; 0x2a70 <getTimeZone(double)+0x438>
    2910:	20 e0       	ldi	r18, 0x00	; 0
    2912:	30 e0       	ldi	r19, 0x00	; 0
    2914:	43 ec       	ldi	r20, 0xC3	; 195
    2916:	52 e4       	ldi	r21, 0x42	; 66
    2918:	c7 01       	movw	r24, r14
    291a:	b6 01       	movw	r22, r12
    291c:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2920:	18 16       	cp	r1, r24
    2922:	54 f4       	brge	.+20     	; 0x2938 <getTimeZone(double)+0x300>
    2924:	20 e0       	ldi	r18, 0x00	; 0
    2926:	30 e0       	ldi	r19, 0x00	; 0
    2928:	41 ee       	ldi	r20, 0xE1	; 225
    292a:	52 e4       	ldi	r21, 0x42	; 66
    292c:	c7 01       	movw	r24, r14
    292e:	b6 01       	movw	r22, r12
    2930:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    2934:	87 fd       	sbrc	r24, 7
    2936:	9f c0       	rjmp	.+318    	; 0x2a76 <getTimeZone(double)+0x43e>
    2938:	20 e0       	ldi	r18, 0x00	; 0
    293a:	30 e0       	ldi	r19, 0x00	; 0
    293c:	41 ee       	ldi	r20, 0xE1	; 225
    293e:	52 e4       	ldi	r21, 0x42	; 66
    2940:	c7 01       	movw	r24, r14
    2942:	b6 01       	movw	r22, r12
    2944:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2948:	18 16       	cp	r1, r24
    294a:	54 f4       	brge	.+20     	; 0x2960 <getTimeZone(double)+0x328>
    294c:	20 e0       	ldi	r18, 0x00	; 0
    294e:	30 e0       	ldi	r19, 0x00	; 0
    2950:	4f ef       	ldi	r20, 0xFF	; 255
    2952:	52 e4       	ldi	r21, 0x42	; 66
    2954:	c7 01       	movw	r24, r14
    2956:	b6 01       	movw	r22, r12
    2958:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    295c:	87 fd       	sbrc	r24, 7
    295e:	8e c0       	rjmp	.+284    	; 0x2a7c <getTimeZone(double)+0x444>
    2960:	20 e0       	ldi	r18, 0x00	; 0
    2962:	30 e0       	ldi	r19, 0x00	; 0
    2964:	4f ef       	ldi	r20, 0xFF	; 255
    2966:	52 e4       	ldi	r21, 0x42	; 66
    2968:	c7 01       	movw	r24, r14
    296a:	b6 01       	movw	r22, r12
    296c:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2970:	18 16       	cp	r1, r24
    2972:	54 f4       	brge	.+20     	; 0x2988 <getTimeZone(double)+0x350>
    2974:	20 e0       	ldi	r18, 0x00	; 0
    2976:	30 e8       	ldi	r19, 0x80	; 128
    2978:	4e e0       	ldi	r20, 0x0E	; 14
    297a:	53 e4       	ldi	r21, 0x43	; 67
    297c:	c7 01       	movw	r24, r14
    297e:	b6 01       	movw	r22, r12
    2980:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    2984:	87 fd       	sbrc	r24, 7
    2986:	7d c0       	rjmp	.+250    	; 0x2a82 <getTimeZone(double)+0x44a>
    2988:	20 e0       	ldi	r18, 0x00	; 0
    298a:	30 e8       	ldi	r19, 0x80	; 128
    298c:	4e e0       	ldi	r20, 0x0E	; 14
    298e:	53 e4       	ldi	r21, 0x43	; 67
    2990:	c7 01       	movw	r24, r14
    2992:	b6 01       	movw	r22, r12
    2994:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    2998:	18 16       	cp	r1, r24
    299a:	54 f4       	brge	.+20     	; 0x29b0 <getTimeZone(double)+0x378>
    299c:	20 e0       	ldi	r18, 0x00	; 0
    299e:	30 e8       	ldi	r19, 0x80	; 128
    29a0:	4d e1       	ldi	r20, 0x1D	; 29
    29a2:	53 e4       	ldi	r21, 0x43	; 67
    29a4:	c7 01       	movw	r24, r14
    29a6:	b6 01       	movw	r22, r12
    29a8:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    29ac:	87 fd       	sbrc	r24, 7
    29ae:	6c c0       	rjmp	.+216    	; 0x2a88 <getTimeZone(double)+0x450>
    29b0:	20 e0       	ldi	r18, 0x00	; 0
    29b2:	30 e8       	ldi	r19, 0x80	; 128
    29b4:	4d e1       	ldi	r20, 0x1D	; 29
    29b6:	53 e4       	ldi	r21, 0x43	; 67
    29b8:	c7 01       	movw	r24, r14
    29ba:	b6 01       	movw	r22, r12
    29bc:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    29c0:	18 16       	cp	r1, r24
    29c2:	54 f4       	brge	.+20     	; 0x29d8 <getTimeZone(double)+0x3a0>
    29c4:	20 e0       	ldi	r18, 0x00	; 0
    29c6:	30 e8       	ldi	r19, 0x80	; 128
    29c8:	4c e2       	ldi	r20, 0x2C	; 44
    29ca:	53 e4       	ldi	r21, 0x43	; 67
    29cc:	c7 01       	movw	r24, r14
    29ce:	b6 01       	movw	r22, r12
    29d0:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    29d4:	87 fd       	sbrc	r24, 7
    29d6:	5b c0       	rjmp	.+182    	; 0x2a8e <getTimeZone(double)+0x456>
    29d8:	20 e0       	ldi	r18, 0x00	; 0
    29da:	30 e8       	ldi	r19, 0x80	; 128
    29dc:	4c e2       	ldi	r20, 0x2C	; 44
    29de:	53 e4       	ldi	r21, 0x43	; 67
    29e0:	c7 01       	movw	r24, r14
    29e2:	b6 01       	movw	r22, r12
    29e4:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    29e8:	18 16       	cp	r1, r24
    29ea:	0c f0       	brlt	.+2      	; 0x29ee <getTimeZone(double)+0x3b6>
    29ec:	53 c0       	rjmp	.+166    	; 0x2a94 <getTimeZone(double)+0x45c>
    29ee:	20 e0       	ldi	r18, 0x00	; 0
    29f0:	30 e8       	ldi	r19, 0x80	; 128
    29f2:	4b e3       	ldi	r20, 0x3B	; 59
    29f4:	53 e4       	ldi	r21, 0x43	; 67
    29f6:	c7 01       	movw	r24, r14
    29f8:	b6 01       	movw	r22, r12
    29fa:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    29fe:	87 ff       	sbrs	r24, 7
    2a00:	49 c0       	rjmp	.+146    	; 0x2a94 <getTimeZone(double)+0x45c>
    2a02:	8c e0       	ldi	r24, 0x0C	; 12
    2a04:	90 e0       	ldi	r25, 0x00	; 0
    2a06:	ff 90       	pop	r15
    2a08:	ef 90       	pop	r14
    2a0a:	df 90       	pop	r13
    2a0c:	cf 90       	pop	r12
    2a0e:	08 95       	ret
    2a10:	85 ef       	ldi	r24, 0xF5	; 245
    2a12:	9f ef       	ldi	r25, 0xFF	; 255
    2a14:	f8 cf       	rjmp	.-16     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a16:	86 ef       	ldi	r24, 0xF6	; 246
    2a18:	9f ef       	ldi	r25, 0xFF	; 255
    2a1a:	f5 cf       	rjmp	.-22     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a1c:	87 ef       	ldi	r24, 0xF7	; 247
    2a1e:	9f ef       	ldi	r25, 0xFF	; 255
    2a20:	f2 cf       	rjmp	.-28     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a22:	88 ef       	ldi	r24, 0xF8	; 248
    2a24:	9f ef       	ldi	r25, 0xFF	; 255
    2a26:	ef cf       	rjmp	.-34     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a28:	89 ef       	ldi	r24, 0xF9	; 249
    2a2a:	9f ef       	ldi	r25, 0xFF	; 255
    2a2c:	ec cf       	rjmp	.-40     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a2e:	8a ef       	ldi	r24, 0xFA	; 250
    2a30:	9f ef       	ldi	r25, 0xFF	; 255
    2a32:	e9 cf       	rjmp	.-46     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a34:	8b ef       	ldi	r24, 0xFB	; 251
    2a36:	9f ef       	ldi	r25, 0xFF	; 255
    2a38:	e6 cf       	rjmp	.-52     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a3a:	8c ef       	ldi	r24, 0xFC	; 252
    2a3c:	9f ef       	ldi	r25, 0xFF	; 255
    2a3e:	e3 cf       	rjmp	.-58     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a40:	8d ef       	ldi	r24, 0xFD	; 253
    2a42:	9f ef       	ldi	r25, 0xFF	; 255
    2a44:	e0 cf       	rjmp	.-64     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a46:	8e ef       	ldi	r24, 0xFE	; 254
    2a48:	9f ef       	ldi	r25, 0xFF	; 255
    2a4a:	dd cf       	rjmp	.-70     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a4c:	8f ef       	ldi	r24, 0xFF	; 255
    2a4e:	9f ef       	ldi	r25, 0xFF	; 255
    2a50:	da cf       	rjmp	.-76     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a52:	81 e0       	ldi	r24, 0x01	; 1
    2a54:	90 e0       	ldi	r25, 0x00	; 0
    2a56:	d7 cf       	rjmp	.-82     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a58:	82 e0       	ldi	r24, 0x02	; 2
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	d4 cf       	rjmp	.-88     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a5e:	83 e0       	ldi	r24, 0x03	; 3
    2a60:	90 e0       	ldi	r25, 0x00	; 0
    2a62:	d1 cf       	rjmp	.-94     	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a64:	84 e0       	ldi	r24, 0x04	; 4
    2a66:	90 e0       	ldi	r25, 0x00	; 0
    2a68:	ce cf       	rjmp	.-100    	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a6a:	85 e0       	ldi	r24, 0x05	; 5
    2a6c:	90 e0       	ldi	r25, 0x00	; 0
    2a6e:	cb cf       	rjmp	.-106    	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a70:	86 e0       	ldi	r24, 0x06	; 6
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	c8 cf       	rjmp	.-112    	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a76:	87 e0       	ldi	r24, 0x07	; 7
    2a78:	90 e0       	ldi	r25, 0x00	; 0
    2a7a:	c5 cf       	rjmp	.-118    	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a7c:	88 e0       	ldi	r24, 0x08	; 8
    2a7e:	90 e0       	ldi	r25, 0x00	; 0
    2a80:	c2 cf       	rjmp	.-124    	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a82:	89 e0       	ldi	r24, 0x09	; 9
    2a84:	90 e0       	ldi	r25, 0x00	; 0
    2a86:	bf cf       	rjmp	.-130    	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a88:	8a e0       	ldi	r24, 0x0A	; 10
    2a8a:	90 e0       	ldi	r25, 0x00	; 0
    2a8c:	bc cf       	rjmp	.-136    	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a8e:	8b e0       	ldi	r24, 0x0B	; 11
    2a90:	90 e0       	ldi	r25, 0x00	; 0
    2a92:	b9 cf       	rjmp	.-142    	; 0x2a06 <getTimeZone(double)+0x3ce>
    2a94:	90 e0       	ldi	r25, 0x00	; 0
    2a96:	80 e0       	ldi	r24, 0x00	; 0
    2a98:	b6 cf       	rjmp	.-148    	; 0x2a06 <getTimeZone(double)+0x3ce>

00002a9a <dataSensIndicator()>:
_Z17dataSensIndicatorv():
    2a9a:	60 e0       	ldi	r22, 0x00	; 0
    2a9c:	85 e1       	ldi	r24, 0x15	; 21
    2a9e:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
    2aa2:	6a e0       	ldi	r22, 0x0A	; 10
    2aa4:	70 e0       	ldi	r23, 0x00	; 0
    2aa6:	80 e0       	ldi	r24, 0x00	; 0
    2aa8:	90 e0       	ldi	r25, 0x00	; 0
    2aaa:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    2aae:	61 e0       	ldi	r22, 0x01	; 1
    2ab0:	85 e1       	ldi	r24, 0x15	; 21
    2ab2:	0c 94 a2 6d 	jmp	0xdb44	; 0xdb44 <digitalWrite>

00002ab6 <saveLocationToEEPROM()>:
_Z20saveLocationToEEPROMv():
    2ab6:	8f 92       	push	r8
    2ab8:	9f 92       	push	r9
    2aba:	af 92       	push	r10
    2abc:	bf 92       	push	r11
    2abe:	cf 92       	push	r12
    2ac0:	df 92       	push	r13
    2ac2:	ef 92       	push	r14
    2ac4:	ff 92       	push	r15
    2ac6:	cf 93       	push	r28
    2ac8:	df 93       	push	r29
    2aca:	20 e0       	ldi	r18, 0x00	; 0
    2acc:	30 e0       	ldi	r19, 0x00	; 0
    2ace:	a9 01       	movw	r20, r18
    2ad0:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <gps_var+0x6>
    2ad4:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <gps_var+0x7>
    2ad8:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <gps_var+0x8>
    2adc:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <gps_var+0x9>
    2ae0:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    2ae4:	61 e0       	ldi	r22, 0x01	; 1
    2ae6:	87 ff       	sbrs	r24, 7
    2ae8:	60 e0       	ldi	r22, 0x00	; 0
    2aea:	84 e0       	ldi	r24, 0x04	; 4
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    2af2:	6a e0       	ldi	r22, 0x0A	; 10
    2af4:	70 e0       	ldi	r23, 0x00	; 0
    2af6:	80 e0       	ldi	r24, 0x00	; 0
    2af8:	90 e0       	ldi	r25, 0x00	; 0
    2afa:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    2afe:	c0 90 24 01 	lds	r12, 0x0124	; 0x800124 <gps_var+0x6>
    2b02:	d0 90 25 01 	lds	r13, 0x0125	; 0x800125 <gps_var+0x7>
    2b06:	e0 90 26 01 	lds	r14, 0x0126	; 0x800126 <gps_var+0x8>
    2b0a:	f0 90 27 01 	lds	r15, 0x0127	; 0x800127 <gps_var+0x9>
    2b0e:	c7 01       	movw	r24, r14
    2b10:	b6 01       	movw	r22, r12
    2b12:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    2b16:	eb 01       	movw	r28, r22
    2b18:	77 ff       	sbrs	r23, 7
    2b1a:	04 c0       	rjmp	.+8      	; 0x2b24 <saveLocationToEEPROM()+0x6e>
    2b1c:	cc 27       	eor	r28, r28
    2b1e:	dd 27       	eor	r29, r29
    2b20:	c6 1b       	sub	r28, r22
    2b22:	d7 0b       	sbc	r29, r23
    2b24:	be 01       	movw	r22, r28
    2b26:	dd 0f       	add	r29, r29
    2b28:	88 0b       	sbc	r24, r24
    2b2a:	99 0b       	sbc	r25, r25
    2b2c:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2b30:	9b 01       	movw	r18, r22
    2b32:	ac 01       	movw	r20, r24
    2b34:	20 93 8f 09 	sts	0x098F, r18	; 0x80098f <eeprom+0x8>
    2b38:	30 93 90 09 	sts	0x0990, r19	; 0x800990 <eeprom+0x9>
    2b3c:	40 93 91 09 	sts	0x0991, r20	; 0x800991 <eeprom+0xa>
    2b40:	50 93 92 09 	sts	0x0992, r21	; 0x800992 <eeprom+0xb>
    2b44:	c7 01       	movw	r24, r14
    2b46:	b6 01       	movw	r22, r12
    2b48:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    2b4c:	6b 01       	movw	r12, r22
    2b4e:	7c 01       	movw	r14, r24
    2b50:	20 e0       	ldi	r18, 0x00	; 0
    2b52:	30 e0       	ldi	r19, 0x00	; 0
    2b54:	48 ec       	ldi	r20, 0xC8	; 200
    2b56:	52 e4       	ldi	r21, 0x42	; 66
    2b58:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2b5c:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    2b60:	07 2e       	mov	r0, r23
    2b62:	00 0c       	add	r0, r0
    2b64:	88 0b       	sbc	r24, r24
    2b66:	99 0b       	sbc	r25, r25
    2b68:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2b6c:	4b 01       	movw	r8, r22
    2b6e:	5c 01       	movw	r10, r24
    2b70:	2a e0       	ldi	r18, 0x0A	; 10
    2b72:	37 ed       	ldi	r19, 0xD7	; 215
    2b74:	43 e2       	ldi	r20, 0x23	; 35
    2b76:	5c e3       	ldi	r21, 0x3C	; 60
    2b78:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2b7c:	9b 01       	movw	r18, r22
    2b7e:	ac 01       	movw	r20, r24
    2b80:	c7 01       	movw	r24, r14
    2b82:	b6 01       	movw	r22, r12
    2b84:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    2b88:	6b 01       	movw	r12, r22
    2b8a:	7c 01       	movw	r14, r24
    2b8c:	20 e0       	ldi	r18, 0x00	; 0
    2b8e:	30 e4       	ldi	r19, 0x40	; 64
    2b90:	4c e1       	ldi	r20, 0x1C	; 28
    2b92:	56 e4       	ldi	r21, 0x46	; 70
    2b94:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2b98:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    2b9c:	07 2e       	mov	r0, r23
    2b9e:	00 0c       	add	r0, r0
    2ba0:	88 0b       	sbc	r24, r24
    2ba2:	99 0b       	sbc	r25, r25
    2ba4:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2ba8:	80 92 93 09 	sts	0x0993, r8	; 0x800993 <eeprom+0xc>
    2bac:	90 92 94 09 	sts	0x0994, r9	; 0x800994 <eeprom+0xd>
    2bb0:	a0 92 95 09 	sts	0x0995, r10	; 0x800995 <eeprom+0xe>
    2bb4:	b0 92 96 09 	sts	0x0996, r11	; 0x800996 <eeprom+0xf>
    2bb8:	60 93 97 09 	sts	0x0997, r22	; 0x800997 <eeprom+0x10>
    2bbc:	70 93 98 09 	sts	0x0998, r23	; 0x800998 <eeprom+0x11>
    2bc0:	80 93 99 09 	sts	0x0999, r24	; 0x800999 <eeprom+0x12>
    2bc4:	90 93 9a 09 	sts	0x099A, r25	; 0x80099a <eeprom+0x13>
    2bc8:	27 e1       	ldi	r18, 0x17	; 23
    2bca:	37 eb       	ldi	r19, 0xB7	; 183
    2bcc:	41 ed       	ldi	r20, 0xD1	; 209
    2bce:	58 e3       	ldi	r21, 0x38	; 56
    2bd0:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2bd4:	9b 01       	movw	r18, r22
    2bd6:	ac 01       	movw	r20, r24
    2bd8:	c7 01       	movw	r24, r14
    2bda:	b6 01       	movw	r22, r12
    2bdc:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    2be0:	20 e0       	ldi	r18, 0x00	; 0
    2be2:	34 e2       	ldi	r19, 0x24	; 36
    2be4:	44 e7       	ldi	r20, 0x74	; 116
    2be6:	59 e4       	ldi	r21, 0x49	; 73
    2be8:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2bec:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    2bf0:	07 2e       	mov	r0, r23
    2bf2:	00 0c       	add	r0, r0
    2bf4:	88 0b       	sbc	r24, r24
    2bf6:	99 0b       	sbc	r25, r25
    2bf8:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2bfc:	60 93 9b 09 	sts	0x099B, r22	; 0x80099b <eeprom+0x14>
    2c00:	70 93 9c 09 	sts	0x099C, r23	; 0x80099c <eeprom+0x15>
    2c04:	80 93 9d 09 	sts	0x099D, r24	; 0x80099d <eeprom+0x16>
    2c08:	90 93 9e 09 	sts	0x099E, r25	; 0x80099e <eeprom+0x17>
    2c0c:	10 92 8a 09 	sts	0x098A, r1	; 0x80098a <eeprom+0x3>
    2c10:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <eeprom+0x2>
    2c14:	6c 2f       	mov	r22, r28
    2c16:	90 e0       	ldi	r25, 0x00	; 0
    2c18:	80 e0       	ldi	r24, 0x00	; 0
    2c1a:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    2c1e:	81 e0       	ldi	r24, 0x01	; 1
    2c20:	90 e0       	ldi	r25, 0x00	; 0
    2c22:	90 93 88 09 	sts	0x0988, r25	; 0x800988 <eeprom+0x1>
    2c26:	80 93 87 09 	sts	0x0987, r24	; 0x800987 <eeprom>
    2c2a:	c0 91 87 09 	lds	r28, 0x0987	; 0x800987 <eeprom>
    2c2e:	d0 91 88 09 	lds	r29, 0x0988	; 0x800988 <eeprom+0x1>
    2c32:	c4 30       	cpi	r28, 0x04	; 4
    2c34:	d1 05       	cpc	r29, r1
    2c36:	44 f5       	brge	.+80     	; 0x2c88 <saveLocationToEEPROM()+0x1d2>
    2c38:	e0 91 89 09 	lds	r30, 0x0989	; 0x800989 <eeprom+0x2>
    2c3c:	f0 91 8a 09 	lds	r31, 0x098A	; 0x80098a <eeprom+0x3>
    2c40:	ee 0f       	add	r30, r30
    2c42:	ff 1f       	adc	r31, r31
    2c44:	ee 0f       	add	r30, r30
    2c46:	ff 1f       	adc	r31, r31
    2c48:	ed 56       	subi	r30, 0x6D	; 109
    2c4a:	f6 4f       	sbci	r31, 0xF6	; 246
    2c4c:	60 81       	ld	r22, Z
    2c4e:	71 81       	ldd	r23, Z+1	; 0x01
    2c50:	82 81       	ldd	r24, Z+2	; 0x02
    2c52:	93 81       	ldd	r25, Z+3	; 0x03
    2c54:	0e 94 e4 71 	call	0xe3c8	; 0xe3c8 <__fixunssfsi>
    2c58:	ce 01       	movw	r24, r28
    2c5a:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    2c5e:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <eeprom+0x2>
    2c62:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <eeprom+0x3>
    2c66:	01 96       	adiw	r24, 0x01	; 1
    2c68:	90 93 8a 09 	sts	0x098A, r25	; 0x80098a <eeprom+0x3>
    2c6c:	80 93 89 09 	sts	0x0989, r24	; 0x800989 <eeprom+0x2>
    2c70:	6a e0       	ldi	r22, 0x0A	; 10
    2c72:	70 e0       	ldi	r23, 0x00	; 0
    2c74:	80 e0       	ldi	r24, 0x00	; 0
    2c76:	90 e0       	ldi	r25, 0x00	; 0
    2c78:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    2c7c:	80 91 87 09 	lds	r24, 0x0987	; 0x800987 <eeprom>
    2c80:	90 91 88 09 	lds	r25, 0x0988	; 0x800988 <eeprom+0x1>
    2c84:	01 96       	adiw	r24, 0x01	; 1
    2c86:	cd cf       	rjmp	.-102    	; 0x2c22 <saveLocationToEEPROM()+0x16c>
    2c88:	20 e0       	ldi	r18, 0x00	; 0
    2c8a:	30 e0       	ldi	r19, 0x00	; 0
    2c8c:	a9 01       	movw	r20, r18
    2c8e:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <gps_var+0xa>
    2c92:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <gps_var+0xb>
    2c96:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <gps_var+0xc>
    2c9a:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <gps_var+0xd>
    2c9e:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    2ca2:	61 e0       	ldi	r22, 0x01	; 1
    2ca4:	87 ff       	sbrs	r24, 7
    2ca6:	60 e0       	ldi	r22, 0x00	; 0
    2ca8:	89 e0       	ldi	r24, 0x09	; 9
    2caa:	90 e0       	ldi	r25, 0x00	; 0
    2cac:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    2cb0:	6a e0       	ldi	r22, 0x0A	; 10
    2cb2:	70 e0       	ldi	r23, 0x00	; 0
    2cb4:	80 e0       	ldi	r24, 0x00	; 0
    2cb6:	90 e0       	ldi	r25, 0x00	; 0
    2cb8:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    2cbc:	c0 90 28 01 	lds	r12, 0x0128	; 0x800128 <gps_var+0xa>
    2cc0:	d0 90 29 01 	lds	r13, 0x0129	; 0x800129 <gps_var+0xb>
    2cc4:	e0 90 2a 01 	lds	r14, 0x012A	; 0x80012a <gps_var+0xc>
    2cc8:	f0 90 2b 01 	lds	r15, 0x012B	; 0x80012b <gps_var+0xd>
    2ccc:	c7 01       	movw	r24, r14
    2cce:	b6 01       	movw	r22, r12
    2cd0:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    2cd4:	eb 01       	movw	r28, r22
    2cd6:	77 ff       	sbrs	r23, 7
    2cd8:	04 c0       	rjmp	.+8      	; 0x2ce2 <saveLocationToEEPROM()+0x22c>
    2cda:	cc 27       	eor	r28, r28
    2cdc:	dd 27       	eor	r29, r29
    2cde:	c6 1b       	sub	r28, r22
    2ce0:	d7 0b       	sbc	r29, r23
    2ce2:	be 01       	movw	r22, r28
    2ce4:	dd 0f       	add	r29, r29
    2ce6:	88 0b       	sbc	r24, r24
    2ce8:	99 0b       	sbc	r25, r25
    2cea:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2cee:	9b 01       	movw	r18, r22
    2cf0:	ac 01       	movw	r20, r24
    2cf2:	20 93 a3 09 	sts	0x09A3, r18	; 0x8009a3 <eeprom+0x1c>
    2cf6:	30 93 a4 09 	sts	0x09A4, r19	; 0x8009a4 <eeprom+0x1d>
    2cfa:	40 93 a5 09 	sts	0x09A5, r20	; 0x8009a5 <eeprom+0x1e>
    2cfe:	50 93 a6 09 	sts	0x09A6, r21	; 0x8009a6 <eeprom+0x1f>
    2d02:	c7 01       	movw	r24, r14
    2d04:	b6 01       	movw	r22, r12
    2d06:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    2d0a:	6b 01       	movw	r12, r22
    2d0c:	7c 01       	movw	r14, r24
    2d0e:	20 e0       	ldi	r18, 0x00	; 0
    2d10:	30 e0       	ldi	r19, 0x00	; 0
    2d12:	48 ec       	ldi	r20, 0xC8	; 200
    2d14:	52 e4       	ldi	r21, 0x42	; 66
    2d16:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2d1a:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    2d1e:	07 2e       	mov	r0, r23
    2d20:	00 0c       	add	r0, r0
    2d22:	88 0b       	sbc	r24, r24
    2d24:	99 0b       	sbc	r25, r25
    2d26:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2d2a:	4b 01       	movw	r8, r22
    2d2c:	5c 01       	movw	r10, r24
    2d2e:	2a e0       	ldi	r18, 0x0A	; 10
    2d30:	37 ed       	ldi	r19, 0xD7	; 215
    2d32:	43 e2       	ldi	r20, 0x23	; 35
    2d34:	5c e3       	ldi	r21, 0x3C	; 60
    2d36:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2d3a:	9b 01       	movw	r18, r22
    2d3c:	ac 01       	movw	r20, r24
    2d3e:	c7 01       	movw	r24, r14
    2d40:	b6 01       	movw	r22, r12
    2d42:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    2d46:	6b 01       	movw	r12, r22
    2d48:	7c 01       	movw	r14, r24
    2d4a:	20 e0       	ldi	r18, 0x00	; 0
    2d4c:	30 e4       	ldi	r19, 0x40	; 64
    2d4e:	4c e1       	ldi	r20, 0x1C	; 28
    2d50:	56 e4       	ldi	r21, 0x46	; 70
    2d52:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2d56:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    2d5a:	07 2e       	mov	r0, r23
    2d5c:	00 0c       	add	r0, r0
    2d5e:	88 0b       	sbc	r24, r24
    2d60:	99 0b       	sbc	r25, r25
    2d62:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2d66:	80 92 a7 09 	sts	0x09A7, r8	; 0x8009a7 <eeprom+0x20>
    2d6a:	90 92 a8 09 	sts	0x09A8, r9	; 0x8009a8 <eeprom+0x21>
    2d6e:	a0 92 a9 09 	sts	0x09A9, r10	; 0x8009a9 <eeprom+0x22>
    2d72:	b0 92 aa 09 	sts	0x09AA, r11	; 0x8009aa <eeprom+0x23>
    2d76:	60 93 ab 09 	sts	0x09AB, r22	; 0x8009ab <eeprom+0x24>
    2d7a:	70 93 ac 09 	sts	0x09AC, r23	; 0x8009ac <eeprom+0x25>
    2d7e:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <eeprom+0x26>
    2d82:	90 93 ae 09 	sts	0x09AE, r25	; 0x8009ae <eeprom+0x27>
    2d86:	27 e1       	ldi	r18, 0x17	; 23
    2d88:	37 eb       	ldi	r19, 0xB7	; 183
    2d8a:	41 ed       	ldi	r20, 0xD1	; 209
    2d8c:	58 e3       	ldi	r21, 0x38	; 56
    2d8e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2d92:	9b 01       	movw	r18, r22
    2d94:	ac 01       	movw	r20, r24
    2d96:	c7 01       	movw	r24, r14
    2d98:	b6 01       	movw	r22, r12
    2d9a:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    2d9e:	20 e0       	ldi	r18, 0x00	; 0
    2da0:	34 e2       	ldi	r19, 0x24	; 36
    2da2:	44 e7       	ldi	r20, 0x74	; 116
    2da4:	59 e4       	ldi	r21, 0x49	; 73
    2da6:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2daa:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    2dae:	07 2e       	mov	r0, r23
    2db0:	00 0c       	add	r0, r0
    2db2:	88 0b       	sbc	r24, r24
    2db4:	99 0b       	sbc	r25, r25
    2db6:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    2dba:	60 93 af 09 	sts	0x09AF, r22	; 0x8009af <eeprom+0x28>
    2dbe:	70 93 b0 09 	sts	0x09B0, r23	; 0x8009b0 <eeprom+0x29>
    2dc2:	80 93 b1 09 	sts	0x09B1, r24	; 0x8009b1 <eeprom+0x2a>
    2dc6:	90 93 b2 09 	sts	0x09B2, r25	; 0x8009b2 <eeprom+0x2b>
    2dca:	10 92 8a 09 	sts	0x098A, r1	; 0x80098a <eeprom+0x3>
    2dce:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <eeprom+0x2>
    2dd2:	6c 2f       	mov	r22, r28
    2dd4:	85 e0       	ldi	r24, 0x05	; 5
    2dd6:	90 e0       	ldi	r25, 0x00	; 0
    2dd8:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    2ddc:	86 e0       	ldi	r24, 0x06	; 6
    2dde:	90 e0       	ldi	r25, 0x00	; 0
    2de0:	90 93 88 09 	sts	0x0988, r25	; 0x800988 <eeprom+0x1>
    2de4:	80 93 87 09 	sts	0x0987, r24	; 0x800987 <eeprom>
    2de8:	c0 91 87 09 	lds	r28, 0x0987	; 0x800987 <eeprom>
    2dec:	d0 91 88 09 	lds	r29, 0x0988	; 0x800988 <eeprom+0x1>
    2df0:	c9 30       	cpi	r28, 0x09	; 9
    2df2:	d1 05       	cpc	r29, r1
    2df4:	44 f5       	brge	.+80     	; 0x2e46 <saveLocationToEEPROM()+0x390>
    2df6:	e0 91 89 09 	lds	r30, 0x0989	; 0x800989 <eeprom+0x2>
    2dfa:	f0 91 8a 09 	lds	r31, 0x098A	; 0x80098a <eeprom+0x3>
    2dfe:	ee 0f       	add	r30, r30
    2e00:	ff 1f       	adc	r31, r31
    2e02:	ee 0f       	add	r30, r30
    2e04:	ff 1f       	adc	r31, r31
    2e06:	e9 55       	subi	r30, 0x59	; 89
    2e08:	f6 4f       	sbci	r31, 0xF6	; 246
    2e0a:	60 81       	ld	r22, Z
    2e0c:	71 81       	ldd	r23, Z+1	; 0x01
    2e0e:	82 81       	ldd	r24, Z+2	; 0x02
    2e10:	93 81       	ldd	r25, Z+3	; 0x03
    2e12:	0e 94 e4 71 	call	0xe3c8	; 0xe3c8 <__fixunssfsi>
    2e16:	ce 01       	movw	r24, r28
    2e18:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    2e1c:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <eeprom+0x2>
    2e20:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <eeprom+0x3>
    2e24:	01 96       	adiw	r24, 0x01	; 1
    2e26:	90 93 8a 09 	sts	0x098A, r25	; 0x80098a <eeprom+0x3>
    2e2a:	80 93 89 09 	sts	0x0989, r24	; 0x800989 <eeprom+0x2>
    2e2e:	6a e0       	ldi	r22, 0x0A	; 10
    2e30:	70 e0       	ldi	r23, 0x00	; 0
    2e32:	80 e0       	ldi	r24, 0x00	; 0
    2e34:	90 e0       	ldi	r25, 0x00	; 0
    2e36:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    2e3a:	80 91 87 09 	lds	r24, 0x0987	; 0x800987 <eeprom>
    2e3e:	90 91 88 09 	lds	r25, 0x0988	; 0x800988 <eeprom+0x1>
    2e42:	01 96       	adiw	r24, 0x01	; 1
    2e44:	cd cf       	rjmp	.-102    	; 0x2de0 <saveLocationToEEPROM()+0x32a>
    2e46:	df 91       	pop	r29
    2e48:	cf 91       	pop	r28
    2e4a:	ff 90       	pop	r15
    2e4c:	ef 90       	pop	r14
    2e4e:	df 90       	pop	r13
    2e50:	cf 90       	pop	r12
    2e52:	bf 90       	pop	r11
    2e54:	af 90       	pop	r10
    2e56:	9f 90       	pop	r9
    2e58:	8f 90       	pop	r8
    2e5a:	08 95       	ret

00002e5c <decodeLocationFromEEPROM()>:
_Z24decodeLocationFromEEPROMv():
    2e5c:	4f 92       	push	r4
    2e5e:	5f 92       	push	r5
    2e60:	6f 92       	push	r6
    2e62:	7f 92       	push	r7
    2e64:	8f 92       	push	r8
    2e66:	9f 92       	push	r9
    2e68:	af 92       	push	r10
    2e6a:	bf 92       	push	r11
    2e6c:	cf 92       	push	r12
    2e6e:	df 92       	push	r13
    2e70:	ef 92       	push	r14
    2e72:	ff 92       	push	r15
    2e74:	0f 93       	push	r16
    2e76:	1f 93       	push	r17
    2e78:	cf 93       	push	r28
    2e7a:	df 93       	push	r29
    2e7c:	00 d0       	rcall	.+0      	; 0x2e7e <decodeLocationFromEEPROM()+0x22>
    2e7e:	00 d0       	rcall	.+0      	; 0x2e80 <decodeLocationFromEEPROM()+0x24>
    2e80:	cd b7       	in	r28, 0x3d	; 61
    2e82:	de b7       	in	r29, 0x3e	; 62
    2e84:	90 e0       	ldi	r25, 0x00	; 0
    2e86:	80 e0       	ldi	r24, 0x00	; 0
    2e88:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    2e8c:	68 2f       	mov	r22, r24
    2e8e:	70 e0       	ldi	r23, 0x00	; 0
    2e90:	90 e0       	ldi	r25, 0x00	; 0
    2e92:	80 e0       	ldi	r24, 0x00	; 0
    2e94:	0e 94 13 72 	call	0xe426	; 0xe426 <__floatunsisf>
    2e98:	60 93 8f 09 	sts	0x098F, r22	; 0x80098f <eeprom+0x8>
    2e9c:	70 93 90 09 	sts	0x0990, r23	; 0x800990 <eeprom+0x9>
    2ea0:	80 93 91 09 	sts	0x0991, r24	; 0x800991 <eeprom+0xa>
    2ea4:	90 93 92 09 	sts	0x0992, r25	; 0x800992 <eeprom+0xb>
    2ea8:	10 92 8a 09 	sts	0x098A, r1	; 0x80098a <eeprom+0x3>
    2eac:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <eeprom+0x2>
    2eb0:	81 e0       	ldi	r24, 0x01	; 1
    2eb2:	90 e0       	ldi	r25, 0x00	; 0
    2eb4:	90 93 88 09 	sts	0x0988, r25	; 0x800988 <eeprom+0x1>
    2eb8:	80 93 87 09 	sts	0x0987, r24	; 0x800987 <eeprom>
    2ebc:	80 91 87 09 	lds	r24, 0x0987	; 0x800987 <eeprom>
    2ec0:	90 91 88 09 	lds	r25, 0x0988	; 0x800988 <eeprom+0x1>
    2ec4:	84 30       	cpi	r24, 0x04	; 4
    2ec6:	91 05       	cpc	r25, r1
    2ec8:	74 f5       	brge	.+92     	; 0x2f26 <decodeLocationFromEEPROM()+0xca>
    2eca:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    2ece:	20 91 89 09 	lds	r18, 0x0989	; 0x800989 <eeprom+0x2>
    2ed2:	30 91 8a 09 	lds	r19, 0x098A	; 0x80098a <eeprom+0x3>
    2ed6:	3a 83       	std	Y+2, r19	; 0x02
    2ed8:	29 83       	std	Y+1, r18	; 0x01
    2eda:	89 01       	movw	r16, r18
    2edc:	00 0f       	add	r16, r16
    2ede:	11 1f       	adc	r17, r17
    2ee0:	00 0f       	add	r16, r16
    2ee2:	11 1f       	adc	r17, r17
    2ee4:	0d 56       	subi	r16, 0x6D	; 109
    2ee6:	16 4f       	sbci	r17, 0xF6	; 246
    2ee8:	68 2f       	mov	r22, r24
    2eea:	70 e0       	ldi	r23, 0x00	; 0
    2eec:	90 e0       	ldi	r25, 0x00	; 0
    2eee:	80 e0       	ldi	r24, 0x00	; 0
    2ef0:	0e 94 13 72 	call	0xe426	; 0xe426 <__floatunsisf>
    2ef4:	f8 01       	movw	r30, r16
    2ef6:	60 83       	st	Z, r22
    2ef8:	71 83       	std	Z+1, r23	; 0x01
    2efa:	82 83       	std	Z+2, r24	; 0x02
    2efc:	93 83       	std	Z+3, r25	; 0x03
    2efe:	29 81       	ldd	r18, Y+1	; 0x01
    2f00:	3a 81       	ldd	r19, Y+2	; 0x02
    2f02:	2f 5f       	subi	r18, 0xFF	; 255
    2f04:	3f 4f       	sbci	r19, 0xFF	; 255
    2f06:	30 93 8a 09 	sts	0x098A, r19	; 0x80098a <eeprom+0x3>
    2f0a:	20 93 89 09 	sts	0x0989, r18	; 0x800989 <eeprom+0x2>
    2f0e:	6a e0       	ldi	r22, 0x0A	; 10
    2f10:	70 e0       	ldi	r23, 0x00	; 0
    2f12:	80 e0       	ldi	r24, 0x00	; 0
    2f14:	90 e0       	ldi	r25, 0x00	; 0
    2f16:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    2f1a:	80 91 87 09 	lds	r24, 0x0987	; 0x800987 <eeprom>
    2f1e:	90 91 88 09 	lds	r25, 0x0988	; 0x800988 <eeprom+0x1>
    2f22:	01 96       	adiw	r24, 0x01	; 1
    2f24:	c7 cf       	rjmp	.-114    	; 0x2eb4 <decodeLocationFromEEPROM()+0x58>
    2f26:	84 e0       	ldi	r24, 0x04	; 4
    2f28:	90 e0       	ldi	r25, 0x00	; 0
    2f2a:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    2f2e:	40 90 8f 09 	lds	r4, 0x098F	; 0x80098f <eeprom+0x8>
    2f32:	50 90 90 09 	lds	r5, 0x0990	; 0x800990 <eeprom+0x9>
    2f36:	60 90 91 09 	lds	r6, 0x0991	; 0x800991 <eeprom+0xa>
    2f3a:	70 90 92 09 	lds	r7, 0x0992	; 0x800992 <eeprom+0xb>
    2f3e:	20 91 93 09 	lds	r18, 0x0993	; 0x800993 <eeprom+0xc>
    2f42:	30 91 94 09 	lds	r19, 0x0994	; 0x800994 <eeprom+0xd>
    2f46:	40 91 95 09 	lds	r20, 0x0995	; 0x800995 <eeprom+0xe>
    2f4a:	50 91 96 09 	lds	r21, 0x0996	; 0x800996 <eeprom+0xf>
    2f4e:	29 83       	std	Y+1, r18	; 0x01
    2f50:	3a 83       	std	Y+2, r19	; 0x02
    2f52:	4b 83       	std	Y+3, r20	; 0x03
    2f54:	5c 83       	std	Y+4, r21	; 0x04
    2f56:	80 90 97 09 	lds	r8, 0x0997	; 0x800997 <eeprom+0x10>
    2f5a:	90 90 98 09 	lds	r9, 0x0998	; 0x800998 <eeprom+0x11>
    2f5e:	a0 90 99 09 	lds	r10, 0x0999	; 0x800999 <eeprom+0x12>
    2f62:	b0 90 9a 09 	lds	r11, 0x099A	; 0x80099a <eeprom+0x13>
    2f66:	c0 90 9b 09 	lds	r12, 0x099B	; 0x80099b <eeprom+0x14>
    2f6a:	d0 90 9c 09 	lds	r13, 0x099C	; 0x80099c <eeprom+0x15>
    2f6e:	e0 90 9d 09 	lds	r14, 0x099D	; 0x80099d <eeprom+0x16>
    2f72:	f0 90 9e 09 	lds	r15, 0x099E	; 0x80099e <eeprom+0x17>
    2f76:	2a e0       	ldi	r18, 0x0A	; 10
    2f78:	37 ed       	ldi	r19, 0xD7	; 215
    2f7a:	43 e2       	ldi	r20, 0x23	; 35
    2f7c:	5c e3       	ldi	r21, 0x3C	; 60
    2f7e:	81 30       	cpi	r24, 0x01	; 1
    2f80:	09 f0       	breq	.+2      	; 0x2f84 <decodeLocationFromEEPROM()+0x128>
    2f82:	85 c0       	rjmp	.+266    	; 0x308e <decodeLocationFromEEPROM()+0x232>
    2f84:	69 81       	ldd	r22, Y+1	; 0x01
    2f86:	7a 81       	ldd	r23, Y+2	; 0x02
    2f88:	8b 81       	ldd	r24, Y+3	; 0x03
    2f8a:	9c 81       	ldd	r25, Y+4	; 0x04
    2f8c:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2f90:	a3 01       	movw	r20, r6
    2f92:	92 01       	movw	r18, r4
    2f94:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    2f98:	2b 01       	movw	r4, r22
    2f9a:	3c 01       	movw	r6, r24
    2f9c:	27 e1       	ldi	r18, 0x17	; 23
    2f9e:	37 eb       	ldi	r19, 0xB7	; 183
    2fa0:	41 ed       	ldi	r20, 0xD1	; 209
    2fa2:	58 e3       	ldi	r21, 0x38	; 56
    2fa4:	c5 01       	movw	r24, r10
    2fa6:	b4 01       	movw	r22, r8
    2fa8:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2fac:	9b 01       	movw	r18, r22
    2fae:	ac 01       	movw	r20, r24
    2fb0:	c3 01       	movw	r24, r6
    2fb2:	b2 01       	movw	r22, r4
    2fb4:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    2fb8:	4b 01       	movw	r8, r22
    2fba:	5c 01       	movw	r10, r24
    2fbc:	2d eb       	ldi	r18, 0xBD	; 189
    2fbe:	37 e3       	ldi	r19, 0x37	; 55
    2fc0:	46 e8       	ldi	r20, 0x86	; 134
    2fc2:	55 e3       	ldi	r21, 0x35	; 53
    2fc4:	c7 01       	movw	r24, r14
    2fc6:	b6 01       	movw	r22, r12
    2fc8:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    2fcc:	9b 01       	movw	r18, r22
    2fce:	ac 01       	movw	r20, r24
    2fd0:	c5 01       	movw	r24, r10
    2fd2:	b4 01       	movw	r22, r8
    2fd4:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    2fd8:	90 58       	subi	r25, 0x80	; 128
    2fda:	60 93 8b 09 	sts	0x098B, r22	; 0x80098b <eeprom+0x4>
    2fde:	70 93 8c 09 	sts	0x098C, r23	; 0x80098c <eeprom+0x5>
    2fe2:	80 93 8d 09 	sts	0x098D, r24	; 0x80098d <eeprom+0x6>
    2fe6:	90 93 8e 09 	sts	0x098E, r25	; 0x80098e <eeprom+0x7>
    2fea:	85 e0       	ldi	r24, 0x05	; 5
    2fec:	90 e0       	ldi	r25, 0x00	; 0
    2fee:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    2ff2:	68 2f       	mov	r22, r24
    2ff4:	70 e0       	ldi	r23, 0x00	; 0
    2ff6:	90 e0       	ldi	r25, 0x00	; 0
    2ff8:	80 e0       	ldi	r24, 0x00	; 0
    2ffa:	0e 94 13 72 	call	0xe426	; 0xe426 <__floatunsisf>
    2ffe:	60 93 a3 09 	sts	0x09A3, r22	; 0x8009a3 <eeprom+0x1c>
    3002:	70 93 a4 09 	sts	0x09A4, r23	; 0x8009a4 <eeprom+0x1d>
    3006:	80 93 a5 09 	sts	0x09A5, r24	; 0x8009a5 <eeprom+0x1e>
    300a:	90 93 a6 09 	sts	0x09A6, r25	; 0x8009a6 <eeprom+0x1f>
    300e:	10 92 8a 09 	sts	0x098A, r1	; 0x80098a <eeprom+0x3>
    3012:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <eeprom+0x2>
    3016:	86 e0       	ldi	r24, 0x06	; 6
    3018:	90 e0       	ldi	r25, 0x00	; 0
    301a:	90 93 88 09 	sts	0x0988, r25	; 0x800988 <eeprom+0x1>
    301e:	80 93 87 09 	sts	0x0987, r24	; 0x800987 <eeprom>
    3022:	80 91 87 09 	lds	r24, 0x0987	; 0x800987 <eeprom>
    3026:	90 91 88 09 	lds	r25, 0x0988	; 0x800988 <eeprom+0x1>
    302a:	89 30       	cpi	r24, 0x09	; 9
    302c:	91 05       	cpc	r25, r1
    302e:	0c f0       	brlt	.+2      	; 0x3032 <decodeLocationFromEEPROM()+0x1d6>
    3030:	59 c0       	rjmp	.+178    	; 0x30e4 <decodeLocationFromEEPROM()+0x288>
    3032:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    3036:	40 91 89 09 	lds	r20, 0x0989	; 0x800989 <eeprom+0x2>
    303a:	50 91 8a 09 	lds	r21, 0x098A	; 0x80098a <eeprom+0x3>
    303e:	5a 83       	std	Y+2, r21	; 0x02
    3040:	49 83       	std	Y+1, r20	; 0x01
    3042:	8a 01       	movw	r16, r20
    3044:	00 0f       	add	r16, r16
    3046:	11 1f       	adc	r17, r17
    3048:	00 0f       	add	r16, r16
    304a:	11 1f       	adc	r17, r17
    304c:	09 55       	subi	r16, 0x59	; 89
    304e:	16 4f       	sbci	r17, 0xF6	; 246
    3050:	68 2f       	mov	r22, r24
    3052:	70 e0       	ldi	r23, 0x00	; 0
    3054:	90 e0       	ldi	r25, 0x00	; 0
    3056:	80 e0       	ldi	r24, 0x00	; 0
    3058:	0e 94 13 72 	call	0xe426	; 0xe426 <__floatunsisf>
    305c:	f8 01       	movw	r30, r16
    305e:	60 83       	st	Z, r22
    3060:	71 83       	std	Z+1, r23	; 0x01
    3062:	82 83       	std	Z+2, r24	; 0x02
    3064:	93 83       	std	Z+3, r25	; 0x03
    3066:	29 81       	ldd	r18, Y+1	; 0x01
    3068:	3a 81       	ldd	r19, Y+2	; 0x02
    306a:	2f 5f       	subi	r18, 0xFF	; 255
    306c:	3f 4f       	sbci	r19, 0xFF	; 255
    306e:	30 93 8a 09 	sts	0x098A, r19	; 0x80098a <eeprom+0x3>
    3072:	20 93 89 09 	sts	0x0989, r18	; 0x800989 <eeprom+0x2>
    3076:	6a e0       	ldi	r22, 0x0A	; 10
    3078:	70 e0       	ldi	r23, 0x00	; 0
    307a:	80 e0       	ldi	r24, 0x00	; 0
    307c:	90 e0       	ldi	r25, 0x00	; 0
    307e:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    3082:	80 91 87 09 	lds	r24, 0x0987	; 0x800987 <eeprom>
    3086:	90 91 88 09 	lds	r25, 0x0988	; 0x800988 <eeprom+0x1>
    308a:	01 96       	adiw	r24, 0x01	; 1
    308c:	c6 cf       	rjmp	.-116    	; 0x301a <decodeLocationFromEEPROM()+0x1be>
    308e:	69 81       	ldd	r22, Y+1	; 0x01
    3090:	7a 81       	ldd	r23, Y+2	; 0x02
    3092:	8b 81       	ldd	r24, Y+3	; 0x03
    3094:	9c 81       	ldd	r25, Y+4	; 0x04
    3096:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    309a:	a3 01       	movw	r20, r6
    309c:	92 01       	movw	r18, r4
    309e:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    30a2:	2b 01       	movw	r4, r22
    30a4:	3c 01       	movw	r6, r24
    30a6:	27 e1       	ldi	r18, 0x17	; 23
    30a8:	37 eb       	ldi	r19, 0xB7	; 183
    30aa:	41 ed       	ldi	r20, 0xD1	; 209
    30ac:	58 e3       	ldi	r21, 0x38	; 56
    30ae:	c5 01       	movw	r24, r10
    30b0:	b4 01       	movw	r22, r8
    30b2:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    30b6:	9b 01       	movw	r18, r22
    30b8:	ac 01       	movw	r20, r24
    30ba:	c3 01       	movw	r24, r6
    30bc:	b2 01       	movw	r22, r4
    30be:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    30c2:	4b 01       	movw	r8, r22
    30c4:	5c 01       	movw	r10, r24
    30c6:	2d eb       	ldi	r18, 0xBD	; 189
    30c8:	37 e3       	ldi	r19, 0x37	; 55
    30ca:	46 e8       	ldi	r20, 0x86	; 134
    30cc:	55 e3       	ldi	r21, 0x35	; 53
    30ce:	c7 01       	movw	r24, r14
    30d0:	b6 01       	movw	r22, r12
    30d2:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    30d6:	9b 01       	movw	r18, r22
    30d8:	ac 01       	movw	r20, r24
    30da:	c5 01       	movw	r24, r10
    30dc:	b4 01       	movw	r22, r8
    30de:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    30e2:	7b cf       	rjmp	.-266    	; 0x2fda <decodeLocationFromEEPROM()+0x17e>
    30e4:	89 e0       	ldi	r24, 0x09	; 9
    30e6:	90 e0       	ldi	r25, 0x00	; 0
    30e8:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    30ec:	40 90 a3 09 	lds	r4, 0x09A3	; 0x8009a3 <eeprom+0x1c>
    30f0:	50 90 a4 09 	lds	r5, 0x09A4	; 0x8009a4 <eeprom+0x1d>
    30f4:	60 90 a5 09 	lds	r6, 0x09A5	; 0x8009a5 <eeprom+0x1e>
    30f8:	70 90 a6 09 	lds	r7, 0x09A6	; 0x8009a6 <eeprom+0x1f>
    30fc:	20 91 a7 09 	lds	r18, 0x09A7	; 0x8009a7 <eeprom+0x20>
    3100:	30 91 a8 09 	lds	r19, 0x09A8	; 0x8009a8 <eeprom+0x21>
    3104:	40 91 a9 09 	lds	r20, 0x09A9	; 0x8009a9 <eeprom+0x22>
    3108:	50 91 aa 09 	lds	r21, 0x09AA	; 0x8009aa <eeprom+0x23>
    310c:	29 83       	std	Y+1, r18	; 0x01
    310e:	3a 83       	std	Y+2, r19	; 0x02
    3110:	4b 83       	std	Y+3, r20	; 0x03
    3112:	5c 83       	std	Y+4, r21	; 0x04
    3114:	80 90 ab 09 	lds	r8, 0x09AB	; 0x8009ab <eeprom+0x24>
    3118:	90 90 ac 09 	lds	r9, 0x09AC	; 0x8009ac <eeprom+0x25>
    311c:	a0 90 ad 09 	lds	r10, 0x09AD	; 0x8009ad <eeprom+0x26>
    3120:	b0 90 ae 09 	lds	r11, 0x09AE	; 0x8009ae <eeprom+0x27>
    3124:	c0 90 af 09 	lds	r12, 0x09AF	; 0x8009af <eeprom+0x28>
    3128:	d0 90 b0 09 	lds	r13, 0x09B0	; 0x8009b0 <eeprom+0x29>
    312c:	e0 90 b1 09 	lds	r14, 0x09B1	; 0x8009b1 <eeprom+0x2a>
    3130:	f0 90 b2 09 	lds	r15, 0x09B2	; 0x8009b2 <eeprom+0x2b>
    3134:	2a e0       	ldi	r18, 0x0A	; 10
    3136:	37 ed       	ldi	r19, 0xD7	; 215
    3138:	43 e2       	ldi	r20, 0x23	; 35
    313a:	5c e3       	ldi	r21, 0x3C	; 60
    313c:	81 30       	cpi	r24, 0x01	; 1
    313e:	09 f0       	breq	.+2      	; 0x3142 <decodeLocationFromEEPROM()+0x2e6>
    3140:	48 c0       	rjmp	.+144    	; 0x31d2 <decodeLocationFromEEPROM()+0x376>
    3142:	69 81       	ldd	r22, Y+1	; 0x01
    3144:	7a 81       	ldd	r23, Y+2	; 0x02
    3146:	8b 81       	ldd	r24, Y+3	; 0x03
    3148:	9c 81       	ldd	r25, Y+4	; 0x04
    314a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    314e:	a3 01       	movw	r20, r6
    3150:	92 01       	movw	r18, r4
    3152:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    3156:	2b 01       	movw	r4, r22
    3158:	3c 01       	movw	r6, r24
    315a:	27 e1       	ldi	r18, 0x17	; 23
    315c:	37 eb       	ldi	r19, 0xB7	; 183
    315e:	41 ed       	ldi	r20, 0xD1	; 209
    3160:	58 e3       	ldi	r21, 0x38	; 56
    3162:	c5 01       	movw	r24, r10
    3164:	b4 01       	movw	r22, r8
    3166:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    316a:	9b 01       	movw	r18, r22
    316c:	ac 01       	movw	r20, r24
    316e:	c3 01       	movw	r24, r6
    3170:	b2 01       	movw	r22, r4
    3172:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    3176:	4b 01       	movw	r8, r22
    3178:	5c 01       	movw	r10, r24
    317a:	2d eb       	ldi	r18, 0xBD	; 189
    317c:	37 e3       	ldi	r19, 0x37	; 55
    317e:	46 e8       	ldi	r20, 0x86	; 134
    3180:	55 e3       	ldi	r21, 0x35	; 53
    3182:	c7 01       	movw	r24, r14
    3184:	b6 01       	movw	r22, r12
    3186:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    318a:	9b 01       	movw	r18, r22
    318c:	ac 01       	movw	r20, r24
    318e:	c5 01       	movw	r24, r10
    3190:	b4 01       	movw	r22, r8
    3192:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    3196:	90 58       	subi	r25, 0x80	; 128
    3198:	60 93 9f 09 	sts	0x099F, r22	; 0x80099f <eeprom+0x18>
    319c:	70 93 a0 09 	sts	0x09A0, r23	; 0x8009a0 <eeprom+0x19>
    31a0:	80 93 a1 09 	sts	0x09A1, r24	; 0x8009a1 <eeprom+0x1a>
    31a4:	90 93 a2 09 	sts	0x09A2, r25	; 0x8009a2 <eeprom+0x1b>
    31a8:	0f 90       	pop	r0
    31aa:	0f 90       	pop	r0
    31ac:	0f 90       	pop	r0
    31ae:	0f 90       	pop	r0
    31b0:	df 91       	pop	r29
    31b2:	cf 91       	pop	r28
    31b4:	1f 91       	pop	r17
    31b6:	0f 91       	pop	r16
    31b8:	ff 90       	pop	r15
    31ba:	ef 90       	pop	r14
    31bc:	df 90       	pop	r13
    31be:	cf 90       	pop	r12
    31c0:	bf 90       	pop	r11
    31c2:	af 90       	pop	r10
    31c4:	9f 90       	pop	r9
    31c6:	8f 90       	pop	r8
    31c8:	7f 90       	pop	r7
    31ca:	6f 90       	pop	r6
    31cc:	5f 90       	pop	r5
    31ce:	4f 90       	pop	r4
    31d0:	08 95       	ret
    31d2:	69 81       	ldd	r22, Y+1	; 0x01
    31d4:	7a 81       	ldd	r23, Y+2	; 0x02
    31d6:	8b 81       	ldd	r24, Y+3	; 0x03
    31d8:	9c 81       	ldd	r25, Y+4	; 0x04
    31da:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    31de:	a3 01       	movw	r20, r6
    31e0:	92 01       	movw	r18, r4
    31e2:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    31e6:	2b 01       	movw	r4, r22
    31e8:	3c 01       	movw	r6, r24
    31ea:	27 e1       	ldi	r18, 0x17	; 23
    31ec:	37 eb       	ldi	r19, 0xB7	; 183
    31ee:	41 ed       	ldi	r20, 0xD1	; 209
    31f0:	58 e3       	ldi	r21, 0x38	; 56
    31f2:	c5 01       	movw	r24, r10
    31f4:	b4 01       	movw	r22, r8
    31f6:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    31fa:	9b 01       	movw	r18, r22
    31fc:	ac 01       	movw	r20, r24
    31fe:	c3 01       	movw	r24, r6
    3200:	b2 01       	movw	r22, r4
    3202:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    3206:	4b 01       	movw	r8, r22
    3208:	5c 01       	movw	r10, r24
    320a:	2d eb       	ldi	r18, 0xBD	; 189
    320c:	37 e3       	ldi	r19, 0x37	; 55
    320e:	46 e8       	ldi	r20, 0x86	; 134
    3210:	55 e3       	ldi	r21, 0x35	; 53
    3212:	c7 01       	movw	r24, r14
    3214:	b6 01       	movw	r22, r12
    3216:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    321a:	9b 01       	movw	r18, r22
    321c:	ac 01       	movw	r20, r24
    321e:	c5 01       	movw	r24, r10
    3220:	b4 01       	movw	r22, r8
    3222:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    3226:	b8 cf       	rjmp	.-144    	; 0x3198 <decodeLocationFromEEPROM()+0x33c>

00003228 <WarningAlert()>:
_Z12WarningAlertv():
    3228:	0f 93       	push	r16
    322a:	1f 93       	push	r17
    322c:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    3230:	00 91 41 09 	lds	r16, 0x0941	; 0x800941 <SysClkTmr>
    3234:	10 91 42 09 	lds	r17, 0x0942	; 0x800942 <SysClkTmr+0x1>
    3238:	20 91 43 09 	lds	r18, 0x0943	; 0x800943 <SysClkTmr+0x2>
    323c:	30 91 44 09 	lds	r19, 0x0944	; 0x800944 <SysClkTmr+0x3>
    3240:	60 1b       	sub	r22, r16
    3242:	71 0b       	sbc	r23, r17
    3244:	82 0b       	sbc	r24, r18
    3246:	93 0b       	sbc	r25, r19
    3248:	64 3f       	cpi	r22, 0xF4	; 244
    324a:	71 40       	sbci	r23, 0x01	; 1
    324c:	81 05       	cpc	r24, r1
    324e:	91 05       	cpc	r25, r1
    3250:	30 f0       	brcs	.+12     	; 0x325e <WarningAlert()+0x36>
    3252:	80 91 45 09 	lds	r24, 0x0945	; 0x800945 <SysClkTmr+0x4>
    3256:	91 e0       	ldi	r25, 0x01	; 1
    3258:	89 27       	eor	r24, r25
    325a:	80 93 45 09 	sts	0x0945, r24	; 0x800945 <SysClkTmr+0x4>
    325e:	60 91 45 09 	lds	r22, 0x0945	; 0x800945 <SysClkTmr+0x4>
    3262:	80 e0       	ldi	r24, 0x00	; 0
    3264:	1f 91       	pop	r17
    3266:	0f 91       	pop	r16
    3268:	0c 94 a2 6d 	jmp	0xdb44	; 0xdb44 <digitalWrite>

0000326c <drawBitmap(int)>:
_Z10drawBitmapi():
    326c:	cf 92       	push	r12
    326e:	df 92       	push	r13
    3270:	ef 92       	push	r14
    3272:	ff 92       	push	r15
    3274:	0f 93       	push	r16
    3276:	1f 93       	push	r17
    3278:	cf 93       	push	r28
    327a:	df 93       	push	r29
    327c:	ec 01       	movw	r28, r24
    327e:	61 e0       	ldi	r22, 0x01	; 1
    3280:	81 e0       	ldi	r24, 0x01	; 1
    3282:	99 e0       	ldi	r25, 0x09	; 9
    3284:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
    3288:	81 e0       	ldi	r24, 0x01	; 1
    328a:	90 e0       	ldi	r25, 0x00	; 0
    328c:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <display+0x13>
    3290:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <display+0x12>
    3294:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <display+0x11>
    3298:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <display+0x10>
_Z10drawBitmapi():
    329c:	20 97       	sbiw	r28, 0x00	; 0
    329e:	09 f0       	breq	.+2      	; 0x32a2 <drawBitmap(int)+0x36>
    32a0:	45 c0       	rjmp	.+138    	; 0x332c <drawBitmap(int)+0xc0>
_ZN12Adafruit_GFX9setCursorEii():
    32a2:	86 e1       	ldi	r24, 0x16	; 22
    32a4:	90 e0       	ldi	r25, 0x00	; 0
    32a6:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    32aa:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
    32ae:	89 e3       	ldi	r24, 0x39	; 57
    32b0:	90 e0       	ldi	r25, 0x00	; 0
    32b2:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    32b6:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z10drawBitmapi():
    32ba:	61 ee       	ldi	r22, 0xE1	; 225
    32bc:	71 e0       	ldi	r23, 0x01	; 1
    32be:	81 e0       	ldi	r24, 0x01	; 1
    32c0:	99 e0       	ldi	r25, 0x09	; 9
    32c2:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    32c6:	cc 24       	eor	r12, r12
    32c8:	c3 94       	inc	r12
    32ca:	d1 2c       	mov	r13, r1
    32cc:	04 e3       	ldi	r16, 0x34	; 52
    32ce:	e0 2e       	mov	r14, r16
    32d0:	f1 2c       	mov	r15, r1
    32d2:	04 e3       	ldi	r16, 0x34	; 52
    32d4:	10 e0       	ldi	r17, 0x00	; 0
    32d6:	20 ec       	ldi	r18, 0xC0	; 192
    32d8:	37 e0       	ldi	r19, 0x07	; 7
    32da:	50 e0       	ldi	r21, 0x00	; 0
    32dc:	40 e0       	ldi	r20, 0x00	; 0
    32de:	66 e2       	ldi	r22, 0x26	; 38
    32e0:	70 e0       	ldi	r23, 0x00	; 0
    32e2:	81 e0       	ldi	r24, 0x01	; 1
    32e4:	99 e0       	ldi	r25, 0x09	; 9
    32e6:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
    32ea:	c5 30       	cpi	r28, 0x05	; 5
    32ec:	d1 05       	cpc	r29, r1
    32ee:	09 f0       	breq	.+2      	; 0x32f2 <drawBitmap(int)+0x86>
    32f0:	65 c0       	rjmp	.+202    	; 0x33bc <drawBitmap(int)+0x150>
_ZN12Adafruit_GFX9setCursorEii():
    32f2:	89 e1       	ldi	r24, 0x19	; 25
    32f4:	90 e0       	ldi	r25, 0x00	; 0
    32f6:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    32fa:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
    32fe:	89 e3       	ldi	r24, 0x39	; 57
    3300:	90 e0       	ldi	r25, 0x00	; 0
    3302:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3306:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z10drawBitmapi():
    330a:	6c e9       	ldi	r22, 0x9C	; 156
    330c:	71 e0       	ldi	r23, 0x01	; 1
    330e:	81 e0       	ldi	r24, 0x01	; 1
    3310:	99 e0       	ldi	r25, 0x09	; 9
    3312:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    3316:	cc 24       	eor	r12, r12
    3318:	c3 94       	inc	r12
    331a:	d1 2c       	mov	r13, r1
    331c:	34 e3       	ldi	r19, 0x34	; 52
    331e:	e3 2e       	mov	r14, r19
    3320:	f1 2c       	mov	r15, r1
    3322:	04 e3       	ldi	r16, 0x34	; 52
    3324:	10 e0       	ldi	r17, 0x00	; 0
    3326:	22 e2       	ldi	r18, 0x22	; 34
    3328:	31 e1       	ldi	r19, 0x11	; 17
    332a:	87 c0       	rjmp	.+270    	; 0x343a <drawBitmap(int)+0x1ce>
    332c:	c1 30       	cpi	r28, 0x01	; 1
    332e:	d1 05       	cpc	r29, r1
    3330:	e9 f4       	brne	.+58     	; 0x336c <drawBitmap(int)+0x100>
_ZN12Adafruit_GFX9setCursorEii():
    3332:	83 e1       	ldi	r24, 0x13	; 19
    3334:	90 e0       	ldi	r25, 0x00	; 0
    3336:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    333a:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
    333e:	89 e3       	ldi	r24, 0x39	; 57
    3340:	90 e0       	ldi	r25, 0x00	; 0
    3342:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3346:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z10drawBitmapi():
    334a:	61 ed       	ldi	r22, 0xD1	; 209
    334c:	71 e0       	ldi	r23, 0x01	; 1
    334e:	81 e0       	ldi	r24, 0x01	; 1
    3350:	99 e0       	ldi	r25, 0x09	; 9
    3352:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    3356:	cc 24       	eor	r12, r12
    3358:	c3 94       	inc	r12
    335a:	d1 2c       	mov	r13, r1
    335c:	b4 e3       	ldi	r27, 0x34	; 52
    335e:	eb 2e       	mov	r14, r27
    3360:	f1 2c       	mov	r15, r1
    3362:	04 e3       	ldi	r16, 0x34	; 52
    3364:	10 e0       	ldi	r17, 0x00	; 0
    3366:	28 e2       	ldi	r18, 0x28	; 40
    3368:	36 e0       	ldi	r19, 0x06	; 6
    336a:	b7 cf       	rjmp	.-146    	; 0x32da <drawBitmap(int)+0x6e>
    336c:	c2 30       	cpi	r28, 0x02	; 2
    336e:	d1 05       	cpc	r29, r1
    3370:	09 f0       	breq	.+2      	; 0x3374 <drawBitmap(int)+0x108>
    3372:	44 c0       	rjmp	.+136    	; 0x33fc <drawBitmap(int)+0x190>
_ZN12Adafruit_GFX9setCursorEii():
    3374:	85 e2       	ldi	r24, 0x25	; 37
    3376:	90 e0       	ldi	r25, 0x00	; 0
    3378:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    337c:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
    3380:	89 e3       	ldi	r24, 0x39	; 57
    3382:	90 e0       	ldi	r25, 0x00	; 0
    3384:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3388:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z10drawBitmapi():
    338c:	67 ec       	ldi	r22, 0xC7	; 199
    338e:	71 e0       	ldi	r23, 0x01	; 1
    3390:	81 e0       	ldi	r24, 0x01	; 1
    3392:	99 e0       	ldi	r25, 0x09	; 9
    3394:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    3398:	cc 24       	eor	r12, r12
    339a:	c3 94       	inc	r12
    339c:	d1 2c       	mov	r13, r1
    339e:	f4 e3       	ldi	r31, 0x34	; 52
    33a0:	ef 2e       	mov	r14, r31
    33a2:	f1 2c       	mov	r15, r1
    33a4:	04 e3       	ldi	r16, 0x34	; 52
    33a6:	10 e0       	ldi	r17, 0x00	; 0
    33a8:	2c eb       	ldi	r18, 0xBC	; 188
    33aa:	34 e0       	ldi	r19, 0x04	; 4
    33ac:	50 e0       	ldi	r21, 0x00	; 0
    33ae:	40 e0       	ldi	r20, 0x00	; 0
    33b0:	66 e2       	ldi	r22, 0x26	; 38
    33b2:	70 e0       	ldi	r23, 0x00	; 0
    33b4:	81 e0       	ldi	r24, 0x01	; 1
    33b6:	99 e0       	ldi	r25, 0x09	; 9
    33b8:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
    33bc:	26 97       	sbiw	r28, 0x06	; 6
    33be:	09 f0       	breq	.+2      	; 0x33c2 <drawBitmap(int)+0x156>
    33c0:	44 c0       	rjmp	.+136    	; 0x344a <drawBitmap(int)+0x1de>
_ZN12Adafruit_GFX9setCursorEii():
    33c2:	8d e0       	ldi	r24, 0x0D	; 13
    33c4:	90 e0       	ldi	r25, 0x00	; 0
    33c6:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    33ca:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
    33ce:	89 e3       	ldi	r24, 0x39	; 57
    33d0:	90 e0       	ldi	r25, 0x00	; 0
    33d2:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    33d6:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z10drawBitmapi():
    33da:	6a e8       	ldi	r22, 0x8A	; 138
    33dc:	71 e0       	ldi	r23, 0x01	; 1
    33de:	81 e0       	ldi	r24, 0x01	; 1
    33e0:	99 e0       	ldi	r25, 0x09	; 9
    33e2:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    33e6:	cc 24       	eor	r12, r12
    33e8:	c3 94       	inc	r12
    33ea:	d1 2c       	mov	r13, r1
    33ec:	94 e3       	ldi	r25, 0x34	; 52
    33ee:	e9 2e       	mov	r14, r25
    33f0:	f1 2c       	mov	r15, r1
    33f2:	04 e3       	ldi	r16, 0x34	; 52
    33f4:	10 e0       	ldi	r17, 0x00	; 0
    33f6:	2e e8       	ldi	r18, 0x8E	; 142
    33f8:	32 e1       	ldi	r19, 0x12	; 18
    33fa:	1f c0       	rjmp	.+62     	; 0x343a <drawBitmap(int)+0x1ce>
    33fc:	c3 30       	cpi	r28, 0x03	; 3
    33fe:	d1 05       	cpc	r29, r1
    3400:	81 f5       	brne	.+96     	; 0x3462 <drawBitmap(int)+0x1f6>
_ZN12Adafruit_GFX9setCursorEii():
    3402:	89 e1       	ldi	r24, 0x19	; 25
    3404:	90 e0       	ldi	r25, 0x00	; 0
    3406:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    340a:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
    340e:	89 e3       	ldi	r24, 0x39	; 57
    3410:	90 e0       	ldi	r25, 0x00	; 0
    3412:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3416:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z10drawBitmapi():
    341a:	69 eb       	ldi	r22, 0xB9	; 185
    341c:	71 e0       	ldi	r23, 0x01	; 1
    341e:	81 e0       	ldi	r24, 0x01	; 1
    3420:	99 e0       	ldi	r25, 0x09	; 9
    3422:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    3426:	cc 24       	eor	r12, r12
    3428:	c3 94       	inc	r12
    342a:	d1 2c       	mov	r13, r1
    342c:	74 e3       	ldi	r23, 0x34	; 52
    342e:	e7 2e       	mov	r14, r23
    3430:	f1 2c       	mov	r15, r1
    3432:	04 e3       	ldi	r16, 0x34	; 52
    3434:	10 e0       	ldi	r17, 0x00	; 0
    3436:	2a e3       	ldi	r18, 0x3A	; 58
    3438:	39 e0       	ldi	r19, 0x09	; 9
    343a:	50 e0       	ldi	r21, 0x00	; 0
    343c:	40 e0       	ldi	r20, 0x00	; 0
    343e:	66 e2       	ldi	r22, 0x26	; 38
    3440:	70 e0       	ldi	r23, 0x00	; 0
    3442:	81 e0       	ldi	r24, 0x01	; 1
    3444:	99 e0       	ldi	r25, 0x09	; 9
    3446:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
    344a:	81 e0       	ldi	r24, 0x01	; 1
    344c:	99 e0       	ldi	r25, 0x09	; 9
    344e:	df 91       	pop	r29
    3450:	cf 91       	pop	r28
    3452:	1f 91       	pop	r17
    3454:	0f 91       	pop	r16
    3456:	ff 90       	pop	r15
    3458:	ef 90       	pop	r14
    345a:	df 90       	pop	r13
    345c:	cf 90       	pop	r12
    345e:	0c 94 5f 52 	jmp	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    3462:	c4 30       	cpi	r28, 0x04	; 4
    3464:	d1 05       	cpc	r29, r1
    3466:	09 f0       	breq	.+2      	; 0x346a <drawBitmap(int)+0x1fe>
    3468:	40 cf       	rjmp	.-384    	; 0x32ea <drawBitmap(int)+0x7e>
_ZN12Adafruit_GFX9setCursorEii():
    346a:	86 e1       	ldi	r24, 0x16	; 22
    346c:	90 e0       	ldi	r25, 0x00	; 0
    346e:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    3472:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
    3476:	89 e3       	ldi	r24, 0x39	; 57
    3478:	90 e0       	ldi	r25, 0x00	; 0
    347a:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    347e:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z10drawBitmapi():
    3482:	6a ea       	ldi	r22, 0xAA	; 170
    3484:	71 e0       	ldi	r23, 0x01	; 1
    3486:	81 e0       	ldi	r24, 0x01	; 1
    3488:	99 e0       	ldi	r25, 0x09	; 9
    348a:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    348e:	cc 24       	eor	r12, r12
    3490:	c3 94       	inc	r12
    3492:	d1 2c       	mov	r13, r1
    3494:	54 e3       	ldi	r21, 0x34	; 52
    3496:	e5 2e       	mov	r14, r21
    3498:	f1 2c       	mov	r15, r1
    349a:	04 e3       	ldi	r16, 0x34	; 52
    349c:	10 e0       	ldi	r17, 0x00	; 0
    349e:	26 ea       	ldi	r18, 0xA6	; 166
    34a0:	3a e0       	ldi	r19, 0x0A	; 10
    34a2:	cb cf       	rjmp	.-106    	; 0x343a <drawBitmap(int)+0x1ce>

000034a4 <ShowMenuIcon(int)>:
_Z12ShowMenuIconi():
    34a4:	cf 93       	push	r28
    34a6:	df 93       	push	r29
    34a8:	20 91 4d 09 	lds	r18, 0x094D	; 0x80094d <menu+0x7>
    34ac:	22 23       	and	r18, r18
    34ae:	a1 f0       	breq	.+40     	; 0x34d8 <ShowMenuIcon(int)+0x34>
    34b0:	ec 01       	movw	r28, r24
    34b2:	81 e0       	ldi	r24, 0x01	; 1
    34b4:	99 e0       	ldi	r25, 0x09	; 9
    34b6:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    34ba:	ce 01       	movw	r24, r28
    34bc:	0e 94 36 19 	call	0x326c	; 0x326c <drawBitmap(int)>
    34c0:	68 ee       	ldi	r22, 0xE8	; 232
    34c2:	73 e0       	ldi	r23, 0x03	; 3
    34c4:	80 e0       	ldi	r24, 0x00	; 0
    34c6:	90 e0       	ldi	r25, 0x00	; 0
    34c8:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    34cc:	81 e0       	ldi	r24, 0x01	; 1
    34ce:	99 e0       	ldi	r25, 0x09	; 9
    34d0:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    34d4:	10 92 4d 09 	sts	0x094D, r1	; 0x80094d <menu+0x7>
    34d8:	81 e0       	ldi	r24, 0x01	; 1
    34da:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
    34de:	df 91       	pop	r29
    34e0:	cf 91       	pop	r28
    34e2:	08 95       	ret

000034e4 <gForceGraph()>:
_Z11gForceGraphv():
    34e4:	ef 92       	push	r14
    34e6:	ff 92       	push	r15
    34e8:	0f 93       	push	r16
    34ea:	1f 93       	push	r17
    34ec:	cf 93       	push	r28
    34ee:	df 93       	push	r29
    34f0:	81 e0       	ldi	r24, 0x01	; 1
    34f2:	99 e0       	ldi	r25, 0x09	; 9
    34f4:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    34f8:	83 ed       	ldi	r24, 0xD3	; 211
    34fa:	98 e0       	ldi	r25, 0x08	; 8
    34fc:	0e 94 08 60 	call	0xc010	; 0xc010 <LSM303::read()>
    3500:	40 91 d3 08 	lds	r20, 0x08D3	; 0x8008d3 <compass>
    3504:	50 91 d4 08 	lds	r21, 0x08D4	; 0x8008d4 <compass+0x1>
    3508:	80 91 b6 09 	lds	r24, 0x09B6	; 0x8009b6 <gForceData+0x3>
    350c:	90 91 b7 09 	lds	r25, 0x09B7	; 0x8009b7 <gForceData+0x4>
    3510:	84 17       	cp	r24, r20
    3512:	95 07       	cpc	r25, r21
    3514:	0c f4       	brge	.+2      	; 0x3518 <gForceGraph()+0x34>
    3516:	ca 01       	movw	r24, r20
    3518:	90 93 b7 09 	sts	0x09B7, r25	; 0x8009b7 <gForceData+0x4>
    351c:	80 93 b6 09 	sts	0x09B6, r24	; 0x8009b6 <gForceData+0x3>
    3520:	20 91 d5 08 	lds	r18, 0x08D5	; 0x8008d5 <compass+0x2>
    3524:	30 91 d6 08 	lds	r19, 0x08D6	; 0x8008d6 <compass+0x3>
    3528:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <gForceData+0x5>
    352c:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <gForceData+0x6>
    3530:	82 17       	cp	r24, r18
    3532:	93 07       	cpc	r25, r19
    3534:	0c f4       	brge	.+2      	; 0x3538 <gForceGraph()+0x54>
    3536:	c9 01       	movw	r24, r18
    3538:	90 93 b9 09 	sts	0x09B9, r25	; 0x8009b9 <gForceData+0x6>
    353c:	80 93 b8 09 	sts	0x09B8, r24	; 0x8009b8 <gForceData+0x5>
    3540:	80 91 d7 08 	lds	r24, 0x08D7	; 0x8008d7 <compass+0x4>
    3544:	90 91 d8 08 	lds	r25, 0x08D8	; 0x8008d8 <compass+0x5>
    3548:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <gForceData+0x7>
    354c:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <gForceData+0x8>
    3550:	68 17       	cp	r22, r24
    3552:	79 07       	cpc	r23, r25
    3554:	0c f4       	brge	.+2      	; 0x3558 <gForceGraph()+0x74>
    3556:	bc 01       	movw	r22, r24
    3558:	70 93 bb 09 	sts	0x09BB, r23	; 0x8009bb <gForceData+0x8>
    355c:	60 93 ba 09 	sts	0x09BA, r22	; 0x8009ba <gForceData+0x7>
    3560:	60 91 bc 09 	lds	r22, 0x09BC	; 0x8009bc <gForceData+0x9>
    3564:	70 91 bd 09 	lds	r23, 0x09BD	; 0x8009bd <gForceData+0xa>
    3568:	46 17       	cp	r20, r22
    356a:	57 07       	cpc	r21, r23
    356c:	0c f4       	brge	.+2      	; 0x3570 <gForceGraph()+0x8c>
    356e:	ba 01       	movw	r22, r20
    3570:	70 93 bd 09 	sts	0x09BD, r23	; 0x8009bd <gForceData+0xa>
    3574:	60 93 bc 09 	sts	0x09BC, r22	; 0x8009bc <gForceData+0x9>
    3578:	40 91 be 09 	lds	r20, 0x09BE	; 0x8009be <gForceData+0xb>
    357c:	50 91 bf 09 	lds	r21, 0x09BF	; 0x8009bf <gForceData+0xc>
    3580:	24 17       	cp	r18, r20
    3582:	35 07       	cpc	r19, r21
    3584:	0c f4       	brge	.+2      	; 0x3588 <gForceGraph()+0xa4>
    3586:	a9 01       	movw	r20, r18
    3588:	50 93 bf 09 	sts	0x09BF, r21	; 0x8009bf <gForceData+0xc>
    358c:	40 93 be 09 	sts	0x09BE, r20	; 0x8009be <gForceData+0xb>
    3590:	20 91 c0 09 	lds	r18, 0x09C0	; 0x8009c0 <gForceData+0xd>
    3594:	30 91 c1 09 	lds	r19, 0x09C1	; 0x8009c1 <gForceData+0xe>
    3598:	82 17       	cp	r24, r18
    359a:	93 07       	cpc	r25, r19
    359c:	0c f4       	brge	.+2      	; 0x35a0 <gForceGraph()+0xbc>
    359e:	9c 01       	movw	r18, r24
    35a0:	30 93 c1 09 	sts	0x09C1, r19	; 0x8009c1 <gForceData+0xe>
    35a4:	20 93 c0 09 	sts	0x09C0, r18	; 0x8009c0 <gForceData+0xd>
_ZN12Adafruit_GFX9setCursorEii():
    35a8:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <display+0xd>
    35ac:	10 92 0d 09 	sts	0x090D, r1	; 0x80090d <display+0xc>
    35b0:	10 92 10 09 	sts	0x0910, r1	; 0x800910 <display+0xf>
    35b4:	10 92 0f 09 	sts	0x090F, r1	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    35b8:	65 ee       	ldi	r22, 0xE5	; 229
    35ba:	71 e0       	ldi	r23, 0x01	; 1
    35bc:	81 e0       	ldi	r24, 0x01	; 1
    35be:	99 e0       	ldi	r25, 0x09	; 9
    35c0:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
_ZN12Adafruit_GFX9setCursorEii():
    35c4:	06 e2       	ldi	r16, 0x26	; 38
    35c6:	10 e0       	ldi	r17, 0x00	; 0
    35c8:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    35cc:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
    35d0:	10 92 10 09 	sts	0x0910, r1	; 0x800910 <display+0xf>
    35d4:	10 92 0f 09 	sts	0x090F, r1	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    35d8:	68 ee       	ldi	r22, 0xE8	; 232
    35da:	71 e0       	ldi	r23, 0x01	; 1
    35dc:	81 e0       	ldi	r24, 0x01	; 1
    35de:	99 e0       	ldi	r25, 0x09	; 9
    35e0:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
_ZN12Adafruit_GFX9setCursorEii():
    35e4:	cc e4       	ldi	r28, 0x4C	; 76
    35e6:	d0 e0       	ldi	r29, 0x00	; 0
    35e8:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    35ec:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
    35f0:	10 92 10 09 	sts	0x0910, r1	; 0x800910 <display+0xf>
    35f4:	10 92 0f 09 	sts	0x090F, r1	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    35f8:	6c ee       	ldi	r22, 0xEC	; 236
    35fa:	71 e0       	ldi	r23, 0x01	; 1
    35fc:	81 e0       	ldi	r24, 0x01	; 1
    35fe:	99 e0       	ldi	r25, 0x09	; 9
    3600:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
_ZN12Adafruit_GFX9setCursorEii():
    3604:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <display+0xd>
    3608:	10 92 0d 09 	sts	0x090D, r1	; 0x80090d <display+0xc>
    360c:	8a e0       	ldi	r24, 0x0A	; 10
    360e:	e8 2e       	mov	r14, r24
    3610:	f1 2c       	mov	r15, r1
    3612:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    3616:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    361a:	60 91 d3 08 	lds	r22, 0x08D3	; 0x8008d3 <compass>
    361e:	70 91 d4 08 	lds	r23, 0x08D4	; 0x8008d4 <compass+0x1>
    3622:	07 2e       	mov	r0, r23
    3624:	00 0c       	add	r0, r0
    3626:	88 0b       	sbc	r24, r24
    3628:	99 0b       	sbc	r25, r25
    362a:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    362e:	20 e0       	ldi	r18, 0x00	; 0
    3630:	30 e0       	ldi	r19, 0x00	; 0
    3632:	40 e8       	ldi	r20, 0x80	; 128
    3634:	58 e3       	ldi	r21, 0x38	; 56
    3636:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    363a:	ab 01       	movw	r20, r22
    363c:	bc 01       	movw	r22, r24
    363e:	22 e0       	ldi	r18, 0x02	; 2
    3640:	30 e0       	ldi	r19, 0x00	; 0
    3642:	81 e0       	ldi	r24, 0x01	; 1
    3644:	99 e0       	ldi	r25, 0x09	; 9
    3646:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
    364a:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    364e:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
    3652:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    3656:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    365a:	60 91 bc 09 	lds	r22, 0x09BC	; 0x8009bc <gForceData+0x9>
    365e:	70 91 bd 09 	lds	r23, 0x09BD	; 0x8009bd <gForceData+0xa>
    3662:	07 2e       	mov	r0, r23
    3664:	00 0c       	add	r0, r0
    3666:	88 0b       	sbc	r24, r24
    3668:	99 0b       	sbc	r25, r25
    366a:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    366e:	20 e0       	ldi	r18, 0x00	; 0
    3670:	30 e0       	ldi	r19, 0x00	; 0
    3672:	40 e8       	ldi	r20, 0x80	; 128
    3674:	58 e3       	ldi	r21, 0x38	; 56
    3676:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    367a:	ab 01       	movw	r20, r22
    367c:	bc 01       	movw	r22, r24
    367e:	22 e0       	ldi	r18, 0x02	; 2
    3680:	30 e0       	ldi	r19, 0x00	; 0
    3682:	81 e0       	ldi	r24, 0x01	; 1
    3684:	99 e0       	ldi	r25, 0x09	; 9
    3686:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
    368a:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    368e:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
    3692:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    3696:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    369a:	60 91 b6 09 	lds	r22, 0x09B6	; 0x8009b6 <gForceData+0x3>
    369e:	70 91 b7 09 	lds	r23, 0x09B7	; 0x8009b7 <gForceData+0x4>
    36a2:	07 2e       	mov	r0, r23
    36a4:	00 0c       	add	r0, r0
    36a6:	88 0b       	sbc	r24, r24
    36a8:	99 0b       	sbc	r25, r25
    36aa:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    36ae:	20 e0       	ldi	r18, 0x00	; 0
    36b0:	30 e0       	ldi	r19, 0x00	; 0
    36b2:	40 e8       	ldi	r20, 0x80	; 128
    36b4:	58 e3       	ldi	r21, 0x38	; 56
    36b6:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    36ba:	ab 01       	movw	r20, r22
    36bc:	bc 01       	movw	r22, r24
    36be:	22 e0       	ldi	r18, 0x02	; 2
    36c0:	30 e0       	ldi	r19, 0x00	; 0
    36c2:	81 e0       	ldi	r24, 0x01	; 1
    36c4:	99 e0       	ldi	r25, 0x09	; 9
    36c6:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
    36ca:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <display+0xd>
    36ce:	10 92 0d 09 	sts	0x090D, r1	; 0x80090d <display+0xc>
    36d2:	84 e1       	ldi	r24, 0x14	; 20
    36d4:	90 e0       	ldi	r25, 0x00	; 0
    36d6:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    36da:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    36de:	60 ef       	ldi	r22, 0xF0	; 240
    36e0:	71 e0       	ldi	r23, 0x01	; 1
    36e2:	81 e0       	ldi	r24, 0x01	; 1
    36e4:	99 e0       	ldi	r25, 0x09	; 9
    36e6:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
_ZN12Adafruit_GFX9setCursorEii():
    36ea:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <display+0xd>
    36ee:	10 92 0d 09 	sts	0x090D, r1	; 0x80090d <display+0xc>
    36f2:	9e e1       	ldi	r25, 0x1E	; 30
    36f4:	e9 2e       	mov	r14, r25
    36f6:	f1 2c       	mov	r15, r1
    36f8:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    36fc:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    3700:	60 91 d5 08 	lds	r22, 0x08D5	; 0x8008d5 <compass+0x2>
    3704:	70 91 d6 08 	lds	r23, 0x08D6	; 0x8008d6 <compass+0x3>
    3708:	07 2e       	mov	r0, r23
    370a:	00 0c       	add	r0, r0
    370c:	88 0b       	sbc	r24, r24
    370e:	99 0b       	sbc	r25, r25
    3710:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    3714:	20 e0       	ldi	r18, 0x00	; 0
    3716:	30 e0       	ldi	r19, 0x00	; 0
    3718:	40 e8       	ldi	r20, 0x80	; 128
    371a:	58 e3       	ldi	r21, 0x38	; 56
    371c:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    3720:	ab 01       	movw	r20, r22
    3722:	bc 01       	movw	r22, r24
    3724:	22 e0       	ldi	r18, 0x02	; 2
    3726:	30 e0       	ldi	r19, 0x00	; 0
    3728:	81 e0       	ldi	r24, 0x01	; 1
    372a:	99 e0       	ldi	r25, 0x09	; 9
    372c:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
    3730:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    3734:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
    3738:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    373c:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    3740:	60 91 be 09 	lds	r22, 0x09BE	; 0x8009be <gForceData+0xb>
    3744:	70 91 bf 09 	lds	r23, 0x09BF	; 0x8009bf <gForceData+0xc>
    3748:	07 2e       	mov	r0, r23
    374a:	00 0c       	add	r0, r0
    374c:	88 0b       	sbc	r24, r24
    374e:	99 0b       	sbc	r25, r25
    3750:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    3754:	20 e0       	ldi	r18, 0x00	; 0
    3756:	30 e0       	ldi	r19, 0x00	; 0
    3758:	40 e8       	ldi	r20, 0x80	; 128
    375a:	58 e3       	ldi	r21, 0x38	; 56
    375c:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    3760:	ab 01       	movw	r20, r22
    3762:	bc 01       	movw	r22, r24
    3764:	22 e0       	ldi	r18, 0x02	; 2
    3766:	30 e0       	ldi	r19, 0x00	; 0
    3768:	81 e0       	ldi	r24, 0x01	; 1
    376a:	99 e0       	ldi	r25, 0x09	; 9
    376c:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
    3770:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    3774:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
    3778:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    377c:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    3780:	60 91 b8 09 	lds	r22, 0x09B8	; 0x8009b8 <gForceData+0x5>
    3784:	70 91 b9 09 	lds	r23, 0x09B9	; 0x8009b9 <gForceData+0x6>
    3788:	07 2e       	mov	r0, r23
    378a:	00 0c       	add	r0, r0
    378c:	88 0b       	sbc	r24, r24
    378e:	99 0b       	sbc	r25, r25
    3790:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    3794:	20 e0       	ldi	r18, 0x00	; 0
    3796:	30 e0       	ldi	r19, 0x00	; 0
    3798:	40 e8       	ldi	r20, 0x80	; 128
    379a:	58 e3       	ldi	r21, 0x38	; 56
    379c:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    37a0:	ab 01       	movw	r20, r22
    37a2:	bc 01       	movw	r22, r24
    37a4:	22 e0       	ldi	r18, 0x02	; 2
    37a6:	30 e0       	ldi	r19, 0x00	; 0
    37a8:	81 e0       	ldi	r24, 0x01	; 1
    37aa:	99 e0       	ldi	r25, 0x09	; 9
    37ac:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
    37b0:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <display+0xd>
    37b4:	10 92 0d 09 	sts	0x090D, r1	; 0x80090d <display+0xc>
    37b8:	88 e2       	ldi	r24, 0x28	; 40
    37ba:	90 e0       	ldi	r25, 0x00	; 0
    37bc:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    37c0:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    37c4:	63 ef       	ldi	r22, 0xF3	; 243
    37c6:	71 e0       	ldi	r23, 0x01	; 1
    37c8:	81 e0       	ldi	r24, 0x01	; 1
    37ca:	99 e0       	ldi	r25, 0x09	; 9
    37cc:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
_ZN12Adafruit_GFX9setCursorEii():
    37d0:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <display+0xd>
    37d4:	10 92 0d 09 	sts	0x090D, r1	; 0x80090d <display+0xc>
    37d8:	22 e3       	ldi	r18, 0x32	; 50
    37da:	e2 2e       	mov	r14, r18
    37dc:	f1 2c       	mov	r15, r1
    37de:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    37e2:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    37e6:	60 91 d7 08 	lds	r22, 0x08D7	; 0x8008d7 <compass+0x4>
    37ea:	70 91 d8 08 	lds	r23, 0x08D8	; 0x8008d8 <compass+0x5>
    37ee:	07 2e       	mov	r0, r23
    37f0:	00 0c       	add	r0, r0
    37f2:	88 0b       	sbc	r24, r24
    37f4:	99 0b       	sbc	r25, r25
    37f6:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    37fa:	20 e0       	ldi	r18, 0x00	; 0
    37fc:	30 e0       	ldi	r19, 0x00	; 0
    37fe:	40 e8       	ldi	r20, 0x80	; 128
    3800:	58 e3       	ldi	r21, 0x38	; 56
    3802:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    3806:	ab 01       	movw	r20, r22
    3808:	bc 01       	movw	r22, r24
    380a:	22 e0       	ldi	r18, 0x02	; 2
    380c:	30 e0       	ldi	r19, 0x00	; 0
    380e:	81 e0       	ldi	r24, 0x01	; 1
    3810:	99 e0       	ldi	r25, 0x09	; 9
    3812:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
    3816:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    381a:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
    381e:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    3822:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    3826:	60 91 c0 09 	lds	r22, 0x09C0	; 0x8009c0 <gForceData+0xd>
    382a:	70 91 c1 09 	lds	r23, 0x09C1	; 0x8009c1 <gForceData+0xe>
    382e:	07 2e       	mov	r0, r23
    3830:	00 0c       	add	r0, r0
    3832:	88 0b       	sbc	r24, r24
    3834:	99 0b       	sbc	r25, r25
    3836:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    383a:	20 e0       	ldi	r18, 0x00	; 0
    383c:	30 e0       	ldi	r19, 0x00	; 0
    383e:	40 e8       	ldi	r20, 0x80	; 128
    3840:	58 e3       	ldi	r21, 0x38	; 56
    3842:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    3846:	ab 01       	movw	r20, r22
    3848:	bc 01       	movw	r22, r24
    384a:	22 e0       	ldi	r18, 0x02	; 2
    384c:	30 e0       	ldi	r19, 0x00	; 0
    384e:	81 e0       	ldi	r24, 0x01	; 1
    3850:	99 e0       	ldi	r25, 0x09	; 9
    3852:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
    3856:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    385a:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
    385e:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    3862:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z11gForceGraphv():
    3866:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <gForceData+0x7>
    386a:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <gForceData+0x8>
    386e:	07 2e       	mov	r0, r23
    3870:	00 0c       	add	r0, r0
    3872:	88 0b       	sbc	r24, r24
    3874:	99 0b       	sbc	r25, r25
    3876:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    387a:	20 e0       	ldi	r18, 0x00	; 0
    387c:	30 e0       	ldi	r19, 0x00	; 0
    387e:	40 e8       	ldi	r20, 0x80	; 128
    3880:	58 e3       	ldi	r21, 0x38	; 56
    3882:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    3886:	ab 01       	movw	r20, r22
    3888:	bc 01       	movw	r22, r24
    388a:	22 e0       	ldi	r18, 0x02	; 2
    388c:	30 e0       	ldi	r19, 0x00	; 0
    388e:	81 e0       	ldi	r24, 0x01	; 1
    3890:	99 e0       	ldi	r25, 0x09	; 9
    3892:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    3896:	81 e0       	ldi	r24, 0x01	; 1
    3898:	99 e0       	ldi	r25, 0x09	; 9
    389a:	df 91       	pop	r29
    389c:	cf 91       	pop	r28
    389e:	1f 91       	pop	r17
    38a0:	0f 91       	pop	r16
    38a2:	ff 90       	pop	r15
    38a4:	ef 90       	pop	r14
    38a6:	0c 94 5f 52 	jmp	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>

000038aa <_GLOBAL__sub_I_gForceData>:
_GLOBAL__sub_I_gForceData():
    38aa:	8f 92       	push	r8
    38ac:	9f 92       	push	r9
    38ae:	af 92       	push	r10
    38b0:	bf 92       	push	r11
    38b2:	cf 92       	push	r12
    38b4:	df 92       	push	r13
    38b6:	ef 92       	push	r14
    38b8:	ff 92       	push	r15
    38ba:	0f 93       	push	r16
_ZN8eeprom_sC4Ev():
    38bc:	e7 e8       	ldi	r30, 0x87	; 135
    38be:	f9 e0       	ldi	r31, 0x09	; 9
    38c0:	11 82       	std	Z+1, r1	; 0x01
    38c2:	10 82       	st	Z, r1
    38c4:	13 82       	std	Z+3, r1	; 0x03
    38c6:	12 82       	std	Z+2, r1	; 0x02
_ZN6menu_sC4Ev():
    38c8:	e6 e4       	ldi	r30, 0x46	; 70
    38ca:	f9 e0       	ldi	r31, 0x09	; 9
    38cc:	11 82       	std	Z+1, r1	; 0x01
    38ce:	10 82       	st	Z, r1
    38d0:	12 82       	std	Z+2, r1	; 0x02
    38d2:	14 82       	std	Z+4, r1	; 0x04
    38d4:	13 82       	std	Z+3, r1	; 0x03
    38d6:	16 82       	std	Z+6, r1	; 0x06
    38d8:	15 82       	std	Z+5, r1	; 0x05
    38da:	17 82       	std	Z+7, r1	; 0x07
    38dc:	10 86       	std	Z+8, r1	; 0x08
    38de:	11 86       	std	Z+9, r1	; 0x09
    38e0:	12 86       	std	Z+10, r1	; 0x0a
    38e2:	13 86       	std	Z+11, r1	; 0x0b
    38e4:	14 86       	std	Z+12, r1	; 0x0c
    38e6:	80 e3       	ldi	r24, 0x30	; 48
    38e8:	ed e9       	ldi	r30, 0x9D	; 157
    38ea:	f1 e0       	ldi	r31, 0x01	; 1
    38ec:	a7 e5       	ldi	r26, 0x57	; 87
    38ee:	b9 e0       	ldi	r27, 0x09	; 9
    38f0:	01 90       	ld	r0, Z+
    38f2:	0d 92       	st	X+, r0
    38f4:	8a 95       	dec	r24
    38f6:	e1 f7       	brne	.-8      	; 0x38f0 <_GLOBAL__sub_I_gForceData+0x46>
__static_initialization_and_destruction_0():
    38f8:	80 ea       	ldi	r24, 0xA0	; 160
    38fa:	88 2e       	mov	r8, r24
    38fc:	86 e8       	ldi	r24, 0x86	; 134
    38fe:	98 2e       	mov	r9, r24
    3900:	aa 24       	eor	r10, r10
    3902:	a3 94       	inc	r10
    3904:	b1 2c       	mov	r11, r1
    3906:	90 e8       	ldi	r25, 0x80	; 128
    3908:	c9 2e       	mov	r12, r25
    390a:	9a e1       	ldi	r25, 0x1A	; 26
    390c:	d9 2e       	mov	r13, r25
    390e:	96 e0       	ldi	r25, 0x06	; 6
    3910:	e9 2e       	mov	r14, r25
    3912:	f1 2c       	mov	r15, r1
    3914:	0f ef       	ldi	r16, 0xFF	; 255
    3916:	26 ec       	ldi	r18, 0xC6	; 198
    3918:	39 e0       	ldi	r19, 0x09	; 9
    391a:	40 e4       	ldi	r20, 0x40	; 64
    391c:	60 e8       	ldi	r22, 0x80	; 128
    391e:	81 e0       	ldi	r24, 0x01	; 1
    3920:	99 e0       	ldi	r25, 0x09	; 9
    3922:	0e 94 30 4d 	call	0x9a60	; 0x9a60 <Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)>
    3926:	83 ed       	ldi	r24, 0xD3	; 211
    3928:	98 e0       	ldi	r25, 0x08	; 8
    392a:	0e 94 3e 5e 	call	0xbc7c	; 0xbc7c <LSM303::LSM303()>
    392e:	86 e2       	ldi	r24, 0x26	; 38
    3930:	98 e0       	ldi	r25, 0x08	; 8
    3932:	0e 94 bb 63 	call	0xc776	; 0xc776 <TinyGPSPlus::TinyGPSPlus()>
    3936:	20 e0       	ldi	r18, 0x00	; 0
    3938:	44 e1       	ldi	r20, 0x14	; 20
    393a:	63 e1       	ldi	r22, 0x13	; 19
    393c:	87 e0       	ldi	r24, 0x07	; 7
    393e:	98 e0       	ldi	r25, 0x08	; 8
    3940:	0e 94 14 63 	call	0xc628	; 0xc628 <SoftwareSerial::SoftwareSerial(signed char, signed char, bool)>
    3944:	62 e0       	ldi	r22, 0x02	; 2
    3946:	86 ee       	ldi	r24, 0xE6	; 230
    3948:	97 e0       	ldi	r25, 0x07	; 7
    394a:	0e 94 75 6b 	call	0xd6ea	; 0xd6ea <DHTNEW::DHTNEW(unsigned char)>
    394e:	21 e0       	ldi	r18, 0x01	; 1
    3950:	30 e0       	ldi	r19, 0x00	; 0
    3952:	46 ef       	ldi	r20, 0xF6	; 246
    3954:	51 e0       	ldi	r21, 0x01	; 1
    3956:	66 e2       	ldi	r22, 0x26	; 38
    3958:	78 e0       	ldi	r23, 0x08	; 8
    395a:	8a eb       	ldi	r24, 0xBA	; 186
    395c:	97 e0       	ldi	r25, 0x07	; 7
    395e:	0e 94 4a 6b 	call	0xd694	; 0xd694 <TinyGPSCustom::TinyGPSCustom(TinyGPSPlus&, char const*, int)>
    3962:	22 e0       	ldi	r18, 0x02	; 2
    3964:	30 e0       	ldi	r19, 0x00	; 0
    3966:	46 ef       	ldi	r20, 0xF6	; 246
    3968:	51 e0       	ldi	r21, 0x01	; 1
    396a:	66 e2       	ldi	r22, 0x26	; 38
    396c:	78 e0       	ldi	r23, 0x08	; 8
    396e:	8e e8       	ldi	r24, 0x8E	; 142
    3970:	97 e0       	ldi	r25, 0x07	; 7
    3972:	0e 94 4a 6b 	call	0xd694	; 0xd694 <TinyGPSCustom::TinyGPSCustom(TinyGPSPlus&, char const*, int)>
    3976:	23 e0       	ldi	r18, 0x03	; 3
    3978:	30 e0       	ldi	r19, 0x00	; 0
    397a:	46 ef       	ldi	r20, 0xF6	; 246
    397c:	51 e0       	ldi	r21, 0x01	; 1
    397e:	66 e2       	ldi	r22, 0x26	; 38
    3980:	78 e0       	ldi	r23, 0x08	; 8
    3982:	82 e6       	ldi	r24, 0x62	; 98
    3984:	97 e0       	ldi	r25, 0x07	; 7
_GLOBAL__sub_I_gForceData():
    3986:	0f 91       	pop	r16
    3988:	ff 90       	pop	r15
    398a:	ef 90       	pop	r14
    398c:	df 90       	pop	r13
    398e:	cf 90       	pop	r12
    3990:	bf 90       	pop	r11
    3992:	af 90       	pop	r10
    3994:	9f 90       	pop	r9
    3996:	8f 90       	pop	r8
__static_initialization_and_destruction_0():
    3998:	0c 94 4a 6b 	jmp	0xd694	; 0xd694 <TinyGPSCustom::TinyGPSCustom(TinyGPSPlus&, char const*, int)>

0000399c <_GLOBAL__sub_D_gForceData>:
_GLOBAL__sub_D_gForceData():
    399c:	87 e0       	ldi	r24, 0x07	; 7
    399e:	98 e0       	ldi	r25, 0x08	; 8
    39a0:	0e 94 b9 62 	call	0xc572	; 0xc572 <SoftwareSerial::~SoftwareSerial()>
    39a4:	81 e0       	ldi	r24, 0x01	; 1
    39a6:	99 e0       	ldi	r25, 0x09	; 9
    39a8:	0c 94 7b 4d 	jmp	0x9af6	; 0x9af6 <Adafruit_SSD1306::~Adafruit_SSD1306()>

000039ac <setup>:
setup():
    39ac:	af 92       	push	r10
    39ae:	bf 92       	push	r11
    39b0:	cf 92       	push	r12
    39b2:	df 92       	push	r13
    39b4:	ef 92       	push	r14
    39b6:	ff 92       	push	r15
    39b8:	0f 93       	push	r16
    39ba:	1f 93       	push	r17
    39bc:	cf 93       	push	r28
    39be:	df 93       	push	r29
    39c0:	41 e0       	ldi	r20, 0x01	; 1
    39c2:	50 e0       	ldi	r21, 0x00	; 0
    39c4:	66 e9       	ldi	r22, 0x96	; 150
    39c6:	70 e1       	ldi	r23, 0x10	; 16
    39c8:	82 e0       	ldi	r24, 0x02	; 2
    39ca:	0e 94 97 6b 	call	0xd72e	; 0xd72e <attachInterrupt>
    39ce:	01 e0       	ldi	r16, 0x01	; 1
    39d0:	21 e0       	ldi	r18, 0x01	; 1
    39d2:	4c e3       	ldi	r20, 0x3C	; 60
    39d4:	62 e0       	ldi	r22, 0x02	; 2
    39d6:	81 e0       	ldi	r24, 0x01	; 1
    39d8:	99 e0       	ldi	r25, 0x09	; 9
    39da:	0e 94 e8 4e 	call	0x9dd0	; 0x9dd0 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)>
    39de:	81 11       	cpse	r24, r1
    39e0:	03 c0       	rjmp	.+6      	; 0x39e8 <setup+0x3c>
    39e2:	0e 94 14 19 	call	0x3228	; 0x3228 <WarningAlert()>
    39e6:	fd cf       	rjmp	.-6      	; 0x39e2 <setup+0x36>
    39e8:	81 e0       	ldi	r24, 0x01	; 1
    39ea:	99 e0       	ldi	r25, 0x09	; 9
    39ec:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    39f0:	61 e0       	ldi	r22, 0x01	; 1
    39f2:	81 e0       	ldi	r24, 0x01	; 1
    39f4:	99 e0       	ldi	r25, 0x09	; 9
    39f6:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
    39fa:	c1 e0       	ldi	r28, 0x01	; 1
    39fc:	d0 e0       	ldi	r29, 0x00	; 0
    39fe:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    3a02:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    3a06:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    3a0a:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
    3a0e:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    3a12:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
    3a16:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    3a1a:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
setup():
    3a1e:	6b ea       	ldi	r22, 0xAB	; 171
    3a20:	74 e0       	ldi	r23, 0x04	; 4
    3a22:	81 e0       	ldi	r24, 0x01	; 1
    3a24:	99 e0       	ldi	r25, 0x09	; 9
    3a26:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    3a2a:	81 e0       	ldi	r24, 0x01	; 1
    3a2c:	99 e0       	ldi	r25, 0x09	; 9
    3a2e:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    3a32:	64 ef       	ldi	r22, 0xF4	; 244
    3a34:	71 e0       	ldi	r23, 0x01	; 1
    3a36:	80 e0       	ldi	r24, 0x00	; 0
    3a38:	90 e0       	ldi	r25, 0x00	; 0
    3a3a:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    3a3e:	62 e0       	ldi	r22, 0x02	; 2
    3a40:	82 e0       	ldi	r24, 0x02	; 2
    3a42:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
    3a46:	62 e0       	ldi	r22, 0x02	; 2
    3a48:	81 e0       	ldi	r24, 0x01	; 1
    3a4a:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
    3a4e:	62 e0       	ldi	r22, 0x02	; 2
    3a50:	80 e0       	ldi	r24, 0x00	; 0
    3a52:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
_ZN12Adafruit_GFX9setCursorEii():
    3a56:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    3a5a:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
    3a5e:	8b e0       	ldi	r24, 0x0B	; 11
    3a60:	90 e0       	ldi	r25, 0x00	; 0
    3a62:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3a66:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
setup():
    3a6a:	6d e9       	ldi	r22, 0x9D	; 157
    3a6c:	74 e0       	ldi	r23, 0x04	; 4
    3a6e:	81 e0       	ldi	r24, 0x01	; 1
    3a70:	99 e0       	ldi	r25, 0x09	; 9
    3a72:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    3a76:	81 e0       	ldi	r24, 0x01	; 1
    3a78:	99 e0       	ldi	r25, 0x09	; 9
    3a7a:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    3a7e:	64 ef       	ldi	r22, 0xF4	; 244
    3a80:	71 e0       	ldi	r23, 0x01	; 1
    3a82:	80 e0       	ldi	r24, 0x00	; 0
    3a84:	90 e0       	ldi	r25, 0x00	; 0
    3a86:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    3a8a:	40 e8       	ldi	r20, 0x80	; 128
    3a8c:	55 e2       	ldi	r21, 0x25	; 37
    3a8e:	60 e0       	ldi	r22, 0x00	; 0
    3a90:	70 e0       	ldi	r23, 0x00	; 0
    3a92:	87 e0       	ldi	r24, 0x07	; 7
    3a94:	98 e0       	ldi	r25, 0x08	; 8
    3a96:	0e 94 3f 63 	call	0xc67e	; 0xc67e <SoftwareSerial::begin(long)>
    3a9a:	22 eb       	ldi	r18, 0xB2	; 178
    3a9c:	a2 2e       	mov	r10, r18
    3a9e:	26 e0       	ldi	r18, 0x06	; 6
    3aa0:	b2 2e       	mov	r11, r18
    3aa2:	32 e0       	ldi	r19, 0x02	; 2
    3aa4:	c3 2e       	mov	r12, r19
    3aa6:	36 e0       	ldi	r19, 0x06	; 6
    3aa8:	d3 2e       	mov	r13, r19
    3aaa:	42 e5       	ldi	r20, 0x52	; 82
    3aac:	e4 2e       	mov	r14, r20
    3aae:	45 e0       	ldi	r20, 0x05	; 5
    3ab0:	f4 2e       	mov	r15, r20
    3ab2:	02 ea       	ldi	r16, 0xA2	; 162
    3ab4:	14 e0       	ldi	r17, 0x04	; 4
    3ab6:	c4 e0       	ldi	r28, 0x04	; 4
    3ab8:	d0 e0       	ldi	r29, 0x00	; 0
    3aba:	9e 01       	movw	r18, r28
    3abc:	46 ef       	ldi	r20, 0xF6	; 246
    3abe:	51 e0       	ldi	r21, 0x01	; 1
    3ac0:	66 e2       	ldi	r22, 0x26	; 38
    3ac2:	78 e0       	ldi	r23, 0x08	; 8
    3ac4:	c5 01       	movw	r24, r10
    3ac6:	0e 94 29 6b 	call	0xd652	; 0xd652 <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>
    3aca:	9e 01       	movw	r18, r28
    3acc:	2f 5f       	subi	r18, 0xFF	; 255
    3ace:	3f 4f       	sbci	r19, 0xFF	; 255
    3ad0:	46 ef       	ldi	r20, 0xF6	; 246
    3ad2:	51 e0       	ldi	r21, 0x01	; 1
    3ad4:	66 e2       	ldi	r22, 0x26	; 38
    3ad6:	78 e0       	ldi	r23, 0x08	; 8
    3ad8:	c6 01       	movw	r24, r12
    3ada:	0e 94 29 6b 	call	0xd652	; 0xd652 <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>
    3ade:	9e 01       	movw	r18, r28
    3ae0:	2e 5f       	subi	r18, 0xFE	; 254
    3ae2:	3f 4f       	sbci	r19, 0xFF	; 255
    3ae4:	46 ef       	ldi	r20, 0xF6	; 246
    3ae6:	51 e0       	ldi	r21, 0x01	; 1
    3ae8:	66 e2       	ldi	r22, 0x26	; 38
    3aea:	78 e0       	ldi	r23, 0x08	; 8
    3aec:	c7 01       	movw	r24, r14
    3aee:	0e 94 29 6b 	call	0xd652	; 0xd652 <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>
    3af2:	9e 01       	movw	r18, r28
    3af4:	2d 5f       	subi	r18, 0xFD	; 253
    3af6:	3f 4f       	sbci	r19, 0xFF	; 255
    3af8:	46 ef       	ldi	r20, 0xF6	; 246
    3afa:	51 e0       	ldi	r21, 0x01	; 1
    3afc:	66 e2       	ldi	r22, 0x26	; 38
    3afe:	78 e0       	ldi	r23, 0x08	; 8
    3b00:	c8 01       	movw	r24, r16
    3b02:	0e 94 29 6b 	call	0xd652	; 0xd652 <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>
    3b06:	8c e2       	ldi	r24, 0x2C	; 44
    3b08:	a8 0e       	add	r10, r24
    3b0a:	b1 1c       	adc	r11, r1
    3b0c:	24 96       	adiw	r28, 0x04	; 4
    3b0e:	8c e2       	ldi	r24, 0x2C	; 44
    3b10:	c8 0e       	add	r12, r24
    3b12:	d1 1c       	adc	r13, r1
    3b14:	8c e2       	ldi	r24, 0x2C	; 44
    3b16:	e8 0e       	add	r14, r24
    3b18:	f1 1c       	adc	r15, r1
    3b1a:	04 5d       	subi	r16, 0xD4	; 212
    3b1c:	1f 4f       	sbci	r17, 0xFF	; 255
    3b1e:	c4 31       	cpi	r28, 0x14	; 20
    3b20:	d1 05       	cpc	r29, r1
    3b22:	59 f6       	brne	.-106    	; 0x3aba <setup+0x10e>
_ZN12Adafruit_GFX9setCursorEii():
    3b24:	c1 e0       	ldi	r28, 0x01	; 1
    3b26:	d0 e0       	ldi	r29, 0x00	; 0
    3b28:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    3b2c:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
    3b30:	85 e1       	ldi	r24, 0x15	; 21
    3b32:	90 e0       	ldi	r25, 0x00	; 0
    3b34:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3b38:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_ZN12Adafruit_GFX12setTextColorEj():
    3b3c:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    3b40:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    3b44:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    3b48:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
setup():
    3b4c:	6d e8       	ldi	r22, 0x8D	; 141
    3b4e:	74 e0       	ldi	r23, 0x04	; 4
    3b50:	81 e0       	ldi	r24, 0x01	; 1
    3b52:	99 e0       	ldi	r25, 0x09	; 9
    3b54:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    3b58:	81 e0       	ldi	r24, 0x01	; 1
    3b5a:	99 e0       	ldi	r25, 0x09	; 9
    3b5c:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    3b60:	64 ef       	ldi	r22, 0xF4	; 244
    3b62:	71 e0       	ldi	r23, 0x01	; 1
    3b64:	80 e0       	ldi	r24, 0x00	; 0
    3b66:	90 e0       	ldi	r25, 0x00	; 0
    3b68:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    3b6c:	86 ec       	ldi	r24, 0xC6	; 198
    3b6e:	99 e0       	ldi	r25, 0x09	; 9
    3b70:	0e 94 44 54 	call	0xa888	; 0xa888 <TwoWire::begin()>
    3b74:	42 e0       	ldi	r20, 0x02	; 2
    3b76:	50 e0       	ldi	r21, 0x00	; 0
    3b78:	64 e0       	ldi	r22, 0x04	; 4
    3b7a:	70 e0       	ldi	r23, 0x00	; 0
    3b7c:	83 ed       	ldi	r24, 0xD3	; 211
    3b7e:	98 e0       	ldi	r25, 0x08	; 8
    3b80:	0e 94 3c 60 	call	0xc078	; 0xc078 <LSM303::init(LSM303::deviceType, LSM303::sa0State)>
    3b84:	83 ed       	ldi	r24, 0xD3	; 211
    3b86:	98 e0       	ldi	r25, 0x08	; 8
    3b88:	0e 94 a9 5e 	call	0xbd52	; 0xbd52 <LSM303::enableDefault()>
    3b8c:	86 e0       	ldi	r24, 0x06	; 6
    3b8e:	ed ec       	ldi	r30, 0xCD	; 205
    3b90:	f1 e0       	ldi	r31, 0x01	; 1
    3b92:	a5 ee       	ldi	r26, 0xE5	; 229
    3b94:	b8 e0       	ldi	r27, 0x08	; 8
    3b96:	01 90       	ld	r0, Z+
    3b98:	0d 92       	st	X+, r0
    3b9a:	8a 95       	dec	r24
    3b9c:	e1 f7       	brne	.-8      	; 0x3b96 <setup+0x1ea>
    3b9e:	86 e0       	ldi	r24, 0x06	; 6
    3ba0:	e3 ed       	ldi	r30, 0xD3	; 211
    3ba2:	f1 e0       	ldi	r31, 0x01	; 1
    3ba4:	af ed       	ldi	r26, 0xDF	; 223
    3ba6:	b8 e0       	ldi	r27, 0x08	; 8
    3ba8:	01 90       	ld	r0, Z+
    3baa:	0d 92       	st	X+, r0
    3bac:	8a 95       	dec	r24
    3bae:	e1 f7       	brne	.-8      	; 0x3ba8 <setup+0x1fc>
_ZN12Adafruit_GFX9setCursorEii():
    3bb0:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    3bb4:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
    3bb8:	8f e1       	ldi	r24, 0x1F	; 31
    3bba:	90 e0       	ldi	r25, 0x00	; 0
    3bbc:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3bc0:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
setup():
    3bc4:	69 e7       	ldi	r22, 0x79	; 121
    3bc6:	74 e0       	ldi	r23, 0x04	; 4
    3bc8:	81 e0       	ldi	r24, 0x01	; 1
    3bca:	99 e0       	ldi	r25, 0x09	; 9
    3bcc:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    3bd0:	81 e0       	ldi	r24, 0x01	; 1
    3bd2:	99 e0       	ldi	r25, 0x09	; 9
    3bd4:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    3bd8:	64 ef       	ldi	r22, 0xF4	; 244
    3bda:	71 e0       	ldi	r23, 0x01	; 1
    3bdc:	80 e0       	ldi	r24, 0x00	; 0
    3bde:	90 e0       	ldi	r25, 0x00	; 0
    3be0:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
_ZN12Adafruit_GFX9setCursorEii():
    3be4:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    3be8:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
    3bec:	89 e2       	ldi	r24, 0x29	; 41
    3bee:	90 e0       	ldi	r25, 0x00	; 0
    3bf0:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3bf4:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
setup():
    3bf8:	6a e6       	ldi	r22, 0x6A	; 106
    3bfa:	74 e0       	ldi	r23, 0x04	; 4
    3bfc:	81 e0       	ldi	r24, 0x01	; 1
    3bfe:	99 e0       	ldi	r25, 0x09	; 9
    3c00:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    3c04:	81 e0       	ldi	r24, 0x01	; 1
    3c06:	99 e0       	ldi	r25, 0x09	; 9
    3c08:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    3c0c:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    3c10:	91 e0       	ldi	r25, 0x01	; 1
    3c12:	89 27       	eor	r24, r25
    3c14:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
    3c18:	c5 e0       	ldi	r28, 0x05	; 5
    3c1a:	d0 e0       	ldi	r29, 0x00	; 0
    3c1c:	dd 24       	eor	r13, r13
    3c1e:	d3 94       	inc	r13
    3c20:	f1 2c       	mov	r15, r1
    3c22:	e1 2c       	mov	r14, r1
    3c24:	07 e0       	ldi	r16, 0x07	; 7
    3c26:	10 e0       	ldi	r17, 0x00	; 0
    3c28:	27 e0       	ldi	r18, 0x07	; 7
    3c2a:	30 e0       	ldi	r19, 0x00	; 0
    3c2c:	43 e3       	ldi	r20, 0x33	; 51
    3c2e:	50 e0       	ldi	r21, 0x00	; 0
    3c30:	61 e0       	ldi	r22, 0x01	; 1
    3c32:	70 e0       	ldi	r23, 0x00	; 0
    3c34:	81 e0       	ldi	r24, 0x01	; 1
    3c36:	99 e0       	ldi	r25, 0x09	; 9
    3c38:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
    3c3c:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    3c40:	8d 25       	eor	r24, r13
    3c42:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
_ZN12Adafruit_GFX9setCursorEii():
    3c46:	21 e0       	ldi	r18, 0x01	; 1
    3c48:	30 e0       	ldi	r19, 0x00	; 0
    3c4a:	30 93 0e 09 	sts	0x090E, r19	; 0x80090e <display+0xd>
    3c4e:	20 93 0d 09 	sts	0x090D, r18	; 0x80090d <display+0xc>
    3c52:	23 e3       	ldi	r18, 0x33	; 51
    3c54:	30 e0       	ldi	r19, 0x00	; 0
    3c56:	30 93 10 09 	sts	0x0910, r19	; 0x800910 <display+0xf>
    3c5a:	20 93 0f 09 	sts	0x090F, r18	; 0x80090f <display+0xe>
setup():
    3c5e:	6f e5       	ldi	r22, 0x5F	; 95
    3c60:	81 11       	cpse	r24, r1
    3c62:	01 c0       	rjmp	.+2      	; 0x3c66 <setup+0x2ba>
    3c64:	60 e2       	ldi	r22, 0x20	; 32
    3c66:	81 e0       	ldi	r24, 0x01	; 1
    3c68:	99 e0       	ldi	r25, 0x09	; 9
    3c6a:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    3c6e:	81 e0       	ldi	r24, 0x01	; 1
    3c70:	99 e0       	ldi	r25, 0x09	; 9
    3c72:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    3c76:	6c e2       	ldi	r22, 0x2C	; 44
    3c78:	71 e0       	ldi	r23, 0x01	; 1
    3c7a:	80 e0       	ldi	r24, 0x00	; 0
    3c7c:	90 e0       	ldi	r25, 0x00	; 0
    3c7e:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    3c82:	21 97       	sbiw	r28, 0x01	; 1
    3c84:	69 f6       	brne	.-102    	; 0x3c20 <setup+0x274>
    3c86:	68 ee       	ldi	r22, 0xE8	; 232
    3c88:	73 e0       	ldi	r23, 0x03	; 3
    3c8a:	80 e0       	ldi	r24, 0x00	; 0
    3c8c:	90 e0       	ldi	r25, 0x00	; 0
    3c8e:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    3c92:	81 e0       	ldi	r24, 0x01	; 1
    3c94:	99 e0       	ldi	r25, 0x09	; 9
    3c96:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    3c9a:	cc 24       	eor	r12, r12
    3c9c:	c3 94       	inc	r12
    3c9e:	d1 2c       	mov	r13, r1
    3ca0:	9c e3       	ldi	r25, 0x3C	; 60
    3ca2:	e9 2e       	mov	r14, r25
    3ca4:	f1 2c       	mov	r15, r1
    3ca6:	08 e4       	ldi	r16, 0x48	; 72
    3ca8:	10 e0       	ldi	r17, 0x00	; 0
    3caa:	22 e1       	ldi	r18, 0x12	; 18
    3cac:	3c e0       	ldi	r19, 0x0C	; 12
    3cae:	42 e0       	ldi	r20, 0x02	; 2
    3cb0:	50 e0       	ldi	r21, 0x00	; 0
    3cb2:	6c e1       	ldi	r22, 0x1C	; 28
    3cb4:	70 e0       	ldi	r23, 0x00	; 0
    3cb6:	81 e0       	ldi	r24, 0x01	; 1
    3cb8:	99 e0       	ldi	r25, 0x09	; 9
    3cba:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
    3cbe:	81 e0       	ldi	r24, 0x01	; 1
    3cc0:	99 e0       	ldi	r25, 0x09	; 9
    3cc2:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    3cc6:	68 eb       	ldi	r22, 0xB8	; 184
    3cc8:	7b e0       	ldi	r23, 0x0B	; 11
    3cca:	80 e0       	ldi	r24, 0x00	; 0
    3ccc:	90 e0       	ldi	r25, 0x00	; 0
    3cce:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    3cd2:	81 e0       	ldi	r24, 0x01	; 1
    3cd4:	99 e0       	ldi	r25, 0x09	; 9
    3cd6:	df 91       	pop	r29
    3cd8:	cf 91       	pop	r28
    3cda:	1f 91       	pop	r17
    3cdc:	0f 91       	pop	r16
    3cde:	ff 90       	pop	r15
    3ce0:	ef 90       	pop	r14
    3ce2:	df 90       	pop	r13
    3ce4:	cf 90       	pop	r12
    3ce6:	bf 90       	pop	r11
    3ce8:	af 90       	pop	r10
    3cea:	0c 94 ca 4e 	jmp	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>

00003cee <StartPointLog()>:
_Z13StartPointLogv():
    3cee:	4f 92       	push	r4
    3cf0:	5f 92       	push	r5
    3cf2:	6f 92       	push	r6
    3cf4:	7f 92       	push	r7
    3cf6:	af 92       	push	r10
    3cf8:	bf 92       	push	r11
    3cfa:	cf 92       	push	r12
    3cfc:	df 92       	push	r13
    3cfe:	ef 92       	push	r14
    3d00:	ff 92       	push	r15
    3d02:	0f 93       	push	r16
    3d04:	1f 93       	push	r17
    3d06:	cf 93       	push	r28
    3d08:	df 93       	push	r29
    3d0a:	00 d0       	rcall	.+0      	; 0x3d0c <StartPointLog()+0x1e>
    3d0c:	00 d0       	rcall	.+0      	; 0x3d0e <StartPointLog()+0x20>
    3d0e:	cd b7       	in	r28, 0x3d	; 61
    3d10:	de b7       	in	r29, 0x3e	; 62
    3d12:	82 e0       	ldi	r24, 0x02	; 2
    3d14:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    3d18:	89 2b       	or	r24, r25
    3d1a:	19 f4       	brne	.+6      	; 0x3d22 <StartPointLog()+0x34>
    3d1c:	81 e0       	ldi	r24, 0x01	; 1
    3d1e:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <logic+0x1>
    3d22:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <logic+0x1>
    3d26:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    3d2a:	98 13       	cpse	r25, r24
    3d2c:	03 c0       	rjmp	.+6      	; 0x3d34 <StartPointLog()+0x46>
    3d2e:	81 e0       	ldi	r24, 0x01	; 1
    3d30:	80 93 4d 09 	sts	0x094D, r24	; 0x80094d <menu+0x7>
    3d34:	80 91 4d 09 	lds	r24, 0x094D	; 0x80094d <menu+0x7>
    3d38:	88 23       	and	r24, r24
    3d3a:	09 f4       	brne	.+2      	; 0x3d3e <StartPointLog()+0x50>
    3d3c:	49 c0       	rjmp	.+146    	; 0x3dd0 <StartPointLog()+0xe2>
    3d3e:	61 e0       	ldi	r22, 0x01	; 1
    3d40:	81 e0       	ldi	r24, 0x01	; 1
    3d42:	99 e0       	ldi	r25, 0x09	; 9
    3d44:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
    3d48:	81 e0       	ldi	r24, 0x01	; 1
    3d4a:	90 e0       	ldi	r25, 0x00	; 0
    3d4c:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <display+0x13>
    3d50:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <display+0x12>
    3d54:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <display+0x11>
    3d58:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <display+0x10>
_Z13StartPointLogv():
    3d5c:	81 e0       	ldi	r24, 0x01	; 1
    3d5e:	99 e0       	ldi	r25, 0x09	; 9
    3d60:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    3d64:	cc 24       	eor	r12, r12
    3d66:	c3 94       	inc	r12
    3d68:	d1 2c       	mov	r13, r1
    3d6a:	56 e3       	ldi	r21, 0x36	; 54
    3d6c:	e5 2e       	mov	r14, r21
    3d6e:	f1 2c       	mov	r15, r1
    3d70:	06 e3       	ldi	r16, 0x36	; 54
    3d72:	10 e0       	ldi	r17, 0x00	; 0
    3d74:	2e e2       	ldi	r18, 0x2E	; 46
    3d76:	3e e0       	ldi	r19, 0x0E	; 14
    3d78:	50 e0       	ldi	r21, 0x00	; 0
    3d7a:	40 e0       	ldi	r20, 0x00	; 0
    3d7c:	68 e2       	ldi	r22, 0x28	; 40
    3d7e:	70 e0       	ldi	r23, 0x00	; 0
    3d80:	81 e0       	ldi	r24, 0x01	; 1
    3d82:	99 e0       	ldi	r25, 0x09	; 9
    3d84:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
    3d88:	8c e1       	ldi	r24, 0x1C	; 28
    3d8a:	90 e0       	ldi	r25, 0x00	; 0
    3d8c:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    3d90:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
    3d94:	89 e3       	ldi	r24, 0x39	; 57
    3d96:	90 e0       	ldi	r25, 0x00	; 0
    3d98:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3d9c:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z13StartPointLogv():
    3da0:	62 e3       	ldi	r22, 0x32	; 50
    3da2:	72 e0       	ldi	r23, 0x02	; 2
    3da4:	81 e0       	ldi	r24, 0x01	; 1
    3da6:	99 e0       	ldi	r25, 0x09	; 9
    3da8:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    3dac:	81 e0       	ldi	r24, 0x01	; 1
    3dae:	99 e0       	ldi	r25, 0x09	; 9
    3db0:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    3db4:	68 ee       	ldi	r22, 0xE8	; 232
    3db6:	73 e0       	ldi	r23, 0x03	; 3
    3db8:	80 e0       	ldi	r24, 0x00	; 0
    3dba:	90 e0       	ldi	r25, 0x00	; 0
    3dbc:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    3dc0:	81 e0       	ldi	r24, 0x01	; 1
    3dc2:	99 e0       	ldi	r25, 0x09	; 9
    3dc4:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    3dc8:	10 92 4d 09 	sts	0x094D, r1	; 0x80094d <menu+0x7>
    3dcc:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <logic>
    3dd0:	81 e0       	ldi	r24, 0x01	; 1
    3dd2:	99 e0       	ldi	r25, 0x09	; 9
    3dd4:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    3dd8:	61 e0       	ldi	r22, 0x01	; 1
    3dda:	81 e0       	ldi	r24, 0x01	; 1
    3ddc:	99 e0       	ldi	r25, 0x09	; 9
    3dde:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
    3de2:	81 e0       	ldi	r24, 0x01	; 1
    3de4:	90 e0       	ldi	r25, 0x00	; 0
    3de6:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <display+0x13>
    3dea:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <display+0x12>
    3dee:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <display+0x11>
    3df2:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
    3df6:	2f e1       	ldi	r18, 0x1F	; 31
    3df8:	c2 2e       	mov	r12, r18
    3dfa:	d1 2c       	mov	r13, r1
    3dfc:	d0 92 0e 09 	sts	0x090E, r13	; 0x80090e <display+0xd>
    3e00:	c0 92 0d 09 	sts	0x090D, r12	; 0x80090d <display+0xc>
    3e04:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3e08:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z13StartPointLogv():
    3e0c:	66 e2       	ldi	r22, 0x26	; 38
    3e0e:	72 e0       	ldi	r23, 0x02	; 2
    3e10:	81 e0       	ldi	r24, 0x01	; 1
    3e12:	99 e0       	ldi	r25, 0x09	; 9
    3e14:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
    3e18:	81 e0       	ldi	r24, 0x01	; 1
    3e1a:	90 e0       	ldi	r25, 0x00	; 0
    3e1c:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    3e20:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
    3e24:	8b e0       	ldi	r24, 0x0B	; 11
    3e26:	90 e0       	ldi	r25, 0x00	; 0
    3e28:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3e2c:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z13StartPointLogv():
    3e30:	40 91 24 01 	lds	r20, 0x0124	; 0x800124 <gps_var+0x6>
    3e34:	50 91 25 01 	lds	r21, 0x0125	; 0x800125 <gps_var+0x7>
    3e38:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <gps_var+0x8>
    3e3c:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <gps_var+0x9>
    3e40:	26 e0       	ldi	r18, 0x06	; 6
    3e42:	30 e0       	ldi	r19, 0x00	; 0
    3e44:	81 e0       	ldi	r24, 0x01	; 1
    3e46:	99 e0       	ldi	r25, 0x09	; 9
    3e48:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    3e4c:	6c e2       	ldi	r22, 0x2C	; 44
    3e4e:	81 e0       	ldi	r24, 0x01	; 1
    3e50:	99 e0       	ldi	r25, 0x09	; 9
    3e52:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    3e56:	40 91 28 01 	lds	r20, 0x0128	; 0x800128 <gps_var+0xa>
    3e5a:	50 91 29 01 	lds	r21, 0x0129	; 0x800129 <gps_var+0xb>
    3e5e:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <gps_var+0xc>
    3e62:	70 91 2b 01 	lds	r23, 0x012B	; 0x80012b <gps_var+0xd>
    3e66:	26 e0       	ldi	r18, 0x06	; 6
    3e68:	30 e0       	ldi	r19, 0x00	; 0
    3e6a:	81 e0       	ldi	r24, 0x01	; 1
    3e6c:	99 e0       	ldi	r25, 0x09	; 9
    3e6e:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
    3e72:	81 e0       	ldi	r24, 0x01	; 1
    3e74:	90 e0       	ldi	r25, 0x00	; 0
    3e76:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    3e7a:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
    3e7e:	85 e1       	ldi	r24, 0x15	; 21
    3e80:	90 e0       	ldi	r25, 0x00	; 0
    3e82:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    3e86:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z13StartPointLogv():
    3e8a:	ee 24       	eor	r14, r14
    3e8c:	e3 94       	inc	r14
    3e8e:	f1 2c       	mov	r15, r1
    3e90:	09 e0       	ldi	r16, 0x09	; 9
    3e92:	10 e0       	ldi	r17, 0x00	; 0
    3e94:	20 e8       	ldi	r18, 0x80	; 128
    3e96:	30 e0       	ldi	r19, 0x00	; 0
    3e98:	44 e1       	ldi	r20, 0x14	; 20
    3e9a:	50 e0       	ldi	r21, 0x00	; 0
    3e9c:	70 e0       	ldi	r23, 0x00	; 0
    3e9e:	60 e0       	ldi	r22, 0x00	; 0
    3ea0:	81 e0       	ldi	r24, 0x01	; 1
    3ea2:	99 e0       	ldi	r25, 0x09	; 9
    3ea4:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
    3ea8:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    3eac:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    3eb0:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    3eb4:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_Z13StartPointLogv():
    3eb8:	61 e1       	ldi	r22, 0x11	; 17
    3eba:	72 e0       	ldi	r23, 0x02	; 2
    3ebc:	81 e0       	ldi	r24, 0x01	; 1
    3ebe:	99 e0       	ldi	r25, 0x09	; 9
    3ec0:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
    3ec4:	f0 92 0e 09 	sts	0x090E, r15	; 0x80090e <display+0xd>
    3ec8:	e0 92 0d 09 	sts	0x090D, r14	; 0x80090d <display+0xc>
    3ecc:	d0 92 10 09 	sts	0x0910, r13	; 0x800910 <display+0xf>
    3ed0:	c0 92 0f 09 	sts	0x090F, r12	; 0x80090f <display+0xe>
_ZN12Adafruit_GFX12setTextColorEj():
    3ed4:	f0 92 14 09 	sts	0x0914, r15	; 0x800914 <display+0x13>
    3ed8:	e0 92 13 09 	sts	0x0913, r14	; 0x800913 <display+0x12>
    3edc:	f0 92 12 09 	sts	0x0912, r15	; 0x800912 <display+0x11>
    3ee0:	e0 92 11 09 	sts	0x0911, r14	; 0x800911 <display+0x10>
_Z13StartPointLogv():
    3ee4:	86 e2       	ldi	r24, 0x26	; 38
    3ee6:	98 e0       	ldi	r25, 0x08	; 8
    3ee8:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    3eec:	5b 01       	movw	r10, r22
    3eee:	6c 01       	movw	r12, r24
    3ef0:	86 e2       	ldi	r24, 0x26	; 38
    3ef2:	98 e0       	ldi	r25, 0x08	; 8
    3ef4:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
    3ef8:	7b 01       	movw	r14, r22
    3efa:	8c 01       	movw	r16, r24
    3efc:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <gps_var+0xa>
    3f00:	30 91 29 01 	lds	r19, 0x0129	; 0x800129 <gps_var+0xb>
    3f04:	40 91 2a 01 	lds	r20, 0x012A	; 0x80012a <gps_var+0xc>
    3f08:	50 91 2b 01 	lds	r21, 0x012B	; 0x80012b <gps_var+0xd>
    3f0c:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <gps_var+0x6>
    3f10:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <gps_var+0x7>
    3f14:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <gps_var+0x8>
    3f18:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <gps_var+0x9>
    3f1c:	0e 94 39 65 	call	0xca72	; 0xca72 <TinyGPSPlus::distanceBetween(double, double, double, double)>
    3f20:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <gps_var+0xe>
    3f24:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <gps_var+0xf>
    3f28:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <gps_var+0x10>
    3f2c:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <gps_var+0x11>
    3f30:	20 e0       	ldi	r18, 0x00	; 0
    3f32:	30 e0       	ldi	r19, 0x00	; 0
    3f34:	a9 01       	movw	r20, r18
    3f36:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <gps_var+0x6>
    3f3a:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <gps_var+0x7>
    3f3e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <gps_var+0x8>
    3f42:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <gps_var+0x9>
    3f46:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    3f4a:	81 11       	cpse	r24, r1
    3f4c:	17 c0       	rjmp	.+46     	; 0x3f7c <StartPointLog()+0x28e>
    3f4e:	20 e0       	ldi	r18, 0x00	; 0
    3f50:	30 e0       	ldi	r19, 0x00	; 0
    3f52:	a9 01       	movw	r20, r18
    3f54:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <gps_var+0xa>
    3f58:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <gps_var+0xb>
    3f5c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <gps_var+0xc>
    3f60:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <gps_var+0xd>
    3f64:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    3f68:	81 11       	cpse	r24, r1
    3f6a:	08 c0       	rjmp	.+16     	; 0x3f7c <StartPointLog()+0x28e>
    3f6c:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <gps_var+0xe>
    3f70:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <gps_var+0xf>
    3f74:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <gps_var+0x10>
    3f78:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <gps_var+0x11>
    3f7c:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <gps_var+0xe>
    3f80:	50 91 2d 01 	lds	r21, 0x012D	; 0x80012d <gps_var+0xf>
    3f84:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <gps_var+0x10>
    3f88:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <gps_var+0x11>
    3f8c:	22 e0       	ldi	r18, 0x02	; 2
    3f8e:	30 e0       	ldi	r19, 0x00	; 0
    3f90:	81 e0       	ldi	r24, 0x01	; 1
    3f92:	99 e0       	ldi	r25, 0x09	; 9
    3f94:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    3f98:	6d e6       	ldi	r22, 0x6D	; 109
    3f9a:	81 e0       	ldi	r24, 0x01	; 1
    3f9c:	99 e0       	ldi	r25, 0x09	; 9
    3f9e:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    3fa2:	6c e2       	ldi	r22, 0x2C	; 44
    3fa4:	81 e0       	ldi	r24, 0x01	; 1
    3fa6:	99 e0       	ldi	r25, 0x09	; 9
    3fa8:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    3fac:	a0 90 28 01 	lds	r10, 0x0128	; 0x800128 <gps_var+0xa>
    3fb0:	b0 90 29 01 	lds	r11, 0x0129	; 0x800129 <gps_var+0xb>
    3fb4:	c0 90 2a 01 	lds	r12, 0x012A	; 0x80012a <gps_var+0xc>
    3fb8:	d0 90 2b 01 	lds	r13, 0x012B	; 0x80012b <gps_var+0xd>
    3fbc:	40 90 24 01 	lds	r4, 0x0124	; 0x800124 <gps_var+0x6>
    3fc0:	50 90 25 01 	lds	r5, 0x0125	; 0x800125 <gps_var+0x7>
    3fc4:	60 90 26 01 	lds	r6, 0x0126	; 0x800126 <gps_var+0x8>
    3fc8:	70 90 27 01 	lds	r7, 0x0127	; 0x800127 <gps_var+0x9>
    3fcc:	86 e2       	ldi	r24, 0x26	; 38
    3fce:	98 e0       	ldi	r25, 0x08	; 8
    3fd0:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    3fd4:	69 83       	std	Y+1, r22	; 0x01
    3fd6:	7a 83       	std	Y+2, r23	; 0x02
    3fd8:	8b 83       	std	Y+3, r24	; 0x03
    3fda:	9c 83       	std	Y+4, r25	; 0x04
    3fdc:	86 e2       	ldi	r24, 0x26	; 38
    3fde:	98 e0       	ldi	r25, 0x08	; 8
    3fe0:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
    3fe4:	83 01       	movw	r16, r6
    3fe6:	72 01       	movw	r14, r4
    3fe8:	29 81       	ldd	r18, Y+1	; 0x01
    3fea:	3a 81       	ldd	r19, Y+2	; 0x02
    3fec:	4b 81       	ldd	r20, Y+3	; 0x03
    3fee:	5c 81       	ldd	r21, Y+4	; 0x04
    3ff0:	0e 94 29 66 	call	0xcc52	; 0xcc52 <TinyGPSPlus::courseTo(double, double, double, double)>
    3ff4:	ab 01       	movw	r20, r22
    3ff6:	bc 01       	movw	r22, r24
    3ff8:	22 e0       	ldi	r18, 0x02	; 2
    3ffa:	30 e0       	ldi	r19, 0x00	; 0
    3ffc:	81 e0       	ldi	r24, 0x01	; 1
    3ffe:	99 e0       	ldi	r25, 0x09	; 9
    4000:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    4004:	6d e0       	ldi	r22, 0x0D	; 13
    4006:	72 e0       	ldi	r23, 0x02	; 2
    4008:	81 e0       	ldi	r24, 0x01	; 1
    400a:	99 e0       	ldi	r25, 0x09	; 9
    400c:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    4010:	0e 94 2e 17 	call	0x2e5c	; 0x2e5c <decodeLocationFromEEPROM()>
    4014:	ee 24       	eor	r14, r14
    4016:	e3 94       	inc	r14
    4018:	f1 2c       	mov	r15, r1
    401a:	09 e0       	ldi	r16, 0x09	; 9
    401c:	10 e0       	ldi	r17, 0x00	; 0
    401e:	20 e8       	ldi	r18, 0x80	; 128
    4020:	30 e0       	ldi	r19, 0x00	; 0
    4022:	48 e2       	ldi	r20, 0x28	; 40
    4024:	50 e0       	ldi	r21, 0x00	; 0
    4026:	70 e0       	ldi	r23, 0x00	; 0
    4028:	60 e0       	ldi	r22, 0x00	; 0
    402a:	81 e0       	ldi	r24, 0x01	; 1
    402c:	99 e0       	ldi	r25, 0x09	; 9
    402e:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
    4032:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    4036:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    403a:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    403e:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
    4042:	f0 92 0e 09 	sts	0x090E, r15	; 0x80090e <display+0xd>
    4046:	e0 92 0d 09 	sts	0x090D, r14	; 0x80090d <display+0xc>
    404a:	89 e2       	ldi	r24, 0x29	; 41
    404c:	90 e0       	ldi	r25, 0x00	; 0
    404e:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4052:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z13StartPointLogv():
    4056:	68 ef       	ldi	r22, 0xF8	; 248
    4058:	71 e0       	ldi	r23, 0x01	; 1
    405a:	81 e0       	ldi	r24, 0x01	; 1
    405c:	99 e0       	ldi	r25, 0x09	; 9
    405e:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
    4062:	f0 92 0e 09 	sts	0x090E, r15	; 0x80090e <display+0xd>
    4066:	e0 92 0d 09 	sts	0x090D, r14	; 0x80090d <display+0xc>
    406a:	83 e3       	ldi	r24, 0x33	; 51
    406c:	90 e0       	ldi	r25, 0x00	; 0
    406e:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4072:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_ZN12Adafruit_GFX12setTextColorEj():
    4076:	f0 92 14 09 	sts	0x0914, r15	; 0x800914 <display+0x13>
    407a:	e0 92 13 09 	sts	0x0913, r14	; 0x800913 <display+0x12>
    407e:	f0 92 12 09 	sts	0x0912, r15	; 0x800912 <display+0x11>
    4082:	e0 92 11 09 	sts	0x0911, r14	; 0x800911 <display+0x10>
_Z13StartPointLogv():
    4086:	40 91 8b 09 	lds	r20, 0x098B	; 0x80098b <eeprom+0x4>
    408a:	50 91 8c 09 	lds	r21, 0x098C	; 0x80098c <eeprom+0x5>
    408e:	60 91 8d 09 	lds	r22, 0x098D	; 0x80098d <eeprom+0x6>
    4092:	70 91 8e 09 	lds	r23, 0x098E	; 0x80098e <eeprom+0x7>
    4096:	26 e0       	ldi	r18, 0x06	; 6
    4098:	30 e0       	ldi	r19, 0x00	; 0
    409a:	81 e0       	ldi	r24, 0x01	; 1
    409c:	99 e0       	ldi	r25, 0x09	; 9
    409e:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    40a2:	6c e2       	ldi	r22, 0x2C	; 44
    40a4:	81 e0       	ldi	r24, 0x01	; 1
    40a6:	99 e0       	ldi	r25, 0x09	; 9
    40a8:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    40ac:	40 91 9f 09 	lds	r20, 0x099F	; 0x80099f <eeprom+0x18>
    40b0:	50 91 a0 09 	lds	r21, 0x09A0	; 0x8009a0 <eeprom+0x19>
    40b4:	60 91 a1 09 	lds	r22, 0x09A1	; 0x8009a1 <eeprom+0x1a>
    40b8:	70 91 a2 09 	lds	r23, 0x09A2	; 0x8009a2 <eeprom+0x1b>
    40bc:	26 e0       	ldi	r18, 0x06	; 6
    40be:	30 e0       	ldi	r19, 0x00	; 0
    40c0:	81 e0       	ldi	r24, 0x01	; 1
    40c2:	99 e0       	ldi	r25, 0x09	; 9
    40c4:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    40c8:	81 e0       	ldi	r24, 0x01	; 1
    40ca:	99 e0       	ldi	r25, 0x09	; 9
    40cc:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    40d0:	81 e0       	ldi	r24, 0x01	; 1
    40d2:	99 e0       	ldi	r25, 0x09	; 9
    40d4:	0f 90       	pop	r0
    40d6:	0f 90       	pop	r0
    40d8:	0f 90       	pop	r0
    40da:	0f 90       	pop	r0
    40dc:	df 91       	pop	r29
    40de:	cf 91       	pop	r28
    40e0:	1f 91       	pop	r17
    40e2:	0f 91       	pop	r16
    40e4:	ff 90       	pop	r15
    40e6:	ef 90       	pop	r14
    40e8:	df 90       	pop	r13
    40ea:	cf 90       	pop	r12
    40ec:	bf 90       	pop	r11
    40ee:	af 90       	pop	r10
    40f0:	7f 90       	pop	r7
    40f2:	6f 90       	pop	r6
    40f4:	5f 90       	pop	r5
    40f6:	4f 90       	pop	r4
    40f8:	0c 94 ca 4e 	jmp	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>

000040fc <ButtonIO()>:
_Z8ButtonIOv():
    40fc:	5f 92       	push	r5
    40fe:	6f 92       	push	r6
    4100:	7f 92       	push	r7
    4102:	8f 92       	push	r8
    4104:	9f 92       	push	r9
    4106:	af 92       	push	r10
    4108:	bf 92       	push	r11
    410a:	cf 92       	push	r12
    410c:	df 92       	push	r13
    410e:	ef 92       	push	r14
    4110:	ff 92       	push	r15
    4112:	0f 93       	push	r16
    4114:	1f 93       	push	r17
    4116:	cf 93       	push	r28
    4118:	df 93       	push	r29
_ZN12Adafruit_GFX12setTextColorEj():
    411a:	01 e0       	ldi	r16, 0x01	; 1
    411c:	10 e0       	ldi	r17, 0x00	; 0
_ZN12Adafruit_GFX9setCursorEii():
    411e:	89 e1       	ldi	r24, 0x19	; 25
    4120:	88 2e       	mov	r8, r24
    4122:	91 2c       	mov	r9, r1
    4124:	9b e2       	ldi	r25, 0x2B	; 43
    4126:	a9 2e       	mov	r10, r25
    4128:	b1 2c       	mov	r11, r1
    412a:	2b e0       	ldi	r18, 0x0B	; 11
    412c:	c2 2e       	mov	r12, r18
    412e:	d1 2c       	mov	r13, r1
    4130:	3c e1       	ldi	r19, 0x1C	; 28
    4132:	e3 2e       	mov	r14, r19
    4134:	f1 2c       	mov	r15, r1
    4136:	43 e3       	ldi	r20, 0x33	; 51
    4138:	64 2e       	mov	r6, r20
    413a:	71 2c       	mov	r7, r1
_Z8ButtonIOv():
    413c:	82 e0       	ldi	r24, 0x02	; 2
    413e:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    4142:	89 2b       	or	r24, r25
    4144:	a1 f0       	breq	.+40     	; 0x416e <__stack+0x6f>
    4146:	c1 e0       	ldi	r28, 0x01	; 1
    4148:	80 e0       	ldi	r24, 0x00	; 0
    414a:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    414e:	89 2b       	or	r24, r25
    4150:	09 f0       	breq	.+2      	; 0x4154 <__stack+0x55>
    4152:	6a c0       	rjmp	.+212    	; 0x4228 <__stack+0x129>
    4154:	81 e0       	ldi	r24, 0x01	; 1
    4156:	99 e0       	ldi	r25, 0x09	; 9
    4158:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    415c:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <altitude_graph+0x3>
    4160:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <altitude_graph+0x2>
    4164:	c0 93 39 01 	sts	0x0139, r28	; 0x800139 <altitude_graph+0x1>
    4168:	0e 94 77 1e 	call	0x3cee	; 0x3cee <StartPointLog()>
    416c:	ed cf       	rjmp	.-38     	; 0x4148 <__stack+0x49>
    416e:	80 e0       	ldi	r24, 0x00	; 0
    4170:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    4174:	ec 01       	movw	r28, r24
    4176:	89 2b       	or	r24, r25
    4178:	31 f7       	brne	.-52     	; 0x4146 <__stack+0x47>
    417a:	10 92 47 09 	sts	0x0947, r1	; 0x800947 <menu+0x1>
    417e:	10 92 46 09 	sts	0x0946, r1	; 0x800946 <menu>
    4182:	81 e0       	ldi	r24, 0x01	; 1
    4184:	99 e0       	ldi	r25, 0x09	; 9
    4186:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
_ZN12Adafruit_GFX12setTextColorEj():
    418a:	10 93 14 09 	sts	0x0914, r17	; 0x800914 <display+0x13>
    418e:	00 93 13 09 	sts	0x0913, r16	; 0x800913 <display+0x12>
    4192:	10 93 12 09 	sts	0x0912, r17	; 0x800912 <display+0x11>
    4196:	00 93 11 09 	sts	0x0911, r16	; 0x800911 <display+0x10>
_Z8ButtonIOv():
    419a:	61 e0       	ldi	r22, 0x01	; 1
    419c:	81 e0       	ldi	r24, 0x01	; 1
    419e:	99 e0       	ldi	r25, 0x09	; 9
    41a0:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
    41a4:	55 24       	eor	r5, r5
    41a6:	53 94       	inc	r5
    41a8:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    41ac:	25 25       	eor	r18, r5
    41ae:	20 93 47 01 	sts	0x0147, r18	; 0x800147 <logic>
    41b2:	30 e0       	ldi	r19, 0x00	; 0
    41b4:	40 e2       	ldi	r20, 0x20	; 32
    41b6:	50 e0       	ldi	r21, 0x00	; 0
    41b8:	be 01       	movw	r22, r28
    41ba:	81 e0       	ldi	r24, 0x01	; 1
    41bc:	99 e0       	ldi	r25, 0x09	; 9
    41be:	0e 94 60 4c 	call	0x98c0	; 0x98c0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
    41c2:	21 96       	adiw	r28, 0x01	; 1
    41c4:	c0 38       	cpi	r28, 0x80	; 128
    41c6:	d1 05       	cpc	r29, r1
    41c8:	79 f7       	brne	.-34     	; 0x41a8 <__stack+0xa9>
_ZN12Adafruit_GFX9setCursorEii():
    41ca:	90 92 0e 09 	sts	0x090E, r9	; 0x80090e <display+0xd>
    41ce:	80 92 0d 09 	sts	0x090D, r8	; 0x80090d <display+0xc>
    41d2:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    41d6:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8ButtonIOv():
    41da:	62 e4       	ldi	r22, 0x42	; 66
    41dc:	74 e0       	ldi	r23, 0x04	; 4
    41de:	81 e0       	ldi	r24, 0x01	; 1
    41e0:	99 e0       	ldi	r25, 0x09	; 9
    41e2:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
    41e6:	b0 92 0e 09 	sts	0x090E, r11	; 0x80090e <display+0xd>
    41ea:	a0 92 0d 09 	sts	0x090D, r10	; 0x80090d <display+0xc>
    41ee:	d0 92 10 09 	sts	0x0910, r13	; 0x800910 <display+0xf>
    41f2:	c0 92 0f 09 	sts	0x090F, r12	; 0x80090f <display+0xe>
_Z8ButtonIOv():
    41f6:	6a e3       	ldi	r22, 0x3A	; 58
    41f8:	74 e0       	ldi	r23, 0x04	; 4
    41fa:	81 e0       	ldi	r24, 0x01	; 1
    41fc:	99 e0       	ldi	r25, 0x09	; 9
    41fe:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
    4202:	f0 92 0e 09 	sts	0x090E, r15	; 0x80090e <display+0xd>
    4206:	e0 92 0d 09 	sts	0x090D, r14	; 0x80090d <display+0xc>
    420a:	70 92 10 09 	sts	0x0910, r7	; 0x800910 <display+0xf>
    420e:	60 92 0f 09 	sts	0x090F, r6	; 0x80090f <display+0xe>
_Z8ButtonIOv():
    4212:	6d e2       	ldi	r22, 0x2D	; 45
    4214:	74 e0       	ldi	r23, 0x04	; 4
    4216:	81 e0       	ldi	r24, 0x01	; 1
    4218:	99 e0       	ldi	r25, 0x09	; 9
    421a:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
    421e:	81 e0       	ldi	r24, 0x01	; 1
    4220:	99 e0       	ldi	r25, 0x09	; 9
    4222:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    4226:	8a cf       	rjmp	.-236    	; 0x413c <__stack+0x3d>
    4228:	df 91       	pop	r29
    422a:	cf 91       	pop	r28
    422c:	1f 91       	pop	r17
    422e:	0f 91       	pop	r16
    4230:	ff 90       	pop	r15
    4232:	ef 90       	pop	r14
    4234:	df 90       	pop	r13
    4236:	cf 90       	pop	r12
    4238:	bf 90       	pop	r11
    423a:	af 90       	pop	r10
    423c:	9f 90       	pop	r9
    423e:	8f 90       	pop	r8
    4240:	7f 90       	pop	r7
    4242:	6f 90       	pop	r6
    4244:	5f 90       	pop	r5
    4246:	08 95       	ret

00004248 <CompassMenu()>:
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:1
void CompassMenu(void) {
    4248:	4f 92       	push	r4
    424a:	5f 92       	push	r5
    424c:	6f 92       	push	r6
    424e:	7f 92       	push	r7
    4250:	8f 92       	push	r8
    4252:	9f 92       	push	r9
    4254:	af 92       	push	r10
    4256:	bf 92       	push	r11
    4258:	cf 92       	push	r12
    425a:	df 92       	push	r13
    425c:	ef 92       	push	r14
    425e:	ff 92       	push	r15
    4260:	0f 93       	push	r16
    4262:	1f 93       	push	r17
    4264:	cf 93       	push	r28
    4266:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:4
        /* Switch to Gravity Graph Mode */
        static unsigned long last_interrupt_time = 0;
        while (!digitalRead(B_Pin)) {
    4268:	81 e0       	ldi	r24, 0x01	; 1
    426a:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    426e:	89 2b       	or	r24, r25
    4270:	31 f5       	brne	.+76     	; 0x42be <CompassMenu()+0x76>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:5
                if (millis() - last_interrupt_time > 200) {
    4272:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    4276:	c0 90 7a 03 	lds	r12, 0x037A	; 0x80037a <CompassMenu()::last_interrupt_time>
    427a:	d0 90 7b 03 	lds	r13, 0x037B	; 0x80037b <CompassMenu()::last_interrupt_time+0x1>
    427e:	e0 90 7c 03 	lds	r14, 0x037C	; 0x80037c <CompassMenu()::last_interrupt_time+0x2>
    4282:	f0 90 7d 03 	lds	r15, 0x037D	; 0x80037d <CompassMenu()::last_interrupt_time+0x3>
    4286:	6c 19       	sub	r22, r12
    4288:	7d 09       	sbc	r23, r13
    428a:	8e 09       	sbc	r24, r14
    428c:	9f 09       	sbc	r25, r15
    428e:	69 3c       	cpi	r22, 0xC9	; 201
    4290:	71 05       	cpc	r23, r1
    4292:	81 05       	cpc	r24, r1
    4294:	91 05       	cpc	r25, r1
    4296:	30 f0       	brcs	.+12     	; 0x42a4 <CompassMenu()+0x5c>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:6
                        gForceData.switch_to_gGraph = !gForceData.switch_to_gGraph;
    4298:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <gForceData+0x2>
    429c:	91 e0       	ldi	r25, 0x01	; 1
    429e:	89 27       	eor	r24, r25
    42a0:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <gForceData+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:8
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
    42a4:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    42a8:	60 93 7a 03 	sts	0x037A, r22	; 0x80037a <CompassMenu()::last_interrupt_time>
    42ac:	70 93 7b 03 	sts	0x037B, r23	; 0x80037b <CompassMenu()::last_interrupt_time+0x1>
    42b0:	80 93 7c 03 	sts	0x037C, r24	; 0x80037c <CompassMenu()::last_interrupt_time+0x2>
    42b4:	90 93 7d 03 	sts	0x037D, r25	; 0x80037d <CompassMenu()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:4
void CompassMenu(void) {
        /* Switch to Gravity Graph Mode */
        static unsigned long last_interrupt_time = 0;
        while (!digitalRead(B_Pin)) {
    42b8:	d7 cf       	rjmp	.-82     	; 0x4268 <CompassMenu()+0x20>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:19
                  if (millis() - last_interrupt_time > 200) {
                          gForceData.switch_to_gGraph = !gForceData.switch_to_gGraph;
                  }
                  last_interrupt_time = millis(); /* Update Interrupt Time */
          }
          gForceGraph();
    42ba:	0e 94 72 1a 	call	0x34e4	; 0x34e4 <gForceGraph()>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:11
                        gForceData.switch_to_gGraph = !gForceData.switch_to_gGraph;
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
        }

        while(gForceData.switch_to_gGraph)
    42be:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <gForceData+0x2>
    42c2:	88 23       	and	r24, r24
    42c4:	49 f1       	breq	.+82     	; 0x4318 <CompassMenu()+0xd0>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:13
        {
          while (!digitalRead(B_Pin)) {
    42c6:	81 e0       	ldi	r24, 0x01	; 1
    42c8:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    42cc:	89 2b       	or	r24, r25
    42ce:	a9 f7       	brne	.-22     	; 0x42ba <CompassMenu()+0x72>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:14
                  if (millis() - last_interrupt_time > 200) {
    42d0:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    42d4:	c0 90 7a 03 	lds	r12, 0x037A	; 0x80037a <CompassMenu()::last_interrupt_time>
    42d8:	d0 90 7b 03 	lds	r13, 0x037B	; 0x80037b <CompassMenu()::last_interrupt_time+0x1>
    42dc:	e0 90 7c 03 	lds	r14, 0x037C	; 0x80037c <CompassMenu()::last_interrupt_time+0x2>
    42e0:	f0 90 7d 03 	lds	r15, 0x037D	; 0x80037d <CompassMenu()::last_interrupt_time+0x3>
    42e4:	6c 19       	sub	r22, r12
    42e6:	7d 09       	sbc	r23, r13
    42e8:	8e 09       	sbc	r24, r14
    42ea:	9f 09       	sbc	r25, r15
    42ec:	69 3c       	cpi	r22, 0xC9	; 201
    42ee:	71 05       	cpc	r23, r1
    42f0:	81 05       	cpc	r24, r1
    42f2:	91 05       	cpc	r25, r1
    42f4:	30 f0       	brcs	.+12     	; 0x4302 <CompassMenu()+0xba>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:15
                          gForceData.switch_to_gGraph = !gForceData.switch_to_gGraph;
    42f6:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <gForceData+0x2>
    42fa:	91 e0       	ldi	r25, 0x01	; 1
    42fc:	89 27       	eor	r24, r25
    42fe:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <gForceData+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:17
                  }
                  last_interrupt_time = millis(); /* Update Interrupt Time */
    4302:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    4306:	60 93 7a 03 	sts	0x037A, r22	; 0x80037a <CompassMenu()::last_interrupt_time>
    430a:	70 93 7b 03 	sts	0x037B, r23	; 0x80037b <CompassMenu()::last_interrupt_time+0x1>
    430e:	80 93 7c 03 	sts	0x037C, r24	; 0x80037c <CompassMenu()::last_interrupt_time+0x2>
    4312:	90 93 7d 03 	sts	0x037D, r25	; 0x80037d <CompassMenu()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:13
                last_interrupt_time = millis(); /* Update Interrupt Time */
        }

        while(gForceData.switch_to_gGraph)
        {
          while (!digitalRead(B_Pin)) {
    4316:	d7 cf       	rjmp	.-82     	; 0x42c6 <CompassMenu()+0x7e>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:23
          }
          gForceGraph();
        }

        /* Read Magneto Sensor Value */
        compass.read();
    4318:	83 ed       	ldi	r24, 0xD3	; 211
    431a:	98 e0       	ldi	r25, 0x08	; 8
    431c:	0e 94 08 60 	call	0xc010	; 0xc010 <LSM303::read()>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:24
        compass_var.heading = atan2(compass.m.y, compass.m.x) * 180 / PI;
    4320:	60 91 d9 08 	lds	r22, 0x08D9	; 0x8008d9 <compass+0x6>
    4324:	70 91 da 08 	lds	r23, 0x08DA	; 0x8008da <compass+0x7>
    4328:	07 2e       	mov	r0, r23
    432a:	00 0c       	add	r0, r0
    432c:	88 0b       	sbc	r24, r24
    432e:	99 0b       	sbc	r25, r25
    4330:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    4334:	6b 01       	movw	r12, r22
    4336:	7c 01       	movw	r14, r24
    4338:	60 91 db 08 	lds	r22, 0x08DB	; 0x8008db <compass+0x8>
    433c:	70 91 dc 08 	lds	r23, 0x08DC	; 0x8008dc <compass+0x9>
    4340:	07 2e       	mov	r0, r23
    4342:	00 0c       	add	r0, r0
    4344:	88 0b       	sbc	r24, r24
    4346:	99 0b       	sbc	r25, r25
    4348:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    434c:	a7 01       	movw	r20, r14
    434e:	96 01       	movw	r18, r12
    4350:	0e 94 02 71 	call	0xe204	; 0xe204 <atan2>
    4354:	20 e0       	ldi	r18, 0x00	; 0
    4356:	30 e0       	ldi	r19, 0x00	; 0
    4358:	44 e3       	ldi	r20, 0x34	; 52
    435a:	53 e4       	ldi	r21, 0x43	; 67
    435c:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    4360:	2b ed       	ldi	r18, 0xDB	; 219
    4362:	3f e0       	ldi	r19, 0x0F	; 15
    4364:	49 e4       	ldi	r20, 0x49	; 73
    4366:	50 e4       	ldi	r21, 0x40	; 64
    4368:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    436c:	6b 01       	movw	r12, r22
    436e:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:25
        if (compass_var.heading < 0)
    4370:	20 e0       	ldi	r18, 0x00	; 0
    4372:	30 e0       	ldi	r19, 0x00	; 0
    4374:	a9 01       	movw	r20, r18
    4376:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    437a:	87 fd       	sbrc	r24, 7
    437c:	03 c3       	rjmp	.+1542   	; 0x4984 <CompassMenu()+0x73c>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:24
          gForceGraph();
        }

        /* Read Magneto Sensor Value */
        compass.read();
        compass_var.heading = atan2(compass.m.y, compass.m.x) * 180 / PI;
    437e:	c0 92 0e 01 	sts	0x010E, r12	; 0x80010e <compass_var+0x6>
    4382:	d0 92 0f 01 	sts	0x010F, r13	; 0x80010f <compass_var+0x7>
    4386:	e0 92 10 01 	sts	0x0110, r14	; 0x800110 <compass_var+0x8>
    438a:	f0 92 11 01 	sts	0x0111, r15	; 0x800111 <compass_var+0x9>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:29
        if (compass_var.heading < 0)
                compass_var.heading = 360 + compass_var.heading;

        /* Apply Low Pass Filter for Compass Reading */
        compass_var.heading = compass_var.headingOld * compass_var.p1 +
    438e:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <compass_var+0xe>
    4392:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <compass_var+0xf>
    4396:	40 91 18 01 	lds	r20, 0x0118	; 0x800118 <compass_var+0x10>
    439a:	50 91 19 01 	lds	r21, 0x0119	; 0x800119 <compass_var+0x11>
    439e:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <compass_var+0xa>
    43a2:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <compass_var+0xb>
    43a6:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <compass_var+0xc>
    43aa:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <compass_var+0xd>
    43ae:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    43b2:	6b 01       	movw	r12, r22
    43b4:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:30
                              compass_var.heading * compass_var.p2;
    43b6:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <compass_var+0x12>
    43ba:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <compass_var+0x13>
    43be:	40 91 1c 01 	lds	r20, 0x011C	; 0x80011c <compass_var+0x14>
    43c2:	50 91 1d 01 	lds	r21, 0x011D	; 0x80011d <compass_var+0x15>
    43c6:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    43ca:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    43ce:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    43d2:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    43d6:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    43da:	9b 01       	movw	r18, r22
    43dc:	ac 01       	movw	r20, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:29
        compass_var.heading = atan2(compass.m.y, compass.m.x) * 180 / PI;
        if (compass_var.heading < 0)
                compass_var.heading = 360 + compass_var.heading;

        /* Apply Low Pass Filter for Compass Reading */
        compass_var.heading = compass_var.headingOld * compass_var.p1 +
    43de:	c7 01       	movw	r24, r14
    43e0:	b6 01       	movw	r22, r12
    43e2:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    43e6:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <compass_var+0x6>
    43ea:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <compass_var+0x7>
    43ee:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <compass_var+0x8>
    43f2:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <compass_var+0x9>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:31
                              compass_var.heading * compass_var.p2;
        compass_var.headingOld = compass_var.heading;
    43f6:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <compass_var+0xa>
    43fa:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <compass_var+0xb>
    43fe:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <compass_var+0xc>
    4402:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <compass_var+0xd>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:33

        display.clearDisplay();
    4406:	81 e0       	ldi	r24, 0x01	; 1
    4408:	99 e0       	ldi	r25, 0x09	; 9
    440a:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:35
        /* White Rectangle */
        display.fillRect(1, 1, 128, 9, WHITE);
    440e:	ee 24       	eor	r14, r14
    4410:	e3 94       	inc	r14
    4412:	f1 2c       	mov	r15, r1
    4414:	09 e0       	ldi	r16, 0x09	; 9
    4416:	10 e0       	ldi	r17, 0x00	; 0
    4418:	20 e8       	ldi	r18, 0x80	; 128
    441a:	30 e0       	ldi	r19, 0x00	; 0
    441c:	41 e0       	ldi	r20, 0x01	; 1
    441e:	50 e0       	ldi	r21, 0x00	; 0
    4420:	61 e0       	ldi	r22, 0x01	; 1
    4422:	70 e0       	ldi	r23, 0x00	; 0
    4424:	81 e0       	ldi	r24, 0x01	; 1
    4426:	99 e0       	ldi	r25, 0x09	; 9
    4428:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:36
        display.setTextSize(1);
    442c:	61 e0       	ldi	r22, 0x01	; 1
    442e:	81 e0       	ldi	r24, 0x01	; 1
    4430:	99 e0       	ldi	r25, 0x09	; 9
    4432:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    4436:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    443a:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    443e:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    4442:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4446:	83 e1       	ldi	r24, 0x13	; 19
    4448:	90 e0       	ldi	r25, 0x00	; 0
    444a:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    444e:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4452:	82 e0       	ldi	r24, 0x02	; 2
    4454:	90 e0       	ldi	r25, 0x00	; 0
    4456:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    445a:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:39
        display.setTextColor(BLACK);
        display.setCursor(19, 2);
        display.print(F("DIGITAL COMPASS"));
    445e:	6d e1       	ldi	r22, 0x1D	; 29
    4460:	74 e0       	ldi	r23, 0x04	; 4
    4462:	81 e0       	ldi	r24, 0x01	; 1
    4464:	99 e0       	ldi	r25, 0x09	; 9
    4466:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    446a:	81 e0       	ldi	r24, 0x01	; 1
    446c:	90 e0       	ldi	r25, 0x00	; 0
    446e:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <display+0x13>
    4472:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <display+0x12>
    4476:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <display+0x11>
    447a:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <display+0x10>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:43

        /* Compass GUI */
        display.setTextColor(WHITE);
        display.setTextSize(2);
    447e:	62 e0       	ldi	r22, 0x02	; 2
    4480:	81 e0       	ldi	r24, 0x01	; 1
    4482:	99 e0       	ldi	r25, 0x09	; 9
    4484:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:46

        /* Compass Heading */
        if ((compass_var.heading > 0) && (compass_var.heading < 10)) /* 1 Chars */
    4488:	c0 90 0e 01 	lds	r12, 0x010E	; 0x80010e <compass_var+0x6>
    448c:	d0 90 0f 01 	lds	r13, 0x010F	; 0x80010f <compass_var+0x7>
    4490:	e0 90 10 01 	lds	r14, 0x0110	; 0x800110 <compass_var+0x8>
    4494:	f0 90 11 01 	lds	r15, 0x0111	; 0x800111 <compass_var+0x9>
    4498:	20 e0       	ldi	r18, 0x00	; 0
    449a:	30 e0       	ldi	r19, 0x00	; 0
    449c:	a9 01       	movw	r20, r18
    449e:	c7 01       	movw	r24, r14
    44a0:	b6 01       	movw	r22, r12
    44a2:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    44a6:	18 16       	cp	r1, r24
    44a8:	b4 f4       	brge	.+44     	; 0x44d6 <CompassMenu()+0x28e>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:46 (discriminator 1)
    44aa:	20 e0       	ldi	r18, 0x00	; 0
    44ac:	30 e0       	ldi	r19, 0x00	; 0
    44ae:	40 e2       	ldi	r20, 0x20	; 32
    44b0:	51 e4       	ldi	r21, 0x41	; 65
    44b2:	c7 01       	movw	r24, r14
    44b4:	b6 01       	movw	r22, r12
    44b6:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    44ba:	87 ff       	sbrs	r24, 7
    44bc:	0c c0       	rjmp	.+24     	; 0x44d6 <CompassMenu()+0x28e>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    44be:	84 e7       	ldi	r24, 0x74	; 116
    44c0:	90 e0       	ldi	r25, 0x00	; 0
    44c2:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    44c6:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    44ca:	87 e2       	ldi	r24, 0x27	; 39
    44cc:	90 e0       	ldi	r25, 0x00	; 0
    44ce:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    44d2:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:48
                display.setCursor(116, 39);
        if ((compass_var.heading > 10) && (compass_var.heading < 100)) /* 2 Chars */
    44d6:	20 e0       	ldi	r18, 0x00	; 0
    44d8:	30 e0       	ldi	r19, 0x00	; 0
    44da:	40 e2       	ldi	r20, 0x20	; 32
    44dc:	51 e4       	ldi	r21, 0x41	; 65
    44de:	c7 01       	movw	r24, r14
    44e0:	b6 01       	movw	r22, r12
    44e2:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    44e6:	18 16       	cp	r1, r24
    44e8:	b4 f4       	brge	.+44     	; 0x4516 <CompassMenu()+0x2ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:48 (discriminator 1)
    44ea:	20 e0       	ldi	r18, 0x00	; 0
    44ec:	30 e0       	ldi	r19, 0x00	; 0
    44ee:	48 ec       	ldi	r20, 0xC8	; 200
    44f0:	52 e4       	ldi	r21, 0x42	; 66
    44f2:	c7 01       	movw	r24, r14
    44f4:	b6 01       	movw	r22, r12
    44f6:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    44fa:	87 ff       	sbrs	r24, 7
    44fc:	0c c0       	rjmp	.+24     	; 0x4516 <CompassMenu()+0x2ce>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    44fe:	88 e6       	ldi	r24, 0x68	; 104
    4500:	90 e0       	ldi	r25, 0x00	; 0
    4502:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    4506:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    450a:	87 e2       	ldi	r24, 0x27	; 39
    450c:	90 e0       	ldi	r25, 0x00	; 0
    450e:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4512:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:50
                display.setCursor(104, 39);
        if (compass_var.heading > 100) /* 3 Chars */
    4516:	20 e0       	ldi	r18, 0x00	; 0
    4518:	30 e0       	ldi	r19, 0x00	; 0
    451a:	48 ec       	ldi	r20, 0xC8	; 200
    451c:	52 e4       	ldi	r21, 0x42	; 66
    451e:	c7 01       	movw	r24, r14
    4520:	b6 01       	movw	r22, r12
    4522:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    4526:	18 16       	cp	r1, r24
    4528:	64 f4       	brge	.+24     	; 0x4542 <CompassMenu()+0x2fa>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    452a:	8c e5       	ldi	r24, 0x5C	; 92
    452c:	90 e0       	ldi	r25, 0x00	; 0
    452e:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    4532:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4536:	87 e2       	ldi	r24, 0x27	; 39
    4538:	90 e0       	ldi	r25, 0x00	; 0
    453a:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    453e:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:52
                display.setCursor(92, 39);
        display.print(int(compass_var.heading));
    4542:	c7 01       	movw	r24, r14
    4544:	b6 01       	movw	r22, r12
    4546:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    454a:	4a e0       	ldi	r20, 0x0A	; 10
    454c:	50 e0       	ldi	r21, 0x00	; 0
    454e:	81 e0       	ldi	r24, 0x01	; 1
    4550:	99 e0       	ldi	r25, 0x09	; 9
    4552:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:55

        /* Cardinal Indicator */
        if (strlen(gps.cardinal(compass_var.heading)) == 1) /* 1 Chars */
    4556:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    455a:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    455e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    4562:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    4566:	0e 94 f1 66 	call	0xcde2	; 0xcde2 <TinyGPSPlus::cardinal(double)>
    456a:	fc 01       	movw	r30, r24
    456c:	01 90       	ld	r0, Z+
    456e:	00 20       	and	r0, r0
    4570:	e9 f7       	brne	.-6      	; 0x456c <CompassMenu()+0x324>
    4572:	9f 01       	movw	r18, r30
    4574:	22 50       	subi	r18, 0x02	; 2
    4576:	31 09       	sbc	r19, r1
    4578:	28 17       	cp	r18, r24
    457a:	39 07       	cpc	r19, r25
    457c:	61 f4       	brne	.+24     	; 0x4596 <CompassMenu()+0x34e>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    457e:	84 e7       	ldi	r24, 0x74	; 116
    4580:	90 e0       	ldi	r25, 0x00	; 0
    4582:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    4586:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    458a:	84 e1       	ldi	r24, 0x14	; 20
    458c:	90 e0       	ldi	r25, 0x00	; 0
    458e:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4592:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:57
                display.setCursor(116, 20);
        if (strlen(gps.cardinal(compass_var.heading)) == 2) /* 2 Chars */
    4596:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    459a:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    459e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    45a2:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    45a6:	0e 94 f1 66 	call	0xcde2	; 0xcde2 <TinyGPSPlus::cardinal(double)>
    45aa:	fc 01       	movw	r30, r24
    45ac:	01 90       	ld	r0, Z+
    45ae:	00 20       	and	r0, r0
    45b0:	e9 f7       	brne	.-6      	; 0x45ac <CompassMenu()+0x364>
    45b2:	9f 01       	movw	r18, r30
    45b4:	23 50       	subi	r18, 0x03	; 3
    45b6:	31 09       	sbc	r19, r1
    45b8:	28 17       	cp	r18, r24
    45ba:	39 07       	cpc	r19, r25
    45bc:	61 f4       	brne	.+24     	; 0x45d6 <CompassMenu()+0x38e>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    45be:	88 e6       	ldi	r24, 0x68	; 104
    45c0:	90 e0       	ldi	r25, 0x00	; 0
    45c2:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    45c6:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    45ca:	84 e1       	ldi	r24, 0x14	; 20
    45cc:	90 e0       	ldi	r25, 0x00	; 0
    45ce:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    45d2:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:59
                display.setCursor(104, 20);
        if (strlen(gps.cardinal(compass_var.heading)) == 3) /* 3 Chars */
    45d6:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    45da:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    45de:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    45e2:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    45e6:	0e 94 f1 66 	call	0xcde2	; 0xcde2 <TinyGPSPlus::cardinal(double)>
    45ea:	fc 01       	movw	r30, r24
    45ec:	01 90       	ld	r0, Z+
    45ee:	00 20       	and	r0, r0
    45f0:	e9 f7       	brne	.-6      	; 0x45ec <CompassMenu()+0x3a4>
    45f2:	9f 01       	movw	r18, r30
    45f4:	24 50       	subi	r18, 0x04	; 4
    45f6:	31 09       	sbc	r19, r1
    45f8:	28 17       	cp	r18, r24
    45fa:	39 07       	cpc	r19, r25
    45fc:	61 f4       	brne	.+24     	; 0x4616 <CompassMenu()+0x3ce>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    45fe:	8c e5       	ldi	r24, 0x5C	; 92
    4600:	90 e0       	ldi	r25, 0x00	; 0
    4602:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    4606:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    460a:	84 e1       	ldi	r24, 0x14	; 20
    460c:	90 e0       	ldi	r25, 0x00	; 0
    460e:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4612:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:61
                display.setCursor(92, 20);
        display.print(gps.cardinal(compass_var.heading));
    4616:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    461a:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    461e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    4622:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    4626:	0e 94 f1 66 	call	0xcde2	; 0xcde2 <TinyGPSPlus::cardinal(double)>
    462a:	bc 01       	movw	r22, r24
    462c:	81 e0       	ldi	r24, 0x01	; 1
    462e:	99 e0       	ldi	r25, 0x09	; 9
    4630:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:64

        /* Compass Indicator */
        display.setTextSize(1);
    4634:	61 e0       	ldi	r22, 0x01	; 1
    4636:	81 e0       	ldi	r24, 0x01	; 1
    4638:	99 e0       	ldi	r25, 0x09	; 9
    463a:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    463e:	cb e2       	ldi	r28, 0x2B	; 43
    4640:	d0 e0       	ldi	r29, 0x00	; 0
    4642:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    4646:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    464a:	8d e0       	ldi	r24, 0x0D	; 13
    464c:	90 e0       	ldi	r25, 0x00	; 0
    464e:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4652:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:66
        display.setCursor(43, 13);
        display.print('N');
    4656:	6e e4       	ldi	r22, 0x4E	; 78
    4658:	81 e0       	ldi	r24, 0x01	; 1
    465a:	99 e0       	ldi	r25, 0x09	; 9
    465c:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4660:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    4664:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4668:	86 e3       	ldi	r24, 0x36	; 54
    466a:	90 e0       	ldi	r25, 0x00	; 0
    466c:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4670:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:68
        display.setCursor(43, 54);
        display.print('S');
    4674:	63 e5       	ldi	r22, 0x53	; 83
    4676:	81 e0       	ldi	r24, 0x01	; 1
    4678:	99 e0       	ldi	r25, 0x09	; 9
    467a:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    467e:	86 e1       	ldi	r24, 0x16	; 22
    4680:	90 e0       	ldi	r25, 0x00	; 0
    4682:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    4686:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    468a:	c2 e2       	ldi	r28, 0x22	; 34
    468c:	d0 e0       	ldi	r29, 0x00	; 0
    468e:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    4692:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:70
        display.setCursor(22, 34);
        display.print('W');
    4696:	67 e5       	ldi	r22, 0x57	; 87
    4698:	81 e0       	ldi	r24, 0x01	; 1
    469a:	99 e0       	ldi	r25, 0x09	; 9
    469c:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    46a0:	80 e4       	ldi	r24, 0x40	; 64
    46a2:	90 e0       	ldi	r25, 0x00	; 0
    46a4:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    46a8:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    46ac:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    46b0:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:72
        display.setCursor(64, 34);
        display.print('E');
    46b4:	65 e4       	ldi	r22, 0x45	; 69
    46b6:	81 e0       	ldi	r24, 0x01	; 1
    46b8:	99 e0       	ldi	r25, 0x09	; 9
    46ba:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:73
        display.drawPixel(45, 37, WHITE);
    46be:	21 e0       	ldi	r18, 0x01	; 1
    46c0:	30 e0       	ldi	r19, 0x00	; 0
    46c2:	45 e2       	ldi	r20, 0x25	; 37
    46c4:	50 e0       	ldi	r21, 0x00	; 0
    46c6:	6d e2       	ldi	r22, 0x2D	; 45
    46c8:	70 e0       	ldi	r23, 0x00	; 0
    46ca:	81 e0       	ldi	r24, 0x01	; 1
    46cc:	99 e0       	ldi	r25, 0x09	; 9
    46ce:	0e 94 60 4c 	call	0x98c0	; 0x98c0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:74
        display.drawCircle(45, 37, 26, WHITE);
    46d2:	01 e0       	ldi	r16, 0x01	; 1
    46d4:	10 e0       	ldi	r17, 0x00	; 0
    46d6:	2a e1       	ldi	r18, 0x1A	; 26
    46d8:	30 e0       	ldi	r19, 0x00	; 0
    46da:	45 e2       	ldi	r20, 0x25	; 37
    46dc:	50 e0       	ldi	r21, 0x00	; 0
    46de:	6d e2       	ldi	r22, 0x2D	; 45
    46e0:	70 e0       	ldi	r23, 0x00	; 0
    46e2:	81 e0       	ldi	r24, 0x01	; 1
    46e4:	99 e0       	ldi	r25, 0x09	; 9
    46e6:	0e 94 56 44 	call	0x88ac	; 0x88ac <Adafruit_GFX::drawCircle(int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:80

        /* Draw Compass Line */
        int r = 20;

        /* Indicator */
        display.fillCircle(5, 15, 2, WHITE);
    46ea:	22 e0       	ldi	r18, 0x02	; 2
    46ec:	30 e0       	ldi	r19, 0x00	; 0
    46ee:	4f e0       	ldi	r20, 0x0F	; 15
    46f0:	50 e0       	ldi	r21, 0x00	; 0
    46f2:	65 e0       	ldi	r22, 0x05	; 5
    46f4:	70 e0       	ldi	r23, 0x00	; 0
    46f6:	81 e0       	ldi	r24, 0x01	; 1
    46f8:	99 e0       	ldi	r25, 0x09	; 9
    46fa:	0e 94 7f 47 	call	0x8efe	; 0x8efe <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    46fe:	83 e0       	ldi	r24, 0x03	; 3
    4700:	90 e0       	ldi	r25, 0x00	; 0
    4702:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    4706:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    470a:	84 e1       	ldi	r24, 0x14	; 20
    470c:	90 e0       	ldi	r25, 0x00	; 0
    470e:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4712:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:81
        display.setCursor(3, 20); display.print('N');
    4716:	6e e4       	ldi	r22, 0x4E	; 78
    4718:	81 e0       	ldi	r24, 0x01	; 1
    471a:	99 e0       	ldi	r25, 0x09	; 9
    471c:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:86

        /* Pointing North */
        display.drawLine(45, 37,
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), WHITE);
    4720:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <compass_var+0x6>
    4724:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <compass_var+0x7>
    4728:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <compass_var+0x8>
    472c:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <compass_var+0x9>
    4730:	60 e0       	ldi	r22, 0x00	; 0
    4732:	70 e0       	ldi	r23, 0x00	; 0
    4734:	84 eb       	ldi	r24, 0xB4	; 180
    4736:	93 e4       	ldi	r25, 0x43	; 67
    4738:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    473c:	20 e0       	ldi	r18, 0x00	; 0
    473e:	30 e0       	ldi	r19, 0x00	; 0
    4740:	44 eb       	ldi	r20, 0xB4	; 180
    4742:	52 e4       	ldi	r21, 0x42	; 66
    4744:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    4748:	2b ed       	ldi	r18, 0xDB	; 219
    474a:	3f e0       	ldi	r19, 0x0F	; 15
    474c:	49 e4       	ldi	r20, 0x49	; 73
    474e:	50 e4       	ldi	r21, 0x40	; 64
    4750:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    4754:	20 e0       	ldi	r18, 0x00	; 0
    4756:	30 e0       	ldi	r19, 0x00	; 0
    4758:	44 e3       	ldi	r20, 0x34	; 52
    475a:	53 e4       	ldi	r21, 0x43	; 67
    475c:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    4760:	6b 01       	movw	r12, r22
    4762:	7c 01       	movw	r14, r24
    4764:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    4768:	4b 01       	movw	r8, r22
    476a:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:85
        display.fillCircle(5, 15, 2, WHITE);
        display.setCursor(3, 20); display.print('N');

        /* Pointing North */
        display.drawLine(45, 37,
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
    476c:	c7 01       	movw	r24, r14
    476e:	b6 01       	movw	r22, r12
    4770:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    4774:	6b 01       	movw	r12, r22
    4776:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:86
                         37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), WHITE);
    4778:	20 e0       	ldi	r18, 0x00	; 0
    477a:	30 e0       	ldi	r19, 0x00	; 0
    477c:	40 ea       	ldi	r20, 0xA0	; 160
    477e:	51 e4       	ldi	r21, 0x41	; 65
    4780:	c5 01       	movw	r24, r10
    4782:	b4 01       	movw	r22, r8
    4784:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    4788:	20 e0       	ldi	r18, 0x00	; 0
    478a:	30 e0       	ldi	r19, 0x00	; 0
    478c:	44 e1       	ldi	r20, 0x14	; 20
    478e:	52 e4       	ldi	r21, 0x42	; 66
    4790:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:84
        /* Indicator */
        display.fillCircle(5, 15, 2, WHITE);
        display.setCursor(3, 20); display.print('N');

        /* Pointing North */
        display.drawLine(45, 37,
    4794:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    4798:	4b 01       	movw	r8, r22
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:85
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
    479a:	20 e0       	ldi	r18, 0x00	; 0
    479c:	30 e0       	ldi	r19, 0x00	; 0
    479e:	40 ea       	ldi	r20, 0xA0	; 160
    47a0:	51 e4       	ldi	r21, 0x41	; 65
    47a2:	c7 01       	movw	r24, r14
    47a4:	b6 01       	movw	r22, r12
    47a6:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    47aa:	20 e0       	ldi	r18, 0x00	; 0
    47ac:	30 e0       	ldi	r19, 0x00	; 0
    47ae:	44 e3       	ldi	r20, 0x34	; 52
    47b0:	52 e4       	ldi	r21, 0x42	; 66
    47b2:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:84
        /* Indicator */
        display.fillCircle(5, 15, 2, WHITE);
        display.setCursor(3, 20); display.print('N');

        /* Pointing North */
        display.drawLine(45, 37,
    47b6:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    47ba:	ee 24       	eor	r14, r14
    47bc:	e3 94       	inc	r14
    47be:	f1 2c       	mov	r15, r1
    47c0:	84 01       	movw	r16, r8
    47c2:	9b 01       	movw	r18, r22
    47c4:	45 e2       	ldi	r20, 0x25	; 37
    47c6:	50 e0       	ldi	r21, 0x00	; 0
    47c8:	6d e2       	ldi	r22, 0x2D	; 45
    47ca:	70 e0       	ldi	r23, 0x00	; 0
    47cc:	81 e0       	ldi	r24, 0x01	; 1
    47ce:	99 e0       	ldi	r25, 0x09	; 9
    47d0:	0e 94 a7 43 	call	0x874e	; 0x874e <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:89
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), WHITE);
        /* Dot North */
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);
    47d4:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <compass_var+0x6>
    47d8:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <compass_var+0x7>
    47dc:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <compass_var+0x8>
    47e0:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <compass_var+0x9>
    47e4:	60 e0       	ldi	r22, 0x00	; 0
    47e6:	70 e0       	ldi	r23, 0x00	; 0
    47e8:	84 eb       	ldi	r24, 0xB4	; 180
    47ea:	93 e4       	ldi	r25, 0x43	; 67
    47ec:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    47f0:	20 e0       	ldi	r18, 0x00	; 0
    47f2:	30 e0       	ldi	r19, 0x00	; 0
    47f4:	44 eb       	ldi	r20, 0xB4	; 180
    47f6:	52 e4       	ldi	r21, 0x42	; 66
    47f8:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    47fc:	2b ed       	ldi	r18, 0xDB	; 219
    47fe:	3f e0       	ldi	r19, 0x0F	; 15
    4800:	49 e4       	ldi	r20, 0x49	; 73
    4802:	50 e4       	ldi	r21, 0x40	; 64
    4804:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    4808:	20 e0       	ldi	r18, 0x00	; 0
    480a:	30 e0       	ldi	r19, 0x00	; 0
    480c:	44 e3       	ldi	r20, 0x34	; 52
    480e:	53 e4       	ldi	r21, 0x43	; 67
    4810:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    4814:	6b 01       	movw	r12, r22
    4816:	7c 01       	movw	r14, r24
    4818:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    481c:	2b 01       	movw	r4, r22
    481e:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:88
        /* Pointing North */
        display.drawLine(45, 37,
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), WHITE);
        /* Dot North */
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
    4820:	c7 01       	movw	r24, r14
    4822:	b6 01       	movw	r22, r12
    4824:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    4828:	4b 01       	movw	r8, r22
    482a:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:89
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);
    482c:	20 e0       	ldi	r18, 0x00	; 0
    482e:	30 e0       	ldi	r19, 0x00	; 0
    4830:	40 ea       	ldi	r20, 0xA0	; 160
    4832:	51 e4       	ldi	r21, 0x41	; 65
    4834:	c3 01       	movw	r24, r6
    4836:	b2 01       	movw	r22, r4
    4838:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    483c:	20 e0       	ldi	r18, 0x00	; 0
    483e:	30 e0       	ldi	r19, 0x00	; 0
    4840:	44 e1       	ldi	r20, 0x14	; 20
    4842:	52 e4       	ldi	r21, 0x42	; 66
    4844:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:88
        /* Pointing North */
        display.drawLine(45, 37,
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), WHITE);
        /* Dot North */
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
    4848:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    484c:	6b 01       	movw	r12, r22
    484e:	20 e0       	ldi	r18, 0x00	; 0
    4850:	30 e0       	ldi	r19, 0x00	; 0
    4852:	40 ea       	ldi	r20, 0xA0	; 160
    4854:	51 e4       	ldi	r21, 0x41	; 65
    4856:	c5 01       	movw	r24, r10
    4858:	b4 01       	movw	r22, r8
    485a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    485e:	20 e0       	ldi	r18, 0x00	; 0
    4860:	30 e0       	ldi	r19, 0x00	; 0
    4862:	44 e3       	ldi	r20, 0x34	; 52
    4864:	52 e4       	ldi	r21, 0x42	; 66
    4866:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    486a:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    486e:	01 e0       	ldi	r16, 0x01	; 1
    4870:	10 e0       	ldi	r17, 0x00	; 0
    4872:	22 e0       	ldi	r18, 0x02	; 2
    4874:	30 e0       	ldi	r19, 0x00	; 0
    4876:	a6 01       	movw	r20, r12
    4878:	81 e0       	ldi	r24, 0x01	; 1
    487a:	99 e0       	ldi	r25, 0x09	; 9
    487c:	0e 94 7f 47 	call	0x8efe	; 0x8efe <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:94
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);

        /* Heading */
        display.drawLine(45, 37,
                         45 + r * cos((compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((compass_var.heading - 90)*M_PI / 180), WHITE);
    4880:	20 e0       	ldi	r18, 0x00	; 0
    4882:	30 e0       	ldi	r19, 0x00	; 0
    4884:	44 eb       	ldi	r20, 0xB4	; 180
    4886:	52 e4       	ldi	r21, 0x42	; 66
    4888:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    488c:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    4890:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    4894:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    4898:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    489c:	2b ed       	ldi	r18, 0xDB	; 219
    489e:	3f e0       	ldi	r19, 0x0F	; 15
    48a0:	49 e4       	ldi	r20, 0x49	; 73
    48a2:	50 e4       	ldi	r21, 0x40	; 64
    48a4:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    48a8:	20 e0       	ldi	r18, 0x00	; 0
    48aa:	30 e0       	ldi	r19, 0x00	; 0
    48ac:	44 e3       	ldi	r20, 0x34	; 52
    48ae:	53 e4       	ldi	r21, 0x43	; 67
    48b0:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    48b4:	6b 01       	movw	r12, r22
    48b6:	7c 01       	movw	r14, r24
    48b8:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    48bc:	4b 01       	movw	r8, r22
    48be:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:93
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);

        /* Heading */
        display.drawLine(45, 37,
                         45 + r * cos((compass_var.heading - 90)*M_PI / 180),
    48c0:	c7 01       	movw	r24, r14
    48c2:	b6 01       	movw	r22, r12
    48c4:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    48c8:	6b 01       	movw	r12, r22
    48ca:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:94
                         37 + r * sin((compass_var.heading - 90)*M_PI / 180), WHITE);
    48cc:	20 e0       	ldi	r18, 0x00	; 0
    48ce:	30 e0       	ldi	r19, 0x00	; 0
    48d0:	40 ea       	ldi	r20, 0xA0	; 160
    48d2:	51 e4       	ldi	r21, 0x41	; 65
    48d4:	c5 01       	movw	r24, r10
    48d6:	b4 01       	movw	r22, r8
    48d8:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    48dc:	20 e0       	ldi	r18, 0x00	; 0
    48de:	30 e0       	ldi	r19, 0x00	; 0
    48e0:	44 e1       	ldi	r20, 0x14	; 20
    48e2:	52 e4       	ldi	r21, 0x42	; 66
    48e4:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:92
        /* Dot North */
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);

        /* Heading */
        display.drawLine(45, 37,
    48e8:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    48ec:	4b 01       	movw	r8, r22
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:93
                         45 + r * cos((compass_var.heading - 90)*M_PI / 180),
    48ee:	20 e0       	ldi	r18, 0x00	; 0
    48f0:	30 e0       	ldi	r19, 0x00	; 0
    48f2:	40 ea       	ldi	r20, 0xA0	; 160
    48f4:	51 e4       	ldi	r21, 0x41	; 65
    48f6:	c7 01       	movw	r24, r14
    48f8:	b6 01       	movw	r22, r12
    48fa:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    48fe:	20 e0       	ldi	r18, 0x00	; 0
    4900:	30 e0       	ldi	r19, 0x00	; 0
    4902:	44 e3       	ldi	r20, 0x34	; 52
    4904:	52 e4       	ldi	r21, 0x42	; 66
    4906:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:92
        /* Dot North */
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);

        /* Heading */
        display.drawLine(45, 37,
    490a:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    490e:	ee 24       	eor	r14, r14
    4910:	e3 94       	inc	r14
    4912:	f1 2c       	mov	r15, r1
    4914:	84 01       	movw	r16, r8
    4916:	9b 01       	movw	r18, r22
    4918:	45 e2       	ldi	r20, 0x25	; 37
    491a:	50 e0       	ldi	r21, 0x00	; 0
    491c:	6d e2       	ldi	r22, 0x2D	; 45
    491e:	70 e0       	ldi	r23, 0x00	; 0
    4920:	81 e0       	ldi	r24, 0x01	; 1
    4922:	99 e0       	ldi	r25, 0x09	; 9
    4924:	0e 94 a7 43 	call	0x874e	; 0x874e <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:97
                         45 + r * cos((compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((compass_var.heading - 90)*M_PI / 180), WHITE);

        /* NEWS Indicator */
        if ((int(compass_var.heading) == 0)   || (int(compass_var.heading) == 90) ||
    4928:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    492c:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    4930:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    4934:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    4938:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    493c:	61 15       	cp	r22, r1
    493e:	71 05       	cpc	r23, r1
    4940:	49 f0       	breq	.+18     	; 0x4954 <CompassMenu()+0x70c>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:97 (discriminator 1)
    4942:	6a 35       	cpi	r22, 0x5A	; 90
    4944:	71 05       	cpc	r23, r1
    4946:	31 f0       	breq	.+12     	; 0x4954 <CompassMenu()+0x70c>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:97 (discriminator 2)
    4948:	64 3b       	cpi	r22, 0xB4	; 180
    494a:	71 05       	cpc	r23, r1
    494c:	19 f0       	breq	.+6      	; 0x4954 <CompassMenu()+0x70c>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:98
            (int(compass_var.heading) == 180) || (int(compass_var.heading) == 270))
    494e:	6e 30       	cpi	r22, 0x0E	; 14
    4950:	71 40       	sbci	r23, 0x01	; 1
    4952:	49 f5       	brne	.+82     	; 0x49a6 <CompassMenu()+0x75e>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:99
                digitalWrite(USR_LED_0, LOW);
    4954:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:101
        else
                digitalWrite(USR_LED_0, HIGH);
    4956:	85 e1       	ldi	r24, 0x15	; 21
    4958:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:103

        display.display();
    495c:	81 e0       	ldi	r24, 0x01	; 1
    495e:	99 e0       	ldi	r25, 0x09	; 9
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:104
}
    4960:	df 91       	pop	r29
    4962:	cf 91       	pop	r28
    4964:	1f 91       	pop	r17
    4966:	0f 91       	pop	r16
    4968:	ff 90       	pop	r15
    496a:	ef 90       	pop	r14
    496c:	df 90       	pop	r13
    496e:	cf 90       	pop	r12
    4970:	bf 90       	pop	r11
    4972:	af 90       	pop	r10
    4974:	9f 90       	pop	r9
    4976:	8f 90       	pop	r8
    4978:	7f 90       	pop	r7
    497a:	6f 90       	pop	r6
    497c:	5f 90       	pop	r5
    497e:	4f 90       	pop	r4
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:103
            (int(compass_var.heading) == 180) || (int(compass_var.heading) == 270))
                digitalWrite(USR_LED_0, LOW);
        else
                digitalWrite(USR_LED_0, HIGH);

        display.display();
    4980:	0c 94 5f 52 	jmp	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:26

        /* Read Magneto Sensor Value */
        compass.read();
        compass_var.heading = atan2(compass.m.y, compass.m.x) * 180 / PI;
        if (compass_var.heading < 0)
                compass_var.heading = 360 + compass_var.heading;
    4984:	20 e0       	ldi	r18, 0x00	; 0
    4986:	30 e0       	ldi	r19, 0x00	; 0
    4988:	44 eb       	ldi	r20, 0xB4	; 180
    498a:	53 e4       	ldi	r21, 0x43	; 67
    498c:	c7 01       	movw	r24, r14
    498e:	b6 01       	movw	r22, r12
    4990:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    4994:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <compass_var+0x6>
    4998:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <compass_var+0x7>
    499c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <compass_var+0x8>
    49a0:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <compass_var+0x9>
    49a4:	f4 cc       	rjmp	.-1560   	; 0x438e <CompassMenu()+0x146>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:101
        /* NEWS Indicator */
        if ((int(compass_var.heading) == 0)   || (int(compass_var.heading) == 90) ||
            (int(compass_var.heading) == 180) || (int(compass_var.heading) == 270))
                digitalWrite(USR_LED_0, LOW);
        else
                digitalWrite(USR_LED_0, HIGH);
    49a6:	61 e0       	ldi	r22, 0x01	; 1
    49a8:	d6 cf       	rjmp	.-84     	; 0x4956 <CompassMenu()+0x70e>

000049aa <SatelliteTracker()>:
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:1
void SatelliteTracker(void) {
    49aa:	6f 92       	push	r6
    49ac:	7f 92       	push	r7
    49ae:	8f 92       	push	r8
    49b0:	9f 92       	push	r9
    49b2:	af 92       	push	r10
    49b4:	bf 92       	push	r11
    49b6:	cf 92       	push	r12
    49b8:	df 92       	push	r13
    49ba:	ef 92       	push	r14
    49bc:	ff 92       	push	r15
    49be:	0f 93       	push	r16
    49c0:	1f 93       	push	r17
    49c2:	cf 93       	push	r28
    49c4:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:3
  /* Dispatch Incoming Characters */
  if (ss.available() > 0) {
    49c6:	87 e0       	ldi	r24, 0x07	; 7
    49c8:	98 e0       	ldi	r25, 0x08	; 8
    49ca:	0e 94 e6 61 	call	0xc3cc	; 0xc3cc <SoftwareSerial::available()>
    49ce:	18 16       	cp	r1, r24
    49d0:	19 06       	cpc	r1, r25
    49d2:	0c f0       	brlt	.+2      	; 0x49d6 <SatelliteTracker()+0x2c>
    49d4:	3d c4       	rjmp	.+2170   	; 0x5250 <SatelliteTracker()+0x8a6>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:4
    gps.encode(ss.read());
    49d6:	87 e0       	ldi	r24, 0x07	; 7
    49d8:	98 e0       	ldi	r25, 0x08	; 8
    49da:	0e 94 50 61 	call	0xc2a0	; 0xc2a0 <SoftwareSerial::read()>
    49de:	68 2f       	mov	r22, r24
    49e0:	86 e2       	ldi	r24, 0x26	; 38
    49e2:	98 e0       	ldi	r25, 0x08	; 8
    49e4:	0e 94 6e 6a 	call	0xd4dc	; 0xd4dc <TinyGPSPlus::encode(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:5
    if (totalGPGSVMessages.isUpdated()) {
    49e8:	80 91 df 07 	lds	r24, 0x07DF	; 0x8007df <totalGPGSVMessages+0x25>
    49ec:	88 23       	and	r24, r24
    49ee:	09 f4       	brne	.+2      	; 0x49f2 <SatelliteTracker()+0x48>
    49f0:	2f c4       	rjmp	.+2142   	; 0x5250 <SatelliteTracker()+0x8a6>
    49f2:	82 ec       	ldi	r24, 0xC2	; 194
    49f4:	88 2e       	mov	r8, r24
    49f6:	86 e0       	ldi	r24, 0x06	; 6
    49f8:	98 2e       	mov	r9, r24
    49fa:	c5 e2       	ldi	r28, 0x25	; 37
    49fc:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:9
      for (int i = 0; i < 4; ++i) {
        int no = atoi(satNumber[i].value());
        if (no >= 1 && no <= MAX_SATELLITES) {
          sats[no - 1].elevation = atoi(elevation[i].value());
    49fe:	97 e0       	ldi	r25, 0x07	; 7
    4a00:	f9 2e       	mov	r15, r25
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:12
          sats[no - 1].azimuth = atoi(azimuth[i].value());
          sats[no - 1].snr = atoi(snr[i].value());
          sats[no - 1].active = true;
    4a02:	ee 24       	eor	r14, r14
    4a04:	e3 94       	inc	r14
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
   void begin(TinyGPSPlus &gps, const char *_sentenceName, int _termNumber);

   bool isUpdated() const  { return updated; }
   bool isValid() const    { return valid; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   const char *value()     { updated = false; return buffer; }
    4a06:	d4 01       	movw	r26, r8
    4a08:	55 96       	adiw	r26, 0x15	; 21
    4a0a:	1c 92       	st	X, r1
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:7
  /* Dispatch Incoming Characters */
  if (ss.available() > 0) {
    gps.encode(ss.read());
    if (totalGPGSVMessages.isUpdated()) {
      for (int i = 0; i < 4; ++i) {
        int no = atoi(satNumber[i].value());
    4a0c:	c4 01       	movw	r24, r8
    4a0e:	0e 94 8e 76 	call	0xed1c	; 0xed1c <atoi>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:8
        if (no >= 1 && no <= MAX_SATELLITES) {
    4a12:	01 97       	sbiw	r24, 0x01	; 1
    4a14:	3c 01       	movw	r6, r24
    4a16:	88 97       	sbiw	r24, 0x28	; 40
    4a18:	70 f5       	brcc	.+92     	; 0x4a76 <SatelliteTracker()+0xcc>
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
    4a1a:	fe 01       	movw	r30, r28
    4a1c:	ee 5f       	subi	r30, 0xFE	; 254
    4a1e:	f9 4f       	sbci	r31, 0xF9	; 249
    4a20:	10 82       	st	Z, r1
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:9
          sats[no - 1].elevation = atoi(elevation[i].value());
    4a22:	ce 01       	movw	r24, r28
    4a24:	83 51       	subi	r24, 0x13	; 19
    4a26:	9a 4f       	sbci	r25, 0xFA	; 250
    4a28:	0e 94 8e 76 	call	0xed1c	; 0xed1c <atoi>
    4a2c:	f6 9c       	mul	r15, r6
    4a2e:	80 01       	movw	r16, r0
    4a30:	f7 9c       	mul	r15, r7
    4a32:	10 0d       	add	r17, r0
    4a34:	11 24       	eor	r1, r1
    4a36:	06 57       	subi	r16, 0x76	; 118
    4a38:	1c 4f       	sbci	r17, 0xFC	; 252
    4a3a:	f8 01       	movw	r30, r16
    4a3c:	92 83       	std	Z+2, r25	; 0x02
    4a3e:	81 83       	std	Z+1, r24	; 0x01
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
    4a40:	fe 01       	movw	r30, r28
    4a42:	ee 5a       	subi	r30, 0xAE	; 174
    4a44:	fa 4f       	sbci	r31, 0xFA	; 250
    4a46:	10 82       	st	Z, r1
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:10
          sats[no - 1].azimuth = atoi(azimuth[i].value());
    4a48:	ce 01       	movw	r24, r28
    4a4a:	83 5c       	subi	r24, 0xC3	; 195
    4a4c:	9a 4f       	sbci	r25, 0xFA	; 250
    4a4e:	0e 94 8e 76 	call	0xed1c	; 0xed1c <atoi>
    4a52:	d8 01       	movw	r26, r16
    4a54:	14 96       	adiw	r26, 0x04	; 4
    4a56:	9c 93       	st	X, r25
    4a58:	8e 93       	st	-X, r24
    4a5a:	13 97       	sbiw	r26, 0x03	; 3
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
    4a5c:	fe 01       	movw	r30, r28
    4a5e:	ee 55       	subi	r30, 0x5E	; 94
    4a60:	fb 4f       	sbci	r31, 0xFB	; 251
    4a62:	10 82       	st	Z, r1
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:11
          sats[no - 1].snr = atoi(snr[i].value());
    4a64:	ce 01       	movw	r24, r28
    4a66:	83 57       	subi	r24, 0x73	; 115
    4a68:	9b 4f       	sbci	r25, 0xFB	; 251
    4a6a:	0e 94 8e 76 	call	0xed1c	; 0xed1c <atoi>
    4a6e:	f8 01       	movw	r30, r16
    4a70:	96 83       	std	Z+6, r25	; 0x06
    4a72:	85 83       	std	Z+5, r24	; 0x05
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:12
          sats[no - 1].active = true;
    4a74:	e0 82       	st	Z, r14
    4a76:	fc e2       	ldi	r31, 0x2C	; 44
    4a78:	8f 0e       	add	r8, r31
    4a7a:	91 1c       	adc	r9, r1
    4a7c:	ac 96       	adiw	r28, 0x2c	; 44
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:6
void SatelliteTracker(void) {
  /* Dispatch Incoming Characters */
  if (ss.available() > 0) {
    gps.encode(ss.read());
    if (totalGPGSVMessages.isUpdated()) {
      for (int i = 0; i < 4; ++i) {
    4a7e:	c5 3d       	cpi	r28, 0xD5	; 213
    4a80:	d1 05       	cpc	r29, r1
    4a82:	09 f6       	brne	.-126    	; 0x4a06 <SatelliteTracker()+0x5c>
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
    4a84:	10 92 df 07 	sts	0x07DF, r1	; 0x8007df <totalGPGSVMessages+0x25>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:16
          sats[no - 1].snr = atoi(snr[i].value());
          sats[no - 1].active = true;
        }
      }

      int totalMessages = atoi(totalGPGSVMessages.value());
    4a88:	8a ec       	ldi	r24, 0xCA	; 202
    4a8a:	97 e0       	ldi	r25, 0x07	; 7
    4a8c:	0e 94 8e 76 	call	0xed1c	; 0xed1c <atoi>
    4a90:	ec 01       	movw	r28, r24
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
    4a92:	10 92 b3 07 	sts	0x07B3, r1	; 0x8007b3 <messageNumber+0x25>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:17
      int currentMessage = atoi(messageNumber.value());
    4a96:	8e e9       	ldi	r24, 0x9E	; 158
    4a98:	97 e0       	ldi	r25, 0x07	; 7
    4a9a:	0e 94 8e 76 	call	0xed1c	; 0xed1c <atoi>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:19

      if (totalMessages == currentMessage) {
    4a9e:	c8 17       	cp	r28, r24
    4aa0:	d9 07       	cpc	r29, r25
    4aa2:	09 f0       	breq	.+2      	; 0x4aa6 <SatelliteTracker()+0xfc>
    4aa4:	d5 c3       	rjmp	.+1962   	; 0x5250 <SatelliteTracker()+0x8a6>
    4aa6:	20 91 12 03 	lds	r18, 0x0312	; 0x800312 <SatelliteTracker()::j>
    4aaa:	30 91 13 03 	lds	r19, 0x0313	; 0x800313 <SatelliteTracker()::j+0x1>
    4aae:	0a e8       	ldi	r16, 0x8A	; 138
    4ab0:	60 2e       	mov	r6, r16
    4ab2:	03 e0       	ldi	r16, 0x03	; 3
    4ab4:	70 2e       	mov	r7, r16
    4ab6:	f3 01       	movw	r30, r6
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:23
        static int snr[12], satellite_id[12], j = 0;

        /* Get Satellite ID */
        for (int i = 0; i < MAX_SATELLITES; ++i)
    4ab8:	90 e0       	ldi	r25, 0x00	; 0
    4aba:	80 e0       	ldi	r24, 0x00	; 0
    4abc:	01 96       	adiw	r24, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:24
          if (sats[i].active) {
    4abe:	40 81       	ld	r20, Z
    4ac0:	44 23       	and	r20, r20
    4ac2:	49 f0       	breq	.+18     	; 0x4ad6 <SatelliteTracker()+0x12c>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:25
            satellite_id[j] = i + 1;
    4ac4:	d9 01       	movw	r26, r18
    4ac6:	aa 0f       	add	r26, r26
    4ac8:	bb 1f       	adc	r27, r27
    4aca:	ac 5e       	subi	r26, 0xEC	; 236
    4acc:	bc 4f       	sbci	r27, 0xFC	; 252
    4ace:	8d 93       	st	X+, r24
    4ad0:	9c 93       	st	X, r25
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:26
            j++;
    4ad2:	2f 5f       	subi	r18, 0xFF	; 255
    4ad4:	3f 4f       	sbci	r19, 0xFF	; 255
    4ad6:	37 96       	adiw	r30, 0x07	; 7
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:23

      if (totalMessages == currentMessage) {
        static int snr[12], satellite_id[12], j = 0;

        /* Get Satellite ID */
        for (int i = 0; i < MAX_SATELLITES; ++i)
    4ad8:	88 32       	cpi	r24, 0x28	; 40
    4ada:	91 05       	cpc	r25, r1
    4adc:	79 f7       	brne	.-34     	; 0x4abc <SatelliteTracker()+0x112>
    4ade:	22 ea       	ldi	r18, 0xA2	; 162
    4ae0:	34 e0       	ldi	r19, 0x04	; 4
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:27
          if (sats[i].active) {
            satellite_id[j] = i + 1;
            j++;
          } j = 0;
    4ae2:	da e8       	ldi	r29, 0x8A	; 138
    4ae4:	8d 2e       	mov	r8, r29
    4ae6:	d3 e0       	ldi	r29, 0x03	; 3
    4ae8:	9d 2e       	mov	r9, r29
    4aea:	90 e0       	ldi	r25, 0x00	; 0
    4aec:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:31

        /* Max Satellite Reception on Clear Day */
        for (int i = 0; i < MAX_SATELLITES; ++i)
          if (sats[i].active) {
    4aee:	d4 01       	movw	r26, r8
    4af0:	4c 91       	ld	r20, X
    4af2:	44 23       	and	r20, r20
    4af4:	59 f0       	breq	.+22     	; 0x4b0c <SatelliteTracker()+0x162>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:32
            snr[j] = sats[i].snr;
    4af6:	fc 01       	movw	r30, r24
    4af8:	ee 0f       	add	r30, r30
    4afa:	ff 1f       	adc	r31, r31
    4afc:	e4 5d       	subi	r30, 0xD4	; 212
    4afe:	fc 4f       	sbci	r31, 0xFC	; 252
    4b00:	15 96       	adiw	r26, 0x05	; 5
    4b02:	4d 91       	ld	r20, X+
    4b04:	5c 91       	ld	r21, X
    4b06:	51 83       	std	Z+1, r21	; 0x01
    4b08:	40 83       	st	Z, r20
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:33
            j++;
    4b0a:	01 96       	adiw	r24, 0x01	; 1
    4b0c:	b7 e0       	ldi	r27, 0x07	; 7
    4b0e:	8b 0e       	add	r8, r27
    4b10:	91 1c       	adc	r9, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:30
            satellite_id[j] = i + 1;
            j++;
          } j = 0;

        /* Max Satellite Reception on Clear Day */
        for (int i = 0; i < MAX_SATELLITES; ++i)
    4b12:	28 15       	cp	r18, r8
    4b14:	39 05       	cpc	r19, r9
    4b16:	59 f7       	brne	.-42     	; 0x4aee <SatelliteTracker()+0x144>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:34
          if (sats[i].active) {
            snr[j] = sats[i].snr;
            j++;
          } j = 0;
    4b18:	10 92 13 03 	sts	0x0313, r1	; 0x800313 <SatelliteTracker()::j+0x1>
    4b1c:	10 92 12 03 	sts	0x0312, r1	; 0x800312 <SatelliteTracker()::j>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:37

        /* Setup GUI Header */
        display.fillRect(0, 0, 128, 9, WHITE);
    4b20:	ee 24       	eor	r14, r14
    4b22:	e3 94       	inc	r14
    4b24:	f1 2c       	mov	r15, r1
    4b26:	09 e0       	ldi	r16, 0x09	; 9
    4b28:	10 e0       	ldi	r17, 0x00	; 0
    4b2a:	20 e8       	ldi	r18, 0x80	; 128
    4b2c:	30 e0       	ldi	r19, 0x00	; 0
    4b2e:	50 e0       	ldi	r21, 0x00	; 0
    4b30:	40 e0       	ldi	r20, 0x00	; 0
    4b32:	70 e0       	ldi	r23, 0x00	; 0
    4b34:	60 e0       	ldi	r22, 0x00	; 0
    4b36:	81 e0       	ldi	r24, 0x01	; 1
    4b38:	99 e0       	ldi	r25, 0x09	; 9
    4b3a:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:38
        display.setTextSize(1);
    4b3e:	61 e0       	ldi	r22, 0x01	; 1
    4b40:	81 e0       	ldi	r24, 0x01	; 1
    4b42:	99 e0       	ldi	r25, 0x09	; 9
    4b44:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    4b48:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    4b4c:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    4b50:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    4b54:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4b58:	8d e0       	ldi	r24, 0x0D	; 13
    4b5a:	90 e0       	ldi	r25, 0x00	; 0
    4b5c:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    4b60:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4b64:	c1 e0       	ldi	r28, 0x01	; 1
    4b66:	d0 e0       	ldi	r29, 0x00	; 0
    4b68:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    4b6c:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:40
        display.setTextColor(BLACK);
        display.setCursor(13, 1);   display.print("SATELLITE TRACKER");
    4b70:	6c ef       	ldi	r22, 0xFC	; 252
    4b72:	71 e0       	ldi	r23, 0x01	; 1
    4b74:	81 e0       	ldi	r24, 0x01	; 1
    4b76:	99 e0       	ldi	r25, 0x09	; 9
    4b78:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    4b7c:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    4b80:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    4b84:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    4b88:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4b8c:	c0 e5       	ldi	r28, 0x50	; 80
    4b8e:	d0 e0       	ldi	r29, 0x00	; 0
    4b90:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    4b94:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4b98:	8b e0       	ldi	r24, 0x0B	; 11
    4b9a:	90 e0       	ldi	r25, 0x00	; 0
    4b9c:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4ba0:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:44

        /* Display Satellite Number */
        display.setTextColor(WHITE);
        display.setCursor(80, 11);  display.print(satellite_id[0]);
    4ba4:	60 91 14 03 	lds	r22, 0x0314	; 0x800314 <SatelliteTracker()::satellite_id>
    4ba8:	70 91 15 03 	lds	r23, 0x0315	; 0x800315 <SatelliteTracker()::satellite_id+0x1>
    4bac:	4a e0       	ldi	r20, 0x0A	; 10
    4bae:	50 e0       	ldi	r21, 0x00	; 0
    4bb0:	81 e0       	ldi	r24, 0x01	; 1
    4bb2:	99 e0       	ldi	r25, 0x09	; 9
    4bb4:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:45
        display.print(',');         display.print(satellite_id[1]);
    4bb8:	6c e2       	ldi	r22, 0x2C	; 44
    4bba:	81 e0       	ldi	r24, 0x01	; 1
    4bbc:	99 e0       	ldi	r25, 0x09	; 9
    4bbe:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    4bc2:	60 91 16 03 	lds	r22, 0x0316	; 0x800316 <SatelliteTracker()::satellite_id+0x2>
    4bc6:	70 91 17 03 	lds	r23, 0x0317	; 0x800317 <SatelliteTracker()::satellite_id+0x3>
    4bca:	4a e0       	ldi	r20, 0x0A	; 10
    4bcc:	50 e0       	ldi	r21, 0x00	; 0
    4bce:	81 e0       	ldi	r24, 0x01	; 1
    4bd0:	99 e0       	ldi	r25, 0x09	; 9
    4bd2:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:46
        display.print(',');         display.print(satellite_id[2]);
    4bd6:	6c e2       	ldi	r22, 0x2C	; 44
    4bd8:	81 e0       	ldi	r24, 0x01	; 1
    4bda:	99 e0       	ldi	r25, 0x09	; 9
    4bdc:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    4be0:	60 91 18 03 	lds	r22, 0x0318	; 0x800318 <SatelliteTracker()::satellite_id+0x4>
    4be4:	70 91 19 03 	lds	r23, 0x0319	; 0x800319 <SatelliteTracker()::satellite_id+0x5>
    4be8:	4a e0       	ldi	r20, 0x0A	; 10
    4bea:	50 e0       	ldi	r21, 0x00	; 0
    4bec:	81 e0       	ldi	r24, 0x01	; 1
    4bee:	99 e0       	ldi	r25, 0x09	; 9
    4bf0:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4bf4:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    4bf8:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4bfc:	85 e1       	ldi	r24, 0x15	; 21
    4bfe:	90 e0       	ldi	r25, 0x00	; 0
    4c00:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4c04:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:48

        display.setCursor(80, 21);  display.print(satellite_id[3]);
    4c08:	60 91 1a 03 	lds	r22, 0x031A	; 0x80031a <SatelliteTracker()::satellite_id+0x6>
    4c0c:	70 91 1b 03 	lds	r23, 0x031B	; 0x80031b <SatelliteTracker()::satellite_id+0x7>
    4c10:	4a e0       	ldi	r20, 0x0A	; 10
    4c12:	50 e0       	ldi	r21, 0x00	; 0
    4c14:	81 e0       	ldi	r24, 0x01	; 1
    4c16:	99 e0       	ldi	r25, 0x09	; 9
    4c18:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:49
        display.print(',');         display.print(satellite_id[4]);
    4c1c:	6c e2       	ldi	r22, 0x2C	; 44
    4c1e:	81 e0       	ldi	r24, 0x01	; 1
    4c20:	99 e0       	ldi	r25, 0x09	; 9
    4c22:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    4c26:	60 91 1c 03 	lds	r22, 0x031C	; 0x80031c <SatelliteTracker()::satellite_id+0x8>
    4c2a:	70 91 1d 03 	lds	r23, 0x031D	; 0x80031d <SatelliteTracker()::satellite_id+0x9>
    4c2e:	4a e0       	ldi	r20, 0x0A	; 10
    4c30:	50 e0       	ldi	r21, 0x00	; 0
    4c32:	81 e0       	ldi	r24, 0x01	; 1
    4c34:	99 e0       	ldi	r25, 0x09	; 9
    4c36:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:50
        display.print(',');         display.print(satellite_id[5]);
    4c3a:	6c e2       	ldi	r22, 0x2C	; 44
    4c3c:	81 e0       	ldi	r24, 0x01	; 1
    4c3e:	99 e0       	ldi	r25, 0x09	; 9
    4c40:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    4c44:	60 91 1e 03 	lds	r22, 0x031E	; 0x80031e <SatelliteTracker()::satellite_id+0xa>
    4c48:	70 91 1f 03 	lds	r23, 0x031F	; 0x80031f <SatelliteTracker()::satellite_id+0xb>
    4c4c:	4a e0       	ldi	r20, 0x0A	; 10
    4c4e:	50 e0       	ldi	r21, 0x00	; 0
    4c50:	81 e0       	ldi	r24, 0x01	; 1
    4c52:	99 e0       	ldi	r25, 0x09	; 9
    4c54:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4c58:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    4c5c:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4c60:	8f e1       	ldi	r24, 0x1F	; 31
    4c62:	90 e0       	ldi	r25, 0x00	; 0
    4c64:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4c68:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:52

        display.setCursor(80, 31);  display.print(satellite_id[6]);
    4c6c:	60 91 20 03 	lds	r22, 0x0320	; 0x800320 <SatelliteTracker()::satellite_id+0xc>
    4c70:	70 91 21 03 	lds	r23, 0x0321	; 0x800321 <SatelliteTracker()::satellite_id+0xd>
    4c74:	4a e0       	ldi	r20, 0x0A	; 10
    4c76:	50 e0       	ldi	r21, 0x00	; 0
    4c78:	81 e0       	ldi	r24, 0x01	; 1
    4c7a:	99 e0       	ldi	r25, 0x09	; 9
    4c7c:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:53
        display.print(',');         display.print(satellite_id[7]);
    4c80:	6c e2       	ldi	r22, 0x2C	; 44
    4c82:	81 e0       	ldi	r24, 0x01	; 1
    4c84:	99 e0       	ldi	r25, 0x09	; 9
    4c86:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    4c8a:	60 91 22 03 	lds	r22, 0x0322	; 0x800322 <SatelliteTracker()::satellite_id+0xe>
    4c8e:	70 91 23 03 	lds	r23, 0x0323	; 0x800323 <SatelliteTracker()::satellite_id+0xf>
    4c92:	4a e0       	ldi	r20, 0x0A	; 10
    4c94:	50 e0       	ldi	r21, 0x00	; 0
    4c96:	81 e0       	ldi	r24, 0x01	; 1
    4c98:	99 e0       	ldi	r25, 0x09	; 9
    4c9a:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:54
        display.print(',');         display.print(satellite_id[8]);
    4c9e:	6c e2       	ldi	r22, 0x2C	; 44
    4ca0:	81 e0       	ldi	r24, 0x01	; 1
    4ca2:	99 e0       	ldi	r25, 0x09	; 9
    4ca4:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    4ca8:	60 91 24 03 	lds	r22, 0x0324	; 0x800324 <SatelliteTracker()::satellite_id+0x10>
    4cac:	70 91 25 03 	lds	r23, 0x0325	; 0x800325 <SatelliteTracker()::satellite_id+0x11>
    4cb0:	4a e0       	ldi	r20, 0x0A	; 10
    4cb2:	50 e0       	ldi	r21, 0x00	; 0
    4cb4:	81 e0       	ldi	r24, 0x01	; 1
    4cb6:	99 e0       	ldi	r25, 0x09	; 9
    4cb8:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4cbc:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    4cc0:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4cc4:	89 e2       	ldi	r24, 0x29	; 41
    4cc6:	90 e0       	ldi	r25, 0x00	; 0
    4cc8:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4ccc:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:56

        display.setCursor(80, 41);  display.print(satellite_id[9]);
    4cd0:	60 91 26 03 	lds	r22, 0x0326	; 0x800326 <SatelliteTracker()::satellite_id+0x12>
    4cd4:	70 91 27 03 	lds	r23, 0x0327	; 0x800327 <SatelliteTracker()::satellite_id+0x13>
    4cd8:	4a e0       	ldi	r20, 0x0A	; 10
    4cda:	50 e0       	ldi	r21, 0x00	; 0
    4cdc:	81 e0       	ldi	r24, 0x01	; 1
    4cde:	99 e0       	ldi	r25, 0x09	; 9
    4ce0:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:57
        display.print(',');         display.print(satellite_id[10]);
    4ce4:	6c e2       	ldi	r22, 0x2C	; 44
    4ce6:	81 e0       	ldi	r24, 0x01	; 1
    4ce8:	99 e0       	ldi	r25, 0x09	; 9
    4cea:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    4cee:	60 91 28 03 	lds	r22, 0x0328	; 0x800328 <SatelliteTracker()::satellite_id+0x14>
    4cf2:	70 91 29 03 	lds	r23, 0x0329	; 0x800329 <SatelliteTracker()::satellite_id+0x15>
    4cf6:	4a e0       	ldi	r20, 0x0A	; 10
    4cf8:	50 e0       	ldi	r21, 0x00	; 0
    4cfa:	81 e0       	ldi	r24, 0x01	; 1
    4cfc:	99 e0       	ldi	r25, 0x09	; 9
    4cfe:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:58
        display.print(',');         display.print(satellite_id[11]);
    4d02:	6c e2       	ldi	r22, 0x2C	; 44
    4d04:	81 e0       	ldi	r24, 0x01	; 1
    4d06:	99 e0       	ldi	r25, 0x09	; 9
    4d08:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    4d0c:	60 91 2a 03 	lds	r22, 0x032A	; 0x80032a <SatelliteTracker()::satellite_id+0x16>
    4d10:	70 91 2b 03 	lds	r23, 0x032B	; 0x80032b <SatelliteTracker()::satellite_id+0x17>
    4d14:	4a e0       	ldi	r20, 0x0A	; 10
    4d16:	50 e0       	ldi	r21, 0x00	; 0
    4d18:	81 e0       	ldi	r24, 0x01	; 1
    4d1a:	99 e0       	ldi	r25, 0x09	; 9
    4d1c:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:60

        display.drawLine(78, 51, 128, 51, WHITE);
    4d20:	03 e3       	ldi	r16, 0x33	; 51
    4d22:	10 e0       	ldi	r17, 0x00	; 0
    4d24:	20 e8       	ldi	r18, 0x80	; 128
    4d26:	30 e0       	ldi	r19, 0x00	; 0
    4d28:	43 e3       	ldi	r20, 0x33	; 51
    4d2a:	50 e0       	ldi	r21, 0x00	; 0
    4d2c:	6e e4       	ldi	r22, 0x4E	; 78
    4d2e:	70 e0       	ldi	r23, 0x00	; 0
    4d30:	81 e0       	ldi	r24, 0x01	; 1
    4d32:	99 e0       	ldi	r25, 0x09	; 9
    4d34:	0e 94 a7 43 	call	0x874e	; 0x874e <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4d38:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    4d3c:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4d40:	87 e3       	ldi	r24, 0x37	; 55
    4d42:	90 e0       	ldi	r25, 0x00	; 0
    4d44:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    4d48:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:62
        display.setCursor(80, 55);
        display.print(F("SAT: "));  display.print(gps.satellites.value());
    4d4c:	6c e4       	ldi	r22, 0x4C	; 76
    4d4e:	72 e0       	ldi	r23, 0x02	; 2
    4d50:	81 e0       	ldi	r24, 0x01	; 1
    4d52:	99 e0       	ldi	r25, 0x09	; 9
    4d54:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   uint32_t value()        { updated = false; return val; }
    4d58:	10 92 8f 08 	sts	0x088F, r1	; 0x80088f <gps+0x69>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:62
    4d5c:	40 91 94 08 	lds	r20, 0x0894	; 0x800894 <gps+0x6e>
    4d60:	50 91 95 08 	lds	r21, 0x0895	; 0x800895 <gps+0x6f>
    4d64:	60 91 96 08 	lds	r22, 0x0896	; 0x800896 <gps+0x70>
    4d68:	70 91 97 08 	lds	r23, 0x0897	; 0x800897 <gps+0x71>
    4d6c:	2a e0       	ldi	r18, 0x0A	; 10
    4d6e:	30 e0       	ldi	r19, 0x00	; 0
    4d70:	81 e0       	ldi	r24, 0x01	; 1
    4d72:	99 e0       	ldi	r25, 0x09	; 9
    4d74:	0e 94 03 6f 	call	0xde06	; 0xde06 <Print::print(unsigned long, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:65

        /* Display SNR Bar graph */
        for (int i = 10; i < 64; i++) {  /* 25% */
    4d78:	ca e0       	ldi	r28, 0x0A	; 10
    4d7a:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:67
          display.drawPixel(19, i, logic.lastState);
          logic.lastState = !logic.lastState;
    4d7c:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:66
        display.setCursor(80, 55);
        display.print(F("SAT: "));  display.print(gps.satellites.value());

        /* Display SNR Bar graph */
        for (int i = 10; i < 64; i++) {  /* 25% */
          display.drawPixel(19, i, logic.lastState);
    4d7e:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    4d82:	30 e0       	ldi	r19, 0x00	; 0
    4d84:	ae 01       	movw	r20, r28
    4d86:	63 e1       	ldi	r22, 0x13	; 19
    4d88:	70 e0       	ldi	r23, 0x00	; 0
    4d8a:	81 e0       	ldi	r24, 0x01	; 1
    4d8c:	99 e0       	ldi	r25, 0x09	; 9
    4d8e:	0e 94 60 4c 	call	0x98c0	; 0x98c0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:67
          logic.lastState = !logic.lastState;
    4d92:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    4d96:	81 27       	eor	r24, r17
    4d98:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:65
        display.drawLine(78, 51, 128, 51, WHITE);
        display.setCursor(80, 55);
        display.print(F("SAT: "));  display.print(gps.satellites.value());

        /* Display SNR Bar graph */
        for (int i = 10; i < 64; i++) {  /* 25% */
    4d9c:	21 96       	adiw	r28, 0x01	; 1
    4d9e:	c0 34       	cpi	r28, 0x40	; 64
    4da0:	d1 05       	cpc	r29, r1
    4da2:	69 f7       	brne	.-38     	; 0x4d7e <SatelliteTracker()+0x3d4>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:69
          display.drawPixel(19, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 50% */
    4da4:	ca e0       	ldi	r28, 0x0A	; 10
    4da6:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:71
          display.drawPixel(38, i, logic.lastState);
          logic.lastState = !logic.lastState;
    4da8:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:70
        for (int i = 10; i < 64; i++) {  /* 25% */
          display.drawPixel(19, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 50% */
          display.drawPixel(38, i, logic.lastState);
    4daa:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    4dae:	30 e0       	ldi	r19, 0x00	; 0
    4db0:	ae 01       	movw	r20, r28
    4db2:	66 e2       	ldi	r22, 0x26	; 38
    4db4:	70 e0       	ldi	r23, 0x00	; 0
    4db6:	81 e0       	ldi	r24, 0x01	; 1
    4db8:	99 e0       	ldi	r25, 0x09	; 9
    4dba:	0e 94 60 4c 	call	0x98c0	; 0x98c0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:71
          logic.lastState = !logic.lastState;
    4dbe:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    4dc2:	81 27       	eor	r24, r17
    4dc4:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:69
        /* Display SNR Bar graph */
        for (int i = 10; i < 64; i++) {  /* 25% */
          display.drawPixel(19, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 50% */
    4dc8:	21 96       	adiw	r28, 0x01	; 1
    4dca:	c0 34       	cpi	r28, 0x40	; 64
    4dcc:	d1 05       	cpc	r29, r1
    4dce:	69 f7       	brne	.-38     	; 0x4daa <SatelliteTracker()+0x400>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:73
          display.drawPixel(38, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 75% */
    4dd0:	ca e0       	ldi	r28, 0x0A	; 10
    4dd2:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:75
          display.drawPixel(57, i, logic.lastState);
          logic.lastState = !logic.lastState;
    4dd4:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:74
        for (int i = 10; i < 64; i++) {  /* 50% */
          display.drawPixel(38, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 75% */
          display.drawPixel(57, i, logic.lastState);
    4dd6:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    4dda:	30 e0       	ldi	r19, 0x00	; 0
    4ddc:	ae 01       	movw	r20, r28
    4dde:	69 e3       	ldi	r22, 0x39	; 57
    4de0:	70 e0       	ldi	r23, 0x00	; 0
    4de2:	81 e0       	ldi	r24, 0x01	; 1
    4de4:	99 e0       	ldi	r25, 0x09	; 9
    4de6:	0e 94 60 4c 	call	0x98c0	; 0x98c0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:75
          logic.lastState = !logic.lastState;
    4dea:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    4dee:	81 27       	eor	r24, r17
    4df0:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:73
        }
        for (int i = 10; i < 64; i++) {  /* 50% */
          display.drawPixel(38, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 75% */
    4df4:	21 96       	adiw	r28, 0x01	; 1
    4df6:	c0 34       	cpi	r28, 0x40	; 64
    4df8:	d1 05       	cpc	r29, r1
    4dfa:	69 f7       	brne	.-38     	; 0x4dd6 <SatelliteTracker()+0x42c>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:77
          display.drawPixel(57, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        display.drawLine(77, 10, 77, 63, WHITE); /* 100% Reception Signal Line */
    4dfc:	ee 24       	eor	r14, r14
    4dfe:	e3 94       	inc	r14
    4e00:	f1 2c       	mov	r15, r1
    4e02:	0f e3       	ldi	r16, 0x3F	; 63
    4e04:	10 e0       	ldi	r17, 0x00	; 0
    4e06:	2d e4       	ldi	r18, 0x4D	; 77
    4e08:	30 e0       	ldi	r19, 0x00	; 0
    4e0a:	4a e0       	ldi	r20, 0x0A	; 10
    4e0c:	50 e0       	ldi	r21, 0x00	; 0
    4e0e:	6d e4       	ldi	r22, 0x4D	; 77
    4e10:	70 e0       	ldi	r23, 0x00	; 0
    4e12:	81 e0       	ldi	r24, 0x01	; 1
    4e14:	99 e0       	ldi	r25, 0x09	; 9
    4e16:	0e 94 a7 43 	call	0x874e	; 0x874e <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:78
        display.fillRect(0, 13, map(snr[0], 0, 99, 1, 75), 3, WHITE);
    4e1a:	60 91 2c 03 	lds	r22, 0x032C	; 0x80032c <SatelliteTracker()::snr>
    4e1e:	70 91 2d 03 	lds	r23, 0x032D	; 0x80032d <SatelliteTracker()::snr+0x1>
    4e22:	07 2e       	mov	r0, r23
    4e24:	00 0c       	add	r0, r0
    4e26:	88 0b       	sbc	r24, r24
    4e28:	99 0b       	sbc	r25, r25
    4e2a:	1f 92       	push	r1
    4e2c:	1f 92       	push	r1
    4e2e:	1f 92       	push	r1
    4e30:	cb e4       	ldi	r28, 0x4B	; 75
    4e32:	cf 93       	push	r28
    4e34:	a1 2c       	mov	r10, r1
    4e36:	b1 2c       	mov	r11, r1
    4e38:	65 01       	movw	r12, r10
    4e3a:	a3 94       	inc	r10
    4e3c:	13 e6       	ldi	r17, 0x63	; 99
    4e3e:	e1 2e       	mov	r14, r17
    4e40:	f1 2c       	mov	r15, r1
    4e42:	00 e0       	ldi	r16, 0x00	; 0
    4e44:	10 e0       	ldi	r17, 0x00	; 0
    4e46:	20 e0       	ldi	r18, 0x00	; 0
    4e48:	30 e0       	ldi	r19, 0x00	; 0
    4e4a:	a9 01       	movw	r20, r18
    4e4c:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    4e50:	ee 24       	eor	r14, r14
    4e52:	e3 94       	inc	r14
    4e54:	f1 2c       	mov	r15, r1
    4e56:	03 e0       	ldi	r16, 0x03	; 3
    4e58:	10 e0       	ldi	r17, 0x00	; 0
    4e5a:	9b 01       	movw	r18, r22
    4e5c:	4d e0       	ldi	r20, 0x0D	; 13
    4e5e:	50 e0       	ldi	r21, 0x00	; 0
    4e60:	70 e0       	ldi	r23, 0x00	; 0
    4e62:	60 e0       	ldi	r22, 0x00	; 0
    4e64:	81 e0       	ldi	r24, 0x01	; 1
    4e66:	99 e0       	ldi	r25, 0x09	; 9
    4e68:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:79
        display.fillRect(0, 17, map(snr[1], 0, 99, 1, 75), 3, WHITE);
    4e6c:	60 91 2e 03 	lds	r22, 0x032E	; 0x80032e <SatelliteTracker()::snr+0x2>
    4e70:	70 91 2f 03 	lds	r23, 0x032F	; 0x80032f <SatelliteTracker()::snr+0x3>
    4e74:	07 2e       	mov	r0, r23
    4e76:	00 0c       	add	r0, r0
    4e78:	88 0b       	sbc	r24, r24
    4e7a:	99 0b       	sbc	r25, r25
    4e7c:	1f 92       	push	r1
    4e7e:	1f 92       	push	r1
    4e80:	1f 92       	push	r1
    4e82:	cf 93       	push	r28
    4e84:	13 e6       	ldi	r17, 0x63	; 99
    4e86:	e1 2e       	mov	r14, r17
    4e88:	f1 2c       	mov	r15, r1
    4e8a:	00 e0       	ldi	r16, 0x00	; 0
    4e8c:	10 e0       	ldi	r17, 0x00	; 0
    4e8e:	20 e0       	ldi	r18, 0x00	; 0
    4e90:	30 e0       	ldi	r19, 0x00	; 0
    4e92:	a9 01       	movw	r20, r18
    4e94:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    4e98:	ee 24       	eor	r14, r14
    4e9a:	e3 94       	inc	r14
    4e9c:	f1 2c       	mov	r15, r1
    4e9e:	03 e0       	ldi	r16, 0x03	; 3
    4ea0:	10 e0       	ldi	r17, 0x00	; 0
    4ea2:	9b 01       	movw	r18, r22
    4ea4:	41 e1       	ldi	r20, 0x11	; 17
    4ea6:	50 e0       	ldi	r21, 0x00	; 0
    4ea8:	70 e0       	ldi	r23, 0x00	; 0
    4eaa:	60 e0       	ldi	r22, 0x00	; 0
    4eac:	81 e0       	ldi	r24, 0x01	; 1
    4eae:	99 e0       	ldi	r25, 0x09	; 9
    4eb0:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:80
        display.fillRect(0, 21, map(snr[2], 0, 99, 1, 75), 3, WHITE);
    4eb4:	60 91 30 03 	lds	r22, 0x0330	; 0x800330 <SatelliteTracker()::snr+0x4>
    4eb8:	70 91 31 03 	lds	r23, 0x0331	; 0x800331 <SatelliteTracker()::snr+0x5>
    4ebc:	07 2e       	mov	r0, r23
    4ebe:	00 0c       	add	r0, r0
    4ec0:	88 0b       	sbc	r24, r24
    4ec2:	99 0b       	sbc	r25, r25
    4ec4:	1f 92       	push	r1
    4ec6:	1f 92       	push	r1
    4ec8:	1f 92       	push	r1
    4eca:	cf 93       	push	r28
    4ecc:	13 e6       	ldi	r17, 0x63	; 99
    4ece:	e1 2e       	mov	r14, r17
    4ed0:	f1 2c       	mov	r15, r1
    4ed2:	00 e0       	ldi	r16, 0x00	; 0
    4ed4:	10 e0       	ldi	r17, 0x00	; 0
    4ed6:	20 e0       	ldi	r18, 0x00	; 0
    4ed8:	30 e0       	ldi	r19, 0x00	; 0
    4eda:	a9 01       	movw	r20, r18
    4edc:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    4ee0:	ee 24       	eor	r14, r14
    4ee2:	e3 94       	inc	r14
    4ee4:	f1 2c       	mov	r15, r1
    4ee6:	03 e0       	ldi	r16, 0x03	; 3
    4ee8:	10 e0       	ldi	r17, 0x00	; 0
    4eea:	9b 01       	movw	r18, r22
    4eec:	45 e1       	ldi	r20, 0x15	; 21
    4eee:	50 e0       	ldi	r21, 0x00	; 0
    4ef0:	70 e0       	ldi	r23, 0x00	; 0
    4ef2:	60 e0       	ldi	r22, 0x00	; 0
    4ef4:	81 e0       	ldi	r24, 0x01	; 1
    4ef6:	99 e0       	ldi	r25, 0x09	; 9
    4ef8:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:81
        display.fillRect(0, 25, map(snr[3], 0, 99, 1, 75), 3, WHITE);
    4efc:	60 91 32 03 	lds	r22, 0x0332	; 0x800332 <SatelliteTracker()::snr+0x6>
    4f00:	70 91 33 03 	lds	r23, 0x0333	; 0x800333 <SatelliteTracker()::snr+0x7>
    4f04:	07 2e       	mov	r0, r23
    4f06:	00 0c       	add	r0, r0
    4f08:	88 0b       	sbc	r24, r24
    4f0a:	99 0b       	sbc	r25, r25
    4f0c:	1f 92       	push	r1
    4f0e:	1f 92       	push	r1
    4f10:	1f 92       	push	r1
    4f12:	cf 93       	push	r28
    4f14:	13 e6       	ldi	r17, 0x63	; 99
    4f16:	e1 2e       	mov	r14, r17
    4f18:	f1 2c       	mov	r15, r1
    4f1a:	00 e0       	ldi	r16, 0x00	; 0
    4f1c:	10 e0       	ldi	r17, 0x00	; 0
    4f1e:	20 e0       	ldi	r18, 0x00	; 0
    4f20:	30 e0       	ldi	r19, 0x00	; 0
    4f22:	a9 01       	movw	r20, r18
    4f24:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    4f28:	ee 24       	eor	r14, r14
    4f2a:	e3 94       	inc	r14
    4f2c:	f1 2c       	mov	r15, r1
    4f2e:	03 e0       	ldi	r16, 0x03	; 3
    4f30:	10 e0       	ldi	r17, 0x00	; 0
    4f32:	9b 01       	movw	r18, r22
    4f34:	49 e1       	ldi	r20, 0x19	; 25
    4f36:	50 e0       	ldi	r21, 0x00	; 0
    4f38:	70 e0       	ldi	r23, 0x00	; 0
    4f3a:	60 e0       	ldi	r22, 0x00	; 0
    4f3c:	81 e0       	ldi	r24, 0x01	; 1
    4f3e:	99 e0       	ldi	r25, 0x09	; 9
    4f40:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:82
        display.fillRect(0, 29, map(snr[4], 0, 99, 1, 75), 3, WHITE);
    4f44:	60 91 34 03 	lds	r22, 0x0334	; 0x800334 <SatelliteTracker()::snr+0x8>
    4f48:	70 91 35 03 	lds	r23, 0x0335	; 0x800335 <SatelliteTracker()::snr+0x9>
    4f4c:	07 2e       	mov	r0, r23
    4f4e:	00 0c       	add	r0, r0
    4f50:	88 0b       	sbc	r24, r24
    4f52:	99 0b       	sbc	r25, r25
    4f54:	1f 92       	push	r1
    4f56:	1f 92       	push	r1
    4f58:	1f 92       	push	r1
    4f5a:	cf 93       	push	r28
    4f5c:	13 e6       	ldi	r17, 0x63	; 99
    4f5e:	e1 2e       	mov	r14, r17
    4f60:	f1 2c       	mov	r15, r1
    4f62:	00 e0       	ldi	r16, 0x00	; 0
    4f64:	10 e0       	ldi	r17, 0x00	; 0
    4f66:	20 e0       	ldi	r18, 0x00	; 0
    4f68:	30 e0       	ldi	r19, 0x00	; 0
    4f6a:	a9 01       	movw	r20, r18
    4f6c:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    4f70:	ee 24       	eor	r14, r14
    4f72:	e3 94       	inc	r14
    4f74:	f1 2c       	mov	r15, r1
    4f76:	03 e0       	ldi	r16, 0x03	; 3
    4f78:	10 e0       	ldi	r17, 0x00	; 0
    4f7a:	9b 01       	movw	r18, r22
    4f7c:	4d e1       	ldi	r20, 0x1D	; 29
    4f7e:	50 e0       	ldi	r21, 0x00	; 0
    4f80:	70 e0       	ldi	r23, 0x00	; 0
    4f82:	60 e0       	ldi	r22, 0x00	; 0
    4f84:	81 e0       	ldi	r24, 0x01	; 1
    4f86:	99 e0       	ldi	r25, 0x09	; 9
    4f88:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:83
        display.fillRect(0, 33, map(snr[5], 0, 99, 1, 75), 3, WHITE);
    4f8c:	60 91 36 03 	lds	r22, 0x0336	; 0x800336 <SatelliteTracker()::snr+0xa>
    4f90:	70 91 37 03 	lds	r23, 0x0337	; 0x800337 <SatelliteTracker()::snr+0xb>
    4f94:	07 2e       	mov	r0, r23
    4f96:	00 0c       	add	r0, r0
    4f98:	88 0b       	sbc	r24, r24
    4f9a:	99 0b       	sbc	r25, r25
    4f9c:	1f 92       	push	r1
    4f9e:	1f 92       	push	r1
    4fa0:	1f 92       	push	r1
    4fa2:	cf 93       	push	r28
    4fa4:	13 e6       	ldi	r17, 0x63	; 99
    4fa6:	e1 2e       	mov	r14, r17
    4fa8:	f1 2c       	mov	r15, r1
    4faa:	00 e0       	ldi	r16, 0x00	; 0
    4fac:	10 e0       	ldi	r17, 0x00	; 0
    4fae:	20 e0       	ldi	r18, 0x00	; 0
    4fb0:	30 e0       	ldi	r19, 0x00	; 0
    4fb2:	a9 01       	movw	r20, r18
    4fb4:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    4fb8:	ee 24       	eor	r14, r14
    4fba:	e3 94       	inc	r14
    4fbc:	f1 2c       	mov	r15, r1
    4fbe:	03 e0       	ldi	r16, 0x03	; 3
    4fc0:	10 e0       	ldi	r17, 0x00	; 0
    4fc2:	9b 01       	movw	r18, r22
    4fc4:	41 e2       	ldi	r20, 0x21	; 33
    4fc6:	50 e0       	ldi	r21, 0x00	; 0
    4fc8:	70 e0       	ldi	r23, 0x00	; 0
    4fca:	60 e0       	ldi	r22, 0x00	; 0
    4fcc:	81 e0       	ldi	r24, 0x01	; 1
    4fce:	99 e0       	ldi	r25, 0x09	; 9
    4fd0:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:84
        display.fillRect(0, 37, map(snr[6], 0, 99, 1, 75), 3, WHITE);
    4fd4:	60 91 38 03 	lds	r22, 0x0338	; 0x800338 <SatelliteTracker()::snr+0xc>
    4fd8:	70 91 39 03 	lds	r23, 0x0339	; 0x800339 <SatelliteTracker()::snr+0xd>
    4fdc:	07 2e       	mov	r0, r23
    4fde:	00 0c       	add	r0, r0
    4fe0:	88 0b       	sbc	r24, r24
    4fe2:	99 0b       	sbc	r25, r25
    4fe4:	1f 92       	push	r1
    4fe6:	1f 92       	push	r1
    4fe8:	1f 92       	push	r1
    4fea:	cf 93       	push	r28
    4fec:	13 e6       	ldi	r17, 0x63	; 99
    4fee:	e1 2e       	mov	r14, r17
    4ff0:	f1 2c       	mov	r15, r1
    4ff2:	00 e0       	ldi	r16, 0x00	; 0
    4ff4:	10 e0       	ldi	r17, 0x00	; 0
    4ff6:	20 e0       	ldi	r18, 0x00	; 0
    4ff8:	30 e0       	ldi	r19, 0x00	; 0
    4ffa:	a9 01       	movw	r20, r18
    4ffc:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    5000:	ee 24       	eor	r14, r14
    5002:	e3 94       	inc	r14
    5004:	f1 2c       	mov	r15, r1
    5006:	03 e0       	ldi	r16, 0x03	; 3
    5008:	10 e0       	ldi	r17, 0x00	; 0
    500a:	9b 01       	movw	r18, r22
    500c:	45 e2       	ldi	r20, 0x25	; 37
    500e:	50 e0       	ldi	r21, 0x00	; 0
    5010:	70 e0       	ldi	r23, 0x00	; 0
    5012:	60 e0       	ldi	r22, 0x00	; 0
    5014:	81 e0       	ldi	r24, 0x01	; 1
    5016:	99 e0       	ldi	r25, 0x09	; 9
    5018:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:85
        display.fillRect(0, 41, map(snr[7], 0, 99, 1, 75), 3, WHITE);
    501c:	60 91 3a 03 	lds	r22, 0x033A	; 0x80033a <SatelliteTracker()::snr+0xe>
    5020:	70 91 3b 03 	lds	r23, 0x033B	; 0x80033b <SatelliteTracker()::snr+0xf>
    5024:	07 2e       	mov	r0, r23
    5026:	00 0c       	add	r0, r0
    5028:	88 0b       	sbc	r24, r24
    502a:	99 0b       	sbc	r25, r25
    502c:	1f 92       	push	r1
    502e:	1f 92       	push	r1
    5030:	1f 92       	push	r1
    5032:	cf 93       	push	r28
    5034:	13 e6       	ldi	r17, 0x63	; 99
    5036:	e1 2e       	mov	r14, r17
    5038:	f1 2c       	mov	r15, r1
    503a:	00 e0       	ldi	r16, 0x00	; 0
    503c:	10 e0       	ldi	r17, 0x00	; 0
    503e:	20 e0       	ldi	r18, 0x00	; 0
    5040:	30 e0       	ldi	r19, 0x00	; 0
    5042:	a9 01       	movw	r20, r18
    5044:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    5048:	ed b7       	in	r30, 0x3d	; 61
    504a:	fe b7       	in	r31, 0x3e	; 62
    504c:	b0 96       	adiw	r30, 0x20	; 32
    504e:	0f b6       	in	r0, 0x3f	; 63
    5050:	f8 94       	cli
    5052:	fe bf       	out	0x3e, r31	; 62
    5054:	0f be       	out	0x3f, r0	; 63
    5056:	ed bf       	out	0x3d, r30	; 61
    5058:	ee 24       	eor	r14, r14
    505a:	e3 94       	inc	r14
    505c:	f1 2c       	mov	r15, r1
    505e:	03 e0       	ldi	r16, 0x03	; 3
    5060:	10 e0       	ldi	r17, 0x00	; 0
    5062:	9b 01       	movw	r18, r22
    5064:	49 e2       	ldi	r20, 0x29	; 41
    5066:	50 e0       	ldi	r21, 0x00	; 0
    5068:	70 e0       	ldi	r23, 0x00	; 0
    506a:	60 e0       	ldi	r22, 0x00	; 0
    506c:	81 e0       	ldi	r24, 0x01	; 1
    506e:	99 e0       	ldi	r25, 0x09	; 9
    5070:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:86
        display.fillRect(0, 45, map(snr[8], 0, 99, 1, 75), 3, WHITE);
    5074:	60 91 3c 03 	lds	r22, 0x033C	; 0x80033c <SatelliteTracker()::snr+0x10>
    5078:	70 91 3d 03 	lds	r23, 0x033D	; 0x80033d <SatelliteTracker()::snr+0x11>
    507c:	07 2e       	mov	r0, r23
    507e:	00 0c       	add	r0, r0
    5080:	88 0b       	sbc	r24, r24
    5082:	99 0b       	sbc	r25, r25
    5084:	1f 92       	push	r1
    5086:	1f 92       	push	r1
    5088:	1f 92       	push	r1
    508a:	cf 93       	push	r28
    508c:	13 e6       	ldi	r17, 0x63	; 99
    508e:	e1 2e       	mov	r14, r17
    5090:	f1 2c       	mov	r15, r1
    5092:	00 e0       	ldi	r16, 0x00	; 0
    5094:	10 e0       	ldi	r17, 0x00	; 0
    5096:	20 e0       	ldi	r18, 0x00	; 0
    5098:	30 e0       	ldi	r19, 0x00	; 0
    509a:	a9 01       	movw	r20, r18
    509c:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    50a0:	ee 24       	eor	r14, r14
    50a2:	e3 94       	inc	r14
    50a4:	f1 2c       	mov	r15, r1
    50a6:	03 e0       	ldi	r16, 0x03	; 3
    50a8:	10 e0       	ldi	r17, 0x00	; 0
    50aa:	9b 01       	movw	r18, r22
    50ac:	4d e2       	ldi	r20, 0x2D	; 45
    50ae:	50 e0       	ldi	r21, 0x00	; 0
    50b0:	70 e0       	ldi	r23, 0x00	; 0
    50b2:	60 e0       	ldi	r22, 0x00	; 0
    50b4:	81 e0       	ldi	r24, 0x01	; 1
    50b6:	99 e0       	ldi	r25, 0x09	; 9
    50b8:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:87
        display.fillRect(0, 49, map(snr[9], 0, 99, 1, 75), 3, WHITE);
    50bc:	60 91 3e 03 	lds	r22, 0x033E	; 0x80033e <SatelliteTracker()::snr+0x12>
    50c0:	70 91 3f 03 	lds	r23, 0x033F	; 0x80033f <SatelliteTracker()::snr+0x13>
    50c4:	07 2e       	mov	r0, r23
    50c6:	00 0c       	add	r0, r0
    50c8:	88 0b       	sbc	r24, r24
    50ca:	99 0b       	sbc	r25, r25
    50cc:	1f 92       	push	r1
    50ce:	1f 92       	push	r1
    50d0:	1f 92       	push	r1
    50d2:	cf 93       	push	r28
    50d4:	13 e6       	ldi	r17, 0x63	; 99
    50d6:	e1 2e       	mov	r14, r17
    50d8:	f1 2c       	mov	r15, r1
    50da:	00 e0       	ldi	r16, 0x00	; 0
    50dc:	10 e0       	ldi	r17, 0x00	; 0
    50de:	20 e0       	ldi	r18, 0x00	; 0
    50e0:	30 e0       	ldi	r19, 0x00	; 0
    50e2:	a9 01       	movw	r20, r18
    50e4:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    50e8:	ee 24       	eor	r14, r14
    50ea:	e3 94       	inc	r14
    50ec:	f1 2c       	mov	r15, r1
    50ee:	03 e0       	ldi	r16, 0x03	; 3
    50f0:	10 e0       	ldi	r17, 0x00	; 0
    50f2:	9b 01       	movw	r18, r22
    50f4:	41 e3       	ldi	r20, 0x31	; 49
    50f6:	50 e0       	ldi	r21, 0x00	; 0
    50f8:	70 e0       	ldi	r23, 0x00	; 0
    50fa:	60 e0       	ldi	r22, 0x00	; 0
    50fc:	81 e0       	ldi	r24, 0x01	; 1
    50fe:	99 e0       	ldi	r25, 0x09	; 9
    5100:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:88
        display.fillRect(0, 53, map(snr[10], 0, 99, 1, 75), 3, WHITE);
    5104:	60 91 40 03 	lds	r22, 0x0340	; 0x800340 <SatelliteTracker()::snr+0x14>
    5108:	70 91 41 03 	lds	r23, 0x0341	; 0x800341 <SatelliteTracker()::snr+0x15>
    510c:	07 2e       	mov	r0, r23
    510e:	00 0c       	add	r0, r0
    5110:	88 0b       	sbc	r24, r24
    5112:	99 0b       	sbc	r25, r25
    5114:	1f 92       	push	r1
    5116:	1f 92       	push	r1
    5118:	1f 92       	push	r1
    511a:	cf 93       	push	r28
    511c:	13 e6       	ldi	r17, 0x63	; 99
    511e:	e1 2e       	mov	r14, r17
    5120:	f1 2c       	mov	r15, r1
    5122:	00 e0       	ldi	r16, 0x00	; 0
    5124:	10 e0       	ldi	r17, 0x00	; 0
    5126:	20 e0       	ldi	r18, 0x00	; 0
    5128:	30 e0       	ldi	r19, 0x00	; 0
    512a:	a9 01       	movw	r20, r18
    512c:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    5130:	ee 24       	eor	r14, r14
    5132:	e3 94       	inc	r14
    5134:	f1 2c       	mov	r15, r1
    5136:	03 e0       	ldi	r16, 0x03	; 3
    5138:	10 e0       	ldi	r17, 0x00	; 0
    513a:	9b 01       	movw	r18, r22
    513c:	45 e3       	ldi	r20, 0x35	; 53
    513e:	50 e0       	ldi	r21, 0x00	; 0
    5140:	70 e0       	ldi	r23, 0x00	; 0
    5142:	60 e0       	ldi	r22, 0x00	; 0
    5144:	81 e0       	ldi	r24, 0x01	; 1
    5146:	99 e0       	ldi	r25, 0x09	; 9
    5148:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:89
        display.fillRect(0, 57, map(snr[11], 0, 99, 1, 75), 3, WHITE);
    514c:	60 91 42 03 	lds	r22, 0x0342	; 0x800342 <SatelliteTracker()::snr+0x16>
    5150:	70 91 43 03 	lds	r23, 0x0343	; 0x800343 <SatelliteTracker()::snr+0x17>
    5154:	07 2e       	mov	r0, r23
    5156:	00 0c       	add	r0, r0
    5158:	88 0b       	sbc	r24, r24
    515a:	99 0b       	sbc	r25, r25
    515c:	1f 92       	push	r1
    515e:	1f 92       	push	r1
    5160:	1f 92       	push	r1
    5162:	cf 93       	push	r28
    5164:	13 e6       	ldi	r17, 0x63	; 99
    5166:	e1 2e       	mov	r14, r17
    5168:	f1 2c       	mov	r15, r1
    516a:	00 e0       	ldi	r16, 0x00	; 0
    516c:	10 e0       	ldi	r17, 0x00	; 0
    516e:	20 e0       	ldi	r18, 0x00	; 0
    5170:	30 e0       	ldi	r19, 0x00	; 0
    5172:	a9 01       	movw	r20, r18
    5174:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    5178:	ee 24       	eor	r14, r14
    517a:	e3 94       	inc	r14
    517c:	f1 2c       	mov	r15, r1
    517e:	03 e0       	ldi	r16, 0x03	; 3
    5180:	10 e0       	ldi	r17, 0x00	; 0
    5182:	9b 01       	movw	r18, r22
    5184:	49 e3       	ldi	r20, 0x39	; 57
    5186:	50 e0       	ldi	r21, 0x00	; 0
    5188:	70 e0       	ldi	r23, 0x00	; 0
    518a:	60 e0       	ldi	r22, 0x00	; 0
    518c:	81 e0       	ldi	r24, 0x01	; 1
    518e:	99 e0       	ldi	r25, 0x09	; 9
    5190:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
    5194:	2d b7       	in	r18, 0x3d	; 61
    5196:	3e b7       	in	r19, 0x3e	; 62
    5198:	20 5f       	subi	r18, 0xF0	; 240
    519a:	3f 4f       	sbci	r19, 0xFF	; 255
    519c:	0f b6       	in	r0, 0x3f	; 63
    519e:	f8 94       	cli
    51a0:	3e bf       	out	0x3e, r19	; 62
    51a2:	0f be       	out	0x3f, r0	; 63
    51a4:	2d bf       	out	0x3d, r18	; 61
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:93

        /* Reset All Active Satellite Reception State */
        for (int i = 0; i < MAX_SATELLITES; ++i)
          sats[i].active = false;
    51a6:	d3 01       	movw	r26, r6
    51a8:	1c 92       	st	X, r1
    51aa:	b7 e0       	ldi	r27, 0x07	; 7
    51ac:	6b 0e       	add	r6, r27
    51ae:	71 1c       	adc	r7, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:92
        display.fillRect(0, 49, map(snr[9], 0, 99, 1, 75), 3, WHITE);
        display.fillRect(0, 53, map(snr[10], 0, 99, 1, 75), 3, WHITE);
        display.fillRect(0, 57, map(snr[11], 0, 99, 1, 75), 3, WHITE);

        /* Reset All Active Satellite Reception State */
        for (int i = 0; i < MAX_SATELLITES; ++i)
    51b0:	68 14       	cp	r6, r8
    51b2:	79 04       	cpc	r7, r9
    51b4:	c1 f7       	brne	.-16     	; 0x51a6 <SatelliteTracker()+0x7fc>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
    51b6:	10 92 8f 08 	sts	0x088F, r1	; 0x80088f <gps+0x69>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:95
          sats[i].active = false;

        if (gps.satellites.value() == 0) {
    51ba:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <gps+0x6e>
    51be:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <gps+0x6f>
    51c2:	a0 91 96 08 	lds	r26, 0x0896	; 0x800896 <gps+0x70>
    51c6:	b0 91 97 08 	lds	r27, 0x0897	; 0x800897 <gps+0x71>
    51ca:	89 2b       	or	r24, r25
    51cc:	8a 2b       	or	r24, r26
    51ce:	8b 2b       	or	r24, r27
    51d0:	49 f5       	brne	.+82     	; 0x5224 <SatelliteTracker()+0x87a>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    51d2:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    51d6:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    51da:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    51de:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:97
          display.setTextColor(BLACK);
          display.fillRect(2, 31, 73, 9, WHITE);
    51e2:	ee 24       	eor	r14, r14
    51e4:	e3 94       	inc	r14
    51e6:	f1 2c       	mov	r15, r1
    51e8:	09 e0       	ldi	r16, 0x09	; 9
    51ea:	10 e0       	ldi	r17, 0x00	; 0
    51ec:	29 e4       	ldi	r18, 0x49	; 73
    51ee:	30 e0       	ldi	r19, 0x00	; 0
    51f0:	4f e1       	ldi	r20, 0x1F	; 31
    51f2:	50 e0       	ldi	r21, 0x00	; 0
    51f4:	62 e0       	ldi	r22, 0x02	; 2
    51f6:	70 e0       	ldi	r23, 0x00	; 0
    51f8:	81 e0       	ldi	r24, 0x01	; 1
    51fa:	99 e0       	ldi	r25, 0x09	; 9
    51fc:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5200:	83 e0       	ldi	r24, 0x03	; 3
    5202:	90 e0       	ldi	r25, 0x00	; 0
    5204:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    5208:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    520c:	80 e2       	ldi	r24, 0x20	; 32
    520e:	90 e0       	ldi	r25, 0x00	; 0
    5210:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    5214:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:99
          display.setCursor(3, 32);
          display.print(F("ACQUIRING..."));
    5218:	6f e3       	ldi	r22, 0x3F	; 63
    521a:	72 e0       	ldi	r23, 0x02	; 2
    521c:	81 e0       	ldi	r24, 0x01	; 1
    521e:	99 e0       	ldi	r25, 0x09	; 9
    5220:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:102
        }

        display.display();
    5224:	81 e0       	ldi	r24, 0x01	; 1
    5226:	99 e0       	ldi	r25, 0x09	; 9
    5228:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:103
        display.clearDisplay();
    522c:	81 e0       	ldi	r24, 0x01	; 1
    522e:	99 e0       	ldi	r25, 0x09	; 9
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:107
      }
    }
  }
}
    5230:	df 91       	pop	r29
    5232:	cf 91       	pop	r28
    5234:	1f 91       	pop	r17
    5236:	0f 91       	pop	r16
    5238:	ff 90       	pop	r15
    523a:	ef 90       	pop	r14
    523c:	df 90       	pop	r13
    523e:	cf 90       	pop	r12
    5240:	bf 90       	pop	r11
    5242:	af 90       	pop	r10
    5244:	9f 90       	pop	r9
    5246:	8f 90       	pop	r8
    5248:	7f 90       	pop	r7
    524a:	6f 90       	pop	r6
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:103
          display.setCursor(3, 32);
          display.print(F("ACQUIRING..."));
        }

        display.display();
        display.clearDisplay();
    524c:	0c 94 ca 4e 	jmp	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:107
      }
    }
  }
}
    5250:	df 91       	pop	r29
    5252:	cf 91       	pop	r28
    5254:	1f 91       	pop	r17
    5256:	0f 91       	pop	r16
    5258:	ff 90       	pop	r15
    525a:	ef 90       	pop	r14
    525c:	df 90       	pop	r13
    525e:	cf 90       	pop	r12
    5260:	bf 90       	pop	r11
    5262:	af 90       	pop	r10
    5264:	9f 90       	pop	r9
    5266:	8f 90       	pop	r8
    5268:	7f 90       	pop	r7
    526a:	6f 90       	pop	r6
    526c:	08 95       	ret

0000526e <decodeGPSNMEA(unsigned long) [clone .constprop.6]>:
_ZL13decodeGPSNMEAm.constprop.6():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:132
                                    + eeprom.lng_fract[0] * 1e-2
                                    + eeprom.lng_fract[1] * 1e-4
                                    + eeprom.lng_fract[2] * 1e-6;
}

static void decodeGPSNMEA(unsigned long ms) {
    526e:	cf 92       	push	r12
    5270:	df 92       	push	r13
    5272:	ef 92       	push	r14
    5274:	ff 92       	push	r15
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:133
        unsigned long start = millis();
    5276:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    527a:	6b 01       	movw	r12, r22
    527c:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:135
        do {
                while (ss.available()) gps.encode(ss.read());
    527e:	87 e0       	ldi	r24, 0x07	; 7
    5280:	98 e0       	ldi	r25, 0x08	; 8
    5282:	0e 94 e6 61 	call	0xc3cc	; 0xc3cc <SoftwareSerial::available()>
    5286:	89 2b       	or	r24, r25
    5288:	51 f0       	breq	.+20     	; 0x529e <decodeGPSNMEA(unsigned long) [clone .constprop.6]+0x30>
    528a:	87 e0       	ldi	r24, 0x07	; 7
    528c:	98 e0       	ldi	r25, 0x08	; 8
    528e:	0e 94 50 61 	call	0xc2a0	; 0xc2a0 <SoftwareSerial::read()>
    5292:	68 2f       	mov	r22, r24
    5294:	86 e2       	ldi	r24, 0x26	; 38
    5296:	98 e0       	ldi	r25, 0x08	; 8
    5298:	0e 94 6e 6a 	call	0xd4dc	; 0xd4dc <TinyGPSPlus::encode(char)>
    529c:	f0 cf       	rjmp	.-32     	; 0x527e <decodeGPSNMEA(unsigned long) [clone .constprop.6]+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:136
        } while (millis() - start < ms);
    529e:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    52a2:	6c 19       	sub	r22, r12
    52a4:	7d 09       	sbc	r23, r13
    52a6:	8e 09       	sbc	r24, r14
    52a8:	9f 09       	sbc	r25, r15
    52aa:	68 3e       	cpi	r22, 0xE8	; 232
    52ac:	73 40       	sbci	r23, 0x03	; 3
    52ae:	81 05       	cpc	r24, r1
    52b0:	91 05       	cpc	r25, r1
    52b2:	28 f3       	brcs	.-54     	; 0x527e <decodeGPSNMEA(unsigned long) [clone .constprop.6]+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:137
}
    52b4:	ff 90       	pop	r15
    52b6:	ef 90       	pop	r14
    52b8:	df 90       	pop	r13
    52ba:	cf 90       	pop	r12
    52bc:	08 95       	ret

000052be <WaypointMenu()>:
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:2
void WaypointMenu(void)
{
    52be:	8f 92       	push	r8
    52c0:	9f 92       	push	r9
    52c2:	af 92       	push	r10
    52c4:	bf 92       	push	r11
    52c6:	cf 92       	push	r12
    52c8:	df 92       	push	r13
    52ca:	ef 92       	push	r14
    52cc:	ff 92       	push	r15
    52ce:	0f 93       	push	r16
    52d0:	1f 93       	push	r17
    52d2:	cf 93       	push	r28
    52d4:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:9
            Latitude Min/Max: -90 -> 90
            Longitude Min/Max: -180 -> 180
         */

        /* Get Waypoint From EEPROM */
        if(waypoint.isStartUp) {
    52d6:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <waypoint+0x10>
    52da:	88 23       	and	r24, r24
    52dc:	09 f4       	brne	.+2      	; 0x52e0 <WaypointMenu()+0x22>
    52de:	58 c1       	rjmp	.+688    	; 0x5590 <WaypointMenu()+0x2d2>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    52e0:	ad e1       	ldi	r26, 0x1D	; 29
    52e2:	ca 2e       	mov	r12, r26
    52e4:	d1 2c       	mov	r13, r1
    52e6:	b8 e3       	ldi	r27, 0x38	; 56
    52e8:	ab 2e       	mov	r10, r27
    52ea:	b1 2c       	mov	r11, r1
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:11
                while(true) {
                        display.clearDisplay();
    52ec:	81 e0       	ldi	r24, 0x01	; 1
    52ee:	99 e0       	ldi	r25, 0x09	; 9
    52f0:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:12
                        display.setTextSize(1);
    52f4:	61 e0       	ldi	r22, 0x01	; 1
    52f6:	81 e0       	ldi	r24, 0x01	; 1
    52f8:	99 e0       	ldi	r25, 0x09	; 9
    52fa:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    52fe:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    5302:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    5306:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    530a:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:14
                        display.setTextColor(BLACK);
                        display.fillRect(0, 0, 128, 9, WHITE);
    530e:	ee 24       	eor	r14, r14
    5310:	e3 94       	inc	r14
    5312:	f1 2c       	mov	r15, r1
    5314:	09 e0       	ldi	r16, 0x09	; 9
    5316:	10 e0       	ldi	r17, 0x00	; 0
    5318:	20 e8       	ldi	r18, 0x80	; 128
    531a:	30 e0       	ldi	r19, 0x00	; 0
    531c:	50 e0       	ldi	r21, 0x00	; 0
    531e:	40 e0       	ldi	r20, 0x00	; 0
    5320:	70 e0       	ldi	r23, 0x00	; 0
    5322:	60 e0       	ldi	r22, 0x00	; 0
    5324:	81 e0       	ldi	r24, 0x01	; 1
    5326:	99 e0       	ldi	r25, 0x09	; 9
    5328:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    532c:	c1 e0       	ldi	r28, 0x01	; 1
    532e:	d0 e0       	ldi	r29, 0x00	; 0
    5330:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5334:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5338:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    533c:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:16
                        display.setCursor(1, 1);
                        display.print(F("SELECT WAYPOINT"));
    5340:	6a e7       	ldi	r22, 0x7A	; 122
    5342:	71 e0       	ldi	r23, 0x01	; 1
    5344:	81 e0       	ldi	r24, 0x01	; 1
    5346:	99 e0       	ldi	r25, 0x09	; 9
    5348:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    534c:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    5350:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    5354:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    5358:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    535c:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5360:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5364:	d0 92 10 09 	sts	0x0910, r13	; 0x800910 <display+0xf>
    5368:	c0 92 0f 09 	sts	0x090F, r12	; 0x80090f <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:20

                        display.setTextColor(WHITE);
                        display.setCursor(1, 29);
                        display.print(F("WAYPOINT: "));
    536c:	6f e6       	ldi	r22, 0x6F	; 111
    536e:	71 e0       	ldi	r23, 0x01	; 1
    5370:	81 e0       	ldi	r24, 0x01	; 1
    5372:	99 e0       	ldi	r25, 0x09	; 9
    5374:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:21
                        display.print(waypoint.waypoint_select);
    5378:	60 91 70 01 	lds	r22, 0x0170	; 0x800170 <waypoint+0xe>
    537c:	70 91 71 01 	lds	r23, 0x0171	; 0x800171 <waypoint+0xf>
    5380:	4a e0       	ldi	r20, 0x0A	; 10
    5382:	50 e0       	ldi	r21, 0x00	; 0
    5384:	81 e0       	ldi	r24, 0x01	; 1
    5386:	99 e0       	ldi	r25, 0x09	; 9
    5388:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    538c:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5390:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5394:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    5398:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:23
                        display.setCursor(1, 56);
                        display.print(F("PRESS (B) TO SELECT"));
    539c:	6b e5       	ldi	r22, 0x5B	; 91
    539e:	71 e0       	ldi	r23, 0x01	; 1
    53a0:	81 e0       	ldi	r24, 0x01	; 1
    53a2:	99 e0       	ldi	r25, 0x09	; 9
    53a4:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:24
                        display.display();
    53a8:	81 e0       	ldi	r24, 0x01	; 1
    53aa:	99 e0       	ldi	r25, 0x09	; 9
    53ac:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:26

                        if (waypoint.waypoint_select > 5) waypoint.waypoint_select = 0;
    53b0:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <waypoint+0xe>
    53b4:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <waypoint+0xf>
    53b8:	06 97       	sbiw	r24, 0x06	; 6
    53ba:	24 f0       	brlt	.+8      	; 0x53c4 <WaypointMenu()+0x106>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:26 (discriminator 1)
    53bc:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <waypoint+0xf>
    53c0:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <waypoint+0xe>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:30

                        /* Get Waypoint ID */
                        static unsigned long last_interrupt_time = 0;
                        if (!digitalRead(C_Pin)) {
    53c4:	80 e0       	ldi	r24, 0x00	; 0
    53c6:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    53ca:	89 2b       	or	r24, r25
    53cc:	31 f5       	brne	.+76     	; 0x541a <WaypointMenu()+0x15c>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:31
                                if (millis() - last_interrupt_time > 200) {
    53ce:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    53d2:	00 91 0e 03 	lds	r16, 0x030E	; 0x80030e <WaypointMenu()::last_interrupt_time>
    53d6:	10 91 0f 03 	lds	r17, 0x030F	; 0x80030f <WaypointMenu()::last_interrupt_time+0x1>
    53da:	20 91 10 03 	lds	r18, 0x0310	; 0x800310 <WaypointMenu()::last_interrupt_time+0x2>
    53de:	30 91 11 03 	lds	r19, 0x0311	; 0x800311 <WaypointMenu()::last_interrupt_time+0x3>
    53e2:	60 1b       	sub	r22, r16
    53e4:	71 0b       	sbc	r23, r17
    53e6:	82 0b       	sbc	r24, r18
    53e8:	93 0b       	sbc	r25, r19
    53ea:	69 3c       	cpi	r22, 0xC9	; 201
    53ec:	71 05       	cpc	r23, r1
    53ee:	81 05       	cpc	r24, r1
    53f0:	91 05       	cpc	r25, r1
    53f2:	48 f0       	brcs	.+18     	; 0x5406 <WaypointMenu()+0x148>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:32
                                        waypoint.waypoint_select++;
    53f4:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <waypoint+0xe>
    53f8:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <waypoint+0xf>
    53fc:	01 96       	adiw	r24, 0x01	; 1
    53fe:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <waypoint+0xf>
    5402:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <waypoint+0xe>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:34
                                }
                                last_interrupt_time = millis(); /* Update Interrupt Time */
    5406:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    540a:	60 93 0e 03 	sts	0x030E, r22	; 0x80030e <WaypointMenu()::last_interrupt_time>
    540e:	70 93 0f 03 	sts	0x030F, r23	; 0x80030f <WaypointMenu()::last_interrupt_time+0x1>
    5412:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <WaypointMenu()::last_interrupt_time+0x2>
    5416:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <WaypointMenu()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:38
                        }

                        /* Get Coordinate From EERPROM */
                        if(!digitalRead(B_Pin)) {
    541a:	81 e0       	ldi	r24, 0x01	; 1
    541c:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    5420:	89 2b       	or	r24, r25
    5422:	09 f0       	breq	.+2      	; 0x5426 <WaypointMenu()+0x168>
    5424:	63 cf       	rjmp	.-314    	; 0x52ec <WaypointMenu()+0x2e>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:39
                                if (millis() - last_interrupt_time > 200) {
    5426:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    542a:	00 91 0e 03 	lds	r16, 0x030E	; 0x80030e <WaypointMenu()::last_interrupt_time>
    542e:	10 91 0f 03 	lds	r17, 0x030F	; 0x80030f <WaypointMenu()::last_interrupt_time+0x1>
    5432:	20 91 10 03 	lds	r18, 0x0310	; 0x800310 <WaypointMenu()::last_interrupt_time+0x2>
    5436:	30 91 11 03 	lds	r19, 0x0311	; 0x800311 <WaypointMenu()::last_interrupt_time+0x3>
    543a:	60 1b       	sub	r22, r16
    543c:	71 0b       	sbc	r23, r17
    543e:	82 0b       	sbc	r24, r18
    5440:	93 0b       	sbc	r25, r19
    5442:	69 3c       	cpi	r22, 0xC9	; 201
    5444:	71 05       	cpc	r23, r1
    5446:	81 05       	cpc	r24, r1
    5448:	91 05       	cpc	r25, r1
    544a:	08 f4       	brcc	.+2      	; 0x544e <WaypointMenu()+0x190>
    544c:	4f cf       	rjmp	.-354    	; 0x52ec <WaypointMenu()+0x2e>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:40
                                        last_interrupt_time = millis(); /* Update Interrupt Time */
    544e:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    5452:	60 93 0e 03 	sts	0x030E, r22	; 0x80030e <WaypointMenu()::last_interrupt_time>
    5456:	70 93 0f 03 	sts	0x030F, r23	; 0x80030f <WaypointMenu()::last_interrupt_time+0x1>
    545a:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <WaypointMenu()::last_interrupt_time+0x2>
    545e:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <WaypointMenu()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:42
                                        /* Read Latitude */
                                        waypoint.x_goto_lat = decodeFromEEPROM(
    5462:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <waypoint+0xe>
    5466:	f0 91 71 01 	lds	r31, 0x0171	; 0x800171 <waypoint+0xf>
    546a:	ee 0f       	add	r30, r30
    546c:	ff 1f       	adc	r31, r31
    546e:	ec 59       	subi	r30, 0x9C	; 156
    5470:	fe 4f       	sbci	r31, 0xFE	; 254
    5472:	80 81       	ld	r24, Z
    5474:	91 81       	ldd	r25, Z+1	; 0x01
    5476:	0e 94 2f 12 	call	0x245e	; 0x245e <decodeFromEEPROM(int)>
    547a:	60 93 7b 01 	sts	0x017B, r22	; 0x80017b <waypoint+0x19>
    547e:	70 93 7c 01 	sts	0x017C, r23	; 0x80017c <waypoint+0x1a>
    5482:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <waypoint+0x1b>
    5486:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <waypoint+0x1c>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:46
                                                waypoint.waypoint_memory_address[waypoint.waypoint_select]);
                                        /* Read Longitude */
                                        waypoint.y_goto_lng = decodeFromEEPROM(
                                                waypoint.waypoint_memory_address[waypoint.waypoint_select] + 6
    548a:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <waypoint+0xe>
    548e:	f0 91 71 01 	lds	r31, 0x0171	; 0x800171 <waypoint+0xf>
    5492:	ee 0f       	add	r30, r30
    5494:	ff 1f       	adc	r31, r31
    5496:	ec 59       	subi	r30, 0x9C	; 156
    5498:	fe 4f       	sbci	r31, 0xFE	; 254
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:45
                                        last_interrupt_time = millis(); /* Update Interrupt Time */
                                        /* Read Latitude */
                                        waypoint.x_goto_lat = decodeFromEEPROM(
                                                waypoint.waypoint_memory_address[waypoint.waypoint_select]);
                                        /* Read Longitude */
                                        waypoint.y_goto_lng = decodeFromEEPROM(
    549a:	80 81       	ld	r24, Z
    549c:	91 81       	ldd	r25, Z+1	; 0x01
    549e:	06 96       	adiw	r24, 0x06	; 6
    54a0:	0e 94 2f 12 	call	0x245e	; 0x245e <decodeFromEEPROM(int)>
    54a4:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <waypoint+0x1d>
    54a8:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <waypoint+0x1e>
    54ac:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <waypoint+0x1f>
    54b0:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <waypoint+0x20>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:49
                                                waypoint.waypoint_memory_address[waypoint.waypoint_select] + 6
                                                );

                                        display.clearDisplay();
    54b4:	81 e0       	ldi	r24, 0x01	; 1
    54b6:	99 e0       	ldi	r25, 0x09	; 9
    54b8:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:50
                                        display.fillRect(0, 0, 128, 9, WHITE);
    54bc:	ee 24       	eor	r14, r14
    54be:	e3 94       	inc	r14
    54c0:	f1 2c       	mov	r15, r1
    54c2:	09 e0       	ldi	r16, 0x09	; 9
    54c4:	10 e0       	ldi	r17, 0x00	; 0
    54c6:	20 e8       	ldi	r18, 0x80	; 128
    54c8:	30 e0       	ldi	r19, 0x00	; 0
    54ca:	50 e0       	ldi	r21, 0x00	; 0
    54cc:	40 e0       	ldi	r20, 0x00	; 0
    54ce:	70 e0       	ldi	r23, 0x00	; 0
    54d0:	60 e0       	ldi	r22, 0x00	; 0
    54d2:	81 e0       	ldi	r24, 0x01	; 1
    54d4:	99 e0       	ldi	r25, 0x09	; 9
    54d6:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    54da:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    54de:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    54e2:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    54e6:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    54ea:	c1 e0       	ldi	r28, 0x01	; 1
    54ec:	d0 e0       	ldi	r29, 0x00	; 0
    54ee:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    54f2:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    54f6:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    54fa:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:53
                                        display.setTextColor(BLACK);
                                        display.setCursor(1, 1);
                                        display.print(F("SELECTED WAYPOINT: "));
    54fe:	67 e4       	ldi	r22, 0x47	; 71
    5500:	71 e0       	ldi	r23, 0x01	; 1
    5502:	81 e0       	ldi	r24, 0x01	; 1
    5504:	99 e0       	ldi	r25, 0x09	; 9
    5506:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:54
                                        display.print(waypoint.waypoint_select);
    550a:	60 91 70 01 	lds	r22, 0x0170	; 0x800170 <waypoint+0xe>
    550e:	70 91 71 01 	lds	r23, 0x0171	; 0x800171 <waypoint+0xf>
    5512:	4a e0       	ldi	r20, 0x0A	; 10
    5514:	50 e0       	ldi	r21, 0x00	; 0
    5516:	81 e0       	ldi	r24, 0x01	; 1
    5518:	99 e0       	ldi	r25, 0x09	; 9
    551a:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    551e:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    5522:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    5526:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    552a:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    552e:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5532:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5536:	8d e1       	ldi	r24, 0x1D	; 29
    5538:	90 e0       	ldi	r25, 0x00	; 0
    553a:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    553e:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:58
                                        display.setTextColor(WHITE);

                                        display.setCursor(1, 29);
                                        display.print(waypoint.x_goto_lat, 6);
    5542:	40 91 7b 01 	lds	r20, 0x017B	; 0x80017b <waypoint+0x19>
    5546:	50 91 7c 01 	lds	r21, 0x017C	; 0x80017c <waypoint+0x1a>
    554a:	60 91 7d 01 	lds	r22, 0x017D	; 0x80017d <waypoint+0x1b>
    554e:	70 91 7e 01 	lds	r23, 0x017E	; 0x80017e <waypoint+0x1c>
    5552:	26 e0       	ldi	r18, 0x06	; 6
    5554:	30 e0       	ldi	r19, 0x00	; 0
    5556:	81 e0       	ldi	r24, 0x01	; 1
    5558:	99 e0       	ldi	r25, 0x09	; 9
    555a:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:59
                                        display.print(',');
    555e:	6c e2       	ldi	r22, 0x2C	; 44
    5560:	81 e0       	ldi	r24, 0x01	; 1
    5562:	99 e0       	ldi	r25, 0x09	; 9
    5564:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:60
                                        display.print(waypoint.y_goto_lng, 6);
    5568:	40 91 7f 01 	lds	r20, 0x017F	; 0x80017f <waypoint+0x1d>
    556c:	50 91 80 01 	lds	r21, 0x0180	; 0x800180 <waypoint+0x1e>
    5570:	60 91 81 01 	lds	r22, 0x0181	; 0x800181 <waypoint+0x1f>
    5574:	70 91 82 01 	lds	r23, 0x0182	; 0x800182 <waypoint+0x20>
    5578:	26 e0       	ldi	r18, 0x06	; 6
    557a:	30 e0       	ldi	r19, 0x00	; 0
    557c:	81 e0       	ldi	r24, 0x01	; 1
    557e:	99 e0       	ldi	r25, 0x09	; 9
    5580:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:61
                                        display.display();
    5584:	81 e0       	ldi	r24, 0x01	; 1
    5586:	99 e0       	ldi	r25, 0x09	; 9
    5588:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:64

                                        /* End Select Waypoint */
                                        waypoint.isStartUp = false;
    558c:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <waypoint+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:73
                                }
                        }
                }
        }

        decodeGPSNMEA(1000);
    5590:	0e 94 37 29 	call	0x526e	; 0x526e <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:76

        /* Read Button to Adjust Scale */
        if(!digitalRead(B_Pin)) {
    5594:	81 e0       	ldi	r24, 0x01	; 1
    5596:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    559a:	89 2b       	or	r24, r25
    559c:	e1 f5       	brne	.+120    	; 0x5616 <WaypointMenu()+0x358>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:78
                static unsigned long last_interrupt_time = 0;
                if (millis() - last_interrupt_time > 200) {
    559e:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    55a2:	00 91 0a 03 	lds	r16, 0x030A	; 0x80030a <WaypointMenu()::last_interrupt_time>
    55a6:	10 91 0b 03 	lds	r17, 0x030B	; 0x80030b <WaypointMenu()::last_interrupt_time+0x1>
    55aa:	20 91 0c 03 	lds	r18, 0x030C	; 0x80030c <WaypointMenu()::last_interrupt_time+0x2>
    55ae:	30 91 0d 03 	lds	r19, 0x030D	; 0x80030d <WaypointMenu()::last_interrupt_time+0x3>
    55b2:	60 1b       	sub	r22, r16
    55b4:	71 0b       	sbc	r23, r17
    55b6:	82 0b       	sbc	r24, r18
    55b8:	93 0b       	sbc	r25, r19
    55ba:	69 3c       	cpi	r22, 0xC9	; 201
    55bc:	71 05       	cpc	r23, r1
    55be:	81 05       	cpc	r24, r1
    55c0:	91 05       	cpc	r25, r1
    55c2:	f8 f0       	brcs	.+62     	; 0x5602 <WaypointMenu()+0x344>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:79
                        waypoint.scale *= 1e-1;
    55c4:	2d ec       	ldi	r18, 0xCD	; 205
    55c6:	3c ec       	ldi	r19, 0xCC	; 204
    55c8:	4c ec       	ldi	r20, 0xCC	; 204
    55ca:	5d e3       	ldi	r21, 0x3D	; 61
    55cc:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <waypoint+0x31>
    55d0:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <waypoint+0x32>
    55d4:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <waypoint+0x33>
    55d8:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <waypoint+0x34>
    55dc:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    55e0:	60 93 93 01 	sts	0x0193, r22	; 0x800193 <waypoint+0x31>
    55e4:	70 93 94 01 	sts	0x0194, r23	; 0x800194 <waypoint+0x32>
    55e8:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <waypoint+0x33>
    55ec:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <waypoint+0x34>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:80
                        waypoint.decimal_point++;
    55f0:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <waypoint>
    55f4:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <waypoint+0x1>
    55f8:	01 96       	adiw	r24, 0x01	; 1
    55fa:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <waypoint+0x1>
    55fe:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <waypoint>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:82
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
    5602:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    5606:	60 93 0a 03 	sts	0x030A, r22	; 0x80030a <WaypointMenu()::last_interrupt_time>
    560a:	70 93 0b 03 	sts	0x030B, r23	; 0x80030b <WaypointMenu()::last_interrupt_time+0x1>
    560e:	80 93 0c 03 	sts	0x030C, r24	; 0x80030c <WaypointMenu()::last_interrupt_time+0x2>
    5612:	90 93 0d 03 	sts	0x030D, r25	; 0x80030d <WaypointMenu()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:84
        }
        if(!digitalRead(C_Pin)) {
    5616:	80 e0       	ldi	r24, 0x00	; 0
    5618:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    561c:	89 2b       	or	r24, r25
    561e:	b9 f5       	brne	.+110    	; 0x568e <WaypointMenu()+0x3d0>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:86
                static unsigned long last_interrupt_time = 0;
                if (millis() - last_interrupt_time > 200) {
    5620:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    5624:	00 91 06 03 	lds	r16, 0x0306	; 0x800306 <__data_end>
    5628:	10 91 07 03 	lds	r17, 0x0307	; 0x800307 <__data_end+0x1>
    562c:	20 91 08 03 	lds	r18, 0x0308	; 0x800308 <__data_end+0x2>
    5630:	30 91 09 03 	lds	r19, 0x0309	; 0x800309 <__data_end+0x3>
    5634:	60 1b       	sub	r22, r16
    5636:	71 0b       	sbc	r23, r17
    5638:	82 0b       	sbc	r24, r18
    563a:	93 0b       	sbc	r25, r19
    563c:	69 3c       	cpi	r22, 0xC9	; 201
    563e:	71 05       	cpc	r23, r1
    5640:	81 05       	cpc	r24, r1
    5642:	91 05       	cpc	r25, r1
    5644:	d0 f0       	brcs	.+52     	; 0x567a <WaypointMenu()+0x3bc>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:87
                        waypoint.scale++;
    5646:	20 e0       	ldi	r18, 0x00	; 0
    5648:	30 e0       	ldi	r19, 0x00	; 0
    564a:	40 e8       	ldi	r20, 0x80	; 128
    564c:	5f e3       	ldi	r21, 0x3F	; 63
    564e:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <waypoint+0x31>
    5652:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <waypoint+0x32>
    5656:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <waypoint+0x33>
    565a:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <waypoint+0x34>
    565e:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    5662:	60 93 93 01 	sts	0x0193, r22	; 0x800193 <waypoint+0x31>
    5666:	70 93 94 01 	sts	0x0194, r23	; 0x800194 <waypoint+0x32>
    566a:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <waypoint+0x33>
    566e:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <waypoint+0x34>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:88
                        waypoint.decimal_point = 0;
    5672:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <waypoint+0x1>
    5676:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <waypoint>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:90
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
    567a:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    567e:	60 93 06 03 	sts	0x0306, r22	; 0x800306 <__data_end>
    5682:	70 93 07 03 	sts	0x0307, r23	; 0x800307 <__data_end+0x1>
    5686:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <__data_end+0x2>
    568a:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <__data_end+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:94
        }

        /* Limit Value */
        if(waypoint.decimal_point > 10) waypoint.decimal_point = 0;
    568e:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <waypoint>
    5692:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <waypoint+0x1>
    5696:	0b 97       	sbiw	r24, 0x0b	; 11
    5698:	24 f0       	brlt	.+8      	; 0x56a2 <WaypointMenu()+0x3e4>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:94 (discriminator 1)
    569a:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <waypoint+0x1>
    569e:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <waypoint>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:95
        if(waypoint.scale > 10) waypoint.scale = 10;
    56a2:	20 e0       	ldi	r18, 0x00	; 0
    56a4:	30 e0       	ldi	r19, 0x00	; 0
    56a6:	40 e2       	ldi	r20, 0x20	; 32
    56a8:	51 e4       	ldi	r21, 0x41	; 65
    56aa:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <waypoint+0x31>
    56ae:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <waypoint+0x32>
    56b2:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <waypoint+0x33>
    56b6:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <waypoint+0x34>
    56ba:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    56be:	18 16       	cp	r1, r24
    56c0:	64 f4       	brge	.+24     	; 0x56da <WaypointMenu()+0x41c>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:95 (discriminator 1)
    56c2:	80 e0       	ldi	r24, 0x00	; 0
    56c4:	90 e0       	ldi	r25, 0x00	; 0
    56c6:	a0 e2       	ldi	r26, 0x20	; 32
    56c8:	b1 e4       	ldi	r27, 0x41	; 65
    56ca:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <waypoint+0x31>
    56ce:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <waypoint+0x32>
    56d2:	a0 93 95 01 	sts	0x0195, r26	; 0x800195 <waypoint+0x33>
    56d6:	b0 93 96 01 	sts	0x0196, r27	; 0x800196 <waypoint+0x34>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:96
        if(waypoint.scale < 0.0000000001) waypoint.scale = 0.0000000001;
    56da:	2f ef       	ldi	r18, 0xFF	; 255
    56dc:	36 ee       	ldi	r19, 0xE6	; 230
    56de:	4b ed       	ldi	r20, 0xDB	; 219
    56e0:	5e e2       	ldi	r21, 0x2E	; 46
    56e2:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <waypoint+0x31>
    56e6:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <waypoint+0x32>
    56ea:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <waypoint+0x33>
    56ee:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <waypoint+0x34>
    56f2:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    56f6:	87 ff       	sbrs	r24, 7
    56f8:	0c c0       	rjmp	.+24     	; 0x5712 <WaypointMenu()+0x454>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:96 (discriminator 1)
    56fa:	8f ef       	ldi	r24, 0xFF	; 255
    56fc:	96 ee       	ldi	r25, 0xE6	; 230
    56fe:	ab ed       	ldi	r26, 0xDB	; 219
    5700:	be e2       	ldi	r27, 0x2E	; 46
    5702:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <waypoint+0x31>
    5706:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <waypoint+0x32>
    570a:	a0 93 95 01 	sts	0x0195, r26	; 0x800195 <waypoint+0x33>
    570e:	b0 93 96 01 	sts	0x0196, r27	; 0x800196 <waypoint+0x34>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
    5712:	10 92 8f 08 	sts	0x088F, r1	; 0x80088f <gps+0x69>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:98

        if (gps.satellites.value() == 0) {
    5716:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <gps+0x6e>
    571a:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <gps+0x6f>
    571e:	a0 91 96 08 	lds	r26, 0x0896	; 0x800896 <gps+0x70>
    5722:	b0 91 97 08 	lds	r27, 0x0897	; 0x800897 <gps+0x71>
    5726:	89 2b       	or	r24, r25
    5728:	8a 2b       	or	r24, r26
    572a:	8b 2b       	or	r24, r27
    572c:	49 f5       	brne	.+82     	; 0x5780 <WaypointMenu()+0x4c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:99
                display.fillRect(42, 28, 43, 9, WHITE);
    572e:	ee 24       	eor	r14, r14
    5730:	e3 94       	inc	r14
    5732:	f1 2c       	mov	r15, r1
    5734:	09 e0       	ldi	r16, 0x09	; 9
    5736:	10 e0       	ldi	r17, 0x00	; 0
    5738:	2b e2       	ldi	r18, 0x2B	; 43
    573a:	30 e0       	ldi	r19, 0x00	; 0
    573c:	4c e1       	ldi	r20, 0x1C	; 28
    573e:	50 e0       	ldi	r21, 0x00	; 0
    5740:	6a e2       	ldi	r22, 0x2A	; 42
    5742:	70 e0       	ldi	r23, 0x00	; 0
    5744:	81 e0       	ldi	r24, 0x01	; 1
    5746:	99 e0       	ldi	r25, 0x09	; 9
    5748:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    574c:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    5750:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    5754:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    5758:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    575c:	8b e2       	ldi	r24, 0x2B	; 43
    575e:	90 e0       	ldi	r25, 0x00	; 0
    5760:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    5764:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5768:	8d e1       	ldi	r24, 0x1D	; 29
    576a:	90 e0       	ldi	r25, 0x00	; 0
    576c:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    5770:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:102
                display.setTextColor(BLACK);
                display.setCursor(43, 29);
                display.print(F("NO DATA"));
    5774:	6f e3       	ldi	r22, 0x3F	; 63
    5776:	71 e0       	ldi	r23, 0x01	; 1
    5778:	81 e0       	ldi	r24, 0x01	; 1
    577a:	99 e0       	ldi	r25, 0x09	; 9
    577c:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:106
        }

        /* Get Current Coordinate */
        waypoint.x_now = gps.location.lat();
    5780:	86 e2       	ldi	r24, 0x26	; 38
    5782:	98 e0       	ldi	r25, 0x08	; 8
    5784:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
    5788:	60 93 83 01 	sts	0x0183, r22	; 0x800183 <waypoint+0x21>
    578c:	70 93 84 01 	sts	0x0184, r23	; 0x800184 <waypoint+0x22>
    5790:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <waypoint+0x23>
    5794:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <waypoint+0x24>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:107
        waypoint.y_now = gps.location.lng();
    5798:	86 e2       	ldi	r24, 0x26	; 38
    579a:	98 e0       	ldi	r25, 0x08	; 8
    579c:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    57a0:	5b 01       	movw	r10, r22
    57a2:	6c 01       	movw	r12, r24
    57a4:	a0 92 87 01 	sts	0x0187, r10	; 0x800187 <waypoint+0x25>
    57a8:	b0 92 88 01 	sts	0x0188, r11	; 0x800188 <waypoint+0x26>
    57ac:	c0 92 89 01 	sts	0x0189, r12	; 0x800189 <waypoint+0x27>
    57b0:	d0 92 8a 01 	sts	0x018A, r13	; 0x80018a <waypoint+0x28>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:110

        /* Get Distance and Course Between Waypoints */
        waypoint.distance_between_waypoints = gps.distanceBetween(
    57b4:	e0 90 83 01 	lds	r14, 0x0183	; 0x800183 <waypoint+0x21>
    57b8:	f0 90 84 01 	lds	r15, 0x0184	; 0x800184 <waypoint+0x22>
    57bc:	00 91 85 01 	lds	r16, 0x0185	; 0x800185 <waypoint+0x23>
    57c0:	10 91 86 01 	lds	r17, 0x0186	; 0x800186 <waypoint+0x24>
    57c4:	20 91 7f 01 	lds	r18, 0x017F	; 0x80017f <waypoint+0x1d>
    57c8:	30 91 80 01 	lds	r19, 0x0180	; 0x800180 <waypoint+0x1e>
    57cc:	40 91 81 01 	lds	r20, 0x0181	; 0x800181 <waypoint+0x1f>
    57d0:	50 91 82 01 	lds	r21, 0x0182	; 0x800182 <waypoint+0x20>
    57d4:	60 91 7b 01 	lds	r22, 0x017B	; 0x80017b <waypoint+0x19>
    57d8:	70 91 7c 01 	lds	r23, 0x017C	; 0x80017c <waypoint+0x1a>
    57dc:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <waypoint+0x1b>
    57e0:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <waypoint+0x1c>
    57e4:	0e 94 39 65 	call	0xca72	; 0xca72 <TinyGPSPlus::distanceBetween(double, double, double, double)>
    57e8:	60 93 8b 01 	sts	0x018B, r22	; 0x80018b <waypoint+0x29>
    57ec:	70 93 8c 01 	sts	0x018C, r23	; 0x80018c <waypoint+0x2a>
    57f0:	80 93 8d 01 	sts	0x018D, r24	; 0x80018d <waypoint+0x2b>
    57f4:	90 93 8e 01 	sts	0x018E, r25	; 0x80018e <waypoint+0x2c>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:114
                waypoint.x_goto_lat, waypoint.y_goto_lng,
                waypoint.x_now, waypoint.y_now
                );
        waypoint.course_to_waypoint = gps.courseTo(
    57f8:	a0 90 87 01 	lds	r10, 0x0187	; 0x800187 <waypoint+0x25>
    57fc:	b0 90 88 01 	lds	r11, 0x0188	; 0x800188 <waypoint+0x26>
    5800:	c0 90 89 01 	lds	r12, 0x0189	; 0x800189 <waypoint+0x27>
    5804:	d0 90 8a 01 	lds	r13, 0x018A	; 0x80018a <waypoint+0x28>
    5808:	e0 90 83 01 	lds	r14, 0x0183	; 0x800183 <waypoint+0x21>
    580c:	f0 90 84 01 	lds	r15, 0x0184	; 0x800184 <waypoint+0x22>
    5810:	00 91 85 01 	lds	r16, 0x0185	; 0x800185 <waypoint+0x23>
    5814:	10 91 86 01 	lds	r17, 0x0186	; 0x800186 <waypoint+0x24>
    5818:	20 91 7f 01 	lds	r18, 0x017F	; 0x80017f <waypoint+0x1d>
    581c:	30 91 80 01 	lds	r19, 0x0180	; 0x800180 <waypoint+0x1e>
    5820:	40 91 81 01 	lds	r20, 0x0181	; 0x800181 <waypoint+0x1f>
    5824:	50 91 82 01 	lds	r21, 0x0182	; 0x800182 <waypoint+0x20>
    5828:	60 91 7b 01 	lds	r22, 0x017B	; 0x80017b <waypoint+0x19>
    582c:	70 91 7c 01 	lds	r23, 0x017C	; 0x80017c <waypoint+0x1a>
    5830:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <waypoint+0x1b>
    5834:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <waypoint+0x1c>
    5838:	0e 94 29 66 	call	0xcc52	; 0xcc52 <TinyGPSPlus::courseTo(double, double, double, double)>
    583c:	4b 01       	movw	r8, r22
    583e:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:120
                waypoint.x_goto_lat, waypoint.y_goto_lng,
                waypoint.x_now, waypoint.y_now
                );

        /* Reduce Distance Scale */
        waypoint.distance_between_waypoints = waypoint.distance_between_waypoints * waypoint.scale;
    5840:	20 91 93 01 	lds	r18, 0x0193	; 0x800193 <waypoint+0x31>
    5844:	30 91 94 01 	lds	r19, 0x0194	; 0x800194 <waypoint+0x32>
    5848:	40 91 95 01 	lds	r20, 0x0195	; 0x800195 <waypoint+0x33>
    584c:	50 91 96 01 	lds	r21, 0x0196	; 0x800196 <waypoint+0x34>
    5850:	60 91 8b 01 	lds	r22, 0x018B	; 0x80018b <waypoint+0x29>
    5854:	70 91 8c 01 	lds	r23, 0x018C	; 0x80018c <waypoint+0x2a>
    5858:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <waypoint+0x2b>
    585c:	90 91 8e 01 	lds	r25, 0x018E	; 0x80018e <waypoint+0x2c>
    5860:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    5864:	6b 01       	movw	r12, r22
    5866:	7c 01       	movw	r14, r24
    5868:	c0 92 8b 01 	sts	0x018B, r12	; 0x80018b <waypoint+0x29>
    586c:	d0 92 8c 01 	sts	0x018C, r13	; 0x80018c <waypoint+0x2a>
    5870:	e0 92 8d 01 	sts	0x018D, r14	; 0x80018d <waypoint+0x2b>
    5874:	f0 92 8e 01 	sts	0x018E, r15	; 0x80018e <waypoint+0x2c>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:123

        /* Calculate Endpoint Coordinate on Screen */
        waypoint.course_to_waypoint = waypoint.course_to_waypoint - 90;
    5878:	20 e0       	ldi	r18, 0x00	; 0
    587a:	30 e0       	ldi	r19, 0x00	; 0
    587c:	44 eb       	ldi	r20, 0xB4	; 180
    587e:	52 e4       	ldi	r21, 0x42	; 66
    5880:	c5 01       	movw	r24, r10
    5882:	b4 01       	movw	r22, r8
    5884:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    5888:	60 93 8f 01 	sts	0x018F, r22	; 0x80018f <waypoint+0x2d>
    588c:	70 93 90 01 	sts	0x0190, r23	; 0x800190 <waypoint+0x2e>
    5890:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <waypoint+0x2f>
    5894:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <waypoint+0x30>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:124
        waypoint.screen_x = 64 + waypoint.distance_between_waypoints * cos(waypoint.course_to_waypoint * M_PI / 180);
    5898:	2b ed       	ldi	r18, 0xDB	; 219
    589a:	3f e0       	ldi	r19, 0x0F	; 15
    589c:	49 e4       	ldi	r20, 0x49	; 73
    589e:	50 e4       	ldi	r21, 0x40	; 64
    58a0:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    58a4:	20 e0       	ldi	r18, 0x00	; 0
    58a6:	30 e0       	ldi	r19, 0x00	; 0
    58a8:	44 e3       	ldi	r20, 0x34	; 52
    58aa:	53 e4       	ldi	r21, 0x43	; 67
    58ac:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    58b0:	4b 01       	movw	r8, r22
    58b2:	5c 01       	movw	r10, r24
    58b4:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    58b8:	9b 01       	movw	r18, r22
    58ba:	ac 01       	movw	r20, r24
    58bc:	c7 01       	movw	r24, r14
    58be:	b6 01       	movw	r22, r12
    58c0:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    58c4:	20 e0       	ldi	r18, 0x00	; 0
    58c6:	30 e0       	ldi	r19, 0x00	; 0
    58c8:	40 e8       	ldi	r20, 0x80	; 128
    58ca:	52 e4       	ldi	r21, 0x42	; 66
    58cc:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    58d0:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    58d4:	60 93 73 01 	sts	0x0173, r22	; 0x800173 <waypoint+0x11>
    58d8:	70 93 74 01 	sts	0x0174, r23	; 0x800174 <waypoint+0x12>
    58dc:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <waypoint+0x13>
    58e0:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <waypoint+0x14>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:125
        waypoint.screen_y = 32 + waypoint.distance_between_waypoints * sin(waypoint.course_to_waypoint * M_PI / 180);
    58e4:	c5 01       	movw	r24, r10
    58e6:	b4 01       	movw	r22, r8
    58e8:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    58ec:	9b 01       	movw	r18, r22
    58ee:	ac 01       	movw	r20, r24
    58f0:	c7 01       	movw	r24, r14
    58f2:	b6 01       	movw	r22, r12
    58f4:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    58f8:	20 e0       	ldi	r18, 0x00	; 0
    58fa:	30 e0       	ldi	r19, 0x00	; 0
    58fc:	40 e0       	ldi	r20, 0x00	; 0
    58fe:	52 e4       	ldi	r21, 0x42	; 66
    5900:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    5904:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    5908:	60 93 77 01 	sts	0x0177, r22	; 0x800177 <waypoint+0x15>
    590c:	70 93 78 01 	sts	0x0178, r23	; 0x800178 <waypoint+0x16>
    5910:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <waypoint+0x17>
    5914:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <waypoint+0x18>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:127

        display.clearDisplay();
    5918:	81 e0       	ldi	r24, 0x01	; 1
    591a:	99 e0       	ldi	r25, 0x09	; 9
    591c:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:128
        display.setTextSize(1);
    5920:	61 e0       	ldi	r22, 0x01	; 1
    5922:	81 e0       	ldi	r24, 0x01	; 1
    5924:	99 e0       	ldi	r25, 0x09	; 9
    5926:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    592a:	81 e0       	ldi	r24, 0x01	; 1
    592c:	90 e0       	ldi	r25, 0x00	; 0
    592e:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <display+0x13>
    5932:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <display+0x12>
    5936:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <display+0x11>
    593a:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    593e:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    5942:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5946:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    594a:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:131
        display.setTextColor(WHITE);
        display.setCursor(1, 1);
        display.print('x');
    594e:	68 e7       	ldi	r22, 0x78	; 120
    5950:	81 e0       	ldi	r24, 0x01	; 1
    5952:	99 e0       	ldi	r25, 0x09	; 9
    5954:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:134


        if(waypoint.scale < 1)
    5958:	c0 90 93 01 	lds	r12, 0x0193	; 0x800193 <waypoint+0x31>
    595c:	d0 90 94 01 	lds	r13, 0x0194	; 0x800194 <waypoint+0x32>
    5960:	e0 90 95 01 	lds	r14, 0x0195	; 0x800195 <waypoint+0x33>
    5964:	f0 90 96 01 	lds	r15, 0x0196	; 0x800196 <waypoint+0x34>
    5968:	20 e0       	ldi	r18, 0x00	; 0
    596a:	30 e0       	ldi	r19, 0x00	; 0
    596c:	40 e8       	ldi	r20, 0x80	; 128
    596e:	5f e3       	ldi	r21, 0x3F	; 63
    5970:	c7 01       	movw	r24, r14
    5972:	b6 01       	movw	r22, r12
    5974:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:135
                display.print(waypoint.scale, waypoint.decimal_point);
    5978:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <waypoint>
    597c:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <waypoint+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:134
        display.setTextColor(WHITE);
        display.setCursor(1, 1);
        display.print('x');


        if(waypoint.scale < 1)
    5980:	87 fd       	sbrc	r24, 7
    5982:	02 c0       	rjmp	.+4      	; 0x5988 <WaypointMenu()+0x6ca>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:137
                display.print(waypoint.scale, waypoint.decimal_point);
        else
                display.print(waypoint.scale);
    5984:	22 e0       	ldi	r18, 0x02	; 2
    5986:	30 e0       	ldi	r19, 0x00	; 0
    5988:	b7 01       	movw	r22, r14
    598a:	a6 01       	movw	r20, r12
    598c:	81 e0       	ldi	r24, 0x01	; 1
    598e:	99 e0       	ldi	r25, 0x09	; 9
    5990:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5994:	82 e6       	ldi	r24, 0x62	; 98
    5996:	90 e0       	ldi	r25, 0x00	; 0
    5998:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    599c:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    59a0:	81 e0       	ldi	r24, 0x01	; 1
    59a2:	90 e0       	ldi	r25, 0x00	; 0
    59a4:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    59a8:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:141

        /* Show Date and Time */
        display.setCursor(98, 1);
        display.print(gps.time.hour() + getTimeZone(gps.location.lng()));
    59ac:	86 e5       	ldi	r24, 0x56	; 86
    59ae:	98 e0       	ldi	r25, 0x08	; 8
    59b0:	0e 94 0a 68 	call	0xd014	; 0xd014 <TinyGPSTime::hour()>
    59b4:	c8 2f       	mov	r28, r24
    59b6:	86 e2       	ldi	r24, 0x26	; 38
    59b8:	98 e0       	ldi	r25, 0x08	; 8
    59ba:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    59be:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    59c2:	bc 01       	movw	r22, r24
    59c4:	6c 0f       	add	r22, r28
    59c6:	71 1d       	adc	r23, r1
    59c8:	4a e0       	ldi	r20, 0x0A	; 10
    59ca:	50 e0       	ldi	r21, 0x00	; 0
    59cc:	81 e0       	ldi	r24, 0x01	; 1
    59ce:	99 e0       	ldi	r25, 0x09	; 9
    59d0:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:142
        display.print(':');
    59d4:	6a e3       	ldi	r22, 0x3A	; 58
    59d6:	81 e0       	ldi	r24, 0x01	; 1
    59d8:	99 e0       	ldi	r25, 0x09	; 9
    59da:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:143
        if (gps.time.minute() < 10) display.print(F("0"));
    59de:	86 e5       	ldi	r24, 0x56	; 86
    59e0:	98 e0       	ldi	r25, 0x08	; 8
    59e2:	0e 94 18 68 	call	0xd030	; 0xd030 <TinyGPSTime::minute()>
    59e6:	8a 30       	cpi	r24, 0x0A	; 10
    59e8:	30 f4       	brcc	.+12     	; 0x59f6 <WaypointMenu()+0x738>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:143 (discriminator 1)
    59ea:	6d e3       	ldi	r22, 0x3D	; 61
    59ec:	71 e0       	ldi	r23, 0x01	; 1
    59ee:	81 e0       	ldi	r24, 0x01	; 1
    59f0:	99 e0       	ldi	r25, 0x09	; 9
    59f2:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:144
        display.print(gps.time.minute());
    59f6:	86 e5       	ldi	r24, 0x56	; 86
    59f8:	98 e0       	ldi	r25, 0x08	; 8
    59fa:	0e 94 18 68 	call	0xd030	; 0xd030 <TinyGPSTime::minute()>
    59fe:	4a e0       	ldi	r20, 0x0A	; 10
    5a00:	50 e0       	ldi	r21, 0x00	; 0
    5a02:	68 2f       	mov	r22, r24
    5a04:	81 e0       	ldi	r24, 0x01	; 1
    5a06:	99 e0       	ldi	r25, 0x09	; 9
    5a08:	0e 94 10 6f 	call	0xde20	; 0xde20 <Print::print(unsigned char, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5a0c:	81 e0       	ldi	r24, 0x01	; 1
    5a0e:	90 e0       	ldi	r25, 0x00	; 0
    5a10:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    5a14:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5a18:	88 e3       	ldi	r24, 0x38	; 56
    5a1a:	90 e0       	ldi	r25, 0x00	; 0
    5a1c:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    5a20:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:147

        display.setCursor(1, 56);
        display.print(waypoint.distance_between_waypoints);
    5a24:	40 91 8b 01 	lds	r20, 0x018B	; 0x80018b <waypoint+0x29>
    5a28:	50 91 8c 01 	lds	r21, 0x018C	; 0x80018c <waypoint+0x2a>
    5a2c:	60 91 8d 01 	lds	r22, 0x018D	; 0x80018d <waypoint+0x2b>
    5a30:	70 91 8e 01 	lds	r23, 0x018E	; 0x80018e <waypoint+0x2c>
    5a34:	22 e0       	ldi	r18, 0x02	; 2
    5a36:	30 e0       	ldi	r19, 0x00	; 0
    5a38:	81 e0       	ldi	r24, 0x01	; 1
    5a3a:	99 e0       	ldi	r25, 0x09	; 9
    5a3c:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:148
        display.print(F("m "));
    5a40:	6a e3       	ldi	r22, 0x3A	; 58
    5a42:	71 e0       	ldi	r23, 0x01	; 1
    5a44:	81 e0       	ldi	r24, 0x01	; 1
    5a46:	99 e0       	ldi	r25, 0x09	; 9
    5a48:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:149
        display.print(360 - waypoint.course_to_waypoint - 90);
    5a4c:	20 91 8f 01 	lds	r18, 0x018F	; 0x80018f <waypoint+0x2d>
    5a50:	30 91 90 01 	lds	r19, 0x0190	; 0x800190 <waypoint+0x2e>
    5a54:	40 91 91 01 	lds	r20, 0x0191	; 0x800191 <waypoint+0x2f>
    5a58:	50 91 92 01 	lds	r21, 0x0192	; 0x800192 <waypoint+0x30>
    5a5c:	60 e0       	ldi	r22, 0x00	; 0
    5a5e:	70 e0       	ldi	r23, 0x00	; 0
    5a60:	84 eb       	ldi	r24, 0xB4	; 180
    5a62:	93 e4       	ldi	r25, 0x43	; 67
    5a64:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    5a68:	20 e0       	ldi	r18, 0x00	; 0
    5a6a:	30 e0       	ldi	r19, 0x00	; 0
    5a6c:	44 eb       	ldi	r20, 0xB4	; 180
    5a6e:	52 e4       	ldi	r21, 0x42	; 66
    5a70:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    5a74:	ab 01       	movw	r20, r22
    5a76:	bc 01       	movw	r22, r24
    5a78:	22 e0       	ldi	r18, 0x02	; 2
    5a7a:	30 e0       	ldi	r19, 0x00	; 0
    5a7c:	81 e0       	ldi	r24, 0x01	; 1
    5a7e:	99 e0       	ldi	r25, 0x09	; 9
    5a80:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:150
        display.print(F("DEG"));
    5a84:	66 e3       	ldi	r22, 0x36	; 54
    5a86:	71 e0       	ldi	r23, 0x01	; 1
    5a88:	81 e0       	ldi	r24, 0x01	; 1
    5a8a:	99 e0       	ldi	r25, 0x09	; 9
    5a8c:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:153

        /* Draw Current Pos BMP */
        display.drawBitmap(59, 27, navCurrentPos, 10, 10, 1);
    5a90:	cc 24       	eor	r12, r12
    5a92:	c3 94       	inc	r12
    5a94:	d1 2c       	mov	r13, r1
    5a96:	9a e0       	ldi	r25, 0x0A	; 10
    5a98:	e9 2e       	mov	r14, r25
    5a9a:	f1 2c       	mov	r15, r1
    5a9c:	0a e0       	ldi	r16, 0x0A	; 10
    5a9e:	10 e0       	ldi	r17, 0x00	; 0
    5aa0:	25 e7       	ldi	r18, 0x75	; 117
    5aa2:	36 e1       	ldi	r19, 0x16	; 22
    5aa4:	4b e1       	ldi	r20, 0x1B	; 27
    5aa6:	50 e0       	ldi	r21, 0x00	; 0
    5aa8:	6b e3       	ldi	r22, 0x3B	; 59
    5aaa:	70 e0       	ldi	r23, 0x00	; 0
    5aac:	81 e0       	ldi	r24, 0x01	; 1
    5aae:	99 e0       	ldi	r25, 0x09	; 9
    5ab0:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:154
        display.drawBitmap((waypoint.screen_x - 2), (waypoint.screen_y - 11), navFlag, 10, 10, 1);
    5ab4:	40 91 77 01 	lds	r20, 0x0177	; 0x800177 <waypoint+0x15>
    5ab8:	50 91 78 01 	lds	r21, 0x0178	; 0x800178 <waypoint+0x16>
    5abc:	4b 50       	subi	r20, 0x0B	; 11
    5abe:	51 09       	sbc	r21, r1
    5ac0:	60 91 73 01 	lds	r22, 0x0173	; 0x800173 <waypoint+0x11>
    5ac4:	70 91 74 01 	lds	r23, 0x0174	; 0x800174 <waypoint+0x12>
    5ac8:	62 50       	subi	r22, 0x02	; 2
    5aca:	71 09       	sbc	r23, r1
    5acc:	21 e6       	ldi	r18, 0x61	; 97
    5ace:	36 e1       	ldi	r19, 0x16	; 22
    5ad0:	81 e0       	ldi	r24, 0x01	; 1
    5ad2:	99 e0       	ldi	r25, 0x09	; 9
    5ad4:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:157

        /* Draw Line from current point to Way point */
        display.drawLine(64, 32, waypoint.screen_x, waypoint.screen_y, WHITE);
    5ad8:	00 91 77 01 	lds	r16, 0x0177	; 0x800177 <waypoint+0x15>
    5adc:	10 91 78 01 	lds	r17, 0x0178	; 0x800178 <waypoint+0x16>
    5ae0:	20 91 73 01 	lds	r18, 0x0173	; 0x800173 <waypoint+0x11>
    5ae4:	30 91 74 01 	lds	r19, 0x0174	; 0x800174 <waypoint+0x12>
    5ae8:	ee 24       	eor	r14, r14
    5aea:	e3 94       	inc	r14
    5aec:	f1 2c       	mov	r15, r1
    5aee:	40 e2       	ldi	r20, 0x20	; 32
    5af0:	50 e0       	ldi	r21, 0x00	; 0
    5af2:	60 e4       	ldi	r22, 0x40	; 64
    5af4:	70 e0       	ldi	r23, 0x00	; 0
    5af6:	81 e0       	ldi	r24, 0x01	; 1
    5af8:	99 e0       	ldi	r25, 0x09	; 9
    5afa:	0e 94 a7 43 	call	0x874e	; 0x874e <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:159

        display.display();
    5afe:	81 e0       	ldi	r24, 0x01	; 1
    5b00:	99 e0       	ldi	r25, 0x09	; 9
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:160
}
    5b02:	df 91       	pop	r29
    5b04:	cf 91       	pop	r28
    5b06:	1f 91       	pop	r17
    5b08:	0f 91       	pop	r16
    5b0a:	ff 90       	pop	r15
    5b0c:	ef 90       	pop	r14
    5b0e:	df 90       	pop	r13
    5b10:	cf 90       	pop	r12
    5b12:	bf 90       	pop	r11
    5b14:	af 90       	pop	r10
    5b16:	9f 90       	pop	r9
    5b18:	8f 90       	pop	r8
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:159
        display.drawBitmap((waypoint.screen_x - 2), (waypoint.screen_y - 11), navFlag, 10, 10, 1);

        /* Draw Line from current point to Way point */
        display.drawLine(64, 32, waypoint.screen_x, waypoint.screen_y, WHITE);

        display.display();
    5b1a:	0c 94 5f 52 	jmp	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>

00005b1e <LogMenu()>:
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:1
void LogMenu(void){
    5b1e:	cf 92       	push	r12
    5b20:	df 92       	push	r13
    5b22:	ef 92       	push	r14
    5b24:	ff 92       	push	r15
    5b26:	0f 93       	push	r16
    5b28:	1f 93       	push	r17
    5b2a:	cf 93       	push	r28
    5b2c:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:6
        static float latMem[6], lngMem[6];
        static int index = 0, writeMemoryAddress = 10;

        /* Decode 6 Coordinates from EEPROM */
        if(waypoint.isStartUp) {
    5b2e:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <waypoint+0x10>
    5b32:	88 23       	and	r24, r24
    5b34:	09 f4       	brne	.+2      	; 0x5b38 <LogMenu()+0x1a>
    5b36:	90 c0       	rjmp	.+288    	; 0x5c58 <LogMenu()+0x13a>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:7
                display.clearDisplay();
    5b38:	81 e0       	ldi	r24, 0x01	; 1
    5b3a:	99 e0       	ldi	r25, 0x09	; 9
    5b3c:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5b40:	c1 e0       	ldi	r28, 0x01	; 1
    5b42:	d0 e0       	ldi	r29, 0x00	; 0
    5b44:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5b48:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5b4c:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    5b50:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:9
                display.setCursor(1, 1);
                display.setTextSize(1);
    5b54:	61 e0       	ldi	r22, 0x01	; 1
    5b56:	81 e0       	ldi	r24, 0x01	; 1
    5b58:	99 e0       	ldi	r25, 0x09	; 9
    5b5a:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    5b5e:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    5b62:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    5b66:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    5b6a:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:11
                display.setTextColor(WHITE);
                display.print(F("DECODING EEPROM..."));
    5b6e:	62 eb       	ldi	r22, 0xB2	; 178
    5b70:	72 e0       	ldi	r23, 0x02	; 2
    5b72:	81 e0       	ldi	r24, 0x01	; 1
    5b74:	99 e0       	ldi	r25, 0x09	; 9
    5b76:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:12
                display.display();
    5b7a:	81 e0       	ldi	r24, 0x01	; 1
    5b7c:	99 e0       	ldi	r25, 0x09	; 9
    5b7e:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:14

                writeMemoryAddress = 10;
    5b82:	8a e0       	ldi	r24, 0x0A	; 10
    5b84:	90 e0       	ldi	r25, 0x00	; 0
    5b86:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5b8a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:15
                index = 0;
    5b8e:	10 92 49 03 	sts	0x0349, r1	; 0x800349 <LogMenu()::index+0x1>
    5b92:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <LogMenu()::index>
    5b96:	06 e0       	ldi	r16, 0x06	; 6
    5b98:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:17 (discriminator 2)
                for(int i = 0; i < 6; i++) {
                        latMem[index] = decodeFromEEPROM(writeMemoryAddress);
    5b9a:	c0 91 48 03 	lds	r28, 0x0348	; 0x800348 <LogMenu()::index>
    5b9e:	d0 91 49 03 	lds	r29, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    5ba2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5ba6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5baa:	0e 94 2f 12 	call	0x245e	; 0x245e <decodeFromEEPROM(int)>
    5bae:	cc 0f       	add	r28, r28
    5bb0:	dd 1f       	adc	r29, r29
    5bb2:	cc 0f       	add	r28, r28
    5bb4:	dd 1f       	adc	r29, r29
    5bb6:	ce 59       	subi	r28, 0x9E	; 158
    5bb8:	dc 4f       	sbci	r29, 0xFC	; 252
    5bba:	68 83       	st	Y, r22
    5bbc:	79 83       	std	Y+1, r23	; 0x01
    5bbe:	8a 83       	std	Y+2, r24	; 0x02
    5bc0:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:18 (discriminator 2)
                        writeMemoryAddress += 6;
    5bc2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5bc6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5bca:	06 96       	adiw	r24, 0x06	; 6
    5bcc:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5bd0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:19 (discriminator 2)
                        delay(10);
    5bd4:	6a e0       	ldi	r22, 0x0A	; 10
    5bd6:	70 e0       	ldi	r23, 0x00	; 0
    5bd8:	80 e0       	ldi	r24, 0x00	; 0
    5bda:	90 e0       	ldi	r25, 0x00	; 0
    5bdc:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:20 (discriminator 2)
                        lngMem[index] = decodeFromEEPROM(writeMemoryAddress);
    5be0:	c0 91 48 03 	lds	r28, 0x0348	; 0x800348 <LogMenu()::index>
    5be4:	d0 91 49 03 	lds	r29, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    5be8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5bec:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5bf0:	0e 94 2f 12 	call	0x245e	; 0x245e <decodeFromEEPROM(int)>
    5bf4:	cc 0f       	add	r28, r28
    5bf6:	dd 1f       	adc	r29, r29
    5bf8:	cc 0f       	add	r28, r28
    5bfa:	dd 1f       	adc	r29, r29
    5bfc:	c6 5b       	subi	r28, 0xB6	; 182
    5bfe:	dc 4f       	sbci	r29, 0xFC	; 252
    5c00:	68 83       	st	Y, r22
    5c02:	79 83       	std	Y+1, r23	; 0x01
    5c04:	8a 83       	std	Y+2, r24	; 0x02
    5c06:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:21 (discriminator 2)
                        writeMemoryAddress += 6;
    5c08:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5c0c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5c10:	06 96       	adiw	r24, 0x06	; 6
    5c12:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5c16:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:22 (discriminator 2)
                        delay(10);
    5c1a:	6a e0       	ldi	r22, 0x0A	; 10
    5c1c:	70 e0       	ldi	r23, 0x00	; 0
    5c1e:	80 e0       	ldi	r24, 0x00	; 0
    5c20:	90 e0       	ldi	r25, 0x00	; 0
    5c22:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:23 (discriminator 2)
                        index++;
    5c26:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <LogMenu()::index>
    5c2a:	90 91 49 03 	lds	r25, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    5c2e:	01 96       	adiw	r24, 0x01	; 1
    5c30:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <LogMenu()::index+0x1>
    5c34:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <LogMenu()::index>
    5c38:	01 50       	subi	r16, 0x01	; 1
    5c3a:	11 09       	sbc	r17, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:16 (discriminator 2)
                display.print(F("DECODING EEPROM..."));
                display.display();

                writeMemoryAddress = 10;
                index = 0;
                for(int i = 0; i < 6; i++) {
    5c3c:	09 f0       	breq	.+2      	; 0x5c40 <LogMenu()+0x122>
    5c3e:	ad cf       	rjmp	.-166    	; 0x5b9a <LogMenu()+0x7c>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:25
                        lngMem[index] = decodeFromEEPROM(writeMemoryAddress);
                        writeMemoryAddress += 6;
                        delay(10);
                        index++;
                }
                waypoint.isStartUp = false;
    5c40:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <waypoint+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:26
                writeMemoryAddress = 10;
    5c44:	8a e0       	ldi	r24, 0x0A	; 10
    5c46:	90 e0       	ldi	r25, 0x00	; 0
    5c48:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5c4c:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:27
                index = 0;
    5c50:	10 92 49 03 	sts	0x0349, r1	; 0x800349 <LogMenu()::index+0x1>
    5c54:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <LogMenu()::index>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:30
        }

        display.clearDisplay();
    5c58:	81 e0       	ldi	r24, 0x01	; 1
    5c5a:	99 e0       	ldi	r25, 0x09	; 9
    5c5c:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:31
        display.setTextSize(1);
    5c60:	61 e0       	ldi	r22, 0x01	; 1
    5c62:	81 e0       	ldi	r24, 0x01	; 1
    5c64:	99 e0       	ldi	r25, 0x09	; 9
    5c66:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    5c6a:	c1 e0       	ldi	r28, 0x01	; 1
    5c6c:	d0 e0       	ldi	r29, 0x00	; 0
    5c6e:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    5c72:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    5c76:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    5c7a:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5c7e:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5c82:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5c86:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    5c8a:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:34
        display.setTextColor(WHITE);
        display.setCursor(1, 1);
        display.print(latMem[0], 6); display.print(','); display.print(lngMem[0], 6);
    5c8e:	40 91 62 03 	lds	r20, 0x0362	; 0x800362 <LogMenu()::latMem>
    5c92:	50 91 63 03 	lds	r21, 0x0363	; 0x800363 <LogMenu()::latMem+0x1>
    5c96:	60 91 64 03 	lds	r22, 0x0364	; 0x800364 <LogMenu()::latMem+0x2>
    5c9a:	70 91 65 03 	lds	r23, 0x0365	; 0x800365 <LogMenu()::latMem+0x3>
    5c9e:	26 e0       	ldi	r18, 0x06	; 6
    5ca0:	30 e0       	ldi	r19, 0x00	; 0
    5ca2:	81 e0       	ldi	r24, 0x01	; 1
    5ca4:	99 e0       	ldi	r25, 0x09	; 9
    5ca6:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    5caa:	6c e2       	ldi	r22, 0x2C	; 44
    5cac:	81 e0       	ldi	r24, 0x01	; 1
    5cae:	99 e0       	ldi	r25, 0x09	; 9
    5cb0:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    5cb4:	40 91 4a 03 	lds	r20, 0x034A	; 0x80034a <LogMenu()::lngMem>
    5cb8:	50 91 4b 03 	lds	r21, 0x034B	; 0x80034b <LogMenu()::lngMem+0x1>
    5cbc:	60 91 4c 03 	lds	r22, 0x034C	; 0x80034c <LogMenu()::lngMem+0x2>
    5cc0:	70 91 4d 03 	lds	r23, 0x034D	; 0x80034d <LogMenu()::lngMem+0x3>
    5cc4:	26 e0       	ldi	r18, 0x06	; 6
    5cc6:	30 e0       	ldi	r19, 0x00	; 0
    5cc8:	81 e0       	ldi	r24, 0x01	; 1
    5cca:	99 e0       	ldi	r25, 0x09	; 9
    5ccc:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5cd0:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5cd4:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5cd8:	8b e0       	ldi	r24, 0x0B	; 11
    5cda:	90 e0       	ldi	r25, 0x00	; 0
    5cdc:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    5ce0:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:36
        display.setCursor(1, 11);
        display.print(latMem[1], 6); display.print(','); display.print(lngMem[1], 6);
    5ce4:	40 91 66 03 	lds	r20, 0x0366	; 0x800366 <LogMenu()::latMem+0x4>
    5ce8:	50 91 67 03 	lds	r21, 0x0367	; 0x800367 <LogMenu()::latMem+0x5>
    5cec:	60 91 68 03 	lds	r22, 0x0368	; 0x800368 <LogMenu()::latMem+0x6>
    5cf0:	70 91 69 03 	lds	r23, 0x0369	; 0x800369 <LogMenu()::latMem+0x7>
    5cf4:	26 e0       	ldi	r18, 0x06	; 6
    5cf6:	30 e0       	ldi	r19, 0x00	; 0
    5cf8:	81 e0       	ldi	r24, 0x01	; 1
    5cfa:	99 e0       	ldi	r25, 0x09	; 9
    5cfc:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    5d00:	6c e2       	ldi	r22, 0x2C	; 44
    5d02:	81 e0       	ldi	r24, 0x01	; 1
    5d04:	99 e0       	ldi	r25, 0x09	; 9
    5d06:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    5d0a:	40 91 4e 03 	lds	r20, 0x034E	; 0x80034e <LogMenu()::lngMem+0x4>
    5d0e:	50 91 4f 03 	lds	r21, 0x034F	; 0x80034f <LogMenu()::lngMem+0x5>
    5d12:	60 91 50 03 	lds	r22, 0x0350	; 0x800350 <LogMenu()::lngMem+0x6>
    5d16:	70 91 51 03 	lds	r23, 0x0351	; 0x800351 <LogMenu()::lngMem+0x7>
    5d1a:	26 e0       	ldi	r18, 0x06	; 6
    5d1c:	30 e0       	ldi	r19, 0x00	; 0
    5d1e:	81 e0       	ldi	r24, 0x01	; 1
    5d20:	99 e0       	ldi	r25, 0x09	; 9
    5d22:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5d26:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5d2a:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5d2e:	85 e1       	ldi	r24, 0x15	; 21
    5d30:	90 e0       	ldi	r25, 0x00	; 0
    5d32:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    5d36:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:38
        display.setCursor(1, 21);
        display.print(latMem[2], 6); display.print(','); display.print(lngMem[2], 6);
    5d3a:	40 91 6a 03 	lds	r20, 0x036A	; 0x80036a <LogMenu()::latMem+0x8>
    5d3e:	50 91 6b 03 	lds	r21, 0x036B	; 0x80036b <LogMenu()::latMem+0x9>
    5d42:	60 91 6c 03 	lds	r22, 0x036C	; 0x80036c <LogMenu()::latMem+0xa>
    5d46:	70 91 6d 03 	lds	r23, 0x036D	; 0x80036d <LogMenu()::latMem+0xb>
    5d4a:	26 e0       	ldi	r18, 0x06	; 6
    5d4c:	30 e0       	ldi	r19, 0x00	; 0
    5d4e:	81 e0       	ldi	r24, 0x01	; 1
    5d50:	99 e0       	ldi	r25, 0x09	; 9
    5d52:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    5d56:	6c e2       	ldi	r22, 0x2C	; 44
    5d58:	81 e0       	ldi	r24, 0x01	; 1
    5d5a:	99 e0       	ldi	r25, 0x09	; 9
    5d5c:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    5d60:	40 91 52 03 	lds	r20, 0x0352	; 0x800352 <LogMenu()::lngMem+0x8>
    5d64:	50 91 53 03 	lds	r21, 0x0353	; 0x800353 <LogMenu()::lngMem+0x9>
    5d68:	60 91 54 03 	lds	r22, 0x0354	; 0x800354 <LogMenu()::lngMem+0xa>
    5d6c:	70 91 55 03 	lds	r23, 0x0355	; 0x800355 <LogMenu()::lngMem+0xb>
    5d70:	26 e0       	ldi	r18, 0x06	; 6
    5d72:	30 e0       	ldi	r19, 0x00	; 0
    5d74:	81 e0       	ldi	r24, 0x01	; 1
    5d76:	99 e0       	ldi	r25, 0x09	; 9
    5d78:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5d7c:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5d80:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5d84:	8f e1       	ldi	r24, 0x1F	; 31
    5d86:	90 e0       	ldi	r25, 0x00	; 0
    5d88:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    5d8c:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:40
        display.setCursor(1, 31);
        display.print(latMem[3], 6); display.print(','); display.print(lngMem[3], 6);
    5d90:	40 91 6e 03 	lds	r20, 0x036E	; 0x80036e <LogMenu()::latMem+0xc>
    5d94:	50 91 6f 03 	lds	r21, 0x036F	; 0x80036f <LogMenu()::latMem+0xd>
    5d98:	60 91 70 03 	lds	r22, 0x0370	; 0x800370 <LogMenu()::latMem+0xe>
    5d9c:	70 91 71 03 	lds	r23, 0x0371	; 0x800371 <LogMenu()::latMem+0xf>
    5da0:	26 e0       	ldi	r18, 0x06	; 6
    5da2:	30 e0       	ldi	r19, 0x00	; 0
    5da4:	81 e0       	ldi	r24, 0x01	; 1
    5da6:	99 e0       	ldi	r25, 0x09	; 9
    5da8:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    5dac:	6c e2       	ldi	r22, 0x2C	; 44
    5dae:	81 e0       	ldi	r24, 0x01	; 1
    5db0:	99 e0       	ldi	r25, 0x09	; 9
    5db2:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    5db6:	40 91 56 03 	lds	r20, 0x0356	; 0x800356 <LogMenu()::lngMem+0xc>
    5dba:	50 91 57 03 	lds	r21, 0x0357	; 0x800357 <LogMenu()::lngMem+0xd>
    5dbe:	60 91 58 03 	lds	r22, 0x0358	; 0x800358 <LogMenu()::lngMem+0xe>
    5dc2:	70 91 59 03 	lds	r23, 0x0359	; 0x800359 <LogMenu()::lngMem+0xf>
    5dc6:	26 e0       	ldi	r18, 0x06	; 6
    5dc8:	30 e0       	ldi	r19, 0x00	; 0
    5dca:	81 e0       	ldi	r24, 0x01	; 1
    5dcc:	99 e0       	ldi	r25, 0x09	; 9
    5dce:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5dd2:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5dd6:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5dda:	89 e2       	ldi	r24, 0x29	; 41
    5ddc:	90 e0       	ldi	r25, 0x00	; 0
    5dde:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    5de2:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:42
        display.setCursor(1, 41);
        display.print(latMem[4], 6); display.print(','); display.print(lngMem[4], 6);
    5de6:	40 91 72 03 	lds	r20, 0x0372	; 0x800372 <LogMenu()::latMem+0x10>
    5dea:	50 91 73 03 	lds	r21, 0x0373	; 0x800373 <LogMenu()::latMem+0x11>
    5dee:	60 91 74 03 	lds	r22, 0x0374	; 0x800374 <LogMenu()::latMem+0x12>
    5df2:	70 91 75 03 	lds	r23, 0x0375	; 0x800375 <LogMenu()::latMem+0x13>
    5df6:	26 e0       	ldi	r18, 0x06	; 6
    5df8:	30 e0       	ldi	r19, 0x00	; 0
    5dfa:	81 e0       	ldi	r24, 0x01	; 1
    5dfc:	99 e0       	ldi	r25, 0x09	; 9
    5dfe:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    5e02:	6c e2       	ldi	r22, 0x2C	; 44
    5e04:	81 e0       	ldi	r24, 0x01	; 1
    5e06:	99 e0       	ldi	r25, 0x09	; 9
    5e08:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    5e0c:	40 91 5a 03 	lds	r20, 0x035A	; 0x80035a <LogMenu()::lngMem+0x10>
    5e10:	50 91 5b 03 	lds	r21, 0x035B	; 0x80035b <LogMenu()::lngMem+0x11>
    5e14:	60 91 5c 03 	lds	r22, 0x035C	; 0x80035c <LogMenu()::lngMem+0x12>
    5e18:	70 91 5d 03 	lds	r23, 0x035D	; 0x80035d <LogMenu()::lngMem+0x13>
    5e1c:	26 e0       	ldi	r18, 0x06	; 6
    5e1e:	30 e0       	ldi	r19, 0x00	; 0
    5e20:	81 e0       	ldi	r24, 0x01	; 1
    5e22:	99 e0       	ldi	r25, 0x09	; 9
    5e24:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5e28:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    5e2c:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5e30:	83 e3       	ldi	r24, 0x33	; 51
    5e32:	90 e0       	ldi	r25, 0x00	; 0
    5e34:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    5e38:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:44
        display.setCursor(1, 51);
        display.print(latMem[5], 6); display.print(','); display.print(lngMem[5], 6);
    5e3c:	40 91 76 03 	lds	r20, 0x0376	; 0x800376 <LogMenu()::latMem+0x14>
    5e40:	50 91 77 03 	lds	r21, 0x0377	; 0x800377 <LogMenu()::latMem+0x15>
    5e44:	60 91 78 03 	lds	r22, 0x0378	; 0x800378 <LogMenu()::latMem+0x16>
    5e48:	70 91 79 03 	lds	r23, 0x0379	; 0x800379 <LogMenu()::latMem+0x17>
    5e4c:	26 e0       	ldi	r18, 0x06	; 6
    5e4e:	30 e0       	ldi	r19, 0x00	; 0
    5e50:	81 e0       	ldi	r24, 0x01	; 1
    5e52:	99 e0       	ldi	r25, 0x09	; 9
    5e54:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
    5e58:	6c e2       	ldi	r22, 0x2C	; 44
    5e5a:	81 e0       	ldi	r24, 0x01	; 1
    5e5c:	99 e0       	ldi	r25, 0x09	; 9
    5e5e:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    5e62:	40 91 5e 03 	lds	r20, 0x035E	; 0x80035e <LogMenu()::lngMem+0x14>
    5e66:	50 91 5f 03 	lds	r21, 0x035F	; 0x80035f <LogMenu()::lngMem+0x15>
    5e6a:	60 91 60 03 	lds	r22, 0x0360	; 0x800360 <LogMenu()::lngMem+0x16>
    5e6e:	70 91 61 03 	lds	r23, 0x0361	; 0x800361 <LogMenu()::lngMem+0x17>
    5e72:	26 e0       	ldi	r18, 0x06	; 6
    5e74:	30 e0       	ldi	r19, 0x00	; 0
    5e76:	81 e0       	ldi	r24, 0x01	; 1
    5e78:	99 e0       	ldi	r25, 0x09	; 9
    5e7a:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:45
        display.display();
    5e7e:	81 e0       	ldi	r24, 0x01	; 1
    5e80:	99 e0       	ldi	r25, 0x09	; 9
    5e82:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:48

        /* Max Array Index */
        if(index > 5)
    5e86:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <LogMenu()::index>
    5e8a:	90 91 49 03 	lds	r25, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    5e8e:	06 97       	sbiw	r24, 0x06	; 6
    5e90:	24 f0       	brlt	.+8      	; 0x5e9a <LogMenu()+0x37c>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:49
                index = 0;
    5e92:	10 92 49 03 	sts	0x0349, r1	; 0x800349 <LogMenu()::index+0x1>
    5e96:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <LogMenu()::index>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:51
        /* Max Write EEPROM Address for 6 Coordinates */
        if (writeMemoryAddress > 76)
    5e9a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5e9e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5ea2:	8d 34       	cpi	r24, 0x4D	; 77
    5ea4:	91 05       	cpc	r25, r1
    5ea6:	34 f0       	brlt	.+12     	; 0x5eb4 <LogMenu()+0x396>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:52
                writeMemoryAddress = 10;
    5ea8:	8a e0       	ldi	r24, 0x0A	; 10
    5eaa:	90 e0       	ldi	r25, 0x00	; 0
    5eac:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5eb0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:55

        /* Write Current Location to EEPROM */
        if(!digitalRead(C_Pin)) {
    5eb4:	80 e0       	ldi	r24, 0x00	; 0
    5eb6:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    5eba:	89 2b       	or	r24, r25
    5ebc:	09 f0       	breq	.+2      	; 0x5ec0 <LogMenu()+0x3a2>
    5ebe:	a8 c0       	rjmp	.+336    	; 0x6010 <LogMenu()+0x4f2>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:56
                display.setTextSize(1);
    5ec0:	61 e0       	ldi	r22, 0x01	; 1
    5ec2:	81 e0       	ldi	r24, 0x01	; 1
    5ec4:	99 e0       	ldi	r25, 0x09	; 9
    5ec6:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    5eca:	c1 e0       	ldi	r28, 0x01	; 1
    5ecc:	d0 e0       	ldi	r29, 0x00	; 0
    5ece:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    5ed2:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    5ed6:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    5eda:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:59
                display.setTextColor(WHITE);
                static unsigned long last_interrupt_time = 0;
                if (millis() - last_interrupt_time > 200) {
    5ede:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    5ee2:	00 91 44 03 	lds	r16, 0x0344	; 0x800344 <LogMenu()::last_interrupt_time>
    5ee6:	10 91 45 03 	lds	r17, 0x0345	; 0x800345 <LogMenu()::last_interrupt_time+0x1>
    5eea:	20 91 46 03 	lds	r18, 0x0346	; 0x800346 <LogMenu()::last_interrupt_time+0x2>
    5eee:	30 91 47 03 	lds	r19, 0x0347	; 0x800347 <LogMenu()::last_interrupt_time+0x3>
    5ef2:	60 1b       	sub	r22, r16
    5ef4:	71 0b       	sbc	r23, r17
    5ef6:	82 0b       	sbc	r24, r18
    5ef8:	93 0b       	sbc	r25, r19
    5efa:	69 3c       	cpi	r22, 0xC9	; 201
    5efc:	71 05       	cpc	r23, r1
    5efe:	81 05       	cpc	r24, r1
    5f00:	91 05       	cpc	r25, r1
    5f02:	08 f4       	brcc	.+2      	; 0x5f06 <LogMenu()+0x3e8>
    5f04:	7b c0       	rjmp	.+246    	; 0x5ffc <LogMenu()+0x4de>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:60
                        switch (index) {
    5f06:	c0 90 48 03 	lds	r12, 0x0348	; 0x800348 <LogMenu()::index>
    5f0a:	d0 90 49 03 	lds	r13, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    5f0e:	82 e0       	ldi	r24, 0x02	; 2
    5f10:	c8 16       	cp	r12, r24
    5f12:	d1 04       	cpc	r13, r1
    5f14:	09 f4       	brne	.+2      	; 0x5f18 <LogMenu()+0x3fa>
    5f16:	20 c1       	rjmp	.+576    	; 0x6158 <LogMenu()+0x63a>
    5f18:	0c f0       	brlt	.+2      	; 0x5f1c <LogMenu()+0x3fe>
    5f1a:	b5 c0       	rjmp	.+362    	; 0x6086 <LogMenu()+0x568>
    5f1c:	c1 14       	cp	r12, r1
    5f1e:	d1 04       	cpc	r13, r1
    5f20:	09 f4       	brne	.+2      	; 0x5f24 <LogMenu()+0x406>
    5f22:	d8 c0       	rjmp	.+432    	; 0x60d4 <LogMenu()+0x5b6>
    5f24:	81 e0       	ldi	r24, 0x01	; 1
    5f26:	c8 16       	cp	r12, r24
    5f28:	d1 04       	cpc	r13, r1
    5f2a:	09 f4       	brne	.+2      	; 0x5f2e <LogMenu()+0x410>
    5f2c:	fa c0       	rjmp	.+500    	; 0x6122 <LogMenu()+0x604>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:98
                            display.setCursor(1, 51);
                            display.print(F("WRITING...  "));
                            display.print(index);
                            break;
                        }
                        display.display();
    5f2e:	81 e0       	ldi	r24, 0x01	; 1
    5f30:	99 e0       	ldi	r25, 0x09	; 9
    5f32:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:99
                        latMem[index] = gps.location.lat();
    5f36:	c0 91 48 03 	lds	r28, 0x0348	; 0x800348 <LogMenu()::index>
    5f3a:	d0 91 49 03 	lds	r29, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    5f3e:	86 e2       	ldi	r24, 0x26	; 38
    5f40:	98 e0       	ldi	r25, 0x08	; 8
    5f42:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
    5f46:	cc 0f       	add	r28, r28
    5f48:	dd 1f       	adc	r29, r29
    5f4a:	cc 0f       	add	r28, r28
    5f4c:	dd 1f       	adc	r29, r29
    5f4e:	ce 59       	subi	r28, 0x9E	; 158
    5f50:	dc 4f       	sbci	r29, 0xFC	; 252
    5f52:	68 83       	st	Y, r22
    5f54:	79 83       	std	Y+1, r23	; 0x01
    5f56:	8a 83       	std	Y+2, r24	; 0x02
    5f58:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:100
                        lngMem[index] = gps.location.lng();
    5f5a:	c0 91 48 03 	lds	r28, 0x0348	; 0x800348 <LogMenu()::index>
    5f5e:	d0 91 49 03 	lds	r29, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    5f62:	86 e2       	ldi	r24, 0x26	; 38
    5f64:	98 e0       	ldi	r25, 0x08	; 8
    5f66:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    5f6a:	cc 0f       	add	r28, r28
    5f6c:	dd 1f       	adc	r29, r29
    5f6e:	cc 0f       	add	r28, r28
    5f70:	dd 1f       	adc	r29, r29
    5f72:	c6 5b       	subi	r28, 0xB6	; 182
    5f74:	dc 4f       	sbci	r29, 0xFC	; 252
    5f76:	68 83       	st	Y, r22
    5f78:	79 83       	std	Y+1, r23	; 0x01
    5f7a:	8a 83       	std	Y+2, r24	; 0x02
    5f7c:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:101
                        writeToEEPROM(writeMemoryAddress, latMem[index]);
    5f7e:	e0 91 48 03 	lds	r30, 0x0348	; 0x800348 <LogMenu()::index>
    5f82:	f0 91 49 03 	lds	r31, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    5f86:	ee 0f       	add	r30, r30
    5f88:	ff 1f       	adc	r31, r31
    5f8a:	ee 0f       	add	r30, r30
    5f8c:	ff 1f       	adc	r31, r31
    5f8e:	ee 59       	subi	r30, 0x9E	; 158
    5f90:	fc 4f       	sbci	r31, 0xFC	; 252
    5f92:	40 81       	ld	r20, Z
    5f94:	51 81       	ldd	r21, Z+1	; 0x01
    5f96:	62 81       	ldd	r22, Z+2	; 0x02
    5f98:	73 81       	ldd	r23, Z+3	; 0x03
    5f9a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5f9e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5fa2:	0e 94 75 11 	call	0x22ea	; 0x22ea <writeToEEPROM(int, double)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:102
                        writeMemoryAddress += 6;
    5fa6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5faa:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5fae:	06 96       	adiw	r24, 0x06	; 6
    5fb0:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5fb4:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:103
                        writeToEEPROM(writeMemoryAddress, lngMem[index]);
    5fb8:	e0 91 48 03 	lds	r30, 0x0348	; 0x800348 <LogMenu()::index>
    5fbc:	f0 91 49 03 	lds	r31, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    5fc0:	ee 0f       	add	r30, r30
    5fc2:	ff 1f       	adc	r31, r31
    5fc4:	ee 0f       	add	r30, r30
    5fc6:	ff 1f       	adc	r31, r31
    5fc8:	e6 5b       	subi	r30, 0xB6	; 182
    5fca:	fc 4f       	sbci	r31, 0xFC	; 252
    5fcc:	40 81       	ld	r20, Z
    5fce:	51 81       	ldd	r21, Z+1	; 0x01
    5fd0:	62 81       	ldd	r22, Z+2	; 0x02
    5fd2:	73 81       	ldd	r23, Z+3	; 0x03
    5fd4:	0e 94 75 11 	call	0x22ea	; 0x22ea <writeToEEPROM(int, double)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:104
                        writeMemoryAddress += 6;
    5fd8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5fdc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5fe0:	06 96       	adiw	r24, 0x06	; 6
    5fe2:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5fe6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:105
                        index++;
    5fea:	80 91 48 03 	lds	r24, 0x0348	; 0x800348 <LogMenu()::index>
    5fee:	90 91 49 03 	lds	r25, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    5ff2:	01 96       	adiw	r24, 0x01	; 1
    5ff4:	90 93 49 03 	sts	0x0349, r25	; 0x800349 <LogMenu()::index+0x1>
    5ff8:	80 93 48 03 	sts	0x0348, r24	; 0x800348 <LogMenu()::index>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:107
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
    5ffc:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    6000:	60 93 44 03 	sts	0x0344, r22	; 0x800344 <LogMenu()::last_interrupt_time>
    6004:	70 93 45 03 	sts	0x0345, r23	; 0x800345 <LogMenu()::last_interrupt_time+0x1>
    6008:	80 93 46 03 	sts	0x0346, r24	; 0x800346 <LogMenu()::last_interrupt_time+0x2>
    600c:	90 93 47 03 	sts	0x0347, r25	; 0x800347 <LogMenu()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:111
        }

        /* Clear Locations in EEPROM */
        while(!digitalRead(B_Pin)) {
    6010:	81 e0       	ldi	r24, 0x01	; 1
    6012:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    6016:	89 2b       	or	r24, r25
    6018:	09 f0       	breq	.+2      	; 0x601c <LogMenu()+0x4fe>
    601a:	0d c1       	rjmp	.+538    	; 0x6236 <LogMenu()+0x718>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:112
                display.clearDisplay();
    601c:	81 e0       	ldi	r24, 0x01	; 1
    601e:	99 e0       	ldi	r25, 0x09	; 9
    6020:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6024:	81 e0       	ldi	r24, 0x01	; 1
    6026:	90 e0       	ldi	r25, 0x00	; 0
    6028:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    602c:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6030:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    6034:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:114
                display.setCursor(1, 1);
                display.print(F("ERASING EEPROM..."));
    6038:	62 e5       	ldi	r22, 0x52	; 82
    603a:	72 e0       	ldi	r23, 0x02	; 2
    603c:	81 e0       	ldi	r24, 0x01	; 1
    603e:	99 e0       	ldi	r25, 0x09	; 9
    6040:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:115
                display.display();
    6044:	81 e0       	ldi	r24, 0x01	; 1
    6046:	99 e0       	ldi	r25, 0x09	; 9
    6048:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:118

                /* Erase all waypoint memory from EEPROM */
                for(writeMemoryAddress = 10; writeMemoryAddress < 77; writeMemoryAddress++) {
    604c:	8a e0       	ldi	r24, 0x0A	; 10
    604e:	90 e0       	ldi	r25, 0x00	; 0
    6050:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    6054:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
    6058:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    605c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    6060:	8d 34       	cpi	r24, 0x4D	; 77
    6062:	91 05       	cpc	r25, r1
    6064:	0c f0       	brlt	.+2      	; 0x6068 <LogMenu()+0x54a>
    6066:	c9 c0       	rjmp	.+402    	; 0x61fa <LogMenu()+0x6dc>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:119 (discriminator 2)
                        EEPROM.write(writeMemoryAddress, 0);
    6068:	60 e0       	ldi	r22, 0x00	; 0
    606a:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:120 (discriminator 2)
                        delay(10);
    606e:	6a e0       	ldi	r22, 0x0A	; 10
    6070:	70 e0       	ldi	r23, 0x00	; 0
    6072:	80 e0       	ldi	r24, 0x00	; 0
    6074:	90 e0       	ldi	r25, 0x00	; 0
    6076:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:118 (discriminator 2)
                display.setCursor(1, 1);
                display.print(F("ERASING EEPROM..."));
                display.display();

                /* Erase all waypoint memory from EEPROM */
                for(writeMemoryAddress = 10; writeMemoryAddress < 77; writeMemoryAddress++) {
    607a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    607e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    6082:	01 96       	adiw	r24, 0x01	; 1
    6084:	e5 cf       	rjmp	.-54     	; 0x6050 <LogMenu()+0x532>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:60
        if(!digitalRead(C_Pin)) {
                display.setTextSize(1);
                display.setTextColor(WHITE);
                static unsigned long last_interrupt_time = 0;
                if (millis() - last_interrupt_time > 200) {
                        switch (index) {
    6086:	84 e0       	ldi	r24, 0x04	; 4
    6088:	c8 16       	cp	r12, r24
    608a:	d1 04       	cpc	r13, r1
    608c:	09 f4       	brne	.+2      	; 0x6090 <LogMenu()+0x572>
    608e:	9a c0       	rjmp	.+308    	; 0x61c4 <LogMenu()+0x6a6>
    6090:	0c f4       	brge	.+2      	; 0x6094 <LogMenu()+0x576>
    6092:	7d c0       	rjmp	.+250    	; 0x618e <LogMenu()+0x670>
    6094:	85 e0       	ldi	r24, 0x05	; 5
    6096:	c8 16       	cp	r12, r24
    6098:	d1 04       	cpc	r13, r1
    609a:	09 f0       	breq	.+2      	; 0x609e <LogMenu()+0x580>
    609c:	48 cf       	rjmp	.-368    	; 0x5f2e <LogMenu()+0x410>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:92
                            display.setCursor(1, 41);
                            display.print(F("WRITING...  "));
                            display.print(index);
                            break;
                          case 5:
                            display.fillRect(1, 51, 128, 9, BLACK);
    609e:	f1 2c       	mov	r15, r1
    60a0:	e1 2c       	mov	r14, r1
    60a2:	09 e0       	ldi	r16, 0x09	; 9
    60a4:	10 e0       	ldi	r17, 0x00	; 0
    60a6:	20 e8       	ldi	r18, 0x80	; 128
    60a8:	30 e0       	ldi	r19, 0x00	; 0
    60aa:	43 e3       	ldi	r20, 0x33	; 51
    60ac:	50 e0       	ldi	r21, 0x00	; 0
    60ae:	61 e0       	ldi	r22, 0x01	; 1
    60b0:	70 e0       	ldi	r23, 0x00	; 0
    60b2:	81 e0       	ldi	r24, 0x01	; 1
    60b4:	99 e0       	ldi	r25, 0x09	; 9
    60b6:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    60ba:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    60be:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    60c2:	83 e3       	ldi	r24, 0x33	; 51
    60c4:	90 e0       	ldi	r25, 0x00	; 0
    60c6:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    60ca:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:94
                            display.setCursor(1, 51);
                            display.print(F("WRITING...  "));
    60ce:	64 e6       	ldi	r22, 0x64	; 100
    60d0:	72 e0       	ldi	r23, 0x02	; 2
    60d2:	18 c0       	rjmp	.+48     	; 0x6104 <LogMenu()+0x5e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:62
                display.setTextColor(WHITE);
                static unsigned long last_interrupt_time = 0;
                if (millis() - last_interrupt_time > 200) {
                        switch (index) {
                          case 0:
                            display.fillRect(1, 1, 128, 9, BLACK);
    60d4:	f1 2c       	mov	r15, r1
    60d6:	e1 2c       	mov	r14, r1
    60d8:	09 e0       	ldi	r16, 0x09	; 9
    60da:	10 e0       	ldi	r17, 0x00	; 0
    60dc:	20 e8       	ldi	r18, 0x80	; 128
    60de:	30 e0       	ldi	r19, 0x00	; 0
    60e0:	41 e0       	ldi	r20, 0x01	; 1
    60e2:	50 e0       	ldi	r21, 0x00	; 0
    60e4:	61 e0       	ldi	r22, 0x01	; 1
    60e6:	70 e0       	ldi	r23, 0x00	; 0
    60e8:	81 e0       	ldi	r24, 0x01	; 1
    60ea:	99 e0       	ldi	r25, 0x09	; 9
    60ec:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    60f0:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    60f4:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    60f8:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    60fc:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:64
                            display.setCursor(1, 1);
                            display.print(F("WRITING...  "));
    6100:	65 ea       	ldi	r22, 0xA5	; 165
    6102:	72 e0       	ldi	r23, 0x02	; 2
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:94
                            display.print(index);
                            break;
                          case 5:
                            display.fillRect(1, 51, 128, 9, BLACK);
                            display.setCursor(1, 51);
                            display.print(F("WRITING...  "));
    6104:	81 e0       	ldi	r24, 0x01	; 1
    6106:	99 e0       	ldi	r25, 0x09	; 9
    6108:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:95
                            display.print(index);
    610c:	60 91 48 03 	lds	r22, 0x0348	; 0x800348 <LogMenu()::index>
    6110:	70 91 49 03 	lds	r23, 0x0349	; 0x800349 <LogMenu()::index+0x1>
    6114:	4a e0       	ldi	r20, 0x0A	; 10
    6116:	50 e0       	ldi	r21, 0x00	; 0
    6118:	81 e0       	ldi	r24, 0x01	; 1
    611a:	99 e0       	ldi	r25, 0x09	; 9
    611c:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:96
                            break;
    6120:	06 cf       	rjmp	.-500    	; 0x5f2e <LogMenu()+0x410>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:68
                            display.setCursor(1, 1);
                            display.print(F("WRITING...  "));
                            display.print(index);
                            break;
                          case 1:
                            display.fillRect(1, 11, 128, 9, BLACK);
    6122:	f1 2c       	mov	r15, r1
    6124:	e1 2c       	mov	r14, r1
    6126:	09 e0       	ldi	r16, 0x09	; 9
    6128:	10 e0       	ldi	r17, 0x00	; 0
    612a:	20 e8       	ldi	r18, 0x80	; 128
    612c:	30 e0       	ldi	r19, 0x00	; 0
    612e:	4b e0       	ldi	r20, 0x0B	; 11
    6130:	50 e0       	ldi	r21, 0x00	; 0
    6132:	61 e0       	ldi	r22, 0x01	; 1
    6134:	70 e0       	ldi	r23, 0x00	; 0
    6136:	81 e0       	ldi	r24, 0x01	; 1
    6138:	99 e0       	ldi	r25, 0x09	; 9
    613a:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    613e:	d0 92 0e 09 	sts	0x090E, r13	; 0x80090e <display+0xd>
    6142:	c0 92 0d 09 	sts	0x090D, r12	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6146:	8b e0       	ldi	r24, 0x0B	; 11
    6148:	90 e0       	ldi	r25, 0x00	; 0
    614a:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    614e:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:70
                            display.setCursor(1, 11);
                            display.print(F("WRITING...  "));
    6152:	68 e9       	ldi	r22, 0x98	; 152
    6154:	72 e0       	ldi	r23, 0x02	; 2
    6156:	d6 cf       	rjmp	.-84     	; 0x6104 <LogMenu()+0x5e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:74
                            display.print(index);
                            break;
                          case 2:
                            display.fillRect(1, 21, 128, 9, BLACK);
    6158:	f1 2c       	mov	r15, r1
    615a:	e1 2c       	mov	r14, r1
    615c:	09 e0       	ldi	r16, 0x09	; 9
    615e:	10 e0       	ldi	r17, 0x00	; 0
    6160:	20 e8       	ldi	r18, 0x80	; 128
    6162:	30 e0       	ldi	r19, 0x00	; 0
    6164:	45 e1       	ldi	r20, 0x15	; 21
    6166:	50 e0       	ldi	r21, 0x00	; 0
    6168:	61 e0       	ldi	r22, 0x01	; 1
    616a:	70 e0       	ldi	r23, 0x00	; 0
    616c:	81 e0       	ldi	r24, 0x01	; 1
    616e:	99 e0       	ldi	r25, 0x09	; 9
    6170:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6174:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    6178:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    617c:	85 e1       	ldi	r24, 0x15	; 21
    617e:	90 e0       	ldi	r25, 0x00	; 0
    6180:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    6184:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:76
                            display.setCursor(1, 21);
                            display.print(F("WRITING...  "));
    6188:	6b e8       	ldi	r22, 0x8B	; 139
    618a:	72 e0       	ldi	r23, 0x02	; 2
    618c:	bb cf       	rjmp	.-138    	; 0x6104 <LogMenu()+0x5e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:80
                            display.print(index);
                            break;
                          case 3:
                            display.fillRect(1, 31, 128, 9, BLACK);
    618e:	f1 2c       	mov	r15, r1
    6190:	e1 2c       	mov	r14, r1
    6192:	09 e0       	ldi	r16, 0x09	; 9
    6194:	10 e0       	ldi	r17, 0x00	; 0
    6196:	20 e8       	ldi	r18, 0x80	; 128
    6198:	30 e0       	ldi	r19, 0x00	; 0
    619a:	4f e1       	ldi	r20, 0x1F	; 31
    619c:	50 e0       	ldi	r21, 0x00	; 0
    619e:	61 e0       	ldi	r22, 0x01	; 1
    61a0:	70 e0       	ldi	r23, 0x00	; 0
    61a2:	81 e0       	ldi	r24, 0x01	; 1
    61a4:	99 e0       	ldi	r25, 0x09	; 9
    61a6:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    61aa:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    61ae:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    61b2:	8f e1       	ldi	r24, 0x1F	; 31
    61b4:	90 e0       	ldi	r25, 0x00	; 0
    61b6:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    61ba:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:82
                            display.setCursor(1, 31);
                            display.print(F("WRITING...  "));
    61be:	6e e7       	ldi	r22, 0x7E	; 126
    61c0:	72 e0       	ldi	r23, 0x02	; 2
    61c2:	a0 cf       	rjmp	.-192    	; 0x6104 <LogMenu()+0x5e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:86
                            display.print(index);
                            break;
                          case 4:
                            display.fillRect(1, 41, 128, 9, BLACK);
    61c4:	f1 2c       	mov	r15, r1
    61c6:	e1 2c       	mov	r14, r1
    61c8:	09 e0       	ldi	r16, 0x09	; 9
    61ca:	10 e0       	ldi	r17, 0x00	; 0
    61cc:	20 e8       	ldi	r18, 0x80	; 128
    61ce:	30 e0       	ldi	r19, 0x00	; 0
    61d0:	49 e2       	ldi	r20, 0x29	; 41
    61d2:	50 e0       	ldi	r21, 0x00	; 0
    61d4:	61 e0       	ldi	r22, 0x01	; 1
    61d6:	70 e0       	ldi	r23, 0x00	; 0
    61d8:	81 e0       	ldi	r24, 0x01	; 1
    61da:	99 e0       	ldi	r25, 0x09	; 9
    61dc:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    61e0:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    61e4:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    61e8:	89 e2       	ldi	r24, 0x29	; 41
    61ea:	90 e0       	ldi	r25, 0x00	; 0
    61ec:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    61f0:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:88
                            display.setCursor(1, 41);
                            display.print(F("WRITING...  "));
    61f4:	61 e7       	ldi	r22, 0x71	; 113
    61f6:	72 e0       	ldi	r23, 0x02	; 2
    61f8:	85 cf       	rjmp	.-246    	; 0x6104 <LogMenu()+0x5e6>
    61fa:	e2 e6       	ldi	r30, 0x62	; 98
    61fc:	f3 e0       	ldi	r31, 0x03	; 3
    61fe:	aa e4       	ldi	r26, 0x4A	; 74
    6200:	b3 e0       	ldi	r27, 0x03	; 3
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:125 (discriminator 2)
                        delay(10);
                }

                /* Clear Coordinates Array */
                for(int i = 0; i < 6; i++) {
                        latMem[i] = 0;
    6202:	11 92       	st	Z+, r1
    6204:	11 92       	st	Z+, r1
    6206:	11 92       	st	Z+, r1
    6208:	11 92       	st	Z+, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:126 (discriminator 2)
                        lngMem[i] = 0;
    620a:	1d 92       	st	X+, r1
    620c:	1d 92       	st	X+, r1
    620e:	1d 92       	st	X+, r1
    6210:	1d 92       	st	X+, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:124 (discriminator 2)
                        EEPROM.write(writeMemoryAddress, 0);
                        delay(10);
                }

                /* Clear Coordinates Array */
                for(int i = 0; i < 6; i++) {
    6212:	83 e0       	ldi	r24, 0x03	; 3
    6214:	ea 37       	cpi	r30, 0x7A	; 122
    6216:	f8 07       	cpc	r31, r24
    6218:	a1 f7       	brne	.-24     	; 0x6202 <LogMenu()+0x6e4>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:128
                        latMem[i] = 0;
                        lngMem[i] = 0;
                }
                display.clearDisplay();
    621a:	81 e0       	ldi	r24, 0x01	; 1
    621c:	99 e0       	ldi	r25, 0x09	; 9
    621e:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:129
                index = 0;
    6222:	10 92 49 03 	sts	0x0349, r1	; 0x800349 <LogMenu()::index+0x1>
    6226:	10 92 48 03 	sts	0x0348, r1	; 0x800348 <LogMenu()::index>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:130
                writeMemoryAddress = 10;
    622a:	8a e0       	ldi	r24, 0x0A	; 10
    622c:	90 e0       	ldi	r25, 0x00	; 0
    622e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    6232:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:134
                break;
        }
        decodeGPSNMEA(1000);
}
    6236:	df 91       	pop	r29
    6238:	cf 91       	pop	r28
    623a:	1f 91       	pop	r17
    623c:	0f 91       	pop	r16
    623e:	ff 90       	pop	r15
    6240:	ef 90       	pop	r14
    6242:	df 90       	pop	r13
    6244:	cf 90       	pop	r12
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:133
                display.clearDisplay();
                index = 0;
                writeMemoryAddress = 10;
                break;
        }
        decodeGPSNMEA(1000);
    6246:	0c 94 37 29 	jmp	0x526e	; 0x526e <decodeGPSNMEA(unsigned long) [clone .constprop.6]>

0000624a <InfoMenu()>:
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:1
void InfoMenu(void) {
    624a:	4f 92       	push	r4
    624c:	5f 92       	push	r5
    624e:	6f 92       	push	r6
    6250:	7f 92       	push	r7
    6252:	8f 92       	push	r8
    6254:	9f 92       	push	r9
    6256:	af 92       	push	r10
    6258:	bf 92       	push	r11
    625a:	cf 92       	push	r12
    625c:	df 92       	push	r13
    625e:	ef 92       	push	r14
    6260:	ff 92       	push	r15
    6262:	0f 93       	push	r16
    6264:	1f 93       	push	r17
    6266:	cf 93       	push	r28
    6268:	df 93       	push	r29
    626a:	cd b7       	in	r28, 0x3d	; 61
    626c:	de b7       	in	r29, 0x3e	; 62
    626e:	66 97       	sbiw	r28, 0x16	; 22
    6270:	0f b6       	in	r0, 0x3f	; 63
    6272:	f8 94       	cli
    6274:	de bf       	out	0x3e, r29	; 62
    6276:	0f be       	out	0x3f, r0	; 63
    6278:	cd bf       	out	0x3d, r28	; 61
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:3
  /* Calculate GMT using Longitude */
  int timeZone = getTimeZone(gps.location.lng());
    627a:	86 e2       	ldi	r24, 0x26	; 38
    627c:	98 e0       	ldi	r25, 0x08	; 8
    627e:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    6282:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    6286:	8c 01       	movw	r16, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:6

  /* Show GMT */
  display.setTextSize(1);
    6288:	61 e0       	ldi	r22, 0x01	; 1
    628a:	81 e0       	ldi	r24, 0x01	; 1
    628c:	99 e0       	ldi	r25, 0x09	; 9
    628e:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6292:	aa 24       	eor	r10, r10
    6294:	a3 94       	inc	r10
    6296:	b1 2c       	mov	r11, r1
    6298:	b0 92 14 09 	sts	0x0914, r11	; 0x800914 <display+0x13>
    629c:	a0 92 13 09 	sts	0x0913, r10	; 0x800913 <display+0x12>
    62a0:	b0 92 12 09 	sts	0x0912, r11	; 0x800912 <display+0x11>
    62a4:	a0 92 11 09 	sts	0x0911, r10	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    62a8:	b0 92 0e 09 	sts	0x090E, r11	; 0x80090e <display+0xd>
    62ac:	a0 92 0d 09 	sts	0x090D, r10	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    62b0:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    62b4:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:9
  display.setTextColor(WHITE);
  display.setCursor(1, 1);
  display.print("TIME ZONE");
    62b8:	6e e0       	ldi	r22, 0x0E	; 14
    62ba:	72 e0       	ldi	r23, 0x02	; 2
    62bc:	81 e0       	ldi	r24, 0x01	; 1
    62be:	99 e0       	ldi	r25, 0x09	; 9
    62c0:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    62c4:	81 e4       	ldi	r24, 0x41	; 65
    62c6:	90 e0       	ldi	r25, 0x00	; 0
    62c8:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    62cc:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    62d0:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    62d4:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:13
  display.setCursor(65, 1);

  /* UTC is not TimeZone, GMT is */
  if (timeZone == 0)
    62d8:	01 15       	cp	r16, r1
    62da:	11 05       	cpc	r17, r1
    62dc:	09 f0       	breq	.+2      	; 0x62e0 <InfoMenu()+0x96>
    62de:	61 c1       	rjmp	.+706    	; 0x65a2 <InfoMenu()+0x358>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:14
    display.print("UTC");
    62e0:	68 e1       	ldi	r22, 0x18	; 24
    62e2:	72 e0       	ldi	r23, 0x02	; 2
    62e4:	81 e0       	ldi	r24, 0x01	; 1
    62e6:	99 e0       	ldi	r25, 0x09	; 9
    62e8:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:23
  if (timeZone > 0) {
    display.print('+');
    display.print(timeZone);
  }
  else
    display.print(timeZone);
    62ec:	4a e0       	ldi	r20, 0x0A	; 10
    62ee:	50 e0       	ldi	r21, 0x00	; 0
    62f0:	b8 01       	movw	r22, r16
    62f2:	81 e0       	ldi	r24, 0x01	; 1
    62f4:	99 e0       	ldi	r25, 0x09	; 9
    62f6:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:26

  /* Calculate Sunrise and Sunset Time */
  Dusk2Dawn currentCoordinate(gps.location.lat(), gps.location.lng(), timeZone);
    62fa:	86 e2       	ldi	r24, 0x26	; 38
    62fc:	98 e0       	ldi	r25, 0x08	; 8
    62fe:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    6302:	2b 01       	movw	r4, r22
    6304:	3c 01       	movw	r6, r24
    6306:	86 e2       	ldi	r24, 0x26	; 38
    6308:	98 e0       	ldi	r25, 0x08	; 8
    630a:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
    630e:	4b 01       	movw	r8, r22
    6310:	5c 01       	movw	r10, r24
    6312:	b8 01       	movw	r22, r16
    6314:	11 0f       	add	r17, r17
    6316:	88 0b       	sbc	r24, r24
    6318:	99 0b       	sbc	r25, r25
    631a:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    631e:	6b 01       	movw	r12, r22
    6320:	7c 01       	movw	r14, r24
    6322:	93 01       	movw	r18, r6
    6324:	82 01       	movw	r16, r4
    6326:	b5 01       	movw	r22, r10
    6328:	a4 01       	movw	r20, r8
    632a:	ce 01       	movw	r24, r28
    632c:	01 96       	adiw	r24, 0x01	; 1
    632e:	0e 94 28 57 	call	0xae50	; 0xae50 <Dusk2Dawn::Dusk2Dawn(float, float, float)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:27
  int sunRise = currentCoordinate.sunrise(gps.date.year(), gps.date.month(), gps.date.day(), false); /* No DST */
    6332:	88 e4       	ldi	r24, 0x48	; 72
    6334:	98 e0       	ldi	r25, 0x08	; 8
    6336:	0e 94 fc 67 	call	0xcff8	; 0xcff8 <TinyGPSDate::day()>
    633a:	08 2f       	mov	r16, r24
    633c:	88 e4       	ldi	r24, 0x48	; 72
    633e:	98 e0       	ldi	r25, 0x08	; 8
    6340:	0e 94 dd 67 	call	0xcfba	; 0xcfba <TinyGPSDate::month()>
    6344:	18 2f       	mov	r17, r24
    6346:	88 e4       	ldi	r24, 0x48	; 72
    6348:	98 e0       	ldi	r25, 0x08	; 8
    634a:	0e 94 cd 67 	call	0xcf9a	; 0xcf9a <TinyGPSDate::year()>
    634e:	20 2f       	mov	r18, r16
    6350:	30 e0       	ldi	r19, 0x00	; 0
    6352:	41 2f       	mov	r20, r17
    6354:	50 e0       	ldi	r21, 0x00	; 0
    6356:	00 e0       	ldi	r16, 0x00	; 0
    6358:	bc 01       	movw	r22, r24
    635a:	ce 01       	movw	r24, r28
    635c:	01 96       	adiw	r24, 0x01	; 1
    635e:	0e 94 6f 5d 	call	0xbade	; 0xbade <Dusk2Dawn::sunrise(int, int, int, bool)>
    6362:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:28
  int sunSet = currentCoordinate.sunset(gps.date.year(), gps.date.month(), gps.date.day(), false); /* No DST */
    6364:	88 e4       	ldi	r24, 0x48	; 72
    6366:	98 e0       	ldi	r25, 0x08	; 8
    6368:	0e 94 fc 67 	call	0xcff8	; 0xcff8 <TinyGPSDate::day()>
    636c:	08 2f       	mov	r16, r24
    636e:	88 e4       	ldi	r24, 0x48	; 72
    6370:	98 e0       	ldi	r25, 0x08	; 8
    6372:	0e 94 dd 67 	call	0xcfba	; 0xcfba <TinyGPSDate::month()>
    6376:	18 2f       	mov	r17, r24
    6378:	88 e4       	ldi	r24, 0x48	; 72
    637a:	98 e0       	ldi	r25, 0x08	; 8
    637c:	0e 94 cd 67 	call	0xcf9a	; 0xcf9a <TinyGPSDate::year()>
    6380:	20 2f       	mov	r18, r16
    6382:	30 e0       	ldi	r19, 0x00	; 0
    6384:	41 2f       	mov	r20, r17
    6386:	50 e0       	ldi	r21, 0x00	; 0
    6388:	00 e0       	ldi	r16, 0x00	; 0
    638a:	bc 01       	movw	r22, r24
    638c:	ce 01       	movw	r24, r28
    638e:	01 96       	adiw	r24, 0x01	; 1
    6390:	0e 94 7d 5d 	call	0xbafa	; 0xbafa <Dusk2Dawn::sunset(int, int, int, bool)>
    6394:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:32

  /* Sun Rise Time */
  char sunRiseTime[6];
  Dusk2Dawn::min2str(sunRiseTime, sunRise);
    6396:	b5 01       	movw	r22, r10
    6398:	ce 01       	movw	r24, r28
    639a:	41 96       	adiw	r24, 0x11	; 17
    639c:	0e 94 ae 5d 	call	0xbb5c	; 0xbb5c <Dusk2Dawn::min2str(char*, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    63a0:	88 24       	eor	r8, r8
    63a2:	83 94       	inc	r8
    63a4:	91 2c       	mov	r9, r1
    63a6:	90 92 0e 09 	sts	0x090E, r9	; 0x80090e <display+0xd>
    63aa:	80 92 0d 09 	sts	0x090D, r8	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    63ae:	0a e0       	ldi	r16, 0x0A	; 10
    63b0:	10 e0       	ldi	r17, 0x00	; 0
    63b2:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    63b6:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:33
  display.setCursor(1, 10);  display.print(F("SUNRISE"));
    63ba:	6d ef       	ldi	r22, 0xFD	; 253
    63bc:	72 e0       	ldi	r23, 0x02	; 2
    63be:	81 e0       	ldi	r24, 0x01	; 1
    63c0:	99 e0       	ldi	r25, 0x09	; 9
    63c2:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    63c6:	90 e4       	ldi	r25, 0x40	; 64
    63c8:	a9 2e       	mov	r10, r25
    63ca:	b1 2c       	mov	r11, r1
    63cc:	b0 92 0e 09 	sts	0x090E, r11	; 0x80090e <display+0xd>
    63d0:	a0 92 0d 09 	sts	0x090D, r10	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    63d4:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    63d8:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:34
  display.setCursor(64, 10); display.print(sunRiseTime);
    63dc:	be 01       	movw	r22, r28
    63de:	6f 5e       	subi	r22, 0xEF	; 239
    63e0:	7f 4f       	sbci	r23, 0xFF	; 255
    63e2:	81 e0       	ldi	r24, 0x01	; 1
    63e4:	99 e0       	ldi	r25, 0x09	; 9
    63e6:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:38

  /* Sunset Time */
  char sunSetTime[6];
  Dusk2Dawn::min2str(sunSetTime, sunSet);
    63ea:	b3 01       	movw	r22, r6
    63ec:	ce 01       	movw	r24, r28
    63ee:	0b 96       	adiw	r24, 0x0b	; 11
    63f0:	0e 94 ae 5d 	call	0xbb5c	; 0xbb5c <Dusk2Dawn::min2str(char*, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    63f4:	90 92 0e 09 	sts	0x090E, r9	; 0x80090e <display+0xd>
    63f8:	80 92 0d 09 	sts	0x090D, r8	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    63fc:	04 e1       	ldi	r16, 0x14	; 20
    63fe:	10 e0       	ldi	r17, 0x00	; 0
    6400:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    6404:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:39
  display.setCursor(1, 20);  display.print(F("SUNSET"));
    6408:	66 ef       	ldi	r22, 0xF6	; 246
    640a:	72 e0       	ldi	r23, 0x02	; 2
    640c:	81 e0       	ldi	r24, 0x01	; 1
    640e:	99 e0       	ldi	r25, 0x09	; 9
    6410:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6414:	b0 92 0e 09 	sts	0x090E, r11	; 0x80090e <display+0xd>
    6418:	a0 92 0d 09 	sts	0x090D, r10	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    641c:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    6420:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:40
  display.setCursor(64, 20); display.print(sunSetTime);
    6424:	be 01       	movw	r22, r28
    6426:	65 5f       	subi	r22, 0xF5	; 245
    6428:	7f 4f       	sbci	r23, 0xFF	; 255
    642a:	81 e0       	ldi	r24, 0x01	; 1
    642c:	99 e0       	ldi	r25, 0x09	; 9
    642e:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:42

  display.drawBitmap(108, 12, sunrise_sunset_icon, 20, 13, 1); /* Draw Sunrise Sunset Icon */
    6432:	cc 24       	eor	r12, r12
    6434:	c3 94       	inc	r12
    6436:	d1 2c       	mov	r13, r1
    6438:	3d e0       	ldi	r19, 0x0D	; 13
    643a:	e3 2e       	mov	r14, r19
    643c:	f1 2c       	mov	r15, r1
    643e:	2a ef       	ldi	r18, 0xFA	; 250
    6440:	33 e1       	ldi	r19, 0x13	; 19
    6442:	4c e0       	ldi	r20, 0x0C	; 12
    6444:	50 e0       	ldi	r21, 0x00	; 0
    6446:	6c e6       	ldi	r22, 0x6C	; 108
    6448:	70 e0       	ldi	r23, 0x00	; 0
    644a:	81 e0       	ldi	r24, 0x01	; 1
    644c:	99 e0       	ldi	r25, 0x09	; 9
    644e:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:45

  /* Hardware Info */
  display.drawLine(61, 1, 61, 63, WHITE);
    6452:	ee 24       	eor	r14, r14
    6454:	e3 94       	inc	r14
    6456:	f1 2c       	mov	r15, r1
    6458:	0f e3       	ldi	r16, 0x3F	; 63
    645a:	10 e0       	ldi	r17, 0x00	; 0
    645c:	2d e3       	ldi	r18, 0x3D	; 61
    645e:	30 e0       	ldi	r19, 0x00	; 0
    6460:	41 e0       	ldi	r20, 0x01	; 1
    6462:	50 e0       	ldi	r21, 0x00	; 0
    6464:	6d e3       	ldi	r22, 0x3D	; 61
    6466:	70 e0       	ldi	r23, 0x00	; 0
    6468:	81 e0       	ldi	r24, 0x01	; 1
    646a:	99 e0       	ldi	r25, 0x09	; 9
    646c:	0e 94 a7 43 	call	0x874e	; 0x874e <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6470:	90 92 0e 09 	sts	0x090E, r9	; 0x80090e <display+0xd>
    6474:	80 92 0d 09 	sts	0x090D, r8	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6478:	0d e1       	ldi	r16, 0x1D	; 29
    647a:	10 e0       	ldi	r17, 0x00	; 0
    647c:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    6480:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:46
  display.setCursor(1, 29);  display.print(F("FLASH"));
    6484:	60 ef       	ldi	r22, 0xF0	; 240
    6486:	72 e0       	ldi	r23, 0x02	; 2
    6488:	81 e0       	ldi	r24, 0x01	; 1
    648a:	99 e0       	ldi	r25, 0x09	; 9
    648c:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6490:	b0 92 0e 09 	sts	0x090E, r11	; 0x80090e <display+0xd>
    6494:	a0 92 0d 09 	sts	0x090D, r10	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6498:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    649c:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:47
  display.setCursor(64, 29); display.print(F("47%"));
    64a0:	6c ee       	ldi	r22, 0xEC	; 236
    64a2:	72 e0       	ldi	r23, 0x02	; 2
    64a4:	81 e0       	ldi	r24, 0x01	; 1
    64a6:	99 e0       	ldi	r25, 0x09	; 9
    64a8:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    64ac:	90 92 0e 09 	sts	0x090E, r9	; 0x80090e <display+0xd>
    64b0:	80 92 0d 09 	sts	0x090D, r8	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    64b4:	06 e2       	ldi	r16, 0x26	; 38
    64b6:	10 e0       	ldi	r17, 0x00	; 0
    64b8:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    64bc:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:48
  display.setCursor(1, 38);  display.print(F("RAM"));
    64c0:	68 ee       	ldi	r22, 0xE8	; 232
    64c2:	72 e0       	ldi	r23, 0x02	; 2
    64c4:	81 e0       	ldi	r24, 0x01	; 1
    64c6:	99 e0       	ldi	r25, 0x09	; 9
    64c8:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    64cc:	b0 92 0e 09 	sts	0x090E, r11	; 0x80090e <display+0xd>
    64d0:	a0 92 0d 09 	sts	0x090D, r10	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    64d4:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    64d8:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:49
  display.setCursor(64, 38); display.print(F("15%"));
    64dc:	64 ee       	ldi	r22, 0xE4	; 228
    64de:	72 e0       	ldi	r23, 0x02	; 2
    64e0:	81 e0       	ldi	r24, 0x01	; 1
    64e2:	99 e0       	ldi	r25, 0x09	; 9
    64e4:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    64e8:	90 92 0e 09 	sts	0x090E, r9	; 0x80090e <display+0xd>
    64ec:	80 92 0d 09 	sts	0x090D, r8	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    64f0:	0f e2       	ldi	r16, 0x2F	; 47
    64f2:	10 e0       	ldi	r17, 0x00	; 0
    64f4:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    64f8:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:50
  display.setCursor(1, 47);  display.print(F("EEPROM"));
    64fc:	6d ed       	ldi	r22, 0xDD	; 221
    64fe:	72 e0       	ldi	r23, 0x02	; 2
    6500:	81 e0       	ldi	r24, 0x01	; 1
    6502:	99 e0       	ldi	r25, 0x09	; 9
    6504:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6508:	b0 92 0e 09 	sts	0x090E, r11	; 0x80090e <display+0xd>
    650c:	a0 92 0d 09 	sts	0x090D, r10	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6510:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    6514:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:51
  display.setCursor(64, 47); display.print(F("1.70%"));
    6518:	67 ed       	ldi	r22, 0xD7	; 215
    651a:	72 e0       	ldi	r23, 0x02	; 2
    651c:	81 e0       	ldi	r24, 0x01	; 1
    651e:	99 e0       	ldi	r25, 0x09	; 9
    6520:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6524:	90 92 0e 09 	sts	0x090E, r9	; 0x80090e <display+0xd>
    6528:	80 92 0d 09 	sts	0x090D, r8	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    652c:	08 e3       	ldi	r16, 0x38	; 56
    652e:	10 e0       	ldi	r17, 0x00	; 0
    6530:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    6534:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:52
  display.setCursor(1, 56);  display.print(F("VERSION"));
    6538:	6f ec       	ldi	r22, 0xCF	; 207
    653a:	72 e0       	ldi	r23, 0x02	; 2
    653c:	81 e0       	ldi	r24, 0x01	; 1
    653e:	99 e0       	ldi	r25, 0x09	; 9
    6540:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6544:	b0 92 0e 09 	sts	0x090E, r11	; 0x80090e <display+0xd>
    6548:	a0 92 0d 09 	sts	0x090D, r10	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    654c:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    6550:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:53
  display.setCursor(64, 56); display.print(F("15.032022"));
    6554:	65 ec       	ldi	r22, 0xC5	; 197
    6556:	72 e0       	ldi	r23, 0x02	; 2
    6558:	81 e0       	ldi	r24, 0x01	; 1
    655a:	99 e0       	ldi	r25, 0x09	; 9
    655c:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:54
  display.display();
    6560:	81 e0       	ldi	r24, 0x01	; 1
    6562:	99 e0       	ldi	r25, 0x09	; 9
    6564:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:55
  display.clearDisplay();
    6568:	81 e0       	ldi	r24, 0x01	; 1
    656a:	99 e0       	ldi	r25, 0x09	; 9
    656c:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:58

  // Read and Decode GPS Data
  decodeGPSNMEA(1000);
    6570:	0e 94 37 29 	call	0x526e	; 0x526e <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:59
}
    6574:	66 96       	adiw	r28, 0x16	; 22
    6576:	0f b6       	in	r0, 0x3f	; 63
    6578:	f8 94       	cli
    657a:	de bf       	out	0x3e, r29	; 62
    657c:	0f be       	out	0x3f, r0	; 63
    657e:	cd bf       	out	0x3d, r28	; 61
    6580:	df 91       	pop	r29
    6582:	cf 91       	pop	r28
    6584:	1f 91       	pop	r17
    6586:	0f 91       	pop	r16
    6588:	ff 90       	pop	r15
    658a:	ef 90       	pop	r14
    658c:	df 90       	pop	r13
    658e:	cf 90       	pop	r12
    6590:	bf 90       	pop	r11
    6592:	af 90       	pop	r10
    6594:	9f 90       	pop	r9
    6596:	8f 90       	pop	r8
    6598:	7f 90       	pop	r7
    659a:	6f 90       	pop	r6
    659c:	5f 90       	pop	r5
    659e:	4f 90       	pop	r4
    65a0:	08 95       	ret
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:16

  /* UTC is not TimeZone, GMT is */
  if (timeZone == 0)
    display.print("UTC");
  else
    display.print("GMT");
    65a2:	6c e1       	ldi	r22, 0x1C	; 28
    65a4:	72 e0       	ldi	r23, 0x02	; 2
    65a6:	81 e0       	ldi	r24, 0x01	; 1
    65a8:	99 e0       	ldi	r25, 0x09	; 9
    65aa:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:18

  if (timeZone > 0) {
    65ae:	10 16       	cp	r1, r16
    65b0:	11 06       	cpc	r1, r17
    65b2:	0c f0       	brlt	.+2      	; 0x65b6 <InfoMenu()+0x36c>
    65b4:	9b ce       	rjmp	.-714    	; 0x62ec <InfoMenu()+0xa2>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:19
    display.print('+');
    65b6:	6b e2       	ldi	r22, 0x2B	; 43
    65b8:	81 e0       	ldi	r24, 0x01	; 1
    65ba:	99 e0       	ldi	r25, 0x09	; 9
    65bc:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    65c0:	95 ce       	rjmp	.-726    	; 0x62ec <InfoMenu()+0xa2>

000065c2 <receptionSignalGraphMenu()>:
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:196
                while(!digitalRead(B_Pin))
                        receptionSignalGraphMenu();
        }
}

void receptionSignalGraphMenu(void) {
    65c2:	af 92       	push	r10
    65c4:	bf 92       	push	r11
    65c6:	cf 92       	push	r12
    65c8:	df 92       	push	r13
    65ca:	ef 92       	push	r14
    65cc:	ff 92       	push	r15
    65ce:	0f 93       	push	r16
    65d0:	1f 93       	push	r17
    65d2:	cf 93       	push	r28
    65d4:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:198
        /* Show Icon once when press and hold */
        if (!digitalRead(A_Pin)) logic.newState = true;
    65d6:	82 e0       	ldi	r24, 0x02	; 2
    65d8:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    65dc:	89 2b       	or	r24, r25
    65de:	19 f4       	brne	.+6      	; 0x65e6 <receptionSignalGraphMenu()+0x24>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:198 (discriminator 1)
    65e0:	81 e0       	ldi	r24, 0x01	; 1
    65e2:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <logic+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:199
        if (logic.newState == logic.lastState) menu.newTabFlag = true;
    65e6:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <logic+0x1>
    65ea:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    65ee:	98 13       	cpse	r25, r24
    65f0:	03 c0       	rjmp	.+6      	; 0x65f8 <receptionSignalGraphMenu()+0x36>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:199 (discriminator 1)
    65f2:	81 e0       	ldi	r24, 0x01	; 1
    65f4:	80 93 4d 09 	sts	0x094D, r24	; 0x80094d <menu+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:201

        if (menu.newTabFlag) {
    65f8:	80 91 4d 09 	lds	r24, 0x094D	; 0x80094d <menu+0x7>
    65fc:	88 23       	and	r24, r24
    65fe:	09 f4       	brne	.+2      	; 0x6602 <receptionSignalGraphMenu()+0x40>
    6600:	49 c0       	rjmp	.+146    	; 0x6694 <receptionSignalGraphMenu()+0xd2>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:202
                display.setTextSize(1);
    6602:	61 e0       	ldi	r22, 0x01	; 1
    6604:	81 e0       	ldi	r24, 0x01	; 1
    6606:	99 e0       	ldi	r25, 0x09	; 9
    6608:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    660c:	81 e0       	ldi	r24, 0x01	; 1
    660e:	90 e0       	ldi	r25, 0x00	; 0
    6610:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <display+0x13>
    6614:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <display+0x12>
    6618:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <display+0x11>
    661c:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <display+0x10>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:204
                display.setTextColor(WHITE);
                display.clearDisplay();
    6620:	81 e0       	ldi	r24, 0x01	; 1
    6622:	99 e0       	ldi	r25, 0x09	; 9
    6624:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:205
                display.drawBitmap(40, 0, reception_signal_icon, 54, 54, 1);
    6628:	cc 24       	eor	r12, r12
    662a:	c3 94       	inc	r12
    662c:	d1 2c       	mov	r13, r1
    662e:	76 e3       	ldi	r23, 0x36	; 54
    6630:	e7 2e       	mov	r14, r23
    6632:	f1 2c       	mov	r15, r1
    6634:	06 e3       	ldi	r16, 0x36	; 54
    6636:	10 e0       	ldi	r17, 0x00	; 0
    6638:	28 ea       	ldi	r18, 0xA8	; 168
    663a:	3f e0       	ldi	r19, 0x0F	; 15
    663c:	50 e0       	ldi	r21, 0x00	; 0
    663e:	40 e0       	ldi	r20, 0x00	; 0
    6640:	68 e2       	ldi	r22, 0x28	; 40
    6642:	70 e0       	ldi	r23, 0x00	; 0
    6644:	81 e0       	ldi	r24, 0x01	; 1
    6646:	99 e0       	ldi	r25, 0x09	; 9
    6648:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    664c:	80 e1       	ldi	r24, 0x10	; 16
    664e:	90 e0       	ldi	r25, 0x00	; 0
    6650:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    6654:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6658:	89 e3       	ldi	r24, 0x39	; 57
    665a:	90 e0       	ldi	r25, 0x00	; 0
    665c:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    6660:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:207
                display.setCursor(16, 57);
                display.print(F("RECEPTION SIGNAL"));
    6664:	62 e4       	ldi	r22, 0x42	; 66
    6666:	73 e0       	ldi	r23, 0x03	; 3
    6668:	81 e0       	ldi	r24, 0x01	; 1
    666a:	99 e0       	ldi	r25, 0x09	; 9
    666c:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:208
                display.display();
    6670:	81 e0       	ldi	r24, 0x01	; 1
    6672:	99 e0       	ldi	r25, 0x09	; 9
    6674:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:209
                delay(1000);
    6678:	68 ee       	ldi	r22, 0xE8	; 232
    667a:	73 e0       	ldi	r23, 0x03	; 3
    667c:	80 e0       	ldi	r24, 0x00	; 0
    667e:	90 e0       	ldi	r25, 0x00	; 0
    6680:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:210
                display.clearDisplay();
    6684:	81 e0       	ldi	r24, 0x01	; 1
    6686:	99 e0       	ldi	r25, 0x09	; 9
    6688:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:211
                menu.newTabFlag = false;
    668c:	10 92 4d 09 	sts	0x094D, r1	; 0x80094d <menu+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:212
                logic.lastState = false;
    6690:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:215
        }

        display.clearDisplay();
    6694:	81 e0       	ldi	r24, 0x01	; 1
    6696:	99 e0       	ldi	r25, 0x09	; 9
    6698:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:216
        display.fillRect(0, 0, 128, 9, WHITE);
    669c:	ee 24       	eor	r14, r14
    669e:	e3 94       	inc	r14
    66a0:	f1 2c       	mov	r15, r1
    66a2:	09 e0       	ldi	r16, 0x09	; 9
    66a4:	10 e0       	ldi	r17, 0x00	; 0
    66a6:	20 e8       	ldi	r18, 0x80	; 128
    66a8:	30 e0       	ldi	r19, 0x00	; 0
    66aa:	50 e0       	ldi	r21, 0x00	; 0
    66ac:	40 e0       	ldi	r20, 0x00	; 0
    66ae:	70 e0       	ldi	r23, 0x00	; 0
    66b0:	60 e0       	ldi	r22, 0x00	; 0
    66b2:	81 e0       	ldi	r24, 0x01	; 1
    66b4:	99 e0       	ldi	r25, 0x09	; 9
    66b6:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:218

        display.setTextSize(1);
    66ba:	61 e0       	ldi	r22, 0x01	; 1
    66bc:	81 e0       	ldi	r24, 0x01	; 1
    66be:	99 e0       	ldi	r25, 0x09	; 9
    66c0:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    66c4:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    66c8:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    66cc:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    66d0:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    66d4:	83 e1       	ldi	r24, 0x13	; 19
    66d6:	90 e0       	ldi	r25, 0x00	; 0
    66d8:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    66dc:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    66e0:	c1 e0       	ldi	r28, 0x01	; 1
    66e2:	d0 e0       	ldi	r29, 0x00	; 0
    66e4:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    66e8:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:221
        display.setTextColor(BLACK);
        display.setCursor(19, 1);
        display.print(F("CONNECTION INFO"));
    66ec:	62 e3       	ldi	r22, 0x32	; 50
    66ee:	73 e0       	ldi	r23, 0x03	; 3
    66f0:	81 e0       	ldi	r24, 0x01	; 1
    66f2:	99 e0       	ldi	r25, 0x09	; 9
    66f4:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    66f8:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    66fc:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    6700:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    6704:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_ZNK15TinyGPSLocation3ageEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:59
{
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
    6708:	80 91 26 08 	lds	r24, 0x0826	; 0x800826 <gps>
    670c:	88 23       	and	r24, r24
    670e:	09 f4       	brne	.+2      	; 0x6712 <receptionSignalGraphMenu()+0x150>
    6710:	2f c1       	rjmp	.+606    	; 0x6970 <receptionSignalGraphMenu()+0x3ae>
    6712:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    6716:	00 91 44 08 	lds	r16, 0x0844	; 0x800844 <gps+0x1e>
    671a:	10 91 45 08 	lds	r17, 0x0845	; 0x800845 <gps+0x1f>
    671e:	20 91 46 08 	lds	r18, 0x0846	; 0x800846 <gps+0x20>
    6722:	30 91 47 08 	lds	r19, 0x0847	; 0x800847 <gps+0x21>
    6726:	60 1b       	sub	r22, r16
    6728:	71 0b       	sbc	r23, r17
    672a:	82 0b       	sbc	r24, r18
    672c:	93 0b       	sbc	r25, r19
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:226

        display.setTextColor(WHITE);

        /* Do the Signal Reception Update Interval Calculation */
        gps_var.reception_signal_amplitude = map(gps.location.age(), 0, 1000, 1, 127);
    672e:	1f 92       	push	r1
    6730:	1f 92       	push	r1
    6732:	1f 92       	push	r1
    6734:	cf e7       	ldi	r28, 0x7F	; 127
    6736:	cf 93       	push	r28
    6738:	a1 2c       	mov	r10, r1
    673a:	b1 2c       	mov	r11, r1
    673c:	65 01       	movw	r12, r10
    673e:	a3 94       	inc	r10
    6740:	18 ee       	ldi	r17, 0xE8	; 232
    6742:	e1 2e       	mov	r14, r17
    6744:	13 e0       	ldi	r17, 0x03	; 3
    6746:	f1 2e       	mov	r15, r17
    6748:	00 e0       	ldi	r16, 0x00	; 0
    674a:	10 e0       	ldi	r17, 0x00	; 0
    674c:	20 e0       	ldi	r18, 0x00	; 0
    674e:	30 e0       	ldi	r19, 0x00	; 0
    6750:	a9 01       	movw	r20, r18
    6752:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    6756:	70 93 35 01 	sts	0x0135, r23	; 0x800135 <gps_var+0x17>
    675a:	60 93 34 01 	sts	0x0134, r22	; 0x800134 <gps_var+0x16>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    675e:	10 92 9d 08 	sts	0x089D, r1	; 0x80089d <gps+0x77>
_ZN11TinyGPSHDOP4hdopEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:189
   double feet()         { return _GPS_FEET_PER_METER * value() / 100.0; }
};

struct TinyGPSHDOP : TinyGPSDecimal
{
   double hdop() { return value() / 100.0; }
    6762:	60 91 a2 08 	lds	r22, 0x08A2	; 0x8008a2 <gps+0x7c>
    6766:	70 91 a3 08 	lds	r23, 0x08A3	; 0x8008a3 <gps+0x7d>
    676a:	80 91 a4 08 	lds	r24, 0x08A4	; 0x8008a4 <gps+0x7e>
    676e:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <gps+0x7f>
    6772:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    6776:	20 e0       	ldi	r18, 0x00	; 0
    6778:	30 e0       	ldi	r19, 0x00	; 0
    677a:	48 ec       	ldi	r20, 0xC8	; 200
    677c:	52 e4       	ldi	r21, 0x42	; 66
    677e:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:228
        /* Do the HDOP Calculation */
        gps_var.hdop_value = map(gps.hdop.hdop(), 0, 100, 1, 127);
    6782:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    6786:	1f 92       	push	r1
    6788:	1f 92       	push	r1
    678a:	1f 92       	push	r1
    678c:	cf 93       	push	r28
    678e:	14 e6       	ldi	r17, 0x64	; 100
    6790:	e1 2e       	mov	r14, r17
    6792:	f1 2c       	mov	r15, r1
    6794:	00 e0       	ldi	r16, 0x00	; 0
    6796:	10 e0       	ldi	r17, 0x00	; 0
    6798:	20 e0       	ldi	r18, 0x00	; 0
    679a:	30 e0       	ldi	r19, 0x00	; 0
    679c:	a9 01       	movw	r20, r18
    679e:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    67a2:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <gps_var+0x19>
    67a6:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <gps_var+0x18>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    67aa:	81 e0       	ldi	r24, 0x01	; 1
    67ac:	90 e0       	ldi	r25, 0x00	; 0
    67ae:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    67b2:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    67b6:	8f e0       	ldi	r24, 0x0F	; 15
    67b8:	90 e0       	ldi	r25, 0x00	; 0
    67ba:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    67be:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:232

        /* Reception Signal Update */
        display.setCursor(1, 15);
        display.print(F("UPD INTERVAL: "));
    67c2:	63 e2       	ldi	r22, 0x23	; 35
    67c4:	73 e0       	ldi	r23, 0x03	; 3
    67c6:	81 e0       	ldi	r24, 0x01	; 1
    67c8:	99 e0       	ldi	r25, 0x09	; 9
    67ca:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZNK15TinyGPSLocation3ageEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:59
{
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
    67ce:	8d b7       	in	r24, 0x3d	; 61
    67d0:	9e b7       	in	r25, 0x3e	; 62
    67d2:	08 96       	adiw	r24, 0x08	; 8
    67d4:	0f b6       	in	r0, 0x3f	; 63
    67d6:	f8 94       	cli
    67d8:	9e bf       	out	0x3e, r25	; 62
    67da:	0f be       	out	0x3f, r0	; 63
    67dc:	8d bf       	out	0x3d, r24	; 61
    67de:	80 91 26 08 	lds	r24, 0x0826	; 0x800826 <gps>
    67e2:	4f ef       	ldi	r20, 0xFF	; 255
    67e4:	5f ef       	ldi	r21, 0xFF	; 255
    67e6:	ba 01       	movw	r22, r20
    67e8:	88 23       	and	r24, r24
    67ea:	81 f0       	breq	.+32     	; 0x680c <receptionSignalGraphMenu()+0x24a>
    67ec:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    67f0:	00 91 44 08 	lds	r16, 0x0844	; 0x800844 <gps+0x1e>
    67f4:	10 91 45 08 	lds	r17, 0x0845	; 0x800845 <gps+0x1f>
    67f8:	20 91 46 08 	lds	r18, 0x0846	; 0x800846 <gps+0x20>
    67fc:	30 91 47 08 	lds	r19, 0x0847	; 0x800847 <gps+0x21>
    6800:	ab 01       	movw	r20, r22
    6802:	bc 01       	movw	r22, r24
    6804:	40 1b       	sub	r20, r16
    6806:	51 0b       	sbc	r21, r17
    6808:	62 0b       	sbc	r22, r18
    680a:	73 0b       	sbc	r23, r19
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:233
        display.print(gps.location.age());
    680c:	2a e0       	ldi	r18, 0x0A	; 10
    680e:	30 e0       	ldi	r19, 0x00	; 0
    6810:	81 e0       	ldi	r24, 0x01	; 1
    6812:	99 e0       	ldi	r25, 0x09	; 9
    6814:	0e 94 03 6f 	call	0xde06	; 0xde06 <Print::print(unsigned long, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:234
        display.print(F("ms"));
    6818:	60 e2       	ldi	r22, 0x20	; 32
    681a:	73 e0       	ldi	r23, 0x03	; 3
    681c:	81 e0       	ldi	r24, 0x01	; 1
    681e:	99 e0       	ldi	r25, 0x09	; 9
    6820:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:235
        display.fillRect(0, 25, gps_var.reception_signal_amplitude, 5, WHITE);
    6824:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <gps_var+0x16>
    6828:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <gps_var+0x17>
    682c:	ee 24       	eor	r14, r14
    682e:	e3 94       	inc	r14
    6830:	f1 2c       	mov	r15, r1
    6832:	05 e0       	ldi	r16, 0x05	; 5
    6834:	10 e0       	ldi	r17, 0x00	; 0
    6836:	49 e1       	ldi	r20, 0x19	; 25
    6838:	50 e0       	ldi	r21, 0x00	; 0
    683a:	70 e0       	ldi	r23, 0x00	; 0
    683c:	60 e0       	ldi	r22, 0x00	; 0
    683e:	81 e0       	ldi	r24, 0x01	; 1
    6840:	99 e0       	ldi	r25, 0x09	; 9
    6842:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6846:	c1 e0       	ldi	r28, 0x01	; 1
    6848:	d0 e0       	ldi	r29, 0x00	; 0
    684a:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    684e:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6852:	83 e2       	ldi	r24, 0x23	; 35
    6854:	90 e0       	ldi	r25, 0x00	; 0
    6856:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    685a:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:238

        display.setCursor(1, 35);
        display.print(F("HDOP VALUE: "));
    685e:	63 e1       	ldi	r22, 0x13	; 19
    6860:	73 e0       	ldi	r23, 0x03	; 3
    6862:	81 e0       	ldi	r24, 0x01	; 1
    6864:	99 e0       	ldi	r25, 0x09	; 9
    6866:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    686a:	10 92 9d 08 	sts	0x089D, r1	; 0x80089d <gps+0x77>
_ZN11TinyGPSHDOP4hdopEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:189
   double feet()         { return _GPS_FEET_PER_METER * value() / 100.0; }
};

struct TinyGPSHDOP : TinyGPSDecimal
{
   double hdop() { return value() / 100.0; }
    686e:	60 91 a2 08 	lds	r22, 0x08A2	; 0x8008a2 <gps+0x7c>
    6872:	70 91 a3 08 	lds	r23, 0x08A3	; 0x8008a3 <gps+0x7d>
    6876:	80 91 a4 08 	lds	r24, 0x08A4	; 0x8008a4 <gps+0x7e>
    687a:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <gps+0x7f>
    687e:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    6882:	20 e0       	ldi	r18, 0x00	; 0
    6884:	30 e0       	ldi	r19, 0x00	; 0
    6886:	48 ec       	ldi	r20, 0xC8	; 200
    6888:	52 e4       	ldi	r21, 0x42	; 66
    688a:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    688e:	ab 01       	movw	r20, r22
    6890:	bc 01       	movw	r22, r24
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:239
        display.print(gps.hdop.hdop());
    6892:	22 e0       	ldi	r18, 0x02	; 2
    6894:	30 e0       	ldi	r19, 0x00	; 0
    6896:	81 e0       	ldi	r24, 0x01	; 1
    6898:	99 e0       	ldi	r25, 0x09	; 9
    689a:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:240
        display.fillRect(0, 45, gps_var.hdop_value, 5, WHITE);
    689e:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <gps_var+0x18>
    68a2:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <gps_var+0x19>
    68a6:	4d e2       	ldi	r20, 0x2D	; 45
    68a8:	50 e0       	ldi	r21, 0x00	; 0
    68aa:	70 e0       	ldi	r23, 0x00	; 0
    68ac:	60 e0       	ldi	r22, 0x00	; 0
    68ae:	81 e0       	ldi	r24, 0x01	; 1
    68b0:	99 e0       	ldi	r25, 0x09	; 9
    68b2:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    68b6:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    68ba:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    68be:	85 e3       	ldi	r24, 0x35	; 53
    68c0:	90 e0       	ldi	r25, 0x00	; 0
    68c2:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    68c6:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:243

        display.setCursor(1, 53);
        display.print(F("GPS STARTUP: "));
    68ca:	65 e0       	ldi	r22, 0x05	; 5
    68cc:	73 e0       	ldi	r23, 0x03	; 3
    68ce:	81 e0       	ldi	r24, 0x01	; 1
    68d0:	99 e0       	ldi	r25, 0x09	; 9
    68d2:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:245
        /* Convert ms -> s, Minus 7500ms Delay on Startup */
        if (gps_var.satellite_start_up_time == 0)
    68d6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <gps_var>
    68da:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <gps_var+0x1>
    68de:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <gps_var+0x2>
    68e2:	b0 91 21 01 	lds	r27, 0x0121	; 0x800121 <gps_var+0x3>
    68e6:	89 2b       	or	r24, r25
    68e8:	8a 2b       	or	r24, r26
    68ea:	8b 2b       	or	r24, r27
    68ec:	61 f4       	brne	.+24     	; 0x6906 <receptionSignalGraphMenu()+0x344>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:246
                gps_var.satellite_start_up_time = 7500;
    68ee:	8c e4       	ldi	r24, 0x4C	; 76
    68f0:	9d e1       	ldi	r25, 0x1D	; 29
    68f2:	a0 e0       	ldi	r26, 0x00	; 0
    68f4:	b0 e0       	ldi	r27, 0x00	; 0
    68f6:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <gps_var>
    68fa:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <gps_var+0x1>
    68fe:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <gps_var+0x2>
    6902:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <gps_var+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:247
        display.print(((gps_var.satellite_start_up_time - 7500) / 1000.0F), 2);
    6906:	60 91 1e 01 	lds	r22, 0x011E	; 0x80011e <gps_var>
    690a:	70 91 1f 01 	lds	r23, 0x011F	; 0x80011f <gps_var+0x1>
    690e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <gps_var+0x2>
    6912:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <gps_var+0x3>
    6916:	6c 54       	subi	r22, 0x4C	; 76
    6918:	7d 41       	sbci	r23, 0x1D	; 29
    691a:	81 09       	sbc	r24, r1
    691c:	91 09       	sbc	r25, r1
    691e:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    6922:	20 e0       	ldi	r18, 0x00	; 0
    6924:	30 e0       	ldi	r19, 0x00	; 0
    6926:	4a e7       	ldi	r20, 0x7A	; 122
    6928:	54 e4       	ldi	r21, 0x44	; 68
    692a:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    692e:	ab 01       	movw	r20, r22
    6930:	bc 01       	movw	r22, r24
    6932:	22 e0       	ldi	r18, 0x02	; 2
    6934:	30 e0       	ldi	r19, 0x00	; 0
    6936:	81 e0       	ldi	r24, 0x01	; 1
    6938:	99 e0       	ldi	r25, 0x09	; 9
    693a:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:248
        display.print('s');
    693e:	63 e7       	ldi	r22, 0x73	; 115
    6940:	81 e0       	ldi	r24, 0x01	; 1
    6942:	99 e0       	ldi	r25, 0x09	; 9
    6944:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:251

        /* Read & Decode GPS Data */
        decodeGPSNMEA(1000);
    6948:	0e 94 37 29 	call	0x526e	; 0x526e <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:253

        display.display();
    694c:	81 e0       	ldi	r24, 0x01	; 1
    694e:	99 e0       	ldi	r25, 0x09	; 9
    6950:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:254
        display.clearDisplay();
    6954:	81 e0       	ldi	r24, 0x01	; 1
    6956:	99 e0       	ldi	r25, 0x09	; 9
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:255
}
    6958:	df 91       	pop	r29
    695a:	cf 91       	pop	r28
    695c:	1f 91       	pop	r17
    695e:	0f 91       	pop	r16
    6960:	ff 90       	pop	r15
    6962:	ef 90       	pop	r14
    6964:	df 90       	pop	r13
    6966:	cf 90       	pop	r12
    6968:	bf 90       	pop	r11
    696a:	af 90       	pop	r10
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:254

        /* Read & Decode GPS Data */
        decodeGPSNMEA(1000);

        display.display();
        display.clearDisplay();
    696c:	0c 94 ca 4e 	jmp	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
_ZNK15TinyGPSLocation3ageEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:59
{
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
    6970:	6f ef       	ldi	r22, 0xFF	; 255
    6972:	7f ef       	ldi	r23, 0xFF	; 255
    6974:	cb 01       	movw	r24, r22
    6976:	db ce       	rjmp	.-586    	; 0x672e <receptionSignalGraphMenu()+0x16c>

00006978 <noReceptionSignal()>:
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:1
void noReceptionSignal(void) {
    6978:	2f 92       	push	r2
    697a:	3f 92       	push	r3
    697c:	4f 92       	push	r4
    697e:	5f 92       	push	r5
    6980:	6f 92       	push	r6
    6982:	7f 92       	push	r7
    6984:	8f 92       	push	r8
    6986:	9f 92       	push	r9
    6988:	af 92       	push	r10
    698a:	bf 92       	push	r11
    698c:	cf 92       	push	r12
    698e:	df 92       	push	r13
    6990:	ef 92       	push	r14
    6992:	ff 92       	push	r15
    6994:	0f 93       	push	r16
    6996:	1f 93       	push	r17
    6998:	cf 93       	push	r28
    699a:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:3
        /* Show tip if reception time took too long */
        gps_var.satellite_acquiring_time = millis();
    699c:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    69a0:	60 93 30 01 	sts	0x0130, r22	; 0x800130 <gps_var+0x12>
    69a4:	70 93 31 01 	sts	0x0131, r23	; 0x800131 <gps_var+0x13>
    69a8:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <gps_var+0x14>
    69ac:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <gps_var+0x15>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:4
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0)
    69b0:	86 e2       	ldi	r24, 0x26	; 38
    69b2:	98 e0       	ldi	r25, 0x08	; 8
    69b4:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:5
            && (gps_var.satellite_acquiring_time > 180000)) {
    69b8:	20 e0       	ldi	r18, 0x00	; 0
    69ba:	30 e0       	ldi	r19, 0x00	; 0
    69bc:	a9 01       	movw	r20, r18
    69be:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    69c2:	81 11       	cpse	r24, r1
    69c4:	26 c1       	rjmp	.+588    	; 0x6c12 <noReceptionSignal()+0x29a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:4
void noReceptionSignal(void) {
        /* Show tip if reception time took too long */
        gps_var.satellite_acquiring_time = millis();
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0)
    69c6:	86 e2       	ldi	r24, 0x26	; 38
    69c8:	98 e0       	ldi	r25, 0x08	; 8
    69ca:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    69ce:	20 e0       	ldi	r18, 0x00	; 0
    69d0:	30 e0       	ldi	r19, 0x00	; 0
    69d2:	a9 01       	movw	r20, r18
    69d4:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    69d8:	81 11       	cpse	r24, r1
    69da:	1b c1       	rjmp	.+566    	; 0x6c12 <noReceptionSignal()+0x29a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:5 (discriminator 3)
            && (gps_var.satellite_acquiring_time > 180000)) {
    69dc:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <gps_var+0x12>
    69e0:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <gps_var+0x13>
    69e4:	a0 91 32 01 	lds	r26, 0x0132	; 0x800132 <gps_var+0x14>
    69e8:	b0 91 33 01 	lds	r27, 0x0133	; 0x800133 <gps_var+0x15>
    69ec:	81 32       	cpi	r24, 0x21	; 33
    69ee:	9f 4b       	sbci	r25, 0xBF	; 191
    69f0:	a2 40       	sbci	r26, 0x02	; 2
    69f2:	b1 05       	cpc	r27, r1
    69f4:	08 f4       	brcc	.+2      	; 0x69f8 <noReceptionSignal()+0x80>
    69f6:	0d c1       	rjmp	.+538    	; 0x6c12 <noReceptionSignal()+0x29a>
    69f8:	93 e0       	ldi	r25, 0x03	; 3
    69fa:	c9 2e       	mov	r12, r25
    69fc:	d1 2c       	mov	r13, r1
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    69fe:	c1 e0       	ldi	r28, 0x01	; 1
    6a00:	d0 e0       	ldi	r29, 0x00	; 0
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6a02:	28 e2       	ldi	r18, 0x28	; 40
    6a04:	22 2e       	mov	r2, r18
    6a06:	31 2c       	mov	r3, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6a08:	32 e3       	ldi	r19, 0x32	; 50
    6a0a:	63 2e       	mov	r6, r19
    6a0c:	71 2c       	mov	r7, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6a0e:	4c e3       	ldi	r20, 0x3C	; 60
    6a10:	44 2e       	mov	r4, r20
    6a12:	51 2c       	mov	r5, r1
    6a14:	53 e1       	ldi	r21, 0x13	; 19
    6a16:	a5 2e       	mov	r10, r21
    6a18:	b1 2c       	mov	r11, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6a1a:	69 e1       	ldi	r22, 0x19	; 25
    6a1c:	86 2e       	mov	r8, r22
    6a1e:	91 2c       	mov	r9, r1
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:7
                for (int step = 0; step < 3; step++) {
                        logic.lastState = true;
    6a20:	81 e0       	ldi	r24, 0x01	; 1
    6a22:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:8
                        display.clearDisplay();
    6a26:	81 e0       	ldi	r24, 0x01	; 1
    6a28:	99 e0       	ldi	r25, 0x09	; 9
    6a2a:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6a2e:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    6a32:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    6a36:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    6a3a:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6a3e:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    6a42:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6a46:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    6a4a:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:10
                        display.setTextColor(WHITE);
                        display.setCursor(1, 1);    display.print(F("SIGNAL RECEPTION TOOK"));
    6a4e:	6f ef       	ldi	r22, 0xFF	; 255
    6a50:	73 e0       	ldi	r23, 0x03	; 3
    6a52:	81 e0       	ldi	r24, 0x01	; 1
    6a54:	99 e0       	ldi	r25, 0x09	; 9
    6a56:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6a5a:	30 92 0e 09 	sts	0x090E, r3	; 0x80090e <display+0xd>
    6a5e:	20 92 0d 09 	sts	0x090D, r2	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6a62:	8b e0       	ldi	r24, 0x0B	; 11
    6a64:	90 e0       	ldi	r25, 0x00	; 0
    6a66:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    6a6a:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:11
                        display.setCursor(40, 11);  display.print(F("TOO LONG"));
    6a6e:	66 ef       	ldi	r22, 0xF6	; 246
    6a70:	73 e0       	ldi	r23, 0x03	; 3
    6a72:	81 e0       	ldi	r24, 0x01	; 1
    6a74:	99 e0       	ldi	r25, 0x09	; 9
    6a76:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6a7a:	8d e0       	ldi	r24, 0x0D	; 13
    6a7c:	90 e0       	ldi	r25, 0x00	; 0
    6a7e:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    6a82:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6a86:	87 e2       	ldi	r24, 0x27	; 39
    6a88:	90 e0       	ldi	r25, 0x00	; 0
    6a8a:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    6a8e:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:12
                        display.setCursor(13, 39);  display.print(F("CHECK THE ANTENNA"));
    6a92:	64 ee       	ldi	r22, 0xE4	; 228
    6a94:	73 e0       	ldi	r23, 0x03	; 3
    6a96:	81 e0       	ldi	r24, 0x01	; 1
    6a98:	99 e0       	ldi	r25, 0x09	; 9
    6a9a:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6a9e:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    6aa2:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6aa6:	70 92 10 09 	sts	0x0910, r7	; 0x800910 <display+0xf>
    6aaa:	60 92 0f 09 	sts	0x090F, r6	; 0x80090f <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:16

                        /* Show Date and Time */
                        display.setCursor(1, 50);
                        display.print(gps.time.hour() + getTimeZone(gps.location.lng()));
    6aae:	86 e5       	ldi	r24, 0x56	; 86
    6ab0:	98 e0       	ldi	r25, 0x08	; 8
    6ab2:	0e 94 0a 68 	call	0xd014	; 0xd014 <TinyGPSTime::hour()>
    6ab6:	18 2f       	mov	r17, r24
    6ab8:	86 e2       	ldi	r24, 0x26	; 38
    6aba:	98 e0       	ldi	r25, 0x08	; 8
    6abc:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    6ac0:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    6ac4:	bc 01       	movw	r22, r24
    6ac6:	61 0f       	add	r22, r17
    6ac8:	71 1d       	adc	r23, r1
    6aca:	4a e0       	ldi	r20, 0x0A	; 10
    6acc:	50 e0       	ldi	r21, 0x00	; 0
    6ace:	81 e0       	ldi	r24, 0x01	; 1
    6ad0:	99 e0       	ldi	r25, 0x09	; 9
    6ad2:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:17
                        display.print(':');
    6ad6:	6a e3       	ldi	r22, 0x3A	; 58
    6ad8:	81 e0       	ldi	r24, 0x01	; 1
    6ada:	99 e0       	ldi	r25, 0x09	; 9
    6adc:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:18
                        if (gps.time.minute() < 10) display.print(F("0"));
    6ae0:	86 e5       	ldi	r24, 0x56	; 86
    6ae2:	98 e0       	ldi	r25, 0x08	; 8
    6ae4:	0e 94 18 68 	call	0xd030	; 0xd030 <TinyGPSTime::minute()>
    6ae8:	8a 30       	cpi	r24, 0x0A	; 10
    6aea:	30 f4       	brcc	.+12     	; 0x6af8 <noReceptionSignal()+0x180>
    6aec:	62 ee       	ldi	r22, 0xE2	; 226
    6aee:	73 e0       	ldi	r23, 0x03	; 3
    6af0:	81 e0       	ldi	r24, 0x01	; 1
    6af2:	99 e0       	ldi	r25, 0x09	; 9
    6af4:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:19
                        display.print(gps.time.minute());
    6af8:	86 e5       	ldi	r24, 0x56	; 86
    6afa:	98 e0       	ldi	r25, 0x08	; 8
    6afc:	0e 94 18 68 	call	0xd030	; 0xd030 <TinyGPSTime::minute()>
    6b00:	4a e0       	ldi	r20, 0x0A	; 10
    6b02:	50 e0       	ldi	r21, 0x00	; 0
    6b04:	68 2f       	mov	r22, r24
    6b06:	81 e0       	ldi	r24, 0x01	; 1
    6b08:	99 e0       	ldi	r25, 0x09	; 9
    6b0a:	0e 94 10 6f 	call	0xde20	; 0xde20 <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:20
                        display.print(F(" UTC"));
    6b0e:	6d ed       	ldi	r22, 0xDD	; 221
    6b10:	73 e0       	ldi	r23, 0x03	; 3
    6b12:	81 e0       	ldi	r24, 0x01	; 1
    6b14:	99 e0       	ldi	r25, 0x09	; 9
    6b16:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6b1a:	50 92 0e 09 	sts	0x090E, r5	; 0x80090e <display+0xd>
    6b1e:	40 92 0d 09 	sts	0x090D, r4	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6b22:	70 92 10 09 	sts	0x0910, r7	; 0x800910 <display+0xf>
    6b26:	60 92 0f 09 	sts	0x090F, r6	; 0x80090f <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:22
                        display.setCursor(60, 50);
                        if (gps.date.day() < 10) display.print('0');
    6b2a:	88 e4       	ldi	r24, 0x48	; 72
    6b2c:	98 e0       	ldi	r25, 0x08	; 8
    6b2e:	0e 94 fc 67 	call	0xcff8	; 0xcff8 <TinyGPSDate::day()>
    6b32:	8a 30       	cpi	r24, 0x0A	; 10
    6b34:	28 f4       	brcc	.+10     	; 0x6b40 <noReceptionSignal()+0x1c8>
    6b36:	60 e3       	ldi	r22, 0x30	; 48
    6b38:	81 e0       	ldi	r24, 0x01	; 1
    6b3a:	99 e0       	ldi	r25, 0x09	; 9
    6b3c:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:23
                        display.print(gps.date.day());
    6b40:	88 e4       	ldi	r24, 0x48	; 72
    6b42:	98 e0       	ldi	r25, 0x08	; 8
    6b44:	0e 94 fc 67 	call	0xcff8	; 0xcff8 <TinyGPSDate::day()>
    6b48:	4a e0       	ldi	r20, 0x0A	; 10
    6b4a:	50 e0       	ldi	r21, 0x00	; 0
    6b4c:	68 2f       	mov	r22, r24
    6b4e:	81 e0       	ldi	r24, 0x01	; 1
    6b50:	99 e0       	ldi	r25, 0x09	; 9
    6b52:	0e 94 10 6f 	call	0xde20	; 0xde20 <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:24
                        display.print('/');
    6b56:	6f e2       	ldi	r22, 0x2F	; 47
    6b58:	81 e0       	ldi	r24, 0x01	; 1
    6b5a:	99 e0       	ldi	r25, 0x09	; 9
    6b5c:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:25
                        display.print(menu.month[gps.date.month()]);
    6b60:	88 e4       	ldi	r24, 0x48	; 72
    6b62:	98 e0       	ldi	r25, 0x08	; 8
    6b64:	0e 94 dd 67 	call	0xcfba	; 0xcfba <TinyGPSDate::month()>
    6b68:	94 e0       	ldi	r25, 0x04	; 4
    6b6a:	89 9f       	mul	r24, r25
    6b6c:	b0 01       	movw	r22, r0
    6b6e:	11 24       	eor	r1, r1
    6b70:	69 5a       	subi	r22, 0xA9	; 169
    6b72:	76 4f       	sbci	r23, 0xF6	; 246
    6b74:	81 e0       	ldi	r24, 0x01	; 1
    6b76:	99 e0       	ldi	r25, 0x09	; 9
    6b78:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:26
                        display.print('/');
    6b7c:	6f e2       	ldi	r22, 0x2F	; 47
    6b7e:	81 e0       	ldi	r24, 0x01	; 1
    6b80:	99 e0       	ldi	r25, 0x09	; 9
    6b82:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:27
                        display.print(gps.date.year());
    6b86:	88 e4       	ldi	r24, 0x48	; 72
    6b88:	98 e0       	ldi	r25, 0x08	; 8
    6b8a:	0e 94 cd 67 	call	0xcf9a	; 0xcf9a <TinyGPSDate::year()>
    6b8e:	4a e0       	ldi	r20, 0x0A	; 10
    6b90:	50 e0       	ldi	r21, 0x00	; 0
    6b92:	bc 01       	movw	r22, r24
    6b94:	81 e0       	ldi	r24, 0x01	; 1
    6b96:	99 e0       	ldi	r25, 0x09	; 9
    6b98:	0e 94 17 6f 	call	0xde2e	; 0xde2e <Print::print(unsigned int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:28
                        gps_var.show_question_mark = !gps_var.show_question_mark;
    6b9c:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    6ba0:	21 e0       	ldi	r18, 0x01	; 1
    6ba2:	82 27       	eor	r24, r18
    6ba4:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:31

                        /* Text Flash Info */
                        if (gps_var.show_question_mark) {
    6ba8:	88 23       	and	r24, r24
    6baa:	09 f4       	brne	.+2      	; 0x6bae <noReceptionSignal()+0x236>
    6bac:	45 c0       	rjmp	.+138    	; 0x6c38 <noReceptionSignal()+0x2c0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:32
                                display.fillRect(0, 24, 128, 9, WHITE);
    6bae:	ee 24       	eor	r14, r14
    6bb0:	e3 94       	inc	r14
    6bb2:	f1 2c       	mov	r15, r1
    6bb4:	09 e0       	ldi	r16, 0x09	; 9
    6bb6:	10 e0       	ldi	r17, 0x00	; 0
    6bb8:	20 e8       	ldi	r18, 0x80	; 128
    6bba:	30 e0       	ldi	r19, 0x00	; 0
    6bbc:	48 e1       	ldi	r20, 0x18	; 24
    6bbe:	50 e0       	ldi	r21, 0x00	; 0
    6bc0:	70 e0       	ldi	r23, 0x00	; 0
    6bc2:	60 e0       	ldi	r22, 0x00	; 0
    6bc4:	81 e0       	ldi	r24, 0x01	; 1
    6bc6:	99 e0       	ldi	r25, 0x09	; 9
    6bc8:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6bcc:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    6bd0:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    6bd4:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    6bd8:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6bdc:	b0 92 0e 09 	sts	0x090E, r11	; 0x80090e <display+0xd>
    6be0:	a0 92 0d 09 	sts	0x090D, r10	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6be4:	90 92 10 09 	sts	0x0910, r9	; 0x800910 <display+0xf>
    6be8:	80 92 0f 09 	sts	0x090F, r8	; 0x80090f <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:34
                                display.setTextColor(BLACK);
                                display.setCursor(19, 25);  display.print(F("ARE YOU INDOOR?"));
    6bec:	6d ec       	ldi	r22, 0xCD	; 205
    6bee:	73 e0       	ldi	r23, 0x03	; 3
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:38
                        } else {
                                display.fillRect(0, 24, 128, 9, BLACK);
                                display.setTextColor(WHITE);
                                display.setCursor(19, 25);  display.print(F("ARE YOU INDOOR?"));
    6bf0:	81 e0       	ldi	r24, 0x01	; 1
    6bf2:	99 e0       	ldi	r25, 0x09	; 9
    6bf4:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:40
                        }
                        display.display();
    6bf8:	81 e0       	ldi	r24, 0x01	; 1
    6bfa:	99 e0       	ldi	r25, 0x09	; 9
    6bfc:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:43

                        /* Switch to Other Menu */
                        ButtonIO();
    6c00:	0e 94 7e 20 	call	0x40fc	; 0x40fc <ButtonIO()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:44
                        decodeGPSNMEA(1000);
    6c04:	0e 94 37 29 	call	0x526e	; 0x526e <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
    6c08:	81 e0       	ldi	r24, 0x01	; 1
    6c0a:	c8 1a       	sub	r12, r24
    6c0c:	d1 08       	sbc	r13, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:6
void noReceptionSignal(void) {
        /* Show tip if reception time took too long */
        gps_var.satellite_acquiring_time = millis();
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0)
            && (gps_var.satellite_acquiring_time > 180000)) {
                for (int step = 0; step < 3; step++) {
    6c0e:	09 f0       	breq	.+2      	; 0x6c12 <noReceptionSignal()+0x29a>
    6c10:	07 cf       	rjmp	.-498    	; 0x6a20 <noReceptionSignal()+0xa8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:47
                        /* Switch to Other Menu */
                        ButtonIO();
                        decodeGPSNMEA(1000);
                }
        }
}
    6c12:	df 91       	pop	r29
    6c14:	cf 91       	pop	r28
    6c16:	1f 91       	pop	r17
    6c18:	0f 91       	pop	r16
    6c1a:	ff 90       	pop	r15
    6c1c:	ef 90       	pop	r14
    6c1e:	df 90       	pop	r13
    6c20:	cf 90       	pop	r12
    6c22:	bf 90       	pop	r11
    6c24:	af 90       	pop	r10
    6c26:	9f 90       	pop	r9
    6c28:	8f 90       	pop	r8
    6c2a:	7f 90       	pop	r7
    6c2c:	6f 90       	pop	r6
    6c2e:	5f 90       	pop	r5
    6c30:	4f 90       	pop	r4
    6c32:	3f 90       	pop	r3
    6c34:	2f 90       	pop	r2
    6c36:	08 95       	ret
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:36
                        if (gps_var.show_question_mark) {
                                display.fillRect(0, 24, 128, 9, WHITE);
                                display.setTextColor(BLACK);
                                display.setCursor(19, 25);  display.print(F("ARE YOU INDOOR?"));
                        } else {
                                display.fillRect(0, 24, 128, 9, BLACK);
    6c38:	f1 2c       	mov	r15, r1
    6c3a:	e1 2c       	mov	r14, r1
    6c3c:	09 e0       	ldi	r16, 0x09	; 9
    6c3e:	10 e0       	ldi	r17, 0x00	; 0
    6c40:	20 e8       	ldi	r18, 0x80	; 128
    6c42:	30 e0       	ldi	r19, 0x00	; 0
    6c44:	48 e1       	ldi	r20, 0x18	; 24
    6c46:	50 e0       	ldi	r21, 0x00	; 0
    6c48:	70 e0       	ldi	r23, 0x00	; 0
    6c4a:	60 e0       	ldi	r22, 0x00	; 0
    6c4c:	81 e0       	ldi	r24, 0x01	; 1
    6c4e:	99 e0       	ldi	r25, 0x09	; 9
    6c50:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6c54:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    6c58:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    6c5c:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    6c60:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6c64:	b0 92 0e 09 	sts	0x090E, r11	; 0x80090e <display+0xd>
    6c68:	a0 92 0d 09 	sts	0x090D, r10	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6c6c:	90 92 10 09 	sts	0x0910, r9	; 0x800910 <display+0xf>
    6c70:	80 92 0f 09 	sts	0x090F, r8	; 0x80090f <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:38
                                display.setTextColor(WHITE);
                                display.setCursor(19, 25);  display.print(F("ARE YOU INDOOR?"));
    6c74:	6d eb       	ldi	r22, 0xBD	; 189
    6c76:	73 e0       	ldi	r23, 0x03	; 3
    6c78:	bb cf       	rjmp	.-138    	; 0x6bf0 <noReceptionSignal()+0x278>

00006c7a <GPSMenu()>:
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:49
                        decodeGPSNMEA(1000);
                }
        }
}

void GPSMenu(void) {
    6c7a:	7f 92       	push	r7
    6c7c:	8f 92       	push	r8
    6c7e:	9f 92       	push	r9
    6c80:	af 92       	push	r10
    6c82:	bf 92       	push	r11
    6c84:	cf 92       	push	r12
    6c86:	df 92       	push	r13
    6c88:	ef 92       	push	r14
    6c8a:	ff 92       	push	r15
    6c8c:	0f 93       	push	r16
    6c8e:	1f 93       	push	r17
    6c90:	cf 93       	push	r28
    6c92:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:51
        /* Read and Decode GPS Data */
        decodeGPSNMEA(1000);
    6c94:	0e 94 37 29 	call	0x526e	; 0x526e <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:54

        /* Check if time is not yet getting from the satellites */
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0) &&
    6c98:	86 e2       	ldi	r24, 0x26	; 38
    6c9a:	98 e0       	ldi	r25, 0x08	; 8
    6c9c:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:55
            (gps.time.hour() == 0) && (gps.time.minute() == 0)) {
    6ca0:	20 e0       	ldi	r18, 0x00	; 0
    6ca2:	30 e0       	ldi	r19, 0x00	; 0
    6ca4:	a9 01       	movw	r20, r18
    6ca6:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    6caa:	81 11       	cpse	r24, r1
    6cac:	93 c0       	rjmp	.+294    	; 0x6dd4 <GPSMenu()+0x15a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:54
void GPSMenu(void) {
        /* Read and Decode GPS Data */
        decodeGPSNMEA(1000);

        /* Check if time is not yet getting from the satellites */
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0) &&
    6cae:	86 e2       	ldi	r24, 0x26	; 38
    6cb0:	98 e0       	ldi	r25, 0x08	; 8
    6cb2:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    6cb6:	20 e0       	ldi	r18, 0x00	; 0
    6cb8:	30 e0       	ldi	r19, 0x00	; 0
    6cba:	a9 01       	movw	r20, r18
    6cbc:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    6cc0:	81 11       	cpse	r24, r1
    6cc2:	88 c0       	rjmp	.+272    	; 0x6dd4 <GPSMenu()+0x15a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:55 (discriminator 1)
            (gps.time.hour() == 0) && (gps.time.minute() == 0)) {
    6cc4:	86 e5       	ldi	r24, 0x56	; 86
    6cc6:	98 e0       	ldi	r25, 0x08	; 8
    6cc8:	0e 94 0a 68 	call	0xd014	; 0xd014 <TinyGPSTime::hour()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:54 (discriminator 1)
void GPSMenu(void) {
        /* Read and Decode GPS Data */
        decodeGPSNMEA(1000);

        /* Check if time is not yet getting from the satellites */
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0) &&
    6ccc:	81 11       	cpse	r24, r1
    6cce:	82 c0       	rjmp	.+260    	; 0x6dd4 <GPSMenu()+0x15a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:55 (discriminator 3)
            (gps.time.hour() == 0) && (gps.time.minute() == 0)) {
    6cd0:	86 e5       	ldi	r24, 0x56	; 86
    6cd2:	98 e0       	ldi	r25, 0x08	; 8
    6cd4:	0e 94 18 68 	call	0xd030	; 0xd030 <TinyGPSTime::minute()>
    6cd8:	81 11       	cpse	r24, r1
    6cda:	7c c0       	rjmp	.+248    	; 0x6dd4 <GPSMenu()+0x15a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:56
                gps_var.satellite_start_up_time = millis();
    6cdc:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    6ce0:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <gps_var>
    6ce4:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <gps_var+0x1>
    6ce8:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <gps_var+0x2>
    6cec:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <gps_var+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:58

                display.clearDisplay();
    6cf0:	81 e0       	ldi	r24, 0x01	; 1
    6cf2:	99 e0       	ldi	r25, 0x09	; 9
    6cf4:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:59
                display.setTextSize(1);
    6cf8:	61 e0       	ldi	r22, 0x01	; 1
    6cfa:	81 e0       	ldi	r24, 0x01	; 1
    6cfc:	99 e0       	ldi	r25, 0x09	; 9
    6cfe:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6d02:	81 e0       	ldi	r24, 0x01	; 1
    6d04:	90 e0       	ldi	r25, 0x00	; 0
    6d06:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <display+0x13>
    6d0a:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <display+0x12>
    6d0e:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <display+0x11>
    6d12:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <display+0x10>
    6d16:	c5 e0       	ldi	r28, 0x05	; 5
    6d18:	d0 e0       	ldi	r29, 0x00	; 0
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:63
                display.setTextColor(WHITE);

                for (int step = 0; step < 5; step++) {
                        gps_var.show_question_mark = !gps_var.show_question_mark;
    6d1a:	77 24       	eor	r7, r7
    6d1c:	73 94       	inc	r7
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6d1e:	04 e0       	ldi	r16, 0x04	; 4
    6d20:	80 2e       	mov	r8, r16
    6d22:	91 2c       	mov	r9, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6d24:	aa 24       	eor	r10, r10
    6d26:	a3 94       	inc	r10
    6d28:	b1 2c       	mov	r11, r1
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:63
    6d2a:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    6d2e:	87 25       	eor	r24, r7
    6d30:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6d34:	90 92 0e 09 	sts	0x090E, r9	; 0x80090e <display+0xd>
    6d38:	80 92 0d 09 	sts	0x090D, r8	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6d3c:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    6d40:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:66

                        display.setCursor(4, 1);
                        if (gps_var.show_question_mark) {
    6d44:	88 23       	and	r24, r24
    6d46:	09 f4       	brne	.+2      	; 0x6d4a <GPSMenu()+0xd0>
    6d48:	d7 c2       	rjmp	.+1454   	; 0x72f8 <GPSMenu()+0x67e>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:67
                                display.fillRect(0, 0, 128, 9, WHITE);
    6d4a:	ee 24       	eor	r14, r14
    6d4c:	e3 94       	inc	r14
    6d4e:	f1 2c       	mov	r15, r1
    6d50:	09 e0       	ldi	r16, 0x09	; 9
    6d52:	10 e0       	ldi	r17, 0x00	; 0
    6d54:	20 e8       	ldi	r18, 0x80	; 128
    6d56:	30 e0       	ldi	r19, 0x00	; 0
    6d58:	50 e0       	ldi	r21, 0x00	; 0
    6d5a:	40 e0       	ldi	r20, 0x00	; 0
    6d5c:	70 e0       	ldi	r23, 0x00	; 0
    6d5e:	60 e0       	ldi	r22, 0x00	; 0
    6d60:	81 e0       	ldi	r24, 0x01	; 1
    6d62:	99 e0       	ldi	r25, 0x09	; 9
    6d64:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6d68:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    6d6c:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    6d70:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    6d74:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:69
                                display.setTextColor(BLACK);
                                display.print(F("ACQUIRING SATELLITES"));
    6d78:	68 ea       	ldi	r22, 0xA8	; 168
    6d7a:	73 e0       	ldi	r23, 0x03	; 3
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:73
                        } else {
                                display.fillRect(0, 0, 128, 9, BLACK);
                                display.setTextColor(WHITE);
                                display.print(F("ACQUIRING SATELLITES"));
    6d7c:	81 e0       	ldi	r24, 0x01	; 1
    6d7e:	99 e0       	ldi	r25, 0x09	; 9
    6d80:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:75
                        }
                        display.drawBitmap(37, 10, connecting_icon, 54, 54, WHITE);
    6d84:	cc 24       	eor	r12, r12
    6d86:	c3 94       	inc	r12
    6d88:	d1 2c       	mov	r13, r1
    6d8a:	b6 e3       	ldi	r27, 0x36	; 54
    6d8c:	eb 2e       	mov	r14, r27
    6d8e:	f1 2c       	mov	r15, r1
    6d90:	06 e3       	ldi	r16, 0x36	; 54
    6d92:	10 e0       	ldi	r17, 0x00	; 0
    6d94:	20 ec       	ldi	r18, 0xC0	; 192
    6d96:	37 e0       	ldi	r19, 0x07	; 7
    6d98:	4a e0       	ldi	r20, 0x0A	; 10
    6d9a:	50 e0       	ldi	r21, 0x00	; 0
    6d9c:	65 e2       	ldi	r22, 0x25	; 37
    6d9e:	70 e0       	ldi	r23, 0x00	; 0
    6da0:	81 e0       	ldi	r24, 0x01	; 1
    6da2:	99 e0       	ldi	r25, 0x09	; 9
    6da4:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
    6da8:	21 97       	sbiw	r28, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:62

                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);

                for (int step = 0; step < 5; step++) {
    6daa:	09 f0       	breq	.+2      	; 0x6dae <GPSMenu()+0x134>
    6dac:	be cf       	rjmp	.-132    	; 0x6d2a <GPSMenu()+0xb0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:79
                        }
                        display.drawBitmap(37, 10, connecting_icon, 54, 54, WHITE);
                }

                /* If reception took too long show tips */
                noReceptionSignal();
    6dae:	0e 94 bc 34 	call	0x6978	; 0x6978 <noReceptionSignal()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:80
                display.display();
    6db2:	81 e0       	ldi	r24, 0x01	; 1
    6db4:	99 e0       	ldi	r25, 0x09	; 9
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:194

                /* Show Update Interval Menu */
                while(!digitalRead(B_Pin))
                        receptionSignalGraphMenu();
        }
}
    6db6:	df 91       	pop	r29
    6db8:	cf 91       	pop	r28
    6dba:	1f 91       	pop	r17
    6dbc:	0f 91       	pop	r16
    6dbe:	ff 90       	pop	r15
    6dc0:	ef 90       	pop	r14
    6dc2:	df 90       	pop	r13
    6dc4:	cf 90       	pop	r12
    6dc6:	bf 90       	pop	r11
    6dc8:	af 90       	pop	r10
    6dca:	9f 90       	pop	r9
    6dcc:	8f 90       	pop	r8
    6dce:	7f 90       	pop	r7
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:80
                        display.drawBitmap(37, 10, connecting_icon, 54, 54, WHITE);
                }

                /* If reception took too long show tips */
                noReceptionSignal();
                display.display();
    6dd0:	0c 94 5f 52 	jmp	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:85
        } else {
                /* Menu After Satellite is Connected */
                /* Start Saving Startup Location */
                if ((!gps_var.log_start_point) && (gps.location.lat() > 0)
                    && (gps.location.lng() > 0)) {
    6dd4:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <gps_var+0x4>
    6dd8:	81 11       	cpse	r24, r1
    6dda:	33 c0       	rjmp	.+102    	; 0x6e42 <GPSMenu()+0x1c8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:84
                noReceptionSignal();
                display.display();
        } else {
                /* Menu After Satellite is Connected */
                /* Start Saving Startup Location */
                if ((!gps_var.log_start_point) && (gps.location.lat() > 0)
    6ddc:	86 e2       	ldi	r24, 0x26	; 38
    6dde:	98 e0       	ldi	r25, 0x08	; 8
    6de0:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
    6de4:	20 e0       	ldi	r18, 0x00	; 0
    6de6:	30 e0       	ldi	r19, 0x00	; 0
    6de8:	a9 01       	movw	r20, r18
    6dea:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    6dee:	18 16       	cp	r1, r24
    6df0:	44 f5       	brge	.+80     	; 0x6e42 <GPSMenu()+0x1c8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:85 (discriminator 3)
                    && (gps.location.lng() > 0)) {
    6df2:	86 e2       	ldi	r24, 0x26	; 38
    6df4:	98 e0       	ldi	r25, 0x08	; 8
    6df6:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    6dfa:	20 e0       	ldi	r18, 0x00	; 0
    6dfc:	30 e0       	ldi	r19, 0x00	; 0
    6dfe:	a9 01       	movw	r20, r18
    6e00:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    6e04:	18 16       	cp	r1, r24
    6e06:	ec f4       	brge	.+58     	; 0x6e42 <GPSMenu()+0x1c8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:88

                        /* Get start point Coordinate */
                        gps_var.start_latitude = gps.location.lat();
    6e08:	86 e2       	ldi	r24, 0x26	; 38
    6e0a:	98 e0       	ldi	r25, 0x08	; 8
    6e0c:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
    6e10:	60 93 24 01 	sts	0x0124, r22	; 0x800124 <gps_var+0x6>
    6e14:	70 93 25 01 	sts	0x0125, r23	; 0x800125 <gps_var+0x7>
    6e18:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <gps_var+0x8>
    6e1c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <gps_var+0x9>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:89
                        gps_var.start_longitude = gps.location.lng();
    6e20:	86 e2       	ldi	r24, 0x26	; 38
    6e22:	98 e0       	ldi	r25, 0x08	; 8
    6e24:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    6e28:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <gps_var+0xa>
    6e2c:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <gps_var+0xb>
    6e30:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <gps_var+0xc>
    6e34:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <gps_var+0xd>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:96
                        /* Save Coordinate for later use */
                        static_start_latitude = gps_var.start_latitude;
                        static_start_logitude = gps_var.start_longitude;

                        /* Save Location to EEPROM */
                        saveLocationToEEPROM();
    6e38:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <saveLocationToEEPROM()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:99

                        /* Set Logging Startup Location to Stop */
                        gps_var.log_start_point = true;
    6e3c:	81 e0       	ldi	r24, 0x01	; 1
    6e3e:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <gps_var+0x4>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:103
                }
                /* End Saving Startup Location */

                display.clearDisplay();
    6e42:	81 e0       	ldi	r24, 0x01	; 1
    6e44:	99 e0       	ldi	r25, 0x09	; 9
    6e46:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:105

                display.fillRect(0, 0, 128, 9, WHITE);
    6e4a:	ee 24       	eor	r14, r14
    6e4c:	e3 94       	inc	r14
    6e4e:	f1 2c       	mov	r15, r1
    6e50:	09 e0       	ldi	r16, 0x09	; 9
    6e52:	10 e0       	ldi	r17, 0x00	; 0
    6e54:	20 e8       	ldi	r18, 0x80	; 128
    6e56:	30 e0       	ldi	r19, 0x00	; 0
    6e58:	50 e0       	ldi	r21, 0x00	; 0
    6e5a:	40 e0       	ldi	r20, 0x00	; 0
    6e5c:	70 e0       	ldi	r23, 0x00	; 0
    6e5e:	60 e0       	ldi	r22, 0x00	; 0
    6e60:	81 e0       	ldi	r24, 0x01	; 1
    6e62:	99 e0       	ldi	r25, 0x09	; 9
    6e64:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:106
                display.setTextSize(1);
    6e68:	61 e0       	ldi	r22, 0x01	; 1
    6e6a:	81 e0       	ldi	r24, 0x01	; 1
    6e6c:	99 e0       	ldi	r25, 0x09	; 9
    6e6e:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    6e72:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    6e76:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    6e7a:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    6e7e:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6e82:	81 e0       	ldi	r24, 0x01	; 1
    6e84:	90 e0       	ldi	r25, 0x00	; 0
    6e86:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    6e8a:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6e8e:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    6e92:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:110
                display.setTextColor(BLACK);

                display.setCursor(1, 1);
                display.print(gps.time.hour() + 7);
    6e96:	86 e5       	ldi	r24, 0x56	; 86
    6e98:	98 e0       	ldi	r25, 0x08	; 8
    6e9a:	0e 94 0a 68 	call	0xd014	; 0xd014 <TinyGPSTime::hour()>
    6e9e:	68 2f       	mov	r22, r24
    6ea0:	70 e0       	ldi	r23, 0x00	; 0
    6ea2:	69 5f       	subi	r22, 0xF9	; 249
    6ea4:	7f 4f       	sbci	r23, 0xFF	; 255
    6ea6:	4a e0       	ldi	r20, 0x0A	; 10
    6ea8:	50 e0       	ldi	r21, 0x00	; 0
    6eaa:	81 e0       	ldi	r24, 0x01	; 1
    6eac:	99 e0       	ldi	r25, 0x09	; 9
    6eae:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:111
                display.print(':');
    6eb2:	6a e3       	ldi	r22, 0x3A	; 58
    6eb4:	81 e0       	ldi	r24, 0x01	; 1
    6eb6:	99 e0       	ldi	r25, 0x09	; 9
    6eb8:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:112
                if (gps.time.minute() < 10) display.print('0');
    6ebc:	86 e5       	ldi	r24, 0x56	; 86
    6ebe:	98 e0       	ldi	r25, 0x08	; 8
    6ec0:	0e 94 18 68 	call	0xd030	; 0xd030 <TinyGPSTime::minute()>
    6ec4:	8a 30       	cpi	r24, 0x0A	; 10
    6ec6:	28 f4       	brcc	.+10     	; 0x6ed2 <GPSMenu()+0x258>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:112 (discriminator 1)
    6ec8:	60 e3       	ldi	r22, 0x30	; 48
    6eca:	81 e0       	ldi	r24, 0x01	; 1
    6ecc:	99 e0       	ldi	r25, 0x09	; 9
    6ece:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:113
                display.print(gps.time.minute());
    6ed2:	86 e5       	ldi	r24, 0x56	; 86
    6ed4:	98 e0       	ldi	r25, 0x08	; 8
    6ed6:	0e 94 18 68 	call	0xd030	; 0xd030 <TinyGPSTime::minute()>
    6eda:	4a e0       	ldi	r20, 0x0A	; 10
    6edc:	50 e0       	ldi	r21, 0x00	; 0
    6ede:	68 2f       	mov	r22, r24
    6ee0:	81 e0       	ldi	r24, 0x01	; 1
    6ee2:	99 e0       	ldi	r25, 0x09	; 9
    6ee4:	0e 94 10 6f 	call	0xde20	; 0xde20 <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:115

                display.print(':');
    6ee8:	6a e3       	ldi	r22, 0x3A	; 58
    6eea:	81 e0       	ldi	r24, 0x01	; 1
    6eec:	99 e0       	ldi	r25, 0x09	; 9
    6eee:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:116
                if (gps.time.second() < 10) display.print('0');
    6ef2:	86 e5       	ldi	r24, 0x56	; 86
    6ef4:	98 e0       	ldi	r25, 0x08	; 8
    6ef6:	0e 94 2e 68 	call	0xd05c	; 0xd05c <TinyGPSTime::second()>
    6efa:	8a 30       	cpi	r24, 0x0A	; 10
    6efc:	28 f4       	brcc	.+10     	; 0x6f08 <GPSMenu()+0x28e>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:116 (discriminator 1)
    6efe:	60 e3       	ldi	r22, 0x30	; 48
    6f00:	81 e0       	ldi	r24, 0x01	; 1
    6f02:	99 e0       	ldi	r25, 0x09	; 9
    6f04:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:117
                display.print(gps.time.second());
    6f08:	86 e5       	ldi	r24, 0x56	; 86
    6f0a:	98 e0       	ldi	r25, 0x08	; 8
    6f0c:	0e 94 2e 68 	call	0xd05c	; 0xd05c <TinyGPSTime::second()>
    6f10:	4a e0       	ldi	r20, 0x0A	; 10
    6f12:	50 e0       	ldi	r21, 0x00	; 0
    6f14:	68 2f       	mov	r22, r24
    6f16:	81 e0       	ldi	r24, 0x01	; 1
    6f18:	99 e0       	ldi	r25, 0x09	; 9
    6f1a:	0e 94 10 6f 	call	0xde20	; 0xde20 <Print::print(unsigned char, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6f1e:	8e e3       	ldi	r24, 0x3E	; 62
    6f20:	90 e0       	ldi	r25, 0x00	; 0
    6f22:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    6f26:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6f2a:	81 e0       	ldi	r24, 0x01	; 1
    6f2c:	90 e0       	ldi	r25, 0x00	; 0
    6f2e:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    6f32:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:120

                display.setCursor(62, 1);
                if (gps.date.day() < 10) display.print('0');
    6f36:	88 e4       	ldi	r24, 0x48	; 72
    6f38:	98 e0       	ldi	r25, 0x08	; 8
    6f3a:	0e 94 fc 67 	call	0xcff8	; 0xcff8 <TinyGPSDate::day()>
    6f3e:	8a 30       	cpi	r24, 0x0A	; 10
    6f40:	28 f4       	brcc	.+10     	; 0x6f4c <GPSMenu()+0x2d2>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:120 (discriminator 1)
    6f42:	60 e3       	ldi	r22, 0x30	; 48
    6f44:	81 e0       	ldi	r24, 0x01	; 1
    6f46:	99 e0       	ldi	r25, 0x09	; 9
    6f48:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:121
                display.print(gps.date.day());
    6f4c:	88 e4       	ldi	r24, 0x48	; 72
    6f4e:	98 e0       	ldi	r25, 0x08	; 8
    6f50:	0e 94 fc 67 	call	0xcff8	; 0xcff8 <TinyGPSDate::day()>
    6f54:	4a e0       	ldi	r20, 0x0A	; 10
    6f56:	50 e0       	ldi	r21, 0x00	; 0
    6f58:	68 2f       	mov	r22, r24
    6f5a:	81 e0       	ldi	r24, 0x01	; 1
    6f5c:	99 e0       	ldi	r25, 0x09	; 9
    6f5e:	0e 94 10 6f 	call	0xde20	; 0xde20 <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:123

                display.print('/');
    6f62:	6f e2       	ldi	r22, 0x2F	; 47
    6f64:	81 e0       	ldi	r24, 0x01	; 1
    6f66:	99 e0       	ldi	r25, 0x09	; 9
    6f68:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:124
                display.print(menu.month[gps.date.month()]);
    6f6c:	88 e4       	ldi	r24, 0x48	; 72
    6f6e:	98 e0       	ldi	r25, 0x08	; 8
    6f70:	0e 94 dd 67 	call	0xcfba	; 0xcfba <TinyGPSDate::month()>
    6f74:	94 e0       	ldi	r25, 0x04	; 4
    6f76:	89 9f       	mul	r24, r25
    6f78:	b0 01       	movw	r22, r0
    6f7a:	11 24       	eor	r1, r1
    6f7c:	69 5a       	subi	r22, 0xA9	; 169
    6f7e:	76 4f       	sbci	r23, 0xF6	; 246
    6f80:	81 e0       	ldi	r24, 0x01	; 1
    6f82:	99 e0       	ldi	r25, 0x09	; 9
    6f84:	0e 94 59 6e 	call	0xdcb2	; 0xdcb2 <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:126

                display.print('/');
    6f88:	6f e2       	ldi	r22, 0x2F	; 47
    6f8a:	81 e0       	ldi	r24, 0x01	; 1
    6f8c:	99 e0       	ldi	r25, 0x09	; 9
    6f8e:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:127
                display.print(gps.date.year());
    6f92:	88 e4       	ldi	r24, 0x48	; 72
    6f94:	98 e0       	ldi	r25, 0x08	; 8
    6f96:	0e 94 cd 67 	call	0xcf9a	; 0xcf9a <TinyGPSDate::year()>
    6f9a:	4a e0       	ldi	r20, 0x0A	; 10
    6f9c:	50 e0       	ldi	r21, 0x00	; 0
    6f9e:	bc 01       	movw	r22, r24
    6fa0:	81 e0       	ldi	r24, 0x01	; 1
    6fa2:	99 e0       	ldi	r25, 0x09	; 9
    6fa4:	0e 94 17 6f 	call	0xde2e	; 0xde2e <Print::print(unsigned int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:130

                /* Draw Split Verticle Line */
                display.drawLine(59, 10, 59, 64, WHITE);
    6fa8:	ee 24       	eor	r14, r14
    6faa:	e3 94       	inc	r14
    6fac:	f1 2c       	mov	r15, r1
    6fae:	00 e4       	ldi	r16, 0x40	; 64
    6fb0:	10 e0       	ldi	r17, 0x00	; 0
    6fb2:	2b e3       	ldi	r18, 0x3B	; 59
    6fb4:	30 e0       	ldi	r19, 0x00	; 0
    6fb6:	4a e0       	ldi	r20, 0x0A	; 10
    6fb8:	50 e0       	ldi	r21, 0x00	; 0
    6fba:	6b e3       	ldi	r22, 0x3B	; 59
    6fbc:	70 e0       	ldi	r23, 0x00	; 0
    6fbe:	81 e0       	ldi	r24, 0x01	; 1
    6fc0:	99 e0       	ldi	r25, 0x09	; 9
    6fc2:	0e 94 a7 43 	call	0x874e	; 0x874e <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6fc6:	c1 e0       	ldi	r28, 0x01	; 1
    6fc8:	d0 e0       	ldi	r29, 0x00	; 0
    6fca:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    6fce:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6fd2:	5b e0       	ldi	r21, 0x0B	; 11
    6fd4:	a5 2e       	mov	r10, r21
    6fd6:	b1 2c       	mov	r11, r1
    6fd8:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    6fdc:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6fe0:	d0 93 14 09 	sts	0x0914, r29	; 0x800914 <display+0x13>
    6fe4:	c0 93 13 09 	sts	0x0913, r28	; 0x800913 <display+0x12>
    6fe8:	d0 93 12 09 	sts	0x0912, r29	; 0x800912 <display+0x11>
    6fec:	c0 93 11 09 	sts	0x0911, r28	; 0x800911 <display+0x10>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:134

                display.setCursor(1, 11);
                display.setTextColor(WHITE);
                display.print(F("LATITUDE"));
    6ff0:	6a e8       	ldi	r22, 0x8A	; 138
    6ff2:	73 e0       	ldi	r23, 0x03	; 3
    6ff4:	81 e0       	ldi	r24, 0x01	; 1
    6ff6:	99 e0       	ldi	r25, 0x09	; 9
    6ff8:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6ffc:	01 e4       	ldi	r16, 0x41	; 65
    6ffe:	10 e0       	ldi	r17, 0x00	; 0
    7000:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    7004:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7008:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    700c:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:136
                display.setCursor(65, 11);
                display.print(gps.location.lat(), 6);
    7010:	86 e2       	ldi	r24, 0x26	; 38
    7012:	98 e0       	ldi	r25, 0x08	; 8
    7014:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
    7018:	ab 01       	movw	r20, r22
    701a:	bc 01       	movw	r22, r24
    701c:	26 e0       	ldi	r18, 0x06	; 6
    701e:	30 e0       	ldi	r19, 0x00	; 0
    7020:	81 e0       	ldi	r24, 0x01	; 1
    7022:	99 e0       	ldi	r25, 0x09	; 9
    7024:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7028:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    702c:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7030:	64 e1       	ldi	r22, 0x14	; 20
    7032:	a6 2e       	mov	r10, r22
    7034:	b1 2c       	mov	r11, r1
    7036:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    703a:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:139

                display.setCursor(1, 20);
                display.print(F("LONGITUDE "));
    703e:	6f e7       	ldi	r22, 0x7F	; 127
    7040:	73 e0       	ldi	r23, 0x03	; 3
    7042:	81 e0       	ldi	r24, 0x01	; 1
    7044:	99 e0       	ldi	r25, 0x09	; 9
    7046:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    704a:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    704e:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7052:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    7056:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:141
                display.setCursor(65, 20);
                display.print(gps.location.lng(), 6);
    705a:	86 e2       	ldi	r24, 0x26	; 38
    705c:	98 e0       	ldi	r25, 0x08	; 8
    705e:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    7062:	ab 01       	movw	r20, r22
    7064:	bc 01       	movw	r22, r24
    7066:	26 e0       	ldi	r18, 0x06	; 6
    7068:	30 e0       	ldi	r19, 0x00	; 0
    706a:	81 e0       	ldi	r24, 0x01	; 1
    706c:	99 e0       	ldi	r25, 0x09	; 9
    706e:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7072:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    7076:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    707a:	7d e1       	ldi	r23, 0x1D	; 29
    707c:	a7 2e       	mov	r10, r23
    707e:	b1 2c       	mov	r11, r1
    7080:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    7084:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:144

                display.setCursor(1, 29);
                display.print(F("ALTITUDE"));
    7088:	66 e7       	ldi	r22, 0x76	; 118
    708a:	73 e0       	ldi	r23, 0x03	; 3
    708c:	81 e0       	ldi	r24, 0x01	; 1
    708e:	99 e0       	ldi	r25, 0x09	; 9
    7090:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7094:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    7098:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    709c:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    70a0:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    70a4:	10 92 81 08 	sts	0x0881, r1	; 0x800881 <gps+0x5b>
_ZN15TinyGPSAltitude6metersEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:181
   double deg()      { return value() / 100.0; }
};

struct TinyGPSAltitude : TinyGPSDecimal
{
   double meters()       { return value() / 100.0; }
    70a8:	60 91 86 08 	lds	r22, 0x0886	; 0x800886 <gps+0x60>
    70ac:	70 91 87 08 	lds	r23, 0x0887	; 0x800887 <gps+0x61>
    70b0:	80 91 88 08 	lds	r24, 0x0888	; 0x800888 <gps+0x62>
    70b4:	90 91 89 08 	lds	r25, 0x0889	; 0x800889 <gps+0x63>
    70b8:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    70bc:	20 e0       	ldi	r18, 0x00	; 0
    70be:	30 e0       	ldi	r19, 0x00	; 0
    70c0:	48 ec       	ldi	r20, 0xC8	; 200
    70c2:	52 e4       	ldi	r21, 0x42	; 66
    70c4:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    70c8:	ab 01       	movw	r20, r22
    70ca:	bc 01       	movw	r22, r24
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:147

                display.setCursor(65, 29);
                display.print(gps.altitude.meters());
    70cc:	22 e0       	ldi	r18, 0x02	; 2
    70ce:	30 e0       	ldi	r19, 0x00	; 0
    70d0:	81 e0       	ldi	r24, 0x01	; 1
    70d2:	99 e0       	ldi	r25, 0x09	; 9
    70d4:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:148
                display.print(F(" m"));
    70d8:	63 e7       	ldi	r22, 0x73	; 115
    70da:	73 e0       	ldi	r23, 0x03	; 3
    70dc:	81 e0       	ldi	r24, 0x01	; 1
    70de:	99 e0       	ldi	r25, 0x09	; 9
    70e0:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    70e4:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    70e8:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    70ec:	e6 e2       	ldi	r30, 0x26	; 38
    70ee:	ae 2e       	mov	r10, r30
    70f0:	b1 2c       	mov	r11, r1
    70f2:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    70f6:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:151

                display.setCursor(1, 38);
                display.print(F("SPEED"));
    70fa:	6d e6       	ldi	r22, 0x6D	; 109
    70fc:	73 e0       	ldi	r23, 0x03	; 3
    70fe:	81 e0       	ldi	r24, 0x01	; 1
    7100:	99 e0       	ldi	r25, 0x09	; 9
    7102:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7106:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    710a:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    710e:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    7112:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    7116:	10 92 65 08 	sts	0x0865, r1	; 0x800865 <gps+0x3f>
_ZN12TinyGPSSpeed4kmphEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:171
struct TinyGPSSpeed : TinyGPSDecimal
{
   double knots()    { return value() / 100.0; }
   double mph()      { return _GPS_MPH_PER_KNOT * value() / 100.0; }
   double mps()      { return _GPS_MPS_PER_KNOT * value() / 100.0; }
   double kmph()     { return _GPS_KMPH_PER_KNOT * value() / 100.0; }
    711a:	60 91 6a 08 	lds	r22, 0x086A	; 0x80086a <gps+0x44>
    711e:	70 91 6b 08 	lds	r23, 0x086B	; 0x80086b <gps+0x45>
    7122:	80 91 6c 08 	lds	r24, 0x086C	; 0x80086c <gps+0x46>
    7126:	90 91 6d 08 	lds	r25, 0x086D	; 0x80086d <gps+0x47>
    712a:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    712e:	26 e5       	ldi	r18, 0x56	; 86
    7130:	3e e0       	ldi	r19, 0x0E	; 14
    7132:	4d ee       	ldi	r20, 0xED	; 237
    7134:	5f e3       	ldi	r21, 0x3F	; 63
    7136:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    713a:	20 e0       	ldi	r18, 0x00	; 0
    713c:	30 e0       	ldi	r19, 0x00	; 0
    713e:	48 ec       	ldi	r20, 0xC8	; 200
    7140:	52 e4       	ldi	r21, 0x42	; 66
    7142:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    7146:	ab 01       	movw	r20, r22
    7148:	bc 01       	movw	r22, r24
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:153
                display.setCursor(65, 38);
                display.print(gps.speed.kmph());
    714a:	22 e0       	ldi	r18, 0x02	; 2
    714c:	30 e0       	ldi	r19, 0x00	; 0
    714e:	81 e0       	ldi	r24, 0x01	; 1
    7150:	99 e0       	ldi	r25, 0x09	; 9
    7152:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:154
                display.print(F(" Km/h"));
    7156:	67 e6       	ldi	r22, 0x67	; 103
    7158:	73 e0       	ldi	r23, 0x03	; 3
    715a:	81 e0       	ldi	r24, 0x01	; 1
    715c:	99 e0       	ldi	r25, 0x09	; 9
    715e:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7162:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    7166:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    716a:	cf e2       	ldi	r28, 0x2F	; 47
    716c:	d0 e0       	ldi	r29, 0x00	; 0
    716e:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    7172:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:157

                display.setCursor(1, 47);
                display.print(F("SATELLITE"));
    7176:	6d e5       	ldi	r22, 0x5D	; 93
    7178:	73 e0       	ldi	r23, 0x03	; 3
    717a:	81 e0       	ldi	r24, 0x01	; 1
    717c:	99 e0       	ldi	r25, 0x09	; 9
    717e:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7182:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    7186:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    718a:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    718e:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   uint32_t value()        { updated = false; return val; }
    7192:	10 92 8f 08 	sts	0x088F, r1	; 0x80088f <gps+0x69>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:160

                display.setCursor(65, 47);
                display.print(gps.satellites.value());
    7196:	40 91 94 08 	lds	r20, 0x0894	; 0x800894 <gps+0x6e>
    719a:	50 91 95 08 	lds	r21, 0x0895	; 0x800895 <gps+0x6f>
    719e:	60 91 96 08 	lds	r22, 0x0896	; 0x800896 <gps+0x70>
    71a2:	70 91 97 08 	lds	r23, 0x0897	; 0x800897 <gps+0x71>
    71a6:	2a e0       	ldi	r18, 0x0A	; 10
    71a8:	30 e0       	ldi	r19, 0x00	; 0
    71aa:	81 e0       	ldi	r24, 0x01	; 1
    71ac:	99 e0       	ldi	r25, 0x09	; 9
    71ae:	0e 94 03 6f 	call	0xde06	; 0xde06 <Print::print(unsigned long, int)>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
    71b2:	10 92 8f 08 	sts	0x088F, r1	; 0x80088f <gps+0x69>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:162

                if (gps.satellites.value() <= 4) {
    71b6:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <gps+0x6e>
    71ba:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <gps+0x6f>
    71be:	a0 91 96 08 	lds	r26, 0x0896	; 0x800896 <gps+0x70>
    71c2:	b0 91 97 08 	lds	r27, 0x0897	; 0x800897 <gps+0x71>
    71c6:	05 97       	sbiw	r24, 0x05	; 5
    71c8:	a1 05       	cpc	r26, r1
    71ca:	b1 05       	cpc	r27, r1
    71cc:	08 f0       	brcs	.+2      	; 0x71d0 <GPSMenu()+0x556>
    71ce:	b3 c0       	rjmp	.+358    	; 0x7336 <GPSMenu()+0x6bc>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:163
                        if (gps_var.show_question_mark)
    71d0:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    71d4:	88 23       	and	r24, r24
    71d6:	09 f4       	brne	.+2      	; 0x71da <GPSMenu()+0x560>
    71d8:	a8 c0       	rjmp	.+336    	; 0x732a <GPSMenu()+0x6b0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:164
                                display.drawBitmap(80, 47, mini_satellite_icon,
    71da:	cc 24       	eor	r12, r12
    71dc:	c3 94       	inc	r12
    71de:	d1 2c       	mov	r13, r1
    71e0:	37 e0       	ldi	r19, 0x07	; 7
    71e2:	e3 2e       	mov	r14, r19
    71e4:	f1 2c       	mov	r15, r1
    71e6:	0d e0       	ldi	r16, 0x0D	; 13
    71e8:	10 e0       	ldi	r17, 0x00	; 0
    71ea:	22 eb       	ldi	r18, 0xB2	; 178
    71ec:	37 e0       	ldi	r19, 0x07	; 7
    71ee:	4f e2       	ldi	r20, 0x2F	; 47
    71f0:	50 e0       	ldi	r21, 0x00	; 0
    71f2:	60 e5       	ldi	r22, 0x50	; 80
    71f4:	70 e0       	ldi	r23, 0x00	; 0
    71f6:	81 e0       	ldi	r24, 0x01	; 1
    71f8:	99 e0       	ldi	r25, 0x09	; 9
    71fa:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:168
                                                   13, 7, 1);
                        else
                                display.print(' ');
                        gps_var.show_question_mark = !gps_var.show_question_mark;
    71fe:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    7202:	91 e0       	ldi	r25, 0x01	; 1
    7204:	89 27       	eor	r24, r25
    7206:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    720a:	81 e0       	ldi	r24, 0x01	; 1
    720c:	90 e0       	ldi	r25, 0x00	; 0
    720e:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    7212:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7216:	c8 e3       	ldi	r28, 0x38	; 56
    7218:	d0 e0       	ldi	r29, 0x00	; 0
    721a:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    721e:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    7222:	10 92 73 08 	sts	0x0873, r1	; 0x800873 <gps+0x4d>
_ZN13TinyGPSCourse3degEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:176
   double kmph()     { return _GPS_KMPH_PER_KNOT * value() / 100.0; }
};

struct TinyGPSCourse : public TinyGPSDecimal
{
   double deg()      { return value() / 100.0; }
    7226:	60 91 78 08 	lds	r22, 0x0878	; 0x800878 <gps+0x52>
    722a:	70 91 79 08 	lds	r23, 0x0879	; 0x800879 <gps+0x53>
    722e:	80 91 7a 08 	lds	r24, 0x087A	; 0x80087a <gps+0x54>
    7232:	90 91 7b 08 	lds	r25, 0x087B	; 0x80087b <gps+0x55>
    7236:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    723a:	20 e0       	ldi	r18, 0x00	; 0
    723c:	30 e0       	ldi	r19, 0x00	; 0
    723e:	48 ec       	ldi	r20, 0xC8	; 200
    7240:	52 e4       	ldi	r21, 0x42	; 66
    7242:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    7246:	ab 01       	movw	r20, r22
    7248:	bc 01       	movw	r22, r24
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:174
                }
                else
                        display.drawBitmap(80, 47, mini_satellite_icon, 13, 7, 1); /* Draw Mini Satellite */

                display.setCursor(1, 56);
                display.print(gps.course.deg());
    724a:	22 e0       	ldi	r18, 0x02	; 2
    724c:	30 e0       	ldi	r19, 0x00	; 0
    724e:	81 e0       	ldi	r24, 0x01	; 1
    7250:	99 e0       	ldi	r25, 0x09	; 9
    7252:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:175
                display.print(F("deg"));
    7256:	69 e5       	ldi	r22, 0x59	; 89
    7258:	73 e0       	ldi	r23, 0x03	; 3
    725a:	81 e0       	ldi	r24, 0x01	; 1
    725c:	99 e0       	ldi	r25, 0x09	; 9
    725e:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7262:	81 e4       	ldi	r24, 0x41	; 65
    7264:	90 e0       	ldi	r25, 0x00	; 0
    7266:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    726a:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    726e:	d0 93 10 09 	sts	0x0910, r29	; 0x800910 <display+0xf>
    7272:	c0 93 0f 09 	sts	0x090F, r28	; 0x80090f <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:177
                display.setCursor(65, 56);
                display.print(F("HDOP "));
    7276:	63 e5       	ldi	r22, 0x53	; 83
    7278:	73 e0       	ldi	r23, 0x03	; 3
    727a:	81 e0       	ldi	r24, 0x01	; 1
    727c:	99 e0       	ldi	r25, 0x09	; 9
    727e:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    7282:	10 92 9d 08 	sts	0x089D, r1	; 0x80089d <gps+0x77>
_ZN11TinyGPSHDOP4hdopEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:189
   double feet()         { return _GPS_FEET_PER_METER * value() / 100.0; }
};

struct TinyGPSHDOP : TinyGPSDecimal
{
   double hdop() { return value() / 100.0; }
    7286:	60 91 a2 08 	lds	r22, 0x08A2	; 0x8008a2 <gps+0x7c>
    728a:	70 91 a3 08 	lds	r23, 0x08A3	; 0x8008a3 <gps+0x7d>
    728e:	80 91 a4 08 	lds	r24, 0x08A4	; 0x8008a4 <gps+0x7e>
    7292:	90 91 a5 08 	lds	r25, 0x08A5	; 0x8008a5 <gps+0x7f>
    7296:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    729a:	20 e0       	ldi	r18, 0x00	; 0
    729c:	30 e0       	ldi	r19, 0x00	; 0
    729e:	48 ec       	ldi	r20, 0xC8	; 200
    72a0:	52 e4       	ldi	r21, 0x42	; 66
    72a2:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    72a6:	ab 01       	movw	r20, r22
    72a8:	bc 01       	movw	r22, r24
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:178
                display.print(gps.hdop.hdop());
    72aa:	22 e0       	ldi	r18, 0x02	; 2
    72ac:	30 e0       	ldi	r19, 0x00	; 0
    72ae:	81 e0       	ldi	r24, 0x01	; 1
    72b0:	99 e0       	ldi	r25, 0x09	; 9
    72b2:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:181

                /* Show Tip When Acquiring Satellite Took Too Long */
                noReceptionSignal();
    72b6:	0e 94 bc 34 	call	0x6978	; 0x6978 <noReceptionSignal()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:183

                display.display();
    72ba:	81 e0       	ldi	r24, 0x01	; 1
    72bc:	99 e0       	ldi	r25, 0x09	; 9
    72be:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   uint32_t value()        { updated = false; return val; }
    72c2:	10 92 8f 08 	sts	0x088F, r1	; 0x80088f <gps+0x69>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:185

                if (gps.satellites.value() == 0)
    72c6:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <gps+0x6e>
    72ca:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <gps+0x6f>
    72ce:	a0 91 96 08 	lds	r26, 0x0896	; 0x800896 <gps+0x70>
    72d2:	b0 91 97 08 	lds	r27, 0x0897	; 0x800897 <gps+0x71>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:186
                        digitalWrite(USR_LED_1, HIGH);
    72d6:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:185
                /* Show Tip When Acquiring Satellite Took Too Long */
                noReceptionSignal();

                display.display();

                if (gps.satellites.value() == 0)
    72d8:	89 2b       	or	r24, r25
    72da:	8a 2b       	or	r24, r26
    72dc:	8b 2b       	or	r24, r27
    72de:	09 f0       	breq	.+2      	; 0x72e2 <GPSMenu()+0x668>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:188
                        digitalWrite(USR_LED_1, HIGH);
                else
                        digitalWrite(USR_LED_1, LOW);
    72e0:	60 e0       	ldi	r22, 0x00	; 0
    72e2:	86 e1       	ldi	r24, 0x16	; 22
    72e4:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:191

                /* Show Update Interval Menu */
                while(!digitalRead(B_Pin))
    72e8:	81 e0       	ldi	r24, 0x01	; 1
    72ea:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    72ee:	89 2b       	or	r24, r25
    72f0:	a9 f5       	brne	.+106    	; 0x735c <GPSMenu()+0x6e2>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:192
                        receptionSignalGraphMenu();
    72f2:	0e 94 e1 32 	call	0x65c2	; 0x65c2 <receptionSignalGraphMenu()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:191
                        digitalWrite(USR_LED_1, HIGH);
                else
                        digitalWrite(USR_LED_1, LOW);

                /* Show Update Interval Menu */
                while(!digitalRead(B_Pin))
    72f6:	f8 cf       	rjmp	.-16     	; 0x72e8 <GPSMenu()+0x66e>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:71
                        if (gps_var.show_question_mark) {
                                display.fillRect(0, 0, 128, 9, WHITE);
                                display.setTextColor(BLACK);
                                display.print(F("ACQUIRING SATELLITES"));
                        } else {
                                display.fillRect(0, 0, 128, 9, BLACK);
    72f8:	f1 2c       	mov	r15, r1
    72fa:	e1 2c       	mov	r14, r1
    72fc:	09 e0       	ldi	r16, 0x09	; 9
    72fe:	10 e0       	ldi	r17, 0x00	; 0
    7300:	20 e8       	ldi	r18, 0x80	; 128
    7302:	30 e0       	ldi	r19, 0x00	; 0
    7304:	50 e0       	ldi	r21, 0x00	; 0
    7306:	40 e0       	ldi	r20, 0x00	; 0
    7308:	70 e0       	ldi	r23, 0x00	; 0
    730a:	60 e0       	ldi	r22, 0x00	; 0
    730c:	81 e0       	ldi	r24, 0x01	; 1
    730e:	99 e0       	ldi	r25, 0x09	; 9
    7310:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    7314:	b0 92 14 09 	sts	0x0914, r11	; 0x800914 <display+0x13>
    7318:	a0 92 13 09 	sts	0x0913, r10	; 0x800913 <display+0x12>
    731c:	b0 92 12 09 	sts	0x0912, r11	; 0x800912 <display+0x11>
    7320:	a0 92 11 09 	sts	0x0911, r10	; 0x800911 <display+0x10>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:73
                                display.setTextColor(WHITE);
                                display.print(F("ACQUIRING SATELLITES"));
    7324:	63 e9       	ldi	r22, 0x93	; 147
    7326:	73 e0       	ldi	r23, 0x03	; 3
    7328:	29 cd       	rjmp	.-1454   	; 0x6d7c <GPSMenu()+0x102>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:167
                if (gps.satellites.value() <= 4) {
                        if (gps_var.show_question_mark)
                                display.drawBitmap(80, 47, mini_satellite_icon,
                                                   13, 7, 1);
                        else
                                display.print(' ');
    732a:	60 e2       	ldi	r22, 0x20	; 32
    732c:	81 e0       	ldi	r24, 0x01	; 1
    732e:	99 e0       	ldi	r25, 0x09	; 9
    7330:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    7334:	64 cf       	rjmp	.-312    	; 0x71fe <GPSMenu()+0x584>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:171
                        gps_var.show_question_mark = !gps_var.show_question_mark;
                }
                else
                        display.drawBitmap(80, 47, mini_satellite_icon, 13, 7, 1); /* Draw Mini Satellite */
    7336:	cc 24       	eor	r12, r12
    7338:	c3 94       	inc	r12
    733a:	d1 2c       	mov	r13, r1
    733c:	97 e0       	ldi	r25, 0x07	; 7
    733e:	e9 2e       	mov	r14, r25
    7340:	f1 2c       	mov	r15, r1
    7342:	0d e0       	ldi	r16, 0x0D	; 13
    7344:	10 e0       	ldi	r17, 0x00	; 0
    7346:	22 eb       	ldi	r18, 0xB2	; 178
    7348:	37 e0       	ldi	r19, 0x07	; 7
    734a:	4f e2       	ldi	r20, 0x2F	; 47
    734c:	50 e0       	ldi	r21, 0x00	; 0
    734e:	60 e5       	ldi	r22, 0x50	; 80
    7350:	70 e0       	ldi	r23, 0x00	; 0
    7352:	81 e0       	ldi	r24, 0x01	; 1
    7354:	99 e0       	ldi	r25, 0x09	; 9
    7356:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
    735a:	57 cf       	rjmp	.-338    	; 0x720a <GPSMenu()+0x590>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:194

                /* Show Update Interval Menu */
                while(!digitalRead(B_Pin))
                        receptionSignalGraphMenu();
        }
}
    735c:	df 91       	pop	r29
    735e:	cf 91       	pop	r28
    7360:	1f 91       	pop	r17
    7362:	0f 91       	pop	r16
    7364:	ff 90       	pop	r15
    7366:	ef 90       	pop	r14
    7368:	df 90       	pop	r13
    736a:	cf 90       	pop	r12
    736c:	bf 90       	pop	r11
    736e:	af 90       	pop	r10
    7370:	9f 90       	pop	r9
    7372:	8f 90       	pop	r8
    7374:	7f 90       	pop	r7
    7376:	08 95       	ret

00007378 <DeviationMap()>:
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:1
void DeviationMap(void) {
    7378:	4f 92       	push	r4
    737a:	5f 92       	push	r5
    737c:	6f 92       	push	r6
    737e:	7f 92       	push	r7
    7380:	af 92       	push	r10
    7382:	bf 92       	push	r11
    7384:	cf 92       	push	r12
    7386:	df 92       	push	r13
    7388:	ef 92       	push	r14
    738a:	ff 92       	push	r15
    738c:	0f 93       	push	r16
    738e:	1f 93       	push	r17
    7390:	cf 93       	push	r28
    7392:	df 93       	push	r29
    7394:	00 d0       	rcall	.+0      	; 0x7396 <DeviationMap()+0x1e>
    7396:	00 d0       	rcall	.+0      	; 0x7398 <DeviationMap()+0x20>
    7398:	cd b7       	in	r28, 0x3d	; 61
    739a:	de b7       	in	r29, 0x3e	; 62
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:3
        /* Draw NEWS */
        display.setTextSize(1);
    739c:	61 e0       	ldi	r22, 0x01	; 1
    739e:	81 e0       	ldi	r24, 0x01	; 1
    73a0:	99 e0       	ldi	r25, 0x09	; 9
    73a2:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    73a6:	81 e0       	ldi	r24, 0x01	; 1
    73a8:	90 e0       	ldi	r25, 0x00	; 0
    73aa:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <display+0x13>
    73ae:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <display+0x12>
    73b2:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <display+0x11>
    73b6:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    73ba:	0e e3       	ldi	r16, 0x3E	; 62
    73bc:	10 e0       	ldi	r17, 0x00	; 0
    73be:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    73c2:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    73c6:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    73ca:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:5
        display.setTextColor(WHITE);
        display.setCursor(62, 1); display.print('^');
    73ce:	6e e5       	ldi	r22, 0x5E	; 94
    73d0:	81 e0       	ldi	r24, 0x01	; 1
    73d2:	99 e0       	ldi	r25, 0x09	; 9
    73d4:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    73d8:	89 e7       	ldi	r24, 0x79	; 121
    73da:	90 e0       	ldi	r25, 0x00	; 0
    73dc:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    73e0:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    73e4:	3d e1       	ldi	r19, 0x1D	; 29
    73e6:	e3 2e       	mov	r14, r19
    73e8:	f1 2c       	mov	r15, r1
    73ea:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    73ee:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:6
        display.setCursor(121, 29); display.print('>');
    73f2:	6e e3       	ldi	r22, 0x3E	; 62
    73f4:	81 e0       	ldi	r24, 0x01	; 1
    73f6:	99 e0       	ldi	r25, 0x09	; 9
    73f8:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    73fc:	81 e0       	ldi	r24, 0x01	; 1
    73fe:	90 e0       	ldi	r25, 0x00	; 0
    7400:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    7404:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7408:	f0 92 10 09 	sts	0x0910, r15	; 0x800910 <display+0xf>
    740c:	e0 92 0f 09 	sts	0x090F, r14	; 0x80090f <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:7
        display.setCursor(1, 29); display.print('<');
    7410:	6c e3       	ldi	r22, 0x3C	; 60
    7412:	81 e0       	ldi	r24, 0x01	; 1
    7414:	99 e0       	ldi	r25, 0x09	; 9
    7416:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    741a:	10 93 0e 09 	sts	0x090E, r17	; 0x80090e <display+0xd>
    741e:	00 93 0d 09 	sts	0x090D, r16	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7422:	89 e3       	ldi	r24, 0x39	; 57
    7424:	90 e0       	ldi	r25, 0x00	; 0
    7426:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    742a:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:8
        display.setCursor(62, 57); display.print('_');
    742e:	6f e5       	ldi	r22, 0x5F	; 95
    7430:	81 e0       	ldi	r24, 0x01	; 1
    7432:	99 e0       	ldi	r25, 0x09	; 9
    7434:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:11

        /* Show Update Satellite Icon */
        display.fillRect(115, 0, 60, 7, BLACK);
    7438:	f1 2c       	mov	r15, r1
    743a:	e1 2c       	mov	r14, r1
    743c:	07 e0       	ldi	r16, 0x07	; 7
    743e:	10 e0       	ldi	r17, 0x00	; 0
    7440:	2c e3       	ldi	r18, 0x3C	; 60
    7442:	30 e0       	ldi	r19, 0x00	; 0
    7444:	50 e0       	ldi	r21, 0x00	; 0
    7446:	40 e0       	ldi	r20, 0x00	; 0
    7448:	63 e7       	ldi	r22, 0x73	; 115
    744a:	70 e0       	ldi	r23, 0x00	; 0
    744c:	81 e0       	ldi	r24, 0x01	; 1
    744e:	99 e0       	ldi	r25, 0x09	; 9
    7450:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:12
        if (gps_var.show_question_mark)
    7454:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    7458:	88 23       	and	r24, r24
    745a:	09 f4       	brne	.+2      	; 0x745e <DeviationMap()+0xe6>
    745c:	67 c1       	rjmp	.+718    	; 0x772c <DeviationMap()+0x3b4>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:13
                display.drawBitmap(115, 0, mini_satellite_icon, 13, 7, 1);
    745e:	cc 24       	eor	r12, r12
    7460:	c3 94       	inc	r12
    7462:	d1 2c       	mov	r13, r1
    7464:	27 e0       	ldi	r18, 0x07	; 7
    7466:	e2 2e       	mov	r14, r18
    7468:	f1 2c       	mov	r15, r1
    746a:	0d e0       	ldi	r16, 0x0D	; 13
    746c:	10 e0       	ldi	r17, 0x00	; 0
    746e:	22 eb       	ldi	r18, 0xB2	; 178
    7470:	37 e0       	ldi	r19, 0x07	; 7
    7472:	50 e0       	ldi	r21, 0x00	; 0
    7474:	40 e0       	ldi	r20, 0x00	; 0
    7476:	63 e7       	ldi	r22, 0x73	; 115
    7478:	70 e0       	ldi	r23, 0x00	; 0
    747a:	81 e0       	ldi	r24, 0x01	; 1
    747c:	99 e0       	ldi	r25, 0x09	; 9
    747e:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:16
        else
                display.print(' ');
        gps_var.show_question_mark = !gps_var.show_question_mark;
    7482:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    7486:	91 e0       	ldi	r25, 0x01	; 1
    7488:	89 27       	eor	r24, r25
    748a:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:19

        /* Get Startup Coordinate for Start Point */
        if (deviMap.deviationMapStartPointFlag) {
    748e:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <deviMap+0x18>
    7492:	88 23       	and	r24, r24
    7494:	31 f1       	breq	.+76     	; 0x74e2 <DeviationMap()+0x16a>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:20
                deviMap.old_latitude = gps.location.lat() * 1e6;
    7496:	86 e2       	ldi	r24, 0x26	; 38
    7498:	98 e0       	ldi	r25, 0x08	; 8
    749a:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
    749e:	20 e0       	ldi	r18, 0x00	; 0
    74a0:	34 e2       	ldi	r19, 0x24	; 36
    74a2:	44 e7       	ldi	r20, 0x74	; 116
    74a4:	59 e4       	ldi	r21, 0x49	; 73
    74a6:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    74aa:	60 93 49 01 	sts	0x0149, r22	; 0x800149 <deviMap>
    74ae:	70 93 4a 01 	sts	0x014A, r23	; 0x80014a <deviMap+0x1>
    74b2:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <deviMap+0x2>
    74b6:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <deviMap+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:21
                deviMap.old_longitude = gps.location.lng() * 1e6;
    74ba:	86 e2       	ldi	r24, 0x26	; 38
    74bc:	98 e0       	ldi	r25, 0x08	; 8
    74be:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    74c2:	20 e0       	ldi	r18, 0x00	; 0
    74c4:	34 e2       	ldi	r19, 0x24	; 36
    74c6:	44 e7       	ldi	r20, 0x74	; 116
    74c8:	59 e4       	ldi	r21, 0x49	; 73
    74ca:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    74ce:	60 93 4d 01 	sts	0x014D, r22	; 0x80014d <deviMap+0x4>
    74d2:	70 93 4e 01 	sts	0x014E, r23	; 0x80014e <deviMap+0x5>
    74d6:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <deviMap+0x6>
    74da:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <deviMap+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:22
                deviMap.deviationMapStartPointFlag = false;
    74de:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <deviMap+0x18>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:26
        }

        /* Get Current Location Coordinate */
        deviMap.new_latitude = gps.location.lat() * 1e6;
    74e2:	86 e2       	ldi	r24, 0x26	; 38
    74e4:	98 e0       	ldi	r25, 0x08	; 8
    74e6:	0e 94 2d 67 	call	0xce5a	; 0xce5a <TinyGPSLocation::lat()>
    74ea:	20 e0       	ldi	r18, 0x00	; 0
    74ec:	34 e2       	ldi	r19, 0x24	; 36
    74ee:	44 e7       	ldi	r20, 0x74	; 116
    74f0:	59 e4       	ldi	r21, 0x49	; 73
    74f2:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    74f6:	60 93 51 01 	sts	0x0151, r22	; 0x800151 <deviMap+0x8>
    74fa:	70 93 52 01 	sts	0x0152, r23	; 0x800152 <deviMap+0x9>
    74fe:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <deviMap+0xa>
    7502:	90 93 54 01 	sts	0x0154, r25	; 0x800154 <deviMap+0xb>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:27
        deviMap.new_longitude = gps.location.lng() * 1e6;
    7506:	86 e2       	ldi	r24, 0x26	; 38
    7508:	98 e0       	ldi	r25, 0x08	; 8
    750a:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    750e:	20 e0       	ldi	r18, 0x00	; 0
    7510:	34 e2       	ldi	r19, 0x24	; 36
    7512:	44 e7       	ldi	r20, 0x74	; 116
    7514:	59 e4       	ldi	r21, 0x49	; 73
    7516:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    751a:	60 93 55 01 	sts	0x0155, r22	; 0x800155 <deviMap+0xc>
    751e:	70 93 56 01 	sts	0x0156, r23	; 0x800156 <deviMap+0xd>
    7522:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <deviMap+0xe>
    7526:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <deviMap+0xf>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    752a:	81 e0       	ldi	r24, 0x01	; 1
    752c:	90 e0       	ldi	r25, 0x00	; 0
    752e:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    7532:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7536:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    753a:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:31

        /* Calculate Distance Between Old and New Coordinate */
        display.setCursor(1, 1);
        display.fillRect(0, 0, 30, 9, BLACK);
    753e:	f1 2c       	mov	r15, r1
    7540:	e1 2c       	mov	r14, r1
    7542:	09 e0       	ldi	r16, 0x09	; 9
    7544:	10 e0       	ldi	r17, 0x00	; 0
    7546:	2e e1       	ldi	r18, 0x1E	; 30
    7548:	30 e0       	ldi	r19, 0x00	; 0
    754a:	50 e0       	ldi	r21, 0x00	; 0
    754c:	40 e0       	ldi	r20, 0x00	; 0
    754e:	70 e0       	ldi	r23, 0x00	; 0
    7550:	60 e0       	ldi	r22, 0x00	; 0
    7552:	81 e0       	ldi	r24, 0x01	; 1
    7554:	99 e0       	ldi	r25, 0x09	; 9
    7556:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:32
        display.print(gps.distanceBetween(deviMap.old_latitude / 1e6,
    755a:	20 e0       	ldi	r18, 0x00	; 0
    755c:	34 e2       	ldi	r19, 0x24	; 36
    755e:	44 e7       	ldi	r20, 0x74	; 116
    7560:	59 e4       	ldi	r21, 0x49	; 73
    7562:	60 91 55 01 	lds	r22, 0x0155	; 0x800155 <deviMap+0xc>
    7566:	70 91 56 01 	lds	r23, 0x0156	; 0x800156 <deviMap+0xd>
    756a:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <deviMap+0xe>
    756e:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <deviMap+0xf>
    7572:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    7576:	5b 01       	movw	r10, r22
    7578:	6c 01       	movw	r12, r24
    757a:	20 e0       	ldi	r18, 0x00	; 0
    757c:	34 e2       	ldi	r19, 0x24	; 36
    757e:	44 e7       	ldi	r20, 0x74	; 116
    7580:	59 e4       	ldi	r21, 0x49	; 73
    7582:	60 91 51 01 	lds	r22, 0x0151	; 0x800151 <deviMap+0x8>
    7586:	70 91 52 01 	lds	r23, 0x0152	; 0x800152 <deviMap+0x9>
    758a:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <deviMap+0xa>
    758e:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <deviMap+0xb>
    7592:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    7596:	2b 01       	movw	r4, r22
    7598:	3c 01       	movw	r6, r24
    759a:	20 e0       	ldi	r18, 0x00	; 0
    759c:	34 e2       	ldi	r19, 0x24	; 36
    759e:	44 e7       	ldi	r20, 0x74	; 116
    75a0:	59 e4       	ldi	r21, 0x49	; 73
    75a2:	60 91 4d 01 	lds	r22, 0x014D	; 0x80014d <deviMap+0x4>
    75a6:	70 91 4e 01 	lds	r23, 0x014E	; 0x80014e <deviMap+0x5>
    75aa:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <deviMap+0x6>
    75ae:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <deviMap+0x7>
    75b2:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    75b6:	69 83       	std	Y+1, r22	; 0x01
    75b8:	7a 83       	std	Y+2, r23	; 0x02
    75ba:	8b 83       	std	Y+3, r24	; 0x03
    75bc:	9c 83       	std	Y+4, r25	; 0x04
    75be:	20 e0       	ldi	r18, 0x00	; 0
    75c0:	34 e2       	ldi	r19, 0x24	; 36
    75c2:	44 e7       	ldi	r20, 0x74	; 116
    75c4:	59 e4       	ldi	r21, 0x49	; 73
    75c6:	60 91 49 01 	lds	r22, 0x0149	; 0x800149 <deviMap>
    75ca:	70 91 4a 01 	lds	r23, 0x014A	; 0x80014a <deviMap+0x1>
    75ce:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <deviMap+0x2>
    75d2:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <deviMap+0x3>
    75d6:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    75da:	83 01       	movw	r16, r6
    75dc:	72 01       	movw	r14, r4
    75de:	29 81       	ldd	r18, Y+1	; 0x01
    75e0:	3a 81       	ldd	r19, Y+2	; 0x02
    75e2:	4b 81       	ldd	r20, Y+3	; 0x03
    75e4:	5c 81       	ldd	r21, Y+4	; 0x04
    75e6:	0e 94 39 65 	call	0xca72	; 0xca72 <TinyGPSPlus::distanceBetween(double, double, double, double)>
    75ea:	ab 01       	movw	r20, r22
    75ec:	bc 01       	movw	r22, r24
    75ee:	22 e0       	ldi	r18, 0x02	; 2
    75f0:	30 e0       	ldi	r19, 0x00	; 0
    75f2:	81 e0       	ldi	r24, 0x01	; 1
    75f4:	99 e0       	ldi	r25, 0x09	; 9
    75f6:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:36
                                          deviMap.old_longitude / 1e6,
                                          deviMap.new_latitude / 1e6,
                                          deviMap.new_longitude / 1e6));
        display.print('m');
    75fa:	6d e6       	ldi	r22, 0x6D	; 109
    75fc:	81 e0       	ldi	r24, 0x01	; 1
    75fe:	99 e0       	ldi	r25, 0x09	; 9
    7600:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
    7604:	10 92 8f 08 	sts	0x088F, r1	; 0x80088f <gps+0x69>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:39

        /* In case no GPS connected */
        if (gps.satellites.value() == 0) {
    7608:	80 91 94 08 	lds	r24, 0x0894	; 0x800894 <gps+0x6e>
    760c:	90 91 95 08 	lds	r25, 0x0895	; 0x800895 <gps+0x6f>
    7610:	a0 91 96 08 	lds	r26, 0x0896	; 0x800896 <gps+0x70>
    7614:	b0 91 97 08 	lds	r27, 0x0897	; 0x800897 <gps+0x71>
    7618:	89 2b       	or	r24, r25
    761a:	8a 2b       	or	r24, r26
    761c:	8b 2b       	or	r24, r27
    761e:	09 f0       	breq	.+2      	; 0x7622 <DeviationMap()+0x2aa>
    7620:	8b c0       	rjmp	.+278    	; 0x7738 <DeviationMap()+0x3c0>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:40
                display.fillRect(42, 28, 43, 9, WHITE);
    7622:	ee 24       	eor	r14, r14
    7624:	e3 94       	inc	r14
    7626:	f1 2c       	mov	r15, r1
    7628:	09 e0       	ldi	r16, 0x09	; 9
    762a:	10 e0       	ldi	r17, 0x00	; 0
    762c:	2b e2       	ldi	r18, 0x2B	; 43
    762e:	30 e0       	ldi	r19, 0x00	; 0
    7630:	4c e1       	ldi	r20, 0x1C	; 28
    7632:	50 e0       	ldi	r21, 0x00	; 0
    7634:	6a e2       	ldi	r22, 0x2A	; 42
    7636:	70 e0       	ldi	r23, 0x00	; 0
    7638:	81 e0       	ldi	r24, 0x01	; 1
    763a:	99 e0       	ldi	r25, 0x09	; 9
    763c:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    7640:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    7644:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    7648:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    764c:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7650:	8b e2       	ldi	r24, 0x2B	; 43
    7652:	90 e0       	ldi	r25, 0x00	; 0
    7654:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    7658:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    765c:	8d e1       	ldi	r24, 0x1D	; 29
    765e:	90 e0       	ldi	r25, 0x00	; 0
    7660:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    7664:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:43
                display.setTextColor(BLACK);
                display.setCursor(43, 29);
                display.print(F("NO DATA"));
    7668:	65 e1       	ldi	r22, 0x15	; 21
    766a:	74 e0       	ldi	r23, 0x04	; 4
    766c:	81 e0       	ldi	r24, 0x01	; 1
    766e:	99 e0       	ldi	r25, 0x09	; 9
    7670:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:68
                                   deviMap.y_point + deviMap.y_change, 1, WHITE);
                delay(10); display.display();
        }

        /* Calculate Screen Point from Updating Coordinate */
        deviMap.x_change = deviMap.new_latitude - deviMap.old_latitude;
    7674:	c0 90 51 01 	lds	r12, 0x0151	; 0x800151 <deviMap+0x8>
    7678:	d0 90 52 01 	lds	r13, 0x0152	; 0x800152 <deviMap+0x9>
    767c:	e0 90 53 01 	lds	r14, 0x0153	; 0x800153 <deviMap+0xa>
    7680:	f0 90 54 01 	lds	r15, 0x0154	; 0x800154 <deviMap+0xb>
    7684:	20 91 49 01 	lds	r18, 0x0149	; 0x800149 <deviMap>
    7688:	30 91 4a 01 	lds	r19, 0x014A	; 0x80014a <deviMap+0x1>
    768c:	40 91 4b 01 	lds	r20, 0x014B	; 0x80014b <deviMap+0x2>
    7690:	50 91 4c 01 	lds	r21, 0x014C	; 0x80014c <deviMap+0x3>
    7694:	c7 01       	movw	r24, r14
    7696:	b6 01       	movw	r22, r12
    7698:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    769c:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    76a0:	70 93 5e 01 	sts	0x015E, r23	; 0x80015e <deviMap+0x15>
    76a4:	60 93 5d 01 	sts	0x015D, r22	; 0x80015d <deviMap+0x14>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:69
        deviMap.y_change = deviMap.new_longitude - deviMap.old_longitude;
    76a8:	40 90 55 01 	lds	r4, 0x0155	; 0x800155 <deviMap+0xc>
    76ac:	50 90 56 01 	lds	r5, 0x0156	; 0x800156 <deviMap+0xd>
    76b0:	60 90 57 01 	lds	r6, 0x0157	; 0x800157 <deviMap+0xe>
    76b4:	70 90 58 01 	lds	r7, 0x0158	; 0x800158 <deviMap+0xf>
    76b8:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <deviMap+0x4>
    76bc:	30 91 4e 01 	lds	r19, 0x014E	; 0x80014e <deviMap+0x5>
    76c0:	40 91 4f 01 	lds	r20, 0x014F	; 0x80014f <deviMap+0x6>
    76c4:	50 91 50 01 	lds	r21, 0x0150	; 0x800150 <deviMap+0x7>
    76c8:	c3 01       	movw	r24, r6
    76ca:	b2 01       	movw	r22, r4
    76cc:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    76d0:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    76d4:	70 93 60 01 	sts	0x0160, r23	; 0x800160 <deviMap+0x17>
    76d8:	60 93 5f 01 	sts	0x015F, r22	; 0x80015f <deviMap+0x16>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:72

        /* Update Old Coordinate with New Coordinate */
        deviMap.old_latitude = deviMap.new_latitude;
    76dc:	c0 92 49 01 	sts	0x0149, r12	; 0x800149 <deviMap>
    76e0:	d0 92 4a 01 	sts	0x014A, r13	; 0x80014a <deviMap+0x1>
    76e4:	e0 92 4b 01 	sts	0x014B, r14	; 0x80014b <deviMap+0x2>
    76e8:	f0 92 4c 01 	sts	0x014C, r15	; 0x80014c <deviMap+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:73
        deviMap.old_longitude = deviMap.new_longitude;
    76ec:	40 92 4d 01 	sts	0x014D, r4	; 0x80014d <deviMap+0x4>
    76f0:	50 92 4e 01 	sts	0x014E, r5	; 0x80014e <deviMap+0x5>
    76f4:	60 92 4f 01 	sts	0x014F, r6	; 0x80014f <deviMap+0x6>
    76f8:	70 92 50 01 	sts	0x0150, r7	; 0x800150 <deviMap+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:75

        display.display();
    76fc:	81 e0       	ldi	r24, 0x01	; 1
    76fe:	99 e0       	ldi	r25, 0x09	; 9
    7700:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:77
        decodeGPSNMEA(1000); /* Decode GPS Data */
}
    7704:	0f 90       	pop	r0
    7706:	0f 90       	pop	r0
    7708:	0f 90       	pop	r0
    770a:	0f 90       	pop	r0
    770c:	df 91       	pop	r29
    770e:	cf 91       	pop	r28
    7710:	1f 91       	pop	r17
    7712:	0f 91       	pop	r16
    7714:	ff 90       	pop	r15
    7716:	ef 90       	pop	r14
    7718:	df 90       	pop	r13
    771a:	cf 90       	pop	r12
    771c:	bf 90       	pop	r11
    771e:	af 90       	pop	r10
    7720:	7f 90       	pop	r7
    7722:	6f 90       	pop	r6
    7724:	5f 90       	pop	r5
    7726:	4f 90       	pop	r4
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:76
        /* Update Old Coordinate with New Coordinate */
        deviMap.old_latitude = deviMap.new_latitude;
        deviMap.old_longitude = deviMap.new_longitude;

        display.display();
        decodeGPSNMEA(1000); /* Decode GPS Data */
    7728:	0c 94 37 29 	jmp	0x526e	; 0x526e <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:15
        /* Show Update Satellite Icon */
        display.fillRect(115, 0, 60, 7, BLACK);
        if (gps_var.show_question_mark)
                display.drawBitmap(115, 0, mini_satellite_icon, 13, 7, 1);
        else
                display.print(' ');
    772c:	60 e2       	ldi	r22, 0x20	; 32
    772e:	81 e0       	ldi	r24, 0x01	; 1
    7730:	99 e0       	ldi	r25, 0x09	; 9
    7732:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    7736:	a5 ce       	rjmp	.-694    	; 0x7482 <DeviationMap()+0x10a>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:46
                display.setTextColor(BLACK);
                display.setCursor(43, 29);
                display.print(F("NO DATA"));
        }else{
                /* Draw Grid */
                for (int x = 7; x <= 121; x++) {
    7738:	87 e0       	ldi	r24, 0x07	; 7
    773a:	90 e0       	ldi	r25, 0x00	; 0
    773c:	9a 83       	std	Y+2, r25	; 0x02
    773e:	89 83       	std	Y+1, r24	; 0x01
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:48
                        display.drawPixel(x, 32, logic.lastState);
                        logic.lastState = !logic.lastState;
    7740:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:47 (discriminator 2)
                display.setCursor(43, 29);
                display.print(F("NO DATA"));
        }else{
                /* Draw Grid */
                for (int x = 7; x <= 121; x++) {
                        display.drawPixel(x, 32, logic.lastState);
    7742:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    7746:	30 e0       	ldi	r19, 0x00	; 0
    7748:	40 e2       	ldi	r20, 0x20	; 32
    774a:	50 e0       	ldi	r21, 0x00	; 0
    774c:	69 81       	ldd	r22, Y+1	; 0x01
    774e:	7a 81       	ldd	r23, Y+2	; 0x02
    7750:	81 e0       	ldi	r24, 0x01	; 1
    7752:	99 e0       	ldi	r25, 0x09	; 9
    7754:	0e 94 60 4c 	call	0x98c0	; 0x98c0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:48 (discriminator 2)
                        logic.lastState = !logic.lastState;
    7758:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    775c:	81 27       	eor	r24, r17
    775e:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:46 (discriminator 2)
                display.setTextColor(BLACK);
                display.setCursor(43, 29);
                display.print(F("NO DATA"));
        }else{
                /* Draw Grid */
                for (int x = 7; x <= 121; x++) {
    7762:	89 81       	ldd	r24, Y+1	; 0x01
    7764:	9a 81       	ldd	r25, Y+2	; 0x02
    7766:	01 96       	adiw	r24, 0x01	; 1
    7768:	9a 83       	std	Y+2, r25	; 0x02
    776a:	89 83       	std	Y+1, r24	; 0x01
    776c:	8a 37       	cpi	r24, 0x7A	; 122
    776e:	91 05       	cpc	r25, r1
    7770:	41 f7       	brne	.-48     	; 0x7742 <DeviationMap()+0x3ca>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:50
                        display.drawPixel(x, 32, logic.lastState);
                        logic.lastState = !logic.lastState;
                }
                for (int y = 7; y <= 56; y++) {
    7772:	87 e0       	ldi	r24, 0x07	; 7
    7774:	90 e0       	ldi	r25, 0x00	; 0
    7776:	9a 83       	std	Y+2, r25	; 0x02
    7778:	89 83       	std	Y+1, r24	; 0x01
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:52
                        display.drawPixel(64, y, logic.lastState);
                        logic.lastState = !logic.lastState;
    777a:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:51 (discriminator 2)
                for (int x = 7; x <= 121; x++) {
                        display.drawPixel(x, 32, logic.lastState);
                        logic.lastState = !logic.lastState;
                }
                for (int y = 7; y <= 56; y++) {
                        display.drawPixel(64, y, logic.lastState);
    777c:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    7780:	30 e0       	ldi	r19, 0x00	; 0
    7782:	49 81       	ldd	r20, Y+1	; 0x01
    7784:	5a 81       	ldd	r21, Y+2	; 0x02
    7786:	60 e4       	ldi	r22, 0x40	; 64
    7788:	70 e0       	ldi	r23, 0x00	; 0
    778a:	81 e0       	ldi	r24, 0x01	; 1
    778c:	99 e0       	ldi	r25, 0x09	; 9
    778e:	0e 94 60 4c 	call	0x98c0	; 0x98c0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:52 (discriminator 2)
                        logic.lastState = !logic.lastState;
    7792:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    7796:	81 27       	eor	r24, r17
    7798:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:50 (discriminator 2)
                /* Draw Grid */
                for (int x = 7; x <= 121; x++) {
                        display.drawPixel(x, 32, logic.lastState);
                        logic.lastState = !logic.lastState;
                }
                for (int y = 7; y <= 56; y++) {
    779c:	89 81       	ldd	r24, Y+1	; 0x01
    779e:	9a 81       	ldd	r25, Y+2	; 0x02
    77a0:	01 96       	adiw	r24, 0x01	; 1
    77a2:	9a 83       	std	Y+2, r25	; 0x02
    77a4:	89 83       	std	Y+1, r24	; 0x01
    77a6:	c9 97       	sbiw	r24, 0x39	; 57
    77a8:	49 f7       	brne	.-46     	; 0x777c <DeviationMap()+0x404>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:56
                        display.drawPixel(64, y, logic.lastState);
                        logic.lastState = !logic.lastState;
                }

                /* Draw Point Respond to Update Coordinate */
                display.fillCircle(deviMap.x_point + deviMap.x_change,
    77aa:	40 91 5b 01 	lds	r20, 0x015B	; 0x80015b <deviMap+0x12>
    77ae:	50 91 5c 01 	lds	r21, 0x015C	; 0x80015c <deviMap+0x13>
    77b2:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <deviMap+0x16>
    77b6:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <deviMap+0x17>
    77ba:	48 0f       	add	r20, r24
    77bc:	59 1f       	adc	r21, r25
    77be:	60 91 59 01 	lds	r22, 0x0159	; 0x800159 <deviMap+0x10>
    77c2:	70 91 5a 01 	lds	r23, 0x015A	; 0x80015a <deviMap+0x11>
    77c6:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <deviMap+0x14>
    77ca:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <deviMap+0x15>
    77ce:	68 0f       	add	r22, r24
    77d0:	79 1f       	adc	r23, r25
    77d2:	01 e0       	ldi	r16, 0x01	; 1
    77d4:	10 e0       	ldi	r17, 0x00	; 0
    77d6:	21 e0       	ldi	r18, 0x01	; 1
    77d8:	30 e0       	ldi	r19, 0x00	; 0
    77da:	81 e0       	ldi	r24, 0x01	; 1
    77dc:	99 e0       	ldi	r25, 0x09	; 9
    77de:	0e 94 7f 47 	call	0x8efe	; 0x8efe <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:58
                                   deviMap.y_point + deviMap.y_change, 1, WHITE);
                delay(10); display.display();
    77e2:	6a e0       	ldi	r22, 0x0A	; 10
    77e4:	70 e0       	ldi	r23, 0x00	; 0
    77e6:	80 e0       	ldi	r24, 0x00	; 0
    77e8:	90 e0       	ldi	r25, 0x00	; 0
    77ea:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    77ee:	81 e0       	ldi	r24, 0x01	; 1
    77f0:	99 e0       	ldi	r25, 0x09	; 9
    77f2:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:59
                display.fillCircle(deviMap.x_point + deviMap.x_change,
    77f6:	40 91 5b 01 	lds	r20, 0x015B	; 0x80015b <deviMap+0x12>
    77fa:	50 91 5c 01 	lds	r21, 0x015C	; 0x80015c <deviMap+0x13>
    77fe:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <deviMap+0x16>
    7802:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <deviMap+0x17>
    7806:	48 0f       	add	r20, r24
    7808:	59 1f       	adc	r21, r25
    780a:	60 91 59 01 	lds	r22, 0x0159	; 0x800159 <deviMap+0x10>
    780e:	70 91 5a 01 	lds	r23, 0x015A	; 0x80015a <deviMap+0x11>
    7812:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <deviMap+0x14>
    7816:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <deviMap+0x15>
    781a:	68 0f       	add	r22, r24
    781c:	79 1f       	adc	r23, r25
    781e:	10 e0       	ldi	r17, 0x00	; 0
    7820:	00 e0       	ldi	r16, 0x00	; 0
    7822:	21 e0       	ldi	r18, 0x01	; 1
    7824:	30 e0       	ldi	r19, 0x00	; 0
    7826:	81 e0       	ldi	r24, 0x01	; 1
    7828:	99 e0       	ldi	r25, 0x09	; 9
    782a:	0e 94 7f 47 	call	0x8efe	; 0x8efe <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:61
                                   deviMap.y_point + deviMap.y_change, 1, BLACK);
                delay(10); display.display();
    782e:	6a e0       	ldi	r22, 0x0A	; 10
    7830:	70 e0       	ldi	r23, 0x00	; 0
    7832:	80 e0       	ldi	r24, 0x00	; 0
    7834:	90 e0       	ldi	r25, 0x00	; 0
    7836:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    783a:	81 e0       	ldi	r24, 0x01	; 1
    783c:	99 e0       	ldi	r25, 0x09	; 9
    783e:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:62
                display.fillCircle(deviMap.x_point + deviMap.x_change,
    7842:	40 91 5b 01 	lds	r20, 0x015B	; 0x80015b <deviMap+0x12>
    7846:	50 91 5c 01 	lds	r21, 0x015C	; 0x80015c <deviMap+0x13>
    784a:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <deviMap+0x16>
    784e:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <deviMap+0x17>
    7852:	48 0f       	add	r20, r24
    7854:	59 1f       	adc	r21, r25
    7856:	60 91 59 01 	lds	r22, 0x0159	; 0x800159 <deviMap+0x10>
    785a:	70 91 5a 01 	lds	r23, 0x015A	; 0x80015a <deviMap+0x11>
    785e:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <deviMap+0x14>
    7862:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <deviMap+0x15>
    7866:	68 0f       	add	r22, r24
    7868:	79 1f       	adc	r23, r25
    786a:	01 e0       	ldi	r16, 0x01	; 1
    786c:	10 e0       	ldi	r17, 0x00	; 0
    786e:	21 e0       	ldi	r18, 0x01	; 1
    7870:	30 e0       	ldi	r19, 0x00	; 0
    7872:	81 e0       	ldi	r24, 0x01	; 1
    7874:	99 e0       	ldi	r25, 0x09	; 9
    7876:	0e 94 7f 47 	call	0x8efe	; 0x8efe <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:64
                                   deviMap.y_point + deviMap.y_change, 1, WHITE);
                delay(10); display.display();
    787a:	6a e0       	ldi	r22, 0x0A	; 10
    787c:	70 e0       	ldi	r23, 0x00	; 0
    787e:	80 e0       	ldi	r24, 0x00	; 0
    7880:	90 e0       	ldi	r25, 0x00	; 0
    7882:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    7886:	81 e0       	ldi	r24, 0x01	; 1
    7888:	99 e0       	ldi	r25, 0x09	; 9
    788a:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
    788e:	f2 ce       	rjmp	.-540    	; 0x7674 <DeviationMap()+0x2fc>

00007890 <AltitudeMenu()>:
_Z12AltitudeMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:1
void AltitudeMenu(void) {
    7890:	af 92       	push	r10
    7892:	bf 92       	push	r11
    7894:	cf 92       	push	r12
    7896:	df 92       	push	r13
    7898:	ef 92       	push	r14
    789a:	ff 92       	push	r15
    789c:	0f 93       	push	r16
    789e:	1f 93       	push	r17
    78a0:	cf 93       	push	r28
    78a2:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:3
  /* Reset Graph */
  if (altitude_graph.x_increment > 128) {
    78a4:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <altitude_graph+0x2>
    78a8:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <altitude_graph+0x3>
    78ac:	81 38       	cpi	r24, 0x81	; 129
    78ae:	91 05       	cpc	r25, r1
    78b0:	5c f0       	brlt	.+22     	; 0x78c8 <AltitudeMenu()+0x38>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:4
    altitude_graph.x_increment = 0;
    78b2:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <altitude_graph+0x3>
    78b6:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <altitude_graph+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:5
    altitude_graph.drawMesh = true;
    78ba:	81 e0       	ldi	r24, 0x01	; 1
    78bc:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <altitude_graph+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:6
    display.clearDisplay();
    78c0:	81 e0       	ldi	r24, 0x01	; 1
    78c2:	99 e0       	ldi	r25, 0x09	; 9
    78c4:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:8
  }
  display.fillRect(0, 0, 128, 9, WHITE);
    78c8:	ee 24       	eor	r14, r14
    78ca:	e3 94       	inc	r14
    78cc:	f1 2c       	mov	r15, r1
    78ce:	09 e0       	ldi	r16, 0x09	; 9
    78d0:	10 e0       	ldi	r17, 0x00	; 0
    78d2:	20 e8       	ldi	r18, 0x80	; 128
    78d4:	30 e0       	ldi	r19, 0x00	; 0
    78d6:	50 e0       	ldi	r21, 0x00	; 0
    78d8:	40 e0       	ldi	r20, 0x00	; 0
    78da:	70 e0       	ldi	r23, 0x00	; 0
    78dc:	60 e0       	ldi	r22, 0x00	; 0
    78de:	81 e0       	ldi	r24, 0x01	; 1
    78e0:	99 e0       	ldi	r25, 0x09	; 9
    78e2:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:9
  display.setTextSize(1);
    78e6:	61 e0       	ldi	r22, 0x01	; 1
    78e8:	81 e0       	ldi	r24, 0x01	; 1
    78ea:	99 e0       	ldi	r25, 0x09	; 9
    78ec:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    78f0:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <display+0x13>
    78f4:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <display+0x12>
    78f8:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <display+0x11>
    78fc:	10 92 11 09 	sts	0x0911, r1	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7900:	85 e1       	ldi	r24, 0x15	; 21
    7902:	90 e0       	ldi	r25, 0x00	; 0
    7904:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    7908:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    790c:	81 e0       	ldi	r24, 0x01	; 1
    790e:	90 e0       	ldi	r25, 0x00	; 0
    7910:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    7914:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_Z12AltitudeMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:11
  display.setTextColor(BLACK);
  display.setCursor(21, 1); display.print(F("ALTITUDE GRAPH"));
    7918:	6b e5       	ldi	r22, 0x5B	; 91
    791a:	74 e0       	ldi	r23, 0x04	; 4
    791c:	81 e0       	ldi	r24, 0x01	; 1
    791e:	99 e0       	ldi	r25, 0x09	; 9
    7920:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    7924:	10 92 81 08 	sts	0x0881, r1	; 0x800881 <gps+0x5b>
_ZN15TinyGPSAltitude6metersEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:181
   double deg()      { return value() / 100.0; }
};

struct TinyGPSAltitude : TinyGPSDecimal
{
   double meters()       { return value() / 100.0; }
    7928:	60 91 86 08 	lds	r22, 0x0886	; 0x800886 <gps+0x60>
    792c:	70 91 87 08 	lds	r23, 0x0887	; 0x800887 <gps+0x61>
    7930:	80 91 88 08 	lds	r24, 0x0888	; 0x800888 <gps+0x62>
    7934:	90 91 89 08 	lds	r25, 0x0889	; 0x800889 <gps+0x63>
    7938:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    793c:	20 e0       	ldi	r18, 0x00	; 0
    793e:	30 e0       	ldi	r19, 0x00	; 0
    7940:	48 ec       	ldi	r20, 0xC8	; 200
    7942:	52 e4       	ldi	r21, 0x42	; 66
    7944:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
_Z12AltitudeMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:14

  /* Get Altitude Value from GPS Data */
  altitude_graph.altitude_indicator_new = gps.altitude.meters();
    7948:	60 93 42 01 	sts	0x0142, r22	; 0x800142 <altitude_graph+0xa>
    794c:	70 93 43 01 	sts	0x0143, r23	; 0x800143 <altitude_graph+0xb>
    7950:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <altitude_graph+0xc>
    7954:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <altitude_graph+0xd>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:15
  altitude_graph.y_altitude = altitude_graph.altitude_indicator_new;
    7958:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    795c:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <altitude_graph+0x5>
    7960:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <altitude_graph+0x4>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:18

  /* Draw Altitude Indicator */
  display.fillRect(118, 11, 10, 5, BLACK);
    7964:	f1 2c       	mov	r15, r1
    7966:	e1 2c       	mov	r14, r1
    7968:	05 e0       	ldi	r16, 0x05	; 5
    796a:	10 e0       	ldi	r17, 0x00	; 0
    796c:	2a e0       	ldi	r18, 0x0A	; 10
    796e:	30 e0       	ldi	r19, 0x00	; 0
    7970:	4b e0       	ldi	r20, 0x0B	; 11
    7972:	50 e0       	ldi	r21, 0x00	; 0
    7974:	66 e7       	ldi	r22, 0x76	; 118
    7976:	70 e0       	ldi	r23, 0x00	; 0
    7978:	81 e0       	ldi	r24, 0x01	; 1
    797a:	99 e0       	ldi	r25, 0x09	; 9
    797c:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:19
  if (altitude_graph.altitude_indicator_new > altitude_graph.altitude_indicator_old)
    7980:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <altitude_graph+0x6>
    7984:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <altitude_graph+0x7>
    7988:	40 91 40 01 	lds	r20, 0x0140	; 0x800140 <altitude_graph+0x8>
    798c:	50 91 41 01 	lds	r21, 0x0141	; 0x800141 <altitude_graph+0x9>
    7990:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <altitude_graph+0xa>
    7994:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <altitude_graph+0xb>
    7998:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <altitude_graph+0xc>
    799c:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <altitude_graph+0xd>
    79a0:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    79a4:	18 16       	cp	r1, r24
    79a6:	94 f4       	brge	.+36     	; 0x79cc <AltitudeMenu()+0x13c>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:20
    display.drawBitmap(118, 11, rising_icon, 10, 5, 1);
    79a8:	cc 24       	eor	r12, r12
    79aa:	c3 94       	inc	r12
    79ac:	d1 2c       	mov	r13, r1
    79ae:	15 e0       	ldi	r17, 0x05	; 5
    79b0:	e1 2e       	mov	r14, r17
    79b2:	f1 2c       	mov	r15, r1
    79b4:	0a e0       	ldi	r16, 0x0A	; 10
    79b6:	10 e0       	ldi	r17, 0x00	; 0
    79b8:	28 ea       	ldi	r18, 0xA8	; 168
    79ba:	37 e0       	ldi	r19, 0x07	; 7
    79bc:	4b e0       	ldi	r20, 0x0B	; 11
    79be:	50 e0       	ldi	r21, 0x00	; 0
    79c0:	66 e7       	ldi	r22, 0x76	; 118
    79c2:	70 e0       	ldi	r23, 0x00	; 0
    79c4:	81 e0       	ldi	r24, 0x01	; 1
    79c6:	99 e0       	ldi	r25, 0x09	; 9
    79c8:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:21
  if (altitude_graph.altitude_indicator_new < altitude_graph.altitude_indicator_old)
    79cc:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <altitude_graph+0x6>
    79d0:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <altitude_graph+0x7>
    79d4:	40 91 40 01 	lds	r20, 0x0140	; 0x800140 <altitude_graph+0x8>
    79d8:	50 91 41 01 	lds	r21, 0x0141	; 0x800141 <altitude_graph+0x9>
    79dc:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <altitude_graph+0xa>
    79e0:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <altitude_graph+0xb>
    79e4:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <altitude_graph+0xc>
    79e8:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <altitude_graph+0xd>
    79ec:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    79f0:	87 ff       	sbrs	r24, 7
    79f2:	12 c0       	rjmp	.+36     	; 0x7a18 <AltitudeMenu()+0x188>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:22
    display.drawBitmap(118, 11, falling_icon, 10, 5, 1);
    79f4:	cc 24       	eor	r12, r12
    79f6:	c3 94       	inc	r12
    79f8:	d1 2c       	mov	r13, r1
    79fa:	c5 e0       	ldi	r28, 0x05	; 5
    79fc:	ec 2e       	mov	r14, r28
    79fe:	f1 2c       	mov	r15, r1
    7a00:	0a e0       	ldi	r16, 0x0A	; 10
    7a02:	10 e0       	ldi	r17, 0x00	; 0
    7a04:	24 e9       	ldi	r18, 0x94	; 148
    7a06:	37 e0       	ldi	r19, 0x07	; 7
    7a08:	4b e0       	ldi	r20, 0x0B	; 11
    7a0a:	50 e0       	ldi	r21, 0x00	; 0
    7a0c:	66 e7       	ldi	r22, 0x76	; 118
    7a0e:	70 e0       	ldi	r23, 0x00	; 0
    7a10:	81 e0       	ldi	r24, 0x01	; 1
    7a12:	99 e0       	ldi	r25, 0x09	; 9
    7a14:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:23
  if (altitude_graph.altitude_indicator_new == altitude_graph.altitude_indicator_old)
    7a18:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <altitude_graph+0x6>
    7a1c:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <altitude_graph+0x7>
    7a20:	40 91 40 01 	lds	r20, 0x0140	; 0x800140 <altitude_graph+0x8>
    7a24:	50 91 41 01 	lds	r21, 0x0141	; 0x800141 <altitude_graph+0x9>
    7a28:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <altitude_graph+0xa>
    7a2c:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <altitude_graph+0xb>
    7a30:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <altitude_graph+0xc>
    7a34:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <altitude_graph+0xd>
    7a38:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    7a3c:	81 11       	cpse	r24, r1
    7a3e:	12 c0       	rjmp	.+36     	; 0x7a64 <AltitudeMenu()+0x1d4>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:24
    display.drawBitmap(118, 11, no_changing_icon, 10, 5, 1);
    7a40:	cc 24       	eor	r12, r12
    7a42:	c3 94       	inc	r12
    7a44:	d1 2c       	mov	r13, r1
    7a46:	a5 e0       	ldi	r26, 0x05	; 5
    7a48:	ea 2e       	mov	r14, r26
    7a4a:	f1 2c       	mov	r15, r1
    7a4c:	0a e0       	ldi	r16, 0x0A	; 10
    7a4e:	10 e0       	ldi	r17, 0x00	; 0
    7a50:	2e e9       	ldi	r18, 0x9E	; 158
    7a52:	37 e0       	ldi	r19, 0x07	; 7
    7a54:	4b e0       	ldi	r20, 0x0B	; 11
    7a56:	50 e0       	ldi	r21, 0x00	; 0
    7a58:	66 e7       	ldi	r22, 0x76	; 118
    7a5a:	70 e0       	ldi	r23, 0x00	; 0
    7a5c:	81 e0       	ldi	r24, 0x01	; 1
    7a5e:	99 e0       	ldi	r25, 0x09	; 9
    7a60:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:27

  /* Erase old altitude text */
  display.fillRect(1, 11, 118, 7, BLACK);
    7a64:	f1 2c       	mov	r15, r1
    7a66:	e1 2c       	mov	r14, r1
    7a68:	07 e0       	ldi	r16, 0x07	; 7
    7a6a:	10 e0       	ldi	r17, 0x00	; 0
    7a6c:	26 e7       	ldi	r18, 0x76	; 118
    7a6e:	30 e0       	ldi	r19, 0x00	; 0
    7a70:	4b e0       	ldi	r20, 0x0B	; 11
    7a72:	50 e0       	ldi	r21, 0x00	; 0
    7a74:	61 e0       	ldi	r22, 0x01	; 1
    7a76:	70 e0       	ldi	r23, 0x00	; 0
    7a78:	81 e0       	ldi	r24, 0x01	; 1
    7a7a:	99 e0       	ldi	r25, 0x09	; 9
    7a7c:	0e 94 e5 42 	call	0x85ca	; 0x85ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    7a80:	81 e0       	ldi	r24, 0x01	; 1
    7a82:	90 e0       	ldi	r25, 0x00	; 0
    7a84:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <display+0x13>
    7a88:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <display+0x12>
    7a8c:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <display+0x11>
    7a90:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7a94:	90 93 0e 09 	sts	0x090E, r25	; 0x80090e <display+0xd>
    7a98:	80 93 0d 09 	sts	0x090D, r24	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7a9c:	8b e0       	ldi	r24, 0x0B	; 11
    7a9e:	90 e0       	ldi	r25, 0x00	; 0
    7aa0:	90 93 10 09 	sts	0x0910, r25	; 0x800910 <display+0xf>
    7aa4:	80 93 0f 09 	sts	0x090F, r24	; 0x80090f <display+0xe>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    7aa8:	10 92 81 08 	sts	0x0881, r1	; 0x800881 <gps+0x5b>
_ZN15TinyGPSAltitude6metersEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:181
   double deg()      { return value() / 100.0; }
};

struct TinyGPSAltitude : TinyGPSDecimal
{
   double meters()       { return value() / 100.0; }
    7aac:	60 91 86 08 	lds	r22, 0x0886	; 0x800886 <gps+0x60>
    7ab0:	70 91 87 08 	lds	r23, 0x0887	; 0x800887 <gps+0x61>
    7ab4:	80 91 88 08 	lds	r24, 0x0888	; 0x800888 <gps+0x62>
    7ab8:	90 91 89 08 	lds	r25, 0x0889	; 0x800889 <gps+0x63>
    7abc:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    7ac0:	20 e0       	ldi	r18, 0x00	; 0
    7ac2:	30 e0       	ldi	r19, 0x00	; 0
    7ac4:	48 ec       	ldi	r20, 0xC8	; 200
    7ac6:	52 e4       	ldi	r21, 0x42	; 66
    7ac8:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    7acc:	6b 01       	movw	r12, r22
    7ace:	7c 01       	movw	r14, r24
_Z12AltitudeMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:30
  display.setTextColor(WHITE);
  display.setCursor(1, 11);
  if (gps.altitude.meters() > 0) {
    7ad0:	20 e0       	ldi	r18, 0x00	; 0
    7ad2:	30 e0       	ldi	r19, 0x00	; 0
    7ad4:	a9 01       	movw	r20, r18
    7ad6:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    7ada:	18 16       	cp	r1, r24
    7adc:	0c f0       	brlt	.+2      	; 0x7ae0 <AltitudeMenu()+0x250>
    7ade:	5c c1       	rjmp	.+696    	; 0x7d98 <AltitudeMenu()+0x508>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:31
    display.print(gps.altitude.meters());
    7ae0:	22 e0       	ldi	r18, 0x02	; 2
    7ae2:	30 e0       	ldi	r19, 0x00	; 0
    7ae4:	b7 01       	movw	r22, r14
    7ae6:	a6 01       	movw	r20, r12
    7ae8:	81 e0       	ldi	r24, 0x01	; 1
    7aea:	99 e0       	ldi	r25, 0x09	; 9
    7aec:	0e 94 01 70 	call	0xe002	; 0xe002 <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:32
    display.print('m');
    7af0:	6d e6       	ldi	r22, 0x6D	; 109
    7af2:	81 e0       	ldi	r24, 0x01	; 1
    7af4:	99 e0       	ldi	r25, 0x09	; 9
    7af6:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:41
    else
      display.print(' ');
    gps_var.show_question_mark = !gps_var.show_question_mark;
  }

  altitude_graph.y_altitude = int(altitude_graph.y_altitude);
    7afa:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <altitude_graph+0x4>
    7afe:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <altitude_graph+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:44

  /* Convert Altitude to Appropriate Screen Size */
  if ((altitude_graph.y_altitude > 0) && (altitude_graph.y_altitude <= 100))
    7b02:	cb 01       	movw	r24, r22
    7b04:	01 97       	sbiw	r24, 0x01	; 1
    7b06:	84 36       	cpi	r24, 0x64	; 100
    7b08:	91 05       	cpc	r25, r1
    7b0a:	18 f5       	brcc	.+70     	; 0x7b52 <AltitudeMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:45
    altitude_graph.y_altitude = 64 - map(altitude_graph.y_altitude,
    7b0c:	07 2e       	mov	r0, r23
    7b0e:	00 0c       	add	r0, r0
    7b10:	88 0b       	sbc	r24, r24
    7b12:	99 0b       	sbc	r25, r25
    7b14:	1f 92       	push	r1
    7b16:	1f 92       	push	r1
    7b18:	1f 92       	push	r1
    7b1a:	2c e2       	ldi	r18, 0x2C	; 44
    7b1c:	2f 93       	push	r18
    7b1e:	a1 2c       	mov	r10, r1
    7b20:	b1 2c       	mov	r11, r1
    7b22:	65 01       	movw	r12, r10
    7b24:	14 e6       	ldi	r17, 0x64	; 100
    7b26:	e1 2e       	mov	r14, r17
    7b28:	f1 2c       	mov	r15, r1
    7b2a:	00 e0       	ldi	r16, 0x00	; 0
    7b2c:	10 e0       	ldi	r17, 0x00	; 0
    7b2e:	20 e0       	ldi	r18, 0x00	; 0
    7b30:	30 e0       	ldi	r19, 0x00	; 0
    7b32:	a9 01       	movw	r20, r18
    7b34:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    7b38:	20 e4       	ldi	r18, 0x40	; 64
    7b3a:	30 e0       	ldi	r19, 0x00	; 0
    7b3c:	c9 01       	movw	r24, r18
    7b3e:	86 1b       	sub	r24, r22
    7b40:	97 0b       	sbc	r25, r23
    7b42:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    7b46:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
    7b4a:	0f 90       	pop	r0
    7b4c:	0f 90       	pop	r0
    7b4e:	0f 90       	pop	r0
    7b50:	0f 90       	pop	r0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:48
                                         0, 100, 0, 44);

  if ((altitude_graph.y_altitude > 100) && (altitude_graph.y_altitude <= 500))
    7b52:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <altitude_graph+0x4>
    7b56:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <altitude_graph+0x5>
    7b5a:	cb 01       	movw	r24, r22
    7b5c:	85 56       	subi	r24, 0x65	; 101
    7b5e:	91 09       	sbc	r25, r1
    7b60:	80 39       	cpi	r24, 0x90	; 144
    7b62:	91 40       	sbci	r25, 0x01	; 1
    7b64:	20 f5       	brcc	.+72     	; 0x7bae <AltitudeMenu()+0x31e>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:49
    altitude_graph.y_altitude = 64 - map(altitude_graph.y_altitude,
    7b66:	07 2e       	mov	r0, r23
    7b68:	00 0c       	add	r0, r0
    7b6a:	88 0b       	sbc	r24, r24
    7b6c:	99 0b       	sbc	r25, r25
    7b6e:	1f 92       	push	r1
    7b70:	1f 92       	push	r1
    7b72:	1f 92       	push	r1
    7b74:	2c e2       	ldi	r18, 0x2C	; 44
    7b76:	2f 93       	push	r18
    7b78:	a1 2c       	mov	r10, r1
    7b7a:	b1 2c       	mov	r11, r1
    7b7c:	65 01       	movw	r12, r10
    7b7e:	14 ef       	ldi	r17, 0xF4	; 244
    7b80:	e1 2e       	mov	r14, r17
    7b82:	ff 24       	eor	r15, r15
    7b84:	f3 94       	inc	r15
    7b86:	00 e0       	ldi	r16, 0x00	; 0
    7b88:	10 e0       	ldi	r17, 0x00	; 0
    7b8a:	20 e0       	ldi	r18, 0x00	; 0
    7b8c:	30 e0       	ldi	r19, 0x00	; 0
    7b8e:	a9 01       	movw	r20, r18
    7b90:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    7b94:	20 e4       	ldi	r18, 0x40	; 64
    7b96:	30 e0       	ldi	r19, 0x00	; 0
    7b98:	c9 01       	movw	r24, r18
    7b9a:	86 1b       	sub	r24, r22
    7b9c:	97 0b       	sbc	r25, r23
    7b9e:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    7ba2:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
    7ba6:	0f 90       	pop	r0
    7ba8:	0f 90       	pop	r0
    7baa:	0f 90       	pop	r0
    7bac:	0f 90       	pop	r0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:52
                                         0, 500, 0, 44);

  if ((altitude_graph.y_altitude > 500) && (altitude_graph.y_altitude <= 1000))
    7bae:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <altitude_graph+0x4>
    7bb2:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <altitude_graph+0x5>
    7bb6:	cb 01       	movw	r24, r22
    7bb8:	85 5f       	subi	r24, 0xF5	; 245
    7bba:	91 40       	sbci	r25, 0x01	; 1
    7bbc:	84 3f       	cpi	r24, 0xF4	; 244
    7bbe:	91 40       	sbci	r25, 0x01	; 1
    7bc0:	20 f5       	brcc	.+72     	; 0x7c0a <AltitudeMenu()+0x37a>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:53
    altitude_graph.y_altitude = 64 - map(altitude_graph.y_altitude,
    7bc2:	07 2e       	mov	r0, r23
    7bc4:	00 0c       	add	r0, r0
    7bc6:	88 0b       	sbc	r24, r24
    7bc8:	99 0b       	sbc	r25, r25
    7bca:	1f 92       	push	r1
    7bcc:	1f 92       	push	r1
    7bce:	1f 92       	push	r1
    7bd0:	2c e2       	ldi	r18, 0x2C	; 44
    7bd2:	2f 93       	push	r18
    7bd4:	a1 2c       	mov	r10, r1
    7bd6:	b1 2c       	mov	r11, r1
    7bd8:	65 01       	movw	r12, r10
    7bda:	18 ee       	ldi	r17, 0xE8	; 232
    7bdc:	e1 2e       	mov	r14, r17
    7bde:	13 e0       	ldi	r17, 0x03	; 3
    7be0:	f1 2e       	mov	r15, r17
    7be2:	00 e0       	ldi	r16, 0x00	; 0
    7be4:	10 e0       	ldi	r17, 0x00	; 0
    7be6:	20 e0       	ldi	r18, 0x00	; 0
    7be8:	30 e0       	ldi	r19, 0x00	; 0
    7bea:	a9 01       	movw	r20, r18
    7bec:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    7bf0:	20 e4       	ldi	r18, 0x40	; 64
    7bf2:	30 e0       	ldi	r19, 0x00	; 0
    7bf4:	c9 01       	movw	r24, r18
    7bf6:	86 1b       	sub	r24, r22
    7bf8:	97 0b       	sbc	r25, r23
    7bfa:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    7bfe:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
    7c02:	0f 90       	pop	r0
    7c04:	0f 90       	pop	r0
    7c06:	0f 90       	pop	r0
    7c08:	0f 90       	pop	r0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:56
                                         0, 1000, 0, 44);

  if ((altitude_graph.y_altitude > 1000) && (altitude_graph.y_altitude <= 5000))
    7c0a:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <altitude_graph+0x4>
    7c0e:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <altitude_graph+0x5>
    7c12:	cb 01       	movw	r24, r22
    7c14:	89 5e       	subi	r24, 0xE9	; 233
    7c16:	93 40       	sbci	r25, 0x03	; 3
    7c18:	80 3a       	cpi	r24, 0xA0	; 160
    7c1a:	9f 40       	sbci	r25, 0x0F	; 15
    7c1c:	20 f5       	brcc	.+72     	; 0x7c66 <AltitudeMenu()+0x3d6>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:57
    altitude_graph.y_altitude = 64 - map(altitude_graph.y_altitude,
    7c1e:	07 2e       	mov	r0, r23
    7c20:	00 0c       	add	r0, r0
    7c22:	88 0b       	sbc	r24, r24
    7c24:	99 0b       	sbc	r25, r25
    7c26:	1f 92       	push	r1
    7c28:	1f 92       	push	r1
    7c2a:	1f 92       	push	r1
    7c2c:	2c e2       	ldi	r18, 0x2C	; 44
    7c2e:	2f 93       	push	r18
    7c30:	a1 2c       	mov	r10, r1
    7c32:	b1 2c       	mov	r11, r1
    7c34:	65 01       	movw	r12, r10
    7c36:	18 e8       	ldi	r17, 0x88	; 136
    7c38:	e1 2e       	mov	r14, r17
    7c3a:	13 e1       	ldi	r17, 0x13	; 19
    7c3c:	f1 2e       	mov	r15, r17
    7c3e:	00 e0       	ldi	r16, 0x00	; 0
    7c40:	10 e0       	ldi	r17, 0x00	; 0
    7c42:	20 e0       	ldi	r18, 0x00	; 0
    7c44:	30 e0       	ldi	r19, 0x00	; 0
    7c46:	a9 01       	movw	r20, r18
    7c48:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    7c4c:	20 e4       	ldi	r18, 0x40	; 64
    7c4e:	30 e0       	ldi	r19, 0x00	; 0
    7c50:	c9 01       	movw	r24, r18
    7c52:	86 1b       	sub	r24, r22
    7c54:	97 0b       	sbc	r25, r23
    7c56:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    7c5a:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
    7c5e:	0f 90       	pop	r0
    7c60:	0f 90       	pop	r0
    7c62:	0f 90       	pop	r0
    7c64:	0f 90       	pop	r0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:60
                                         0, 5000, 0, 44);

  if ((altitude_graph.y_altitude > 5000) && (altitude_graph.y_altitude <= 10000))
    7c66:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <altitude_graph+0x4>
    7c6a:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <altitude_graph+0x5>
    7c6e:	cb 01       	movw	r24, r22
    7c70:	89 58       	subi	r24, 0x89	; 137
    7c72:	93 41       	sbci	r25, 0x13	; 19
    7c74:	88 38       	cpi	r24, 0x88	; 136
    7c76:	93 41       	sbci	r25, 0x13	; 19
    7c78:	20 f5       	brcc	.+72     	; 0x7cc2 <AltitudeMenu()+0x432>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:61
    altitude_graph.y_altitude = 64 - map(altitude_graph.y_altitude,
    7c7a:	07 2e       	mov	r0, r23
    7c7c:	00 0c       	add	r0, r0
    7c7e:	88 0b       	sbc	r24, r24
    7c80:	99 0b       	sbc	r25, r25
    7c82:	1f 92       	push	r1
    7c84:	1f 92       	push	r1
    7c86:	1f 92       	push	r1
    7c88:	2c e2       	ldi	r18, 0x2C	; 44
    7c8a:	2f 93       	push	r18
    7c8c:	a1 2c       	mov	r10, r1
    7c8e:	b1 2c       	mov	r11, r1
    7c90:	65 01       	movw	r12, r10
    7c92:	10 e1       	ldi	r17, 0x10	; 16
    7c94:	e1 2e       	mov	r14, r17
    7c96:	17 e2       	ldi	r17, 0x27	; 39
    7c98:	f1 2e       	mov	r15, r17
    7c9a:	00 e0       	ldi	r16, 0x00	; 0
    7c9c:	10 e0       	ldi	r17, 0x00	; 0
    7c9e:	20 e0       	ldi	r18, 0x00	; 0
    7ca0:	30 e0       	ldi	r19, 0x00	; 0
    7ca2:	a9 01       	movw	r20, r18
    7ca4:	0e 94 03 70 	call	0xe006	; 0xe006 <map(long, long, long, long, long)>
    7ca8:	20 e4       	ldi	r18, 0x40	; 64
    7caa:	30 e0       	ldi	r19, 0x00	; 0
    7cac:	c9 01       	movw	r24, r18
    7cae:	86 1b       	sub	r24, r22
    7cb0:	97 0b       	sbc	r25, r23
    7cb2:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    7cb6:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
    7cba:	0f 90       	pop	r0
    7cbc:	0f 90       	pop	r0
    7cbe:	0f 90       	pop	r0
    7cc0:	0f 90       	pop	r0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:65
                                         0, 10000, 0, 44);

  /* Limit to 0, We never go under sea level */
  if (altitude_graph.y_altitude <= 0) altitude_graph.y_altitude = 63;
    7cc2:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <altitude_graph+0x4>
    7cc6:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <altitude_graph+0x5>
    7cca:	18 16       	cp	r1, r24
    7ccc:	19 06       	cpc	r1, r25
    7cce:	34 f0       	brlt	.+12     	; 0x7cdc <AltitudeMenu()+0x44c>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:65 (discriminator 1)
    7cd0:	8f e3       	ldi	r24, 0x3F	; 63
    7cd2:	90 e0       	ldi	r25, 0x00	; 0
    7cd4:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    7cd8:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:68

  /* Draw Mesh */
  if (altitude_graph.drawMesh) {
    7cdc:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <altitude_graph+0x1>
    7ce0:	88 23       	and	r24, r24
    7ce2:	f9 f0       	breq	.+62     	; 0x7d22 <AltitudeMenu()+0x492>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:69
    for (int y = 20; y <= 64; y += 6)
    7ce4:	c4 e1       	ldi	r28, 0x14	; 20
    7ce6:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:72
      for (int x = 0; x <= 128; x++) {
        display.drawPixel(x, y, logic.lastState);
        logic.lastState = !logic.lastState;
    7ce8:	ff 24       	eor	r15, r15
    7cea:	f3 94       	inc	r15
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:70
  if (altitude_graph.y_altitude <= 0) altitude_graph.y_altitude = 63;

  /* Draw Mesh */
  if (altitude_graph.drawMesh) {
    for (int y = 20; y <= 64; y += 6)
      for (int x = 0; x <= 128; x++) {
    7cec:	10 e0       	ldi	r17, 0x00	; 0
    7cee:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:71 (discriminator 2)
        display.drawPixel(x, y, logic.lastState);
    7cf0:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    7cf4:	30 e0       	ldi	r19, 0x00	; 0
    7cf6:	ae 01       	movw	r20, r28
    7cf8:	b8 01       	movw	r22, r16
    7cfa:	81 e0       	ldi	r24, 0x01	; 1
    7cfc:	99 e0       	ldi	r25, 0x09	; 9
    7cfe:	0e 94 60 4c 	call	0x98c0	; 0x98c0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:72 (discriminator 2)
        logic.lastState = !logic.lastState;
    7d02:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    7d06:	8f 25       	eor	r24, r15
    7d08:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:70 (discriminator 2)
  if (altitude_graph.y_altitude <= 0) altitude_graph.y_altitude = 63;

  /* Draw Mesh */
  if (altitude_graph.drawMesh) {
    for (int y = 20; y <= 64; y += 6)
      for (int x = 0; x <= 128; x++) {
    7d0c:	0f 5f       	subi	r16, 0xFF	; 255
    7d0e:	1f 4f       	sbci	r17, 0xFF	; 255
    7d10:	01 38       	cpi	r16, 0x81	; 129
    7d12:	11 05       	cpc	r17, r1
    7d14:	69 f7       	brne	.-38     	; 0x7cf0 <AltitudeMenu()+0x460>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:69 (discriminator 2)
  /* Limit to 0, We never go under sea level */
  if (altitude_graph.y_altitude <= 0) altitude_graph.y_altitude = 63;

  /* Draw Mesh */
  if (altitude_graph.drawMesh) {
    for (int y = 20; y <= 64; y += 6)
    7d16:	26 96       	adiw	r28, 0x06	; 6
    7d18:	c4 34       	cpi	r28, 0x44	; 68
    7d1a:	d1 05       	cpc	r29, r1
    7d1c:	39 f7       	brne	.-50     	; 0x7cec <AltitudeMenu()+0x45c>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:74
      for (int x = 0; x <= 128; x++) {
        display.drawPixel(x, y, logic.lastState);
        logic.lastState = !logic.lastState;
      }
    altitude_graph.drawMesh = false;
    7d1e:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <altitude_graph+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:78
  }

  /* Draw Altitude Line */
  display.drawLine(altitude_graph.x_increment, 64,
    7d22:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <altitude_graph+0x2>
    7d26:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <altitude_graph+0x3>
    7d2a:	00 91 3c 01 	lds	r16, 0x013C	; 0x80013c <altitude_graph+0x4>
    7d2e:	10 91 3d 01 	lds	r17, 0x013D	; 0x80013d <altitude_graph+0x5>
    7d32:	ee 24       	eor	r14, r14
    7d34:	e3 94       	inc	r14
    7d36:	f1 2c       	mov	r15, r1
    7d38:	9b 01       	movw	r18, r22
    7d3a:	40 e4       	ldi	r20, 0x40	; 64
    7d3c:	50 e0       	ldi	r21, 0x00	; 0
    7d3e:	81 e0       	ldi	r24, 0x01	; 1
    7d40:	99 e0       	ldi	r25, 0x09	; 9
    7d42:	0e 94 a7 43 	call	0x874e	; 0x874e <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:81
                   altitude_graph.x_increment, altitude_graph.y_altitude,
                   WHITE);
  altitude_graph.x_increment++;
    7d46:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <altitude_graph+0x2>
    7d4a:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <altitude_graph+0x3>
    7d4e:	01 96       	adiw	r24, 0x01	; 1
    7d50:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <altitude_graph+0x3>
    7d54:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <altitude_graph+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:82
  altitude_graph.altitude_indicator_old = altitude_graph.altitude_indicator_new;
    7d58:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <altitude_graph+0xa>
    7d5c:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <altitude_graph+0xb>
    7d60:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <altitude_graph+0xc>
    7d64:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <altitude_graph+0xd>
    7d68:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <altitude_graph+0x6>
    7d6c:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <altitude_graph+0x7>
    7d70:	a0 93 40 01 	sts	0x0140, r26	; 0x800140 <altitude_graph+0x8>
    7d74:	b0 93 41 01 	sts	0x0141, r27	; 0x800141 <altitude_graph+0x9>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:84

  display.display();
    7d78:	81 e0       	ldi	r24, 0x01	; 1
    7d7a:	99 e0       	ldi	r25, 0x09	; 9
    7d7c:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:86
  decodeGPSNMEA(1000);
}
    7d80:	df 91       	pop	r29
    7d82:	cf 91       	pop	r28
    7d84:	1f 91       	pop	r17
    7d86:	0f 91       	pop	r16
    7d88:	ff 90       	pop	r15
    7d8a:	ef 90       	pop	r14
    7d8c:	df 90       	pop	r13
    7d8e:	cf 90       	pop	r12
    7d90:	bf 90       	pop	r11
    7d92:	af 90       	pop	r10
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:85
                   WHITE);
  altitude_graph.x_increment++;
  altitude_graph.altitude_indicator_old = altitude_graph.altitude_indicator_new;

  display.display();
  decodeGPSNMEA(1000);
    7d94:	0c 94 37 29 	jmp	0x526e	; 0x526e <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:34
  display.setCursor(1, 11);
  if (gps.altitude.meters() > 0) {
    display.print(gps.altitude.meters());
    display.print('m');
  } else {
    if (gps_var.show_question_mark)
    7d98:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    7d9c:	88 23       	and	r24, r24
    7d9e:	69 f0       	breq	.+26     	; 0x7dba <AltitudeMenu()+0x52a>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:35
      display.print(F("NO DATA..."));
    7da0:	60 e5       	ldi	r22, 0x50	; 80
    7da2:	74 e0       	ldi	r23, 0x04	; 4
    7da4:	81 e0       	ldi	r24, 0x01	; 1
    7da6:	99 e0       	ldi	r25, 0x09	; 9
    7da8:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:38
    else
      display.print(' ');
    gps_var.show_question_mark = !gps_var.show_question_mark;
    7dac:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    7db0:	91 e0       	ldi	r25, 0x01	; 1
    7db2:	89 27       	eor	r24, r25
    7db4:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
    7db8:	a0 ce       	rjmp	.-704    	; 0x7afa <AltitudeMenu()+0x26a>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:37
    display.print('m');
  } else {
    if (gps_var.show_question_mark)
      display.print(F("NO DATA..."));
    else
      display.print(' ');
    7dba:	60 e2       	ldi	r22, 0x20	; 32
    7dbc:	81 e0       	ldi	r24, 0x01	; 1
    7dbe:	99 e0       	ldi	r25, 0x09	; 9
    7dc0:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    7dc4:	f3 cf       	rjmp	.-26     	; 0x7dac <AltitudeMenu()+0x51c>

00007dc6 <UIMenu()>:
_Z6UIMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:1
void UIMenu(void){
    7dc6:	9f 92       	push	r9
    7dc8:	af 92       	push	r10
    7dca:	bf 92       	push	r11
    7dcc:	cf 92       	push	r12
    7dce:	df 92       	push	r13
    7dd0:	ef 92       	push	r14
    7dd2:	ff 92       	push	r15
    7dd4:	0f 93       	push	r16
    7dd6:	1f 93       	push	r17
    7dd8:	cf 93       	push	r28
    7dda:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:3
        // AButtonISR();   /* Get A Button Input */
        BButtonISR();   /* Get B Button Input */
    7ddc:	0e 94 cc 10 	call	0x2198	; 0x2198 <BButtonISR()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:4
        CButton();      /* Get C Button Input */
    7de0:	0e 94 1f 11 	call	0x223e	; 0x223e <CButton()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:6

        if((menu.iconX > 96) && (menu.iconY == 32)) {
    7de4:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <menu+0x3>
    7de8:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <menu+0x4>
    7dec:	81 36       	cpi	r24, 0x61	; 97
    7dee:	91 05       	cpc	r25, r1
    7df0:	74 f0       	brlt	.+28     	; 0x7e0e <UIMenu()+0x48>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:6 (discriminator 1)
    7df2:	80 91 4b 09 	lds	r24, 0x094B	; 0x80094b <menu+0x5>
    7df6:	90 91 4c 09 	lds	r25, 0x094C	; 0x80094c <menu+0x6>
    7dfa:	80 97       	sbiw	r24, 0x20	; 32
    7dfc:	41 f4       	brne	.+16     	; 0x7e0e <UIMenu()+0x48>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:8
                /* Move Icon Cursor to Home */
                menu.iconX = 0;
    7dfe:	10 92 4a 09 	sts	0x094A, r1	; 0x80094a <menu+0x4>
    7e02:	10 92 49 09 	sts	0x0949, r1	; 0x800949 <menu+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:9
                menu.iconY = 0;
    7e06:	10 92 4c 09 	sts	0x094C, r1	; 0x80094c <menu+0x6>
    7e0a:	10 92 4b 09 	sts	0x094B, r1	; 0x80094b <menu+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:12
        }

        if((menu.iconX < 0) && (menu.iconY == 0)) {
    7e0e:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <menu+0x3>
    7e12:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <menu+0x4>
    7e16:	97 ff       	sbrs	r25, 7
    7e18:	12 c0       	rjmp	.+36     	; 0x7e3e <UIMenu()+0x78>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:12 (discriminator 1)
    7e1a:	80 91 4b 09 	lds	r24, 0x094B	; 0x80094b <menu+0x5>
    7e1e:	90 91 4c 09 	lds	r25, 0x094C	; 0x80094c <menu+0x6>
    7e22:	89 2b       	or	r24, r25
    7e24:	61 f4       	brne	.+24     	; 0x7e3e <UIMenu()+0x78>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:14
                /* Move Icon Cursor to END */
                menu.iconX = 96;
    7e26:	80 e6       	ldi	r24, 0x60	; 96
    7e28:	90 e0       	ldi	r25, 0x00	; 0
    7e2a:	90 93 4a 09 	sts	0x094A, r25	; 0x80094a <menu+0x4>
    7e2e:	80 93 49 09 	sts	0x0949, r24	; 0x800949 <menu+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:15
                menu.iconY = 32;
    7e32:	80 e2       	ldi	r24, 0x20	; 32
    7e34:	90 e0       	ldi	r25, 0x00	; 0
    7e36:	90 93 4c 09 	sts	0x094C, r25	; 0x80094c <menu+0x6>
    7e3a:	80 93 4b 09 	sts	0x094B, r24	; 0x80094b <menu+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:18
        }

        if((menu.iconX > 96) && (menu.iconY == 0)) {
    7e3e:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <menu+0x3>
    7e42:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <menu+0x4>
    7e46:	81 36       	cpi	r24, 0x61	; 97
    7e48:	91 05       	cpc	r25, r1
    7e4a:	84 f0       	brlt	.+32     	; 0x7e6c <UIMenu()+0xa6>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:18 (discriminator 1)
    7e4c:	80 91 4b 09 	lds	r24, 0x094B	; 0x80094b <menu+0x5>
    7e50:	90 91 4c 09 	lds	r25, 0x094C	; 0x80094c <menu+0x6>
    7e54:	89 2b       	or	r24, r25
    7e56:	51 f4       	brne	.+20     	; 0x7e6c <UIMenu()+0xa6>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:20
                /* Move to Second Line */
                menu.iconX = 0;
    7e58:	10 92 4a 09 	sts	0x094A, r1	; 0x80094a <menu+0x4>
    7e5c:	10 92 49 09 	sts	0x0949, r1	; 0x800949 <menu+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:21
                menu.iconY = 32;
    7e60:	80 e2       	ldi	r24, 0x20	; 32
    7e62:	90 e0       	ldi	r25, 0x00	; 0
    7e64:	90 93 4c 09 	sts	0x094C, r25	; 0x80094c <menu+0x6>
    7e68:	80 93 4b 09 	sts	0x094B, r24	; 0x80094b <menu+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:24
        }

        if((menu.iconX < 0) && (menu.iconY == 32)) {
    7e6c:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <menu+0x3>
    7e70:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <menu+0x4>
    7e74:	97 ff       	sbrs	r25, 7
    7e76:	10 c0       	rjmp	.+32     	; 0x7e98 <UIMenu()+0xd2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:24 (discriminator 1)
    7e78:	80 91 4b 09 	lds	r24, 0x094B	; 0x80094b <menu+0x5>
    7e7c:	90 91 4c 09 	lds	r25, 0x094C	; 0x80094c <menu+0x6>
    7e80:	80 97       	sbiw	r24, 0x20	; 32
    7e82:	51 f4       	brne	.+20     	; 0x7e98 <UIMenu()+0xd2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:26
                /* Move to First Line */
                menu.iconX = 96;
    7e84:	80 e6       	ldi	r24, 0x60	; 96
    7e86:	90 e0       	ldi	r25, 0x00	; 0
    7e88:	90 93 4a 09 	sts	0x094A, r25	; 0x80094a <menu+0x4>
    7e8c:	80 93 49 09 	sts	0x0949, r24	; 0x800949 <menu+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:27
                menu.iconY = 0;
    7e90:	10 92 4c 09 	sts	0x094C, r1	; 0x80094c <menu+0x6>
    7e94:	10 92 4b 09 	sts	0x094B, r1	; 0x80094b <menu+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:31
        }

        /* Get Tab ID on First Line */
        if ((menu.iconY == 0) && (menu.switchMenu == false)) {
    7e98:	80 91 4b 09 	lds	r24, 0x094B	; 0x80094b <menu+0x5>
    7e9c:	90 91 4c 09 	lds	r25, 0x094C	; 0x80094c <menu+0x6>
    7ea0:	00 97       	sbiw	r24, 0x00	; 0
    7ea2:	09 f0       	breq	.+2      	; 0x7ea6 <UIMenu()+0xe0>
    7ea4:	03 c1       	rjmp	.+518    	; 0x80ac <UIMenu()+0x2e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:31 (discriminator 1)
    7ea6:	80 91 48 09 	lds	r24, 0x0948	; 0x800948 <menu+0x2>
    7eaa:	81 11       	cpse	r24, r1
    7eac:	0b c0       	rjmp	.+22     	; 0x7ec4 <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:32
                if(menu.iconX == 0)
    7eae:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <menu+0x3>
    7eb2:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <menu+0x4>
    7eb6:	00 97       	sbiw	r24, 0x00	; 0
    7eb8:	09 f0       	breq	.+2      	; 0x7ebc <UIMenu()+0xf6>
    7eba:	e1 c0       	rjmp	.+450    	; 0x807e <UIMenu()+0x2b8>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:33
                        menu.tab = 0;
    7ebc:	10 92 47 09 	sts	0x0947, r1	; 0x800947 <menu+0x1>
    7ec0:	10 92 46 09 	sts	0x0946, r1	; 0x800946 <menu>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:58
                        menu.tab = 7;
                }
        }

        /* Show Clock On Standby */
        menu.tick = millis();
    7ec4:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    7ec8:	60 93 4f 09 	sts	0x094F, r22	; 0x80094f <menu+0x9>
    7ecc:	70 93 50 09 	sts	0x0950, r23	; 0x800950 <menu+0xa>
    7ed0:	80 93 51 09 	sts	0x0951, r24	; 0x800951 <menu+0xb>
    7ed4:	90 93 52 09 	sts	0x0952, r25	; 0x800952 <menu+0xc>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:59
        if(menu.tick - menu.lastTick >= 60000) /* Wait for 1 minute to Standby */
    7ed8:	00 91 53 09 	lds	r16, 0x0953	; 0x800953 <menu+0xd>
    7edc:	10 91 54 09 	lds	r17, 0x0954	; 0x800954 <menu+0xe>
    7ee0:	20 91 55 09 	lds	r18, 0x0955	; 0x800955 <menu+0xf>
    7ee4:	30 91 56 09 	lds	r19, 0x0956	; 0x800956 <menu+0x10>
    7ee8:	60 1b       	sub	r22, r16
    7eea:	71 0b       	sbc	r23, r17
    7eec:	82 0b       	sbc	r24, r18
    7eee:	93 0b       	sbc	r25, r19
    7ef0:	60 36       	cpi	r22, 0x60	; 96
    7ef2:	7a 4e       	sbci	r23, 0xEA	; 234
    7ef4:	81 05       	cpc	r24, r1
    7ef6:	91 05       	cpc	r25, r1
    7ef8:	08 f4       	brcc	.+2      	; 0x7efc <UIMenu()+0x136>
    7efa:	2b c1       	rjmp	.+598    	; 0x8152 <UIMenu()+0x38c>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:61
        {
                display.setTextSize(2);
    7efc:	62 e0       	ldi	r22, 0x02	; 2
    7efe:	81 e0       	ldi	r24, 0x01	; 1
    7f00:	99 e0       	ldi	r25, 0x09	; 9
    7f02:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    7f06:	81 e0       	ldi	r24, 0x01	; 1
    7f08:	90 e0       	ldi	r25, 0x00	; 0
    7f0a:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <display+0x13>
    7f0e:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <display+0x12>
    7f12:	90 93 12 09 	sts	0x0912, r25	; 0x800912 <display+0x11>
    7f16:	80 93 11 09 	sts	0x0911, r24	; 0x800911 <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7f1a:	3f e1       	ldi	r19, 0x1F	; 31
    7f1c:	e3 2e       	mov	r14, r19
    7f1e:	f1 2c       	mov	r15, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7f20:	4a e1       	ldi	r20, 0x1A	; 26
    7f22:	c4 2e       	mov	r12, r20
    7f24:	d1 2c       	mov	r13, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7f26:	ce e5       	ldi	r28, 0x5E	; 94
    7f28:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7f2a:	59 e1       	ldi	r21, 0x19	; 25
    7f2c:	a5 2e       	mov	r10, r21
    7f2e:	b1 2c       	mov	r11, r1
    7f30:	02 e2       	ldi	r16, 0x22	; 34
    7f32:	10 e0       	ldi	r17, 0x00	; 0
_Z6UIMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:64
                display.setTextColor(WHITE);
                while (true) {
                        menu.lastTick = millis();
    7f34:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    7f38:	60 93 53 09 	sts	0x0953, r22	; 0x800953 <menu+0xd>
    7f3c:	70 93 54 09 	sts	0x0954, r23	; 0x800954 <menu+0xe>
    7f40:	80 93 55 09 	sts	0x0955, r24	; 0x800955 <menu+0xf>
    7f44:	90 93 56 09 	sts	0x0956, r25	; 0x800956 <menu+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:66

                        if(!digitalRead(C_Pin)) {
    7f48:	80 e0       	ldi	r24, 0x00	; 0
    7f4a:	0e 94 d0 6d 	call	0xdba0	; 0xdba0 <digitalRead>
    7f4e:	89 2b       	or	r24, r25
    7f50:	09 f4       	brne	.+2      	; 0x7f54 <UIMenu()+0x18e>
    7f52:	fb c0       	rjmp	.+502    	; 0x814a <UIMenu()+0x384>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:69
                                break;
                        }
                        decodeGPSNMEA(1000);
    7f54:	0e 94 37 29 	call	0x526e	; 0x526e <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:70
                        display.clearDisplay();
    7f58:	81 e0       	ldi	r24, 0x01	; 1
    7f5a:	99 e0       	ldi	r25, 0x09	; 9
    7f5c:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7f60:	f0 92 0e 09 	sts	0x090E, r15	; 0x80090e <display+0xd>
    7f64:	e0 92 0d 09 	sts	0x090D, r14	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7f68:	d0 92 10 09 	sts	0x0910, r13	; 0x800910 <display+0xf>
    7f6c:	c0 92 0f 09 	sts	0x090F, r12	; 0x80090f <display+0xe>
_Z6UIMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:72
                        display.setCursor(31, 26);
                        display.setTextSize(2);
    7f70:	62 e0       	ldi	r22, 0x02	; 2
    7f72:	81 e0       	ldi	r24, 0x01	; 1
    7f74:	99 e0       	ldi	r25, 0x09	; 9
    7f76:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:73
                        if((gps.time.hour() + getTimeZone(gps.location.lng())) < 10)
    7f7a:	86 e5       	ldi	r24, 0x56	; 86
    7f7c:	98 e0       	ldi	r25, 0x08	; 8
    7f7e:	0e 94 0a 68 	call	0xd014	; 0xd014 <TinyGPSTime::hour()>
    7f82:	98 2e       	mov	r9, r24
    7f84:	86 e2       	ldi	r24, 0x26	; 38
    7f86:	98 e0       	ldi	r25, 0x08	; 8
    7f88:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    7f8c:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    7f90:	89 0d       	add	r24, r9
    7f92:	91 1d       	adc	r25, r1
    7f94:	0a 97       	sbiw	r24, 0x0a	; 10
    7f96:	2c f4       	brge	.+10     	; 0x7fa2 <UIMenu()+0x1dc>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:74
                                display.print(' ');
    7f98:	60 e2       	ldi	r22, 0x20	; 32
    7f9a:	81 e0       	ldi	r24, 0x01	; 1
    7f9c:	99 e0       	ldi	r25, 0x09	; 9
    7f9e:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:75
                        display.print(gps.time.hour() + getTimeZone(gps.location.lng()));
    7fa2:	86 e5       	ldi	r24, 0x56	; 86
    7fa4:	98 e0       	ldi	r25, 0x08	; 8
    7fa6:	0e 94 0a 68 	call	0xd014	; 0xd014 <TinyGPSTime::hour()>
    7faa:	98 2e       	mov	r9, r24
    7fac:	86 e2       	ldi	r24, 0x26	; 38
    7fae:	98 e0       	ldi	r25, 0x08	; 8
    7fb0:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    7fb4:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    7fb8:	bc 01       	movw	r22, r24
    7fba:	69 0d       	add	r22, r9
    7fbc:	71 1d       	adc	r23, r1
    7fbe:	4a e0       	ldi	r20, 0x0A	; 10
    7fc0:	50 e0       	ldi	r21, 0x00	; 0
    7fc2:	81 e0       	ldi	r24, 0x01	; 1
    7fc4:	99 e0       	ldi	r25, 0x09	; 9
    7fc6:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:76
                        display.print(':');
    7fca:	6a e3       	ldi	r22, 0x3A	; 58
    7fcc:	81 e0       	ldi	r24, 0x01	; 1
    7fce:	99 e0       	ldi	r25, 0x09	; 9
    7fd0:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:77
                        if(gps.time.minute() < 10)
    7fd4:	86 e5       	ldi	r24, 0x56	; 86
    7fd6:	98 e0       	ldi	r25, 0x08	; 8
    7fd8:	0e 94 18 68 	call	0xd030	; 0xd030 <TinyGPSTime::minute()>
    7fdc:	8a 30       	cpi	r24, 0x0A	; 10
    7fde:	28 f4       	brcc	.+10     	; 0x7fea <UIMenu()+0x224>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:78
                                display.print('0');
    7fe0:	60 e3       	ldi	r22, 0x30	; 48
    7fe2:	81 e0       	ldi	r24, 0x01	; 1
    7fe4:	99 e0       	ldi	r25, 0x09	; 9
    7fe6:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:79
                        display.print(gps.time.minute());
    7fea:	86 e5       	ldi	r24, 0x56	; 86
    7fec:	98 e0       	ldi	r25, 0x08	; 8
    7fee:	0e 94 18 68 	call	0xd030	; 0xd030 <TinyGPSTime::minute()>
    7ff2:	4a e0       	ldi	r20, 0x0A	; 10
    7ff4:	50 e0       	ldi	r21, 0x00	; 0
    7ff6:	68 2f       	mov	r22, r24
    7ff8:	81 e0       	ldi	r24, 0x01	; 1
    7ffa:	99 e0       	ldi	r25, 0x09	; 9
    7ffc:	0e 94 10 6f 	call	0xde20	; 0xde20 <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:81

                        display.setTextSize(1);
    8000:	61 e0       	ldi	r22, 0x01	; 1
    8002:	81 e0       	ldi	r24, 0x01	; 1
    8004:	99 e0       	ldi	r25, 0x09	; 9
    8006:	0e 94 4c 4c 	call	0x9898	; 0x9898 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    800a:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    800e:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    8012:	b0 92 10 09 	sts	0x0910, r11	; 0x800910 <display+0xf>
    8016:	a0 92 0f 09 	sts	0x090F, r10	; 0x80090f <display+0xe>
_Z6UIMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:83
                        display.setCursor(94, 25);
                        if(gps.time.second() < 10)
    801a:	86 e5       	ldi	r24, 0x56	; 86
    801c:	98 e0       	ldi	r25, 0x08	; 8
    801e:	0e 94 2e 68 	call	0xd05c	; 0xd05c <TinyGPSTime::second()>
    8022:	8a 30       	cpi	r24, 0x0A	; 10
    8024:	28 f4       	brcc	.+10     	; 0x8030 <UIMenu()+0x26a>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:84
                                display.print('0');
    8026:	60 e3       	ldi	r22, 0x30	; 48
    8028:	81 e0       	ldi	r24, 0x01	; 1
    802a:	99 e0       	ldi	r25, 0x09	; 9
    802c:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:85
                        display.print(gps.time.second());
    8030:	86 e5       	ldi	r24, 0x56	; 86
    8032:	98 e0       	ldi	r25, 0x08	; 8
    8034:	0e 94 2e 68 	call	0xd05c	; 0xd05c <TinyGPSTime::second()>
    8038:	4a e0       	ldi	r20, 0x0A	; 10
    803a:	50 e0       	ldi	r21, 0x00	; 0
    803c:	68 2f       	mov	r22, r24
    803e:	81 e0       	ldi	r24, 0x01	; 1
    8040:	99 e0       	ldi	r25, 0x09	; 9
    8042:	0e 94 10 6f 	call	0xde20	; 0xde20 <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:88

                        /* Show Time Zone */
                        if(getTimeZone(gps.location.lng()) == 0)
    8046:	86 e2       	ldi	r24, 0x26	; 38
    8048:	98 e0       	ldi	r25, 0x08	; 8
    804a:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    804e:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    8052:	d0 93 0e 09 	sts	0x090E, r29	; 0x80090e <display+0xd>
    8056:	c0 93 0d 09 	sts	0x090D, r28	; 0x80090d <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    805a:	10 93 10 09 	sts	0x0910, r17	; 0x800910 <display+0xf>
    805e:	00 93 0f 09 	sts	0x090F, r16	; 0x80090f <display+0xe>
_Z6UIMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:88
    8062:	89 2b       	or	r24, r25
    8064:	09 f0       	breq	.+2      	; 0x8068 <UIMenu()+0x2a2>
    8066:	4f c0       	rjmp	.+158    	; 0x8106 <UIMenu()+0x340>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:91
                        {
                          display.setCursor(94, 34);
                          display.print(F("UTC"));
    8068:	64 ef       	ldi	r22, 0xF4	; 244
    806a:	71 e0       	ldi	r23, 0x01	; 1
    806c:	81 e0       	ldi	r24, 0x01	; 1
    806e:	99 e0       	ldi	r25, 0x09	; 9
    8070:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:100
                          if(getTimeZone(gps.location.lng()) > 0)
                              display.print('+');
                          display.print(getTimeZone(gps.location.lng()));
                        }

                        display.display();
    8074:	81 e0       	ldi	r24, 0x01	; 1
    8076:	99 e0       	ldi	r25, 0x09	; 9
    8078:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:101
                }
    807c:	5b cf       	rjmp	.-330    	; 0x7f34 <UIMenu()+0x16e>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:34

        /* Get Tab ID on First Line */
        if ((menu.iconY == 0) && (menu.switchMenu == false)) {
                if(menu.iconX == 0)
                        menu.tab = 0;
                if(menu.iconX == 32)
    807e:	80 32       	cpi	r24, 0x20	; 32
    8080:	91 05       	cpc	r25, r1
    8082:	39 f4       	brne	.+14     	; 0x8092 <UIMenu()+0x2cc>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:35
                        menu.tab = 1;
    8084:	81 e0       	ldi	r24, 0x01	; 1
    8086:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:53
                        menu.tab = 5;
                if(menu.iconX == 64)
                        menu.tab = 6;
                if(menu.iconX == 96) {
                        waypoint.isStartUp = true;
                        menu.tab = 7;
    8088:	90 93 47 09 	sts	0x0947, r25	; 0x800947 <menu+0x1>
    808c:	80 93 46 09 	sts	0x0946, r24	; 0x800946 <menu>
    8090:	19 cf       	rjmp	.-462    	; 0x7ec4 <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:36
        if ((menu.iconY == 0) && (menu.switchMenu == false)) {
                if(menu.iconX == 0)
                        menu.tab = 0;
                if(menu.iconX == 32)
                        menu.tab = 1;
                if(menu.iconX == 64)
    8092:	80 34       	cpi	r24, 0x40	; 64
    8094:	91 05       	cpc	r25, r1
    8096:	19 f4       	brne	.+6      	; 0x809e <UIMenu()+0x2d8>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:37
                        menu.tab = 2;
    8098:	82 e0       	ldi	r24, 0x02	; 2
    809a:	90 e0       	ldi	r25, 0x00	; 0
    809c:	f5 cf       	rjmp	.-22     	; 0x8088 <UIMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:38
                if(menu.iconX == 96)
    809e:	80 36       	cpi	r24, 0x60	; 96
    80a0:	91 05       	cpc	r25, r1
    80a2:	09 f0       	breq	.+2      	; 0x80a6 <UIMenu()+0x2e0>
    80a4:	0f cf       	rjmp	.-482    	; 0x7ec4 <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:39
                        menu.tab = 3;
    80a6:	83 e0       	ldi	r24, 0x03	; 3
    80a8:	90 e0       	ldi	r25, 0x00	; 0
    80aa:	ee cf       	rjmp	.-36     	; 0x8088 <UIMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:42
        }
        /* Get Tab ID on Second Line */
        if((menu.iconY == 32) && (menu.switchMenu == false)) {
    80ac:	80 97       	sbiw	r24, 0x20	; 32
    80ae:	09 f0       	breq	.+2      	; 0x80b2 <UIMenu()+0x2ec>
    80b0:	09 cf       	rjmp	.-494    	; 0x7ec4 <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:42 (discriminator 1)
    80b2:	80 91 48 09 	lds	r24, 0x0948	; 0x800948 <menu+0x2>
    80b6:	81 11       	cpse	r24, r1
    80b8:	05 cf       	rjmp	.-502    	; 0x7ec4 <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:43
                if(menu.iconX == 0) {
    80ba:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <menu+0x3>
    80be:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <menu+0x4>
    80c2:	00 97       	sbiw	r24, 0x00	; 0
    80c4:	51 f4       	brne	.+20     	; 0x80da <UIMenu()+0x314>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:44
                        menu.tab = 4;
    80c6:	84 e0       	ldi	r24, 0x04	; 4
    80c8:	90 e0       	ldi	r25, 0x00	; 0
    80ca:	90 93 47 09 	sts	0x0947, r25	; 0x800947 <menu+0x1>
    80ce:	80 93 46 09 	sts	0x0946, r24	; 0x800946 <menu>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:45
                        altitude_graph.drawMesh = true;
    80d2:	81 e0       	ldi	r24, 0x01	; 1
    80d4:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <altitude_graph+0x1>
    80d8:	f5 ce       	rjmp	.-534    	; 0x7ec4 <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:47
                }
                if(menu.iconX == 32)
    80da:	80 32       	cpi	r24, 0x20	; 32
    80dc:	91 05       	cpc	r25, r1
    80de:	19 f4       	brne	.+6      	; 0x80e6 <UIMenu()+0x320>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:48
                        menu.tab = 5;
    80e0:	85 e0       	ldi	r24, 0x05	; 5
    80e2:	90 e0       	ldi	r25, 0x00	; 0
    80e4:	d1 cf       	rjmp	.-94     	; 0x8088 <UIMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:49
                if(menu.iconX == 64)
    80e6:	80 34       	cpi	r24, 0x40	; 64
    80e8:	91 05       	cpc	r25, r1
    80ea:	19 f4       	brne	.+6      	; 0x80f2 <UIMenu()+0x32c>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:50
                        menu.tab = 6;
    80ec:	86 e0       	ldi	r24, 0x06	; 6
    80ee:	90 e0       	ldi	r25, 0x00	; 0
    80f0:	cb cf       	rjmp	.-106    	; 0x8088 <UIMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:51
                if(menu.iconX == 96) {
    80f2:	80 36       	cpi	r24, 0x60	; 96
    80f4:	91 05       	cpc	r25, r1
    80f6:	09 f0       	breq	.+2      	; 0x80fa <UIMenu()+0x334>
    80f8:	e5 ce       	rjmp	.-566    	; 0x7ec4 <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:52
                        waypoint.isStartUp = true;
    80fa:	81 e0       	ldi	r24, 0x01	; 1
    80fc:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <waypoint+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:53
                        menu.tab = 7;
    8100:	87 e0       	ldi	r24, 0x07	; 7
    8102:	90 e0       	ldi	r25, 0x00	; 0
    8104:	c1 cf       	rjmp	.-126    	; 0x8088 <UIMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:94
                        {
                          display.setCursor(94, 34);
                          display.print(F("UTC"));
                        }else{
                          display.setCursor(94, 34);
                          display.print(F("GMT"));
    8106:	60 ef       	ldi	r22, 0xF0	; 240
    8108:	71 e0       	ldi	r23, 0x01	; 1
    810a:	81 e0       	ldi	r24, 0x01	; 1
    810c:	99 e0       	ldi	r25, 0x09	; 9
    810e:	0e 94 35 6e 	call	0xdc6a	; 0xdc6a <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:95
                          if(getTimeZone(gps.location.lng()) > 0)
    8112:	86 e2       	ldi	r24, 0x26	; 38
    8114:	98 e0       	ldi	r25, 0x08	; 8
    8116:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    811a:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    811e:	18 16       	cp	r1, r24
    8120:	19 06       	cpc	r1, r25
    8122:	2c f4       	brge	.+10     	; 0x812e <UIMenu()+0x368>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:96
                              display.print('+');
    8124:	6b e2       	ldi	r22, 0x2B	; 43
    8126:	81 e0       	ldi	r24, 0x01	; 1
    8128:	99 e0       	ldi	r25, 0x09	; 9
    812a:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:97
                          display.print(getTimeZone(gps.location.lng()));
    812e:	86 e2       	ldi	r24, 0x26	; 38
    8130:	98 e0       	ldi	r25, 0x08	; 8
    8132:	0e 94 59 67 	call	0xceb2	; 0xceb2 <TinyGPSLocation::lng()>
    8136:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    813a:	4a e0       	ldi	r20, 0x0A	; 10
    813c:	50 e0       	ldi	r21, 0x00	; 0
    813e:	bc 01       	movw	r22, r24
    8140:	81 e0       	ldi	r24, 0x01	; 1
    8142:	99 e0       	ldi	r25, 0x09	; 9
    8144:	0e 94 fc 6e 	call	0xddf8	; 0xddf8 <Print::print(int, int)>
    8148:	95 cf       	rjmp	.-214    	; 0x8074 <UIMenu()+0x2ae>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:102
                        }

                        display.display();
                }
                display.clearDisplay();
    814a:	81 e0       	ldi	r24, 0x01	; 1
    814c:	99 e0       	ldi	r25, 0x09	; 9
    814e:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:108
        }

        /* End Show Clock On Standby */

        /* Draw Menu Icons */
        display.drawBitmap(4, 4, menuGPS, 24, 24, 1);
    8152:	cc 24       	eor	r12, r12
    8154:	c3 94       	inc	r12
    8156:	d1 2c       	mov	r13, r1
    8158:	98 e1       	ldi	r25, 0x18	; 24
    815a:	e9 2e       	mov	r14, r25
    815c:	f1 2c       	mov	r15, r1
    815e:	08 e1       	ldi	r16, 0x18	; 24
    8160:	10 e0       	ldi	r17, 0x00	; 0
    8162:	21 e2       	ldi	r18, 0x21	; 33
    8164:	34 e1       	ldi	r19, 0x14	; 20
    8166:	44 e0       	ldi	r20, 0x04	; 4
    8168:	50 e0       	ldi	r21, 0x00	; 0
    816a:	64 e0       	ldi	r22, 0x04	; 4
    816c:	70 e0       	ldi	r23, 0x00	; 0
    816e:	81 e0       	ldi	r24, 0x01	; 1
    8170:	99 e0       	ldi	r25, 0x09	; 9
    8172:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:109
        display.drawBitmap(36, 4, menuSatellite, 24, 24, 1);
    8176:	29 e6       	ldi	r18, 0x69	; 105
    8178:	34 e1       	ldi	r19, 0x14	; 20
    817a:	44 e0       	ldi	r20, 0x04	; 4
    817c:	50 e0       	ldi	r21, 0x00	; 0
    817e:	64 e2       	ldi	r22, 0x24	; 36
    8180:	70 e0       	ldi	r23, 0x00	; 0
    8182:	81 e0       	ldi	r24, 0x01	; 1
    8184:	99 e0       	ldi	r25, 0x09	; 9
    8186:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:110
        display.drawBitmap(68, 4, menuRadar, 24, 24, 1);
    818a:	21 eb       	ldi	r18, 0xB1	; 177
    818c:	34 e1       	ldi	r19, 0x14	; 20
    818e:	44 e0       	ldi	r20, 0x04	; 4
    8190:	50 e0       	ldi	r21, 0x00	; 0
    8192:	64 e4       	ldi	r22, 0x44	; 68
    8194:	70 e0       	ldi	r23, 0x00	; 0
    8196:	81 e0       	ldi	r24, 0x01	; 1
    8198:	99 e0       	ldi	r25, 0x09	; 9
    819a:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:111
        display.drawBitmap(100, 4, menuCompass, 24, 24, 1);
    819e:	29 ef       	ldi	r18, 0xF9	; 249
    81a0:	34 e1       	ldi	r19, 0x14	; 20
    81a2:	44 e0       	ldi	r20, 0x04	; 4
    81a4:	50 e0       	ldi	r21, 0x00	; 0
    81a6:	64 e6       	ldi	r22, 0x64	; 100
    81a8:	70 e0       	ldi	r23, 0x00	; 0
    81aa:	81 e0       	ldi	r24, 0x01	; 1
    81ac:	99 e0       	ldi	r25, 0x09	; 9
    81ae:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:112
        display.drawBitmap(4, 36, menuAltimeter, 24, 24, 1);
    81b2:	21 e4       	ldi	r18, 0x41	; 65
    81b4:	35 e1       	ldi	r19, 0x15	; 21
    81b6:	44 e2       	ldi	r20, 0x24	; 36
    81b8:	50 e0       	ldi	r21, 0x00	; 0
    81ba:	64 e0       	ldi	r22, 0x04	; 4
    81bc:	70 e0       	ldi	r23, 0x00	; 0
    81be:	81 e0       	ldi	r24, 0x01	; 1
    81c0:	99 e0       	ldi	r25, 0x09	; 9
    81c2:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:113
        display.drawBitmap(36, 36, menuHardware, 24, 24, 1);
    81c6:	29 e8       	ldi	r18, 0x89	; 137
    81c8:	35 e1       	ldi	r19, 0x15	; 21
    81ca:	44 e2       	ldi	r20, 0x24	; 36
    81cc:	50 e0       	ldi	r21, 0x00	; 0
    81ce:	64 e2       	ldi	r22, 0x24	; 36
    81d0:	70 e0       	ldi	r23, 0x00	; 0
    81d2:	81 e0       	ldi	r24, 0x01	; 1
    81d4:	99 e0       	ldi	r25, 0x09	; 9
    81d6:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:114
        display.drawBitmap(68, 36, menuLog, 24, 24, 1);
    81da:	21 ed       	ldi	r18, 0xD1	; 209
    81dc:	35 e1       	ldi	r19, 0x15	; 21
    81de:	44 e2       	ldi	r20, 0x24	; 36
    81e0:	50 e0       	ldi	r21, 0x00	; 0
    81e2:	64 e4       	ldi	r22, 0x44	; 68
    81e4:	70 e0       	ldi	r23, 0x00	; 0
    81e6:	81 e0       	ldi	r24, 0x01	; 1
    81e8:	99 e0       	ldi	r25, 0x09	; 9
    81ea:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:115
        display.drawBitmap(100, 36, menuNavigation, 24, 24, 1);
    81ee:	29 e1       	ldi	r18, 0x19	; 25
    81f0:	36 e1       	ldi	r19, 0x16	; 22
    81f2:	44 e2       	ldi	r20, 0x24	; 36
    81f4:	50 e0       	ldi	r21, 0x00	; 0
    81f6:	64 e6       	ldi	r22, 0x64	; 100
    81f8:	70 e0       	ldi	r23, 0x00	; 0
    81fa:	81 e0       	ldi	r24, 0x01	; 1
    81fc:	99 e0       	ldi	r25, 0x09	; 9
    81fe:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:117

        display.drawRoundRect(menu.iconX, menu.iconY, 32, 32, 3, WHITE);
    8202:	40 91 4b 09 	lds	r20, 0x094B	; 0x80094b <menu+0x5>
    8206:	50 91 4c 09 	lds	r21, 0x094C	; 0x80094c <menu+0x6>
    820a:	60 91 49 09 	lds	r22, 0x0949	; 0x800949 <menu+0x3>
    820e:	70 91 4a 09 	lds	r23, 0x094A	; 0x80094a <menu+0x4>
    8212:	23 e0       	ldi	r18, 0x03	; 3
    8214:	e2 2e       	mov	r14, r18
    8216:	f1 2c       	mov	r15, r1
    8218:	00 e2       	ldi	r16, 0x20	; 32
    821a:	10 e0       	ldi	r17, 0x00	; 0
    821c:	20 e2       	ldi	r18, 0x20	; 32
    821e:	30 e0       	ldi	r19, 0x00	; 0
    8220:	81 e0       	ldi	r24, 0x01	; 1
    8222:	99 e0       	ldi	r25, 0x09	; 9
    8224:	0e 94 c6 47 	call	0x8f8c	; 0x8f8c <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:118
        display.display();
    8228:	81 e0       	ldi	r24, 0x01	; 1
    822a:	99 e0       	ldi	r25, 0x09	; 9
    822c:	0e 94 5f 52 	call	0xa4be	; 0xa4be <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:120

        while (menu.switchMenu) {
    8230:	80 91 48 09 	lds	r24, 0x0948	; 0x800948 <menu+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:121
                switch (menu.tab) {
    8234:	e0 91 46 09 	lds	r30, 0x0946	; 0x800946 <menu>
    8238:	f0 91 47 09 	lds	r31, 0x0947	; 0x800947 <menu+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:120
        display.drawBitmap(100, 36, menuNavigation, 24, 24, 1);

        display.drawRoundRect(menu.iconX, menu.iconY, 32, 32, 3, WHITE);
        display.display();

        while (menu.switchMenu) {
    823c:	88 23       	and	r24, r24
    823e:	09 f4       	brne	.+2      	; 0x8242 <UIMenu()+0x47c>
    8240:	63 c0       	rjmp	.+198    	; 0x8308 <UIMenu()+0x542>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:121
                switch (menu.tab) {
    8242:	e8 30       	cpi	r30, 0x08	; 8
    8244:	f1 05       	cpc	r31, r1
    8246:	d0 f7       	brcc	.-12     	; 0x823c <UIMenu()+0x476>
    8248:	e8 5d       	subi	r30, 0xD8	; 216
    824a:	fe 4b       	sbci	r31, 0xBE	; 190
    824c:	0c 94 25 75 	jmp	0xea4a	; 0xea4a <__tablejump2__>
    8250:	30 41       	sbci	r19, 0x10	; 16
    8252:	3b 41       	sbci	r19, 0x1B	; 27
    8254:	4e 41       	sbci	r20, 0x1E	; 30
    8256:	59 41       	sbci	r21, 0x19	; 25
    8258:	70 41       	sbci	r23, 0x10	; 16
    825a:	77 41       	sbci	r23, 0x17	; 23
    825c:	7e 41       	sbci	r23, 0x1E	; 30
    825e:	81 41       	sbci	r24, 0x11	; 17
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:123
                case 0:
                        ShowMenuIcon(GPS_ICON);
    8260:	84 e0       	ldi	r24, 0x04	; 4
    8262:	90 e0       	ldi	r25, 0x00	; 0
    8264:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:124
                        GPSMenu();
    8268:	0e 94 3d 36 	call	0x6c7a	; 0x6c7a <GPSMenu()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:125
                        ButtonIO();
    826c:	0e 94 7e 20 	call	0x40fc	; 0x40fc <ButtonIO()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:178
                        menu.lastTick = millis();
                        break;

                case 7:
                        WaypointMenu();
                        dataSensIndicator();
    8270:	0e 94 4d 15 	call	0x2a9a	; 0x2a9a <dataSensIndicator()>
    8274:	26 c0       	rjmp	.+76     	; 0x82c2 <UIMenu()+0x4fc>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:132
                        menu.lastTick = millis();
                        display.clearDisplay();
                        break;

                case 1:
                        ShowMenuIcon(SATELLITE_ICON);
    8276:	86 e0       	ldi	r24, 0x06	; 6
    8278:	90 e0       	ldi	r25, 0x00	; 0
    827a:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:133
                        SatelliteTracker();
    827e:	0e 94 d5 24 	call	0x49aa	; 0x49aa <SatelliteTracker()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:134
                        ButtonIO();
    8282:	0e 94 7e 20 	call	0x40fc	; 0x40fc <ButtonIO()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:173
                        break;

                case 6:
                        LogMenu();
                        dataSensIndicator();
                        menu.lastTick = millis();
    8286:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    828a:	60 93 53 09 	sts	0x0953, r22	; 0x800953 <menu+0xd>
    828e:	70 93 54 09 	sts	0x0954, r23	; 0x800954 <menu+0xe>
    8292:	80 93 55 09 	sts	0x0955, r24	; 0x800955 <menu+0xf>
    8296:	90 93 56 09 	sts	0x0956, r25	; 0x800956 <menu+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:174
                        break;
    829a:	ca cf       	rjmp	.-108    	; 0x8230 <UIMenu()+0x46a>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:139
                        ButtonIO();
                        menu.lastTick = millis();
                        break;

                case 2:
                        ShowMenuIcon(DEVIATION_MAP_ICON);
    829c:	85 e0       	ldi	r24, 0x05	; 5
    829e:	90 e0       	ldi	r25, 0x00	; 0
    82a0:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:140
                        DeviationMap();
    82a4:	0e 94 bc 39 	call	0x7378	; 0x7378 <DeviationMap()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:165
                        break;

                case 5:
                        ShowMenuIcon(HARDWARE_ICON);
                        InfoMenu();
                        ButtonIO();
    82a8:	0e 94 7e 20 	call	0x40fc	; 0x40fc <ButtonIO()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:172
                        menu.lastTick = millis();
                        break;

                case 6:
                        LogMenu();
                        dataSensIndicator();
    82ac:	0e 94 4d 15 	call	0x2a9a	; 0x2a9a <dataSensIndicator()>
    82b0:	ea cf       	rjmp	.-44     	; 0x8286 <UIMenu()+0x4c0>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:147
                        dataSensIndicator();
                        menu.lastTick = millis();
                        break;

                case 3:
                        ShowMenuIcon(COMPASS_ICON);
    82b2:	81 e0       	ldi	r24, 0x01	; 1
    82b4:	90 e0       	ldi	r25, 0x00	; 0
    82b6:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:148
                        CompassMenu();
    82ba:	0e 94 24 21 	call	0x4248	; 0x4248 <CompassMenu()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:149
                        ButtonIO();
    82be:	0e 94 7e 20 	call	0x40fc	; 0x40fc <ButtonIO()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:179
                        break;

                case 7:
                        WaypointMenu();
                        dataSensIndicator();
                        menu.lastTick = millis();
    82c2:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    82c6:	60 93 53 09 	sts	0x0953, r22	; 0x800953 <menu+0xd>
    82ca:	70 93 54 09 	sts	0x0954, r23	; 0x800954 <menu+0xe>
    82ce:	80 93 55 09 	sts	0x0955, r24	; 0x800955 <menu+0xf>
    82d2:	90 93 56 09 	sts	0x0956, r25	; 0x800956 <menu+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:180
                        display.clearDisplay();
    82d6:	81 e0       	ldi	r24, 0x01	; 1
    82d8:	99 e0       	ldi	r25, 0x09	; 9
    82da:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:181
                        break;
    82de:	a8 cf       	rjmp	.-176    	; 0x8230 <UIMenu()+0x46a>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:155
                        menu.lastTick = millis();
                        display.clearDisplay();
                        break;

                case 4:
                        ShowMenuIcon(ALTIMETER_ICON);
    82e0:	82 e0       	ldi	r24, 0x02	; 2
    82e2:	90 e0       	ldi	r25, 0x00	; 0
    82e4:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:156
                        AltitudeMenu();
    82e8:	0e 94 48 3c 	call	0x7890	; 0x7890 <AltitudeMenu()>
    82ec:	dd cf       	rjmp	.-70     	; 0x82a8 <UIMenu()+0x4e2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:163
                        dataSensIndicator();
                        menu.lastTick = millis();
                        break;

                case 5:
                        ShowMenuIcon(HARDWARE_ICON);
    82ee:	83 e0       	ldi	r24, 0x03	; 3
    82f0:	90 e0       	ldi	r25, 0x00	; 0
    82f2:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:164
                        InfoMenu();
    82f6:	0e 94 25 31 	call	0x624a	; 0x624a <InfoMenu()>
    82fa:	d6 cf       	rjmp	.-84     	; 0x82a8 <UIMenu()+0x4e2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:171
                        dataSensIndicator();
                        menu.lastTick = millis();
                        break;

                case 6:
                        LogMenu();
    82fc:	0e 94 8f 2d 	call	0x5b1e	; 0x5b1e <LogMenu()>
    8300:	d5 cf       	rjmp	.-86     	; 0x82ac <UIMenu()+0x4e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:177
                        dataSensIndicator();
                        menu.lastTick = millis();
                        break;

                case 7:
                        WaypointMenu();
    8302:	0e 94 5f 29 	call	0x52be	; 0x52be <WaypointMenu()>
    8306:	b4 cf       	rjmp	.-152    	; 0x8270 <UIMenu()+0x4aa>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:184
                        menu.lastTick = millis();
                        display.clearDisplay();
                        break;
                }
        }
}
    8308:	df 91       	pop	r29
    830a:	cf 91       	pop	r28
    830c:	1f 91       	pop	r17
    830e:	0f 91       	pop	r16
    8310:	ff 90       	pop	r15
    8312:	ef 90       	pop	r14
    8314:	df 90       	pop	r13
    8316:	cf 90       	pop	r12
    8318:	bf 90       	pop	r11
    831a:	af 90       	pop	r10
    831c:	9f 90       	pop	r9
    831e:	08 95       	ret

00008320 <loop>:
loop():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:147
        delay(3000);
        display.clearDisplay();
}

void loop() {
        UIMenu();
    8320:	0c 94 e3 3e 	jmp	0x7dc6	; 0x7dc6 <UIMenu()>

00008324 <Print::availableForWrite()>:
_ZN5Print17availableForWriteEv():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1118
*/
/**************************************************************************/
void Adafruit_GFX::drawChar(int16_t x, int16_t y, unsigned char c,
                            uint16_t color, uint16_t bg, uint8_t size) {
  drawChar(x, y, c, color, bg, size, size);
}
    8324:	90 e0       	ldi	r25, 0x00	; 0
    8326:	80 e0       	ldi	r24, 0x00	; 0
    8328:	08 95       	ret

0000832a <Print::flush()>:
_ZN5Print5flushEv():
    832a:	08 95       	ret

0000832c <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX9writeLineEiiiij():
    832c:	2f 92       	push	r2
    832e:	3f 92       	push	r3
    8330:	4f 92       	push	r4
    8332:	5f 92       	push	r5
    8334:	6f 92       	push	r6
    8336:	7f 92       	push	r7
    8338:	8f 92       	push	r8
    833a:	9f 92       	push	r9
    833c:	af 92       	push	r10
    833e:	bf 92       	push	r11
    8340:	cf 92       	push	r12
    8342:	df 92       	push	r13
    8344:	ef 92       	push	r14
    8346:	ff 92       	push	r15
    8348:	0f 93       	push	r16
    834a:	1f 93       	push	r17
    834c:	cf 93       	push	r28
    834e:	df 93       	push	r29
    8350:	00 d0       	rcall	.+0      	; 0x8352 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x26>
    8352:	00 d0       	rcall	.+0      	; 0x8354 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x28>
    8354:	00 d0       	rcall	.+0      	; 0x8356 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x2a>
    8356:	cd b7       	in	r28, 0x3d	; 61
    8358:	de b7       	in	r29, 0x3e	; 62
    835a:	3c 01       	movw	r6, r24
    835c:	6a 01       	movw	r12, r20
    835e:	3e 83       	std	Y+6, r19	; 0x06
    8360:	2d 83       	std	Y+5, r18	; 0x05
    8362:	fc 82       	std	Y+4, r15	; 0x04
    8364:	eb 82       	std	Y+3, r14	; 0x03
    8366:	58 01       	movw	r10, r16
    8368:	a4 1a       	sub	r10, r20
    836a:	b5 0a       	sbc	r11, r21
    836c:	b7 fe       	sbrs	r11, 7
    836e:	03 c0       	rjmp	.+6      	; 0x8376 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x4a>
    8370:	b1 94       	neg	r11
    8372:	a1 94       	neg	r10
    8374:	b1 08       	sbc	r11, r1
    8376:	8d 80       	ldd	r8, Y+5	; 0x05
    8378:	9e 80       	ldd	r9, Y+6	; 0x06
    837a:	86 1a       	sub	r8, r22
    837c:	97 0a       	sbc	r9, r23
    837e:	97 fe       	sbrs	r9, 7
    8380:	03 c0       	rjmp	.+6      	; 0x8388 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x5c>
    8382:	91 94       	neg	r9
    8384:	81 94       	neg	r8
    8386:	91 08       	sbc	r9, r1
    8388:	8a 14       	cp	r8, r10
    838a:	9b 04       	cpc	r9, r11
    838c:	5c f0       	brlt	.+22     	; 0x83a4 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x78>
    838e:	90 2f       	mov	r25, r16
    8390:	81 2f       	mov	r24, r17
    8392:	0d 81       	ldd	r16, Y+5	; 0x05
    8394:	1e 81       	ldd	r17, Y+6	; 0x06
    8396:	9d 83       	std	Y+5, r25	; 0x05
    8398:	8e 83       	std	Y+6, r24	; 0x06
    839a:	9c 2d       	mov	r25, r12
    839c:	8d 2d       	mov	r24, r13
    839e:	6b 01       	movw	r12, r22
    83a0:	69 2f       	mov	r22, r25
    83a2:	78 2f       	mov	r23, r24
    83a4:	0c 15       	cp	r16, r12
    83a6:	1d 05       	cpc	r17, r13
    83a8:	5c f0       	brlt	.+22     	; 0x83c0 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x94>
    83aa:	9d 81       	ldd	r25, Y+5	; 0x05
    83ac:	8e 81       	ldd	r24, Y+6	; 0x06
    83ae:	7e 83       	std	Y+6, r23	; 0x06
    83b0:	6d 83       	std	Y+5, r22	; 0x05
    83b2:	69 2f       	mov	r22, r25
    83b4:	78 2f       	mov	r23, r24
    83b6:	90 2f       	mov	r25, r16
    83b8:	81 2f       	mov	r24, r17
    83ba:	86 01       	movw	r16, r12
    83bc:	c9 2e       	mov	r12, r25
    83be:	d8 2e       	mov	r13, r24
    83c0:	16 01       	movw	r2, r12
    83c2:	20 1a       	sub	r2, r16
    83c4:	31 0a       	sbc	r3, r17
    83c6:	2b 01       	movw	r4, r22
    83c8:	2d 81       	ldd	r18, Y+5	; 0x05
    83ca:	3e 81       	ldd	r19, Y+6	; 0x06
    83cc:	42 1a       	sub	r4, r18
    83ce:	53 0a       	sbc	r5, r19
    83d0:	57 fe       	sbrs	r5, 7
    83d2:	03 c0       	rjmp	.+6      	; 0x83da <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xae>
    83d4:	51 94       	neg	r5
    83d6:	41 94       	neg	r4
    83d8:	51 08       	sbc	r5, r1
    83da:	71 01       	movw	r14, r2
    83dc:	37 fe       	sbrs	r3, 7
    83de:	03 c0       	rjmp	.+6      	; 0x83e6 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xba>
    83e0:	3f ef       	ldi	r19, 0xFF	; 255
    83e2:	e3 1a       	sub	r14, r19
    83e4:	f3 0a       	sbc	r15, r19
    83e6:	f5 94       	asr	r15
    83e8:	e7 94       	ror	r14
    83ea:	8d 81       	ldd	r24, Y+5	; 0x05
    83ec:	9e 81       	ldd	r25, Y+6	; 0x06
    83ee:	86 17       	cp	r24, r22
    83f0:	97 07       	cpc	r25, r23
    83f2:	5c f5       	brge	.+86     	; 0x844a <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x11e>
    83f4:	a1 e0       	ldi	r26, 0x01	; 1
    83f6:	b0 e0       	ldi	r27, 0x00	; 0
    83f8:	ba 83       	std	Y+2, r27	; 0x02
    83fa:	a9 83       	std	Y+1, r26	; 0x01
    83fc:	c0 16       	cp	r12, r16
    83fe:	d1 06       	cpc	r13, r17
    8400:	4c f1       	brlt	.+82     	; 0x8454 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x128>
    8402:	d3 01       	movw	r26, r6
    8404:	ed 91       	ld	r30, X+
    8406:	fc 91       	ld	r31, X
    8408:	04 84       	ldd	r0, Z+12	; 0x0c
    840a:	f5 85       	ldd	r31, Z+13	; 0x0d
    840c:	e0 2d       	mov	r30, r0
    840e:	2b 81       	ldd	r18, Y+3	; 0x03
    8410:	3c 81       	ldd	r19, Y+4	; 0x04
    8412:	a8 01       	movw	r20, r16
    8414:	6d 81       	ldd	r22, Y+5	; 0x05
    8416:	7e 81       	ldd	r23, Y+6	; 0x06
    8418:	8a 14       	cp	r8, r10
    841a:	9b 04       	cpc	r9, r11
    841c:	1c f0       	brlt	.+6      	; 0x8424 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xf8>
    841e:	4d 81       	ldd	r20, Y+5	; 0x05
    8420:	5e 81       	ldd	r21, Y+6	; 0x06
    8422:	b8 01       	movw	r22, r16
    8424:	c3 01       	movw	r24, r6
    8426:	09 95       	icall
    8428:	e4 18       	sub	r14, r4
    842a:	f5 08       	sbc	r15, r5
    842c:	f7 fe       	sbrs	r15, 7
    842e:	0a c0       	rjmp	.+20     	; 0x8444 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x118>
    8430:	2d 81       	ldd	r18, Y+5	; 0x05
    8432:	3e 81       	ldd	r19, Y+6	; 0x06
    8434:	89 81       	ldd	r24, Y+1	; 0x01
    8436:	9a 81       	ldd	r25, Y+2	; 0x02
    8438:	28 0f       	add	r18, r24
    843a:	39 1f       	adc	r19, r25
    843c:	3e 83       	std	Y+6, r19	; 0x06
    843e:	2d 83       	std	Y+5, r18	; 0x05
    8440:	e2 0c       	add	r14, r2
    8442:	f3 1c       	adc	r15, r3
    8444:	0f 5f       	subi	r16, 0xFF	; 255
    8446:	1f 4f       	sbci	r17, 0xFF	; 255
    8448:	d9 cf       	rjmp	.-78     	; 0x83fc <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xd0>
    844a:	2f ef       	ldi	r18, 0xFF	; 255
    844c:	3f ef       	ldi	r19, 0xFF	; 255
    844e:	3a 83       	std	Y+2, r19	; 0x02
    8450:	29 83       	std	Y+1, r18	; 0x01
    8452:	d4 cf       	rjmp	.-88     	; 0x83fc <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xd0>
    8454:	26 96       	adiw	r28, 0x06	; 6
    8456:	0f b6       	in	r0, 0x3f	; 63
    8458:	f8 94       	cli
    845a:	de bf       	out	0x3e, r29	; 62
    845c:	0f be       	out	0x3f, r0	; 63
    845e:	cd bf       	out	0x3d, r28	; 61
    8460:	df 91       	pop	r29
    8462:	cf 91       	pop	r28
    8464:	1f 91       	pop	r17
    8466:	0f 91       	pop	r16
    8468:	ff 90       	pop	r15
    846a:	ef 90       	pop	r14
    846c:	df 90       	pop	r13
    846e:	cf 90       	pop	r12
    8470:	bf 90       	pop	r11
    8472:	af 90       	pop	r10
    8474:	9f 90       	pop	r9
    8476:	8f 90       	pop	r8
    8478:	7f 90       	pop	r7
    847a:	6f 90       	pop	r6
    847c:	5f 90       	pop	r5
    847e:	4f 90       	pop	r4
    8480:	3f 90       	pop	r3
    8482:	2f 90       	pop	r2
    8484:	08 95       	ret

00008486 <Adafruit_GFX::startWrite()>:
_ZN12Adafruit_GFX10startWriteEv():
    8486:	08 95       	ret

00008488 <Adafruit_GFX::writePixel(int, int, unsigned int)>:
_ZN12Adafruit_GFX10writePixelEiij():
    8488:	dc 01       	movw	r26, r24
    848a:	ed 91       	ld	r30, X+
    848c:	fc 91       	ld	r31, X
    848e:	00 84       	ldd	r0, Z+8	; 0x08
    8490:	f1 85       	ldd	r31, Z+9	; 0x09
    8492:	e0 2d       	mov	r30, r0
    8494:	09 94       	ijmp

00008496 <Adafruit_GFX::writeFastVLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX14writeFastVLineEiiij():
    8496:	0f 93       	push	r16
    8498:	1f 93       	push	r17
    849a:	dc 01       	movw	r26, r24
    849c:	ed 91       	ld	r30, X+
    849e:	fc 91       	ld	r31, X
    84a0:	04 8c       	ldd	r0, Z+28	; 0x1c
    84a2:	f5 8d       	ldd	r31, Z+29	; 0x1d
    84a4:	e0 2d       	mov	r30, r0
    84a6:	09 95       	icall
    84a8:	1f 91       	pop	r17
    84aa:	0f 91       	pop	r16
    84ac:	08 95       	ret

000084ae <Adafruit_GFX::writeFastHLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX14writeFastHLineEiiij():
    84ae:	0f 93       	push	r16
    84b0:	1f 93       	push	r17
    84b2:	dc 01       	movw	r26, r24
    84b4:	ed 91       	ld	r30, X+
    84b6:	fc 91       	ld	r31, X
    84b8:	06 8c       	ldd	r0, Z+30	; 0x1e
    84ba:	f7 8d       	ldd	r31, Z+31	; 0x1f
    84bc:	e0 2d       	mov	r30, r0
    84be:	09 95       	icall
    84c0:	1f 91       	pop	r17
    84c2:	0f 91       	pop	r16
    84c4:	08 95       	ret

000084c6 <Adafruit_GFX::writeFillRect(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13writeFillRectEiiiij():
    84c6:	ef 92       	push	r14
    84c8:	ff 92       	push	r15
    84ca:	0f 93       	push	r16
    84cc:	1f 93       	push	r17
    84ce:	dc 01       	movw	r26, r24
    84d0:	ed 91       	ld	r30, X+
    84d2:	fc 91       	ld	r31, X
    84d4:	00 a0       	ldd	r0, Z+32	; 0x20
    84d6:	f1 a1       	ldd	r31, Z+33	; 0x21
    84d8:	e0 2d       	mov	r30, r0
    84da:	09 95       	icall
    84dc:	1f 91       	pop	r17
    84de:	0f 91       	pop	r16
    84e0:	ff 90       	pop	r15
    84e2:	ef 90       	pop	r14
    84e4:	08 95       	ret

000084e6 <Adafruit_GFX::drawFastVLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13drawFastVLineEiiij():
    84e6:	8f 92       	push	r8
    84e8:	9f 92       	push	r9
    84ea:	af 92       	push	r10
    84ec:	bf 92       	push	r11
    84ee:	cf 92       	push	r12
    84f0:	df 92       	push	r13
    84f2:	ef 92       	push	r14
    84f4:	ff 92       	push	r15
    84f6:	0f 93       	push	r16
    84f8:	1f 93       	push	r17
    84fa:	cf 93       	push	r28
    84fc:	df 93       	push	r29
    84fe:	ec 01       	movw	r28, r24
    8500:	5b 01       	movw	r10, r22
    8502:	4a 01       	movw	r8, r20
    8504:	69 01       	movw	r12, r18
    8506:	78 01       	movw	r14, r16
    8508:	e8 81       	ld	r30, Y
    850a:	f9 81       	ldd	r31, Y+1	; 0x01
    850c:	02 84       	ldd	r0, Z+10	; 0x0a
    850e:	f3 85       	ldd	r31, Z+11	; 0x0b
    8510:	e0 2d       	mov	r30, r0
    8512:	09 95       	icall
    8514:	c8 0c       	add	r12, r8
    8516:	d9 1c       	adc	r13, r9
    8518:	86 01       	movw	r16, r12
    851a:	01 50       	subi	r16, 0x01	; 1
    851c:	11 09       	sbc	r17, r1
    851e:	e8 81       	ld	r30, Y
    8520:	f9 81       	ldd	r31, Y+1	; 0x01
    8522:	04 88       	ldd	r0, Z+20	; 0x14
    8524:	f5 89       	ldd	r31, Z+21	; 0x15
    8526:	e0 2d       	mov	r30, r0
    8528:	95 01       	movw	r18, r10
    852a:	a4 01       	movw	r20, r8
    852c:	b5 01       	movw	r22, r10
    852e:	ce 01       	movw	r24, r28
    8530:	09 95       	icall
    8532:	e8 81       	ld	r30, Y
    8534:	f9 81       	ldd	r31, Y+1	; 0x01
    8536:	06 88       	ldd	r0, Z+22	; 0x16
    8538:	f7 89       	ldd	r31, Z+23	; 0x17
    853a:	e0 2d       	mov	r30, r0
    853c:	ce 01       	movw	r24, r28
    853e:	df 91       	pop	r29
    8540:	cf 91       	pop	r28
    8542:	1f 91       	pop	r17
    8544:	0f 91       	pop	r16
    8546:	ff 90       	pop	r15
    8548:	ef 90       	pop	r14
    854a:	df 90       	pop	r13
    854c:	cf 90       	pop	r12
    854e:	bf 90       	pop	r11
    8550:	af 90       	pop	r10
    8552:	9f 90       	pop	r9
    8554:	8f 90       	pop	r8
    8556:	09 94       	ijmp

00008558 <Adafruit_GFX::drawFastHLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13drawFastHLineEiiij():
    8558:	8f 92       	push	r8
    855a:	9f 92       	push	r9
    855c:	af 92       	push	r10
    855e:	bf 92       	push	r11
    8560:	cf 92       	push	r12
    8562:	df 92       	push	r13
    8564:	ef 92       	push	r14
    8566:	ff 92       	push	r15
    8568:	0f 93       	push	r16
    856a:	1f 93       	push	r17
    856c:	cf 93       	push	r28
    856e:	df 93       	push	r29
    8570:	ec 01       	movw	r28, r24
    8572:	5b 01       	movw	r10, r22
    8574:	4a 01       	movw	r8, r20
    8576:	69 01       	movw	r12, r18
    8578:	e8 81       	ld	r30, Y
    857a:	f9 81       	ldd	r31, Y+1	; 0x01
    857c:	02 84       	ldd	r0, Z+10	; 0x0a
    857e:	f3 85       	ldd	r31, Z+11	; 0x0b
    8580:	e0 2d       	mov	r30, r0
    8582:	09 95       	icall
    8584:	95 01       	movw	r18, r10
    8586:	2c 0d       	add	r18, r12
    8588:	3d 1d       	adc	r19, r13
    858a:	21 50       	subi	r18, 0x01	; 1
    858c:	31 09       	sbc	r19, r1
    858e:	e8 81       	ld	r30, Y
    8590:	f9 81       	ldd	r31, Y+1	; 0x01
    8592:	04 88       	ldd	r0, Z+20	; 0x14
    8594:	f5 89       	ldd	r31, Z+21	; 0x15
    8596:	e0 2d       	mov	r30, r0
    8598:	78 01       	movw	r14, r16
    859a:	84 01       	movw	r16, r8
    859c:	a4 01       	movw	r20, r8
    859e:	b5 01       	movw	r22, r10
    85a0:	ce 01       	movw	r24, r28
    85a2:	09 95       	icall
    85a4:	e8 81       	ld	r30, Y
    85a6:	f9 81       	ldd	r31, Y+1	; 0x01
    85a8:	06 88       	ldd	r0, Z+22	; 0x16
    85aa:	f7 89       	ldd	r31, Z+23	; 0x17
    85ac:	e0 2d       	mov	r30, r0
    85ae:	ce 01       	movw	r24, r28
    85b0:	df 91       	pop	r29
    85b2:	cf 91       	pop	r28
    85b4:	1f 91       	pop	r17
    85b6:	0f 91       	pop	r16
    85b8:	ff 90       	pop	r15
    85ba:	ef 90       	pop	r14
    85bc:	df 90       	pop	r13
    85be:	cf 90       	pop	r12
    85c0:	bf 90       	pop	r11
    85c2:	af 90       	pop	r10
    85c4:	9f 90       	pop	r9
    85c6:	8f 90       	pop	r8
    85c8:	09 94       	ijmp

000085ca <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX8fillRectEiiiij():
    85ca:	4f 92       	push	r4
    85cc:	5f 92       	push	r5
    85ce:	6f 92       	push	r6
    85d0:	7f 92       	push	r7
    85d2:	8f 92       	push	r8
    85d4:	9f 92       	push	r9
    85d6:	af 92       	push	r10
    85d8:	bf 92       	push	r11
    85da:	cf 92       	push	r12
    85dc:	df 92       	push	r13
    85de:	ef 92       	push	r14
    85e0:	ff 92       	push	r15
    85e2:	0f 93       	push	r16
    85e4:	1f 93       	push	r17
    85e6:	cf 93       	push	r28
    85e8:	df 93       	push	r29
    85ea:	6c 01       	movw	r12, r24
    85ec:	2b 01       	movw	r4, r22
    85ee:	5a 01       	movw	r10, r20
    85f0:	39 01       	movw	r6, r18
    85f2:	48 01       	movw	r8, r16
    85f4:	dc 01       	movw	r26, r24
    85f6:	ed 91       	ld	r30, X+
    85f8:	fc 91       	ld	r31, X
    85fa:	02 84       	ldd	r0, Z+10	; 0x0a
    85fc:	f3 85       	ldd	r31, Z+11	; 0x0b
    85fe:	e0 2d       	mov	r30, r0
    8600:	09 95       	icall
    8602:	e2 01       	movw	r28, r4
    8604:	64 0c       	add	r6, r4
    8606:	75 1c       	adc	r7, r5
    8608:	d6 01       	movw	r26, r12
    860a:	ed 91       	ld	r30, X+
    860c:	fc 91       	ld	r31, X
    860e:	c6 15       	cp	r28, r6
    8610:	d7 05       	cpc	r29, r7
    8612:	5c f4       	brge	.+22     	; 0x862a <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)+0x60>
    8614:	00 88       	ldd	r0, Z+16	; 0x10
    8616:	f1 89       	ldd	r31, Z+17	; 0x11
    8618:	e0 2d       	mov	r30, r0
    861a:	87 01       	movw	r16, r14
    861c:	94 01       	movw	r18, r8
    861e:	a5 01       	movw	r20, r10
    8620:	be 01       	movw	r22, r28
    8622:	c6 01       	movw	r24, r12
    8624:	09 95       	icall
    8626:	21 96       	adiw	r28, 0x01	; 1
    8628:	ef cf       	rjmp	.-34     	; 0x8608 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)+0x3e>
    862a:	06 88       	ldd	r0, Z+22	; 0x16
    862c:	f7 89       	ldd	r31, Z+23	; 0x17
    862e:	e0 2d       	mov	r30, r0
    8630:	c6 01       	movw	r24, r12
    8632:	df 91       	pop	r29
    8634:	cf 91       	pop	r28
    8636:	1f 91       	pop	r17
    8638:	0f 91       	pop	r16
    863a:	ff 90       	pop	r15
    863c:	ef 90       	pop	r14
    863e:	df 90       	pop	r13
    8640:	cf 90       	pop	r12
    8642:	bf 90       	pop	r11
    8644:	af 90       	pop	r10
    8646:	9f 90       	pop	r9
    8648:	8f 90       	pop	r8
    864a:	7f 90       	pop	r7
    864c:	6f 90       	pop	r6
    864e:	5f 90       	pop	r5
    8650:	4f 90       	pop	r4
    8652:	09 94       	ijmp

00008654 <Adafruit_GFX::fillScreen(unsigned int)>:
_ZN12Adafruit_GFX10fillScreenEj():
    8654:	ef 92       	push	r14
    8656:	ff 92       	push	r15
    8658:	0f 93       	push	r16
    865a:	1f 93       	push	r17
    865c:	dc 01       	movw	r26, r24
    865e:	1a 96       	adiw	r26, 0x0a	; 10
    8660:	0d 91       	ld	r16, X+
    8662:	1c 91       	ld	r17, X
    8664:	1b 97       	sbiw	r26, 0x0b	; 11
    8666:	18 96       	adiw	r26, 0x08	; 8
    8668:	2d 91       	ld	r18, X+
    866a:	3c 91       	ld	r19, X
    866c:	19 97       	sbiw	r26, 0x09	; 9
    866e:	ed 91       	ld	r30, X+
    8670:	fc 91       	ld	r31, X
    8672:	00 a0       	ldd	r0, Z+32	; 0x20
    8674:	f1 a1       	ldd	r31, Z+33	; 0x21
    8676:	e0 2d       	mov	r30, r0
    8678:	7b 01       	movw	r14, r22
    867a:	50 e0       	ldi	r21, 0x00	; 0
    867c:	40 e0       	ldi	r20, 0x00	; 0
    867e:	70 e0       	ldi	r23, 0x00	; 0
    8680:	60 e0       	ldi	r22, 0x00	; 0
    8682:	09 95       	icall
    8684:	1f 91       	pop	r17
    8686:	0f 91       	pop	r16
    8688:	ff 90       	pop	r15
    868a:	ef 90       	pop	r14
    868c:	08 95       	ret

0000868e <Adafruit_GFX::drawRect(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX8drawRectEiiiij():
    868e:	6f 92       	push	r6
    8690:	7f 92       	push	r7
    8692:	8f 92       	push	r8
    8694:	9f 92       	push	r9
    8696:	af 92       	push	r10
    8698:	bf 92       	push	r11
    869a:	cf 92       	push	r12
    869c:	df 92       	push	r13
    869e:	ef 92       	push	r14
    86a0:	ff 92       	push	r15
    86a2:	0f 93       	push	r16
    86a4:	1f 93       	push	r17
    86a6:	cf 93       	push	r28
    86a8:	df 93       	push	r29
    86aa:	ec 01       	movw	r28, r24
    86ac:	6b 01       	movw	r12, r22
    86ae:	5a 01       	movw	r10, r20
    86b0:	39 01       	movw	r6, r18
    86b2:	48 01       	movw	r8, r16
    86b4:	e8 81       	ld	r30, Y
    86b6:	f9 81       	ldd	r31, Y+1	; 0x01
    86b8:	02 84       	ldd	r0, Z+10	; 0x0a
    86ba:	f3 85       	ldd	r31, Z+11	; 0x0b
    86bc:	e0 2d       	mov	r30, r0
    86be:	09 95       	icall
    86c0:	e8 81       	ld	r30, Y
    86c2:	f9 81       	ldd	r31, Y+1	; 0x01
    86c4:	02 88       	ldd	r0, Z+18	; 0x12
    86c6:	f3 89       	ldd	r31, Z+19	; 0x13
    86c8:	e0 2d       	mov	r30, r0
    86ca:	87 01       	movw	r16, r14
    86cc:	93 01       	movw	r18, r6
    86ce:	a5 01       	movw	r20, r10
    86d0:	b6 01       	movw	r22, r12
    86d2:	ce 01       	movw	r24, r28
    86d4:	09 95       	icall
    86d6:	a5 01       	movw	r20, r10
    86d8:	48 0d       	add	r20, r8
    86da:	59 1d       	adc	r21, r9
    86dc:	41 50       	subi	r20, 0x01	; 1
    86de:	51 09       	sbc	r21, r1
    86e0:	e8 81       	ld	r30, Y
    86e2:	f9 81       	ldd	r31, Y+1	; 0x01
    86e4:	02 88       	ldd	r0, Z+18	; 0x12
    86e6:	f3 89       	ldd	r31, Z+19	; 0x13
    86e8:	e0 2d       	mov	r30, r0
    86ea:	93 01       	movw	r18, r6
    86ec:	b6 01       	movw	r22, r12
    86ee:	ce 01       	movw	r24, r28
    86f0:	09 95       	icall
    86f2:	e8 81       	ld	r30, Y
    86f4:	f9 81       	ldd	r31, Y+1	; 0x01
    86f6:	00 88       	ldd	r0, Z+16	; 0x10
    86f8:	f1 89       	ldd	r31, Z+17	; 0x11
    86fa:	e0 2d       	mov	r30, r0
    86fc:	94 01       	movw	r18, r8
    86fe:	a5 01       	movw	r20, r10
    8700:	b6 01       	movw	r22, r12
    8702:	ce 01       	movw	r24, r28
    8704:	09 95       	icall
    8706:	c6 0c       	add	r12, r6
    8708:	d7 1c       	adc	r13, r7
    870a:	b6 01       	movw	r22, r12
    870c:	61 50       	subi	r22, 0x01	; 1
    870e:	71 09       	sbc	r23, r1
    8710:	e8 81       	ld	r30, Y
    8712:	f9 81       	ldd	r31, Y+1	; 0x01
    8714:	00 88       	ldd	r0, Z+16	; 0x10
    8716:	f1 89       	ldd	r31, Z+17	; 0x11
    8718:	e0 2d       	mov	r30, r0
    871a:	94 01       	movw	r18, r8
    871c:	a5 01       	movw	r20, r10
    871e:	ce 01       	movw	r24, r28
    8720:	09 95       	icall
    8722:	e8 81       	ld	r30, Y
    8724:	f9 81       	ldd	r31, Y+1	; 0x01
    8726:	06 88       	ldd	r0, Z+22	; 0x16
    8728:	f7 89       	ldd	r31, Z+23	; 0x17
    872a:	e0 2d       	mov	r30, r0
    872c:	ce 01       	movw	r24, r28
    872e:	df 91       	pop	r29
    8730:	cf 91       	pop	r28
    8732:	1f 91       	pop	r17
    8734:	0f 91       	pop	r16
    8736:	ff 90       	pop	r15
    8738:	ef 90       	pop	r14
    873a:	df 90       	pop	r13
    873c:	cf 90       	pop	r12
    873e:	bf 90       	pop	r11
    8740:	af 90       	pop	r10
    8742:	9f 90       	pop	r9
    8744:	8f 90       	pop	r8
    8746:	7f 90       	pop	r7
    8748:	6f 90       	pop	r6
    874a:	09 94       	ijmp

0000874c <Adafruit_GFX::invertDisplay(bool)>:
_ZN12Adafruit_GFX13invertDisplayEb():
    874c:	08 95       	ret

0000874e <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX8drawLineEiiiij():
    874e:	6f 92       	push	r6
    8750:	7f 92       	push	r7
    8752:	8f 92       	push	r8
    8754:	9f 92       	push	r9
    8756:	af 92       	push	r10
    8758:	bf 92       	push	r11
    875a:	cf 92       	push	r12
    875c:	df 92       	push	r13
    875e:	ef 92       	push	r14
    8760:	ff 92       	push	r15
    8762:	0f 93       	push	r16
    8764:	1f 93       	push	r17
    8766:	cf 93       	push	r28
    8768:	df 93       	push	r29
    876a:	5c 01       	movw	r10, r24
    876c:	eb 01       	movw	r28, r22
    876e:	6a 01       	movw	r12, r20
    8770:	49 01       	movw	r8, r18
    8772:	38 01       	movw	r6, r16
    8774:	87 01       	movw	r16, r14
    8776:	dc 01       	movw	r26, r24
    8778:	ed 91       	ld	r30, X+
    877a:	fc 91       	ld	r31, X
    877c:	62 17       	cp	r22, r18
    877e:	73 07       	cpc	r23, r19
    8780:	19 f5       	brne	.+70     	; 0x87c8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x7a>
    8782:	64 16       	cp	r6, r20
    8784:	75 06       	cpc	r7, r21
    8786:	2c f0       	brlt	.+10     	; 0x8792 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x44>
    8788:	96 2d       	mov	r25, r6
    878a:	87 2d       	mov	r24, r7
    878c:	3a 01       	movw	r6, r20
    878e:	c9 2e       	mov	r12, r25
    8790:	d8 2e       	mov	r13, r24
    8792:	96 01       	movw	r18, r12
    8794:	26 19       	sub	r18, r6
    8796:	37 09       	sbc	r19, r7
    8798:	2f 5f       	subi	r18, 0xFF	; 255
    879a:	3f 4f       	sbci	r19, 0xFF	; 255
    879c:	04 8c       	ldd	r0, Z+28	; 0x1c
    879e:	f5 8d       	ldd	r31, Z+29	; 0x1d
    87a0:	e0 2d       	mov	r30, r0
    87a2:	a3 01       	movw	r20, r6
    87a4:	be 01       	movw	r22, r28
    87a6:	c5 01       	movw	r24, r10
    87a8:	09 95       	icall
    87aa:	df 91       	pop	r29
    87ac:	cf 91       	pop	r28
    87ae:	1f 91       	pop	r17
    87b0:	0f 91       	pop	r16
    87b2:	ff 90       	pop	r15
    87b4:	ef 90       	pop	r14
    87b6:	df 90       	pop	r13
    87b8:	cf 90       	pop	r12
    87ba:	bf 90       	pop	r11
    87bc:	af 90       	pop	r10
    87be:	9f 90       	pop	r9
    87c0:	8f 90       	pop	r8
    87c2:	7f 90       	pop	r7
    87c4:	6f 90       	pop	r6
    87c6:	08 95       	ret
    87c8:	46 15       	cp	r20, r6
    87ca:	57 05       	cpc	r21, r7
    87cc:	91 f4       	brne	.+36     	; 0x87f2 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0xa4>
    87ce:	26 17       	cp	r18, r22
    87d0:	37 07       	cpc	r19, r23
    87d2:	24 f0       	brlt	.+8      	; 0x87dc <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x8e>
    87d4:	89 2d       	mov	r24, r9
    87d6:	4b 01       	movw	r8, r22
    87d8:	c2 2f       	mov	r28, r18
    87da:	d8 2f       	mov	r29, r24
    87dc:	9e 01       	movw	r18, r28
    87de:	28 19       	sub	r18, r8
    87e0:	39 09       	sbc	r19, r9
    87e2:	2f 5f       	subi	r18, 0xFF	; 255
    87e4:	3f 4f       	sbci	r19, 0xFF	; 255
    87e6:	06 8c       	ldd	r0, Z+30	; 0x1e
    87e8:	f7 8d       	ldd	r31, Z+31	; 0x1f
    87ea:	e0 2d       	mov	r30, r0
    87ec:	a6 01       	movw	r20, r12
    87ee:	b4 01       	movw	r22, r8
    87f0:	da cf       	rjmp	.-76     	; 0x87a6 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x58>
    87f2:	02 84       	ldd	r0, Z+10	; 0x0a
    87f4:	f3 85       	ldd	r31, Z+11	; 0x0b
    87f6:	e0 2d       	mov	r30, r0
    87f8:	09 95       	icall
    87fa:	d5 01       	movw	r26, r10
    87fc:	ed 91       	ld	r30, X+
    87fe:	fc 91       	ld	r31, X
    8800:	04 88       	ldd	r0, Z+20	; 0x14
    8802:	f5 89       	ldd	r31, Z+21	; 0x15
    8804:	e0 2d       	mov	r30, r0
    8806:	83 01       	movw	r16, r6
    8808:	94 01       	movw	r18, r8
    880a:	a6 01       	movw	r20, r12
    880c:	be 01       	movw	r22, r28
    880e:	c5 01       	movw	r24, r10
    8810:	09 95       	icall
    8812:	d5 01       	movw	r26, r10
    8814:	ed 91       	ld	r30, X+
    8816:	fc 91       	ld	r31, X
    8818:	06 88       	ldd	r0, Z+22	; 0x16
    881a:	f7 89       	ldd	r31, Z+23	; 0x17
    881c:	e0 2d       	mov	r30, r0
    881e:	c5 01       	movw	r24, r10
    8820:	df 91       	pop	r29
    8822:	cf 91       	pop	r28
    8824:	1f 91       	pop	r17
    8826:	0f 91       	pop	r16
    8828:	ff 90       	pop	r15
    882a:	ef 90       	pop	r14
    882c:	df 90       	pop	r13
    882e:	cf 90       	pop	r12
    8830:	bf 90       	pop	r11
    8832:	af 90       	pop	r10
    8834:	9f 90       	pop	r9
    8836:	8f 90       	pop	r8
    8838:	7f 90       	pop	r7
    883a:	6f 90       	pop	r6
    883c:	09 94       	ijmp

0000883e <Adafruit_GFX::setRotation(unsigned char)>:
_ZN12Adafruit_GFX11setRotationEh():
    883e:	fc 01       	movw	r30, r24
    8840:	63 70       	andi	r22, 0x03	; 3
    8842:	66 8b       	std	Z+22, r22	; 0x16
    8844:	84 81       	ldd	r24, Z+4	; 0x04
    8846:	95 81       	ldd	r25, Z+5	; 0x05
    8848:	26 81       	ldd	r18, Z+6	; 0x06
    884a:	37 81       	ldd	r19, Z+7	; 0x07
    884c:	61 30       	cpi	r22, 0x01	; 1
    884e:	39 f0       	breq	.+14     	; 0x885e <Adafruit_GFX::setRotation(unsigned char)+0x20>
    8850:	63 30       	cpi	r22, 0x03	; 3
    8852:	29 f0       	breq	.+10     	; 0x885e <Adafruit_GFX::setRotation(unsigned char)+0x20>
    8854:	91 87       	std	Z+9, r25	; 0x09
    8856:	80 87       	std	Z+8, r24	; 0x08
    8858:	33 87       	std	Z+11, r19	; 0x0b
    885a:	22 87       	std	Z+10, r18	; 0x0a
    885c:	08 95       	ret
    885e:	31 87       	std	Z+9, r19	; 0x09
    8860:	20 87       	std	Z+8, r18	; 0x08
    8862:	93 87       	std	Z+11, r25	; 0x0b
    8864:	82 87       	std	Z+10, r24	; 0x0a
    8866:	08 95       	ret

00008868 <Adafruit_GFX::Adafruit_GFX(int, int)>:
_ZN12Adafruit_GFXC2Eii():
    8868:	fc 01       	movw	r30, r24
_ZN5PrintC4Ev():
    886a:	13 82       	std	Z+3, r1	; 0x03
    886c:	12 82       	std	Z+2, r1	; 0x02
_ZN12Adafruit_GFXC2Eii():
    886e:	84 e2       	ldi	r24, 0x24	; 36
    8870:	92 e0       	ldi	r25, 0x02	; 2
    8872:	91 83       	std	Z+1, r25	; 0x01
    8874:	80 83       	st	Z, r24
    8876:	75 83       	std	Z+5, r23	; 0x05
    8878:	64 83       	std	Z+4, r22	; 0x04
    887a:	57 83       	std	Z+7, r21	; 0x07
    887c:	46 83       	std	Z+6, r20	; 0x06
    887e:	71 87       	std	Z+9, r23	; 0x09
    8880:	60 87       	std	Z+8, r22	; 0x08
    8882:	53 87       	std	Z+11, r21	; 0x0b
    8884:	42 87       	std	Z+10, r20	; 0x0a
    8886:	16 8a       	std	Z+22, r1	; 0x16
    8888:	15 86       	std	Z+13, r1	; 0x0d
    888a:	14 86       	std	Z+12, r1	; 0x0c
    888c:	17 86       	std	Z+15, r1	; 0x0f
    888e:	16 86       	std	Z+14, r1	; 0x0e
    8890:	81 e0       	ldi	r24, 0x01	; 1
    8892:	85 8b       	std	Z+21, r24	; 0x15
    8894:	84 8b       	std	Z+20, r24	; 0x14
    8896:	2f ef       	ldi	r18, 0xFF	; 255
    8898:	3f ef       	ldi	r19, 0xFF	; 255
    889a:	33 8b       	std	Z+19, r19	; 0x13
    889c:	22 8b       	std	Z+18, r18	; 0x12
    889e:	31 8b       	std	Z+17, r19	; 0x11
    88a0:	20 8b       	std	Z+16, r18	; 0x10
    88a2:	87 8b       	std	Z+23, r24	; 0x17
    88a4:	10 8e       	std	Z+24, r1	; 0x18
    88a6:	12 8e       	std	Z+26, r1	; 0x1a
    88a8:	11 8e       	std	Z+25, r1	; 0x19
    88aa:	08 95       	ret

000088ac <Adafruit_GFX::drawCircle(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX10drawCircleEiiij():
    88ac:	2f 92       	push	r2
    88ae:	3f 92       	push	r3
    88b0:	4f 92       	push	r4
    88b2:	5f 92       	push	r5
    88b4:	6f 92       	push	r6
    88b6:	7f 92       	push	r7
    88b8:	8f 92       	push	r8
    88ba:	9f 92       	push	r9
    88bc:	af 92       	push	r10
    88be:	bf 92       	push	r11
    88c0:	cf 92       	push	r12
    88c2:	df 92       	push	r13
    88c4:	ef 92       	push	r14
    88c6:	ff 92       	push	r15
    88c8:	0f 93       	push	r16
    88ca:	1f 93       	push	r17
    88cc:	cf 93       	push	r28
    88ce:	df 93       	push	r29
    88d0:	cd b7       	in	r28, 0x3d	; 61
    88d2:	de b7       	in	r29, 0x3e	; 62
    88d4:	28 97       	sbiw	r28, 0x08	; 8
    88d6:	0f b6       	in	r0, 0x3f	; 63
    88d8:	f8 94       	cli
    88da:	de bf       	out	0x3e, r29	; 62
    88dc:	0f be       	out	0x3f, r0	; 63
    88de:	cd bf       	out	0x3d, r28	; 61
    88e0:	98 87       	std	Y+8, r25	; 0x08
    88e2:	8f 83       	std	Y+7, r24	; 0x07
    88e4:	3b 01       	movw	r6, r22
    88e6:	2a 01       	movw	r4, r20
    88e8:	79 01       	movw	r14, r18
    88ea:	81 e0       	ldi	r24, 0x01	; 1
    88ec:	90 e0       	ldi	r25, 0x00	; 0
    88ee:	9c 01       	movw	r18, r24
    88f0:	2e 19       	sub	r18, r14
    88f2:	3f 09       	sbc	r19, r15
    88f4:	3a 83       	std	Y+2, r19	; 0x02
    88f6:	29 83       	std	Y+1, r18	; 0x01
    88f8:	88 27       	eor	r24, r24
    88fa:	99 27       	eor	r25, r25
    88fc:	8e 19       	sub	r24, r14
    88fe:	9f 09       	sbc	r25, r15
    8900:	dc 01       	movw	r26, r24
    8902:	aa 0f       	add	r26, r26
    8904:	bb 1f       	adc	r27, r27
    8906:	be 83       	std	Y+6, r27	; 0x06
    8908:	ad 83       	std	Y+5, r26	; 0x05
    890a:	af 81       	ldd	r26, Y+7	; 0x07
    890c:	b8 85       	ldd	r27, Y+8	; 0x08
    890e:	ed 91       	ld	r30, X+
    8910:	fc 91       	ld	r31, X
    8912:	11 97       	sbiw	r26, 0x01	; 1
    8914:	02 84       	ldd	r0, Z+10	; 0x0a
    8916:	f3 85       	ldd	r31, Z+11	; 0x0b
    8918:	e0 2d       	mov	r30, r0
    891a:	cd 01       	movw	r24, r26
    891c:	09 95       	icall
    891e:	a7 01       	movw	r20, r14
    8920:	44 0d       	add	r20, r4
    8922:	55 1d       	adc	r21, r5
    8924:	af 81       	ldd	r26, Y+7	; 0x07
    8926:	b8 85       	ldd	r27, Y+8	; 0x08
    8928:	ed 91       	ld	r30, X+
    892a:	fc 91       	ld	r31, X
    892c:	11 97       	sbiw	r26, 0x01	; 1
    892e:	04 84       	ldd	r0, Z+12	; 0x0c
    8930:	f5 85       	ldd	r31, Z+13	; 0x0d
    8932:	e0 2d       	mov	r30, r0
    8934:	98 01       	movw	r18, r16
    8936:	b3 01       	movw	r22, r6
    8938:	cd 01       	movw	r24, r26
    893a:	09 95       	icall
    893c:	a2 01       	movw	r20, r4
    893e:	4e 19       	sub	r20, r14
    8940:	5f 09       	sbc	r21, r15
    8942:	af 81       	ldd	r26, Y+7	; 0x07
    8944:	b8 85       	ldd	r27, Y+8	; 0x08
    8946:	ed 91       	ld	r30, X+
    8948:	fc 91       	ld	r31, X
    894a:	11 97       	sbiw	r26, 0x01	; 1
    894c:	04 84       	ldd	r0, Z+12	; 0x0c
    894e:	f5 85       	ldd	r31, Z+13	; 0x0d
    8950:	e0 2d       	mov	r30, r0
    8952:	98 01       	movw	r18, r16
    8954:	b3 01       	movw	r22, r6
    8956:	cd 01       	movw	r24, r26
    8958:	09 95       	icall
    895a:	b7 01       	movw	r22, r14
    895c:	66 0d       	add	r22, r6
    895e:	77 1d       	adc	r23, r7
    8960:	af 81       	ldd	r26, Y+7	; 0x07
    8962:	b8 85       	ldd	r27, Y+8	; 0x08
    8964:	ed 91       	ld	r30, X+
    8966:	fc 91       	ld	r31, X
    8968:	11 97       	sbiw	r26, 0x01	; 1
    896a:	04 84       	ldd	r0, Z+12	; 0x0c
    896c:	f5 85       	ldd	r31, Z+13	; 0x0d
    896e:	e0 2d       	mov	r30, r0
    8970:	98 01       	movw	r18, r16
    8972:	a2 01       	movw	r20, r4
    8974:	cd 01       	movw	r24, r26
    8976:	09 95       	icall
    8978:	b3 01       	movw	r22, r6
    897a:	6e 19       	sub	r22, r14
    897c:	7f 09       	sbc	r23, r15
    897e:	af 81       	ldd	r26, Y+7	; 0x07
    8980:	b8 85       	ldd	r27, Y+8	; 0x08
    8982:	ed 91       	ld	r30, X+
    8984:	fc 91       	ld	r31, X
    8986:	11 97       	sbiw	r26, 0x01	; 1
    8988:	04 84       	ldd	r0, Z+12	; 0x0c
    898a:	f5 85       	ldd	r31, Z+13	; 0x0d
    898c:	e0 2d       	mov	r30, r0
    898e:	98 01       	movw	r18, r16
    8990:	a2 01       	movw	r20, r4
    8992:	cd 01       	movw	r24, r26
    8994:	09 95       	icall
    8996:	31 2c       	mov	r3, r1
    8998:	21 2c       	mov	r2, r1
    899a:	21 e0       	ldi	r18, 0x01	; 1
    899c:	30 e0       	ldi	r19, 0x00	; 0
    899e:	3c 83       	std	Y+4, r19	; 0x04
    89a0:	2b 83       	std	Y+3, r18	; 0x03
    89a2:	af 81       	ldd	r26, Y+7	; 0x07
    89a4:	b8 85       	ldd	r27, Y+8	; 0x08
    89a6:	ed 91       	ld	r30, X+
    89a8:	fc 91       	ld	r31, X
    89aa:	2e 14       	cp	r2, r14
    89ac:	3f 04       	cpc	r3, r15
    89ae:	0c f0       	brlt	.+2      	; 0x89b2 <Adafruit_GFX::drawCircle(int, int, int, unsigned int)+0x106>
    89b0:	9e c0       	rjmp	.+316    	; 0x8aee <Adafruit_GFX::drawCircle(int, int, int, unsigned int)+0x242>
    89b2:	29 81       	ldd	r18, Y+1	; 0x01
    89b4:	3a 81       	ldd	r19, Y+2	; 0x02
    89b6:	37 fd       	sbrc	r19, 7
    89b8:	0e c0       	rjmp	.+28     	; 0x89d6 <Adafruit_GFX::drawCircle(int, int, int, unsigned int)+0x12a>
    89ba:	31 e0       	ldi	r19, 0x01	; 1
    89bc:	e3 1a       	sub	r14, r19
    89be:	f1 08       	sbc	r15, r1
    89c0:	8d 81       	ldd	r24, Y+5	; 0x05
    89c2:	9e 81       	ldd	r25, Y+6	; 0x06
    89c4:	02 96       	adiw	r24, 0x02	; 2
    89c6:	9e 83       	std	Y+6, r25	; 0x06
    89c8:	8d 83       	std	Y+5, r24	; 0x05
    89ca:	a9 81       	ldd	r26, Y+1	; 0x01
    89cc:	ba 81       	ldd	r27, Y+2	; 0x02
    89ce:	a8 0f       	add	r26, r24
    89d0:	b9 1f       	adc	r27, r25
    89d2:	ba 83       	std	Y+2, r27	; 0x02
    89d4:	a9 83       	std	Y+1, r26	; 0x01
    89d6:	bf ef       	ldi	r27, 0xFF	; 255
    89d8:	2b 1a       	sub	r2, r27
    89da:	3b 0a       	sbc	r3, r27
    89dc:	2b 81       	ldd	r18, Y+3	; 0x03
    89de:	3c 81       	ldd	r19, Y+4	; 0x04
    89e0:	2e 5f       	subi	r18, 0xFE	; 254
    89e2:	3f 4f       	sbci	r19, 0xFF	; 255
    89e4:	3c 83       	std	Y+4, r19	; 0x04
    89e6:	2b 83       	std	Y+3, r18	; 0x03
    89e8:	89 81       	ldd	r24, Y+1	; 0x01
    89ea:	9a 81       	ldd	r25, Y+2	; 0x02
    89ec:	82 0f       	add	r24, r18
    89ee:	93 1f       	adc	r25, r19
    89f0:	9a 83       	std	Y+2, r25	; 0x02
    89f2:	89 83       	std	Y+1, r24	; 0x01
    89f4:	41 01       	movw	r8, r2
    89f6:	86 0c       	add	r8, r6
    89f8:	97 1c       	adc	r9, r7
    89fa:	04 84       	ldd	r0, Z+12	; 0x0c
    89fc:	f5 85       	ldd	r31, Z+13	; 0x0d
    89fe:	e0 2d       	mov	r30, r0
    8a00:	98 01       	movw	r18, r16
    8a02:	67 01       	movw	r12, r14
    8a04:	c4 0c       	add	r12, r4
    8a06:	d5 1c       	adc	r13, r5
    8a08:	a6 01       	movw	r20, r12
    8a0a:	b4 01       	movw	r22, r8
    8a0c:	8f 81       	ldd	r24, Y+7	; 0x07
    8a0e:	98 85       	ldd	r25, Y+8	; 0x08
    8a10:	09 95       	icall
    8a12:	53 01       	movw	r10, r6
    8a14:	a2 18       	sub	r10, r2
    8a16:	b3 08       	sbc	r11, r3
    8a18:	af 81       	ldd	r26, Y+7	; 0x07
    8a1a:	b8 85       	ldd	r27, Y+8	; 0x08
    8a1c:	ed 91       	ld	r30, X+
    8a1e:	fc 91       	ld	r31, X
    8a20:	11 97       	sbiw	r26, 0x01	; 1
    8a22:	04 84       	ldd	r0, Z+12	; 0x0c
    8a24:	f5 85       	ldd	r31, Z+13	; 0x0d
    8a26:	e0 2d       	mov	r30, r0
    8a28:	98 01       	movw	r18, r16
    8a2a:	a6 01       	movw	r20, r12
    8a2c:	b5 01       	movw	r22, r10
    8a2e:	cd 01       	movw	r24, r26
    8a30:	09 95       	icall
    8a32:	af 81       	ldd	r26, Y+7	; 0x07
    8a34:	b8 85       	ldd	r27, Y+8	; 0x08
    8a36:	ed 91       	ld	r30, X+
    8a38:	fc 91       	ld	r31, X
    8a3a:	11 97       	sbiw	r26, 0x01	; 1
    8a3c:	04 84       	ldd	r0, Z+12	; 0x0c
    8a3e:	f5 85       	ldd	r31, Z+13	; 0x0d
    8a40:	e0 2d       	mov	r30, r0
    8a42:	98 01       	movw	r18, r16
    8a44:	62 01       	movw	r12, r4
    8a46:	ce 18       	sub	r12, r14
    8a48:	df 08       	sbc	r13, r15
    8a4a:	a6 01       	movw	r20, r12
    8a4c:	b4 01       	movw	r22, r8
    8a4e:	cd 01       	movw	r24, r26
    8a50:	09 95       	icall
    8a52:	af 81       	ldd	r26, Y+7	; 0x07
    8a54:	b8 85       	ldd	r27, Y+8	; 0x08
    8a56:	ed 91       	ld	r30, X+
    8a58:	fc 91       	ld	r31, X
    8a5a:	11 97       	sbiw	r26, 0x01	; 1
    8a5c:	04 84       	ldd	r0, Z+12	; 0x0c
    8a5e:	f5 85       	ldd	r31, Z+13	; 0x0d
    8a60:	e0 2d       	mov	r30, r0
    8a62:	98 01       	movw	r18, r16
    8a64:	a6 01       	movw	r20, r12
    8a66:	b5 01       	movw	r22, r10
    8a68:	cd 01       	movw	r24, r26
    8a6a:	09 95       	icall
    8a6c:	61 01       	movw	r12, r2
    8a6e:	c4 0c       	add	r12, r4
    8a70:	d5 1c       	adc	r13, r5
    8a72:	af 81       	ldd	r26, Y+7	; 0x07
    8a74:	b8 85       	ldd	r27, Y+8	; 0x08
    8a76:	ed 91       	ld	r30, X+
    8a78:	fc 91       	ld	r31, X
    8a7a:	11 97       	sbiw	r26, 0x01	; 1
    8a7c:	04 84       	ldd	r0, Z+12	; 0x0c
    8a7e:	f5 85       	ldd	r31, Z+13	; 0x0d
    8a80:	e0 2d       	mov	r30, r0
    8a82:	98 01       	movw	r18, r16
    8a84:	a6 01       	movw	r20, r12
    8a86:	57 01       	movw	r10, r14
    8a88:	a6 0c       	add	r10, r6
    8a8a:	b7 1c       	adc	r11, r7
    8a8c:	b5 01       	movw	r22, r10
    8a8e:	cd 01       	movw	r24, r26
    8a90:	09 95       	icall
    8a92:	af 81       	ldd	r26, Y+7	; 0x07
    8a94:	b8 85       	ldd	r27, Y+8	; 0x08
    8a96:	ed 91       	ld	r30, X+
    8a98:	fc 91       	ld	r31, X
    8a9a:	11 97       	sbiw	r26, 0x01	; 1
    8a9c:	04 84       	ldd	r0, Z+12	; 0x0c
    8a9e:	f5 85       	ldd	r31, Z+13	; 0x0d
    8aa0:	e0 2d       	mov	r30, r0
    8aa2:	98 01       	movw	r18, r16
    8aa4:	a6 01       	movw	r20, r12
    8aa6:	63 01       	movw	r12, r6
    8aa8:	ce 18       	sub	r12, r14
    8aaa:	df 08       	sbc	r13, r15
    8aac:	b6 01       	movw	r22, r12
    8aae:	cd 01       	movw	r24, r26
    8ab0:	09 95       	icall
    8ab2:	42 01       	movw	r8, r4
    8ab4:	82 18       	sub	r8, r2
    8ab6:	93 08       	sbc	r9, r3
    8ab8:	af 81       	ldd	r26, Y+7	; 0x07
    8aba:	b8 85       	ldd	r27, Y+8	; 0x08
    8abc:	ed 91       	ld	r30, X+
    8abe:	fc 91       	ld	r31, X
    8ac0:	11 97       	sbiw	r26, 0x01	; 1
    8ac2:	04 84       	ldd	r0, Z+12	; 0x0c
    8ac4:	f5 85       	ldd	r31, Z+13	; 0x0d
    8ac6:	e0 2d       	mov	r30, r0
    8ac8:	98 01       	movw	r18, r16
    8aca:	a4 01       	movw	r20, r8
    8acc:	b5 01       	movw	r22, r10
    8ace:	cd 01       	movw	r24, r26
    8ad0:	09 95       	icall
    8ad2:	af 81       	ldd	r26, Y+7	; 0x07
    8ad4:	b8 85       	ldd	r27, Y+8	; 0x08
    8ad6:	ed 91       	ld	r30, X+
    8ad8:	fc 91       	ld	r31, X
    8ada:	11 97       	sbiw	r26, 0x01	; 1
    8adc:	04 84       	ldd	r0, Z+12	; 0x0c
    8ade:	f5 85       	ldd	r31, Z+13	; 0x0d
    8ae0:	e0 2d       	mov	r30, r0
    8ae2:	98 01       	movw	r18, r16
    8ae4:	a4 01       	movw	r20, r8
    8ae6:	b6 01       	movw	r22, r12
    8ae8:	cd 01       	movw	r24, r26
    8aea:	09 95       	icall
    8aec:	5a cf       	rjmp	.-332    	; 0x89a2 <Adafruit_GFX::drawCircle(int, int, int, unsigned int)+0xf6>
    8aee:	06 88       	ldd	r0, Z+22	; 0x16
    8af0:	f7 89       	ldd	r31, Z+23	; 0x17
    8af2:	e0 2d       	mov	r30, r0
    8af4:	8f 81       	ldd	r24, Y+7	; 0x07
    8af6:	98 85       	ldd	r25, Y+8	; 0x08
    8af8:	28 96       	adiw	r28, 0x08	; 8
    8afa:	0f b6       	in	r0, 0x3f	; 63
    8afc:	f8 94       	cli
    8afe:	de bf       	out	0x3e, r29	; 62
    8b00:	0f be       	out	0x3f, r0	; 63
    8b02:	cd bf       	out	0x3d, r28	; 61
    8b04:	df 91       	pop	r29
    8b06:	cf 91       	pop	r28
    8b08:	1f 91       	pop	r17
    8b0a:	0f 91       	pop	r16
    8b0c:	ff 90       	pop	r15
    8b0e:	ef 90       	pop	r14
    8b10:	df 90       	pop	r13
    8b12:	cf 90       	pop	r12
    8b14:	bf 90       	pop	r11
    8b16:	af 90       	pop	r10
    8b18:	9f 90       	pop	r9
    8b1a:	8f 90       	pop	r8
    8b1c:	7f 90       	pop	r7
    8b1e:	6f 90       	pop	r6
    8b20:	5f 90       	pop	r5
    8b22:	4f 90       	pop	r4
    8b24:	3f 90       	pop	r3
    8b26:	2f 90       	pop	r2
    8b28:	09 94       	ijmp

00008b2a <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)>:
_ZN12Adafruit_GFX16drawCircleHelperEiiihj():
    8b2a:	2f 92       	push	r2
    8b2c:	3f 92       	push	r3
    8b2e:	4f 92       	push	r4
    8b30:	5f 92       	push	r5
    8b32:	6f 92       	push	r6
    8b34:	7f 92       	push	r7
    8b36:	8f 92       	push	r8
    8b38:	9f 92       	push	r9
    8b3a:	af 92       	push	r10
    8b3c:	bf 92       	push	r11
    8b3e:	cf 92       	push	r12
    8b40:	df 92       	push	r13
    8b42:	ef 92       	push	r14
    8b44:	ff 92       	push	r15
    8b46:	0f 93       	push	r16
    8b48:	1f 93       	push	r17
    8b4a:	cf 93       	push	r28
    8b4c:	df 93       	push	r29
    8b4e:	00 d0       	rcall	.+0      	; 0x8b50 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x26>
    8b50:	00 d0       	rcall	.+0      	; 0x8b52 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x28>
    8b52:	00 d0       	rcall	.+0      	; 0x8b54 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x2a>
    8b54:	cd b7       	in	r28, 0x3d	; 61
    8b56:	de b7       	in	r29, 0x3e	; 62
    8b58:	9e 83       	std	Y+6, r25	; 0x06
    8b5a:	8d 83       	std	Y+5, r24	; 0x05
    8b5c:	4b 01       	movw	r8, r22
    8b5e:	3a 01       	movw	r6, r20
    8b60:	69 01       	movw	r12, r18
    8b62:	80 2f       	mov	r24, r16
    8b64:	21 e0       	ldi	r18, 0x01	; 1
    8b66:	30 e0       	ldi	r19, 0x00	; 0
    8b68:	29 01       	movw	r4, r18
    8b6a:	4c 18       	sub	r4, r12
    8b6c:	5d 08       	sbc	r5, r13
    8b6e:	22 24       	eor	r2, r2
    8b70:	33 24       	eor	r3, r3
    8b72:	2c 18       	sub	r2, r12
    8b74:	3d 08       	sbc	r3, r13
    8b76:	22 0c       	add	r2, r2
    8b78:	33 1c       	adc	r3, r3
    8b7a:	b1 2c       	mov	r11, r1
    8b7c:	a1 2c       	mov	r10, r1
    8b7e:	01 e0       	ldi	r16, 0x01	; 1
    8b80:	10 e0       	ldi	r17, 0x00	; 0
    8b82:	98 2f       	mov	r25, r24
    8b84:	94 70       	andi	r25, 0x04	; 4
    8b86:	99 83       	std	Y+1, r25	; 0x01
    8b88:	a8 2f       	mov	r26, r24
    8b8a:	a2 70       	andi	r26, 0x02	; 2
    8b8c:	aa 83       	std	Y+2, r26	; 0x02
    8b8e:	b8 2f       	mov	r27, r24
    8b90:	b8 70       	andi	r27, 0x08	; 8
    8b92:	bb 83       	std	Y+3, r27	; 0x03
    8b94:	81 70       	andi	r24, 0x01	; 1
    8b96:	8c 83       	std	Y+4, r24	; 0x04
    8b98:	ac 14       	cp	r10, r12
    8b9a:	bd 04       	cpc	r11, r13
    8b9c:	0c f0       	brlt	.+2      	; 0x8ba0 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x76>
    8b9e:	a7 c0       	rjmp	.+334    	; 0x8cee <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x1c4>
    8ba0:	57 fc       	sbrc	r5, 7
    8ba2:	08 c0       	rjmp	.+16     	; 0x8bb4 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x8a>
    8ba4:	81 e0       	ldi	r24, 0x01	; 1
    8ba6:	c8 1a       	sub	r12, r24
    8ba8:	d1 08       	sbc	r13, r1
    8baa:	92 e0       	ldi	r25, 0x02	; 2
    8bac:	29 0e       	add	r2, r25
    8bae:	31 1c       	adc	r3, r1
    8bb0:	42 0c       	add	r4, r2
    8bb2:	53 1c       	adc	r5, r3
    8bb4:	af ef       	ldi	r26, 0xFF	; 255
    8bb6:	aa 1a       	sub	r10, r26
    8bb8:	ba 0a       	sbc	r11, r26
    8bba:	0e 5f       	subi	r16, 0xFE	; 254
    8bbc:	1f 4f       	sbci	r17, 0xFF	; 255
    8bbe:	40 0e       	add	r4, r16
    8bc0:	51 1e       	adc	r5, r17
    8bc2:	b9 81       	ldd	r27, Y+1	; 0x01
    8bc4:	bb 23       	and	r27, r27
    8bc6:	11 f1       	breq	.+68     	; 0x8c0c <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0xe2>
    8bc8:	ad 81       	ldd	r26, Y+5	; 0x05
    8bca:	be 81       	ldd	r27, Y+6	; 0x06
    8bcc:	ed 91       	ld	r30, X+
    8bce:	fc 91       	ld	r31, X
    8bd0:	11 97       	sbiw	r26, 0x01	; 1
    8bd2:	04 84       	ldd	r0, Z+12	; 0x0c
    8bd4:	f5 85       	ldd	r31, Z+13	; 0x0d
    8bd6:	e0 2d       	mov	r30, r0
    8bd8:	97 01       	movw	r18, r14
    8bda:	a6 01       	movw	r20, r12
    8bdc:	46 0d       	add	r20, r6
    8bde:	57 1d       	adc	r21, r7
    8be0:	b4 01       	movw	r22, r8
    8be2:	6a 0d       	add	r22, r10
    8be4:	7b 1d       	adc	r23, r11
    8be6:	cd 01       	movw	r24, r26
    8be8:	09 95       	icall
    8bea:	ad 81       	ldd	r26, Y+5	; 0x05
    8bec:	be 81       	ldd	r27, Y+6	; 0x06
    8bee:	ed 91       	ld	r30, X+
    8bf0:	fc 91       	ld	r31, X
    8bf2:	11 97       	sbiw	r26, 0x01	; 1
    8bf4:	04 84       	ldd	r0, Z+12	; 0x0c
    8bf6:	f5 85       	ldd	r31, Z+13	; 0x0d
    8bf8:	e0 2d       	mov	r30, r0
    8bfa:	97 01       	movw	r18, r14
    8bfc:	a3 01       	movw	r20, r6
    8bfe:	4a 0d       	add	r20, r10
    8c00:	5b 1d       	adc	r21, r11
    8c02:	b6 01       	movw	r22, r12
    8c04:	68 0d       	add	r22, r8
    8c06:	79 1d       	adc	r23, r9
    8c08:	cd 01       	movw	r24, r26
    8c0a:	09 95       	icall
    8c0c:	ba 81       	ldd	r27, Y+2	; 0x02
    8c0e:	bb 23       	and	r27, r27
    8c10:	11 f1       	breq	.+68     	; 0x8c56 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x12c>
    8c12:	ad 81       	ldd	r26, Y+5	; 0x05
    8c14:	be 81       	ldd	r27, Y+6	; 0x06
    8c16:	ed 91       	ld	r30, X+
    8c18:	fc 91       	ld	r31, X
    8c1a:	11 97       	sbiw	r26, 0x01	; 1
    8c1c:	04 84       	ldd	r0, Z+12	; 0x0c
    8c1e:	f5 85       	ldd	r31, Z+13	; 0x0d
    8c20:	e0 2d       	mov	r30, r0
    8c22:	97 01       	movw	r18, r14
    8c24:	a3 01       	movw	r20, r6
    8c26:	4c 19       	sub	r20, r12
    8c28:	5d 09       	sbc	r21, r13
    8c2a:	b4 01       	movw	r22, r8
    8c2c:	6a 0d       	add	r22, r10
    8c2e:	7b 1d       	adc	r23, r11
    8c30:	cd 01       	movw	r24, r26
    8c32:	09 95       	icall
    8c34:	ad 81       	ldd	r26, Y+5	; 0x05
    8c36:	be 81       	ldd	r27, Y+6	; 0x06
    8c38:	ed 91       	ld	r30, X+
    8c3a:	fc 91       	ld	r31, X
    8c3c:	11 97       	sbiw	r26, 0x01	; 1
    8c3e:	04 84       	ldd	r0, Z+12	; 0x0c
    8c40:	f5 85       	ldd	r31, Z+13	; 0x0d
    8c42:	e0 2d       	mov	r30, r0
    8c44:	97 01       	movw	r18, r14
    8c46:	a3 01       	movw	r20, r6
    8c48:	4a 19       	sub	r20, r10
    8c4a:	5b 09       	sbc	r21, r11
    8c4c:	b6 01       	movw	r22, r12
    8c4e:	68 0d       	add	r22, r8
    8c50:	79 1d       	adc	r23, r9
    8c52:	cd 01       	movw	r24, r26
    8c54:	09 95       	icall
    8c56:	bb 81       	ldd	r27, Y+3	; 0x03
    8c58:	bb 23       	and	r27, r27
    8c5a:	11 f1       	breq	.+68     	; 0x8ca0 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x176>
    8c5c:	ad 81       	ldd	r26, Y+5	; 0x05
    8c5e:	be 81       	ldd	r27, Y+6	; 0x06
    8c60:	ed 91       	ld	r30, X+
    8c62:	fc 91       	ld	r31, X
    8c64:	11 97       	sbiw	r26, 0x01	; 1
    8c66:	04 84       	ldd	r0, Z+12	; 0x0c
    8c68:	f5 85       	ldd	r31, Z+13	; 0x0d
    8c6a:	e0 2d       	mov	r30, r0
    8c6c:	97 01       	movw	r18, r14
    8c6e:	a3 01       	movw	r20, r6
    8c70:	4a 0d       	add	r20, r10
    8c72:	5b 1d       	adc	r21, r11
    8c74:	b4 01       	movw	r22, r8
    8c76:	6c 19       	sub	r22, r12
    8c78:	7d 09       	sbc	r23, r13
    8c7a:	cd 01       	movw	r24, r26
    8c7c:	09 95       	icall
    8c7e:	ad 81       	ldd	r26, Y+5	; 0x05
    8c80:	be 81       	ldd	r27, Y+6	; 0x06
    8c82:	ed 91       	ld	r30, X+
    8c84:	fc 91       	ld	r31, X
    8c86:	11 97       	sbiw	r26, 0x01	; 1
    8c88:	04 84       	ldd	r0, Z+12	; 0x0c
    8c8a:	f5 85       	ldd	r31, Z+13	; 0x0d
    8c8c:	e0 2d       	mov	r30, r0
    8c8e:	97 01       	movw	r18, r14
    8c90:	a6 01       	movw	r20, r12
    8c92:	46 0d       	add	r20, r6
    8c94:	57 1d       	adc	r21, r7
    8c96:	b4 01       	movw	r22, r8
    8c98:	6a 19       	sub	r22, r10
    8c9a:	7b 09       	sbc	r23, r11
    8c9c:	cd 01       	movw	r24, r26
    8c9e:	09 95       	icall
    8ca0:	bc 81       	ldd	r27, Y+4	; 0x04
    8ca2:	bb 23       	and	r27, r27
    8ca4:	09 f4       	brne	.+2      	; 0x8ca8 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x17e>
    8ca6:	78 cf       	rjmp	.-272    	; 0x8b98 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x6e>
    8ca8:	ad 81       	ldd	r26, Y+5	; 0x05
    8caa:	be 81       	ldd	r27, Y+6	; 0x06
    8cac:	ed 91       	ld	r30, X+
    8cae:	fc 91       	ld	r31, X
    8cb0:	11 97       	sbiw	r26, 0x01	; 1
    8cb2:	04 84       	ldd	r0, Z+12	; 0x0c
    8cb4:	f5 85       	ldd	r31, Z+13	; 0x0d
    8cb6:	e0 2d       	mov	r30, r0
    8cb8:	97 01       	movw	r18, r14
    8cba:	a3 01       	movw	r20, r6
    8cbc:	4a 19       	sub	r20, r10
    8cbe:	5b 09       	sbc	r21, r11
    8cc0:	b4 01       	movw	r22, r8
    8cc2:	6c 19       	sub	r22, r12
    8cc4:	7d 09       	sbc	r23, r13
    8cc6:	cd 01       	movw	r24, r26
    8cc8:	09 95       	icall
    8cca:	ad 81       	ldd	r26, Y+5	; 0x05
    8ccc:	be 81       	ldd	r27, Y+6	; 0x06
    8cce:	ed 91       	ld	r30, X+
    8cd0:	fc 91       	ld	r31, X
    8cd2:	11 97       	sbiw	r26, 0x01	; 1
    8cd4:	04 84       	ldd	r0, Z+12	; 0x0c
    8cd6:	f5 85       	ldd	r31, Z+13	; 0x0d
    8cd8:	e0 2d       	mov	r30, r0
    8cda:	97 01       	movw	r18, r14
    8cdc:	a3 01       	movw	r20, r6
    8cde:	4c 19       	sub	r20, r12
    8ce0:	5d 09       	sbc	r21, r13
    8ce2:	b4 01       	movw	r22, r8
    8ce4:	6a 19       	sub	r22, r10
    8ce6:	7b 09       	sbc	r23, r11
    8ce8:	cd 01       	movw	r24, r26
    8cea:	09 95       	icall
    8cec:	55 cf       	rjmp	.-342    	; 0x8b98 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x6e>
    8cee:	26 96       	adiw	r28, 0x06	; 6
    8cf0:	0f b6       	in	r0, 0x3f	; 63
    8cf2:	f8 94       	cli
    8cf4:	de bf       	out	0x3e, r29	; 62
    8cf6:	0f be       	out	0x3f, r0	; 63
    8cf8:	cd bf       	out	0x3d, r28	; 61
    8cfa:	df 91       	pop	r29
    8cfc:	cf 91       	pop	r28
    8cfe:	1f 91       	pop	r17
    8d00:	0f 91       	pop	r16
    8d02:	ff 90       	pop	r15
    8d04:	ef 90       	pop	r14
    8d06:	df 90       	pop	r13
    8d08:	cf 90       	pop	r12
    8d0a:	bf 90       	pop	r11
    8d0c:	af 90       	pop	r10
    8d0e:	9f 90       	pop	r9
    8d10:	8f 90       	pop	r8
    8d12:	7f 90       	pop	r7
    8d14:	6f 90       	pop	r6
    8d16:	5f 90       	pop	r5
    8d18:	4f 90       	pop	r4
    8d1a:	3f 90       	pop	r3
    8d1c:	2f 90       	pop	r2
    8d1e:	08 95       	ret

00008d20 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)>:
_ZN12Adafruit_GFX16fillCircleHelperEiiihij():
    8d20:	2f 92       	push	r2
    8d22:	3f 92       	push	r3
    8d24:	4f 92       	push	r4
    8d26:	5f 92       	push	r5
    8d28:	6f 92       	push	r6
    8d2a:	7f 92       	push	r7
    8d2c:	8f 92       	push	r8
    8d2e:	9f 92       	push	r9
    8d30:	af 92       	push	r10
    8d32:	bf 92       	push	r11
    8d34:	cf 92       	push	r12
    8d36:	df 92       	push	r13
    8d38:	ef 92       	push	r14
    8d3a:	ff 92       	push	r15
    8d3c:	0f 93       	push	r16
    8d3e:	1f 93       	push	r17
    8d40:	cf 93       	push	r28
    8d42:	df 93       	push	r29
    8d44:	cd b7       	in	r28, 0x3d	; 61
    8d46:	de b7       	in	r29, 0x3e	; 62
    8d48:	2e 97       	sbiw	r28, 0x0e	; 14
    8d4a:	0f b6       	in	r0, 0x3f	; 63
    8d4c:	f8 94       	cli
    8d4e:	de bf       	out	0x3e, r29	; 62
    8d50:	0f be       	out	0x3f, r0	; 63
    8d52:	cd bf       	out	0x3d, r28	; 61
    8d54:	5c 01       	movw	r10, r24
    8d56:	2b 01       	movw	r4, r22
    8d58:	5c 83       	std	Y+4, r21	; 0x04
    8d5a:	4b 83       	std	Y+3, r20	; 0x03
    8d5c:	3e 87       	std	Y+14, r19	; 0x0e
    8d5e:	2d 87       	std	Y+13, r18	; 0x0d
    8d60:	fe 82       	std	Y+6, r15	; 0x06
    8d62:	ed 82       	std	Y+5, r14	; 0x05
    8d64:	16 01       	movw	r2, r12
    8d66:	81 e0       	ldi	r24, 0x01	; 1
    8d68:	90 e0       	ldi	r25, 0x00	; 0
    8d6a:	4c 01       	movw	r8, r24
    8d6c:	82 1a       	sub	r8, r18
    8d6e:	93 0a       	sbc	r9, r19
    8d70:	c9 01       	movw	r24, r18
    8d72:	91 95       	neg	r25
    8d74:	81 95       	neg	r24
    8d76:	91 09       	sbc	r25, r1
    8d78:	9c 01       	movw	r18, r24
    8d7a:	22 0f       	add	r18, r18
    8d7c:	33 1f       	adc	r19, r19
    8d7e:	3a 83       	std	Y+2, r19	; 0x02
    8d80:	29 83       	std	Y+1, r18	; 0x01
    8d82:	c7 01       	movw	r24, r14
    8d84:	01 96       	adiw	r24, 0x01	; 1
    8d86:	98 87       	std	Y+8, r25	; 0x08
    8d88:	8f 83       	std	Y+7, r24	; 0x07
    8d8a:	f1 2c       	mov	r15, r1
    8d8c:	e1 2c       	mov	r14, r1
    8d8e:	66 24       	eor	r6, r6
    8d90:	63 94       	inc	r6
    8d92:	71 2c       	mov	r7, r1
    8d94:	90 2f       	mov	r25, r16
    8d96:	91 70       	andi	r25, 0x01	; 1
    8d98:	99 87       	std	Y+9, r25	; 0x09
    8d9a:	02 70       	andi	r16, 0x02	; 2
    8d9c:	0a 87       	std	Y+10, r16	; 0x0a
    8d9e:	da 01       	movw	r26, r20
    8da0:	11 96       	adiw	r26, 0x01	; 1
    8da2:	bc 87       	std	Y+12, r27	; 0x0c
    8da4:	ab 87       	std	Y+11, r26	; 0x0b
    8da6:	2d 85       	ldd	r18, Y+13	; 0x0d
    8da8:	3e 85       	ldd	r19, Y+14	; 0x0e
    8daa:	e2 16       	cp	r14, r18
    8dac:	f3 06       	cpc	r15, r19
    8dae:	0c f0       	brlt	.+2      	; 0x8db2 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x92>
    8db0:	8d c0       	rjmp	.+282    	; 0x8ecc <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x1ac>
    8db2:	cd 84       	ldd	r12, Y+13	; 0x0d
    8db4:	de 84       	ldd	r13, Y+14	; 0x0e
    8db6:	97 fc       	sbrc	r9, 7
    8db8:	0b c0       	rjmp	.+22     	; 0x8dd0 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0xb0>
    8dba:	69 01       	movw	r12, r18
    8dbc:	31 e0       	ldi	r19, 0x01	; 1
    8dbe:	c3 1a       	sub	r12, r19
    8dc0:	d1 08       	sbc	r13, r1
    8dc2:	89 81       	ldd	r24, Y+1	; 0x01
    8dc4:	9a 81       	ldd	r25, Y+2	; 0x02
    8dc6:	02 96       	adiw	r24, 0x02	; 2
    8dc8:	9a 83       	std	Y+2, r25	; 0x02
    8dca:	89 83       	std	Y+1, r24	; 0x01
    8dcc:	88 0e       	add	r8, r24
    8dce:	99 1e       	adc	r9, r25
    8dd0:	9f ef       	ldi	r25, 0xFF	; 255
    8dd2:	e9 1a       	sub	r14, r25
    8dd4:	f9 0a       	sbc	r15, r25
    8dd6:	a2 e0       	ldi	r26, 0x02	; 2
    8dd8:	6a 0e       	add	r6, r26
    8dda:	71 1c       	adc	r7, r1
    8ddc:	86 0c       	add	r8, r6
    8dde:	97 1c       	adc	r9, r7
    8de0:	ce 14       	cp	r12, r14
    8de2:	df 04       	cpc	r13, r15
    8de4:	a4 f1       	brlt	.+104    	; 0x8e4e <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x12e>
    8de6:	b9 85       	ldd	r27, Y+9	; 0x09
    8de8:	bb 23       	and	r27, r27
    8dea:	b9 f0       	breq	.+46     	; 0x8e1a <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0xfa>
    8dec:	96 01       	movw	r18, r12
    8dee:	22 0f       	add	r18, r18
    8df0:	33 1f       	adc	r19, r19
    8df2:	8f 81       	ldd	r24, Y+7	; 0x07
    8df4:	98 85       	ldd	r25, Y+8	; 0x08
    8df6:	28 0f       	add	r18, r24
    8df8:	39 1f       	adc	r19, r25
    8dfa:	d5 01       	movw	r26, r10
    8dfc:	ed 91       	ld	r30, X+
    8dfe:	fc 91       	ld	r31, X
    8e00:	00 88       	ldd	r0, Z+16	; 0x10
    8e02:	f1 89       	ldd	r31, Z+17	; 0x11
    8e04:	e0 2d       	mov	r30, r0
    8e06:	81 01       	movw	r16, r2
    8e08:	4b 81       	ldd	r20, Y+3	; 0x03
    8e0a:	5c 81       	ldd	r21, Y+4	; 0x04
    8e0c:	4c 19       	sub	r20, r12
    8e0e:	5d 09       	sbc	r21, r13
    8e10:	b2 01       	movw	r22, r4
    8e12:	6e 0d       	add	r22, r14
    8e14:	7f 1d       	adc	r23, r15
    8e16:	c5 01       	movw	r24, r10
    8e18:	09 95       	icall
    8e1a:	ba 85       	ldd	r27, Y+10	; 0x0a
    8e1c:	bb 23       	and	r27, r27
    8e1e:	b9 f0       	breq	.+46     	; 0x8e4e <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x12e>
    8e20:	96 01       	movw	r18, r12
    8e22:	22 0f       	add	r18, r18
    8e24:	33 1f       	adc	r19, r19
    8e26:	8f 81       	ldd	r24, Y+7	; 0x07
    8e28:	98 85       	ldd	r25, Y+8	; 0x08
    8e2a:	28 0f       	add	r18, r24
    8e2c:	39 1f       	adc	r19, r25
    8e2e:	d5 01       	movw	r26, r10
    8e30:	ed 91       	ld	r30, X+
    8e32:	fc 91       	ld	r31, X
    8e34:	00 88       	ldd	r0, Z+16	; 0x10
    8e36:	f1 89       	ldd	r31, Z+17	; 0x11
    8e38:	e0 2d       	mov	r30, r0
    8e3a:	81 01       	movw	r16, r2
    8e3c:	4b 81       	ldd	r20, Y+3	; 0x03
    8e3e:	5c 81       	ldd	r21, Y+4	; 0x04
    8e40:	4c 19       	sub	r20, r12
    8e42:	5d 09       	sbc	r21, r13
    8e44:	b2 01       	movw	r22, r4
    8e46:	6e 19       	sub	r22, r14
    8e48:	7f 09       	sbc	r23, r15
    8e4a:	c5 01       	movw	r24, r10
    8e4c:	09 95       	icall
    8e4e:	2d 85       	ldd	r18, Y+13	; 0x0d
    8e50:	3e 85       	ldd	r19, Y+14	; 0x0e
    8e52:	2c 15       	cp	r18, r12
    8e54:	3d 05       	cpc	r19, r13
    8e56:	b9 f1       	breq	.+110    	; 0x8ec6 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x1a6>
    8e58:	39 85       	ldd	r19, Y+9	; 0x09
    8e5a:	33 23       	and	r19, r19
    8e5c:	c1 f0       	breq	.+48     	; 0x8e8e <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x16e>
    8e5e:	93 01       	movw	r18, r6
    8e60:	22 50       	subi	r18, 0x02	; 2
    8e62:	31 09       	sbc	r19, r1
    8e64:	8d 81       	ldd	r24, Y+5	; 0x05
    8e66:	9e 81       	ldd	r25, Y+6	; 0x06
    8e68:	28 0f       	add	r18, r24
    8e6a:	39 1f       	adc	r19, r25
    8e6c:	d5 01       	movw	r26, r10
    8e6e:	ed 91       	ld	r30, X+
    8e70:	fc 91       	ld	r31, X
    8e72:	00 88       	ldd	r0, Z+16	; 0x10
    8e74:	f1 89       	ldd	r31, Z+17	; 0x11
    8e76:	e0 2d       	mov	r30, r0
    8e78:	81 01       	movw	r16, r2
    8e7a:	4b 85       	ldd	r20, Y+11	; 0x0b
    8e7c:	5c 85       	ldd	r21, Y+12	; 0x0c
    8e7e:	4e 19       	sub	r20, r14
    8e80:	5f 09       	sbc	r21, r15
    8e82:	6d 85       	ldd	r22, Y+13	; 0x0d
    8e84:	7e 85       	ldd	r23, Y+14	; 0x0e
    8e86:	64 0d       	add	r22, r4
    8e88:	75 1d       	adc	r23, r5
    8e8a:	c5 01       	movw	r24, r10
    8e8c:	09 95       	icall
    8e8e:	ba 85       	ldd	r27, Y+10	; 0x0a
    8e90:	bb 23       	and	r27, r27
    8e92:	c9 f0       	breq	.+50     	; 0x8ec6 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x1a6>
    8e94:	93 01       	movw	r18, r6
    8e96:	22 50       	subi	r18, 0x02	; 2
    8e98:	31 09       	sbc	r19, r1
    8e9a:	8d 81       	ldd	r24, Y+5	; 0x05
    8e9c:	9e 81       	ldd	r25, Y+6	; 0x06
    8e9e:	28 0f       	add	r18, r24
    8ea0:	39 1f       	adc	r19, r25
    8ea2:	b2 01       	movw	r22, r4
    8ea4:	ad 85       	ldd	r26, Y+13	; 0x0d
    8ea6:	be 85       	ldd	r27, Y+14	; 0x0e
    8ea8:	6a 1b       	sub	r22, r26
    8eaa:	7b 0b       	sbc	r23, r27
    8eac:	d5 01       	movw	r26, r10
    8eae:	ed 91       	ld	r30, X+
    8eb0:	fc 91       	ld	r31, X
    8eb2:	00 88       	ldd	r0, Z+16	; 0x10
    8eb4:	f1 89       	ldd	r31, Z+17	; 0x11
    8eb6:	e0 2d       	mov	r30, r0
    8eb8:	81 01       	movw	r16, r2
    8eba:	4b 85       	ldd	r20, Y+11	; 0x0b
    8ebc:	5c 85       	ldd	r21, Y+12	; 0x0c
    8ebe:	4e 19       	sub	r20, r14
    8ec0:	5f 09       	sbc	r21, r15
    8ec2:	c5 01       	movw	r24, r10
    8ec4:	09 95       	icall
    8ec6:	de 86       	std	Y+14, r13	; 0x0e
    8ec8:	cd 86       	std	Y+13, r12	; 0x0d
    8eca:	6d cf       	rjmp	.-294    	; 0x8da6 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x86>
    8ecc:	2e 96       	adiw	r28, 0x0e	; 14
    8ece:	0f b6       	in	r0, 0x3f	; 63
    8ed0:	f8 94       	cli
    8ed2:	de bf       	out	0x3e, r29	; 62
    8ed4:	0f be       	out	0x3f, r0	; 63
    8ed6:	cd bf       	out	0x3d, r28	; 61
    8ed8:	df 91       	pop	r29
    8eda:	cf 91       	pop	r28
    8edc:	1f 91       	pop	r17
    8ede:	0f 91       	pop	r16
    8ee0:	ff 90       	pop	r15
    8ee2:	ef 90       	pop	r14
    8ee4:	df 90       	pop	r13
    8ee6:	cf 90       	pop	r12
    8ee8:	bf 90       	pop	r11
    8eea:	af 90       	pop	r10
    8eec:	9f 90       	pop	r9
    8eee:	8f 90       	pop	r8
    8ef0:	7f 90       	pop	r7
    8ef2:	6f 90       	pop	r6
    8ef4:	5f 90       	pop	r5
    8ef6:	4f 90       	pop	r4
    8ef8:	3f 90       	pop	r3
    8efa:	2f 90       	pop	r2
    8efc:	08 95       	ret

00008efe <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX10fillCircleEiiij():
    8efe:	6f 92       	push	r6
    8f00:	7f 92       	push	r7
    8f02:	8f 92       	push	r8
    8f04:	9f 92       	push	r9
    8f06:	af 92       	push	r10
    8f08:	bf 92       	push	r11
    8f0a:	cf 92       	push	r12
    8f0c:	df 92       	push	r13
    8f0e:	ef 92       	push	r14
    8f10:	ff 92       	push	r15
    8f12:	0f 93       	push	r16
    8f14:	1f 93       	push	r17
    8f16:	cf 93       	push	r28
    8f18:	df 93       	push	r29
    8f1a:	ec 01       	movw	r28, r24
    8f1c:	4b 01       	movw	r8, r22
    8f1e:	3a 01       	movw	r6, r20
    8f20:	59 01       	movw	r10, r18
    8f22:	68 01       	movw	r12, r16
    8f24:	e8 81       	ld	r30, Y
    8f26:	f9 81       	ldd	r31, Y+1	; 0x01
    8f28:	02 84       	ldd	r0, Z+10	; 0x0a
    8f2a:	f3 85       	ldd	r31, Z+11	; 0x0b
    8f2c:	e0 2d       	mov	r30, r0
    8f2e:	09 95       	icall
    8f30:	95 01       	movw	r18, r10
    8f32:	22 0f       	add	r18, r18
    8f34:	33 1f       	adc	r19, r19
    8f36:	2f 5f       	subi	r18, 0xFF	; 255
    8f38:	3f 4f       	sbci	r19, 0xFF	; 255
    8f3a:	a3 01       	movw	r20, r6
    8f3c:	4a 19       	sub	r20, r10
    8f3e:	5b 09       	sbc	r21, r11
    8f40:	e8 81       	ld	r30, Y
    8f42:	f9 81       	ldd	r31, Y+1	; 0x01
    8f44:	00 88       	ldd	r0, Z+16	; 0x10
    8f46:	f1 89       	ldd	r31, Z+17	; 0x11
    8f48:	e0 2d       	mov	r30, r0
    8f4a:	b4 01       	movw	r22, r8
    8f4c:	ce 01       	movw	r24, r28
    8f4e:	09 95       	icall
    8f50:	f1 2c       	mov	r15, r1
    8f52:	e1 2c       	mov	r14, r1
    8f54:	03 e0       	ldi	r16, 0x03	; 3
    8f56:	95 01       	movw	r18, r10
    8f58:	a3 01       	movw	r20, r6
    8f5a:	b4 01       	movw	r22, r8
    8f5c:	ce 01       	movw	r24, r28
    8f5e:	0e 94 90 46 	call	0x8d20	; 0x8d20 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)>
    8f62:	e8 81       	ld	r30, Y
    8f64:	f9 81       	ldd	r31, Y+1	; 0x01
    8f66:	06 88       	ldd	r0, Z+22	; 0x16
    8f68:	f7 89       	ldd	r31, Z+23	; 0x17
    8f6a:	e0 2d       	mov	r30, r0
    8f6c:	ce 01       	movw	r24, r28
    8f6e:	df 91       	pop	r29
    8f70:	cf 91       	pop	r28
    8f72:	1f 91       	pop	r17
    8f74:	0f 91       	pop	r16
    8f76:	ff 90       	pop	r15
    8f78:	ef 90       	pop	r14
    8f7a:	df 90       	pop	r13
    8f7c:	cf 90       	pop	r12
    8f7e:	bf 90       	pop	r11
    8f80:	af 90       	pop	r10
    8f82:	9f 90       	pop	r9
    8f84:	8f 90       	pop	r8
    8f86:	7f 90       	pop	r7
    8f88:	6f 90       	pop	r6
    8f8a:	09 94       	ijmp

00008f8c <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13drawRoundRectEiiiiij():
    8f8c:	2f 92       	push	r2
    8f8e:	3f 92       	push	r3
    8f90:	4f 92       	push	r4
    8f92:	5f 92       	push	r5
    8f94:	6f 92       	push	r6
    8f96:	7f 92       	push	r7
    8f98:	8f 92       	push	r8
    8f9a:	9f 92       	push	r9
    8f9c:	af 92       	push	r10
    8f9e:	bf 92       	push	r11
    8fa0:	cf 92       	push	r12
    8fa2:	df 92       	push	r13
    8fa4:	ef 92       	push	r14
    8fa6:	ff 92       	push	r15
    8fa8:	0f 93       	push	r16
    8faa:	1f 93       	push	r17
    8fac:	cf 93       	push	r28
    8fae:	df 93       	push	r29
    8fb0:	cd b7       	in	r28, 0x3d	; 61
    8fb2:	de b7       	in	r29, 0x3e	; 62
    8fb4:	28 97       	sbiw	r28, 0x08	; 8
    8fb6:	0f b6       	in	r0, 0x3f	; 63
    8fb8:	f8 94       	cli
    8fba:	de bf       	out	0x3e, r29	; 62
    8fbc:	0f be       	out	0x3f, r0	; 63
    8fbe:	cd bf       	out	0x3d, r28	; 61
    8fc0:	5c 01       	movw	r10, r24
    8fc2:	7a 83       	std	Y+2, r23	; 0x02
    8fc4:	69 83       	std	Y+1, r22	; 0x01
    8fc6:	2a 01       	movw	r4, r20
    8fc8:	49 01       	movw	r8, r18
    8fca:	38 01       	movw	r6, r16
    8fcc:	20 17       	cp	r18, r16
    8fce:	31 07       	cpc	r19, r17
    8fd0:	0c f0       	brlt	.+2      	; 0x8fd4 <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x48>
    8fd2:	bf c0       	rjmp	.+382    	; 0x9152 <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x1c6>
    8fd4:	3c 83       	std	Y+4, r19	; 0x04
    8fd6:	2b 83       	std	Y+3, r18	; 0x03
    8fd8:	c9 01       	movw	r24, r18
    8fda:	37 fd       	sbrc	r19, 7
    8fdc:	bf c0       	rjmp	.+382    	; 0x915c <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x1d0>
    8fde:	ab 81       	ldd	r26, Y+3	; 0x03
    8fe0:	bc 81       	ldd	r27, Y+4	; 0x04
    8fe2:	b5 95       	asr	r27
    8fe4:	a7 95       	ror	r26
    8fe6:	bc 83       	std	Y+4, r27	; 0x04
    8fe8:	ab 83       	std	Y+3, r26	; 0x03
    8fea:	8b 81       	ldd	r24, Y+3	; 0x03
    8fec:	9c 81       	ldd	r25, Y+4	; 0x04
    8fee:	98 87       	std	Y+8, r25	; 0x08
    8ff0:	8f 83       	std	Y+7, r24	; 0x07
    8ff2:	e8 16       	cp	r14, r24
    8ff4:	f9 06       	cpc	r15, r25
    8ff6:	14 f4       	brge	.+4      	; 0x8ffc <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x70>
    8ff8:	f8 86       	std	Y+8, r15	; 0x08
    8ffa:	ef 82       	std	Y+7, r14	; 0x07
    8ffc:	d5 01       	movw	r26, r10
    8ffe:	ed 91       	ld	r30, X+
    9000:	fc 91       	ld	r31, X
    9002:	02 84       	ldd	r0, Z+10	; 0x0a
    9004:	f3 85       	ldd	r31, Z+11	; 0x0b
    9006:	e0 2d       	mov	r30, r0
    9008:	c5 01       	movw	r24, r10
    900a:	09 95       	icall
    900c:	8f 81       	ldd	r24, Y+7	; 0x07
    900e:	98 85       	ldd	r25, Y+8	; 0x08
    9010:	88 0f       	add	r24, r24
    9012:	99 1f       	adc	r25, r25
    9014:	9c 83       	std	Y+4, r25	; 0x04
    9016:	8b 83       	std	Y+3, r24	; 0x03
    9018:	74 01       	movw	r14, r8
    901a:	e8 1a       	sub	r14, r24
    901c:	f9 0a       	sbc	r15, r25
    901e:	29 80       	ldd	r2, Y+1	; 0x01
    9020:	3a 80       	ldd	r3, Y+2	; 0x02
    9022:	af 81       	ldd	r26, Y+7	; 0x07
    9024:	b8 85       	ldd	r27, Y+8	; 0x08
    9026:	2a 0e       	add	r2, r26
    9028:	3b 1e       	adc	r3, r27
    902a:	d5 01       	movw	r26, r10
    902c:	ed 91       	ld	r30, X+
    902e:	fc 91       	ld	r31, X
    9030:	02 88       	ldd	r0, Z+18	; 0x12
    9032:	f3 89       	ldd	r31, Z+19	; 0x13
    9034:	e0 2d       	mov	r30, r0
    9036:	86 01       	movw	r16, r12
    9038:	97 01       	movw	r18, r14
    903a:	a2 01       	movw	r20, r4
    903c:	b1 01       	movw	r22, r2
    903e:	c5 01       	movw	r24, r10
    9040:	09 95       	icall
    9042:	c3 01       	movw	r24, r6
    9044:	84 0d       	add	r24, r4
    9046:	95 1d       	adc	r25, r5
    9048:	9e 83       	std	Y+6, r25	; 0x06
    904a:	8d 83       	std	Y+5, r24	; 0x05
    904c:	ac 01       	movw	r20, r24
    904e:	41 50       	subi	r20, 0x01	; 1
    9050:	51 09       	sbc	r21, r1
    9052:	d5 01       	movw	r26, r10
    9054:	ed 91       	ld	r30, X+
    9056:	fc 91       	ld	r31, X
    9058:	02 88       	ldd	r0, Z+18	; 0x12
    905a:	f3 89       	ldd	r31, Z+19	; 0x13
    905c:	e0 2d       	mov	r30, r0
    905e:	97 01       	movw	r18, r14
    9060:	b1 01       	movw	r22, r2
    9062:	c5 01       	movw	r24, r10
    9064:	09 95       	icall
    9066:	8b 81       	ldd	r24, Y+3	; 0x03
    9068:	9c 81       	ldd	r25, Y+4	; 0x04
    906a:	68 1a       	sub	r6, r24
    906c:	79 0a       	sbc	r7, r25
    906e:	af 81       	ldd	r26, Y+7	; 0x07
    9070:	b8 85       	ldd	r27, Y+8	; 0x08
    9072:	4a 0e       	add	r4, r26
    9074:	5b 1e       	adc	r5, r27
    9076:	d5 01       	movw	r26, r10
    9078:	ed 91       	ld	r30, X+
    907a:	fc 91       	ld	r31, X
    907c:	00 88       	ldd	r0, Z+16	; 0x10
    907e:	f1 89       	ldd	r31, Z+17	; 0x11
    9080:	e0 2d       	mov	r30, r0
    9082:	93 01       	movw	r18, r6
    9084:	a2 01       	movw	r20, r4
    9086:	69 81       	ldd	r22, Y+1	; 0x01
    9088:	7a 81       	ldd	r23, Y+2	; 0x02
    908a:	c5 01       	movw	r24, r10
    908c:	09 95       	icall
    908e:	89 81       	ldd	r24, Y+1	; 0x01
    9090:	9a 81       	ldd	r25, Y+2	; 0x02
    9092:	88 0e       	add	r8, r24
    9094:	99 1e       	adc	r9, r25
    9096:	b4 01       	movw	r22, r8
    9098:	61 50       	subi	r22, 0x01	; 1
    909a:	71 09       	sbc	r23, r1
    909c:	d5 01       	movw	r26, r10
    909e:	ed 91       	ld	r30, X+
    90a0:	fc 91       	ld	r31, X
    90a2:	00 88       	ldd	r0, Z+16	; 0x10
    90a4:	f1 89       	ldd	r31, Z+17	; 0x11
    90a6:	e0 2d       	mov	r30, r0
    90a8:	93 01       	movw	r18, r6
    90aa:	a2 01       	movw	r20, r4
    90ac:	c5 01       	movw	r24, r10
    90ae:	09 95       	icall
    90b0:	76 01       	movw	r14, r12
    90b2:	01 e0       	ldi	r16, 0x01	; 1
    90b4:	2f 81       	ldd	r18, Y+7	; 0x07
    90b6:	38 85       	ldd	r19, Y+8	; 0x08
    90b8:	a2 01       	movw	r20, r4
    90ba:	b1 01       	movw	r22, r2
    90bc:	c5 01       	movw	r24, r10
    90be:	0e 94 95 45 	call	0x8b2a	; 0x8b2a <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)>
    90c2:	8f 81       	ldd	r24, Y+7	; 0x07
    90c4:	98 85       	ldd	r25, Y+8	; 0x08
    90c6:	88 1a       	sub	r8, r24
    90c8:	99 0a       	sbc	r9, r25
    90ca:	91 e0       	ldi	r25, 0x01	; 1
    90cc:	89 1a       	sub	r8, r25
    90ce:	91 08       	sbc	r9, r1
    90d0:	02 e0       	ldi	r16, 0x02	; 2
    90d2:	2f 81       	ldd	r18, Y+7	; 0x07
    90d4:	38 85       	ldd	r19, Y+8	; 0x08
    90d6:	a2 01       	movw	r20, r4
    90d8:	b4 01       	movw	r22, r8
    90da:	c5 01       	movw	r24, r10
    90dc:	0e 94 95 45 	call	0x8b2a	; 0x8b2a <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)>
    90e0:	6d 80       	ldd	r6, Y+5	; 0x05
    90e2:	7e 80       	ldd	r7, Y+6	; 0x06
    90e4:	af 81       	ldd	r26, Y+7	; 0x07
    90e6:	b8 85       	ldd	r27, Y+8	; 0x08
    90e8:	6a 1a       	sub	r6, r26
    90ea:	7b 0a       	sbc	r7, r27
    90ec:	b1 e0       	ldi	r27, 0x01	; 1
    90ee:	6b 1a       	sub	r6, r27
    90f0:	71 08       	sbc	r7, r1
    90f2:	04 e0       	ldi	r16, 0x04	; 4
    90f4:	2f 81       	ldd	r18, Y+7	; 0x07
    90f6:	38 85       	ldd	r19, Y+8	; 0x08
    90f8:	a3 01       	movw	r20, r6
    90fa:	b4 01       	movw	r22, r8
    90fc:	c5 01       	movw	r24, r10
    90fe:	0e 94 95 45 	call	0x8b2a	; 0x8b2a <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)>
    9102:	08 e0       	ldi	r16, 0x08	; 8
    9104:	2f 81       	ldd	r18, Y+7	; 0x07
    9106:	38 85       	ldd	r19, Y+8	; 0x08
    9108:	a3 01       	movw	r20, r6
    910a:	b1 01       	movw	r22, r2
    910c:	c5 01       	movw	r24, r10
    910e:	0e 94 95 45 	call	0x8b2a	; 0x8b2a <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)>
    9112:	d5 01       	movw	r26, r10
    9114:	ed 91       	ld	r30, X+
    9116:	fc 91       	ld	r31, X
    9118:	06 88       	ldd	r0, Z+22	; 0x16
    911a:	f7 89       	ldd	r31, Z+23	; 0x17
    911c:	e0 2d       	mov	r30, r0
    911e:	c5 01       	movw	r24, r10
    9120:	28 96       	adiw	r28, 0x08	; 8
    9122:	0f b6       	in	r0, 0x3f	; 63
    9124:	f8 94       	cli
    9126:	de bf       	out	0x3e, r29	; 62
    9128:	0f be       	out	0x3f, r0	; 63
    912a:	cd bf       	out	0x3d, r28	; 61
    912c:	df 91       	pop	r29
    912e:	cf 91       	pop	r28
    9130:	1f 91       	pop	r17
    9132:	0f 91       	pop	r16
    9134:	ff 90       	pop	r15
    9136:	ef 90       	pop	r14
    9138:	df 90       	pop	r13
    913a:	cf 90       	pop	r12
    913c:	bf 90       	pop	r11
    913e:	af 90       	pop	r10
    9140:	9f 90       	pop	r9
    9142:	8f 90       	pop	r8
    9144:	7f 90       	pop	r7
    9146:	6f 90       	pop	r6
    9148:	5f 90       	pop	r5
    914a:	4f 90       	pop	r4
    914c:	3f 90       	pop	r3
    914e:	2f 90       	pop	r2
    9150:	09 94       	ijmp
    9152:	1c 83       	std	Y+4, r17	; 0x04
    9154:	0b 83       	std	Y+3, r16	; 0x03
    9156:	17 ff       	sbrs	r17, 7
    9158:	42 cf       	rjmp	.-380    	; 0x8fde <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x52>
    915a:	c8 01       	movw	r24, r16
    915c:	01 96       	adiw	r24, 0x01	; 1
    915e:	9c 83       	std	Y+4, r25	; 0x04
    9160:	8b 83       	std	Y+3, r24	; 0x03
    9162:	3d cf       	rjmp	.-390    	; 0x8fde <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x52>

00009164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>:
_ZN12Adafruit_GFX10drawBitmapEiiPKhiij():
    9164:	3f 92       	push	r3
    9166:	4f 92       	push	r4
    9168:	5f 92       	push	r5
    916a:	6f 92       	push	r6
    916c:	7f 92       	push	r7
    916e:	8f 92       	push	r8
    9170:	9f 92       	push	r9
    9172:	af 92       	push	r10
    9174:	bf 92       	push	r11
    9176:	cf 92       	push	r12
    9178:	df 92       	push	r13
    917a:	ef 92       	push	r14
    917c:	ff 92       	push	r15
    917e:	0f 93       	push	r16
    9180:	1f 93       	push	r17
    9182:	cf 93       	push	r28
    9184:	df 93       	push	r29
    9186:	cd b7       	in	r28, 0x3d	; 61
    9188:	de b7       	in	r29, 0x3e	; 62
    918a:	2a 97       	sbiw	r28, 0x0a	; 10
    918c:	0f b6       	in	r0, 0x3f	; 63
    918e:	f8 94       	cli
    9190:	de bf       	out	0x3e, r29	; 62
    9192:	0f be       	out	0x3f, r0	; 63
    9194:	cd bf       	out	0x3d, r28	; 61
    9196:	9a 87       	std	Y+10, r25	; 0x0a
    9198:	89 87       	std	Y+9, r24	; 0x09
    919a:	7e 83       	std	Y+6, r23	; 0x06
    919c:	6d 83       	std	Y+5, r22	; 0x05
    919e:	58 87       	std	Y+8, r21	; 0x08
    91a0:	4f 83       	std	Y+7, r20	; 0x07
    91a2:	29 01       	movw	r4, r18
    91a4:	37 01       	movw	r6, r14
    91a6:	dc 01       	movw	r26, r24
    91a8:	ed 91       	ld	r30, X+
    91aa:	fc 91       	ld	r31, X
    91ac:	02 84       	ldd	r0, Z+10	; 0x0a
    91ae:	f3 85       	ldd	r31, Z+11	; 0x0b
    91b0:	e0 2d       	mov	r30, r0
    91b2:	09 95       	icall
    91b4:	c8 01       	movw	r24, r16
    91b6:	07 96       	adiw	r24, 0x07	; 7
    91b8:	97 fd       	sbrc	r25, 7
    91ba:	07 96       	adiw	r24, 0x07	; 7
    91bc:	9c 01       	movw	r18, r24
    91be:	93 e0       	ldi	r25, 0x03	; 3
    91c0:	35 95       	asr	r19
    91c2:	27 95       	ror	r18
    91c4:	9a 95       	dec	r25
    91c6:	e1 f7       	brne	.-8      	; 0x91c0 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0x5c>
    91c8:	3a 83       	std	Y+2, r19	; 0x02
    91ca:	29 83       	std	Y+1, r18	; 0x01
    91cc:	91 2c       	mov	r9, r1
    91ce:	81 2c       	mov	r8, r1
    91d0:	b1 2c       	mov	r11, r1
    91d2:	a1 2c       	mov	r10, r1
    91d4:	31 2c       	mov	r3, r1
    91d6:	8f 81       	ldd	r24, Y+7	; 0x07
    91d8:	98 85       	ldd	r25, Y+8	; 0x08
    91da:	8a 0d       	add	r24, r10
    91dc:	9b 1d       	adc	r25, r11
    91de:	9c 83       	std	Y+4, r25	; 0x04
    91e0:	8b 83       	std	Y+3, r24	; 0x03
    91e2:	a6 14       	cp	r10, r6
    91e4:	b7 04       	cpc	r11, r7
    91e6:	ac f5       	brge	.+106    	; 0x9252 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0xee>
    91e8:	f1 2c       	mov	r15, r1
    91ea:	e1 2c       	mov	r14, r1
    91ec:	e0 16       	cp	r14, r16
    91ee:	f1 06       	cpc	r15, r17
    91f0:	44 f5       	brge	.+80     	; 0x9242 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0xde>
    91f2:	c7 01       	movw	r24, r14
    91f4:	87 70       	andi	r24, 0x07	; 7
    91f6:	99 27       	eor	r25, r25
    91f8:	33 0c       	add	r3, r3
    91fa:	89 2b       	or	r24, r25
    91fc:	59 f4       	brne	.+22     	; 0x9214 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0xb0>
    91fe:	f7 01       	movw	r30, r14
    9200:	83 e0       	ldi	r24, 0x03	; 3
    9202:	f5 95       	asr	r31
    9204:	e7 95       	ror	r30
    9206:	8a 95       	dec	r24
    9208:	e1 f7       	brne	.-8      	; 0x9202 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0x9e>
    920a:	e8 0d       	add	r30, r8
    920c:	f9 1d       	adc	r31, r9
    920e:	e4 0d       	add	r30, r4
    9210:	f5 1d       	adc	r31, r5
    9212:	34 90       	lpm	r3, Z
    9214:	37 fe       	sbrs	r3, 7
    9216:	11 c0       	rjmp	.+34     	; 0x923a <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0xd6>
    9218:	a9 85       	ldd	r26, Y+9	; 0x09
    921a:	ba 85       	ldd	r27, Y+10	; 0x0a
    921c:	ed 91       	ld	r30, X+
    921e:	fc 91       	ld	r31, X
    9220:	11 97       	sbiw	r26, 0x01	; 1
    9222:	04 84       	ldd	r0, Z+12	; 0x0c
    9224:	f5 85       	ldd	r31, Z+13	; 0x0d
    9226:	e0 2d       	mov	r30, r0
    9228:	96 01       	movw	r18, r12
    922a:	4b 81       	ldd	r20, Y+3	; 0x03
    922c:	5c 81       	ldd	r21, Y+4	; 0x04
    922e:	6d 81       	ldd	r22, Y+5	; 0x05
    9230:	7e 81       	ldd	r23, Y+6	; 0x06
    9232:	6e 0d       	add	r22, r14
    9234:	7f 1d       	adc	r23, r15
    9236:	cd 01       	movw	r24, r26
    9238:	09 95       	icall
    923a:	bf ef       	ldi	r27, 0xFF	; 255
    923c:	eb 1a       	sub	r14, r27
    923e:	fb 0a       	sbc	r15, r27
    9240:	d5 cf       	rjmp	.-86     	; 0x91ec <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0x88>
    9242:	2f ef       	ldi	r18, 0xFF	; 255
    9244:	a2 1a       	sub	r10, r18
    9246:	b2 0a       	sbc	r11, r18
    9248:	89 81       	ldd	r24, Y+1	; 0x01
    924a:	9a 81       	ldd	r25, Y+2	; 0x02
    924c:	88 0e       	add	r8, r24
    924e:	99 1e       	adc	r9, r25
    9250:	c2 cf       	rjmp	.-124    	; 0x91d6 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0x72>
    9252:	a9 85       	ldd	r26, Y+9	; 0x09
    9254:	ba 85       	ldd	r27, Y+10	; 0x0a
    9256:	ed 91       	ld	r30, X+
    9258:	fc 91       	ld	r31, X
    925a:	11 97       	sbiw	r26, 0x01	; 1
    925c:	06 88       	ldd	r0, Z+22	; 0x16
    925e:	f7 89       	ldd	r31, Z+23	; 0x17
    9260:	e0 2d       	mov	r30, r0
    9262:	cd 01       	movw	r24, r26
    9264:	2a 96       	adiw	r28, 0x0a	; 10
    9266:	0f b6       	in	r0, 0x3f	; 63
    9268:	f8 94       	cli
    926a:	de bf       	out	0x3e, r29	; 62
    926c:	0f be       	out	0x3f, r0	; 63
    926e:	cd bf       	out	0x3d, r28	; 61
    9270:	df 91       	pop	r29
    9272:	cf 91       	pop	r28
    9274:	1f 91       	pop	r17
    9276:	0f 91       	pop	r16
    9278:	ff 90       	pop	r15
    927a:	ef 90       	pop	r14
    927c:	df 90       	pop	r13
    927e:	cf 90       	pop	r12
    9280:	bf 90       	pop	r11
    9282:	af 90       	pop	r10
    9284:	9f 90       	pop	r9
    9286:	8f 90       	pop	r8
    9288:	7f 90       	pop	r7
    928a:	6f 90       	pop	r6
    928c:	5f 90       	pop	r5
    928e:	4f 90       	pop	r4
    9290:	3f 90       	pop	r3
    9292:	09 94       	ijmp

00009294 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)>:
_ZN12Adafruit_GFX8drawCharEiihjjhh():
    9294:	2f 92       	push	r2
    9296:	3f 92       	push	r3
    9298:	4f 92       	push	r4
    929a:	5f 92       	push	r5
    929c:	6f 92       	push	r6
    929e:	7f 92       	push	r7
    92a0:	8f 92       	push	r8
    92a2:	9f 92       	push	r9
    92a4:	af 92       	push	r10
    92a6:	bf 92       	push	r11
    92a8:	cf 92       	push	r12
    92aa:	df 92       	push	r13
    92ac:	ef 92       	push	r14
    92ae:	ff 92       	push	r15
    92b0:	0f 93       	push	r16
    92b2:	1f 93       	push	r17
    92b4:	cf 93       	push	r28
    92b6:	df 93       	push	r29
    92b8:	cd b7       	in	r28, 0x3d	; 61
    92ba:	de b7       	in	r29, 0x3e	; 62
    92bc:	6a 97       	sbiw	r28, 0x1a	; 26
    92be:	0f b6       	in	r0, 0x3f	; 63
    92c0:	f8 94       	cli
    92c2:	de bf       	out	0x3e, r29	; 62
    92c4:	0f be       	out	0x3f, r0	; 63
    92c6:	cd bf       	out	0x3d, r28	; 61
    92c8:	9a 8f       	std	Y+26, r25	; 0x1a
    92ca:	89 8f       	std	Y+25, r24	; 0x19
    92cc:	7a 83       	std	Y+2, r23	; 0x02
    92ce:	69 83       	std	Y+1, r22	; 0x01
    92d0:	4a 01       	movw	r8, r20
    92d2:	d2 2e       	mov	r13, r18
    92d4:	18 87       	std	Y+8, r17	; 0x08
    92d6:	0f 83       	std	Y+7, r16	; 0x07
    92d8:	37 01       	movw	r6, r14
    92da:	bc 2c       	mov	r11, r12
    92dc:	dc 01       	movw	r26, r24
    92de:	59 96       	adiw	r26, 0x19	; 25
    92e0:	2d 91       	ld	r18, X+
    92e2:	3c 91       	ld	r19, X
    92e4:	5a 97       	sbiw	r26, 0x1a	; 26
    92e6:	21 15       	cp	r18, r1
    92e8:	31 05       	cpc	r19, r1
    92ea:	09 f0       	breq	.+2      	; 0x92ee <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x5a>
    92ec:	15 c1       	rjmp	.+554    	; 0x9518 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x284>
    92ee:	18 96       	adiw	r26, 0x08	; 8
    92f0:	8d 91       	ld	r24, X+
    92f2:	9c 91       	ld	r25, X
    92f4:	19 97       	sbiw	r26, 0x09	; 9
    92f6:	68 17       	cp	r22, r24
    92f8:	79 07       	cpc	r23, r25
    92fa:	0c f0       	brlt	.+2      	; 0x92fe <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x6a>
    92fc:	d7 c1       	rjmp	.+942    	; 0x96ac <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    92fe:	1a 96       	adiw	r26, 0x0a	; 10
    9300:	8d 91       	ld	r24, X+
    9302:	9c 91       	ld	r25, X
    9304:	48 17       	cp	r20, r24
    9306:	59 07       	cpc	r21, r25
    9308:	0c f0       	brlt	.+2      	; 0x930c <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x78>
    930a:	d0 c1       	rjmp	.+928    	; 0x96ac <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    930c:	4c 2c       	mov	r4, r12
    930e:	51 2c       	mov	r5, r1
    9310:	b6 e0       	ldi	r27, 0x06	; 6
    9312:	cb 9e       	mul	r12, r27
    9314:	60 0d       	add	r22, r0
    9316:	71 1d       	adc	r23, r1
    9318:	11 24       	eor	r1, r1
    931a:	7c 87       	std	Y+12, r23	; 0x0c
    931c:	6b 87       	std	Y+11, r22	; 0x0b
    931e:	16 16       	cp	r1, r22
    9320:	17 06       	cpc	r1, r23
    9322:	0c f0       	brlt	.+2      	; 0x9326 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x92>
    9324:	c3 c1       	rjmp	.+902    	; 0x96ac <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    9326:	ea 2d       	mov	r30, r10
    9328:	f0 e0       	ldi	r31, 0x00	; 0
    932a:	fa 87       	std	Y+10, r31	; 0x0a
    932c:	e9 87       	std	Y+9, r30	; 0x09
    932e:	93 e0       	ldi	r25, 0x03	; 3
    9330:	ee 0f       	add	r30, r30
    9332:	ff 1f       	adc	r31, r31
    9334:	9a 95       	dec	r25
    9336:	e1 f7       	brne	.-8      	; 0x9330 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x9c>
    9338:	f8 8b       	std	Y+16, r31	; 0x10
    933a:	ef 87       	std	Y+15, r30	; 0x0f
    933c:	cf 01       	movw	r24, r30
    933e:	84 0f       	add	r24, r20
    9340:	95 1f       	adc	r25, r21
    9342:	18 16       	cp	r1, r24
    9344:	19 06       	cpc	r1, r25
    9346:	0c f0       	brlt	.+2      	; 0x934a <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0xb6>
    9348:	b1 c1       	rjmp	.+866    	; 0x96ac <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    934a:	a9 8d       	ldd	r26, Y+25	; 0x19
    934c:	ba 8d       	ldd	r27, Y+26	; 0x1a
    934e:	58 96       	adiw	r26, 0x18	; 24
    9350:	8c 91       	ld	r24, X
    9352:	81 11       	cpse	r24, r1
    9354:	04 c0       	rjmp	.+8      	; 0x935e <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0xca>
    9356:	bf ea       	ldi	r27, 0xAF	; 175
    9358:	bd 15       	cp	r27, r13
    935a:	08 f4       	brcc	.+2      	; 0x935e <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0xca>
    935c:	d3 94       	inc	r13
    935e:	a9 8d       	ldd	r26, Y+25	; 0x19
    9360:	ba 8d       	ldd	r27, Y+26	; 0x1a
    9362:	ed 91       	ld	r30, X+
    9364:	fc 91       	ld	r31, X
    9366:	11 97       	sbiw	r26, 0x01	; 1
    9368:	02 84       	ldd	r0, Z+10	; 0x0a
    936a:	f3 85       	ldd	r31, Z+11	; 0x0b
    936c:	e0 2d       	mov	r30, r0
    936e:	cd 01       	movw	r24, r26
    9370:	09 95       	icall
    9372:	b5 e0       	ldi	r27, 0x05	; 5
    9374:	db 9e       	mul	r13, r27
    9376:	c0 01       	movw	r24, r0
    9378:	11 24       	eor	r1, r1
    937a:	e9 81       	ldd	r30, Y+1	; 0x01
    937c:	fa 81       	ldd	r31, Y+2	; 0x02
    937e:	fc 83       	std	Y+4, r31	; 0x04
    9380:	eb 83       	std	Y+3, r30	; 0x03
    9382:	31 2c       	mov	r3, r1
    9384:	21 2c       	mov	r2, r1
    9386:	9c 01       	movw	r18, r24
    9388:	27 57       	subi	r18, 0x77	; 119
    938a:	39 4e       	sbci	r19, 0xE9	; 233
    938c:	38 8f       	std	Y+24, r19	; 0x18
    938e:	2f 8b       	std	Y+23, r18	; 0x17
    9390:	4a 2d       	mov	r20, r10
    9392:	50 e0       	ldi	r21, 0x00	; 0
    9394:	5e 8b       	std	Y+22, r21	; 0x16
    9396:	4d 8b       	std	Y+21, r20	; 0x15
    9398:	ef 89       	ldd	r30, Y+23	; 0x17
    939a:	f8 8d       	ldd	r31, Y+24	; 0x18
    939c:	e2 0d       	add	r30, r2
    939e:	f3 1d       	adc	r31, r3
    93a0:	44 91       	lpm	r20, Z
    93a2:	9e 82       	std	Y+6, r9	; 0x06
    93a4:	8d 82       	std	Y+5, r8	; 0x05
    93a6:	d1 2c       	mov	r13, r1
    93a8:	c1 2c       	mov	r12, r1
    93aa:	69 81       	ldd	r22, Y+1	; 0x01
    93ac:	7a 81       	ldd	r23, Y+2	; 0x02
    93ae:	62 0d       	add	r22, r2
    93b0:	73 1d       	adc	r23, r3
    93b2:	7a 8b       	std	Y+18, r23	; 0x12
    93b4:	69 8b       	std	Y+17, r22	; 0x11
    93b6:	84 2f       	mov	r24, r20
    93b8:	90 e0       	ldi	r25, 0x00	; 0
    93ba:	9c 8b       	std	Y+20, r25	; 0x14
    93bc:	8b 8b       	std	Y+19, r24	; 0x13
    93be:	e9 8d       	ldd	r30, Y+25	; 0x19
    93c0:	fa 8d       	ldd	r31, Y+26	; 0x1a
    93c2:	a0 81       	ld	r26, Z
    93c4:	b1 81       	ldd	r27, Z+1	; 0x01
    93c6:	40 ff       	sbrs	r20, 0
    93c8:	82 c0       	rjmp	.+260    	; 0x94ce <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x23a>
    93ca:	f1 e0       	ldi	r31, 0x01	; 1
    93cc:	bf 12       	cpse	r11, r31
    93ce:	6f c0       	rjmp	.+222    	; 0x94ae <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x21a>
    93d0:	af 12       	cpse	r10, r31
    93d2:	6d c0       	rjmp	.+218    	; 0x94ae <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x21a>
    93d4:	1c 96       	adiw	r26, 0x0c	; 12
    93d6:	ed 91       	ld	r30, X+
    93d8:	fc 91       	ld	r31, X
    93da:	2f 81       	ldd	r18, Y+7	; 0x07
    93dc:	38 85       	ldd	r19, Y+8	; 0x08
    93de:	a4 01       	movw	r20, r8
    93e0:	4c 0d       	add	r20, r12
    93e2:	5d 1d       	adc	r21, r13
    93e4:	69 89       	ldd	r22, Y+17	; 0x11
    93e6:	7a 89       	ldd	r23, Y+18	; 0x12
    93e8:	89 8d       	ldd	r24, Y+25	; 0x19
    93ea:	9a 8d       	ldd	r25, Y+26	; 0x1a
    93ec:	09 95       	icall
    93ee:	eb 89       	ldd	r30, Y+19	; 0x13
    93f0:	fc 89       	ldd	r31, Y+20	; 0x14
    93f2:	f5 95       	asr	r31
    93f4:	e7 95       	ror	r30
    93f6:	4e 2f       	mov	r20, r30
    93f8:	5f ef       	ldi	r21, 0xFF	; 255
    93fa:	c5 1a       	sub	r12, r21
    93fc:	d5 0a       	sbc	r13, r21
    93fe:	6d 81       	ldd	r22, Y+5	; 0x05
    9400:	7e 81       	ldd	r23, Y+6	; 0x06
    9402:	8d 89       	ldd	r24, Y+21	; 0x15
    9404:	9e 89       	ldd	r25, Y+22	; 0x16
    9406:	68 0f       	add	r22, r24
    9408:	79 1f       	adc	r23, r25
    940a:	7e 83       	std	Y+6, r23	; 0x06
    940c:	6d 83       	std	Y+5, r22	; 0x05
    940e:	98 e0       	ldi	r25, 0x08	; 8
    9410:	c9 16       	cp	r12, r25
    9412:	d1 04       	cpc	r13, r1
    9414:	81 f6       	brne	.-96     	; 0x93b6 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x122>
    9416:	af ef       	ldi	r26, 0xFF	; 255
    9418:	2a 1a       	sub	r2, r26
    941a:	3a 0a       	sbc	r3, r26
    941c:	eb 81       	ldd	r30, Y+3	; 0x03
    941e:	fc 81       	ldd	r31, Y+4	; 0x04
    9420:	e4 0d       	add	r30, r4
    9422:	f5 1d       	adc	r31, r5
    9424:	fc 83       	std	Y+4, r31	; 0x04
    9426:	eb 83       	std	Y+3, r30	; 0x03
    9428:	f5 e0       	ldi	r31, 0x05	; 5
    942a:	2f 16       	cp	r2, r31
    942c:	31 04       	cpc	r3, r1
    942e:	09 f0       	breq	.+2      	; 0x9432 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x19e>
    9430:	b3 cf       	rjmp	.-154    	; 0x9398 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x104>
    9432:	2f 81       	ldd	r18, Y+7	; 0x07
    9434:	38 85       	ldd	r19, Y+8	; 0x08
    9436:	26 15       	cp	r18, r6
    9438:	37 05       	cpc	r19, r7
    943a:	b9 f0       	breq	.+46     	; 0x946a <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x1d6>
    943c:	a9 8d       	ldd	r26, Y+25	; 0x19
    943e:	ba 8d       	ldd	r27, Y+26	; 0x1a
    9440:	ed 91       	ld	r30, X+
    9442:	fc 91       	ld	r31, X
    9444:	b1 e0       	ldi	r27, 0x01	; 1
    9446:	bb 12       	cpse	r11, r27
    9448:	57 c0       	rjmp	.+174    	; 0x94f8 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x264>
    944a:	ab 12       	cpse	r10, r27
    944c:	55 c0       	rjmp	.+170    	; 0x94f8 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x264>
    944e:	69 81       	ldd	r22, Y+1	; 0x01
    9450:	7a 81       	ldd	r23, Y+2	; 0x02
    9452:	6b 5f       	subi	r22, 0xFB	; 251
    9454:	7f 4f       	sbci	r23, 0xFF	; 255
    9456:	00 88       	ldd	r0, Z+16	; 0x10
    9458:	f1 89       	ldd	r31, Z+17	; 0x11
    945a:	e0 2d       	mov	r30, r0
    945c:	83 01       	movw	r16, r6
    945e:	28 e0       	ldi	r18, 0x08	; 8
    9460:	30 e0       	ldi	r19, 0x00	; 0
    9462:	a4 01       	movw	r20, r8
    9464:	89 8d       	ldd	r24, Y+25	; 0x19
    9466:	9a 8d       	ldd	r25, Y+26	; 0x1a
    9468:	09 95       	icall
    946a:	a9 8d       	ldd	r26, Y+25	; 0x19
    946c:	ba 8d       	ldd	r27, Y+26	; 0x1a
    946e:	ed 91       	ld	r30, X+
    9470:	fc 91       	ld	r31, X
    9472:	11 97       	sbiw	r26, 0x01	; 1
    9474:	06 88       	ldd	r0, Z+22	; 0x16
    9476:	f7 89       	ldd	r31, Z+23	; 0x17
    9478:	e0 2d       	mov	r30, r0
    947a:	cd 01       	movw	r24, r26
    947c:	6a 96       	adiw	r28, 0x1a	; 26
    947e:	0f b6       	in	r0, 0x3f	; 63
    9480:	f8 94       	cli
    9482:	de bf       	out	0x3e, r29	; 62
    9484:	0f be       	out	0x3f, r0	; 63
    9486:	cd bf       	out	0x3d, r28	; 61
    9488:	df 91       	pop	r29
    948a:	cf 91       	pop	r28
    948c:	1f 91       	pop	r17
    948e:	0f 91       	pop	r16
    9490:	ff 90       	pop	r15
    9492:	ef 90       	pop	r14
    9494:	df 90       	pop	r13
    9496:	cf 90       	pop	r12
    9498:	bf 90       	pop	r11
    949a:	af 90       	pop	r10
    949c:	9f 90       	pop	r9
    949e:	8f 90       	pop	r8
    94a0:	7f 90       	pop	r7
    94a2:	6f 90       	pop	r6
    94a4:	5f 90       	pop	r5
    94a6:	4f 90       	pop	r4
    94a8:	3f 90       	pop	r3
    94aa:	2f 90       	pop	r2
    94ac:	09 94       	ijmp
    94ae:	1e 96       	adiw	r26, 0x0e	; 14
    94b0:	ed 91       	ld	r30, X+
    94b2:	fc 91       	ld	r31, X
    94b4:	ef 80       	ldd	r14, Y+7	; 0x07
    94b6:	f8 84       	ldd	r15, Y+8	; 0x08
    94b8:	09 85       	ldd	r16, Y+9	; 0x09
    94ba:	1a 85       	ldd	r17, Y+10	; 0x0a
    94bc:	92 01       	movw	r18, r4
    94be:	4d 81       	ldd	r20, Y+5	; 0x05
    94c0:	5e 81       	ldd	r21, Y+6	; 0x06
    94c2:	6b 81       	ldd	r22, Y+3	; 0x03
    94c4:	7c 81       	ldd	r23, Y+4	; 0x04
    94c6:	89 8d       	ldd	r24, Y+25	; 0x19
    94c8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    94ca:	09 95       	icall
    94cc:	90 cf       	rjmp	.-224    	; 0x93ee <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x15a>
    94ce:	2f 81       	ldd	r18, Y+7	; 0x07
    94d0:	38 85       	ldd	r19, Y+8	; 0x08
    94d2:	26 15       	cp	r18, r6
    94d4:	37 05       	cpc	r19, r7
    94d6:	09 f4       	brne	.+2      	; 0x94da <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x246>
    94d8:	8a cf       	rjmp	.-236    	; 0x93ee <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x15a>
    94da:	31 e0       	ldi	r19, 0x01	; 1
    94dc:	b3 12       	cpse	r11, r19
    94de:	07 c0       	rjmp	.+14     	; 0x94ee <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x25a>
    94e0:	a3 12       	cpse	r10, r19
    94e2:	05 c0       	rjmp	.+10     	; 0x94ee <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x25a>
    94e4:	1c 96       	adiw	r26, 0x0c	; 12
    94e6:	ed 91       	ld	r30, X+
    94e8:	fc 91       	ld	r31, X
    94ea:	93 01       	movw	r18, r6
    94ec:	78 cf       	rjmp	.-272    	; 0x93de <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x14a>
    94ee:	1e 96       	adiw	r26, 0x0e	; 14
    94f0:	ed 91       	ld	r30, X+
    94f2:	fc 91       	ld	r31, X
    94f4:	73 01       	movw	r14, r6
    94f6:	e0 cf       	rjmp	.-64     	; 0x94b8 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x224>
    94f8:	6b 85       	ldd	r22, Y+11	; 0x0b
    94fa:	7c 85       	ldd	r23, Y+12	; 0x0c
    94fc:	64 19       	sub	r22, r4
    94fe:	75 09       	sbc	r23, r5
    9500:	06 84       	ldd	r0, Z+14	; 0x0e
    9502:	f7 85       	ldd	r31, Z+15	; 0x0f
    9504:	e0 2d       	mov	r30, r0
    9506:	73 01       	movw	r14, r6
    9508:	0f 85       	ldd	r16, Y+15	; 0x0f
    950a:	18 89       	ldd	r17, Y+16	; 0x10
    950c:	92 01       	movw	r18, r4
    950e:	a4 01       	movw	r20, r8
    9510:	89 8d       	ldd	r24, Y+25	; 0x19
    9512:	9a 8d       	ldd	r25, Y+26	; 0x1a
    9514:	09 95       	icall
    9516:	a9 cf       	rjmp	.-174    	; 0x946a <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x1d6>
    9518:	f9 01       	movw	r30, r18
    951a:	34 96       	adiw	r30, 0x04	; 4
    951c:	94 91       	lpm	r25, Z
_Z18pgm_read_glyph_ptrPK7GFXfonth():
    951e:	32 97       	sbiw	r30, 0x02	; 2
    9520:	45 91       	lpm	r20, Z+
    9522:	54 91       	lpm	r21, Z
_ZN12Adafruit_GFX8drawCharEiihjjhh():
    9524:	d9 1a       	sub	r13, r25
_Z18pgm_read_glyph_ptrPK7GFXfonth():
    9526:	b7 e0       	ldi	r27, 0x07	; 7
    9528:	db 9e       	mul	r13, r27
    952a:	40 0d       	add	r20, r0
    952c:	51 1d       	adc	r21, r1
    952e:	11 24       	eor	r1, r1
_Z19pgm_read_bitmap_ptrPK7GFXfont():
    9530:	f9 01       	movw	r30, r18
    9532:	25 91       	lpm	r18, Z+
    9534:	34 91       	lpm	r19, Z
    9536:	3c 8b       	std	Y+20, r19	; 0x14
    9538:	2b 8b       	std	Y+19, r18	; 0x13
_ZN12Adafruit_GFX8drawCharEiihjjhh():
    953a:	fa 01       	movw	r30, r20
    953c:	25 90       	lpm	r2, Z+
    953e:	34 90       	lpm	r3, Z
    9540:	fa 01       	movw	r30, r20
    9542:	32 96       	adiw	r30, 0x02	; 2
    9544:	74 90       	lpm	r7, Z
    9546:	31 96       	adiw	r30, 0x01	; 1
    9548:	34 91       	lpm	r19, Z
    954a:	39 8b       	std	Y+17, r19	; 0x11
    954c:	32 96       	adiw	r30, 0x02	; 2
    954e:	64 90       	lpm	r6, Z
    9550:	31 96       	adiw	r30, 0x01	; 1
    9552:	44 90       	lpm	r4, Z
    9554:	41 e0       	ldi	r20, 0x01	; 1
    9556:	4c 15       	cp	r20, r12
    9558:	18 f0       	brcs	.+6      	; 0x9560 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x2cc>
    955a:	4a 15       	cp	r20, r10
    955c:	08 f0       	brcs	.+2      	; 0x9560 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x2cc>
    955e:	7f c0       	rjmp	.+254    	; 0x965e <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3ca>
    9560:	66 2d       	mov	r22, r6
    9562:	06 2c       	mov	r0, r6
    9564:	00 0c       	add	r0, r0
    9566:	77 0b       	sbc	r23, r23
    9568:	7c 83       	std	Y+4, r23	; 0x04
    956a:	6b 83       	std	Y+3, r22	; 0x03
    956c:	84 2d       	mov	r24, r4
    956e:	04 2c       	mov	r0, r4
    9570:	00 0c       	add	r0, r0
    9572:	99 0b       	sbc	r25, r25
    9574:	9e 83       	std	Y+6, r25	; 0x06
    9576:	8d 83       	std	Y+5, r24	; 0x05
    9578:	a9 8d       	ldd	r26, Y+25	; 0x19
    957a:	ba 8d       	ldd	r27, Y+26	; 0x1a
    957c:	ed 91       	ld	r30, X+
    957e:	fc 91       	ld	r31, X
    9580:	11 97       	sbiw	r26, 0x01	; 1
    9582:	02 84       	ldd	r0, Z+10	; 0x0a
    9584:	f3 85       	ldd	r31, Z+11	; 0x0b
    9586:	e0 2d       	mov	r30, r0
    9588:	cd 01       	movw	r24, r26
    958a:	09 95       	icall
    958c:	51 2c       	mov	r5, r1
    958e:	d1 2c       	mov	r13, r1
    9590:	c1 2c       	mov	r12, r1
    9592:	ea 2d       	mov	r30, r10
    9594:	f0 e0       	ldi	r31, 0x00	; 0
    9596:	fa 87       	std	Y+10, r31	; 0x0a
    9598:	e9 87       	std	Y+9, r30	; 0x09
    959a:	2b 2d       	mov	r18, r11
    959c:	30 e0       	ldi	r19, 0x00	; 0
    959e:	3c 87       	std	Y+12, r19	; 0x0c
    95a0:	2b 87       	std	Y+11, r18	; 0x0b
    95a2:	a4 01       	movw	r20, r8
    95a4:	44 0d       	add	r20, r4
    95a6:	51 1d       	adc	r21, r1
    95a8:	47 fc       	sbrc	r4, 7
    95aa:	5a 95       	dec	r21
    95ac:	58 8f       	std	Y+24, r21	; 0x18
    95ae:	4f 8b       	std	Y+23, r20	; 0x17
    95b0:	69 81       	ldd	r22, Y+1	; 0x01
    95b2:	7a 81       	ldd	r23, Y+2	; 0x02
    95b4:	66 0d       	add	r22, r6
    95b6:	71 1d       	adc	r23, r1
    95b8:	67 fc       	sbrc	r6, 7
    95ba:	7a 95       	dec	r23
    95bc:	7e 87       	std	Y+14, r23	; 0x0e
    95be:	6d 87       	std	Y+13, r22	; 0x0d
    95c0:	79 89       	ldd	r23, Y+17	; 0x11
    95c2:	c7 16       	cp	r12, r23
    95c4:	08 f0       	brcs	.+2      	; 0x95c8 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x334>
    95c6:	51 cf       	rjmp	.-350    	; 0x946a <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x1d6>
    95c8:	2c 2d       	mov	r18, r12
    95ca:	30 e0       	ldi	r19, 0x00	; 0
    95cc:	4d 81       	ldd	r20, Y+5	; 0x05
    95ce:	5e 81       	ldd	r21, Y+6	; 0x06
    95d0:	42 0f       	add	r20, r18
    95d2:	53 1f       	adc	r21, r19
    95d4:	a9 85       	ldd	r26, Y+9	; 0x09
    95d6:	ba 85       	ldd	r27, Y+10	; 0x0a
    95d8:	4a 9f       	mul	r20, r26
    95da:	c0 01       	movw	r24, r0
    95dc:	4b 9f       	mul	r20, r27
    95de:	90 0d       	add	r25, r0
    95e0:	5a 9f       	mul	r21, r26
    95e2:	90 0d       	add	r25, r0
    95e4:	11 24       	eor	r1, r1
    95e6:	fc 01       	movw	r30, r24
    95e8:	e8 0d       	add	r30, r8
    95ea:	f9 1d       	adc	r31, r9
    95ec:	f8 8b       	std	Y+16, r31	; 0x10
    95ee:	ef 87       	std	Y+15, r30	; 0x0f
    95f0:	85 2d       	mov	r24, r5
    95f2:	61 2c       	mov	r6, r1
    95f4:	4f 89       	ldd	r20, Y+23	; 0x17
    95f6:	58 8d       	ldd	r21, Y+24	; 0x18
    95f8:	42 0f       	add	r20, r18
    95fa:	53 1f       	adc	r21, r19
    95fc:	5e 8b       	std	Y+22, r21	; 0x16
    95fe:	4d 8b       	std	Y+21, r20	; 0x15
    9600:	67 14       	cp	r6, r7
    9602:	08 f0       	brcs	.+2      	; 0x9606 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x372>
    9604:	50 c0       	rjmp	.+160    	; 0x96a6 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x412>
    9606:	44 24       	eor	r4, r4
    9608:	43 94       	inc	r4
    960a:	48 0e       	add	r4, r24
    960c:	87 70       	andi	r24, 0x07	; 7
    960e:	41 f4       	brne	.+16     	; 0x9620 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x38c>
    9610:	c1 01       	movw	r24, r2
    9612:	01 96       	adiw	r24, 0x01	; 1
    9614:	eb 89       	ldd	r30, Y+19	; 0x13
    9616:	fc 89       	ldd	r31, Y+20	; 0x14
    9618:	e2 0d       	add	r30, r2
    961a:	f3 1d       	adc	r31, r3
    961c:	d4 90       	lpm	r13, Z
    961e:	1c 01       	movw	r2, r24
    9620:	d7 fe       	sbrs	r13, 7
    9622:	19 c0       	rjmp	.+50     	; 0x9656 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3c2>
    9624:	a9 8d       	ldd	r26, Y+25	; 0x19
    9626:	ba 8d       	ldd	r27, Y+26	; 0x1a
    9628:	ed 91       	ld	r30, X+
    962a:	fc 91       	ld	r31, X
    962c:	66 2d       	mov	r22, r6
    962e:	70 e0       	ldi	r23, 0x00	; 0
    9630:	b1 e0       	ldi	r27, 0x01	; 1
    9632:	bb 12       	cpse	r11, r27
    9634:	19 c0       	rjmp	.+50     	; 0x9668 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3d4>
    9636:	ab 12       	cpse	r10, r27
    9638:	17 c0       	rjmp	.+46     	; 0x9668 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3d4>
    963a:	2d 85       	ldd	r18, Y+13	; 0x0d
    963c:	3e 85       	ldd	r19, Y+14	; 0x0e
    963e:	62 0f       	add	r22, r18
    9640:	73 1f       	adc	r23, r19
    9642:	04 84       	ldd	r0, Z+12	; 0x0c
    9644:	f5 85       	ldd	r31, Z+13	; 0x0d
    9646:	e0 2d       	mov	r30, r0
    9648:	2f 81       	ldd	r18, Y+7	; 0x07
    964a:	38 85       	ldd	r19, Y+8	; 0x08
    964c:	4d 89       	ldd	r20, Y+21	; 0x15
    964e:	5e 89       	ldd	r21, Y+22	; 0x16
    9650:	89 8d       	ldd	r24, Y+25	; 0x19
    9652:	9a 8d       	ldd	r25, Y+26	; 0x1a
    9654:	09 95       	icall
    9656:	dd 0c       	add	r13, r13
    9658:	63 94       	inc	r6
    965a:	84 2d       	mov	r24, r4
    965c:	d1 cf       	rjmp	.-94     	; 0x9600 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x36c>
    965e:	1e 82       	std	Y+6, r1	; 0x06
    9660:	1d 82       	std	Y+5, r1	; 0x05
    9662:	1c 82       	std	Y+4, r1	; 0x04
    9664:	1b 82       	std	Y+3, r1	; 0x03
    9666:	88 cf       	rjmp	.-240    	; 0x9578 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x2e4>
    9668:	4b 81       	ldd	r20, Y+3	; 0x03
    966a:	5c 81       	ldd	r21, Y+4	; 0x04
    966c:	64 0f       	add	r22, r20
    966e:	75 1f       	adc	r23, r21
    9670:	ab 85       	ldd	r26, Y+11	; 0x0b
    9672:	bc 85       	ldd	r27, Y+12	; 0x0c
    9674:	6a 9f       	mul	r22, r26
    9676:	c0 01       	movw	r24, r0
    9678:	6b 9f       	mul	r22, r27
    967a:	90 0d       	add	r25, r0
    967c:	7a 9f       	mul	r23, r26
    967e:	90 0d       	add	r25, r0
    9680:	11 24       	eor	r1, r1
    9682:	69 81       	ldd	r22, Y+1	; 0x01
    9684:	7a 81       	ldd	r23, Y+2	; 0x02
    9686:	68 0f       	add	r22, r24
    9688:	79 1f       	adc	r23, r25
    968a:	06 84       	ldd	r0, Z+14	; 0x0e
    968c:	f7 85       	ldd	r31, Z+15	; 0x0f
    968e:	e0 2d       	mov	r30, r0
    9690:	ef 80       	ldd	r14, Y+7	; 0x07
    9692:	f8 84       	ldd	r15, Y+8	; 0x08
    9694:	09 85       	ldd	r16, Y+9	; 0x09
    9696:	1a 85       	ldd	r17, Y+10	; 0x0a
    9698:	9d 01       	movw	r18, r26
    969a:	4f 85       	ldd	r20, Y+15	; 0x0f
    969c:	58 89       	ldd	r21, Y+16	; 0x10
    969e:	89 8d       	ldd	r24, Y+25	; 0x19
    96a0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    96a2:	09 95       	icall
    96a4:	d8 cf       	rjmp	.-80     	; 0x9656 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3c2>
    96a6:	57 0c       	add	r5, r7
    96a8:	c3 94       	inc	r12
    96aa:	8a cf       	rjmp	.-236    	; 0x95c0 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x32c>
    96ac:	6a 96       	adiw	r28, 0x1a	; 26
    96ae:	0f b6       	in	r0, 0x3f	; 63
    96b0:	f8 94       	cli
    96b2:	de bf       	out	0x3e, r29	; 62
    96b4:	0f be       	out	0x3f, r0	; 63
    96b6:	cd bf       	out	0x3d, r28	; 61
    96b8:	df 91       	pop	r29
    96ba:	cf 91       	pop	r28
    96bc:	1f 91       	pop	r17
    96be:	0f 91       	pop	r16
    96c0:	ff 90       	pop	r15
    96c2:	ef 90       	pop	r14
    96c4:	df 90       	pop	r13
    96c6:	cf 90       	pop	r12
    96c8:	bf 90       	pop	r11
    96ca:	af 90       	pop	r10
    96cc:	9f 90       	pop	r9
    96ce:	8f 90       	pop	r8
    96d0:	7f 90       	pop	r7
    96d2:	6f 90       	pop	r6
    96d4:	5f 90       	pop	r5
    96d6:	4f 90       	pop	r4
    96d8:	3f 90       	pop	r3
    96da:	2f 90       	pop	r2
    96dc:	08 95       	ret

000096de <Adafruit_GFX::write(unsigned char)>:
_ZN12Adafruit_GFX5writeEh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1242
/*!
    @brief  Print one byte/character of data, used to support print()
    @param  c  The 8-bit ascii character to write
*/
/**************************************************************************/
size_t Adafruit_GFX::write(uint8_t c) {
    96de:	8f 92       	push	r8
    96e0:	9f 92       	push	r9
    96e2:	af 92       	push	r10
    96e4:	cf 92       	push	r12
    96e6:	ef 92       	push	r14
    96e8:	ff 92       	push	r15
    96ea:	0f 93       	push	r16
    96ec:	1f 93       	push	r17
    96ee:	cf 93       	push	r28
    96f0:	df 93       	push	r29
    96f2:	ec 01       	movw	r28, r24
    96f4:	26 2f       	mov	r18, r22
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1243
  if (!gfxFont) { // 'Classic' built-in font
    96f6:	89 8d       	ldd	r24, Y+25	; 0x19
    96f8:	9a 8d       	ldd	r25, Y+26	; 0x1a
    96fa:	00 97       	sbiw	r24, 0x00	; 0
    96fc:	09 f0       	breq	.+2      	; 0x9700 <Adafruit_GFX::write(unsigned char)+0x22>
    96fe:	51 c0       	rjmp	.+162    	; 0x97a2 <Adafruit_GFX::write(unsigned char)+0xc4>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1245

    if (c == '\n') {              // Newline?
    9700:	6a 30       	cpi	r22, 0x0A	; 10
    9702:	d1 f4       	brne	.+52     	; 0x9738 <Adafruit_GFX::write(unsigned char)+0x5a>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1246
      cursor_x = 0;               // Reset x to zero,
    9704:	1d 86       	std	Y+13, r1	; 0x0d
    9706:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1247
      cursor_y += textsize_y * 8; // advance y one line
    9708:	8d 89       	ldd	r24, Y+21	; 0x15
    970a:	48 e0       	ldi	r20, 0x08	; 8
    970c:	84 9f       	mul	r24, r20
    970e:	90 01       	movw	r18, r0
    9710:	11 24       	eor	r1, r1
    9712:	8e 85       	ldd	r24, Y+14	; 0x0e
    9714:	9f 85       	ldd	r25, Y+15	; 0x0f
    9716:	82 0f       	add	r24, r18
    9718:	93 1f       	adc	r25, r19
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1262

  } else { // Custom font

    if (c == '\n') {
      cursor_x = 0;
      cursor_y +=
    971a:	9f 87       	std	Y+15, r25	; 0x0f
    971c:	8e 87       	std	Y+14, r24	; 0x0e
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1286
            (uint8_t)pgm_read_byte(&glyph->xAdvance) * (int16_t)textsize_x;
      }
    }
  }
  return 1;
}
    971e:	81 e0       	ldi	r24, 0x01	; 1
    9720:	90 e0       	ldi	r25, 0x00	; 0
    9722:	df 91       	pop	r29
    9724:	cf 91       	pop	r28
    9726:	1f 91       	pop	r17
    9728:	0f 91       	pop	r16
    972a:	ff 90       	pop	r15
    972c:	ef 90       	pop	r14
    972e:	cf 90       	pop	r12
    9730:	af 90       	pop	r10
    9732:	9f 90       	pop	r9
    9734:	8f 90       	pop	r8
    9736:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1248
  if (!gfxFont) { // 'Classic' built-in font

    if (c == '\n') {              // Newline?
      cursor_x = 0;               // Reset x to zero,
      cursor_y += textsize_y * 8; // advance y one line
    } else if (c != '\r') {       // Ignore carriage returns
    9738:	6d 30       	cpi	r22, 0x0D	; 13
    973a:	89 f3       	breq	.-30     	; 0x971e <Adafruit_GFX::write(unsigned char)+0x40>
    973c:	cc 88       	ldd	r12, Y+20	; 0x14
    973e:	ad 88       	ldd	r10, Y+21	; 0x15
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1249
      if (wrap && ((cursor_x + textsize_x * 6) > _width)) { // Off right?
    9740:	8f 89       	ldd	r24, Y+23	; 0x17
    9742:	88 23       	and	r24, r24
    9744:	c1 f0       	breq	.+48     	; 0x9776 <Adafruit_GFX::write(unsigned char)+0x98>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1249 (discriminator 1)
    9746:	8c 85       	ldd	r24, Y+12	; 0x0c
    9748:	9d 85       	ldd	r25, Y+13	; 0x0d
    974a:	36 e0       	ldi	r19, 0x06	; 6
    974c:	c3 9e       	mul	r12, r19
    974e:	80 0d       	add	r24, r0
    9750:	91 1d       	adc	r25, r1
    9752:	11 24       	eor	r1, r1
    9754:	48 85       	ldd	r20, Y+8	; 0x08
    9756:	59 85       	ldd	r21, Y+9	; 0x09
    9758:	48 17       	cp	r20, r24
    975a:	59 07       	cpc	r21, r25
    975c:	64 f4       	brge	.+24     	; 0x9776 <Adafruit_GFX::write(unsigned char)+0x98>
    975e:	4e 85       	ldd	r20, Y+14	; 0x0e
    9760:	5f 85       	ldd	r21, Y+15	; 0x0f
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1250
        cursor_x = 0;                                       // Reset x to zero,
    9762:	1d 86       	std	Y+13, r1	; 0x0d
    9764:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1251
        cursor_y += textsize_y * 8; // advance y one line
    9766:	38 e0       	ldi	r19, 0x08	; 8
    9768:	a3 9e       	mul	r10, r19
    976a:	c0 01       	movw	r24, r0
    976c:	11 24       	eor	r1, r1
    976e:	84 0f       	add	r24, r20
    9770:	95 1f       	adc	r25, r21
    9772:	9f 87       	std	Y+15, r25	; 0x0f
    9774:	8e 87       	std	Y+14, r24	; 0x0e
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1253
      }
      drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
    9776:	ea 88       	ldd	r14, Y+18	; 0x12
    9778:	fb 88       	ldd	r15, Y+19	; 0x13
    977a:	08 89       	ldd	r16, Y+16	; 0x10
    977c:	19 89       	ldd	r17, Y+17	; 0x11
    977e:	4e 85       	ldd	r20, Y+14	; 0x0e
    9780:	5f 85       	ldd	r21, Y+15	; 0x0f
    9782:	6c 85       	ldd	r22, Y+12	; 0x0c
    9784:	7d 85       	ldd	r23, Y+13	; 0x0d
    9786:	ce 01       	movw	r24, r28
    9788:	0e 94 4a 49 	call	0x9294	; 0x9294 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1255
               textsize_y);
      cursor_x += textsize_x * 6; // Advance x one char
    978c:	2c 89       	ldd	r18, Y+20	; 0x14
    978e:	8c 85       	ldd	r24, Y+12	; 0x0c
    9790:	9d 85       	ldd	r25, Y+13	; 0x0d
    9792:	46 e0       	ldi	r20, 0x06	; 6
    9794:	24 9f       	mul	r18, r20
    9796:	80 0d       	add	r24, r0
    9798:	91 1d       	adc	r25, r1
    979a:	11 24       	eor	r1, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1280
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
          }
          drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
                   textsize_y);
        }
        cursor_x +=
    979c:	9d 87       	std	Y+13, r25	; 0x0d
    979e:	8c 87       	std	Y+12, r24	; 0x0c
    97a0:	be cf       	rjmp	.-132    	; 0x971e <Adafruit_GFX::write(unsigned char)+0x40>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1260
      cursor_x += textsize_x * 6; // Advance x one char
    }

  } else { // Custom font

    if (c == '\n') {
    97a2:	6a 30       	cpi	r22, 0x0A	; 10
    97a4:	69 f4       	brne	.+26     	; 0x97c0 <Adafruit_GFX::write(unsigned char)+0xe2>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1261
      cursor_x = 0;
    97a6:	1d 86       	std	Y+13, r1	; 0x0d
    97a8:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1263
      cursor_y +=
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    97aa:	fc 01       	movw	r30, r24
    97ac:	38 96       	adiw	r30, 0x08	; 8
    97ae:	e4 91       	lpm	r30, Z
    97b0:	2d 89       	ldd	r18, Y+21	; 0x15
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1262

  } else { // Custom font

    if (c == '\n') {
      cursor_x = 0;
      cursor_y +=
    97b2:	8e 85       	ldd	r24, Y+14	; 0x0e
    97b4:	9f 85       	ldd	r25, Y+15	; 0x0f
    97b6:	e2 9f       	mul	r30, r18
    97b8:	80 0d       	add	r24, r0
    97ba:	91 1d       	adc	r25, r1
    97bc:	11 24       	eor	r1, r1
    97be:	ad cf       	rjmp	.-166    	; 0x971a <Adafruit_GFX::write(unsigned char)+0x3c>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1264
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    } else if (c != '\r') {
    97c0:	6d 30       	cpi	r22, 0x0D	; 13
    97c2:	09 f4       	brne	.+2      	; 0x97c6 <Adafruit_GFX::write(unsigned char)+0xe8>
    97c4:	ac cf       	rjmp	.-168    	; 0x971e <Adafruit_GFX::write(unsigned char)+0x40>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1265
      uint8_t first = pgm_read_byte(&gfxFont->first);
    97c6:	fc 01       	movw	r30, r24
    97c8:	34 96       	adiw	r30, 0x04	; 4
    97ca:	34 91       	lpm	r19, Z
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1266
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
    97cc:	63 17       	cp	r22, r19
    97ce:	08 f4       	brcc	.+2      	; 0x97d2 <Adafruit_GFX::write(unsigned char)+0xf4>
    97d0:	a6 cf       	rjmp	.-180    	; 0x971e <Adafruit_GFX::write(unsigned char)+0x40>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1266 (discriminator 1)
    97d2:	32 96       	adiw	r30, 0x02	; 2
    97d4:	e4 91       	lpm	r30, Z
    97d6:	e6 17       	cp	r30, r22
    97d8:	08 f4       	brcc	.+2      	; 0x97dc <Adafruit_GFX::write(unsigned char)+0xfe>
    97da:	a1 cf       	rjmp	.-190    	; 0x971e <Adafruit_GFX::write(unsigned char)+0x40>
_Z18pgm_read_glyph_ptrPK7GFXfonth():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:67
#define pgm_read_pointer(addr) ((void *)pgm_read_word(addr))
#endif

inline GFXglyph *pgm_read_glyph_ptr(const GFXfont *gfxFont, uint8_t c) {
#ifdef __AVR__
  return &(((GFXglyph *)pgm_read_pointer(&gfxFont->glyph))[c]);
    97dc:	fc 01       	movw	r30, r24
    97de:	32 96       	adiw	r30, 0x02	; 2
    97e0:	85 90       	lpm	r8, Z+
    97e2:	94 90       	lpm	r9, Z
_ZN12Adafruit_GFX5writeEh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1267
      cursor_y +=
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    } else if (c != '\r') {
      uint8_t first = pgm_read_byte(&gfxFont->first);
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
        GFXglyph *glyph = pgm_read_glyph_ptr(gfxFont, c - first);
    97e4:	46 2f       	mov	r20, r22
    97e6:	43 1b       	sub	r20, r19
    97e8:	34 2f       	mov	r19, r20
_Z18pgm_read_glyph_ptrPK7GFXfonth():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:67
#define pgm_read_pointer(addr) ((void *)pgm_read_word(addr))
#endif

inline GFXglyph *pgm_read_glyph_ptr(const GFXfont *gfxFont, uint8_t c) {
#ifdef __AVR__
  return &(((GFXglyph *)pgm_read_pointer(&gfxFont->glyph))[c]);
    97ea:	47 e0       	ldi	r20, 0x07	; 7
    97ec:	34 9f       	mul	r19, r20
    97ee:	80 0c       	add	r8, r0
    97f0:	91 1c       	adc	r9, r1
    97f2:	11 24       	eor	r1, r1
_ZN12Adafruit_GFX5writeEh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1268
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    } else if (c != '\r') {
      uint8_t first = pgm_read_byte(&gfxFont->first);
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
        GFXglyph *glyph = pgm_read_glyph_ptr(gfxFont, c - first);
        uint8_t w = pgm_read_byte(&glyph->width),
    97f4:	f4 01       	movw	r30, r8
    97f6:	32 96       	adiw	r30, 0x02	; 2
    97f8:	34 91       	lpm	r19, Z
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1269
                h = pgm_read_byte(&glyph->height);
    97fa:	31 96       	adiw	r30, 0x01	; 1
    97fc:	e4 91       	lpm	r30, Z
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1270
        if ((w > 0) && (h > 0)) { // Is there an associated bitmap?
    97fe:	33 23       	and	r19, r19
    9800:	a9 f1       	breq	.+106    	; 0x986c <Adafruit_GFX::write(unsigned char)+0x18e>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1270 (discriminator 1)
    9802:	ee 23       	and	r30, r30
    9804:	99 f1       	breq	.+102    	; 0x986c <Adafruit_GFX::write(unsigned char)+0x18e>
    9806:	cc 88       	ldd	r12, Y+20	; 0x14
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1271
          int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
    9808:	f4 01       	movw	r30, r8
    980a:	35 96       	adiw	r30, 0x05	; 5
    980c:	e4 91       	lpm	r30, Z
    980e:	ad 88       	ldd	r10, Y+21	; 0x15
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1272
          if (wrap && ((cursor_x + textsize_x * (xo + w)) > _width)) {
    9810:	4f 89       	ldd	r20, Y+23	; 0x17
    9812:	44 23       	and	r20, r20
    9814:	01 f1       	breq	.+64     	; 0x9856 <Adafruit_GFX::write(unsigned char)+0x178>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1271 (discriminator 1)
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
        GFXglyph *glyph = pgm_read_glyph_ptr(gfxFont, c - first);
        uint8_t w = pgm_read_byte(&glyph->width),
                h = pgm_read_byte(&glyph->height);
        if ((w > 0) && (h > 0)) { // Is there an associated bitmap?
          int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
    9816:	0e 2e       	mov	r0, r30
    9818:	00 0c       	add	r0, r0
    981a:	ff 0b       	sbc	r31, r31
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1272 (discriminator 1)
          if (wrap && ((cursor_x + textsize_x * (xo + w)) > _width)) {
    981c:	e3 0f       	add	r30, r19
    981e:	f1 1d       	adc	r31, r1
    9820:	ce 9e       	mul	r12, r30
    9822:	a0 01       	movw	r20, r0
    9824:	cf 9e       	mul	r12, r31
    9826:	50 0d       	add	r21, r0
    9828:	11 24       	eor	r1, r1
    982a:	6c 85       	ldd	r22, Y+12	; 0x0c
    982c:	7d 85       	ldd	r23, Y+13	; 0x0d
    982e:	46 0f       	add	r20, r22
    9830:	57 1f       	adc	r21, r23
    9832:	68 85       	ldd	r22, Y+8	; 0x08
    9834:	79 85       	ldd	r23, Y+9	; 0x09
    9836:	64 17       	cp	r22, r20
    9838:	75 07       	cpc	r23, r21
    983a:	6c f4       	brge	.+26     	; 0x9856 <Adafruit_GFX::write(unsigned char)+0x178>
    983c:	4e 85       	ldd	r20, Y+14	; 0x0e
    983e:	5f 85       	ldd	r21, Y+15	; 0x0f
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1273
            cursor_x = 0;
    9840:	1d 86       	std	Y+13, r1	; 0x0d
    9842:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1275
            cursor_y += (int16_t)textsize_y *
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    9844:	fc 01       	movw	r30, r24
    9846:	38 96       	adiw	r30, 0x08	; 8
    9848:	e4 91       	lpm	r30, Z
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1274
                h = pgm_read_byte(&glyph->height);
        if ((w > 0) && (h > 0)) { // Is there an associated bitmap?
          int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
          if (wrap && ((cursor_x + textsize_x * (xo + w)) > _width)) {
            cursor_x = 0;
            cursor_y += (int16_t)textsize_y *
    984a:	ae 9e       	mul	r10, r30
    984c:	40 0d       	add	r20, r0
    984e:	51 1d       	adc	r21, r1
    9850:	11 24       	eor	r1, r1
    9852:	5f 87       	std	Y+15, r21	; 0x0f
    9854:	4e 87       	std	Y+14, r20	; 0x0e
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1277
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
          }
          drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
    9856:	ea 88       	ldd	r14, Y+18	; 0x12
    9858:	fb 88       	ldd	r15, Y+19	; 0x13
    985a:	08 89       	ldd	r16, Y+16	; 0x10
    985c:	19 89       	ldd	r17, Y+17	; 0x11
    985e:	4e 85       	ldd	r20, Y+14	; 0x0e
    9860:	5f 85       	ldd	r21, Y+15	; 0x0f
    9862:	6c 85       	ldd	r22, Y+12	; 0x0c
    9864:	7d 85       	ldd	r23, Y+13	; 0x0d
    9866:	ce 01       	movw	r24, r28
    9868:	0e 94 4a 49 	call	0x9294	; 0x9294 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1281
                   textsize_y);
        }
        cursor_x +=
            (uint8_t)pgm_read_byte(&glyph->xAdvance) * (int16_t)textsize_x;
    986c:	f4 01       	movw	r30, r8
    986e:	34 96       	adiw	r30, 0x04	; 4
    9870:	e4 91       	lpm	r30, Z
    9872:	2c 89       	ldd	r18, Y+20	; 0x14
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1280
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
          }
          drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
                   textsize_y);
        }
        cursor_x +=
    9874:	8c 85       	ldd	r24, Y+12	; 0x0c
    9876:	9d 85       	ldd	r25, Y+13	; 0x0d
    9878:	e2 9f       	mul	r30, r18
    987a:	80 0d       	add	r24, r0
    987c:	91 1d       	adc	r25, r1
    987e:	11 24       	eor	r1, r1
    9880:	8d cf       	rjmp	.-230    	; 0x979c <Adafruit_GFX::write(unsigned char)+0xbe>

00009882 <Adafruit_GFX::setTextSize(unsigned char, unsigned char)>:
_ZN12Adafruit_GFX11setTextSizeEhh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1306
    @param  s_x  Desired text width magnification level in X-axis. 1 is default
    @param  s_y  Desired text width magnification level in Y-axis. 1 is default
*/
/**************************************************************************/
void Adafruit_GFX::setTextSize(uint8_t s_x, uint8_t s_y) {
  textsize_x = (s_x > 0) ? s_x : 1;
    9882:	61 11       	cpse	r22, r1
    9884:	01 c0       	rjmp	.+2      	; 0x9888 <Adafruit_GFX::setTextSize(unsigned char, unsigned char)+0x6>
    9886:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1306 (discriminator 4)
    9888:	fc 01       	movw	r30, r24
    988a:	64 8b       	std	Z+20, r22	; 0x14
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1307 (discriminator 4)
  textsize_y = (s_y > 0) ? s_y : 1;
    988c:	41 11       	cpse	r20, r1
    988e:	01 c0       	rjmp	.+2      	; 0x9892 <Adafruit_GFX::setTextSize(unsigned char, unsigned char)+0x10>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1307
    9890:	41 e0       	ldi	r20, 0x01	; 1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1307 (discriminator 4)
    9892:	fc 01       	movw	r30, r24
    9894:	45 8b       	std	Z+21, r20	; 0x15
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1308 (discriminator 4)
}
    9896:	08 95       	ret

00009898 <Adafruit_GFX::setTextSize(unsigned char)>:
_ZN12Adafruit_GFX11setTextSizeEh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1295
    @brief   Set text 'magnification' size. Each increase in s makes 1 pixel
   that much bigger.
    @param  s  Desired text size. 1 is default 6x8, 2 is 12x16, 3 is 18x24, etc
*/
/**************************************************************************/
void Adafruit_GFX::setTextSize(uint8_t s) { setTextSize(s, s); }
    9898:	46 2f       	mov	r20, r22
    989a:	0c 94 41 4c 	jmp	0x9882	; 0x9882 <Adafruit_GFX::setTextSize(unsigned char, unsigned char)>

0000989e <SPIClass::endTransaction()>:
_ZN8SPIClass14endTransactionEv():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:272
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 0;
    #endif

    if (interruptMode > 0) {
    989e:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <SPIClass::interruptMode>
    98a2:	88 23       	and	r24, r24
    98a4:	61 f0       	breq	.+24     	; 0x98be <SPIClass::endTransaction()+0x20>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:274
      #ifdef SPI_AVR_EIMSK
      uint8_t sreg = SREG;
    98a6:	9f b7       	in	r25, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:276
      #endif
      noInterrupts();
    98a8:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:278
      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
    98aa:	20 91 c4 09 	lds	r18, 0x09C4	; 0x8009c4 <SPIClass::interruptMode>
    98ae:	80 91 c2 09 	lds	r24, 0x09C2	; 0x8009c2 <SPIClass::interruptSave>
    98b2:	21 30       	cpi	r18, 0x01	; 1
    98b4:	19 f4       	brne	.+6      	; 0x98bc <SPIClass::endTransaction()+0x1e>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:279
        SPI_AVR_EIMSK = interruptSave;
    98b6:	8d bb       	out	0x1d, r24	; 29
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:280
        SREG = sreg;
    98b8:	9f bf       	out	0x3f, r25	; 63
    98ba:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:284
      } else
      #endif
      {
        SREG = interruptSave;
    98bc:	8f bf       	out	0x3f, r24	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:287
      }
    }
  }
    98be:	08 95       	ret

000098c0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>:
_ZN16Adafruit_SSD13069drawPixelEiij():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:980
/*!
    @brief  Get base address of display buffer for direct reading or writing.
    @return Pointer to an unsigned 8-bit array, column-major, columns padded
            to full byte boundary if needed.
*/
uint8_t *Adafruit_SSD1306::getBuffer(void) { return buffer; }
    98c0:	fc 01       	movw	r30, r24
    98c2:	77 fd       	sbrc	r23, 7
    98c4:	64 c0       	rjmp	.+200    	; 0x998e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    98c6:	80 85       	ldd	r24, Z+8	; 0x08
    98c8:	91 85       	ldd	r25, Z+9	; 0x09
    98ca:	68 17       	cp	r22, r24
    98cc:	79 07       	cpc	r23, r25
    98ce:	0c f0       	brlt	.+2      	; 0x98d2 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x12>
    98d0:	5e c0       	rjmp	.+188    	; 0x998e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    98d2:	57 fd       	sbrc	r21, 7
    98d4:	5c c0       	rjmp	.+184    	; 0x998e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    98d6:	82 85       	ldd	r24, Z+10	; 0x0a
    98d8:	93 85       	ldd	r25, Z+11	; 0x0b
    98da:	48 17       	cp	r20, r24
    98dc:	59 07       	cpc	r21, r25
    98de:	0c f0       	brlt	.+2      	; 0x98e2 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x22>
    98e0:	56 c0       	rjmp	.+172    	; 0x998e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    98e2:	86 89       	ldd	r24, Z+22	; 0x16
    98e4:	82 30       	cpi	r24, 0x02	; 2
    98e6:	b1 f0       	breq	.+44     	; 0x9914 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x54>
    98e8:	83 30       	cpi	r24, 0x03	; 3
    98ea:	29 f1       	breq	.+74     	; 0x9936 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x76>
    98ec:	81 30       	cpi	r24, 0x01	; 1
    98ee:	41 f4       	brne	.+16     	; 0x9900 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x40>
    98f0:	84 81       	ldd	r24, Z+4	; 0x04
    98f2:	95 81       	ldd	r25, Z+5	; 0x05
    98f4:	84 1b       	sub	r24, r20
    98f6:	95 0b       	sbc	r25, r21
    98f8:	ab 01       	movw	r20, r22
    98fa:	bc 01       	movw	r22, r24
    98fc:	61 50       	subi	r22, 0x01	; 1
    98fe:	71 09       	sbc	r23, r1
    9900:	21 30       	cpi	r18, 0x01	; 1
    9902:	31 05       	cpc	r19, r1
    9904:	09 f1       	breq	.+66     	; 0x9948 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x88>
    9906:	08 f4       	brcc	.+2      	; 0x990a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x4a>
    9908:	43 c0       	rjmp	.+134    	; 0x9990 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xd0>
    990a:	22 30       	cpi	r18, 0x02	; 2
    990c:	31 05       	cpc	r19, r1
    990e:	09 f4       	brne	.+2      	; 0x9912 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x52>
    9910:	63 c0       	rjmp	.+198    	; 0x99d8 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x118>
    9912:	08 95       	ret
    9914:	84 81       	ldd	r24, Z+4	; 0x04
    9916:	95 81       	ldd	r25, Z+5	; 0x05
    9918:	dc 01       	movw	r26, r24
    991a:	a6 1b       	sub	r26, r22
    991c:	b7 0b       	sbc	r27, r23
    991e:	bd 01       	movw	r22, r26
    9920:	61 50       	subi	r22, 0x01	; 1
    9922:	71 09       	sbc	r23, r1
    9924:	86 81       	ldd	r24, Z+6	; 0x06
    9926:	97 81       	ldd	r25, Z+7	; 0x07
    9928:	dc 01       	movw	r26, r24
    992a:	a4 1b       	sub	r26, r20
    992c:	b5 0b       	sbc	r27, r21
    992e:	ad 01       	movw	r20, r26
    9930:	41 50       	subi	r20, 0x01	; 1
    9932:	51 09       	sbc	r21, r1
    9934:	e5 cf       	rjmp	.-54     	; 0x9900 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x40>
    9936:	86 81       	ldd	r24, Z+6	; 0x06
    9938:	97 81       	ldd	r25, Z+7	; 0x07
    993a:	86 1b       	sub	r24, r22
    993c:	97 0b       	sbc	r25, r23
    993e:	ba 01       	movw	r22, r20
    9940:	ac 01       	movw	r20, r24
    9942:	41 50       	subi	r20, 0x01	; 1
    9944:	51 09       	sbc	r21, r1
    9946:	dc cf       	rjmp	.-72     	; 0x9900 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x40>
    9948:	ca 01       	movw	r24, r20
    994a:	57 fd       	sbrc	r21, 7
    994c:	07 96       	adiw	r24, 0x07	; 7
    994e:	a3 e0       	ldi	r26, 0x03	; 3
    9950:	95 95       	asr	r25
    9952:	87 95       	ror	r24
    9954:	aa 95       	dec	r26
    9956:	e1 f7       	brne	.-8      	; 0x9950 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x90>
    9958:	a4 81       	ldd	r26, Z+4	; 0x04
    995a:	b5 81       	ldd	r27, Z+5	; 0x05
    995c:	8a 9f       	mul	r24, r26
    995e:	90 01       	movw	r18, r0
    9960:	8b 9f       	mul	r24, r27
    9962:	30 0d       	add	r19, r0
    9964:	9a 9f       	mul	r25, r26
    9966:	30 0d       	add	r19, r0
    9968:	11 24       	eor	r1, r1
    996a:	62 0f       	add	r22, r18
    996c:	73 1f       	adc	r23, r19
    996e:	07 8c       	ldd	r0, Z+31	; 0x1f
    9970:	f0 a1       	ldd	r31, Z+32	; 0x20
    9972:	e0 2d       	mov	r30, r0
    9974:	e6 0f       	add	r30, r22
    9976:	f7 1f       	adc	r31, r23
    9978:	47 70       	andi	r20, 0x07	; 7
    997a:	55 27       	eor	r21, r21
    997c:	21 e0       	ldi	r18, 0x01	; 1
    997e:	30 e0       	ldi	r19, 0x00	; 0
    9980:	01 c0       	rjmp	.+2      	; 0x9984 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xc4>
    9982:	22 0f       	add	r18, r18
    9984:	4a 95       	dec	r20
    9986:	ea f7       	brpl	.-6      	; 0x9982 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xc2>
    9988:	80 81       	ld	r24, Z
    998a:	82 2b       	or	r24, r18
    998c:	80 83       	st	Z, r24
    998e:	08 95       	ret
    9990:	ca 01       	movw	r24, r20
    9992:	57 fd       	sbrc	r21, 7
    9994:	07 96       	adiw	r24, 0x07	; 7
    9996:	33 e0       	ldi	r19, 0x03	; 3
    9998:	95 95       	asr	r25
    999a:	87 95       	ror	r24
    999c:	3a 95       	dec	r19
    999e:	e1 f7       	brne	.-8      	; 0x9998 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xd8>
    99a0:	a4 81       	ldd	r26, Z+4	; 0x04
    99a2:	b5 81       	ldd	r27, Z+5	; 0x05
    99a4:	8a 9f       	mul	r24, r26
    99a6:	90 01       	movw	r18, r0
    99a8:	8b 9f       	mul	r24, r27
    99aa:	30 0d       	add	r19, r0
    99ac:	9a 9f       	mul	r25, r26
    99ae:	30 0d       	add	r19, r0
    99b0:	11 24       	eor	r1, r1
    99b2:	62 0f       	add	r22, r18
    99b4:	73 1f       	adc	r23, r19
    99b6:	07 8c       	ldd	r0, Z+31	; 0x1f
    99b8:	f0 a1       	ldd	r31, Z+32	; 0x20
    99ba:	e0 2d       	mov	r30, r0
    99bc:	e6 0f       	add	r30, r22
    99be:	f7 1f       	adc	r31, r23
    99c0:	47 70       	andi	r20, 0x07	; 7
    99c2:	55 27       	eor	r21, r21
    99c4:	81 e0       	ldi	r24, 0x01	; 1
    99c6:	90 e0       	ldi	r25, 0x00	; 0
    99c8:	01 c0       	rjmp	.+2      	; 0x99cc <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x10c>
    99ca:	88 0f       	add	r24, r24
    99cc:	4a 95       	dec	r20
    99ce:	ea f7       	brpl	.-6      	; 0x99ca <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x10a>
    99d0:	80 95       	com	r24
    99d2:	90 81       	ld	r25, Z
    99d4:	89 23       	and	r24, r25
    99d6:	da cf       	rjmp	.-76     	; 0x998c <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xcc>
    99d8:	ca 01       	movw	r24, r20
    99da:	57 fd       	sbrc	r21, 7
    99dc:	07 96       	adiw	r24, 0x07	; 7
    99de:	23 e0       	ldi	r18, 0x03	; 3
    99e0:	95 95       	asr	r25
    99e2:	87 95       	ror	r24
    99e4:	2a 95       	dec	r18
    99e6:	e1 f7       	brne	.-8      	; 0x99e0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x120>
    99e8:	a4 81       	ldd	r26, Z+4	; 0x04
    99ea:	b5 81       	ldd	r27, Z+5	; 0x05
    99ec:	8a 9f       	mul	r24, r26
    99ee:	90 01       	movw	r18, r0
    99f0:	8b 9f       	mul	r24, r27
    99f2:	30 0d       	add	r19, r0
    99f4:	9a 9f       	mul	r25, r26
    99f6:	30 0d       	add	r19, r0
    99f8:	11 24       	eor	r1, r1
    99fa:	62 0f       	add	r22, r18
    99fc:	73 1f       	adc	r23, r19
    99fe:	07 8c       	ldd	r0, Z+31	; 0x1f
    9a00:	f0 a1       	ldd	r31, Z+32	; 0x20
    9a02:	e0 2d       	mov	r30, r0
    9a04:	e6 0f       	add	r30, r22
    9a06:	f7 1f       	adc	r31, r23
    9a08:	47 70       	andi	r20, 0x07	; 7
    9a0a:	55 27       	eor	r21, r21
    9a0c:	21 e0       	ldi	r18, 0x01	; 1
    9a0e:	30 e0       	ldi	r19, 0x00	; 0
    9a10:	01 c0       	rjmp	.+2      	; 0x9a14 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x154>
    9a12:	22 0f       	add	r18, r18
    9a14:	4a 95       	dec	r20
    9a16:	ea f7       	brpl	.-6      	; 0x9a12 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x152>
    9a18:	80 81       	ld	r24, Z
    9a1a:	82 27       	eor	r24, r18
    9a1c:	b7 cf       	rjmp	.-146    	; 0x998c <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xcc>

00009a1e <SPIClass::beginTransaction(SPISettings)>:
_ZN8SPIClass16beginTransactionE11SPISettings():
    9a1e:	20 91 c4 09 	lds	r18, 0x09C4	; 0x8009c4 <SPIClass::interruptMode>
    9a22:	22 23       	and	r18, r18
    9a24:	81 f0       	breq	.+32     	; 0x9a46 <SPIClass::beginTransaction(SPISettings)+0x28>
    9a26:	3f b7       	in	r19, 0x3f	; 63
    9a28:	f8 94       	cli
    9a2a:	20 91 c4 09 	lds	r18, 0x09C4	; 0x8009c4 <SPIClass::interruptMode>
    9a2e:	21 30       	cpi	r18, 0x01	; 1
    9a30:	69 f4       	brne	.+26     	; 0x9a4c <SPIClass::beginTransaction(SPISettings)+0x2e>
    9a32:	2d b3       	in	r18, 0x1d	; 29
    9a34:	20 93 c2 09 	sts	0x09C2, r18	; 0x8009c2 <SPIClass::interruptSave>
    9a38:	4d b3       	in	r20, 0x1d	; 29
    9a3a:	20 91 c3 09 	lds	r18, 0x09C3	; 0x8009c3 <SPIClass::interruptMask>
    9a3e:	20 95       	com	r18
    9a40:	24 23       	and	r18, r20
    9a42:	2d bb       	out	0x1d, r18	; 29
    9a44:	3f bf       	out	0x3f, r19	; 63
    9a46:	8c bd       	out	0x2c, r24	; 44
    9a48:	9d bd       	out	0x2d, r25	; 45
    9a4a:	08 95       	ret
    9a4c:	30 93 c2 09 	sts	0x09C2, r19	; 0x8009c2 <SPIClass::interruptSave>
    9a50:	fa cf       	rjmp	.-12     	; 0x9a46 <SPIClass::beginTransaction(SPISettings)+0x28>

00009a52 <SPIClass::transfer(unsigned char)>:
_ZN8SPIClass8transferEh():
    9a52:	8e bd       	out	0x2e, r24	; 46
    9a54:	00 00       	nop
    9a56:	0d b4       	in	r0, 0x2d	; 45
    9a58:	07 fe       	sbrs	r0, 7
    9a5a:	fd cf       	rjmp	.-6      	; 0x9a56 <SPIClass::transfer(unsigned char)+0x4>
    9a5c:	8e b5       	in	r24, 0x2e	; 46
    9a5e:	08 95       	ret

00009a60 <Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)>:
_ZN16Adafruit_SSD1306C2EhhP7TwoWireamm():
    9a60:	4f 92       	push	r4
    9a62:	5f 92       	push	r5
    9a64:	6f 92       	push	r6
    9a66:	7f 92       	push	r7
    9a68:	8f 92       	push	r8
    9a6a:	9f 92       	push	r9
    9a6c:	af 92       	push	r10
    9a6e:	bf 92       	push	r11
    9a70:	cf 92       	push	r12
    9a72:	df 92       	push	r13
    9a74:	ef 92       	push	r14
    9a76:	ff 92       	push	r15
    9a78:	0f 93       	push	r16
    9a7a:	cf 93       	push	r28
    9a7c:	df 93       	push	r29
    9a7e:	cd b7       	in	r28, 0x3d	; 61
    9a80:	de b7       	in	r29, 0x3e	; 62
    9a82:	3c 01       	movw	r6, r24
    9a84:	29 01       	movw	r4, r18
    9a86:	50 e0       	ldi	r21, 0x00	; 0
    9a88:	70 e0       	ldi	r23, 0x00	; 0
    9a8a:	0e 94 34 44 	call	0x8868	; 0x8868 <Adafruit_GFX::Adafruit_GFX(int, int)>
    9a8e:	80 e5       	ldi	r24, 0x50	; 80
    9a90:	92 e0       	ldi	r25, 0x02	; 2
    9a92:	f3 01       	movw	r30, r6
    9a94:	91 83       	std	Z+1, r25	; 0x01
    9a96:	80 83       	st	Z, r24
    9a98:	14 8e       	std	Z+28, r1	; 0x1c
    9a9a:	13 8e       	std	Z+27, r1	; 0x1b
    9a9c:	41 14       	cp	r4, r1
    9a9e:	51 04       	cpc	r5, r1
    9aa0:	21 f4       	brne	.+8      	; 0x9aaa <Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)+0x4a>
    9aa2:	86 ec       	ldi	r24, 0xC6	; 198
    9aa4:	48 2e       	mov	r4, r24
    9aa6:	89 e0       	ldi	r24, 0x09	; 9
    9aa8:	58 2e       	mov	r5, r24
    9aaa:	f3 01       	movw	r30, r6
    9aac:	56 8e       	std	Z+30, r5	; 0x1e
    9aae:	45 8e       	std	Z+29, r4	; 0x1d
    9ab0:	10 a2       	std	Z+32, r1	; 0x20
    9ab2:	17 8e       	std	Z+31, r1	; 0x1f
    9ab4:	8f ef       	ldi	r24, 0xFF	; 255
    9ab6:	84 a3       	std	Z+36, r24	; 0x24
    9ab8:	85 a3       	std	Z+37, r24	; 0x25
    9aba:	86 a3       	std	Z+38, r24	; 0x26
    9abc:	87 a3       	std	Z+39, r24	; 0x27
    9abe:	00 a7       	std	Z+40, r16	; 0x28
    9ac0:	c5 aa       	std	Z+53, r12	; 0x35
    9ac2:	d6 aa       	std	Z+54, r13	; 0x36
    9ac4:	e7 aa       	std	Z+55, r14	; 0x37
    9ac6:	f0 ae       	std	Z+56, r15	; 0x38
    9ac8:	81 ae       	std	Z+57, r8	; 0x39
    9aca:	92 ae       	std	Z+58, r9	; 0x3a
    9acc:	a3 ae       	std	Z+59, r10	; 0x3b
    9ace:	b4 ae       	std	Z+60, r11	; 0x3c
_ZN11SPISettings17init_AlwaysInlineEmhh():
    9ad0:	80 e5       	ldi	r24, 0x50	; 80
    9ad2:	86 af       	std	Z+62, r24	; 0x3e
    9ad4:	17 ae       	std	Z+63, r1	; 0x3f
_ZN16Adafruit_SSD1306C2EhhP7TwoWireamm():
    9ad6:	df 91       	pop	r29
    9ad8:	cf 91       	pop	r28
    9ada:	0f 91       	pop	r16
    9adc:	ff 90       	pop	r15
    9ade:	ef 90       	pop	r14
    9ae0:	df 90       	pop	r13
    9ae2:	cf 90       	pop	r12
    9ae4:	bf 90       	pop	r11
    9ae6:	af 90       	pop	r10
    9ae8:	9f 90       	pop	r9
    9aea:	8f 90       	pop	r8
    9aec:	7f 90       	pop	r7
    9aee:	6f 90       	pop	r6
    9af0:	5f 90       	pop	r5
    9af2:	4f 90       	pop	r4
    9af4:	08 95       	ret

00009af6 <Adafruit_SSD1306::~Adafruit_SSD1306()>:
_ZN16Adafruit_SSD1306D2Ev():
    9af6:	20 e5       	ldi	r18, 0x50	; 80
    9af8:	32 e0       	ldi	r19, 0x02	; 2
    9afa:	fc 01       	movw	r30, r24
    9afc:	31 83       	std	Z+1, r19	; 0x01
    9afe:	20 83       	st	Z, r18
    9b00:	87 8d       	ldd	r24, Z+31	; 0x1f
    9b02:	90 a1       	ldd	r25, Z+32	; 0x20
    9b04:	00 97       	sbiw	r24, 0x00	; 0
    9b06:	11 f0       	breq	.+4      	; 0x9b0c <Adafruit_SSD1306::~Adafruit_SSD1306()+0x16>
    9b08:	0c 94 00 76 	jmp	0xec00	; 0xec00 <free>
    9b0c:	08 95       	ret

00009b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>:
_ZN16Adafruit_SSD130616ssd1306_command1Eh():
    9b0e:	1f 93       	push	r17
    9b10:	cf 93       	push	r28
    9b12:	df 93       	push	r29
    9b14:	ec 01       	movw	r28, r24
    9b16:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9b18:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9b1a:	00 97       	sbiw	r24, 0x00	; 0
    9b1c:	11 f1       	breq	.+68     	; 0x9b62 <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x54>
    9b1e:	16 2f       	mov	r17, r22
    9b20:	69 a1       	ldd	r22, Y+33	; 0x21
    9b22:	06 2e       	mov	r0, r22
    9b24:	00 0c       	add	r0, r0
    9b26:	77 0b       	sbc	r23, r23
    9b28:	0e 94 64 54 	call	0xa8c8	; 0xa8c8 <TwoWire::beginTransmission(int)>
    9b2c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9b2e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9b30:	dc 01       	movw	r26, r24
    9b32:	ed 91       	ld	r30, X+
    9b34:	fc 91       	ld	r31, X
    9b36:	01 90       	ld	r0, Z+
    9b38:	f0 81       	ld	r31, Z
    9b3a:	e0 2d       	mov	r30, r0
    9b3c:	60 e0       	ldi	r22, 0x00	; 0
    9b3e:	09 95       	icall
    9b40:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9b42:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9b44:	dc 01       	movw	r26, r24
    9b46:	ed 91       	ld	r30, X+
    9b48:	fc 91       	ld	r31, X
    9b4a:	01 90       	ld	r0, Z+
    9b4c:	f0 81       	ld	r31, Z
    9b4e:	e0 2d       	mov	r30, r0
    9b50:	61 2f       	mov	r22, r17
    9b52:	09 95       	icall
    9b54:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9b56:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9b58:	df 91       	pop	r29
    9b5a:	cf 91       	pop	r28
    9b5c:	1f 91       	pop	r17
    9b5e:	0c 94 df 54 	jmp	0xa9be	; 0xa9be <TwoWire::endTransmission()>
    9b62:	ad a5       	ldd	r26, Y+45	; 0x2d
    9b64:	be a5       	ldd	r27, Y+46	; 0x2e
    9b66:	9c 91       	ld	r25, X
    9b68:	8b a9       	ldd	r24, Y+51	; 0x33
    9b6a:	80 95       	com	r24
    9b6c:	89 23       	and	r24, r25
    9b6e:	8c 93       	st	X, r24
_ZN16Adafruit_SSD13068SPIwriteEh():
    9b70:	8b 8d       	ldd	r24, Y+27	; 0x1b
    9b72:	9c 8d       	ldd	r25, Y+28	; 0x1c
    9b74:	89 2b       	or	r24, r25
    9b76:	31 f0       	breq	.+12     	; 0x9b84 <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x76>
    9b78:	86 2f       	mov	r24, r22
_ZN16Adafruit_SSD130616ssd1306_command1Eh():
    9b7a:	df 91       	pop	r29
    9b7c:	cf 91       	pop	r28
    9b7e:	1f 91       	pop	r17
_ZN16Adafruit_SSD13068SPIwriteEh():
    9b80:	0c 94 29 4d 	jmp	0x9a52	; 0x9a52 <SPIClass::transfer(unsigned char)>
    9b84:	28 e0       	ldi	r18, 0x08	; 8
    9b86:	30 e0       	ldi	r19, 0x00	; 0
    9b88:	80 e8       	ldi	r24, 0x80	; 128
    9b8a:	a9 a5       	ldd	r26, Y+41	; 0x29
    9b8c:	ba a5       	ldd	r27, Y+42	; 0x2a
    9b8e:	99 a9       	ldd	r25, Y+49	; 0x31
    9b90:	46 2f       	mov	r20, r22
    9b92:	48 23       	and	r20, r24
    9b94:	c1 f0       	breq	.+48     	; 0x9bc6 <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0xb8>
    9b96:	4c 91       	ld	r20, X
    9b98:	94 2b       	or	r25, r20
    9b9a:	9c 93       	st	X, r25
    9b9c:	ab a5       	ldd	r26, Y+43	; 0x2b
    9b9e:	bc a5       	ldd	r27, Y+44	; 0x2c
    9ba0:	9c 91       	ld	r25, X
    9ba2:	4a a9       	ldd	r20, Y+50	; 0x32
    9ba4:	94 2b       	or	r25, r20
    9ba6:	9c 93       	st	X, r25
    9ba8:	ab a5       	ldd	r26, Y+43	; 0x2b
    9baa:	bc a5       	ldd	r27, Y+44	; 0x2c
    9bac:	4c 91       	ld	r20, X
    9bae:	9a a9       	ldd	r25, Y+50	; 0x32
    9bb0:	90 95       	com	r25
    9bb2:	94 23       	and	r25, r20
    9bb4:	9c 93       	st	X, r25
    9bb6:	86 95       	lsr	r24
    9bb8:	21 50       	subi	r18, 0x01	; 1
    9bba:	31 09       	sbc	r19, r1
    9bbc:	31 f7       	brne	.-52     	; 0x9b8a <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x7c>
_ZN16Adafruit_SSD130616ssd1306_command1Eh():
    9bbe:	df 91       	pop	r29
    9bc0:	cf 91       	pop	r28
    9bc2:	1f 91       	pop	r17
    9bc4:	08 95       	ret
_ZN16Adafruit_SSD13068SPIwriteEh():
    9bc6:	4c 91       	ld	r20, X
    9bc8:	90 95       	com	r25
    9bca:	94 23       	and	r25, r20
    9bcc:	e6 cf       	rjmp	.-52     	; 0x9b9a <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x8c>

00009bce <Adafruit_SSD1306::invertDisplay(bool)>:
_ZN16Adafruit_SSD130613invertDisplayEb():
    9bce:	1f 93       	push	r17
    9bd0:	cf 93       	push	r28
    9bd2:	df 93       	push	r29
    9bd4:	ec 01       	movw	r28, r24
    9bd6:	16 2f       	mov	r17, r22
    9bd8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9bda:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9bdc:	00 97       	sbiw	r24, 0x00	; 0
    9bde:	c9 f0       	breq	.+50     	; 0x9c12 <Adafruit_SSD1306::invertDisplay(bool)+0x44>
    9be0:	4d a9       	ldd	r20, Y+53	; 0x35
    9be2:	5e a9       	ldd	r21, Y+54	; 0x36
    9be4:	6f a9       	ldd	r22, Y+55	; 0x37
    9be6:	78 ad       	ldd	r23, Y+56	; 0x38
    9be8:	0e 94 56 54 	call	0xa8ac	; 0xa8ac <TwoWire::setClock(unsigned long)>
    9bec:	66 ea       	ldi	r22, 0xA6	; 166
    9bee:	11 11       	cpse	r17, r1
    9bf0:	67 ea       	ldi	r22, 0xA7	; 167
    9bf2:	ce 01       	movw	r24, r28
    9bf4:	0e 94 87 4d 	call	0x9b0e	; 0x9b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9bf8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9bfa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9bfc:	00 97       	sbiw	r24, 0x00	; 0
    9bfe:	c9 f0       	breq	.+50     	; 0x9c32 <Adafruit_SSD1306::invertDisplay(bool)+0x64>
    9c00:	49 ad       	ldd	r20, Y+57	; 0x39
    9c02:	5a ad       	ldd	r21, Y+58	; 0x3a
    9c04:	6b ad       	ldd	r22, Y+59	; 0x3b
    9c06:	7c ad       	ldd	r23, Y+60	; 0x3c
    9c08:	df 91       	pop	r29
    9c0a:	cf 91       	pop	r28
    9c0c:	1f 91       	pop	r17
    9c0e:	0c 94 56 54 	jmp	0xa8ac	; 0xa8ac <TwoWire::setClock(unsigned long)>
    9c12:	8b 8d       	ldd	r24, Y+27	; 0x1b
    9c14:	9c 8d       	ldd	r25, Y+28	; 0x1c
    9c16:	89 2b       	or	r24, r25
    9c18:	21 f0       	breq	.+8      	; 0x9c22 <Adafruit_SSD1306::invertDisplay(bool)+0x54>
    9c1a:	8e ad       	ldd	r24, Y+62	; 0x3e
    9c1c:	9f ad       	ldd	r25, Y+63	; 0x3f
    9c1e:	0e 94 0f 4d 	call	0x9a1e	; 0x9a1e <SPIClass::beginTransaction(SPISettings)>
    9c22:	ef a5       	ldd	r30, Y+47	; 0x2f
    9c24:	f8 a9       	ldd	r31, Y+48	; 0x30
    9c26:	90 81       	ld	r25, Z
    9c28:	8c a9       	ldd	r24, Y+52	; 0x34
    9c2a:	80 95       	com	r24
    9c2c:	89 23       	and	r24, r25
    9c2e:	80 83       	st	Z, r24
    9c30:	dd cf       	rjmp	.-70     	; 0x9bec <Adafruit_SSD1306::invertDisplay(bool)+0x1e>
    9c32:	ef a5       	ldd	r30, Y+47	; 0x2f
    9c34:	f8 a9       	ldd	r31, Y+48	; 0x30
    9c36:	80 81       	ld	r24, Z
    9c38:	9c a9       	ldd	r25, Y+52	; 0x34
    9c3a:	89 2b       	or	r24, r25
    9c3c:	80 83       	st	Z, r24
    9c3e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    9c40:	9c 8d       	ldd	r25, Y+28	; 0x1c
    9c42:	89 2b       	or	r24, r25
    9c44:	29 f0       	breq	.+10     	; 0x9c50 <Adafruit_SSD1306::invertDisplay(bool)+0x82>
    9c46:	df 91       	pop	r29
    9c48:	cf 91       	pop	r28
    9c4a:	1f 91       	pop	r17
    9c4c:	0c 94 4f 4c 	jmp	0x989e	; 0x989e <SPIClass::endTransaction()>
    9c50:	df 91       	pop	r29
    9c52:	cf 91       	pop	r28
    9c54:	1f 91       	pop	r17
    9c56:	08 95       	ret

00009c58 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>:
_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh():
    9c58:	cf 92       	push	r12
    9c5a:	df 92       	push	r13
    9c5c:	ef 92       	push	r14
    9c5e:	ff 92       	push	r15
    9c60:	1f 93       	push	r17
    9c62:	cf 93       	push	r28
    9c64:	df 93       	push	r29
    9c66:	ec 01       	movw	r28, r24
    9c68:	6b 01       	movw	r12, r22
    9c6a:	14 2f       	mov	r17, r20
    9c6c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9c6e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9c70:	00 97       	sbiw	r24, 0x00	; 0
    9c72:	09 f4       	brne	.+2      	; 0x9c76 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0x1e>
    9c74:	4f c0       	rjmp	.+158    	; 0x9d14 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xbc>
    9c76:	69 a1       	ldd	r22, Y+33	; 0x21
    9c78:	06 2e       	mov	r0, r22
    9c7a:	00 0c       	add	r0, r0
    9c7c:	77 0b       	sbc	r23, r23
    9c7e:	0e 94 64 54 	call	0xa8c8	; 0xa8c8 <TwoWire::beginTransmission(int)>
    9c82:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9c84:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9c86:	dc 01       	movw	r26, r24
    9c88:	ed 91       	ld	r30, X+
    9c8a:	fc 91       	ld	r31, X
    9c8c:	01 90       	ld	r0, Z+
    9c8e:	f0 81       	ld	r31, Z
    9c90:	e0 2d       	mov	r30, r0
    9c92:	60 e0       	ldi	r22, 0x00	; 0
    9c94:	09 95       	icall
    9c96:	76 01       	movw	r14, r12
    9c98:	cc 24       	eor	r12, r12
    9c9a:	c3 94       	inc	r12
    9c9c:	d1 2c       	mov	r13, r1
    9c9e:	11 50       	subi	r17, 0x01	; 1
    9ca0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9ca2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9ca4:	1f 3f       	cpi	r17, 0xFF	; 255
    9ca6:	69 f1       	breq	.+90     	; 0x9d02 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xaa>
    9ca8:	b0 e2       	ldi	r27, 0x20	; 32
    9caa:	cb 16       	cp	r12, r27
    9cac:	d1 04       	cpc	r13, r1
    9cae:	b8 f0       	brcs	.+46     	; 0x9cde <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0x86>
    9cb0:	0e 94 df 54 	call	0xa9be	; 0xa9be <TwoWire::endTransmission()>
    9cb4:	69 a1       	ldd	r22, Y+33	; 0x21
    9cb6:	06 2e       	mov	r0, r22
    9cb8:	00 0c       	add	r0, r0
    9cba:	77 0b       	sbc	r23, r23
    9cbc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9cbe:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9cc0:	0e 94 64 54 	call	0xa8c8	; 0xa8c8 <TwoWire::beginTransmission(int)>
    9cc4:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9cc6:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9cc8:	dc 01       	movw	r26, r24
    9cca:	ed 91       	ld	r30, X+
    9ccc:	fc 91       	ld	r31, X
    9cce:	01 90       	ld	r0, Z+
    9cd0:	f0 81       	ld	r31, Z
    9cd2:	e0 2d       	mov	r30, r0
    9cd4:	60 e0       	ldi	r22, 0x00	; 0
    9cd6:	09 95       	icall
    9cd8:	cc 24       	eor	r12, r12
    9cda:	c3 94       	inc	r12
    9cdc:	d1 2c       	mov	r13, r1
    9cde:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9ce0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9ce2:	f7 01       	movw	r30, r14
    9ce4:	64 91       	lpm	r22, Z
    9ce6:	dc 01       	movw	r26, r24
    9ce8:	ed 91       	ld	r30, X+
    9cea:	fc 91       	ld	r31, X
    9cec:	01 90       	ld	r0, Z+
    9cee:	f0 81       	ld	r31, Z
    9cf0:	e0 2d       	mov	r30, r0
    9cf2:	09 95       	icall
    9cf4:	bf ef       	ldi	r27, 0xFF	; 255
    9cf6:	cb 1a       	sub	r12, r27
    9cf8:	db 0a       	sbc	r13, r27
    9cfa:	ef ef       	ldi	r30, 0xFF	; 255
    9cfc:	ee 1a       	sub	r14, r30
    9cfe:	fe 0a       	sbc	r15, r30
    9d00:	ce cf       	rjmp	.-100    	; 0x9c9e <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0x46>
    9d02:	df 91       	pop	r29
    9d04:	cf 91       	pop	r28
    9d06:	1f 91       	pop	r17
    9d08:	ff 90       	pop	r15
    9d0a:	ef 90       	pop	r14
    9d0c:	df 90       	pop	r13
    9d0e:	cf 90       	pop	r12
    9d10:	0c 94 df 54 	jmp	0xa9be	; 0xa9be <TwoWire::endTransmission()>
    9d14:	ed a5       	ldd	r30, Y+45	; 0x2d
    9d16:	fe a5       	ldd	r31, Y+46	; 0x2e
    9d18:	90 81       	ld	r25, Z
    9d1a:	8b a9       	ldd	r24, Y+51	; 0x33
    9d1c:	80 95       	com	r24
    9d1e:	89 23       	and	r24, r25
    9d20:	80 83       	st	Z, r24
    9d22:	7b 01       	movw	r14, r22
    9d24:	11 50       	subi	r17, 0x01	; 1
    9d26:	70 f1       	brcs	.+92     	; 0x9d84 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0x12c>
    9d28:	f7 01       	movw	r30, r14
    9d2a:	84 91       	lpm	r24, Z
_ZN16Adafruit_SSD13068SPIwriteEh():
    9d2c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    9d2e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    9d30:	23 2b       	or	r18, r19
    9d32:	31 f0       	breq	.+12     	; 0x9d40 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xe8>
    9d34:	0e 94 29 4d 	call	0x9a52	; 0x9a52 <SPIClass::transfer(unsigned char)>
    9d38:	ff ef       	ldi	r31, 0xFF	; 255
    9d3a:	ef 1a       	sub	r14, r31
    9d3c:	ff 0a       	sbc	r15, r31
    9d3e:	f2 cf       	rjmp	.-28     	; 0x9d24 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xcc>
    9d40:	28 e0       	ldi	r18, 0x08	; 8
    9d42:	30 e0       	ldi	r19, 0x00	; 0
    9d44:	40 e8       	ldi	r20, 0x80	; 128
    9d46:	e9 a5       	ldd	r30, Y+41	; 0x29
    9d48:	fa a5       	ldd	r31, Y+42	; 0x2a
    9d4a:	99 a9       	ldd	r25, Y+49	; 0x31
    9d4c:	58 2f       	mov	r21, r24
    9d4e:	54 23       	and	r21, r20
    9d50:	a9 f0       	breq	.+42     	; 0x9d7c <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0x124>
    9d52:	50 81       	ld	r21, Z
    9d54:	95 2b       	or	r25, r21
    9d56:	90 83       	st	Z, r25
    9d58:	eb a5       	ldd	r30, Y+43	; 0x2b
    9d5a:	fc a5       	ldd	r31, Y+44	; 0x2c
    9d5c:	90 81       	ld	r25, Z
    9d5e:	5a a9       	ldd	r21, Y+50	; 0x32
    9d60:	95 2b       	or	r25, r21
    9d62:	90 83       	st	Z, r25
    9d64:	eb a5       	ldd	r30, Y+43	; 0x2b
    9d66:	fc a5       	ldd	r31, Y+44	; 0x2c
    9d68:	50 81       	ld	r21, Z
    9d6a:	9a a9       	ldd	r25, Y+50	; 0x32
    9d6c:	90 95       	com	r25
    9d6e:	95 23       	and	r25, r21
    9d70:	90 83       	st	Z, r25
    9d72:	46 95       	lsr	r20
    9d74:	21 50       	subi	r18, 0x01	; 1
    9d76:	31 09       	sbc	r19, r1
    9d78:	31 f7       	brne	.-52     	; 0x9d46 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xee>
    9d7a:	de cf       	rjmp	.-68     	; 0x9d38 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xe0>
    9d7c:	50 81       	ld	r21, Z
    9d7e:	90 95       	com	r25
    9d80:	95 23       	and	r25, r21
    9d82:	e9 cf       	rjmp	.-46     	; 0x9d56 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xfe>
_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh():
    9d84:	df 91       	pop	r29
    9d86:	cf 91       	pop	r28
    9d88:	1f 91       	pop	r17
    9d8a:	ff 90       	pop	r15
    9d8c:	ef 90       	pop	r14
    9d8e:	df 90       	pop	r13
    9d90:	cf 90       	pop	r12
    9d92:	08 95       	ret

00009d94 <Adafruit_SSD1306::clearDisplay()>:
_ZN16Adafruit_SSD130612clearDisplayEv():
    9d94:	fc 01       	movw	r30, r24
    9d96:	86 81       	ldd	r24, Z+6	; 0x06
    9d98:	97 81       	ldd	r25, Z+7	; 0x07
    9d9a:	9c 01       	movw	r18, r24
    9d9c:	29 5f       	subi	r18, 0xF9	; 249
    9d9e:	3f 4f       	sbci	r19, 0xFF	; 255
    9da0:	37 ff       	sbrs	r19, 7
    9da2:	02 c0       	rjmp	.+4      	; 0x9da8 <Adafruit_SSD1306::clearDisplay()+0x14>
    9da4:	29 5f       	subi	r18, 0xF9	; 249
    9da6:	3f 4f       	sbci	r19, 0xFF	; 255
    9da8:	83 e0       	ldi	r24, 0x03	; 3
    9daa:	35 95       	asr	r19
    9dac:	27 95       	ror	r18
    9dae:	8a 95       	dec	r24
    9db0:	e1 f7       	brne	.-8      	; 0x9daa <Adafruit_SSD1306::clearDisplay()+0x16>
    9db2:	84 81       	ldd	r24, Z+4	; 0x04
    9db4:	95 81       	ldd	r25, Z+5	; 0x05
    9db6:	28 9f       	mul	r18, r24
    9db8:	a0 01       	movw	r20, r0
    9dba:	29 9f       	mul	r18, r25
    9dbc:	50 0d       	add	r21, r0
    9dbe:	38 9f       	mul	r19, r24
    9dc0:	50 0d       	add	r21, r0
    9dc2:	11 24       	eor	r1, r1
    9dc4:	70 e0       	ldi	r23, 0x00	; 0
    9dc6:	60 e0       	ldi	r22, 0x00	; 0
    9dc8:	87 8d       	ldd	r24, Z+31	; 0x1f
    9dca:	90 a1       	ldd	r25, Z+32	; 0x20
    9dcc:	0c 94 d3 76 	jmp	0xeda6	; 0xeda6 <memset>

00009dd0 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)>:
_ZN16Adafruit_SSD13065beginEhhbb():
    9dd0:	8f 92       	push	r8
    9dd2:	9f 92       	push	r9
    9dd4:	af 92       	push	r10
    9dd6:	bf 92       	push	r11
    9dd8:	cf 92       	push	r12
    9dda:	df 92       	push	r13
    9ddc:	ef 92       	push	r14
    9dde:	ff 92       	push	r15
    9de0:	0f 93       	push	r16
    9de2:	1f 93       	push	r17
    9de4:	cf 93       	push	r28
    9de6:	df 93       	push	r29
    9de8:	ec 01       	movw	r28, r24
    9dea:	86 2e       	mov	r8, r22
    9dec:	b4 2e       	mov	r11, r20
    9dee:	a2 2e       	mov	r10, r18
    9df0:	90 2e       	mov	r9, r16
    9df2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    9df4:	98 a1       	ldd	r25, Y+32	; 0x20
    9df6:	89 2b       	or	r24, r25
    9df8:	39 f1       	breq	.+78     	; 0x9e48 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x78>
    9dfa:	ce 01       	movw	r24, r28
    9dfc:	0e 94 ca 4e 	call	0x9d94	; 0x9d94 <Adafruit_SSD1306::clearDisplay()>
    9e00:	8e 81       	ldd	r24, Y+6	; 0x06
    9e02:	9f 81       	ldd	r25, Y+7	; 0x07
    9e04:	6c 81       	ldd	r22, Y+4	; 0x04
    9e06:	7d 81       	ldd	r23, Y+5	; 0x05
    9e08:	81 32       	cpi	r24, 0x21	; 33
    9e0a:	91 05       	cpc	r25, r1
    9e0c:	0c f0       	brlt	.+2      	; 0x9e10 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x40>
    9e0e:	46 c0       	rjmp	.+140    	; 0x9e9c <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0xcc>
    9e10:	ac 01       	movw	r20, r24
    9e12:	40 52       	subi	r20, 0x20	; 32
    9e14:	51 09       	sbc	r21, r1
    9e16:	57 ff       	sbrs	r21, 7
    9e18:	02 c0       	rjmp	.+4      	; 0x9e1e <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x4e>
    9e1a:	4f 5f       	subi	r20, 0xFF	; 255
    9e1c:	5f 4f       	sbci	r21, 0xFF	; 255
    9e1e:	55 95       	asr	r21
    9e20:	47 95       	ror	r20
    9e22:	63 57       	subi	r22, 0x73	; 115
    9e24:	71 09       	sbc	r23, r1
    9e26:	77 ff       	sbrs	r23, 7
    9e28:	02 c0       	rjmp	.+4      	; 0x9e2e <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x5e>
    9e2a:	6f 5f       	subi	r22, 0xFF	; 255
    9e2c:	7f 4f       	sbci	r23, 0xFF	; 255
    9e2e:	75 95       	asr	r23
    9e30:	67 95       	ror	r22
    9e32:	cc 24       	eor	r12, r12
    9e34:	c3 94       	inc	r12
    9e36:	d1 2c       	mov	r13, r1
    9e38:	a0 e2       	ldi	r26, 0x20	; 32
    9e3a:	ea 2e       	mov	r14, r26
    9e3c:	f1 2c       	mov	r15, r1
    9e3e:	03 e7       	ldi	r16, 0x73	; 115
    9e40:	10 e0       	ldi	r17, 0x00	; 0
    9e42:	20 eb       	ldi	r18, 0xB0	; 176
    9e44:	3b e1       	ldi	r19, 0x1B	; 27
    9e46:	45 c0       	rjmp	.+138    	; 0x9ed2 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x102>
    9e48:	2e 81       	ldd	r18, Y+6	; 0x06
    9e4a:	3f 81       	ldd	r19, Y+7	; 0x07
    9e4c:	c9 01       	movw	r24, r18
    9e4e:	07 96       	adiw	r24, 0x07	; 7
    9e50:	97 fd       	sbrc	r25, 7
    9e52:	07 96       	adiw	r24, 0x07	; 7
    9e54:	23 e0       	ldi	r18, 0x03	; 3
    9e56:	95 95       	asr	r25
    9e58:	87 95       	ror	r24
    9e5a:	2a 95       	dec	r18
    9e5c:	e1 f7       	brne	.-8      	; 0x9e56 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x86>
    9e5e:	2c 81       	ldd	r18, Y+4	; 0x04
    9e60:	3d 81       	ldd	r19, Y+5	; 0x05
    9e62:	ac 01       	movw	r20, r24
    9e64:	42 9f       	mul	r20, r18
    9e66:	c0 01       	movw	r24, r0
    9e68:	43 9f       	mul	r20, r19
    9e6a:	90 0d       	add	r25, r0
    9e6c:	52 9f       	mul	r21, r18
    9e6e:	90 0d       	add	r25, r0
    9e70:	11 24       	eor	r1, r1
    9e72:	0e 94 64 75 	call	0xeac8	; 0xeac8 <malloc>
    9e76:	98 a3       	std	Y+32, r25	; 0x20
    9e78:	8f 8f       	std	Y+31, r24	; 0x1f
    9e7a:	89 2b       	or	r24, r25
    9e7c:	09 f0       	breq	.+2      	; 0x9e80 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0xb0>
    9e7e:	bd cf       	rjmp	.-134    	; 0x9dfa <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x2a>
    9e80:	80 e0       	ldi	r24, 0x00	; 0
    9e82:	df 91       	pop	r29
    9e84:	cf 91       	pop	r28
    9e86:	1f 91       	pop	r17
    9e88:	0f 91       	pop	r16
    9e8a:	ff 90       	pop	r15
    9e8c:	ef 90       	pop	r14
    9e8e:	df 90       	pop	r13
    9e90:	cf 90       	pop	r12
    9e92:	bf 90       	pop	r11
    9e94:	af 90       	pop	r10
    9e96:	9f 90       	pop	r9
    9e98:	8f 90       	pop	r8
    9e9a:	08 95       	ret
    9e9c:	ac 01       	movw	r20, r24
    9e9e:	40 54       	subi	r20, 0x40	; 64
    9ea0:	51 09       	sbc	r21, r1
    9ea2:	57 ff       	sbrs	r21, 7
    9ea4:	02 c0       	rjmp	.+4      	; 0x9eaa <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0xda>
    9ea6:	4f 5f       	subi	r20, 0xFF	; 255
    9ea8:	5f 4f       	sbci	r21, 0xFF	; 255
    9eaa:	55 95       	asr	r21
    9eac:	47 95       	ror	r20
    9eae:	62 55       	subi	r22, 0x52	; 82
    9eb0:	71 09       	sbc	r23, r1
    9eb2:	77 ff       	sbrs	r23, 7
    9eb4:	02 c0       	rjmp	.+4      	; 0x9eba <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0xea>
    9eb6:	6f 5f       	subi	r22, 0xFF	; 255
    9eb8:	7f 4f       	sbci	r23, 0xFF	; 255
    9eba:	75 95       	asr	r23
    9ebc:	67 95       	ror	r22
    9ebe:	cc 24       	eor	r12, r12
    9ec0:	c3 94       	inc	r12
    9ec2:	d1 2c       	mov	r13, r1
    9ec4:	80 e4       	ldi	r24, 0x40	; 64
    9ec6:	e8 2e       	mov	r14, r24
    9ec8:	f1 2c       	mov	r15, r1
    9eca:	02 e5       	ldi	r16, 0x52	; 82
    9ecc:	10 e0       	ldi	r17, 0x00	; 0
    9ece:	20 e9       	ldi	r18, 0x90	; 144
    9ed0:	3d e1       	ldi	r19, 0x1D	; 29
    9ed2:	ce 01       	movw	r24, r28
    9ed4:	0e 94 b2 48 	call	0x9164	; 0x9164 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
    9ed8:	8a a2       	std	Y+34, r8	; 0x22
    9eda:	2d 8d       	ldd	r18, Y+29	; 0x1d
    9edc:	3e 8d       	ldd	r19, Y+30	; 0x1e
    9ede:	21 15       	cp	r18, r1
    9ee0:	31 05       	cpc	r19, r1
    9ee2:	09 f4       	brne	.+2      	; 0x9ee6 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x116>
    9ee4:	a2 c0       	rjmp	.+324    	; 0xa02a <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x25a>
    9ee6:	9b 2d       	mov	r25, r11
    9ee8:	b1 10       	cpse	r11, r1
    9eea:	06 c0       	rjmp	.+12     	; 0x9ef8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x128>
    9eec:	8e 81       	ldd	r24, Y+6	; 0x06
    9eee:	9f 81       	ldd	r25, Y+7	; 0x07
    9ef0:	80 97       	sbiw	r24, 0x20	; 32
    9ef2:	09 f0       	breq	.+2      	; 0x9ef6 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x126>
    9ef4:	98 c0       	rjmp	.+304    	; 0xa026 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x256>
    9ef6:	9c e3       	ldi	r25, 0x3C	; 60
    9ef8:	99 a3       	std	Y+33, r25	; 0x21
    9efa:	99 20       	and	r9, r9
    9efc:	09 f4       	brne	.+2      	; 0x9f00 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x130>
    9efe:	3f c1       	rjmp	.+638    	; 0xa17e <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x3ae>
    9f00:	c9 01       	movw	r24, r18
    9f02:	0e 94 44 54 	call	0xa888	; 0xa888 <TwoWire::begin()>
    9f06:	aa 20       	and	r10, r10
    9f08:	f1 f0       	breq	.+60     	; 0x9f46 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x176>
    9f0a:	88 a5       	ldd	r24, Y+40	; 0x28
    9f0c:	87 fd       	sbrc	r24, 7
    9f0e:	1b c0       	rjmp	.+54     	; 0x9f46 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x176>
    9f10:	61 e0       	ldi	r22, 0x01	; 1
    9f12:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
    9f16:	61 e0       	ldi	r22, 0x01	; 1
    9f18:	88 a5       	ldd	r24, Y+40	; 0x28
    9f1a:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
    9f1e:	61 e0       	ldi	r22, 0x01	; 1
    9f20:	70 e0       	ldi	r23, 0x00	; 0
    9f22:	80 e0       	ldi	r24, 0x00	; 0
    9f24:	90 e0       	ldi	r25, 0x00	; 0
    9f26:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    9f2a:	60 e0       	ldi	r22, 0x00	; 0
    9f2c:	88 a5       	ldd	r24, Y+40	; 0x28
    9f2e:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
    9f32:	6a e0       	ldi	r22, 0x0A	; 10
    9f34:	70 e0       	ldi	r23, 0x00	; 0
    9f36:	80 e0       	ldi	r24, 0x00	; 0
    9f38:	90 e0       	ldi	r25, 0x00	; 0
    9f3a:	0e 94 c3 6c 	call	0xd986	; 0xd986 <delay>
    9f3e:	61 e0       	ldi	r22, 0x01	; 1
    9f40:	88 a5       	ldd	r24, Y+40	; 0x28
    9f42:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
    9f46:	2d 8d       	ldd	r18, Y+29	; 0x1d
    9f48:	3e 8d       	ldd	r19, Y+30	; 0x1e
    9f4a:	21 15       	cp	r18, r1
    9f4c:	31 05       	cpc	r19, r1
    9f4e:	09 f4       	brne	.+2      	; 0x9f52 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x182>
    9f50:	e6 c0       	rjmp	.+460    	; 0xa11e <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x34e>
    9f52:	4d a9       	ldd	r20, Y+53	; 0x35
    9f54:	5e a9       	ldd	r21, Y+54	; 0x36
    9f56:	6f a9       	ldd	r22, Y+55	; 0x37
    9f58:	78 ad       	ldd	r23, Y+56	; 0x38
    9f5a:	c9 01       	movw	r24, r18
    9f5c:	0e 94 56 54 	call	0xa8ac	; 0xa8ac <TwoWire::setClock(unsigned long)>
    9f60:	44 e0       	ldi	r20, 0x04	; 4
    9f62:	6c ea       	ldi	r22, 0xAC	; 172
    9f64:	7b e1       	ldi	r23, 0x1B	; 27
    9f66:	ce 01       	movw	r24, r28
    9f68:	0e 94 2c 4e 	call	0x9c58	; 0x9c58 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>
    9f6c:	6e 81       	ldd	r22, Y+6	; 0x06
    9f6e:	61 50       	subi	r22, 0x01	; 1
    9f70:	ce 01       	movw	r24, r28
    9f72:	0e 94 87 4d 	call	0x9b0e	; 0x9b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9f76:	44 e0       	ldi	r20, 0x04	; 4
    9f78:	68 ea       	ldi	r22, 0xA8	; 168
    9f7a:	7b e1       	ldi	r23, 0x1B	; 27
    9f7c:	ce 01       	movw	r24, r28
    9f7e:	0e 94 2c 4e 	call	0x9c58	; 0x9c58 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>
    9f82:	8a a1       	ldd	r24, Y+34	; 0x22
    9f84:	60 e1       	ldi	r22, 0x10	; 16
    9f86:	81 30       	cpi	r24, 0x01	; 1
    9f88:	09 f0       	breq	.+2      	; 0x9f8c <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1bc>
    9f8a:	64 e1       	ldi	r22, 0x14	; 20
    9f8c:	ce 01       	movw	r24, r28
    9f8e:	0e 94 87 4d 	call	0x9b0e	; 0x9b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9f92:	44 e0       	ldi	r20, 0x04	; 4
    9f94:	64 ea       	ldi	r22, 0xA4	; 164
    9f96:	7b e1       	ldi	r23, 0x1B	; 27
    9f98:	ce 01       	movw	r24, r28
    9f9a:	0e 94 2c 4e 	call	0x9c58	; 0x9c58 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>
    9f9e:	8f e8       	ldi	r24, 0x8F	; 143
    9fa0:	8d af       	std	Y+61, r24	; 0x3d
    9fa2:	8c 81       	ldd	r24, Y+4	; 0x04
    9fa4:	9d 81       	ldd	r25, Y+5	; 0x05
    9fa6:	80 38       	cpi	r24, 0x80	; 128
    9fa8:	91 05       	cpc	r25, r1
    9faa:	09 f0       	breq	.+2      	; 0x9fae <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1de>
    9fac:	ca c0       	rjmp	.+404    	; 0xa142 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x372>
    9fae:	8e 81       	ldd	r24, Y+6	; 0x06
    9fb0:	9f 81       	ldd	r25, Y+7	; 0x07
    9fb2:	80 34       	cpi	r24, 0x40	; 64
    9fb4:	91 05       	cpc	r25, r1
    9fb6:	09 f0       	breq	.+2      	; 0x9fba <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1ea>
    9fb8:	d0 c0       	rjmp	.+416    	; 0xa15a <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x38a>
    9fba:	8a a1       	ldd	r24, Y+34	; 0x22
    9fbc:	81 30       	cpi	r24, 0x01	; 1
    9fbe:	09 f0       	breq	.+2      	; 0x9fc2 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1f2>
    9fc0:	be c0       	rjmp	.+380    	; 0xa13e <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x36e>
    9fc2:	8f e9       	ldi	r24, 0x9F	; 159
    9fc4:	8d af       	std	Y+61, r24	; 0x3d
    9fc6:	12 e1       	ldi	r17, 0x12	; 18
    9fc8:	6a ed       	ldi	r22, 0xDA	; 218
    9fca:	ce 01       	movw	r24, r28
    9fcc:	0e 94 87 4d 	call	0x9b0e	; 0x9b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9fd0:	61 2f       	mov	r22, r17
    9fd2:	ce 01       	movw	r24, r28
    9fd4:	0e 94 87 4d 	call	0x9b0e	; 0x9b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9fd8:	61 e8       	ldi	r22, 0x81	; 129
    9fda:	ce 01       	movw	r24, r28
    9fdc:	0e 94 87 4d 	call	0x9b0e	; 0x9b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9fe0:	6d ad       	ldd	r22, Y+61	; 0x3d
    9fe2:	ce 01       	movw	r24, r28
    9fe4:	0e 94 87 4d 	call	0x9b0e	; 0x9b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9fe8:	69 ed       	ldi	r22, 0xD9	; 217
    9fea:	ce 01       	movw	r24, r28
    9fec:	0e 94 87 4d 	call	0x9b0e	; 0x9b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9ff0:	8a a1       	ldd	r24, Y+34	; 0x22
    9ff2:	62 e2       	ldi	r22, 0x22	; 34
    9ff4:	81 30       	cpi	r24, 0x01	; 1
    9ff6:	09 f0       	breq	.+2      	; 0x9ffa <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x22a>
    9ff8:	61 ef       	ldi	r22, 0xF1	; 241
    9ffa:	ce 01       	movw	r24, r28
    9ffc:	0e 94 87 4d 	call	0x9b0e	; 0x9b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    a000:	46 e0       	ldi	r20, 0x06	; 6
    a002:	6e e9       	ldi	r22, 0x9E	; 158
    a004:	7b e1       	ldi	r23, 0x1B	; 27
    a006:	ce 01       	movw	r24, r28
    a008:	0e 94 2c 4e 	call	0x9c58	; 0x9c58 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>
    a00c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a00e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a010:	00 97       	sbiw	r24, 0x00	; 0
    a012:	09 f4       	brne	.+2      	; 0xa016 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x246>
    a014:	a6 c0       	rjmp	.+332    	; 0xa162 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x392>
    a016:	49 ad       	ldd	r20, Y+57	; 0x39
    a018:	5a ad       	ldd	r21, Y+58	; 0x3a
    a01a:	6b ad       	ldd	r22, Y+59	; 0x3b
    a01c:	7c ad       	ldd	r23, Y+60	; 0x3c
    a01e:	0e 94 56 54 	call	0xa8ac	; 0xa8ac <TwoWire::setClock(unsigned long)>
    a022:	81 e0       	ldi	r24, 0x01	; 1
    a024:	2e cf       	rjmp	.-420    	; 0x9e82 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0xb2>
    a026:	9d e3       	ldi	r25, 0x3D	; 61
    a028:	67 cf       	rjmp	.-306    	; 0x9ef8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x128>
    a02a:	61 e0       	ldi	r22, 0x01	; 1
    a02c:	8e a1       	ldd	r24, Y+38	; 0x26
    a02e:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
    a032:	61 e0       	ldi	r22, 0x01	; 1
    a034:	8f a1       	ldd	r24, Y+39	; 0x27
    a036:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
    a03a:	8e a1       	ldd	r24, Y+38	; 0x26
    a03c:	08 2e       	mov	r0, r24
    a03e:	00 0c       	add	r0, r0
    a040:	99 0b       	sbc	r25, r25
    a042:	fc 01       	movw	r30, r24
    a044:	e0 57       	subi	r30, 0x70	; 112
    a046:	ff 4d       	sbci	r31, 0xDF	; 223
    a048:	e4 91       	lpm	r30, Z
    a04a:	f0 e0       	ldi	r31, 0x00	; 0
    a04c:	ee 0f       	add	r30, r30
    a04e:	ff 1f       	adc	r31, r31
    a050:	e6 54       	subi	r30, 0x46	; 70
    a052:	ff 4d       	sbci	r31, 0xDF	; 223
    a054:	25 91       	lpm	r18, Z+
    a056:	34 91       	lpm	r19, Z
    a058:	3e a7       	std	Y+46, r19	; 0x2e
    a05a:	2d a7       	std	Y+45, r18	; 0x2d
    a05c:	fc 01       	movw	r30, r24
    a05e:	e0 59       	subi	r30, 0x90	; 144
    a060:	ff 4d       	sbci	r31, 0xDF	; 223
    a062:	e4 91       	lpm	r30, Z
    a064:	eb ab       	std	Y+51, r30	; 0x33
    a066:	8f a1       	ldd	r24, Y+39	; 0x27
    a068:	08 2e       	mov	r0, r24
    a06a:	00 0c       	add	r0, r0
    a06c:	99 0b       	sbc	r25, r25
    a06e:	fc 01       	movw	r30, r24
    a070:	e0 57       	subi	r30, 0x70	; 112
    a072:	ff 4d       	sbci	r31, 0xDF	; 223
    a074:	e4 91       	lpm	r30, Z
    a076:	f0 e0       	ldi	r31, 0x00	; 0
    a078:	ee 0f       	add	r30, r30
    a07a:	ff 1f       	adc	r31, r31
    a07c:	e6 54       	subi	r30, 0x46	; 70
    a07e:	ff 4d       	sbci	r31, 0xDF	; 223
    a080:	a5 91       	lpm	r26, Z+
    a082:	b4 91       	lpm	r27, Z
    a084:	b8 ab       	std	Y+48, r27	; 0x30
    a086:	af a7       	std	Y+47, r26	; 0x2f
    a088:	fc 01       	movw	r30, r24
    a08a:	e0 59       	subi	r30, 0x90	; 144
    a08c:	ff 4d       	sbci	r31, 0xDF	; 223
    a08e:	e4 91       	lpm	r30, Z
    a090:	ec ab       	std	Y+52, r30	; 0x34
    a092:	8c 91       	ld	r24, X
    a094:	e8 2b       	or	r30, r24
    a096:	ec 93       	st	X, r30
    a098:	8b 8d       	ldd	r24, Y+27	; 0x1b
    a09a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    a09c:	89 2b       	or	r24, r25
    a09e:	31 f0       	breq	.+12     	; 0xa0ac <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x2dc>
    a0a0:	99 20       	and	r9, r9
    a0a2:	09 f4       	brne	.+2      	; 0xa0a6 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x2d6>
    a0a4:	30 cf       	rjmp	.-416    	; 0x9f06 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x136>
    a0a6:	0e 94 52 53 	call	0xa6a4	; 0xa6a4 <SPIClass::begin()>
    a0aa:	2d cf       	rjmp	.-422    	; 0x9f06 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x136>
    a0ac:	61 e0       	ldi	r22, 0x01	; 1
    a0ae:	8c a1       	ldd	r24, Y+36	; 0x24
    a0b0:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
    a0b4:	61 e0       	ldi	r22, 0x01	; 1
    a0b6:	8d a1       	ldd	r24, Y+37	; 0x25
    a0b8:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
    a0bc:	8c a1       	ldd	r24, Y+36	; 0x24
    a0be:	08 2e       	mov	r0, r24
    a0c0:	00 0c       	add	r0, r0
    a0c2:	99 0b       	sbc	r25, r25
    a0c4:	fc 01       	movw	r30, r24
    a0c6:	e0 57       	subi	r30, 0x70	; 112
    a0c8:	ff 4d       	sbci	r31, 0xDF	; 223
    a0ca:	e4 91       	lpm	r30, Z
    a0cc:	f0 e0       	ldi	r31, 0x00	; 0
    a0ce:	ee 0f       	add	r30, r30
    a0d0:	ff 1f       	adc	r31, r31
    a0d2:	e6 54       	subi	r30, 0x46	; 70
    a0d4:	ff 4d       	sbci	r31, 0xDF	; 223
    a0d6:	25 91       	lpm	r18, Z+
    a0d8:	34 91       	lpm	r19, Z
    a0da:	3a a7       	std	Y+42, r19	; 0x2a
    a0dc:	29 a7       	std	Y+41, r18	; 0x29
    a0de:	fc 01       	movw	r30, r24
    a0e0:	e0 59       	subi	r30, 0x90	; 144
    a0e2:	ff 4d       	sbci	r31, 0xDF	; 223
    a0e4:	e4 91       	lpm	r30, Z
    a0e6:	e9 ab       	std	Y+49, r30	; 0x31
    a0e8:	8d a1       	ldd	r24, Y+37	; 0x25
    a0ea:	08 2e       	mov	r0, r24
    a0ec:	00 0c       	add	r0, r0
    a0ee:	99 0b       	sbc	r25, r25
    a0f0:	fc 01       	movw	r30, r24
    a0f2:	e0 57       	subi	r30, 0x70	; 112
    a0f4:	ff 4d       	sbci	r31, 0xDF	; 223
    a0f6:	e4 91       	lpm	r30, Z
    a0f8:	f0 e0       	ldi	r31, 0x00	; 0
    a0fa:	ee 0f       	add	r30, r30
    a0fc:	ff 1f       	adc	r31, r31
    a0fe:	e6 54       	subi	r30, 0x46	; 70
    a100:	ff 4d       	sbci	r31, 0xDF	; 223
    a102:	a5 91       	lpm	r26, Z+
    a104:	b4 91       	lpm	r27, Z
    a106:	bc a7       	std	Y+44, r27	; 0x2c
    a108:	ab a7       	std	Y+43, r26	; 0x2b
    a10a:	fc 01       	movw	r30, r24
    a10c:	e0 59       	subi	r30, 0x90	; 144
    a10e:	ff 4d       	sbci	r31, 0xDF	; 223
    a110:	e4 91       	lpm	r30, Z
    a112:	ea ab       	std	Y+50, r30	; 0x32
    a114:	8c 91       	ld	r24, X
    a116:	e0 95       	com	r30
    a118:	e8 23       	and	r30, r24
    a11a:	ec 93       	st	X, r30
    a11c:	f4 ce       	rjmp	.-536    	; 0x9f06 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x136>
    a11e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    a120:	9c 8d       	ldd	r25, Y+28	; 0x1c
    a122:	89 2b       	or	r24, r25
    a124:	21 f0       	breq	.+8      	; 0xa12e <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x35e>
    a126:	8e ad       	ldd	r24, Y+62	; 0x3e
    a128:	9f ad       	ldd	r25, Y+63	; 0x3f
    a12a:	0e 94 0f 4d 	call	0x9a1e	; 0x9a1e <SPIClass::beginTransaction(SPISettings)>
    a12e:	ef a5       	ldd	r30, Y+47	; 0x2f
    a130:	f8 a9       	ldd	r31, Y+48	; 0x30
    a132:	90 81       	ld	r25, Z
    a134:	8c a9       	ldd	r24, Y+52	; 0x34
    a136:	80 95       	com	r24
    a138:	89 23       	and	r24, r25
    a13a:	80 83       	st	Z, r24
    a13c:	11 cf       	rjmp	.-478    	; 0x9f60 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x190>
    a13e:	8f ec       	ldi	r24, 0xCF	; 207
    a140:	41 cf       	rjmp	.-382    	; 0x9fc4 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1f4>
    a142:	80 36       	cpi	r24, 0x60	; 96
    a144:	91 05       	cpc	r25, r1
    a146:	49 f4       	brne	.+18     	; 0xa15a <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x38a>
    a148:	8e 81       	ldd	r24, Y+6	; 0x06
    a14a:	9f 81       	ldd	r25, Y+7	; 0x07
    a14c:	40 97       	sbiw	r24, 0x10	; 16
    a14e:	29 f4       	brne	.+10     	; 0xa15a <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x38a>
    a150:	8a a1       	ldd	r24, Y+34	; 0x22
    a152:	81 30       	cpi	r24, 0x01	; 1
    a154:	21 f4       	brne	.+8      	; 0xa15e <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x38e>
    a156:	80 e1       	ldi	r24, 0x10	; 16
    a158:	8d af       	std	Y+61, r24	; 0x3d
    a15a:	12 e0       	ldi	r17, 0x02	; 2
    a15c:	35 cf       	rjmp	.-406    	; 0x9fc8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1f8>
    a15e:	8f ea       	ldi	r24, 0xAF	; 175
    a160:	fb cf       	rjmp	.-10     	; 0xa158 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x388>
    a162:	ef a5       	ldd	r30, Y+47	; 0x2f
    a164:	f8 a9       	ldd	r31, Y+48	; 0x30
    a166:	80 81       	ld	r24, Z
    a168:	9c a9       	ldd	r25, Y+52	; 0x34
    a16a:	89 2b       	or	r24, r25
    a16c:	80 83       	st	Z, r24
    a16e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    a170:	9c 8d       	ldd	r25, Y+28	; 0x1c
    a172:	89 2b       	or	r24, r25
    a174:	09 f4       	brne	.+2      	; 0xa178 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x3a8>
    a176:	55 cf       	rjmp	.-342    	; 0xa022 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x252>
    a178:	0e 94 4f 4c 	call	0x989e	; 0x989e <SPIClass::endTransaction()>
    a17c:	52 cf       	rjmp	.-348    	; 0xa022 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x252>
    a17e:	a1 10       	cpse	r10, r1
    a180:	c4 ce       	rjmp	.-632    	; 0x9f0a <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x13a>
    a182:	e7 ce       	rjmp	.-562    	; 0x9f52 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x182>

0000a184 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij():
    a184:	0f 93       	push	r16
    a186:	1f 93       	push	r17
    a188:	cf 93       	push	r28
    a18a:	df 93       	push	r29
    a18c:	dc 01       	movw	r26, r24
    a18e:	57 fd       	sbrc	r21, 7
    a190:	46 c0       	rjmp	.+140    	; 0xa21e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    a192:	16 96       	adiw	r26, 0x06	; 6
    a194:	8d 91       	ld	r24, X+
    a196:	9c 91       	ld	r25, X
    a198:	17 97       	sbiw	r26, 0x07	; 7
    a19a:	48 17       	cp	r20, r24
    a19c:	59 07       	cpc	r21, r25
    a19e:	0c f0       	brlt	.+2      	; 0xa1a2 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x1e>
    a1a0:	3e c0       	rjmp	.+124    	; 0xa21e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    a1a2:	77 ff       	sbrs	r23, 7
    a1a4:	04 c0       	rjmp	.+8      	; 0xa1ae <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x2a>
    a1a6:	26 0f       	add	r18, r22
    a1a8:	37 1f       	adc	r19, r23
    a1aa:	70 e0       	ldi	r23, 0x00	; 0
    a1ac:	60 e0       	ldi	r22, 0x00	; 0
    a1ae:	14 96       	adiw	r26, 0x04	; 4
    a1b0:	cd 91       	ld	r28, X+
    a1b2:	dc 91       	ld	r29, X
    a1b4:	15 97       	sbiw	r26, 0x05	; 5
    a1b6:	cb 01       	movw	r24, r22
    a1b8:	82 0f       	add	r24, r18
    a1ba:	93 1f       	adc	r25, r19
    a1bc:	c8 17       	cp	r28, r24
    a1be:	d9 07       	cpc	r29, r25
    a1c0:	1c f4       	brge	.+6      	; 0xa1c8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x44>
    a1c2:	9e 01       	movw	r18, r28
    a1c4:	26 1b       	sub	r18, r22
    a1c6:	37 0b       	sbc	r19, r23
    a1c8:	12 16       	cp	r1, r18
    a1ca:	13 06       	cpc	r1, r19
    a1cc:	44 f5       	brge	.+80     	; 0xa21e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    a1ce:	fa 01       	movw	r30, r20
    a1d0:	57 fd       	sbrc	r21, 7
    a1d2:	37 96       	adiw	r30, 0x07	; 7
    a1d4:	83 e0       	ldi	r24, 0x03	; 3
    a1d6:	f5 95       	asr	r31
    a1d8:	e7 95       	ror	r30
    a1da:	8a 95       	dec	r24
    a1dc:	e1 f7       	brne	.-8      	; 0xa1d6 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x52>
    a1de:	ec 9f       	mul	r30, r28
    a1e0:	c0 01       	movw	r24, r0
    a1e2:	ed 9f       	mul	r30, r29
    a1e4:	90 0d       	add	r25, r0
    a1e6:	fc 9f       	mul	r31, r28
    a1e8:	90 0d       	add	r25, r0
    a1ea:	11 24       	eor	r1, r1
    a1ec:	68 0f       	add	r22, r24
    a1ee:	79 1f       	adc	r23, r25
    a1f0:	5f 96       	adiw	r26, 0x1f	; 31
    a1f2:	ed 91       	ld	r30, X+
    a1f4:	fc 91       	ld	r31, X
    a1f6:	e6 0f       	add	r30, r22
    a1f8:	f7 1f       	adc	r31, r23
    a1fa:	47 70       	andi	r20, 0x07	; 7
    a1fc:	55 27       	eor	r21, r21
    a1fe:	81 e0       	ldi	r24, 0x01	; 1
    a200:	90 e0       	ldi	r25, 0x00	; 0
    a202:	01 c0       	rjmp	.+2      	; 0xa206 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x82>
    a204:	88 0f       	add	r24, r24
    a206:	4a 95       	dec	r20
    a208:	ea f7       	brpl	.-6      	; 0xa204 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x80>
    a20a:	48 2f       	mov	r20, r24
    a20c:	01 30       	cpi	r16, 0x01	; 1
    a20e:	11 05       	cpc	r17, r1
    a210:	59 f0       	breq	.+22     	; 0xa228 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xa4>
    a212:	a8 f0       	brcs	.+42     	; 0xa23e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xba>
    a214:	2e 0f       	add	r18, r30
    a216:	3f 1f       	adc	r19, r31
    a218:	02 30       	cpi	r16, 0x02	; 2
    a21a:	11 05       	cpc	r17, r1
    a21c:	e1 f0       	breq	.+56     	; 0xa256 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xd2>
    a21e:	df 91       	pop	r29
    a220:	cf 91       	pop	r28
    a222:	1f 91       	pop	r17
    a224:	0f 91       	pop	r16
    a226:	08 95       	ret
    a228:	2e 0f       	add	r18, r30
    a22a:	3f 1f       	adc	r19, r31
    a22c:	e2 17       	cp	r30, r18
    a22e:	f3 07       	cpc	r31, r19
    a230:	b1 f3       	breq	.-20     	; 0xa21e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    a232:	81 91       	ld	r24, Z+
    a234:	df 01       	movw	r26, r30
    a236:	11 97       	sbiw	r26, 0x01	; 1
    a238:	84 2b       	or	r24, r20
    a23a:	8c 93       	st	X, r24
    a23c:	f7 cf       	rjmp	.-18     	; 0xa22c <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xa8>
    a23e:	80 95       	com	r24
    a240:	2e 0f       	add	r18, r30
    a242:	3f 1f       	adc	r19, r31
    a244:	e2 17       	cp	r30, r18
    a246:	f3 07       	cpc	r31, r19
    a248:	51 f3       	breq	.-44     	; 0xa21e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    a24a:	91 91       	ld	r25, Z+
    a24c:	df 01       	movw	r26, r30
    a24e:	11 97       	sbiw	r26, 0x01	; 1
    a250:	98 23       	and	r25, r24
    a252:	9c 93       	st	X, r25
    a254:	f7 cf       	rjmp	.-18     	; 0xa244 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xc0>
    a256:	e2 17       	cp	r30, r18
    a258:	f3 07       	cpc	r31, r19
    a25a:	09 f3       	breq	.-62     	; 0xa21e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    a25c:	81 91       	ld	r24, Z+
    a25e:	df 01       	movw	r26, r30
    a260:	11 97       	sbiw	r26, 0x01	; 1
    a262:	84 27       	eor	r24, r20
    a264:	8c 93       	st	X, r24
    a266:	f7 cf       	rjmp	.-18     	; 0xa256 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xd2>

0000a268 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij():
    a268:	ef 92       	push	r14
    a26a:	ff 92       	push	r15
    a26c:	0f 93       	push	r16
    a26e:	1f 93       	push	r17
    a270:	cf 93       	push	r28
    a272:	df 93       	push	r29
    a274:	ec 01       	movw	r28, r24
    a276:	77 fd       	sbrc	r23, 7
    a278:	76 c0       	rjmp	.+236    	; 0xa366 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    a27a:	ec 80       	ldd	r14, Y+4	; 0x04
    a27c:	fd 80       	ldd	r15, Y+5	; 0x05
    a27e:	6e 15       	cp	r22, r14
    a280:	7f 05       	cpc	r23, r15
    a282:	0c f0       	brlt	.+2      	; 0xa286 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x1e>
    a284:	70 c0       	rjmp	.+224    	; 0xa366 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    a286:	57 ff       	sbrs	r21, 7
    a288:	04 c0       	rjmp	.+8      	; 0xa292 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x2a>
    a28a:	24 0f       	add	r18, r20
    a28c:	35 1f       	adc	r19, r21
    a28e:	50 e0       	ldi	r21, 0x00	; 0
    a290:	40 e0       	ldi	r20, 0x00	; 0
    a292:	8e 81       	ldd	r24, Y+6	; 0x06
    a294:	9f 81       	ldd	r25, Y+7	; 0x07
    a296:	fa 01       	movw	r30, r20
    a298:	e2 0f       	add	r30, r18
    a29a:	f3 1f       	adc	r31, r19
    a29c:	8e 17       	cp	r24, r30
    a29e:	9f 07       	cpc	r25, r31
    a2a0:	1c f4       	brge	.+6      	; 0xa2a8 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x40>
    a2a2:	9c 01       	movw	r18, r24
    a2a4:	24 1b       	sub	r18, r20
    a2a6:	35 0b       	sbc	r19, r21
    a2a8:	12 16       	cp	r1, r18
    a2aa:	13 06       	cpc	r1, r19
    a2ac:	0c f0       	brlt	.+2      	; 0xa2b0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x48>
    a2ae:	5b c0       	rjmp	.+182    	; 0xa366 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    a2b0:	92 2f       	mov	r25, r18
    a2b2:	84 2f       	mov	r24, r20
    a2b4:	86 95       	lsr	r24
    a2b6:	86 95       	lsr	r24
    a2b8:	86 95       	lsr	r24
    a2ba:	8e 9d       	mul	r24, r14
    a2bc:	d0 01       	movw	r26, r0
    a2be:	8f 9d       	mul	r24, r15
    a2c0:	b0 0d       	add	r27, r0
    a2c2:	11 24       	eor	r1, r1
    a2c4:	6a 0f       	add	r22, r26
    a2c6:	7b 1f       	adc	r23, r27
    a2c8:	af 8d       	ldd	r26, Y+31	; 0x1f
    a2ca:	b8 a1       	ldd	r27, Y+32	; 0x20
    a2cc:	a6 0f       	add	r26, r22
    a2ce:	b7 1f       	adc	r27, r23
    a2d0:	47 70       	andi	r20, 0x07	; 7
    a2d2:	49 f1       	breq	.+82     	; 0xa326 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xbe>
    a2d4:	88 e0       	ldi	r24, 0x08	; 8
    a2d6:	84 1b       	sub	r24, r20
    a2d8:	48 2f       	mov	r20, r24
    a2da:	68 2f       	mov	r22, r24
    a2dc:	70 e0       	ldi	r23, 0x00	; 0
    a2de:	fb 01       	movw	r30, r22
    a2e0:	ea 56       	subi	r30, 0x6A	; 106
    a2e2:	f4 4e       	sbci	r31, 0xE4	; 228
    a2e4:	e4 91       	lpm	r30, Z
    a2e6:	28 17       	cp	r18, r24
    a2e8:	08 f0       	brcs	.+2      	; 0xa2ec <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x84>
    a2ea:	63 c0       	rjmp	.+198    	; 0xa3b2 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x14a>
    a2ec:	62 1b       	sub	r22, r18
    a2ee:	71 09       	sbc	r23, r1
    a2f0:	2f ef       	ldi	r18, 0xFF	; 255
    a2f2:	30 e0       	ldi	r19, 0x00	; 0
    a2f4:	02 c0       	rjmp	.+4      	; 0xa2fa <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x92>
    a2f6:	35 95       	asr	r19
    a2f8:	27 95       	ror	r18
    a2fa:	6a 95       	dec	r22
    a2fc:	e2 f7       	brpl	.-8      	; 0xa2f6 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x8e>
    a2fe:	e2 23       	and	r30, r18
    a300:	01 30       	cpi	r16, 0x01	; 1
    a302:	11 05       	cpc	r17, r1
    a304:	39 f0       	breq	.+14     	; 0xa314 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xac>
    a306:	b0 f1       	brcs	.+108    	; 0xa374 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x10c>
    a308:	02 30       	cpi	r16, 0x02	; 2
    a30a:	11 05       	cpc	r17, r1
    a30c:	61 f5       	brne	.+88     	; 0xa366 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    a30e:	8c 91       	ld	r24, X
    a310:	e8 27       	eor	r30, r24
    a312:	02 c0       	rjmp	.+4      	; 0xa318 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xb0>
    a314:	8c 91       	ld	r24, X
    a316:	e8 2b       	or	r30, r24
    a318:	ec 93       	st	X, r30
    a31a:	94 17       	cp	r25, r20
    a31c:	20 f1       	brcs	.+72     	; 0xa366 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    a31e:	2c 81       	ldd	r18, Y+4	; 0x04
    a320:	3d 81       	ldd	r19, Y+5	; 0x05
    a322:	a2 0f       	add	r26, r18
    a324:	b3 1f       	adc	r27, r19
    a326:	e9 2f       	mov	r30, r25
    a328:	e4 1b       	sub	r30, r20
    a32a:	e8 30       	cpi	r30, 0x08	; 8
    a32c:	78 f0       	brcs	.+30     	; 0xa34c <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xe4>
    a32e:	02 30       	cpi	r16, 0x02	; 2
    a330:	11 05       	cpc	r17, r1
    a332:	21 f5       	brne	.+72     	; 0xa37c <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x114>
    a334:	8e 2f       	mov	r24, r30
    a336:	9c 91       	ld	r25, X
    a338:	90 95       	com	r25
    a33a:	9c 93       	st	X, r25
    a33c:	2c 81       	ldd	r18, Y+4	; 0x04
    a33e:	3d 81       	ldd	r19, Y+5	; 0x05
    a340:	a2 0f       	add	r26, r18
    a342:	b3 1f       	adc	r27, r19
    a344:	88 50       	subi	r24, 0x08	; 8
    a346:	88 30       	cpi	r24, 0x08	; 8
    a348:	b0 f7       	brcc	.-20     	; 0xa336 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xce>
    a34a:	e7 70       	andi	r30, 0x07	; 7
    a34c:	ee 23       	and	r30, r30
    a34e:	59 f0       	breq	.+22     	; 0xa366 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    a350:	f0 e0       	ldi	r31, 0x00	; 0
    a352:	e2 57       	subi	r30, 0x72	; 114
    a354:	f4 4e       	sbci	r31, 0xE4	; 228
    a356:	e4 91       	lpm	r30, Z
    a358:	01 30       	cpi	r16, 0x01	; 1
    a35a:	11 05       	cpc	r17, r1
    a35c:	f9 f0       	breq	.+62     	; 0xa39c <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x134>
    a35e:	10 f1       	brcs	.+68     	; 0xa3a4 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x13c>
    a360:	02 30       	cpi	r16, 0x02	; 2
    a362:	11 05       	cpc	r17, r1
    a364:	19 f1       	breq	.+70     	; 0xa3ac <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x144>
    a366:	df 91       	pop	r29
    a368:	cf 91       	pop	r28
    a36a:	1f 91       	pop	r17
    a36c:	0f 91       	pop	r16
    a36e:	ff 90       	pop	r15
    a370:	ef 90       	pop	r14
    a372:	08 95       	ret
    a374:	e0 95       	com	r30
    a376:	8c 91       	ld	r24, X
    a378:	e8 23       	and	r30, r24
    a37a:	ce cf       	rjmp	.-100    	; 0xa318 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xb0>
    a37c:	81 e0       	ldi	r24, 0x01	; 1
    a37e:	01 15       	cp	r16, r1
    a380:	11 05       	cpc	r17, r1
    a382:	09 f4       	brne	.+2      	; 0xa386 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x11e>
    a384:	80 e0       	ldi	r24, 0x00	; 0
    a386:	81 95       	neg	r24
    a388:	9e 2f       	mov	r25, r30
    a38a:	8c 93       	st	X, r24
    a38c:	2c 81       	ldd	r18, Y+4	; 0x04
    a38e:	3d 81       	ldd	r19, Y+5	; 0x05
    a390:	a2 0f       	add	r26, r18
    a392:	b3 1f       	adc	r27, r19
    a394:	98 50       	subi	r25, 0x08	; 8
    a396:	98 30       	cpi	r25, 0x08	; 8
    a398:	c0 f7       	brcc	.-16     	; 0xa38a <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x122>
    a39a:	d7 cf       	rjmp	.-82     	; 0xa34a <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xe2>
    a39c:	8c 91       	ld	r24, X
    a39e:	e8 2b       	or	r30, r24
    a3a0:	ec 93       	st	X, r30
    a3a2:	e1 cf       	rjmp	.-62     	; 0xa366 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    a3a4:	e0 95       	com	r30
    a3a6:	8c 91       	ld	r24, X
    a3a8:	e8 23       	and	r30, r24
    a3aa:	fa cf       	rjmp	.-12     	; 0xa3a0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x138>
    a3ac:	8c 91       	ld	r24, X
    a3ae:	e8 27       	eor	r30, r24
    a3b0:	f7 cf       	rjmp	.-18     	; 0xa3a0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x138>
    a3b2:	01 30       	cpi	r16, 0x01	; 1
    a3b4:	11 05       	cpc	r17, r1
    a3b6:	09 f4       	brne	.+2      	; 0xa3ba <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x152>
    a3b8:	ad cf       	rjmp	.-166    	; 0xa314 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xac>
    a3ba:	e0 f2       	brcs	.-72     	; 0xa374 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x10c>
    a3bc:	02 30       	cpi	r16, 0x02	; 2
    a3be:	11 05       	cpc	r17, r1
    a3c0:	09 f4       	brne	.+2      	; 0xa3c4 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x15c>
    a3c2:	a5 cf       	rjmp	.-182    	; 0xa30e <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xa6>
    a3c4:	ae 0d       	add	r26, r14
    a3c6:	bf 1d       	adc	r27, r15
    a3c8:	ae cf       	rjmp	.-164    	; 0xa326 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xbe>

0000a3ca <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130613drawFastHLineEiiij():
    a3ca:	0f 93       	push	r16
    a3cc:	1f 93       	push	r17
    a3ce:	fa 01       	movw	r30, r20
    a3d0:	dc 01       	movw	r26, r24
    a3d2:	56 96       	adiw	r26, 0x16	; 22
    a3d4:	4c 91       	ld	r20, X
    a3d6:	56 97       	sbiw	r26, 0x16	; 22
    a3d8:	42 30       	cpi	r20, 0x02	; 2
    a3da:	89 f0       	breq	.+34     	; 0xa3fe <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x34>
    a3dc:	43 30       	cpi	r20, 0x03	; 3
    a3de:	39 f1       	breq	.+78     	; 0xa42e <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x64>
    a3e0:	41 30       	cpi	r20, 0x01	; 1
    a3e2:	f9 f4       	brne	.+62     	; 0xa422 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x58>
    a3e4:	14 96       	adiw	r26, 0x04	; 4
    a3e6:	4d 91       	ld	r20, X+
    a3e8:	5c 91       	ld	r21, X
    a3ea:	da 01       	movw	r26, r20
    a3ec:	ae 1b       	sub	r26, r30
    a3ee:	bf 0b       	sbc	r27, r31
    a3f0:	fd 01       	movw	r30, r26
    a3f2:	31 97       	sbiw	r30, 0x01	; 1
    a3f4:	ab 01       	movw	r20, r22
    a3f6:	bf 01       	movw	r22, r30
    a3f8:	0e 94 34 51 	call	0xa268	; 0xa268 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)>
    a3fc:	15 c0       	rjmp	.+42     	; 0xa428 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x5e>
    a3fe:	16 96       	adiw	r26, 0x06	; 6
    a400:	4d 91       	ld	r20, X+
    a402:	5c 91       	ld	r21, X
    a404:	da 01       	movw	r26, r20
    a406:	ae 1b       	sub	r26, r30
    a408:	bf 0b       	sbc	r27, r31
    a40a:	fd 01       	movw	r30, r26
    a40c:	31 97       	sbiw	r30, 0x01	; 1
    a40e:	dc 01       	movw	r26, r24
    a410:	14 96       	adiw	r26, 0x04	; 4
    a412:	4d 91       	ld	r20, X+
    a414:	5c 91       	ld	r21, X
    a416:	da 01       	movw	r26, r20
    a418:	a6 1b       	sub	r26, r22
    a41a:	b7 0b       	sbc	r27, r23
    a41c:	bd 01       	movw	r22, r26
    a41e:	62 1b       	sub	r22, r18
    a420:	73 0b       	sbc	r23, r19
    a422:	af 01       	movw	r20, r30
    a424:	0e 94 c2 50 	call	0xa184	; 0xa184 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)>
    a428:	1f 91       	pop	r17
    a42a:	0f 91       	pop	r16
    a42c:	08 95       	ret
    a42e:	16 96       	adiw	r26, 0x06	; 6
    a430:	4d 91       	ld	r20, X+
    a432:	5c 91       	ld	r21, X
    a434:	da 01       	movw	r26, r20
    a436:	a6 1b       	sub	r26, r22
    a438:	b7 0b       	sbc	r27, r23
    a43a:	bd 01       	movw	r22, r26
    a43c:	62 1b       	sub	r22, r18
    a43e:	73 0b       	sbc	r23, r19
    a440:	d9 cf       	rjmp	.-78     	; 0xa3f4 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x2a>

0000a442 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130613drawFastVLineEiiij():
    a442:	0f 93       	push	r16
    a444:	1f 93       	push	r17
    a446:	fa 01       	movw	r30, r20
    a448:	dc 01       	movw	r26, r24
    a44a:	56 96       	adiw	r26, 0x16	; 22
    a44c:	4c 91       	ld	r20, X
    a44e:	56 97       	sbiw	r26, 0x16	; 22
    a450:	42 30       	cpi	r20, 0x02	; 2
    a452:	91 f0       	breq	.+36     	; 0xa478 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x36>
    a454:	43 30       	cpi	r20, 0x03	; 3
    a456:	49 f1       	breq	.+82     	; 0xa4aa <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x68>
    a458:	41 30       	cpi	r20, 0x01	; 1
    a45a:	09 f5       	brne	.+66     	; 0xa49e <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x5c>
    a45c:	14 96       	adiw	r26, 0x04	; 4
    a45e:	4d 91       	ld	r20, X+
    a460:	5c 91       	ld	r21, X
    a462:	da 01       	movw	r26, r20
    a464:	ae 1b       	sub	r26, r30
    a466:	bf 0b       	sbc	r27, r31
    a468:	fd 01       	movw	r30, r26
    a46a:	e2 1b       	sub	r30, r18
    a46c:	f3 0b       	sbc	r31, r19
    a46e:	ab 01       	movw	r20, r22
    a470:	bf 01       	movw	r22, r30
    a472:	0e 94 c2 50 	call	0xa184	; 0xa184 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)>
    a476:	16 c0       	rjmp	.+44     	; 0xa4a4 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x62>
    a478:	14 96       	adiw	r26, 0x04	; 4
    a47a:	4d 91       	ld	r20, X+
    a47c:	5c 91       	ld	r21, X
    a47e:	da 01       	movw	r26, r20
    a480:	a6 1b       	sub	r26, r22
    a482:	b7 0b       	sbc	r27, r23
    a484:	bd 01       	movw	r22, r26
    a486:	61 50       	subi	r22, 0x01	; 1
    a488:	71 09       	sbc	r23, r1
    a48a:	dc 01       	movw	r26, r24
    a48c:	16 96       	adiw	r26, 0x06	; 6
    a48e:	4d 91       	ld	r20, X+
    a490:	5c 91       	ld	r21, X
    a492:	da 01       	movw	r26, r20
    a494:	ae 1b       	sub	r26, r30
    a496:	bf 0b       	sbc	r27, r31
    a498:	fd 01       	movw	r30, r26
    a49a:	e2 1b       	sub	r30, r18
    a49c:	f3 0b       	sbc	r31, r19
    a49e:	af 01       	movw	r20, r30
    a4a0:	0e 94 34 51 	call	0xa268	; 0xa268 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)>
    a4a4:	1f 91       	pop	r17
    a4a6:	0f 91       	pop	r16
    a4a8:	08 95       	ret
    a4aa:	16 96       	adiw	r26, 0x06	; 6
    a4ac:	4d 91       	ld	r20, X+
    a4ae:	5c 91       	ld	r21, X
    a4b0:	da 01       	movw	r26, r20
    a4b2:	a6 1b       	sub	r26, r22
    a4b4:	b7 0b       	sbc	r27, r23
    a4b6:	bd 01       	movw	r22, r26
    a4b8:	61 50       	subi	r22, 0x01	; 1
    a4ba:	71 09       	sbc	r23, r1
    a4bc:	d8 cf       	rjmp	.-80     	; 0xa46e <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x2c>

0000a4be <Adafruit_SSD1306::display()>:
_ZN16Adafruit_SSD13067displayEv():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:991
    @return None (void).
    @note   Drawing operations are not visible until this function is
            called. Call after each graphics command, or after a whole set
            of graphics commands, as best needed by one's own application.
*/
void Adafruit_SSD1306::display(void) {
    a4be:	cf 92       	push	r12
    a4c0:	df 92       	push	r13
    a4c2:	ef 92       	push	r14
    a4c4:	ff 92       	push	r15
    a4c6:	0f 93       	push	r16
    a4c8:	1f 93       	push	r17
    a4ca:	cf 93       	push	r28
    a4cc:	df 93       	push	r29
    a4ce:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:992
  TRANSACTION_START
    a4d0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a4d2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a4d4:	00 97       	sbiw	r24, 0x00	; 0
    a4d6:	09 f4       	brne	.+2      	; 0xa4da <Adafruit_SSD1306::display()+0x1c>
    a4d8:	6e c0       	rjmp	.+220    	; 0xa5b6 <Adafruit_SSD1306::display()+0xf8>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:992 (discriminator 1)
    a4da:	4d a9       	ldd	r20, Y+53	; 0x35
    a4dc:	5e a9       	ldd	r21, Y+54	; 0x36
    a4de:	6f a9       	ldd	r22, Y+55	; 0x37
    a4e0:	78 ad       	ldd	r23, Y+56	; 0x38
    a4e2:	0e 94 56 54 	call	0xa8ac	; 0xa8ac <TwoWire::setClock(unsigned long)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:998
  static const uint8_t PROGMEM dlist1[] = {
      SSD1306_PAGEADDR,
      0,                      // Page start address
      0xFF,                   // Page end (not really, but works here)
      SSD1306_COLUMNADDR, 0}; // Column start address
  ssd1306_commandList(dlist1, sizeof(dlist1));
    a4e6:	45 e0       	ldi	r20, 0x05	; 5
    a4e8:	69 e8       	ldi	r22, 0x89	; 137
    a4ea:	7b e1       	ldi	r23, 0x1B	; 27
    a4ec:	ce 01       	movw	r24, r28
    a4ee:	0e 94 2c 4e 	call	0x9c58	; 0x9c58 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:999
  ssd1306_command1(WIDTH - 1); // Column end address
    a4f2:	6c 81       	ldd	r22, Y+4	; 0x04
    a4f4:	61 50       	subi	r22, 0x01	; 1
    a4f6:	ce 01       	movw	r24, r28
    a4f8:	0e 94 87 4d 	call	0x9b0e	; 0x9b0e <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1010
  // a screen write and one immediately after should cover it.  But if
  // not, if this becomes a problem, yields() might be added in the
  // 32-byte transfer condition below.
  yield();
#endif
  uint16_t count = WIDTH * ((HEIGHT + 7) / 8);
    a4fc:	2e 81       	ldd	r18, Y+6	; 0x06
    a4fe:	3f 81       	ldd	r19, Y+7	; 0x07
    a500:	c9 01       	movw	r24, r18
    a502:	07 96       	adiw	r24, 0x07	; 7
    a504:	97 fd       	sbrc	r25, 7
    a506:	07 96       	adiw	r24, 0x07	; 7
    a508:	23 e0       	ldi	r18, 0x03	; 3
    a50a:	95 95       	asr	r25
    a50c:	87 95       	ror	r24
    a50e:	2a 95       	dec	r18
    a510:	e1 f7       	brne	.-8      	; 0xa50a <Adafruit_SSD1306::display()+0x4c>
    a512:	2c 81       	ldd	r18, Y+4	; 0x04
    a514:	3d 81       	ldd	r19, Y+5	; 0x05
    a516:	82 9f       	mul	r24, r18
    a518:	70 01       	movw	r14, r0
    a51a:	83 9f       	mul	r24, r19
    a51c:	f0 0c       	add	r15, r0
    a51e:	92 9f       	mul	r25, r18
    a520:	f0 0c       	add	r15, r0
    a522:	11 24       	eor	r1, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1011
  uint8_t *ptr = buffer;
    a524:	0f 8d       	ldd	r16, Y+31	; 0x1f
    a526:	18 a1       	ldd	r17, Y+32	; 0x20
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1012
  if (wire) { // I2C
    a528:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a52a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a52c:	e0 0e       	add	r14, r16
    a52e:	f1 1e       	adc	r15, r17
    a530:	00 97       	sbiw	r24, 0x00	; 0
    a532:	09 f4       	brne	.+2      	; 0xa536 <Adafruit_SSD1306::display()+0x78>
    a534:	65 c0       	rjmp	.+202    	; 0xa600 <Adafruit_SSD1306::display()+0x142>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1013
    wire->beginTransmission(i2caddr);
    a536:	69 a1       	ldd	r22, Y+33	; 0x21
    a538:	06 2e       	mov	r0, r22
    a53a:	00 0c       	add	r0, r0
    a53c:	77 0b       	sbc	r23, r23
    a53e:	0e 94 64 54 	call	0xa8c8	; 0xa8c8 <TwoWire::beginTransmission(int)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1014
    WIRE_WRITE((uint8_t)0x40);
    a542:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a544:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a546:	dc 01       	movw	r26, r24
    a548:	ed 91       	ld	r30, X+
    a54a:	fc 91       	ld	r31, X
    a54c:	01 90       	ld	r0, Z+
    a54e:	f0 81       	ld	r31, Z
    a550:	e0 2d       	mov	r30, r0
    a552:	60 e4       	ldi	r22, 0x40	; 64
    a554:	09 95       	icall
    a556:	68 01       	movw	r12, r16
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1015
    uint16_t bytesOut = 1;
    a558:	01 e0       	ldi	r16, 0x01	; 1
    a55a:	10 e0       	ldi	r17, 0x00	; 0
    a55c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a55e:	9e 8d       	ldd	r25, Y+30	; 0x1e
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1016
    while (count--) {
    a560:	ec 14       	cp	r14, r12
    a562:	fd 04       	cpc	r15, r13
    a564:	c1 f1       	breq	.+112    	; 0xa5d6 <Adafruit_SSD1306::display()+0x118>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1017
      if (bytesOut >= WIRE_MAX) {
    a566:	00 32       	cpi	r16, 0x20	; 32
    a568:	11 05       	cpc	r17, r1
    a56a:	b0 f0       	brcs	.+44     	; 0xa598 <Adafruit_SSD1306::display()+0xda>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1018
        wire->endTransmission();
    a56c:	0e 94 df 54 	call	0xa9be	; 0xa9be <TwoWire::endTransmission()>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1019
        wire->beginTransmission(i2caddr);
    a570:	69 a1       	ldd	r22, Y+33	; 0x21
    a572:	06 2e       	mov	r0, r22
    a574:	00 0c       	add	r0, r0
    a576:	77 0b       	sbc	r23, r23
    a578:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a57a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a57c:	0e 94 64 54 	call	0xa8c8	; 0xa8c8 <TwoWire::beginTransmission(int)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1020
        WIRE_WRITE((uint8_t)0x40);
    a580:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a582:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a584:	dc 01       	movw	r26, r24
    a586:	ed 91       	ld	r30, X+
    a588:	fc 91       	ld	r31, X
    a58a:	01 90       	ld	r0, Z+
    a58c:	f0 81       	ld	r31, Z
    a58e:	e0 2d       	mov	r30, r0
    a590:	60 e4       	ldi	r22, 0x40	; 64
    a592:	09 95       	icall
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1021
        bytesOut = 1;
    a594:	01 e0       	ldi	r16, 0x01	; 1
    a596:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1023
      }
      WIRE_WRITE(*ptr++);
    a598:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a59a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a59c:	f6 01       	movw	r30, r12
    a59e:	61 91       	ld	r22, Z+
    a5a0:	6f 01       	movw	r12, r30
    a5a2:	dc 01       	movw	r26, r24
    a5a4:	ed 91       	ld	r30, X+
    a5a6:	fc 91       	ld	r31, X
    a5a8:	01 90       	ld	r0, Z+
    a5aa:	f0 81       	ld	r31, Z
    a5ac:	e0 2d       	mov	r30, r0
    a5ae:	09 95       	icall
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1024
      bytesOut++;
    a5b0:	0f 5f       	subi	r16, 0xFF	; 255
    a5b2:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1016
  uint8_t *ptr = buffer;
  if (wire) { // I2C
    wire->beginTransmission(i2caddr);
    WIRE_WRITE((uint8_t)0x40);
    uint16_t bytesOut = 1;
    while (count--) {
    a5b4:	d3 cf       	rjmp	.-90     	; 0xa55c <Adafruit_SSD1306::display()+0x9e>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:992 (discriminator 2)
    @note   Drawing operations are not visible until this function is
            called. Call after each graphics command, or after a whole set
            of graphics commands, as best needed by one's own application.
*/
void Adafruit_SSD1306::display(void) {
  TRANSACTION_START
    a5b6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    a5b8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    a5ba:	89 2b       	or	r24, r25
    a5bc:	21 f0       	breq	.+8      	; 0xa5c6 <Adafruit_SSD1306::display()+0x108>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:992 (discriminator 3)
    a5be:	8e ad       	ldd	r24, Y+62	; 0x3e
    a5c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    a5c2:	0e 94 0f 4d 	call	0x9a1e	; 0x9a1e <SPIClass::beginTransaction(SPISettings)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:992 (discriminator 5)
    a5c6:	ef a5       	ldd	r30, Y+47	; 0x2f
    a5c8:	f8 a9       	ldd	r31, Y+48	; 0x30
    a5ca:	90 81       	ld	r25, Z
    a5cc:	8c a9       	ldd	r24, Y+52	; 0x34
    a5ce:	80 95       	com	r24
    a5d0:	89 23       	and	r24, r25
    a5d2:	80 83       	st	Z, r24
    a5d4:	88 cf       	rjmp	.-240    	; 0xa4e6 <Adafruit_SSD1306::display()+0x28>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1026
        bytesOut = 1;
      }
      WIRE_WRITE(*ptr++);
      bytesOut++;
    }
    wire->endTransmission();
    a5d6:	0e 94 df 54 	call	0xa9be	; 0xa9be <TwoWire::endTransmission()>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1032
  } else { // SPI
    SSD1306_MODE_DATA
    while (count--)
      SPIwrite(*ptr++);
  }
  TRANSACTION_END
    a5da:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a5dc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a5de:	00 97       	sbiw	r24, 0x00	; 0
    a5e0:	09 f4       	brne	.+2      	; 0xa5e4 <Adafruit_SSD1306::display()+0x126>
    a5e2:	43 c0       	rjmp	.+134    	; 0xa66a <Adafruit_SSD1306::display()+0x1ac>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1032 (discriminator 1)
    a5e4:	49 ad       	ldd	r20, Y+57	; 0x39
    a5e6:	5a ad       	ldd	r21, Y+58	; 0x3a
    a5e8:	6b ad       	ldd	r22, Y+59	; 0x3b
    a5ea:	7c ad       	ldd	r23, Y+60	; 0x3c
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1036 (discriminator 1)
#if defined(ESP8266)
  yield();
#endif
}
    a5ec:	df 91       	pop	r29
    a5ee:	cf 91       	pop	r28
    a5f0:	1f 91       	pop	r17
    a5f2:	0f 91       	pop	r16
    a5f4:	ff 90       	pop	r15
    a5f6:	ef 90       	pop	r14
    a5f8:	df 90       	pop	r13
    a5fa:	cf 90       	pop	r12
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1032 (discriminator 1)
  } else { // SPI
    SSD1306_MODE_DATA
    while (count--)
      SPIwrite(*ptr++);
  }
  TRANSACTION_END
    a5fc:	0c 94 56 54 	jmp	0xa8ac	; 0xa8ac <TwoWire::setClock(unsigned long)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1028
      WIRE_WRITE(*ptr++);
      bytesOut++;
    }
    wire->endTransmission();
  } else { // SPI
    SSD1306_MODE_DATA
    a600:	ed a5       	ldd	r30, Y+45	; 0x2d
    a602:	fe a5       	ldd	r31, Y+46	; 0x2e
    a604:	80 81       	ld	r24, Z
    a606:	9b a9       	ldd	r25, Y+51	; 0x33
    a608:	89 2b       	or	r24, r25
    a60a:	80 83       	st	Z, r24
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1029
    while (count--)
    a60c:	e0 16       	cp	r14, r16
    a60e:	f1 06       	cpc	r15, r17
    a610:	21 f3       	breq	.-56     	; 0xa5da <Adafruit_SSD1306::display()+0x11c>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1030
      SPIwrite(*ptr++);
    a612:	f8 01       	movw	r30, r16
    a614:	81 91       	ld	r24, Z+
    a616:	8f 01       	movw	r16, r30
_ZN16Adafruit_SSD13068SPIwriteEh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:359
    @return void
    @note   See HAVE_PORTREG which defines if the method uses a port or bit-bang
   method
*/
inline void Adafruit_SSD1306::SPIwrite(uint8_t d) {
  if (spi) {
    a618:	2b 8d       	ldd	r18, Y+27	; 0x1b
    a61a:	3c 8d       	ldd	r19, Y+28	; 0x1c
    a61c:	23 2b       	or	r18, r19
    a61e:	19 f0       	breq	.+6      	; 0xa626 <Adafruit_SSD1306::display()+0x168>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:360
    (void)spi->transfer(d);
    a620:	0e 94 29 4d 	call	0x9a52	; 0x9a52 <SPIClass::transfer(unsigned char)>
    a624:	f3 cf       	rjmp	.-26     	; 0xa60c <Adafruit_SSD1306::display()+0x14e>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:359
    @return void
    @note   See HAVE_PORTREG which defines if the method uses a port or bit-bang
   method
*/
inline void Adafruit_SSD1306::SPIwrite(uint8_t d) {
  if (spi) {
    a626:	28 e0       	ldi	r18, 0x08	; 8
    a628:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:362
    (void)spi->transfer(d);
  } else {
    for (uint8_t bit = 0x80; bit; bit >>= 1) {
    a62a:	40 e8       	ldi	r20, 0x80	; 128
    a62c:	e9 a5       	ldd	r30, Y+41	; 0x29
    a62e:	fa a5       	ldd	r31, Y+42	; 0x2a
    a630:	99 a9       	ldd	r25, Y+49	; 0x31
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:364
#ifdef HAVE_PORTREG
      if (d & bit)
    a632:	58 2f       	mov	r21, r24
    a634:	54 23       	and	r21, r20
    a636:	a9 f0       	breq	.+42     	; 0xa662 <Adafruit_SSD1306::display()+0x1a4>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:365
        *mosiPort |= mosiPinMask;
    a638:	50 81       	ld	r21, Z
    a63a:	95 2b       	or	r25, r21
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:367
      else
        *mosiPort &= ~mosiPinMask;
    a63c:	90 83       	st	Z, r25
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:368
      *clkPort |= clkPinMask;  // Clock high
    a63e:	eb a5       	ldd	r30, Y+43	; 0x2b
    a640:	fc a5       	ldd	r31, Y+44	; 0x2c
    a642:	90 81       	ld	r25, Z
    a644:	5a a9       	ldd	r21, Y+50	; 0x32
    a646:	95 2b       	or	r25, r21
    a648:	90 83       	st	Z, r25
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:369
      *clkPort &= ~clkPinMask; // Clock low
    a64a:	eb a5       	ldd	r30, Y+43	; 0x2b
    a64c:	fc a5       	ldd	r31, Y+44	; 0x2c
    a64e:	50 81       	ld	r21, Z
    a650:	9a a9       	ldd	r25, Y+50	; 0x32
    a652:	90 95       	com	r25
    a654:	95 23       	and	r25, r21
    a656:	90 83       	st	Z, r25
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:362
*/
inline void Adafruit_SSD1306::SPIwrite(uint8_t d) {
  if (spi) {
    (void)spi->transfer(d);
  } else {
    for (uint8_t bit = 0x80; bit; bit >>= 1) {
    a658:	46 95       	lsr	r20
    a65a:	21 50       	subi	r18, 0x01	; 1
    a65c:	31 09       	sbc	r19, r1
    a65e:	31 f7       	brne	.-52     	; 0xa62c <Adafruit_SSD1306::display()+0x16e>
    a660:	d5 cf       	rjmp	.-86     	; 0xa60c <Adafruit_SSD1306::display()+0x14e>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:367
#ifdef HAVE_PORTREG
      if (d & bit)
        *mosiPort |= mosiPinMask;
      else
        *mosiPort &= ~mosiPinMask;
    a662:	50 81       	ld	r21, Z
    a664:	90 95       	com	r25
    a666:	95 23       	and	r25, r21
    a668:	e9 cf       	rjmp	.-46     	; 0xa63c <Adafruit_SSD1306::display()+0x17e>
_ZN16Adafruit_SSD13067displayEv():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1032 (discriminator 2)
  } else { // SPI
    SSD1306_MODE_DATA
    while (count--)
      SPIwrite(*ptr++);
  }
  TRANSACTION_END
    a66a:	ef a5       	ldd	r30, Y+47	; 0x2f
    a66c:	f8 a9       	ldd	r31, Y+48	; 0x30
    a66e:	80 81       	ld	r24, Z
    a670:	9c a9       	ldd	r25, Y+52	; 0x34
    a672:	89 2b       	or	r24, r25
    a674:	80 83       	st	Z, r24
    a676:	8b 8d       	ldd	r24, Y+27	; 0x1b
    a678:	9c 8d       	ldd	r25, Y+28	; 0x1c
    a67a:	89 2b       	or	r24, r25
    a67c:	51 f0       	breq	.+20     	; 0xa692 <Adafruit_SSD1306::display()+0x1d4>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1036 (discriminator 3)
#if defined(ESP8266)
  yield();
#endif
}
    a67e:	df 91       	pop	r29
    a680:	cf 91       	pop	r28
    a682:	1f 91       	pop	r17
    a684:	0f 91       	pop	r16
    a686:	ff 90       	pop	r15
    a688:	ef 90       	pop	r14
    a68a:	df 90       	pop	r13
    a68c:	cf 90       	pop	r12
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1032 (discriminator 3)
  } else { // SPI
    SSD1306_MODE_DATA
    while (count--)
      SPIwrite(*ptr++);
  }
  TRANSACTION_END
    a68e:	0c 94 4f 4c 	jmp	0x989e	; 0x989e <SPIClass::endTransaction()>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1036
#if defined(ESP8266)
  yield();
#endif
}
    a692:	df 91       	pop	r29
    a694:	cf 91       	pop	r28
    a696:	1f 91       	pop	r17
    a698:	0f 91       	pop	r16
    a69a:	ff 90       	pop	r15
    a69c:	ef 90       	pop	r14
    a69e:	df 90       	pop	r13
    a6a0:	cf 90       	pop	r12
    a6a2:	08 95       	ret

0000a6a4 <SPIClass::begin()>:
_ZN8SPIClass5beginEv():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:27
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
    a6a4:	cf 93       	push	r28
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:28
  uint8_t sreg = SREG;
    a6a6:	cf b7       	in	r28, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:29
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
    a6a8:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:30
  if (!initialized) {
    a6aa:	80 91 c5 09 	lds	r24, 0x09C5	; 0x8009c5 <SPIClass::initialized>
    a6ae:	81 11       	cpse	r24, r1
    a6b0:	27 c0       	rjmp	.+78     	; 0xa700 <SPIClass::begin()+0x5c>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:32
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
    a6b2:	e4 e9       	ldi	r30, 0x94	; 148
    a6b4:	f0 e2       	ldi	r31, 0x20	; 32
    a6b6:	84 91       	lpm	r24, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:33
    uint8_t bit = digitalPinToBitMask(SS);
    a6b8:	e4 e7       	ldi	r30, 0x74	; 116
    a6ba:	f0 e2       	ldi	r31, 0x20	; 32
    a6bc:	94 91       	lpm	r25, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:34
    volatile uint8_t *reg = portModeRegister(port);
    a6be:	e8 2f       	mov	r30, r24
    a6c0:	f0 e0       	ldi	r31, 0x00	; 0
    a6c2:	ee 0f       	add	r30, r30
    a6c4:	ff 1f       	adc	r31, r31
    a6c6:	ec 53       	subi	r30, 0x3C	; 60
    a6c8:	ff 4d       	sbci	r31, 0xDF	; 223
    a6ca:	a5 91       	lpm	r26, Z+
    a6cc:	b4 91       	lpm	r27, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:38

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
    a6ce:	ec 91       	ld	r30, X
    a6d0:	e9 23       	and	r30, r25
    a6d2:	21 f4       	brne	.+8      	; 0xa6dc <SPIClass::begin()+0x38>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:39
      digitalWrite(SS, HIGH);
    a6d4:	61 e0       	ldi	r22, 0x01	; 1
    a6d6:	84 e0       	ldi	r24, 0x04	; 4
    a6d8:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:45
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
    a6dc:	61 e0       	ldi	r22, 0x01	; 1
    a6de:	84 e0       	ldi	r24, 0x04	; 4
    a6e0:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:50

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
    a6e4:	8c b5       	in	r24, 0x2c	; 44
    a6e6:	80 61       	ori	r24, 0x10	; 16
    a6e8:	8c bd       	out	0x2c, r24	; 44
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:51
    SPCR |= _BV(SPE);
    a6ea:	8c b5       	in	r24, 0x2c	; 44
    a6ec:	80 64       	ori	r24, 0x40	; 64
    a6ee:	8c bd       	out	0x2c, r24	; 44
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:59
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
    a6f0:	61 e0       	ldi	r22, 0x01	; 1
    a6f2:	87 e0       	ldi	r24, 0x07	; 7
    a6f4:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:60
    pinMode(MOSI, OUTPUT);
    a6f8:	61 e0       	ldi	r22, 0x01	; 1
    a6fa:	85 e0       	ldi	r24, 0x05	; 5
    a6fc:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:62
  }
  initialized++; // reference count
    a700:	80 91 c5 09 	lds	r24, 0x09C5	; 0x8009c5 <SPIClass::initialized>
    a704:	8f 5f       	subi	r24, 0xFF	; 255
    a706:	80 93 c5 09 	sts	0x09C5, r24	; 0x8009c5 <SPIClass::initialized>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:63
  SREG = sreg;
    a70a:	cf bf       	out	0x3f, r28	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:64
}
    a70c:	cf 91       	pop	r28
    a70e:	08 95       	ret

0000a710 <TwoWire::available()>:
_ZN7TwoWire9availableEv():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src/Wire.cpp:329

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
}
    a710:	80 91 fa 09 	lds	r24, 0x09FA	; 0x8009fa <TwoWire::rxBufferLength>
    a714:	90 91 fb 09 	lds	r25, 0x09FB	; 0x8009fb <TwoWire::rxBufferIndex>
    a718:	89 1b       	sub	r24, r25
    a71a:	99 0b       	sbc	r25, r25
    a71c:	08 95       	ret

0000a71e <TwoWire::read()>:
_ZN7TwoWire4readEv():
    a71e:	90 91 fb 09 	lds	r25, 0x09FB	; 0x8009fb <TwoWire::rxBufferIndex>
    a722:	80 91 fa 09 	lds	r24, 0x09FA	; 0x8009fa <TwoWire::rxBufferLength>
    a726:	2f ef       	ldi	r18, 0xFF	; 255
    a728:	3f ef       	ldi	r19, 0xFF	; 255
    a72a:	98 17       	cp	r25, r24
    a72c:	48 f4       	brcc	.+18     	; 0xa740 <TwoWire::read()+0x22>
    a72e:	e9 2f       	mov	r30, r25
    a730:	f0 e0       	ldi	r31, 0x00	; 0
    a732:	e4 50       	subi	r30, 0x04	; 4
    a734:	f6 4f       	sbci	r31, 0xF6	; 246
    a736:	20 81       	ld	r18, Z
    a738:	30 e0       	ldi	r19, 0x00	; 0
    a73a:	9f 5f       	subi	r25, 0xFF	; 255
    a73c:	90 93 fb 09 	sts	0x09FB, r25	; 0x8009fb <TwoWire::rxBufferIndex>
    a740:	c9 01       	movw	r24, r18
    a742:	08 95       	ret

0000a744 <TwoWire::peek()>:
_ZN7TwoWire4peekEv():
    a744:	e0 91 fb 09 	lds	r30, 0x09FB	; 0x8009fb <TwoWire::rxBufferIndex>
    a748:	80 91 fa 09 	lds	r24, 0x09FA	; 0x8009fa <TwoWire::rxBufferLength>
    a74c:	e8 17       	cp	r30, r24
    a74e:	30 f4       	brcc	.+12     	; 0xa75c <TwoWire::peek()+0x18>
    a750:	f0 e0       	ldi	r31, 0x00	; 0
    a752:	e4 50       	subi	r30, 0x04	; 4
    a754:	f6 4f       	sbci	r31, 0xF6	; 246
    a756:	80 81       	ld	r24, Z
    a758:	90 e0       	ldi	r25, 0x00	; 0
    a75a:	08 95       	ret
    a75c:	8f ef       	ldi	r24, 0xFF	; 255
    a75e:	9f ef       	ldi	r25, 0xFF	; 255
    a760:	08 95       	ret

0000a762 <TwoWire::flush()>:
_ZN7TwoWire5flushEv():
    a762:	08 95       	ret

0000a764 <TwoWire::onReceiveService(unsigned char*, int)>:
_ZN7TwoWire16onReceiveServiceEPhi():
    a764:	cf 93       	push	r28
    a766:	df 93       	push	r29
    a768:	ec 01       	movw	r28, r24
    a76a:	e0 91 d2 09 	lds	r30, 0x09D2	; 0x8009d2 <TwoWire::user_onReceive>
    a76e:	f0 91 d3 09 	lds	r31, 0x09D3	; 0x8009d3 <TwoWire::user_onReceive+0x1>
    a772:	30 97       	sbiw	r30, 0x00	; 0
    a774:	f1 f0       	breq	.+60     	; 0xa7b2 <TwoWire::onReceiveService(unsigned char*, int)+0x4e>
    a776:	90 91 fb 09 	lds	r25, 0x09FB	; 0x8009fb <TwoWire::rxBufferIndex>
    a77a:	80 91 fa 09 	lds	r24, 0x09FA	; 0x8009fa <TwoWire::rxBufferLength>
    a77e:	98 17       	cp	r25, r24
    a780:	c0 f0       	brcs	.+48     	; 0xa7b2 <TwoWire::onReceiveService(unsigned char*, int)+0x4e>
    a782:	90 e0       	ldi	r25, 0x00	; 0
    a784:	29 2f       	mov	r18, r25
    a786:	30 e0       	ldi	r19, 0x00	; 0
    a788:	26 17       	cp	r18, r22
    a78a:	37 07       	cpc	r19, r23
    a78c:	54 f4       	brge	.+20     	; 0xa7a2 <TwoWire::onReceiveService(unsigned char*, int)+0x3e>
    a78e:	de 01       	movw	r26, r28
    a790:	a2 0f       	add	r26, r18
    a792:	b3 1f       	adc	r27, r19
    a794:	4c 91       	ld	r20, X
    a796:	24 50       	subi	r18, 0x04	; 4
    a798:	36 4f       	sbci	r19, 0xF6	; 246
    a79a:	d9 01       	movw	r26, r18
    a79c:	4c 93       	st	X, r20
    a79e:	9f 5f       	subi	r25, 0xFF	; 255
    a7a0:	f1 cf       	rjmp	.-30     	; 0xa784 <TwoWire::onReceiveService(unsigned char*, int)+0x20>
    a7a2:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <TwoWire::rxBufferIndex>
    a7a6:	60 93 fa 09 	sts	0x09FA, r22	; 0x8009fa <TwoWire::rxBufferLength>
    a7aa:	cb 01       	movw	r24, r22
    a7ac:	df 91       	pop	r29
    a7ae:	cf 91       	pop	r28
    a7b0:	09 94       	ijmp
    a7b2:	df 91       	pop	r29
    a7b4:	cf 91       	pop	r28
    a7b6:	08 95       	ret

0000a7b8 <TwoWire::onRequestService()>:
_ZN7TwoWire16onRequestServiceEv():
    a7b8:	e0 91 d4 09 	lds	r30, 0x09D4	; 0x8009d4 <TwoWire::user_onRequest>
    a7bc:	f0 91 d5 09 	lds	r31, 0x09D5	; 0x8009d5 <TwoWire::user_onRequest+0x1>
    a7c0:	30 97       	sbiw	r30, 0x00	; 0
    a7c2:	29 f0       	breq	.+10     	; 0xa7ce <TwoWire::onRequestService()+0x16>
    a7c4:	10 92 d8 09 	sts	0x09D8, r1	; 0x8009d8 <TwoWire::txBufferIndex>
    a7c8:	10 92 d7 09 	sts	0x09D7, r1	; 0x8009d7 <TwoWire::txBufferLength>
    a7cc:	09 94       	ijmp
    a7ce:	08 95       	ret

0000a7d0 <TwoWire::write(unsigned char)>:
_ZN7TwoWire5writeEh():
    a7d0:	cf 93       	push	r28
    a7d2:	df 93       	push	r29
    a7d4:	1f 92       	push	r1
    a7d6:	cd b7       	in	r28, 0x3d	; 61
    a7d8:	de b7       	in	r29, 0x3e	; 62
    a7da:	69 83       	std	Y+1, r22	; 0x01
    a7dc:	20 91 d6 09 	lds	r18, 0x09D6	; 0x8009d6 <TwoWire::transmitting>
    a7e0:	22 23       	and	r18, r18
    a7e2:	f9 f0       	breq	.+62     	; 0xa822 <TwoWire::write(unsigned char)+0x52>
    a7e4:	20 91 d7 09 	lds	r18, 0x09D7	; 0x8009d7 <TwoWire::txBufferLength>
    a7e8:	20 32       	cpi	r18, 0x20	; 32
    a7ea:	58 f0       	brcs	.+22     	; 0xa802 <TwoWire::write(unsigned char)+0x32>
_ZN5Print13setWriteErrorEi():
    a7ec:	21 e0       	ldi	r18, 0x01	; 1
    a7ee:	30 e0       	ldi	r19, 0x00	; 0
    a7f0:	fc 01       	movw	r30, r24
    a7f2:	33 83       	std	Z+3, r19	; 0x03
    a7f4:	22 83       	std	Z+2, r18	; 0x02
_ZN7TwoWire5writeEh():
    a7f6:	90 e0       	ldi	r25, 0x00	; 0
    a7f8:	80 e0       	ldi	r24, 0x00	; 0
    a7fa:	0f 90       	pop	r0
    a7fc:	df 91       	pop	r29
    a7fe:	cf 91       	pop	r28
    a800:	08 95       	ret
    a802:	80 91 d8 09 	lds	r24, 0x09D8	; 0x8009d8 <TwoWire::txBufferIndex>
    a806:	e8 2f       	mov	r30, r24
    a808:	f0 e0       	ldi	r31, 0x00	; 0
    a80a:	e7 52       	subi	r30, 0x27	; 39
    a80c:	f6 4f       	sbci	r31, 0xF6	; 246
    a80e:	99 81       	ldd	r25, Y+1	; 0x01
    a810:	90 83       	st	Z, r25
    a812:	8f 5f       	subi	r24, 0xFF	; 255
    a814:	80 93 d8 09 	sts	0x09D8, r24	; 0x8009d8 <TwoWire::txBufferIndex>
    a818:	80 93 d7 09 	sts	0x09D7, r24	; 0x8009d7 <TwoWire::txBufferLength>
    a81c:	81 e0       	ldi	r24, 0x01	; 1
    a81e:	90 e0       	ldi	r25, 0x00	; 0
    a820:	ec cf       	rjmp	.-40     	; 0xa7fa <TwoWire::write(unsigned char)+0x2a>
    a822:	61 e0       	ldi	r22, 0x01	; 1
    a824:	ce 01       	movw	r24, r28
    a826:	01 96       	adiw	r24, 0x01	; 1
    a828:	0e 94 c3 55 	call	0xab86	; 0xab86 <twi_transmit>
    a82c:	f7 cf       	rjmp	.-18     	; 0xa81c <TwoWire::write(unsigned char)+0x4c>

0000a82e <TwoWire::write(unsigned char const*, unsigned int)>:
_ZN7TwoWire5writeEPKhj():
    a82e:	cf 92       	push	r12
    a830:	df 92       	push	r13
    a832:	ef 92       	push	r14
    a834:	ff 92       	push	r15
    a836:	0f 93       	push	r16
    a838:	1f 93       	push	r17
    a83a:	cf 93       	push	r28
    a83c:	df 93       	push	r29
    a83e:	7c 01       	movw	r14, r24
    a840:	cb 01       	movw	r24, r22
    a842:	8a 01       	movw	r16, r20
    a844:	20 91 d6 09 	lds	r18, 0x09D6	; 0x8009d6 <TwoWire::transmitting>
    a848:	22 23       	and	r18, r18
    a84a:	89 f0       	breq	.+34     	; 0xa86e <TwoWire::write(unsigned char const*, unsigned int)+0x40>
    a84c:	eb 01       	movw	r28, r22
    a84e:	6b 01       	movw	r12, r22
    a850:	c4 0e       	add	r12, r20
    a852:	d5 1e       	adc	r13, r21
    a854:	cc 15       	cp	r28, r12
    a856:	dd 05       	cpc	r29, r13
    a858:	69 f0       	breq	.+26     	; 0xa874 <TwoWire::write(unsigned char const*, unsigned int)+0x46>
    a85a:	69 91       	ld	r22, Y+
    a85c:	d7 01       	movw	r26, r14
    a85e:	ed 91       	ld	r30, X+
    a860:	fc 91       	ld	r31, X
    a862:	01 90       	ld	r0, Z+
    a864:	f0 81       	ld	r31, Z
    a866:	e0 2d       	mov	r30, r0
    a868:	c7 01       	movw	r24, r14
    a86a:	09 95       	icall
    a86c:	f3 cf       	rjmp	.-26     	; 0xa854 <TwoWire::write(unsigned char const*, unsigned int)+0x26>
    a86e:	64 2f       	mov	r22, r20
    a870:	0e 94 c3 55 	call	0xab86	; 0xab86 <twi_transmit>
    a874:	c8 01       	movw	r24, r16
    a876:	df 91       	pop	r29
    a878:	cf 91       	pop	r28
    a87a:	1f 91       	pop	r17
    a87c:	0f 91       	pop	r16
    a87e:	ff 90       	pop	r15
    a880:	ef 90       	pop	r14
    a882:	df 90       	pop	r13
    a884:	cf 90       	pop	r12
    a886:	08 95       	ret

0000a888 <TwoWire::begin()>:
_ZN7TwoWire5beginEv():
    a888:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <TwoWire::rxBufferIndex>
    a88c:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <TwoWire::rxBufferLength>
    a890:	10 92 d8 09 	sts	0x09D8, r1	; 0x8009d8 <TwoWire::txBufferIndex>
    a894:	10 92 d7 09 	sts	0x09D7, r1	; 0x8009d7 <TwoWire::txBufferLength>
    a898:	0e 94 f3 54 	call	0xa9e6	; 0xa9e6 <twi_init>
    a89c:	8c ed       	ldi	r24, 0xDC	; 220
    a89e:	93 e5       	ldi	r25, 0x53	; 83
    a8a0:	0e 94 ef 55 	call	0xabde	; 0xabde <twi_attachSlaveTxEvent>
    a8a4:	82 eb       	ldi	r24, 0xB2	; 178
    a8a6:	93 e5       	ldi	r25, 0x53	; 83
    a8a8:	0c 94 ea 55 	jmp	0xabd4	; 0xabd4 <twi_attachSlaveRxEvent>

0000a8ac <TwoWire::setClock(unsigned long)>:
_ZN7TwoWire8setClockEm():
    a8ac:	cb 01       	movw	r24, r22
    a8ae:	ba 01       	movw	r22, r20
    a8b0:	0c 94 11 55 	jmp	0xaa22	; 0xaa22 <twi_setFrequency>

0000a8b4 <TwoWire::beginTransmission(unsigned char)>:
_ZN7TwoWire17beginTransmissionEh():
    a8b4:	81 e0       	ldi	r24, 0x01	; 1
    a8b6:	80 93 d6 09 	sts	0x09D6, r24	; 0x8009d6 <TwoWire::transmitting>
    a8ba:	60 93 f9 09 	sts	0x09F9, r22	; 0x8009f9 <TwoWire::txAddress>
    a8be:	10 92 d8 09 	sts	0x09D8, r1	; 0x8009d8 <TwoWire::txBufferIndex>
    a8c2:	10 92 d7 09 	sts	0x09D7, r1	; 0x8009d7 <TwoWire::txBufferLength>
    a8c6:	08 95       	ret

0000a8c8 <TwoWire::beginTransmission(int)>:
_ZN7TwoWire17beginTransmissionEi():
    a8c8:	0c 94 5a 54 	jmp	0xa8b4	; 0xa8b4 <TwoWire::beginTransmission(unsigned char)>

0000a8cc <TwoWire::endTransmission(unsigned char)>:
_ZN7TwoWire15endTransmissionEh():
    a8cc:	0f 93       	push	r16
    a8ce:	06 2f       	mov	r16, r22
    a8d0:	21 e0       	ldi	r18, 0x01	; 1
    a8d2:	40 91 d7 09 	lds	r20, 0x09D7	; 0x8009d7 <TwoWire::txBufferLength>
    a8d6:	69 ed       	ldi	r22, 0xD9	; 217
    a8d8:	79 e0       	ldi	r23, 0x09	; 9
    a8da:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <TwoWire::txAddress>
    a8de:	0e 94 6c 55 	call	0xaad8	; 0xaad8 <twi_writeTo>
    a8e2:	10 92 d8 09 	sts	0x09D8, r1	; 0x8009d8 <TwoWire::txBufferIndex>
    a8e6:	10 92 d7 09 	sts	0x09D7, r1	; 0x8009d7 <TwoWire::txBufferLength>
    a8ea:	10 92 d6 09 	sts	0x09D6, r1	; 0x8009d6 <TwoWire::transmitting>
    a8ee:	0f 91       	pop	r16
    a8f0:	08 95       	ret

0000a8f2 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)>:
_ZN7TwoWire11requestFromEhhmhh():
    a8f2:	4f 92       	push	r4
    a8f4:	5f 92       	push	r5
    a8f6:	6f 92       	push	r6
    a8f8:	7f 92       	push	r7
    a8fa:	af 92       	push	r10
    a8fc:	bf 92       	push	r11
    a8fe:	cf 92       	push	r12
    a900:	ef 92       	push	r14
    a902:	ff 92       	push	r15
    a904:	0f 93       	push	r16
    a906:	1f 93       	push	r17
    a908:	cf 93       	push	r28
    a90a:	df 93       	push	r29
    a90c:	5c 01       	movw	r10, r24
    a90e:	f6 2e       	mov	r15, r22
    a910:	d4 2f       	mov	r29, r20
    a912:	28 01       	movw	r4, r16
    a914:	39 01       	movw	r6, r18
    a916:	ee 20       	and	r14, r14
    a918:	19 f1       	breq	.+70     	; 0xa960 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x6e>
    a91a:	0e 94 5a 54 	call	0xa8b4	; 0xa8b4 <TwoWire::beginTransmission(unsigned char)>
    a91e:	ce 2d       	mov	r28, r14
    a920:	c4 30       	cpi	r28, 0x04	; 4
    a922:	08 f0       	brcs	.+2      	; 0xa926 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x34>
    a924:	c3 e0       	ldi	r28, 0x03	; 3
    a926:	c1 50       	subi	r28, 0x01	; 1
    a928:	b8 f0       	brcs	.+46     	; 0xa958 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x66>
    a92a:	28 e0       	ldi	r18, 0x08	; 8
    a92c:	c2 9f       	mul	r28, r18
    a92e:	c0 01       	movw	r24, r0
    a930:	11 24       	eor	r1, r1
    a932:	a3 01       	movw	r20, r6
    a934:	92 01       	movw	r18, r4
    a936:	04 c0       	rjmp	.+8      	; 0xa940 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x4e>
    a938:	56 95       	lsr	r21
    a93a:	47 95       	ror	r20
    a93c:	37 95       	ror	r19
    a93e:	27 95       	ror	r18
    a940:	8a 95       	dec	r24
    a942:	d2 f7       	brpl	.-12     	; 0xa938 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x46>
    a944:	b9 01       	movw	r22, r18
    a946:	d5 01       	movw	r26, r10
    a948:	ed 91       	ld	r30, X+
    a94a:	fc 91       	ld	r31, X
    a94c:	01 90       	ld	r0, Z+
    a94e:	f0 81       	ld	r31, Z
    a950:	e0 2d       	mov	r30, r0
    a952:	c5 01       	movw	r24, r10
    a954:	09 95       	icall
    a956:	e7 cf       	rjmp	.-50     	; 0xa926 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x34>
    a958:	60 e0       	ldi	r22, 0x00	; 0
    a95a:	c5 01       	movw	r24, r10
    a95c:	0e 94 66 54 	call	0xa8cc	; 0xa8cc <TwoWire::endTransmission(unsigned char)>
    a960:	4d 2f       	mov	r20, r29
    a962:	d1 32       	cpi	r29, 0x21	; 33
    a964:	08 f0       	brcs	.+2      	; 0xa968 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x76>
    a966:	40 e2       	ldi	r20, 0x20	; 32
    a968:	2c 2d       	mov	r18, r12
    a96a:	6c ef       	ldi	r22, 0xFC	; 252
    a96c:	79 e0       	ldi	r23, 0x09	; 9
    a96e:	8f 2d       	mov	r24, r15
    a970:	0e 94 24 55 	call	0xaa48	; 0xaa48 <twi_readFrom>
    a974:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <TwoWire::rxBufferIndex>
    a978:	80 93 fa 09 	sts	0x09FA, r24	; 0x8009fa <TwoWire::rxBufferLength>
    a97c:	df 91       	pop	r29
    a97e:	cf 91       	pop	r28
    a980:	1f 91       	pop	r17
    a982:	0f 91       	pop	r16
    a984:	ff 90       	pop	r15
    a986:	ef 90       	pop	r14
    a988:	cf 90       	pop	r12
    a98a:	bf 90       	pop	r11
    a98c:	af 90       	pop	r10
    a98e:	7f 90       	pop	r7
    a990:	6f 90       	pop	r6
    a992:	5f 90       	pop	r5
    a994:	4f 90       	pop	r4
    a996:	08 95       	ret

0000a998 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)>:
_ZN7TwoWire11requestFromEhhh():
    a998:	cf 92       	push	r12
    a99a:	ef 92       	push	r14
    a99c:	0f 93       	push	r16
    a99e:	1f 93       	push	r17
    a9a0:	c2 2e       	mov	r12, r18
    a9a2:	e1 2c       	mov	r14, r1
    a9a4:	00 e0       	ldi	r16, 0x00	; 0
    a9a6:	10 e0       	ldi	r17, 0x00	; 0
    a9a8:	98 01       	movw	r18, r16
    a9aa:	0e 94 79 54 	call	0xa8f2	; 0xa8f2 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)>
    a9ae:	1f 91       	pop	r17
    a9b0:	0f 91       	pop	r16
    a9b2:	ef 90       	pop	r14
    a9b4:	cf 90       	pop	r12
    a9b6:	08 95       	ret

0000a9b8 <TwoWire::requestFrom(unsigned char, unsigned char)>:
_ZN7TwoWire11requestFromEhh():
    a9b8:	21 e0       	ldi	r18, 0x01	; 1
    a9ba:	0c 94 cc 54 	jmp	0xa998	; 0xa998 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)>

0000a9be <TwoWire::endTransmission()>:
_ZN7TwoWire15endTransmissionEv():
    a9be:	61 e0       	ldi	r22, 0x01	; 1
    a9c0:	0c 94 66 54 	jmp	0xa8cc	; 0xa8cc <TwoWire::endTransmission(unsigned char)>

0000a9c4 <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
_ZN5PrintC4Ev():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.h:46
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    a9c4:	e6 ec       	ldi	r30, 0xC6	; 198
    a9c6:	f9 e0       	ldi	r31, 0x09	; 9
    a9c8:	13 82       	std	Z+3, r1	; 0x03
    a9ca:	12 82       	std	Z+2, r1	; 0x02
_ZN6StreamC4Ev():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Stream.h:63
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    a9cc:	88 ee       	ldi	r24, 0xE8	; 232
    a9ce:	93 e0       	ldi	r25, 0x03	; 3
    a9d0:	a0 e0       	ldi	r26, 0x00	; 0
    a9d2:	b0 e0       	ldi	r27, 0x00	; 0
    a9d4:	84 83       	std	Z+4, r24	; 0x04
    a9d6:	95 83       	std	Z+5, r25	; 0x05
    a9d8:	a6 83       	std	Z+6, r26	; 0x06
    a9da:	b7 83       	std	Z+7, r27	; 0x07
_ZN7TwoWireC4Ev():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src/Wire.cpp:52
void (*TwoWire::user_onRequest)(void);
void (*TwoWire::user_onReceive)(int);

// Constructors ////////////////////////////////////////////////////////////////

TwoWire::TwoWire()
    a9dc:	8c e7       	ldi	r24, 0x7C	; 124
    a9de:	92 e0       	ldi	r25, 0x02	; 2
    a9e0:	91 83       	std	Z+1, r25	; 0x01
    a9e2:	80 83       	st	Z, r24
_GLOBAL__sub_I__ZN7TwoWire8rxBufferE():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src/Wire.cpp:333
  user_onRequest = function;
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    a9e4:	08 95       	ret

0000a9e6 <twi_init>:
twi_init():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:359
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    a9e6:	10 92 89 0a 	sts	0x0A89, r1	; 0x800a89 <twi_state>
    a9ea:	81 e0       	ldi	r24, 0x01	; 1
    a9ec:	80 93 87 0a 	sts	0x0A87, r24	; 0x800a87 <twi_sendStop>
    a9f0:	10 92 86 0a 	sts	0x0A86, r1	; 0x800a86 <twi_inRepStart>
    a9f4:	61 e0       	ldi	r22, 0x01	; 1
    a9f6:	81 e1       	ldi	r24, 0x11	; 17
    a9f8:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
    a9fc:	61 e0       	ldi	r22, 0x01	; 1
    a9fe:	80 e1       	ldi	r24, 0x10	; 16
    aa00:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
    aa04:	e9 eb       	ldi	r30, 0xB9	; 185
    aa06:	f0 e0       	ldi	r31, 0x00	; 0
    aa08:	80 81       	ld	r24, Z
    aa0a:	8e 7f       	andi	r24, 0xFE	; 254
    aa0c:	80 83       	st	Z, r24
    aa0e:	80 81       	ld	r24, Z
    aa10:	8d 7f       	andi	r24, 0xFD	; 253
    aa12:	80 83       	st	Z, r24
    aa14:	88 e4       	ldi	r24, 0x48	; 72
    aa16:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    aa1a:	85 e4       	ldi	r24, 0x45	; 69
    aa1c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    aa20:	08 95       	ret

0000aa22 <twi_setFrequency>:
twi_setFrequency():
    aa22:	9b 01       	movw	r18, r22
    aa24:	ac 01       	movw	r20, r24
    aa26:	60 e0       	ldi	r22, 0x00	; 0
    aa28:	74 e2       	ldi	r23, 0x24	; 36
    aa2a:	84 ef       	ldi	r24, 0xF4	; 244
    aa2c:	90 e0       	ldi	r25, 0x00	; 0
    aa2e:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    aa32:	20 51       	subi	r18, 0x10	; 16
    aa34:	31 09       	sbc	r19, r1
    aa36:	41 09       	sbc	r20, r1
    aa38:	51 09       	sbc	r21, r1
    aa3a:	56 95       	lsr	r21
    aa3c:	47 95       	ror	r20
    aa3e:	37 95       	ror	r19
    aa40:	27 95       	ror	r18
    aa42:	20 93 b8 00 	sts	0x00B8, r18	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    aa46:	08 95       	ret

0000aa48 <twi_readFrom>:
twi_readFrom():
    aa48:	41 32       	cpi	r20, 0x21	; 33
    aa4a:	08 f0       	brcs	.+2      	; 0xaa4e <twi_readFrom+0x6>
    aa4c:	43 c0       	rjmp	.+134    	; 0xaad4 <twi_readFrom+0x8c>
    aa4e:	90 91 89 0a 	lds	r25, 0x0A89	; 0x800a89 <twi_state>
    aa52:	91 11       	cpse	r25, r1
    aa54:	fc cf       	rjmp	.-8      	; 0xaa4e <twi_readFrom+0x6>
    aa56:	91 e0       	ldi	r25, 0x01	; 1
    aa58:	90 93 89 0a 	sts	0x0A89, r25	; 0x800a89 <twi_state>
    aa5c:	20 93 87 0a 	sts	0x0A87, r18	; 0x800a87 <twi_sendStop>
    aa60:	2f ef       	ldi	r18, 0xFF	; 255
    aa62:	20 93 1c 0a 	sts	0x0A1C, r18	; 0x800a1c <twi_error>
    aa66:	10 92 61 0a 	sts	0x0A61, r1	; 0x800a61 <twi_masterBufferIndex>
    aa6a:	24 0f       	add	r18, r20
    aa6c:	20 93 60 0a 	sts	0x0A60, r18	; 0x800a60 <twi_masterBufferLength>
    aa70:	90 93 88 0a 	sts	0x0A88, r25	; 0x800a88 <twi_slarw>
    aa74:	90 91 88 0a 	lds	r25, 0x0A88	; 0x800a88 <twi_slarw>
    aa78:	88 0f       	add	r24, r24
    aa7a:	89 2b       	or	r24, r25
    aa7c:	80 93 88 0a 	sts	0x0A88, r24	; 0x800a88 <twi_slarw>
    aa80:	80 91 86 0a 	lds	r24, 0x0A86	; 0x800a86 <twi_inRepStart>
    aa84:	81 30       	cpi	r24, 0x01	; 1
    aa86:	09 f5       	brne	.+66     	; 0xaaca <twi_readFrom+0x82>
    aa88:	10 92 86 0a 	sts	0x0A86, r1	; 0x800a86 <twi_inRepStart>
    aa8c:	80 91 88 0a 	lds	r24, 0x0A88	; 0x800a88 <twi_slarw>
    aa90:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    aa94:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    aa98:	83 fd       	sbrc	r24, 3
    aa9a:	f8 cf       	rjmp	.-16     	; 0xaa8c <twi_readFrom+0x44>
    aa9c:	85 ec       	ldi	r24, 0xC5	; 197
    aa9e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    aaa2:	80 91 89 0a 	lds	r24, 0x0A89	; 0x800a89 <twi_state>
    aaa6:	81 30       	cpi	r24, 0x01	; 1
    aaa8:	e1 f3       	breq	.-8      	; 0xaaa2 <twi_readFrom+0x5a>
    aaaa:	80 91 61 0a 	lds	r24, 0x0A61	; 0x800a61 <twi_masterBufferIndex>
    aaae:	84 17       	cp	r24, r20
    aab0:	10 f4       	brcc	.+4      	; 0xaab6 <twi_readFrom+0x6e>
    aab2:	40 91 61 0a 	lds	r20, 0x0A61	; 0x800a61 <twi_masterBufferIndex>
    aab6:	a2 e6       	ldi	r26, 0x62	; 98
    aab8:	ba e0       	ldi	r27, 0x0A	; 10
    aaba:	96 2f       	mov	r25, r22
    aabc:	fb 01       	movw	r30, r22
    aabe:	8e 2f       	mov	r24, r30
    aac0:	89 1b       	sub	r24, r25
    aac2:	84 17       	cp	r24, r20
    aac4:	20 f0       	brcs	.+8      	; 0xaace <twi_readFrom+0x86>
    aac6:	84 2f       	mov	r24, r20
    aac8:	08 95       	ret
    aaca:	85 ee       	ldi	r24, 0xE5	; 229
    aacc:	e8 cf       	rjmp	.-48     	; 0xaa9e <twi_readFrom+0x56>
    aace:	8d 91       	ld	r24, X+
    aad0:	81 93       	st	Z+, r24
    aad2:	f5 cf       	rjmp	.-22     	; 0xaabe <twi_readFrom+0x76>
    aad4:	40 e0       	ldi	r20, 0x00	; 0
    aad6:	f7 cf       	rjmp	.-18     	; 0xaac6 <twi_readFrom+0x7e>

0000aad8 <twi_writeTo>:
twi_writeTo():
    aad8:	0f 93       	push	r16
    aada:	41 32       	cpi	r20, 0x21	; 33
    aadc:	08 f0       	brcs	.+2      	; 0xaae0 <twi_writeTo+0x8>
    aade:	4b c0       	rjmp	.+150    	; 0xab76 <twi_writeTo+0x9e>
    aae0:	90 91 89 0a 	lds	r25, 0x0A89	; 0x800a89 <twi_state>
    aae4:	91 11       	cpse	r25, r1
    aae6:	fc cf       	rjmp	.-8      	; 0xaae0 <twi_writeTo+0x8>
    aae8:	92 e0       	ldi	r25, 0x02	; 2
    aaea:	90 93 89 0a 	sts	0x0A89, r25	; 0x800a89 <twi_state>
    aaee:	00 93 87 0a 	sts	0x0A87, r16	; 0x800a87 <twi_sendStop>
    aaf2:	9f ef       	ldi	r25, 0xFF	; 255
    aaf4:	90 93 1c 0a 	sts	0x0A1C, r25	; 0x800a1c <twi_error>
    aaf8:	10 92 61 0a 	sts	0x0A61, r1	; 0x800a61 <twi_masterBufferIndex>
    aafc:	40 93 60 0a 	sts	0x0A60, r20	; 0x800a60 <twi_masterBufferLength>
    ab00:	36 2f       	mov	r19, r22
    ab02:	a2 e6       	ldi	r26, 0x62	; 98
    ab04:	ba e0       	ldi	r27, 0x0A	; 10
    ab06:	fb 01       	movw	r30, r22
    ab08:	9e 2f       	mov	r25, r30
    ab0a:	93 1b       	sub	r25, r19
    ab0c:	94 17       	cp	r25, r20
    ab0e:	70 f1       	brcs	.+92     	; 0xab6c <twi_writeTo+0x94>
    ab10:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <twi_slarw>
    ab14:	90 91 88 0a 	lds	r25, 0x0A88	; 0x800a88 <twi_slarw>
    ab18:	88 0f       	add	r24, r24
    ab1a:	89 2b       	or	r24, r25
    ab1c:	80 93 88 0a 	sts	0x0A88, r24	; 0x800a88 <twi_slarw>
    ab20:	80 91 86 0a 	lds	r24, 0x0A86	; 0x800a86 <twi_inRepStart>
    ab24:	81 30       	cpi	r24, 0x01	; 1
    ab26:	29 f5       	brne	.+74     	; 0xab72 <twi_writeTo+0x9a>
    ab28:	10 92 86 0a 	sts	0x0A86, r1	; 0x800a86 <twi_inRepStart>
    ab2c:	80 91 88 0a 	lds	r24, 0x0A88	; 0x800a88 <twi_slarw>
    ab30:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    ab34:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    ab38:	83 fd       	sbrc	r24, 3
    ab3a:	f8 cf       	rjmp	.-16     	; 0xab2c <twi_writeTo+0x54>
    ab3c:	85 ec       	ldi	r24, 0xC5	; 197
    ab3e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    ab42:	22 23       	and	r18, r18
    ab44:	21 f0       	breq	.+8      	; 0xab4e <twi_writeTo+0x76>
    ab46:	80 91 89 0a 	lds	r24, 0x0A89	; 0x800a89 <twi_state>
    ab4a:	82 30       	cpi	r24, 0x02	; 2
    ab4c:	d1 f3       	breq	.-12     	; 0xab42 <twi_writeTo+0x6a>
    ab4e:	80 91 1c 0a 	lds	r24, 0x0A1C	; 0x800a1c <twi_error>
    ab52:	8f 3f       	cpi	r24, 0xFF	; 255
    ab54:	91 f0       	breq	.+36     	; 0xab7a <twi_writeTo+0xa2>
    ab56:	80 91 1c 0a 	lds	r24, 0x0A1C	; 0x800a1c <twi_error>
    ab5a:	80 32       	cpi	r24, 0x20	; 32
    ab5c:	81 f0       	breq	.+32     	; 0xab7e <twi_writeTo+0xa6>
    ab5e:	80 91 1c 0a 	lds	r24, 0x0A1C	; 0x800a1c <twi_error>
    ab62:	80 33       	cpi	r24, 0x30	; 48
    ab64:	71 f0       	breq	.+28     	; 0xab82 <twi_writeTo+0xaa>
    ab66:	84 e0       	ldi	r24, 0x04	; 4
    ab68:	0f 91       	pop	r16
    ab6a:	08 95       	ret
    ab6c:	91 91       	ld	r25, Z+
    ab6e:	9d 93       	st	X+, r25
    ab70:	cb cf       	rjmp	.-106    	; 0xab08 <twi_writeTo+0x30>
    ab72:	85 ee       	ldi	r24, 0xE5	; 229
    ab74:	e4 cf       	rjmp	.-56     	; 0xab3e <twi_writeTo+0x66>
    ab76:	81 e0       	ldi	r24, 0x01	; 1
    ab78:	f7 cf       	rjmp	.-18     	; 0xab68 <twi_writeTo+0x90>
    ab7a:	80 e0       	ldi	r24, 0x00	; 0
    ab7c:	f5 cf       	rjmp	.-22     	; 0xab68 <twi_writeTo+0x90>
    ab7e:	82 e0       	ldi	r24, 0x02	; 2
    ab80:	f3 cf       	rjmp	.-26     	; 0xab68 <twi_writeTo+0x90>
    ab82:	83 e0       	ldi	r24, 0x03	; 3
    ab84:	f1 cf       	rjmp	.-30     	; 0xab68 <twi_writeTo+0x90>

0000ab86 <twi_transmit>:
twi_transmit():
    ab86:	20 91 3e 0a 	lds	r18, 0x0A3E	; 0x800a3e <twi_txBufferLength>
    ab8a:	26 0f       	add	r18, r22
    ab8c:	33 27       	eor	r19, r19
    ab8e:	33 1f       	adc	r19, r19
    ab90:	21 32       	cpi	r18, 0x21	; 33
    ab92:	31 05       	cpc	r19, r1
    ab94:	ec f4       	brge	.+58     	; 0xabd0 <twi_transmit+0x4a>
    ab96:	20 91 89 0a 	lds	r18, 0x0A89	; 0x800a89 <twi_state>
    ab9a:	fc 01       	movw	r30, r24
    ab9c:	90 e0       	ldi	r25, 0x00	; 0
    ab9e:	80 e0       	ldi	r24, 0x00	; 0
    aba0:	24 30       	cpi	r18, 0x04	; 4
    aba2:	69 f0       	breq	.+26     	; 0xabbe <twi_transmit+0x38>
    aba4:	82 e0       	ldi	r24, 0x02	; 2
    aba6:	08 95       	ret
    aba8:	a0 91 3e 0a 	lds	r26, 0x0A3E	; 0x800a3e <twi_txBufferLength>
    abac:	21 91       	ld	r18, Z+
    abae:	ac 01       	movw	r20, r24
    abb0:	40 5c       	subi	r20, 0xC0	; 192
    abb2:	55 4f       	sbci	r21, 0xF5	; 245
    abb4:	a4 0f       	add	r26, r20
    abb6:	b5 2f       	mov	r27, r21
    abb8:	b1 1d       	adc	r27, r1
    abba:	2c 93       	st	X, r18
    abbc:	01 96       	adiw	r24, 0x01	; 1
    abbe:	86 17       	cp	r24, r22
    abc0:	98 f3       	brcs	.-26     	; 0xaba8 <twi_transmit+0x22>
    abc2:	80 91 3e 0a 	lds	r24, 0x0A3E	; 0x800a3e <twi_txBufferLength>
    abc6:	68 0f       	add	r22, r24
    abc8:	60 93 3e 0a 	sts	0x0A3E, r22	; 0x800a3e <twi_txBufferLength>
    abcc:	80 e0       	ldi	r24, 0x00	; 0
    abce:	08 95       	ret
    abd0:	81 e0       	ldi	r24, 0x01	; 1
    abd2:	08 95       	ret

0000abd4 <twi_attachSlaveRxEvent>:
twi_attachSlaveRxEvent():
    abd4:	90 93 83 0a 	sts	0x0A83, r25	; 0x800a83 <twi_onSlaveReceive+0x1>
    abd8:	80 93 82 0a 	sts	0x0A82, r24	; 0x800a82 <twi_onSlaveReceive>
    abdc:	08 95       	ret

0000abde <twi_attachSlaveTxEvent>:
twi_attachSlaveTxEvent():
    abde:	90 93 85 0a 	sts	0x0A85, r25	; 0x800a85 <twi_onSlaveTransmit+0x1>
    abe2:	80 93 84 0a 	sts	0x0A84, r24	; 0x800a84 <twi_onSlaveTransmit>
    abe6:	08 95       	ret

0000abe8 <twi_stop>:
twi_stop():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:372
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
    abe8:	85 ed       	ldi	r24, 0xD5	; 213
    abea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:376

  // wait for stop condition to be exectued on bus
  // TWINT is not set after a stop condition!
  while(TWCR & _BV(TWSTO)){
    abee:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    abf2:	84 fd       	sbrc	r24, 4
    abf4:	fc cf       	rjmp	.-8      	; 0xabee <twi_stop+0x6>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:381
    continue;
  }

  // update twi state
  twi_state = TWI_READY;
    abf6:	10 92 89 0a 	sts	0x0A89, r1	; 0x800a89 <twi_state>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:382
}
    abfa:	08 95       	ret

0000abfc <twi_releaseBus>:
twi_releaseBus():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:393
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    abfc:	85 ec       	ldi	r24, 0xC5	; 197
    abfe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:396

  // update twi state
  twi_state = TWI_READY;
    ac02:	10 92 89 0a 	sts	0x0A89, r1	; 0x800a89 <twi_state>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:397
}
    ac06:	08 95       	ret

0000ac08 <__vector_26>:
__vector_26():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:400

ISR(TWI_vect)
{
    ac08:	1f 92       	push	r1
    ac0a:	0f 92       	push	r0
    ac0c:	0f b6       	in	r0, 0x3f	; 63
    ac0e:	0f 92       	push	r0
    ac10:	11 24       	eor	r1, r1
    ac12:	0b b6       	in	r0, 0x3b	; 59
    ac14:	0f 92       	push	r0
    ac16:	2f 93       	push	r18
    ac18:	3f 93       	push	r19
    ac1a:	4f 93       	push	r20
    ac1c:	5f 93       	push	r21
    ac1e:	6f 93       	push	r22
    ac20:	7f 93       	push	r23
    ac22:	8f 93       	push	r24
    ac24:	9f 93       	push	r25
    ac26:	af 93       	push	r26
    ac28:	bf 93       	push	r27
    ac2a:	ef 93       	push	r30
    ac2c:	ff 93       	push	r31
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  switch(TW_STATUS){
    ac2e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    ac32:	88 7f       	andi	r24, 0xF8	; 248
    ac34:	80 36       	cpi	r24, 0x60	; 96
    ac36:	09 f4       	brne	.+2      	; 0xac3a <__vector_26+0x32>
    ac38:	4e c0       	rjmp	.+156    	; 0xacd6 <__vector_26+0xce>
    ac3a:	08 f0       	brcs	.+2      	; 0xac3e <__vector_26+0x36>
    ac3c:	41 c0       	rjmp	.+130    	; 0xacc0 <__vector_26+0xb8>
    ac3e:	88 32       	cpi	r24, 0x28	; 40
    ac40:	09 f4       	brne	.+2      	; 0xac44 <__vector_26+0x3c>
    ac42:	aa c0       	rjmp	.+340    	; 0xad98 <__vector_26+0x190>
    ac44:	28 f5       	brcc	.+74     	; 0xac90 <__vector_26+0x88>
    ac46:	80 31       	cpi	r24, 0x10	; 16
    ac48:	09 f4       	brne	.+2      	; 0xac4c <__vector_26+0x44>
    ac4a:	9e c0       	rjmp	.+316    	; 0xad88 <__vector_26+0x180>
    ac4c:	c8 f4       	brcc	.+50     	; 0xac80 <__vector_26+0x78>
    ac4e:	88 23       	and	r24, r24
    ac50:	09 f4       	brne	.+2      	; 0xac54 <__vector_26+0x4c>
    ac52:	fb c0       	rjmp	.+502    	; 0xae4a <__vector_26+0x242>
    ac54:	88 30       	cpi	r24, 0x08	; 8
    ac56:	09 f4       	brne	.+2      	; 0xac5a <__vector_26+0x52>
    ac58:	97 c0       	rjmp	.+302    	; 0xad88 <__vector_26+0x180>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:562
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
      break;
  }
}
    ac5a:	ff 91       	pop	r31
    ac5c:	ef 91       	pop	r30
    ac5e:	bf 91       	pop	r27
    ac60:	af 91       	pop	r26
    ac62:	9f 91       	pop	r25
    ac64:	8f 91       	pop	r24
    ac66:	7f 91       	pop	r23
    ac68:	6f 91       	pop	r22
    ac6a:	5f 91       	pop	r21
    ac6c:	4f 91       	pop	r20
    ac6e:	3f 91       	pop	r19
    ac70:	2f 91       	pop	r18
    ac72:	0f 90       	pop	r0
    ac74:	0b be       	out	0x3b, r0	; 59
    ac76:	0f 90       	pop	r0
    ac78:	0f be       	out	0x3f, r0	; 63
    ac7a:	0f 90       	pop	r0
    ac7c:	1f 90       	pop	r1
    ac7e:	18 95       	reti
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    ac80:	88 31       	cpi	r24, 0x18	; 24
    ac82:	09 f4       	brne	.+2      	; 0xac86 <__vector_26+0x7e>
    ac84:	89 c0       	rjmp	.+274    	; 0xad98 <__vector_26+0x190>
    ac86:	80 32       	cpi	r24, 0x20	; 32
    ac88:	41 f7       	brne	.-48     	; 0xac5a <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:436
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    ac8a:	80 93 1c 0a 	sts	0x0A1C, r24	; 0x800a1c <twi_error>
    ac8e:	15 c0       	rjmp	.+42     	; 0xacba <__vector_26+0xb2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    ac90:	80 34       	cpi	r24, 0x40	; 64
    ac92:	09 f4       	brne	.+2      	; 0xac96 <__vector_26+0x8e>
    ac94:	9e c0       	rjmp	.+316    	; 0xadd2 <__vector_26+0x1ca>
    ac96:	48 f4       	brcc	.+18     	; 0xacaa <__vector_26+0xa2>
    ac98:	80 33       	cpi	r24, 0x30	; 48
    ac9a:	b9 f3       	breq	.-18     	; 0xac8a <__vector_26+0x82>
    ac9c:	88 33       	cpi	r24, 0x38	; 56
    ac9e:	e9 f6       	brne	.-70     	; 0xac5a <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:440
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    aca0:	80 93 1c 0a 	sts	0x0A1C, r24	; 0x800a1c <twi_error>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:441
      twi_releaseBus();
    aca4:	0e 94 fe 55 	call	0xabfc	; 0xabfc <twi_releaseBus>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:442
      break;
    aca8:	d8 cf       	rjmp	.-80     	; 0xac5a <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    acaa:	80 35       	cpi	r24, 0x50	; 80
    acac:	09 f4       	brne	.+2      	; 0xacb0 <__vector_26+0xa8>
    acae:	85 c0       	rjmp	.+266    	; 0xadba <__vector_26+0x1b2>
    acb0:	88 35       	cpi	r24, 0x58	; 88
    acb2:	09 f4       	brne	.+2      	; 0xacb6 <__vector_26+0xae>
    acb4:	96 c0       	rjmp	.+300    	; 0xade2 <__vector_26+0x1da>
    acb6:	88 34       	cpi	r24, 0x48	; 72
    acb8:	81 f6       	brne	.-96     	; 0xac5a <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:559
    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
    acba:	0e 94 f4 55 	call	0xabe8	; 0xabe8 <twi_stop>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:562
      break;
  }
}
    acbe:	cd cf       	rjmp	.-102    	; 0xac5a <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    acc0:	88 39       	cpi	r24, 0x98	; 152
    acc2:	09 f4       	brne	.+2      	; 0xacc6 <__vector_26+0xbe>
    acc4:	8c c0       	rjmp	.+280    	; 0xadde <__vector_26+0x1d6>
    acc6:	38 f5       	brcc	.+78     	; 0xad16 <__vector_26+0x10e>
    acc8:	88 37       	cpi	r24, 0x78	; 120
    acca:	29 f0       	breq	.+10     	; 0xacd6 <__vector_26+0xce>
    accc:	50 f4       	brcc	.+20     	; 0xace2 <__vector_26+0xda>
    acce:	88 36       	cpi	r24, 0x68	; 104
    acd0:	11 f0       	breq	.+4      	; 0xacd6 <__vector_26+0xce>
    acd2:	80 37       	cpi	r24, 0x70	; 112
    acd4:	11 f6       	brne	.-124    	; 0xac5a <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:482
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    acd6:	83 e0       	ldi	r24, 0x03	; 3
    acd8:	80 93 89 0a 	sts	0x0A89, r24	; 0x800a89 <twi_state>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:484
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    acdc:	10 92 1d 0a 	sts	0x0A1D, r1	; 0x800a1d <twi_rxBufferIndex>
    ace0:	57 c0       	rjmp	.+174    	; 0xad90 <__vector_26+0x188>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    ace2:	88 38       	cpi	r24, 0x88	; 136
    ace4:	09 f4       	brne	.+2      	; 0xace8 <__vector_26+0xe0>
    ace6:	7b c0       	rjmp	.+246    	; 0xadde <__vector_26+0x1d6>
    ace8:	80 39       	cpi	r24, 0x90	; 144
    acea:	19 f0       	breq	.+6      	; 0xacf2 <__vector_26+0xea>
    acec:	80 38       	cpi	r24, 0x80	; 128
    acee:	09 f0       	breq	.+2      	; 0xacf2 <__vector_26+0xea>
    acf0:	b4 cf       	rjmp	.-152    	; 0xac5a <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:490
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    acf2:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <twi_rxBufferIndex>
    acf6:	80 32       	cpi	r24, 0x20	; 32
    acf8:	08 f0       	brcs	.+2      	; 0xacfc <__vector_26+0xf4>
    acfa:	71 c0       	rjmp	.+226    	; 0xadde <__vector_26+0x1d6>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:492
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    acfc:	e0 91 1d 0a 	lds	r30, 0x0A1D	; 0x800a1d <twi_rxBufferIndex>
    ad00:	81 e0       	ldi	r24, 0x01	; 1
    ad02:	8e 0f       	add	r24, r30
    ad04:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <twi_rxBufferIndex>
    ad08:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    ad0c:	f0 e0       	ldi	r31, 0x00	; 0
    ad0e:	e2 5e       	subi	r30, 0xE2	; 226
    ad10:	f5 4f       	sbci	r31, 0xF5	; 245
    ad12:	80 83       	st	Z, r24
    ad14:	3d c0       	rjmp	.+122    	; 0xad90 <__vector_26+0x188>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    ad16:	80 3b       	cpi	r24, 0xB0	; 176
    ad18:	39 f0       	breq	.+14     	; 0xad28 <__vector_26+0x120>
    ad1a:	e0 f4       	brcc	.+56     	; 0xad54 <__vector_26+0x14c>
    ad1c:	80 3a       	cpi	r24, 0xA0	; 160
    ad1e:	09 f4       	brne	.+2      	; 0xad22 <__vector_26+0x11a>
    ad20:	79 c0       	rjmp	.+242    	; 0xae14 <__vector_26+0x20c>
    ad22:	88 3a       	cpi	r24, 0xA8	; 168
    ad24:	09 f0       	breq	.+2      	; 0xad28 <__vector_26+0x120>
    ad26:	99 cf       	rjmp	.-206    	; 0xac5a <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:521
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    ad28:	84 e0       	ldi	r24, 0x04	; 4
    ad2a:	80 93 89 0a 	sts	0x0A89, r24	; 0x800a89 <twi_state>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:523
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    ad2e:	10 92 3f 0a 	sts	0x0A3F, r1	; 0x800a3f <twi_txBufferIndex>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:525
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    ad32:	10 92 3e 0a 	sts	0x0A3E, r1	; 0x800a3e <twi_txBufferLength>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:528
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    ad36:	e0 91 84 0a 	lds	r30, 0x0A84	; 0x800a84 <twi_onSlaveTransmit>
    ad3a:	f0 91 85 0a 	lds	r31, 0x0A85	; 0x800a85 <twi_onSlaveTransmit+0x1>
    ad3e:	09 95       	icall
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:530
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    ad40:	80 91 3e 0a 	lds	r24, 0x0A3E	; 0x800a3e <twi_txBufferLength>
    ad44:	81 11       	cpse	r24, r1
    ad46:	0f c0       	rjmp	.+30     	; 0xad66 <__vector_26+0x15e>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:531
        twi_txBufferLength = 1;
    ad48:	81 e0       	ldi	r24, 0x01	; 1
    ad4a:	80 93 3e 0a 	sts	0x0A3E, r24	; 0x800a3e <twi_txBufferLength>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:532
        twi_txBuffer[0] = 0x00;
    ad4e:	10 92 40 0a 	sts	0x0A40, r1	; 0x800a40 <twi_txBuffer>
    ad52:	09 c0       	rjmp	.+18     	; 0xad66 <__vector_26+0x15e>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    ad54:	80 3c       	cpi	r24, 0xC0	; 192
    ad56:	09 f4       	brne	.+2      	; 0xad5a <__vector_26+0x152>
    ad58:	76 c0       	rjmp	.+236    	; 0xae46 <__vector_26+0x23e>
    ad5a:	88 3c       	cpi	r24, 0xC8	; 200
    ad5c:	09 f4       	brne	.+2      	; 0xad60 <__vector_26+0x158>
    ad5e:	73 c0       	rjmp	.+230    	; 0xae46 <__vector_26+0x23e>
    ad60:	88 3b       	cpi	r24, 0xB8	; 184
    ad62:	09 f0       	breq	.+2      	; 0xad66 <__vector_26+0x15e>
    ad64:	7a cf       	rjmp	.-268    	; 0xac5a <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:538
      }
      // transmit first byte from buffer, fall
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    ad66:	e0 91 3f 0a 	lds	r30, 0x0A3F	; 0x800a3f <twi_txBufferIndex>
    ad6a:	81 e0       	ldi	r24, 0x01	; 1
    ad6c:	8e 0f       	add	r24, r30
    ad6e:	80 93 3f 0a 	sts	0x0A3F, r24	; 0x800a3f <twi_txBufferIndex>
    ad72:	f0 e0       	ldi	r31, 0x00	; 0
    ad74:	e0 5c       	subi	r30, 0xC0	; 192
    ad76:	f5 4f       	sbci	r31, 0xF5	; 245
    ad78:	80 81       	ld	r24, Z
    ad7a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:540
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    ad7e:	90 91 3f 0a 	lds	r25, 0x0A3F	; 0x800a3f <twi_txBufferIndex>
    ad82:	80 91 3e 0a 	lds	r24, 0x0A3E	; 0x800a3e <twi_txBufferLength>
    ad86:	29 c0       	rjmp	.+82     	; 0xadda <__vector_26+0x1d2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:406
  switch(TW_STATUS){
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    ad88:	80 91 88 0a 	lds	r24, 0x0A88	; 0x800a88 <twi_slarw>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:416
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    ad8c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
twi_reply():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:357
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    ad90:	85 ec       	ldi	r24, 0xC5	; 197
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:359
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    ad92:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    ad96:	61 cf       	rjmp	.-318    	; 0xac5a <__vector_26+0x52>
__vector_26():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:414

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    ad98:	90 91 61 0a 	lds	r25, 0x0A61	; 0x800a61 <twi_masterBufferIndex>
    ad9c:	80 91 60 0a 	lds	r24, 0x0A60	; 0x800a60 <twi_masterBufferLength>
    ada0:	98 17       	cp	r25, r24
    ada2:	58 f5       	brcc	.+86     	; 0xadfa <__vector_26+0x1f2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:416
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    ada4:	e0 91 61 0a 	lds	r30, 0x0A61	; 0x800a61 <twi_masterBufferIndex>
    ada8:	81 e0       	ldi	r24, 0x01	; 1
    adaa:	8e 0f       	add	r24, r30
    adac:	80 93 61 0a 	sts	0x0A61, r24	; 0x800a61 <twi_masterBufferIndex>
    adb0:	f0 e0       	ldi	r31, 0x00	; 0
    adb2:	ee 59       	subi	r30, 0x9E	; 158
    adb4:	f5 4f       	sbci	r31, 0xF5	; 245
    adb6:	80 81       	ld	r24, Z
    adb8:	e9 cf       	rjmp	.-46     	; 0xad8c <__vector_26+0x184>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:447
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    adba:	e0 91 61 0a 	lds	r30, 0x0A61	; 0x800a61 <twi_masterBufferIndex>
    adbe:	81 e0       	ldi	r24, 0x01	; 1
    adc0:	8e 0f       	add	r24, r30
    adc2:	80 93 61 0a 	sts	0x0A61, r24	; 0x800a61 <twi_masterBufferIndex>
    adc6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    adca:	f0 e0       	ldi	r31, 0x00	; 0
    adcc:	ee 59       	subi	r30, 0x9E	; 158
    adce:	f5 4f       	sbci	r31, 0xF5	; 245
    add0:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:451
      /* fall through */
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    add2:	90 91 61 0a 	lds	r25, 0x0A61	; 0x800a61 <twi_masterBufferIndex>
    add6:	80 91 60 0a 	lds	r24, 0x0A60	; 0x800a60 <twi_masterBufferLength>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:540
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    adda:	98 17       	cp	r25, r24
    addc:	c8 f2       	brcs	.-78     	; 0xad90 <__vector_26+0x188>
twi_reply():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:359
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    adde:	85 e8       	ldi	r24, 0x85	; 133
    ade0:	d8 cf       	rjmp	.-80     	; 0xad92 <__vector_26+0x18a>
__vector_26():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:459
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    ade2:	e0 91 61 0a 	lds	r30, 0x0A61	; 0x800a61 <twi_masterBufferIndex>
    ade6:	81 e0       	ldi	r24, 0x01	; 1
    ade8:	8e 0f       	add	r24, r30
    adea:	80 93 61 0a 	sts	0x0A61, r24	; 0x800a61 <twi_masterBufferIndex>
    adee:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    adf2:	f0 e0       	ldi	r31, 0x00	; 0
    adf4:	ee 59       	subi	r30, 0x9E	; 158
    adf6:	f5 4f       	sbci	r31, 0xF5	; 245
    adf8:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:460
  if (twi_sendStop)
    adfa:	80 91 87 0a 	lds	r24, 0x0A87	; 0x800a87 <twi_sendStop>
    adfe:	81 11       	cpse	r24, r1
    ae00:	5c cf       	rjmp	.-328    	; 0xacba <__vector_26+0xb2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:463
          twi_stop();
  else {
    twi_inRepStart = true;  // we're gonna send the START
    ae02:	81 e0       	ldi	r24, 0x01	; 1
    ae04:	80 93 86 0a 	sts	0x0A86, r24	; 0x800a86 <twi_inRepStart>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:467
    // don't enable the interrupt. We'll generate the start, but we 
    // avoid handling the interrupt until we're in the next transaction,
    // at the point where we would normally issue the start.
    TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    ae08:	84 ea       	ldi	r24, 0xA4	; 164
twi_reply():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:357
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    ae0a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
__vector_26():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:551
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    ae0e:	10 92 89 0a 	sts	0x0A89, r1	; 0x800a89 <twi_state>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:552
      break;
    ae12:	23 cf       	rjmp	.-442    	; 0xac5a <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:501
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    ae14:	0e 94 fe 55 	call	0xabfc	; 0xabfc <twi_releaseBus>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:503
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    ae18:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <twi_rxBufferIndex>
    ae1c:	80 32       	cpi	r24, 0x20	; 32
    ae1e:	30 f4       	brcc	.+12     	; 0xae2c <__vector_26+0x224>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:504
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    ae20:	e0 91 1d 0a 	lds	r30, 0x0A1D	; 0x800a1d <twi_rxBufferIndex>
    ae24:	f0 e0       	ldi	r31, 0x00	; 0
    ae26:	e2 5e       	subi	r30, 0xE2	; 226
    ae28:	f5 4f       	sbci	r31, 0xF5	; 245
    ae2a:	10 82       	st	Z, r1
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:507
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    ae2c:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <twi_rxBufferIndex>
    ae30:	70 e0       	ldi	r23, 0x00	; 0
    ae32:	e0 91 82 0a 	lds	r30, 0x0A82	; 0x800a82 <twi_onSlaveReceive>
    ae36:	f0 91 83 0a 	lds	r31, 0x0A83	; 0x800a83 <twi_onSlaveReceive+0x1>
    ae3a:	8e e1       	ldi	r24, 0x1E	; 30
    ae3c:	9a e0       	ldi	r25, 0x0A	; 10
    ae3e:	09 95       	icall
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:509
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    ae40:	10 92 1d 0a 	sts	0x0A1D, r1	; 0x800a1d <twi_rxBufferIndex>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:510
      break;
    ae44:	0a cf       	rjmp	.-492    	; 0xac5a <__vector_26+0x52>
twi_reply():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:357
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    ae46:	85 ec       	ldi	r24, 0xC5	; 197
    ae48:	e0 cf       	rjmp	.-64     	; 0xae0a <__vector_26+0x202>
__vector_26():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:558

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    ae4a:	10 92 1c 0a 	sts	0x0A1C, r1	; 0x800a1c <twi_error>
    ae4e:	35 cf       	rjmp	.-406    	; 0xacba <__vector_26+0xb2>

0000ae50 <Dusk2Dawn::Dusk2Dawn(float, float, float)>:
_ZN9Dusk2DawnC2Efff():
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:286
}


float Dusk2Dawn::degToRad(float deg) {
  return PI * deg / 180;
}
    ae50:	cf 92       	push	r12
    ae52:	df 92       	push	r13
    ae54:	ef 92       	push	r14
    ae56:	ff 92       	push	r15
    ae58:	0f 93       	push	r16
    ae5a:	1f 93       	push	r17
    ae5c:	cf 93       	push	r28
    ae5e:	df 93       	push	r29
    ae60:	ec 01       	movw	r28, r24
    ae62:	48 83       	st	Y, r20
    ae64:	59 83       	std	Y+1, r21	; 0x01
    ae66:	6a 83       	std	Y+2, r22	; 0x02
    ae68:	7b 83       	std	Y+3, r23	; 0x03
    ae6a:	0c 83       	std	Y+4, r16	; 0x04
    ae6c:	1d 83       	std	Y+5, r17	; 0x05
    ae6e:	2e 83       	std	Y+6, r18	; 0x06
    ae70:	3f 83       	std	Y+7, r19	; 0x07
    ae72:	c7 01       	movw	r24, r14
    ae74:	b6 01       	movw	r22, r12
    ae76:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    ae7a:	79 87       	std	Y+9, r23	; 0x09
    ae7c:	68 87       	std	Y+8, r22	; 0x08
    ae7e:	df 91       	pop	r29
    ae80:	cf 91       	pop	r28
    ae82:	1f 91       	pop	r17
    ae84:	0f 91       	pop	r16
    ae86:	ff 90       	pop	r15
    ae88:	ef 90       	pop	r14
    ae8a:	df 90       	pop	r13
    ae8c:	cf 90       	pop	r12
    ae8e:	08 95       	ret

0000ae90 <Dusk2Dawn::meanObliquityOfEcliptic(float)>:
_ZN9Dusk2Dawn23meanObliquityOfEclipticEf():
    ae90:	cf 92       	push	r12
    ae92:	df 92       	push	r13
    ae94:	ef 92       	push	r14
    ae96:	ff 92       	push	r15
    ae98:	6a 01       	movw	r12, r20
    ae9a:	7b 01       	movw	r14, r22
    ae9c:	2f e2       	ldi	r18, 0x2F	; 47
    ae9e:	32 ea       	ldi	r19, 0xA2	; 162
    aea0:	4d ee       	ldi	r20, 0xED	; 237
    aea2:	5a e3       	ldi	r21, 0x3A	; 58
    aea4:	cb 01       	movw	r24, r22
    aea6:	b6 01       	movw	r22, r12
    aea8:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    aeac:	9b 01       	movw	r18, r22
    aeae:	ac 01       	movw	r20, r24
    aeb0:	6b e3       	ldi	r22, 0x3B	; 59
    aeb2:	7a ea       	ldi	r23, 0xAA	; 170
    aeb4:	8a e1       	ldi	r24, 0x1A	; 26
    aeb6:	9a e3       	ldi	r25, 0x3A	; 58
    aeb8:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    aebc:	a7 01       	movw	r20, r14
    aebe:	96 01       	movw	r18, r12
    aec0:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    aec4:	2f e8       	ldi	r18, 0x8F	; 143
    aec6:	32 e4       	ldi	r19, 0x42	; 66
    aec8:	4b e3       	ldi	r20, 0x3B	; 59
    aeca:	52 e4       	ldi	r21, 0x42	; 66
    aecc:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    aed0:	a7 01       	movw	r20, r14
    aed2:	96 01       	movw	r18, r12
    aed4:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    aed8:	9b 01       	movw	r18, r22
    aeda:	ac 01       	movw	r20, r24
    aedc:	61 e8       	ldi	r22, 0x81	; 129
    aede:	75 e9       	ldi	r23, 0x95	; 149
    aee0:	8b ea       	ldi	r24, 0xAB	; 171
    aee2:	91 e4       	ldi	r25, 0x41	; 65
    aee4:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    aee8:	20 e0       	ldi	r18, 0x00	; 0
    aeea:	30 e0       	ldi	r19, 0x00	; 0
    aeec:	40 e7       	ldi	r20, 0x70	; 112
    aeee:	52 e4       	ldi	r21, 0x42	; 66
    aef0:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    aef4:	20 e0       	ldi	r18, 0x00	; 0
    aef6:	30 e0       	ldi	r19, 0x00	; 0
    aef8:	40 ed       	ldi	r20, 0xD0	; 208
    aefa:	51 e4       	ldi	r21, 0x41	; 65
    aefc:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    af00:	20 e0       	ldi	r18, 0x00	; 0
    af02:	30 e0       	ldi	r19, 0x00	; 0
    af04:	40 e7       	ldi	r20, 0x70	; 112
    af06:	52 e4       	ldi	r21, 0x42	; 66
    af08:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    af0c:	20 e0       	ldi	r18, 0x00	; 0
    af0e:	30 e0       	ldi	r19, 0x00	; 0
    af10:	48 eb       	ldi	r20, 0xB8	; 184
    af12:	51 e4       	ldi	r21, 0x41	; 65
    af14:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    af18:	ff 90       	pop	r15
    af1a:	ef 90       	pop	r14
    af1c:	df 90       	pop	r13
    af1e:	cf 90       	pop	r12
    af20:	08 95       	ret

0000af22 <Dusk2Dawn::sunEqOfCenter(float)>:
_ZN9Dusk2Dawn13sunEqOfCenterEf():
    af22:	4f 92       	push	r4
    af24:	5f 92       	push	r5
    af26:	6f 92       	push	r6
    af28:	7f 92       	push	r7
    af2a:	8f 92       	push	r8
    af2c:	9f 92       	push	r9
    af2e:	af 92       	push	r10
    af30:	bf 92       	push	r11
    af32:	cf 92       	push	r12
    af34:	df 92       	push	r13
    af36:	ef 92       	push	r14
    af38:	ff 92       	push	r15
    af3a:	cf 93       	push	r28
    af3c:	df 93       	push	r29
    af3e:	00 d0       	rcall	.+0      	; 0xaf40 <Dusk2Dawn::sunEqOfCenter(float)+0x1e>
    af40:	00 d0       	rcall	.+0      	; 0xaf42 <Dusk2Dawn::sunEqOfCenter(float)+0x20>
    af42:	cd b7       	in	r28, 0x3d	; 61
    af44:	de b7       	in	r29, 0x3e	; 62
    af46:	6a 01       	movw	r12, r20
    af48:	7b 01       	movw	r14, r22
_ZN9Dusk2Dawn18geomMeanAnomalySunEf():
    af4a:	28 e8       	ldi	r18, 0x88	; 136
    af4c:	3a e2       	ldi	r19, 0x2A	; 42
    af4e:	41 e2       	ldi	r20, 0x21	; 33
    af50:	59 e3       	ldi	r21, 0x39	; 57
    af52:	cb 01       	movw	r24, r22
    af54:	b6 01       	movw	r22, r12
    af56:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    af5a:	9b 01       	movw	r18, r22
    af5c:	ac 01       	movw	r20, r24
    af5e:	6d e0       	ldi	r22, 0x0D	; 13
    af60:	7f e9       	ldi	r23, 0x9F	; 159
    af62:	8c e0       	ldi	r24, 0x0C	; 12
    af64:	97 e4       	ldi	r25, 0x47	; 71
    af66:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    af6a:	a7 01       	movw	r20, r14
    af6c:	96 01       	movw	r18, r12
    af6e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    af72:	2a eb       	ldi	r18, 0xBA	; 186
    af74:	33 ec       	ldi	r19, 0xC3	; 195
    af76:	42 eb       	ldi	r20, 0xB2	; 178
    af78:	53 e4       	ldi	r21, 0x43	; 67
    af7a:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
_ZN9Dusk2Dawn8degToRadEf():
    af7e:	2b ed       	ldi	r18, 0xDB	; 219
    af80:	3f e0       	ldi	r19, 0x0F	; 15
    af82:	49 e4       	ldi	r20, 0x49	; 73
    af84:	50 e4       	ldi	r21, 0x40	; 64
    af86:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    af8a:	20 e0       	ldi	r18, 0x00	; 0
    af8c:	30 e0       	ldi	r19, 0x00	; 0
    af8e:	44 e3       	ldi	r20, 0x34	; 52
    af90:	53 e4       	ldi	r21, 0x43	; 67
    af92:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    af96:	4b 01       	movw	r8, r22
    af98:	5c 01       	movw	r10, r24
_ZN9Dusk2Dawn13sunEqOfCenterEf():
    af9a:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    af9e:	2b 01       	movw	r4, r22
    afa0:	3c 01       	movw	r6, r24
    afa2:	a5 01       	movw	r20, r10
    afa4:	94 01       	movw	r18, r8
    afa6:	c5 01       	movw	r24, r10
    afa8:	b4 01       	movw	r22, r8
    afaa:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    afae:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    afb2:	69 83       	std	Y+1, r22	; 0x01
    afb4:	7a 83       	std	Y+2, r23	; 0x02
    afb6:	8b 83       	std	Y+3, r24	; 0x03
    afb8:	9c 83       	std	Y+4, r25	; 0x04
    afba:	20 e0       	ldi	r18, 0x00	; 0
    afbc:	30 e0       	ldi	r19, 0x00	; 0
    afbe:	40 e4       	ldi	r20, 0x40	; 64
    afc0:	50 e4       	ldi	r21, 0x40	; 64
    afc2:	c5 01       	movw	r24, r10
    afc4:	b4 01       	movw	r22, r8
    afc6:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    afca:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    afce:	4b 01       	movw	r8, r22
    afd0:	5c 01       	movw	r10, r24
    afd2:	2b e8       	ldi	r18, 0x8B	; 139
    afd4:	31 ee       	ldi	r19, 0xE1	; 225
    afd6:	4a e6       	ldi	r20, 0x6A	; 106
    afd8:	57 e3       	ldi	r21, 0x37	; 55
    afda:	c7 01       	movw	r24, r14
    afdc:	b6 01       	movw	r22, r12
    afde:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    afe2:	2d ee       	ldi	r18, 0xED	; 237
    afe4:	37 ed       	ldi	r19, 0xD7	; 215
    afe6:	4d e9       	ldi	r20, 0x9D	; 157
    afe8:	5b e3       	ldi	r21, 0x3B	; 59
    afea:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    afee:	a7 01       	movw	r20, r14
    aff0:	96 01       	movw	r18, r12
    aff2:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    aff6:	9b 01       	movw	r18, r22
    aff8:	ac 01       	movw	r20, r24
    affa:	6e ea       	ldi	r22, 0xAE	; 174
    affc:	71 e1       	ldi	r23, 0x11	; 17
    affe:	85 ef       	ldi	r24, 0xF5	; 245
    b000:	9f e3       	ldi	r25, 0x3F	; 63
    b002:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b006:	a3 01       	movw	r20, r6
    b008:	92 01       	movw	r18, r4
    b00a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b00e:	2b 01       	movw	r4, r22
    b010:	3c 01       	movw	r6, r24
    b012:	26 ef       	ldi	r18, 0xF6	; 246
    b014:	3f ec       	ldi	r19, 0xCF	; 207
    b016:	43 ed       	ldi	r20, 0xD3	; 211
    b018:	58 e3       	ldi	r21, 0x38	; 56
    b01a:	c7 01       	movw	r24, r14
    b01c:	b6 01       	movw	r22, r12
    b01e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b022:	9b 01       	movw	r18, r22
    b024:	ac 01       	movw	r20, r24
    b026:	6c e5       	ldi	r22, 0x5C	; 92
    b028:	78 ec       	ldi	r23, 0xC8	; 200
    b02a:	83 ea       	ldi	r24, 0xA3	; 163
    b02c:	9c e3       	ldi	r25, 0x3C	; 60
    b02e:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b032:	29 81       	ldd	r18, Y+1	; 0x01
    b034:	3a 81       	ldd	r19, Y+2	; 0x02
    b036:	4b 81       	ldd	r20, Y+3	; 0x03
    b038:	5c 81       	ldd	r21, Y+4	; 0x04
    b03a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b03e:	9b 01       	movw	r18, r22
    b040:	ac 01       	movw	r20, r24
    b042:	c3 01       	movw	r24, r6
    b044:	b2 01       	movw	r22, r4
    b046:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b04a:	6b 01       	movw	r12, r22
    b04c:	7c 01       	movw	r14, r24
    b04e:	2c ee       	ldi	r18, 0xEC	; 236
    b050:	34 e8       	ldi	r19, 0x84	; 132
    b052:	47 e9       	ldi	r20, 0x97	; 151
    b054:	59 e3       	ldi	r21, 0x39	; 57
    b056:	c5 01       	movw	r24, r10
    b058:	b4 01       	movw	r22, r8
    b05a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b05e:	9b 01       	movw	r18, r22
    b060:	ac 01       	movw	r20, r24
    b062:	c7 01       	movw	r24, r14
    b064:	b6 01       	movw	r22, r12
    b066:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b06a:	0f 90       	pop	r0
    b06c:	0f 90       	pop	r0
    b06e:	0f 90       	pop	r0
    b070:	0f 90       	pop	r0
    b072:	df 91       	pop	r29
    b074:	cf 91       	pop	r28
    b076:	ff 90       	pop	r15
    b078:	ef 90       	pop	r14
    b07a:	df 90       	pop	r13
    b07c:	cf 90       	pop	r12
    b07e:	bf 90       	pop	r11
    b080:	af 90       	pop	r10
    b082:	9f 90       	pop	r9
    b084:	8f 90       	pop	r8
    b086:	7f 90       	pop	r7
    b088:	6f 90       	pop	r6
    b08a:	5f 90       	pop	r5
    b08c:	4f 90       	pop	r4
    b08e:	08 95       	ret

0000b090 <Dusk2Dawn::hourAngleSunrise(float, float)>:
_ZN9Dusk2Dawn16hourAngleSunriseEff():
    b090:	4f 92       	push	r4
    b092:	5f 92       	push	r5
    b094:	6f 92       	push	r6
    b096:	7f 92       	push	r7
    b098:	8f 92       	push	r8
    b09a:	9f 92       	push	r9
    b09c:	af 92       	push	r10
    b09e:	bf 92       	push	r11
    b0a0:	cf 92       	push	r12
    b0a2:	df 92       	push	r13
    b0a4:	ef 92       	push	r14
    b0a6:	ff 92       	push	r15
    b0a8:	0f 93       	push	r16
    b0aa:	1f 93       	push	r17
    b0ac:	cf 93       	push	r28
    b0ae:	df 93       	push	r29
    b0b0:	00 d0       	rcall	.+0      	; 0xb0b2 <Dusk2Dawn::hourAngleSunrise(float, float)+0x22>
    b0b2:	00 d0       	rcall	.+0      	; 0xb0b4 <Dusk2Dawn::hourAngleSunrise(float, float)+0x24>
    b0b4:	cd b7       	in	r28, 0x3d	; 61
    b0b6:	de b7       	in	r29, 0x3e	; 62
    b0b8:	cb 01       	movw	r24, r22
    b0ba:	ba 01       	movw	r22, r20
    b0bc:	79 01       	movw	r14, r18
_ZN9Dusk2Dawn8degToRadEf():
    b0be:	2b ed       	ldi	r18, 0xDB	; 219
    b0c0:	3f e0       	ldi	r19, 0x0F	; 15
    b0c2:	49 e4       	ldi	r20, 0x49	; 73
    b0c4:	50 e4       	ldi	r21, 0x40	; 64
    b0c6:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b0ca:	20 e0       	ldi	r18, 0x00	; 0
    b0cc:	30 e0       	ldi	r19, 0x00	; 0
    b0ce:	44 e3       	ldi	r20, 0x34	; 52
    b0d0:	53 e4       	ldi	r21, 0x43	; 67
    b0d2:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    b0d6:	4b 01       	movw	r8, r22
    b0d8:	5c 01       	movw	r10, r24
    b0da:	2b ed       	ldi	r18, 0xDB	; 219
    b0dc:	3f e0       	ldi	r19, 0x0F	; 15
    b0de:	49 e4       	ldi	r20, 0x49	; 73
    b0e0:	50 e4       	ldi	r21, 0x40	; 64
    b0e2:	c7 01       	movw	r24, r14
    b0e4:	b8 01       	movw	r22, r16
    b0e6:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b0ea:	20 e0       	ldi	r18, 0x00	; 0
    b0ec:	30 e0       	ldi	r19, 0x00	; 0
    b0ee:	44 e3       	ldi	r20, 0x34	; 52
    b0f0:	53 e4       	ldi	r21, 0x43	; 67
    b0f2:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    b0f6:	6b 01       	movw	r12, r22
    b0f8:	7c 01       	movw	r14, r24
_ZN9Dusk2Dawn16hourAngleSunriseEff():
    b0fa:	c5 01       	movw	r24, r10
    b0fc:	b4 01       	movw	r22, r8
    b0fe:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    b102:	2b 01       	movw	r4, r22
    b104:	3c 01       	movw	r6, r24
    b106:	c7 01       	movw	r24, r14
    b108:	b6 01       	movw	r22, r12
    b10a:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    b10e:	69 83       	std	Y+1, r22	; 0x01
    b110:	7a 83       	std	Y+2, r23	; 0x02
    b112:	8b 83       	std	Y+3, r24	; 0x03
    b114:	9c 83       	std	Y+4, r25	; 0x04
    b116:	c5 01       	movw	r24, r10
    b118:	b4 01       	movw	r22, r8
    b11a:	0e 94 83 74 	call	0xe906	; 0xe906 <tan>
    b11e:	4b 01       	movw	r8, r22
    b120:	5c 01       	movw	r10, r24
    b122:	c7 01       	movw	r24, r14
    b124:	b6 01       	movw	r22, r12
    b126:	0e 94 83 74 	call	0xe906	; 0xe906 <tan>
    b12a:	6b 01       	movw	r12, r22
    b12c:	7c 01       	movw	r14, r24
    b12e:	29 81       	ldd	r18, Y+1	; 0x01
    b130:	3a 81       	ldd	r19, Y+2	; 0x02
    b132:	4b 81       	ldd	r20, Y+3	; 0x03
    b134:	5c 81       	ldd	r21, Y+4	; 0x04
    b136:	c3 01       	movw	r24, r6
    b138:	b2 01       	movw	r22, r4
    b13a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b13e:	9b 01       	movw	r18, r22
    b140:	ac 01       	movw	r20, r24
    b142:	69 e0       	ldi	r22, 0x09	; 9
    b144:	71 e3       	ldi	r23, 0x31	; 49
    b146:	8e e6       	ldi	r24, 0x6E	; 110
    b148:	9c eb       	ldi	r25, 0xBC	; 188
    b14a:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    b14e:	2b 01       	movw	r4, r22
    b150:	3c 01       	movw	r6, r24
    b152:	a7 01       	movw	r20, r14
    b154:	96 01       	movw	r18, r12
    b156:	c5 01       	movw	r24, r10
    b158:	b4 01       	movw	r22, r8
    b15a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b15e:	9b 01       	movw	r18, r22
    b160:	ac 01       	movw	r20, r24
    b162:	c3 01       	movw	r24, r6
    b164:	b2 01       	movw	r22, r4
    b166:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b16a:	0f 90       	pop	r0
    b16c:	0f 90       	pop	r0
    b16e:	0f 90       	pop	r0
    b170:	0f 90       	pop	r0
    b172:	df 91       	pop	r29
    b174:	cf 91       	pop	r28
    b176:	1f 91       	pop	r17
    b178:	0f 91       	pop	r16
    b17a:	ff 90       	pop	r15
    b17c:	ef 90       	pop	r14
    b17e:	df 90       	pop	r13
    b180:	cf 90       	pop	r12
    b182:	bf 90       	pop	r11
    b184:	af 90       	pop	r10
    b186:	9f 90       	pop	r9
    b188:	8f 90       	pop	r8
    b18a:	7f 90       	pop	r7
    b18c:	6f 90       	pop	r6
    b18e:	5f 90       	pop	r5
    b190:	4f 90       	pop	r4
    b192:	0c 94 56 70 	jmp	0xe0ac	; 0xe0ac <acos>

0000b196 <Dusk2Dawn::obliquityCorrection(float)>:
_ZN9Dusk2Dawn19obliquityCorrectionEf():
    b196:	8f 92       	push	r8
    b198:	9f 92       	push	r9
    b19a:	af 92       	push	r10
    b19c:	bf 92       	push	r11
    b19e:	cf 92       	push	r12
    b1a0:	df 92       	push	r13
    b1a2:	ef 92       	push	r14
    b1a4:	ff 92       	push	r15
    b1a6:	6a 01       	movw	r12, r20
    b1a8:	7b 01       	movw	r14, r22
    b1aa:	0e 94 48 57 	call	0xae90	; 0xae90 <Dusk2Dawn::meanObliquityOfEcliptic(float)>
    b1ae:	4b 01       	movw	r8, r22
    b1b0:	5c 01       	movw	r10, r24
    b1b2:	2a e5       	ldi	r18, 0x5A	; 90
    b1b4:	34 ec       	ldi	r19, 0xC4	; 196
    b1b6:	41 ef       	ldi	r20, 0xF1	; 241
    b1b8:	54 e4       	ldi	r21, 0x44	; 68
    b1ba:	c7 01       	movw	r24, r14
    b1bc:	b6 01       	movw	r22, r12
    b1be:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b1c2:	9b 01       	movw	r18, r22
    b1c4:	ac 01       	movw	r20, r24
    b1c6:	6b e7       	ldi	r22, 0x7B	; 123
    b1c8:	74 e1       	ldi	r23, 0x14	; 20
    b1ca:	8a ef       	ldi	r24, 0xFA	; 250
    b1cc:	92 e4       	ldi	r25, 0x42	; 66
    b1ce:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
_ZN9Dusk2Dawn8degToRadEf():
    b1d2:	2b ed       	ldi	r18, 0xDB	; 219
    b1d4:	3f e0       	ldi	r19, 0x0F	; 15
    b1d6:	49 e4       	ldi	r20, 0x49	; 73
    b1d8:	50 e4       	ldi	r21, 0x40	; 64
    b1da:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b1de:	20 e0       	ldi	r18, 0x00	; 0
    b1e0:	30 e0       	ldi	r19, 0x00	; 0
    b1e2:	44 e3       	ldi	r20, 0x34	; 52
    b1e4:	53 e4       	ldi	r21, 0x43	; 67
    b1e6:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
_ZN9Dusk2Dawn19obliquityCorrectionEf():
    b1ea:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    b1ee:	2c ea       	ldi	r18, 0xAC	; 172
    b1f0:	35 ec       	ldi	r19, 0xC5	; 197
    b1f2:	47 e2       	ldi	r20, 0x27	; 39
    b1f4:	5b e3       	ldi	r21, 0x3B	; 59
    b1f6:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b1fa:	a5 01       	movw	r20, r10
    b1fc:	94 01       	movw	r18, r8
    b1fe:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b202:	ff 90       	pop	r15
    b204:	ef 90       	pop	r14
    b206:	df 90       	pop	r13
    b208:	cf 90       	pop	r12
    b20a:	bf 90       	pop	r11
    b20c:	af 90       	pop	r10
    b20e:	9f 90       	pop	r9
    b210:	8f 90       	pop	r8
    b212:	08 95       	ret

0000b214 <Dusk2Dawn::geomMeanLongSun(float)>:
_ZN9Dusk2Dawn15geomMeanLongSunEf():
    b214:	cf 92       	push	r12
    b216:	df 92       	push	r13
    b218:	ef 92       	push	r14
    b21a:	ff 92       	push	r15
    b21c:	6a 01       	movw	r12, r20
    b21e:	7b 01       	movw	r14, r22
    b220:	21 ed       	ldi	r18, 0xD1	; 209
    b222:	36 ef       	ldi	r19, 0xF6	; 246
    b224:	4e e9       	ldi	r20, 0x9E	; 158
    b226:	59 e3       	ldi	r21, 0x39	; 57
    b228:	cb 01       	movw	r24, r22
    b22a:	b6 01       	movw	r22, r12
    b22c:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b230:	25 ec       	ldi	r18, 0xC5	; 197
    b232:	30 ea       	ldi	r19, 0xA0	; 160
    b234:	4c e0       	ldi	r20, 0x0C	; 12
    b236:	57 e4       	ldi	r21, 0x47	; 71
    b238:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b23c:	a7 01       	movw	r20, r14
    b23e:	96 01       	movw	r18, r12
    b240:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b244:	25 eb       	ldi	r18, 0xB5	; 181
    b246:	3b e3       	ldi	r19, 0x3B	; 59
    b248:	4c e8       	ldi	r20, 0x8C	; 140
    b24a:	53 e4       	ldi	r21, 0x43	; 67
    b24c:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b250:	6b 01       	movw	r12, r22
    b252:	7c 01       	movw	r14, r24
    b254:	20 e0       	ldi	r18, 0x00	; 0
    b256:	30 e0       	ldi	r19, 0x00	; 0
    b258:	44 eb       	ldi	r20, 0xB4	; 180
    b25a:	53 e4       	ldi	r21, 0x43	; 67
    b25c:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    b260:	18 16       	cp	r1, r24
    b262:	4c f4       	brge	.+18     	; 0xb276 <Dusk2Dawn::geomMeanLongSun(float)+0x62>
    b264:	20 e0       	ldi	r18, 0x00	; 0
    b266:	30 e0       	ldi	r19, 0x00	; 0
    b268:	44 eb       	ldi	r20, 0xB4	; 180
    b26a:	53 e4       	ldi	r21, 0x43	; 67
    b26c:	c7 01       	movw	r24, r14
    b26e:	b6 01       	movw	r22, r12
    b270:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b274:	ed cf       	rjmp	.-38     	; 0xb250 <Dusk2Dawn::geomMeanLongSun(float)+0x3c>
    b276:	20 e0       	ldi	r18, 0x00	; 0
    b278:	30 e0       	ldi	r19, 0x00	; 0
    b27a:	a9 01       	movw	r20, r18
    b27c:	c7 01       	movw	r24, r14
    b27e:	b6 01       	movw	r22, r12
    b280:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    b284:	87 ff       	sbrs	r24, 7
    b286:	0b c0       	rjmp	.+22     	; 0xb29e <Dusk2Dawn::geomMeanLongSun(float)+0x8a>
    b288:	20 e0       	ldi	r18, 0x00	; 0
    b28a:	30 e0       	ldi	r19, 0x00	; 0
    b28c:	44 eb       	ldi	r20, 0xB4	; 180
    b28e:	53 e4       	ldi	r21, 0x43	; 67
    b290:	c7 01       	movw	r24, r14
    b292:	b6 01       	movw	r22, r12
    b294:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b298:	6b 01       	movw	r12, r22
    b29a:	7c 01       	movw	r14, r24
    b29c:	ec cf       	rjmp	.-40     	; 0xb276 <Dusk2Dawn::geomMeanLongSun(float)+0x62>
    b29e:	c7 01       	movw	r24, r14
    b2a0:	b6 01       	movw	r22, r12
    b2a2:	ff 90       	pop	r15
    b2a4:	ef 90       	pop	r14
    b2a6:	df 90       	pop	r13
    b2a8:	cf 90       	pop	r12
    b2aa:	08 95       	ret

0000b2ac <Dusk2Dawn::sunTrueLong(float)>:
_ZN9Dusk2Dawn11sunTrueLongEf():
    b2ac:	8f 92       	push	r8
    b2ae:	9f 92       	push	r9
    b2b0:	af 92       	push	r10
    b2b2:	bf 92       	push	r11
    b2b4:	cf 92       	push	r12
    b2b6:	df 92       	push	r13
    b2b8:	ef 92       	push	r14
    b2ba:	ff 92       	push	r15
    b2bc:	cf 93       	push	r28
    b2be:	df 93       	push	r29
    b2c0:	ec 01       	movw	r28, r24
    b2c2:	6a 01       	movw	r12, r20
    b2c4:	7b 01       	movw	r14, r22
    b2c6:	0e 94 0a 59 	call	0xb214	; 0xb214 <Dusk2Dawn::geomMeanLongSun(float)>
    b2ca:	4b 01       	movw	r8, r22
    b2cc:	5c 01       	movw	r10, r24
    b2ce:	b7 01       	movw	r22, r14
    b2d0:	a6 01       	movw	r20, r12
    b2d2:	ce 01       	movw	r24, r28
    b2d4:	0e 94 91 57 	call	0xaf22	; 0xaf22 <Dusk2Dawn::sunEqOfCenter(float)>
    b2d8:	9b 01       	movw	r18, r22
    b2da:	ac 01       	movw	r20, r24
    b2dc:	c5 01       	movw	r24, r10
    b2de:	b4 01       	movw	r22, r8
    b2e0:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b2e4:	df 91       	pop	r29
    b2e6:	cf 91       	pop	r28
    b2e8:	ff 90       	pop	r15
    b2ea:	ef 90       	pop	r14
    b2ec:	df 90       	pop	r13
    b2ee:	cf 90       	pop	r12
    b2f0:	bf 90       	pop	r11
    b2f2:	af 90       	pop	r10
    b2f4:	9f 90       	pop	r9
    b2f6:	8f 90       	pop	r8
    b2f8:	08 95       	ret

0000b2fa <Dusk2Dawn::sunApparentLong(float)>:
_ZN9Dusk2Dawn15sunApparentLongEf():
    b2fa:	4f 92       	push	r4
    b2fc:	5f 92       	push	r5
    b2fe:	6f 92       	push	r6
    b300:	7f 92       	push	r7
    b302:	8f 92       	push	r8
    b304:	9f 92       	push	r9
    b306:	af 92       	push	r10
    b308:	bf 92       	push	r11
    b30a:	cf 92       	push	r12
    b30c:	df 92       	push	r13
    b30e:	ef 92       	push	r14
    b310:	ff 92       	push	r15
    b312:	6a 01       	movw	r12, r20
    b314:	7b 01       	movw	r14, r22
    b316:	0e 94 56 59 	call	0xb2ac	; 0xb2ac <Dusk2Dawn::sunTrueLong(float)>
    b31a:	2b 01       	movw	r4, r22
    b31c:	3c 01       	movw	r6, r24
    b31e:	2a e5       	ldi	r18, 0x5A	; 90
    b320:	34 ec       	ldi	r19, 0xC4	; 196
    b322:	41 ef       	ldi	r20, 0xF1	; 241
    b324:	54 e4       	ldi	r21, 0x44	; 68
    b326:	c7 01       	movw	r24, r14
    b328:	b6 01       	movw	r22, r12
    b32a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b32e:	9b 01       	movw	r18, r22
    b330:	ac 01       	movw	r20, r24
    b332:	6b e7       	ldi	r22, 0x7B	; 123
    b334:	74 e1       	ldi	r23, 0x14	; 20
    b336:	8a ef       	ldi	r24, 0xFA	; 250
    b338:	92 e4       	ldi	r25, 0x42	; 66
    b33a:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
_ZN9Dusk2Dawn8degToRadEf():
    b33e:	2b ed       	ldi	r18, 0xDB	; 219
    b340:	3f e0       	ldi	r19, 0x0F	; 15
    b342:	49 e4       	ldi	r20, 0x49	; 73
    b344:	50 e4       	ldi	r21, 0x40	; 64
    b346:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b34a:	20 e0       	ldi	r18, 0x00	; 0
    b34c:	30 e0       	ldi	r19, 0x00	; 0
    b34e:	44 e3       	ldi	r20, 0x34	; 52
    b350:	53 e4       	ldi	r21, 0x43	; 67
    b352:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
_ZN9Dusk2Dawn15sunApparentLongEf():
    b356:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    b35a:	4b 01       	movw	r8, r22
    b35c:	5c 01       	movw	r10, r24
    b35e:	2e e2       	ldi	r18, 0x2E	; 46
    b360:	33 e7       	ldi	r19, 0x73	; 115
    b362:	4a eb       	ldi	r20, 0xBA	; 186
    b364:	5b e3       	ldi	r21, 0x3B	; 59
    b366:	c3 01       	movw	r24, r6
    b368:	b2 01       	movw	r22, r4
    b36a:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b36e:	6b 01       	movw	r12, r22
    b370:	7c 01       	movw	r14, r24
    b372:	2c e8       	ldi	r18, 0x8C	; 140
    b374:	31 ea       	ldi	r19, 0xA1	; 161
    b376:	4c e9       	ldi	r20, 0x9C	; 156
    b378:	5b e3       	ldi	r21, 0x3B	; 59
    b37a:	c5 01       	movw	r24, r10
    b37c:	b4 01       	movw	r22, r8
    b37e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b382:	9b 01       	movw	r18, r22
    b384:	ac 01       	movw	r20, r24
    b386:	c7 01       	movw	r24, r14
    b388:	b6 01       	movw	r22, r12
    b38a:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b38e:	ff 90       	pop	r15
    b390:	ef 90       	pop	r14
    b392:	df 90       	pop	r13
    b394:	cf 90       	pop	r12
    b396:	bf 90       	pop	r11
    b398:	af 90       	pop	r10
    b39a:	9f 90       	pop	r9
    b39c:	8f 90       	pop	r8
    b39e:	7f 90       	pop	r7
    b3a0:	6f 90       	pop	r6
    b3a2:	5f 90       	pop	r5
    b3a4:	4f 90       	pop	r4
    b3a6:	08 95       	ret

0000b3a8 <Dusk2Dawn::sunDeclination(float)>:
_ZN9Dusk2Dawn14sunDeclinationEf():
    b3a8:	4f 92       	push	r4
    b3aa:	5f 92       	push	r5
    b3ac:	6f 92       	push	r6
    b3ae:	7f 92       	push	r7
    b3b0:	8f 92       	push	r8
    b3b2:	9f 92       	push	r9
    b3b4:	af 92       	push	r10
    b3b6:	bf 92       	push	r11
    b3b8:	cf 92       	push	r12
    b3ba:	df 92       	push	r13
    b3bc:	ef 92       	push	r14
    b3be:	ff 92       	push	r15
    b3c0:	cf 93       	push	r28
    b3c2:	df 93       	push	r29
    b3c4:	ec 01       	movw	r28, r24
    b3c6:	6a 01       	movw	r12, r20
    b3c8:	7b 01       	movw	r14, r22
    b3ca:	0e 94 cb 58 	call	0xb196	; 0xb196 <Dusk2Dawn::obliquityCorrection(float)>
    b3ce:	2b 01       	movw	r4, r22
    b3d0:	3c 01       	movw	r6, r24
    b3d2:	b7 01       	movw	r22, r14
    b3d4:	a6 01       	movw	r20, r12
    b3d6:	ce 01       	movw	r24, r28
    b3d8:	0e 94 7d 59 	call	0xb2fa	; 0xb2fa <Dusk2Dawn::sunApparentLong(float)>
    b3dc:	4b 01       	movw	r8, r22
    b3de:	5c 01       	movw	r10, r24
_ZN9Dusk2Dawn8degToRadEf():
    b3e0:	2b ed       	ldi	r18, 0xDB	; 219
    b3e2:	3f e0       	ldi	r19, 0x0F	; 15
    b3e4:	49 e4       	ldi	r20, 0x49	; 73
    b3e6:	50 e4       	ldi	r21, 0x40	; 64
    b3e8:	c3 01       	movw	r24, r6
    b3ea:	b2 01       	movw	r22, r4
    b3ec:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b3f0:	20 e0       	ldi	r18, 0x00	; 0
    b3f2:	30 e0       	ldi	r19, 0x00	; 0
    b3f4:	44 e3       	ldi	r20, 0x34	; 52
    b3f6:	53 e4       	ldi	r21, 0x43	; 67
    b3f8:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
_ZN9Dusk2Dawn14sunDeclinationEf():
    b3fc:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    b400:	6b 01       	movw	r12, r22
    b402:	7c 01       	movw	r14, r24
_ZN9Dusk2Dawn8degToRadEf():
    b404:	2b ed       	ldi	r18, 0xDB	; 219
    b406:	3f e0       	ldi	r19, 0x0F	; 15
    b408:	49 e4       	ldi	r20, 0x49	; 73
    b40a:	50 e4       	ldi	r21, 0x40	; 64
    b40c:	c5 01       	movw	r24, r10
    b40e:	b4 01       	movw	r22, r8
    b410:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b414:	20 e0       	ldi	r18, 0x00	; 0
    b416:	30 e0       	ldi	r19, 0x00	; 0
    b418:	44 e3       	ldi	r20, 0x34	; 52
    b41a:	53 e4       	ldi	r21, 0x43	; 67
    b41c:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
_ZN9Dusk2Dawn14sunDeclinationEf():
    b420:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    b424:	9b 01       	movw	r18, r22
    b426:	ac 01       	movw	r20, r24
    b428:	c7 01       	movw	r24, r14
    b42a:	b6 01       	movw	r22, r12
    b42c:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b430:	0e 94 d4 70 	call	0xe1a8	; 0xe1a8 <asin>
_ZN9Dusk2Dawn8radToDegEf():
    b434:	20 e0       	ldi	r18, 0x00	; 0
    b436:	30 e0       	ldi	r19, 0x00	; 0
    b438:	44 e3       	ldi	r20, 0x34	; 52
    b43a:	53 e4       	ldi	r21, 0x43	; 67
    b43c:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b440:	2b ed       	ldi	r18, 0xDB	; 219
    b442:	3f e0       	ldi	r19, 0x0F	; 15
    b444:	49 e4       	ldi	r20, 0x49	; 73
    b446:	50 e4       	ldi	r21, 0x40	; 64
    b448:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
_ZN9Dusk2Dawn14sunDeclinationEf():
    b44c:	df 91       	pop	r29
    b44e:	cf 91       	pop	r28
    b450:	ff 90       	pop	r15
    b452:	ef 90       	pop	r14
    b454:	df 90       	pop	r13
    b456:	cf 90       	pop	r12
    b458:	bf 90       	pop	r11
    b45a:	af 90       	pop	r10
    b45c:	9f 90       	pop	r9
    b45e:	8f 90       	pop	r8
    b460:	7f 90       	pop	r7
    b462:	6f 90       	pop	r6
    b464:	5f 90       	pop	r5
    b466:	4f 90       	pop	r4
    b468:	08 95       	ret

0000b46a <Dusk2Dawn::equationOfTime(float)>:
_ZN9Dusk2Dawn14equationOfTimeEf():
    b46a:	4f 92       	push	r4
    b46c:	5f 92       	push	r5
    b46e:	6f 92       	push	r6
    b470:	7f 92       	push	r7
    b472:	8f 92       	push	r8
    b474:	9f 92       	push	r9
    b476:	af 92       	push	r10
    b478:	bf 92       	push	r11
    b47a:	cf 92       	push	r12
    b47c:	df 92       	push	r13
    b47e:	ef 92       	push	r14
    b480:	ff 92       	push	r15
    b482:	cf 93       	push	r28
    b484:	df 93       	push	r29
    b486:	cd b7       	in	r28, 0x3d	; 61
    b488:	de b7       	in	r29, 0x3e	; 62
    b48a:	64 97       	sbiw	r28, 0x14	; 20
    b48c:	0f b6       	in	r0, 0x3f	; 63
    b48e:	f8 94       	cli
    b490:	de bf       	out	0x3e, r29	; 62
    b492:	0f be       	out	0x3f, r0	; 63
    b494:	cd bf       	out	0x3d, r28	; 61
    b496:	5c 01       	movw	r10, r24
    b498:	6a 01       	movw	r12, r20
    b49a:	7b 01       	movw	r14, r22
    b49c:	0e 94 cb 58 	call	0xb196	; 0xb196 <Dusk2Dawn::obliquityCorrection(float)>
    b4a0:	2b 01       	movw	r4, r22
    b4a2:	3c 01       	movw	r6, r24
    b4a4:	b7 01       	movw	r22, r14
    b4a6:	a6 01       	movw	r20, r12
    b4a8:	c5 01       	movw	r24, r10
    b4aa:	0e 94 0a 59 	call	0xb214	; 0xb214 <Dusk2Dawn::geomMeanLongSun(float)>
    b4ae:	4b 01       	movw	r8, r22
    b4b0:	5c 01       	movw	r10, r24
_ZN9Dusk2Dawn22eccentricityEarthOrbitEf():
    b4b2:	28 e0       	ldi	r18, 0x08	; 8
    b4b4:	3b e0       	ldi	r19, 0x0B	; 11
    b4b6:	48 e0       	ldi	r20, 0x08	; 8
    b4b8:	54 e3       	ldi	r21, 0x34	; 52
    b4ba:	c7 01       	movw	r24, r14
    b4bc:	b6 01       	movw	r22, r12
    b4be:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b4c2:	23 ee       	ldi	r18, 0xE3	; 227
    b4c4:	30 e5       	ldi	r19, 0x50	; 80
    b4c6:	40 e3       	ldi	r20, 0x30	; 48
    b4c8:	58 e3       	ldi	r21, 0x38	; 56
    b4ca:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b4ce:	a7 01       	movw	r20, r14
    b4d0:	96 01       	movw	r18, r12
    b4d2:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b4d6:	9b 01       	movw	r18, r22
    b4d8:	ac 01       	movw	r20, r24
    b4da:	6c e8       	ldi	r22, 0x8C	; 140
    b4dc:	70 ee       	ldi	r23, 0xE0	; 224
    b4de:	88 e8       	ldi	r24, 0x88	; 136
    b4e0:	9c e3       	ldi	r25, 0x3C	; 60
    b4e2:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b4e6:	69 83       	std	Y+1, r22	; 0x01
    b4e8:	7a 83       	std	Y+2, r23	; 0x02
    b4ea:	8b 83       	std	Y+3, r24	; 0x03
    b4ec:	9c 83       	std	Y+4, r25	; 0x04
_ZN9Dusk2Dawn8degToRadEf():
    b4ee:	2b ed       	ldi	r18, 0xDB	; 219
    b4f0:	3f e0       	ldi	r19, 0x0F	; 15
    b4f2:	49 e4       	ldi	r20, 0x49	; 73
    b4f4:	50 e4       	ldi	r21, 0x40	; 64
    b4f6:	c3 01       	movw	r24, r6
    b4f8:	b2 01       	movw	r22, r4
    b4fa:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b4fe:	20 e0       	ldi	r18, 0x00	; 0
    b500:	30 e0       	ldi	r19, 0x00	; 0
    b502:	44 e3       	ldi	r20, 0x34	; 52
    b504:	53 e4       	ldi	r21, 0x43	; 67
    b506:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
_ZN9Dusk2Dawn14equationOfTimeEf():
    b50a:	20 e0       	ldi	r18, 0x00	; 0
    b50c:	30 e0       	ldi	r19, 0x00	; 0
    b50e:	40 e0       	ldi	r20, 0x00	; 0
    b510:	5f e3       	ldi	r21, 0x3F	; 63
    b512:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b516:	0e 94 83 74 	call	0xe906	; 0xe906 <tan>
    b51a:	9b 01       	movw	r18, r22
    b51c:	ac 01       	movw	r20, r24
    b51e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b522:	6d 83       	std	Y+5, r22	; 0x05
    b524:	7e 83       	std	Y+6, r23	; 0x06
    b526:	8f 83       	std	Y+7, r24	; 0x07
    b528:	98 87       	std	Y+8, r25	; 0x08
_ZN9Dusk2Dawn8degToRadEf():
    b52a:	2b ed       	ldi	r18, 0xDB	; 219
    b52c:	3f e0       	ldi	r19, 0x0F	; 15
    b52e:	49 e4       	ldi	r20, 0x49	; 73
    b530:	50 e4       	ldi	r21, 0x40	; 64
    b532:	c5 01       	movw	r24, r10
    b534:	b4 01       	movw	r22, r8
    b536:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b53a:	20 e0       	ldi	r18, 0x00	; 0
    b53c:	30 e0       	ldi	r19, 0x00	; 0
    b53e:	44 e3       	ldi	r20, 0x34	; 52
    b540:	53 e4       	ldi	r21, 0x43	; 67
    b542:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    b546:	4b 01       	movw	r8, r22
    b548:	5c 01       	movw	r10, r24
_ZN9Dusk2Dawn14equationOfTimeEf():
    b54a:	ac 01       	movw	r20, r24
    b54c:	9b 01       	movw	r18, r22
    b54e:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b552:	2b 01       	movw	r4, r22
    b554:	3c 01       	movw	r6, r24
    b556:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    b55a:	6d 87       	std	Y+13, r22	; 0x0d
    b55c:	7e 87       	std	Y+14, r23	; 0x0e
    b55e:	8f 87       	std	Y+15, r24	; 0x0f
    b560:	98 8b       	std	Y+16, r25	; 0x10
_ZN9Dusk2Dawn18geomMeanAnomalySunEf():
    b562:	28 e8       	ldi	r18, 0x88	; 136
    b564:	3a e2       	ldi	r19, 0x2A	; 42
    b566:	41 e2       	ldi	r20, 0x21	; 33
    b568:	59 e3       	ldi	r21, 0x39	; 57
    b56a:	c7 01       	movw	r24, r14
    b56c:	b6 01       	movw	r22, r12
    b56e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b572:	9b 01       	movw	r18, r22
    b574:	ac 01       	movw	r20, r24
    b576:	6d e0       	ldi	r22, 0x0D	; 13
    b578:	7f e9       	ldi	r23, 0x9F	; 159
    b57a:	8c e0       	ldi	r24, 0x0C	; 12
    b57c:	97 e4       	ldi	r25, 0x47	; 71
    b57e:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b582:	a7 01       	movw	r20, r14
    b584:	96 01       	movw	r18, r12
    b586:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b58a:	2a eb       	ldi	r18, 0xBA	; 186
    b58c:	33 ec       	ldi	r19, 0xC3	; 195
    b58e:	42 eb       	ldi	r20, 0xB2	; 178
    b590:	53 e4       	ldi	r21, 0x43	; 67
    b592:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
_ZN9Dusk2Dawn8degToRadEf():
    b596:	2b ed       	ldi	r18, 0xDB	; 219
    b598:	3f e0       	ldi	r19, 0x0F	; 15
    b59a:	49 e4       	ldi	r20, 0x49	; 73
    b59c:	50 e4       	ldi	r21, 0x40	; 64
    b59e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b5a2:	20 e0       	ldi	r18, 0x00	; 0
    b5a4:	30 e0       	ldi	r19, 0x00	; 0
    b5a6:	44 e3       	ldi	r20, 0x34	; 52
    b5a8:	53 e4       	ldi	r21, 0x43	; 67
    b5aa:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    b5ae:	6b 01       	movw	r12, r22
    b5b0:	7c 01       	movw	r14, r24
_ZN9Dusk2Dawn14equationOfTimeEf():
    b5b2:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    b5b6:	69 87       	std	Y+9, r22	; 0x09
    b5b8:	7a 87       	std	Y+10, r23	; 0x0a
    b5ba:	8b 87       	std	Y+11, r24	; 0x0b
    b5bc:	9c 87       	std	Y+12, r25	; 0x0c
    b5be:	c3 01       	movw	r24, r6
    b5c0:	b2 01       	movw	r22, r4
    b5c2:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    b5c6:	69 8b       	std	Y+17, r22	; 0x11
    b5c8:	7a 8b       	std	Y+18, r23	; 0x12
    b5ca:	8b 8b       	std	Y+19, r24	; 0x13
    b5cc:	9c 8b       	std	Y+20, r25	; 0x14
    b5ce:	20 e0       	ldi	r18, 0x00	; 0
    b5d0:	30 e0       	ldi	r19, 0x00	; 0
    b5d2:	40 e8       	ldi	r20, 0x80	; 128
    b5d4:	50 e4       	ldi	r21, 0x40	; 64
    b5d6:	c5 01       	movw	r24, r10
    b5d8:	b4 01       	movw	r22, r8
    b5da:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b5de:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    b5e2:	2b 01       	movw	r4, r22
    b5e4:	3c 01       	movw	r6, r24
    b5e6:	a7 01       	movw	r20, r14
    b5e8:	96 01       	movw	r18, r12
    b5ea:	c7 01       	movw	r24, r14
    b5ec:	b6 01       	movw	r22, r12
    b5ee:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b5f2:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    b5f6:	4b 01       	movw	r8, r22
    b5f8:	5c 01       	movw	r10, r24
    b5fa:	2d 85       	ldd	r18, Y+13	; 0x0d
    b5fc:	3e 85       	ldd	r19, Y+14	; 0x0e
    b5fe:	4f 85       	ldd	r20, Y+15	; 0x0f
    b600:	58 89       	ldd	r21, Y+16	; 0x10
    b602:	6d 81       	ldd	r22, Y+5	; 0x05
    b604:	7e 81       	ldd	r23, Y+6	; 0x06
    b606:	8f 81       	ldd	r24, Y+7	; 0x07
    b608:	98 85       	ldd	r25, Y+8	; 0x08
    b60a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b60e:	6b 01       	movw	r12, r22
    b610:	7c 01       	movw	r14, r24
    b612:	29 81       	ldd	r18, Y+1	; 0x01
    b614:	3a 81       	ldd	r19, Y+2	; 0x02
    b616:	4b 81       	ldd	r20, Y+3	; 0x03
    b618:	5c 81       	ldd	r21, Y+4	; 0x04
    b61a:	ca 01       	movw	r24, r20
    b61c:	b9 01       	movw	r22, r18
    b61e:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b622:	29 85       	ldd	r18, Y+9	; 0x09
    b624:	3a 85       	ldd	r19, Y+10	; 0x0a
    b626:	4b 85       	ldd	r20, Y+11	; 0x0b
    b628:	5c 85       	ldd	r21, Y+12	; 0x0c
    b62a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b62e:	9b 01       	movw	r18, r22
    b630:	ac 01       	movw	r20, r24
    b632:	c7 01       	movw	r24, r14
    b634:	b6 01       	movw	r22, r12
    b636:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b63a:	6b 01       	movw	r12, r22
    b63c:	7c 01       	movw	r14, r24
    b63e:	20 e0       	ldi	r18, 0x00	; 0
    b640:	30 e0       	ldi	r19, 0x00	; 0
    b642:	40 e8       	ldi	r20, 0x80	; 128
    b644:	50 e4       	ldi	r21, 0x40	; 64
    b646:	69 81       	ldd	r22, Y+1	; 0x01
    b648:	7a 81       	ldd	r23, Y+2	; 0x02
    b64a:	8b 81       	ldd	r24, Y+3	; 0x03
    b64c:	9c 81       	ldd	r25, Y+4	; 0x04
    b64e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b652:	2d 81       	ldd	r18, Y+5	; 0x05
    b654:	3e 81       	ldd	r19, Y+6	; 0x06
    b656:	4f 81       	ldd	r20, Y+7	; 0x07
    b658:	58 85       	ldd	r21, Y+8	; 0x08
    b65a:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b65e:	29 85       	ldd	r18, Y+9	; 0x09
    b660:	3a 85       	ldd	r19, Y+10	; 0x0a
    b662:	4b 85       	ldd	r20, Y+11	; 0x0b
    b664:	5c 85       	ldd	r21, Y+12	; 0x0c
    b666:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b66a:	29 89       	ldd	r18, Y+17	; 0x11
    b66c:	3a 89       	ldd	r19, Y+18	; 0x12
    b66e:	4b 89       	ldd	r20, Y+19	; 0x13
    b670:	5c 89       	ldd	r21, Y+20	; 0x14
    b672:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b676:	9b 01       	movw	r18, r22
    b678:	ac 01       	movw	r20, r24
    b67a:	c7 01       	movw	r24, r14
    b67c:	b6 01       	movw	r22, r12
    b67e:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b682:	6b 01       	movw	r12, r22
    b684:	7c 01       	movw	r14, r24
    b686:	20 e0       	ldi	r18, 0x00	; 0
    b688:	30 e0       	ldi	r19, 0x00	; 0
    b68a:	40 e0       	ldi	r20, 0x00	; 0
    b68c:	5f e3       	ldi	r21, 0x3F	; 63
    b68e:	6d 81       	ldd	r22, Y+5	; 0x05
    b690:	7e 81       	ldd	r23, Y+6	; 0x06
    b692:	8f 81       	ldd	r24, Y+7	; 0x07
    b694:	98 85       	ldd	r25, Y+8	; 0x08
    b696:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b69a:	2d 81       	ldd	r18, Y+5	; 0x05
    b69c:	3e 81       	ldd	r19, Y+6	; 0x06
    b69e:	4f 81       	ldd	r20, Y+7	; 0x07
    b6a0:	58 85       	ldd	r21, Y+8	; 0x08
    b6a2:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b6a6:	a3 01       	movw	r20, r6
    b6a8:	92 01       	movw	r18, r4
    b6aa:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b6ae:	9b 01       	movw	r18, r22
    b6b0:	ac 01       	movw	r20, r24
    b6b2:	c7 01       	movw	r24, r14
    b6b4:	b6 01       	movw	r22, r12
    b6b6:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b6ba:	6b 01       	movw	r12, r22
    b6bc:	7c 01       	movw	r14, r24
    b6be:	20 e0       	ldi	r18, 0x00	; 0
    b6c0:	30 e0       	ldi	r19, 0x00	; 0
    b6c2:	40 ea       	ldi	r20, 0xA0	; 160
    b6c4:	5f e3       	ldi	r21, 0x3F	; 63
    b6c6:	69 81       	ldd	r22, Y+1	; 0x01
    b6c8:	7a 81       	ldd	r23, Y+2	; 0x02
    b6ca:	8b 81       	ldd	r24, Y+3	; 0x03
    b6cc:	9c 81       	ldd	r25, Y+4	; 0x04
    b6ce:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b6d2:	29 81       	ldd	r18, Y+1	; 0x01
    b6d4:	3a 81       	ldd	r19, Y+2	; 0x02
    b6d6:	4b 81       	ldd	r20, Y+3	; 0x03
    b6d8:	5c 81       	ldd	r21, Y+4	; 0x04
    b6da:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b6de:	a5 01       	movw	r20, r10
    b6e0:	94 01       	movw	r18, r8
    b6e2:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b6e6:	9b 01       	movw	r18, r22
    b6e8:	ac 01       	movw	r20, r24
    b6ea:	c7 01       	movw	r24, r14
    b6ec:	b6 01       	movw	r22, r12
    b6ee:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
_ZN9Dusk2Dawn8radToDegEf():
    b6f2:	20 e0       	ldi	r18, 0x00	; 0
    b6f4:	30 e0       	ldi	r19, 0x00	; 0
    b6f6:	44 e3       	ldi	r20, 0x34	; 52
    b6f8:	53 e4       	ldi	r21, 0x43	; 67
    b6fa:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b6fe:	2b ed       	ldi	r18, 0xDB	; 219
    b700:	3f e0       	ldi	r19, 0x0F	; 15
    b702:	49 e4       	ldi	r20, 0x49	; 73
    b704:	50 e4       	ldi	r21, 0x40	; 64
    b706:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
_ZN9Dusk2Dawn14equationOfTimeEf():
    b70a:	20 e0       	ldi	r18, 0x00	; 0
    b70c:	30 e0       	ldi	r19, 0x00	; 0
    b70e:	40 e8       	ldi	r20, 0x80	; 128
    b710:	50 e4       	ldi	r21, 0x40	; 64
    b712:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b716:	64 96       	adiw	r28, 0x14	; 20
    b718:	0f b6       	in	r0, 0x3f	; 63
    b71a:	f8 94       	cli
    b71c:	de bf       	out	0x3e, r29	; 62
    b71e:	0f be       	out	0x3f, r0	; 63
    b720:	cd bf       	out	0x3d, r28	; 61
    b722:	df 91       	pop	r29
    b724:	cf 91       	pop	r28
    b726:	ff 90       	pop	r15
    b728:	ef 90       	pop	r14
    b72a:	df 90       	pop	r13
    b72c:	cf 90       	pop	r12
    b72e:	bf 90       	pop	r11
    b730:	af 90       	pop	r10
    b732:	9f 90       	pop	r9
    b734:	8f 90       	pop	r8
    b736:	7f 90       	pop	r7
    b738:	6f 90       	pop	r6
    b73a:	5f 90       	pop	r5
    b73c:	4f 90       	pop	r4
    b73e:	08 95       	ret

0000b740 <Dusk2Dawn::sunriseSetUTC(bool, float, float, float)>:
_ZN9Dusk2Dawn13sunriseSetUTCEbfff():
    b740:	3f 92       	push	r3
    b742:	4f 92       	push	r4
    b744:	5f 92       	push	r5
    b746:	6f 92       	push	r6
    b748:	7f 92       	push	r7
    b74a:	af 92       	push	r10
    b74c:	bf 92       	push	r11
    b74e:	cf 92       	push	r12
    b750:	df 92       	push	r13
    b752:	ef 92       	push	r14
    b754:	ff 92       	push	r15
    b756:	0f 93       	push	r16
    b758:	1f 93       	push	r17
    b75a:	cf 93       	push	r28
    b75c:	df 93       	push	r29
    b75e:	cd b7       	in	r28, 0x3d	; 61
    b760:	de b7       	in	r29, 0x3e	; 62
    b762:	2a 97       	sbiw	r28, 0x0a	; 10
    b764:	0f b6       	in	r0, 0x3f	; 63
    b766:	f8 94       	cli
    b768:	de bf       	out	0x3e, r29	; 62
    b76a:	0f be       	out	0x3f, r0	; 63
    b76c:	cd bf       	out	0x3d, r28	; 61
    b76e:	9a 87       	std	Y+10, r25	; 0x0a
    b770:	89 87       	std	Y+9, r24	; 0x09
    b772:	36 2e       	mov	r3, r22
    b774:	ca 01       	movw	r24, r20
    b776:	b9 01       	movw	r22, r18
    b778:	ed 82       	std	Y+5, r14	; 0x05
    b77a:	fe 82       	std	Y+6, r15	; 0x06
    b77c:	0f 83       	std	Y+7, r16	; 0x07
    b77e:	18 87       	std	Y+8, r17	; 0x08
_ZN9Dusk2Dawn17fractionOfCenturyEf():
    b780:	24 e6       	ldi	r18, 0x64	; 100
    b782:	31 ea       	ldi	r19, 0xA1	; 161
    b784:	45 e1       	ldi	r20, 0x15	; 21
    b786:	5a e4       	ldi	r21, 0x4A	; 74
    b788:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b78c:	20 e0       	ldi	r18, 0x00	; 0
    b78e:	3d ea       	ldi	r19, 0xAD	; 173
    b790:	4e e0       	ldi	r20, 0x0E	; 14
    b792:	57 e4       	ldi	r21, 0x47	; 71
    b794:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    b798:	2b 01       	movw	r4, r22
    b79a:	3c 01       	movw	r6, r24
_ZN9Dusk2Dawn13sunriseSetUTCEbfff():
    b79c:	bc 01       	movw	r22, r24
    b79e:	a2 01       	movw	r20, r4
    b7a0:	89 85       	ldd	r24, Y+9	; 0x09
    b7a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    b7a4:	0e 94 35 5a 	call	0xb46a	; 0xb46a <Dusk2Dawn::equationOfTime(float)>
    b7a8:	69 83       	std	Y+1, r22	; 0x01
    b7aa:	7a 83       	std	Y+2, r23	; 0x02
    b7ac:	8b 83       	std	Y+3, r24	; 0x03
    b7ae:	9c 83       	std	Y+4, r25	; 0x04
    b7b0:	b3 01       	movw	r22, r6
    b7b2:	a2 01       	movw	r20, r4
    b7b4:	89 85       	ldd	r24, Y+9	; 0x09
    b7b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    b7b8:	0e 94 d4 59 	call	0xb3a8	; 0xb3a8 <Dusk2Dawn::sunDeclination(float)>
    b7bc:	8b 01       	movw	r16, r22
    b7be:	9c 01       	movw	r18, r24
    b7c0:	4d 81       	ldd	r20, Y+5	; 0x05
    b7c2:	5e 81       	ldd	r21, Y+6	; 0x06
    b7c4:	6f 81       	ldd	r22, Y+7	; 0x07
    b7c6:	78 85       	ldd	r23, Y+8	; 0x08
    b7c8:	89 85       	ldd	r24, Y+9	; 0x09
    b7ca:	9a 85       	ldd	r25, Y+10	; 0x0a
    b7cc:	0e 94 48 58 	call	0xb090	; 0xb090 <Dusk2Dawn::hourAngleSunrise(float, float)>
    b7d0:	31 10       	cpse	r3, r1
    b7d2:	01 c0       	rjmp	.+2      	; 0xb7d6 <Dusk2Dawn::sunriseSetUTC(bool, float, float, float)+0x96>
    b7d4:	90 58       	subi	r25, 0x80	; 128
_ZN9Dusk2Dawn8radToDegEf():
    b7d6:	20 e0       	ldi	r18, 0x00	; 0
    b7d8:	30 e0       	ldi	r19, 0x00	; 0
    b7da:	44 e3       	ldi	r20, 0x34	; 52
    b7dc:	53 e4       	ldi	r21, 0x43	; 67
    b7de:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b7e2:	2b ed       	ldi	r18, 0xDB	; 219
    b7e4:	3f e0       	ldi	r19, 0x0F	; 15
    b7e6:	49 e4       	ldi	r20, 0x49	; 73
    b7e8:	50 e4       	ldi	r21, 0x40	; 64
    b7ea:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
_ZN9Dusk2Dawn13sunriseSetUTCEbfff():
    b7ee:	a6 01       	movw	r20, r12
    b7f0:	95 01       	movw	r18, r10
    b7f2:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b7f6:	20 e0       	ldi	r18, 0x00	; 0
    b7f8:	30 e0       	ldi	r19, 0x00	; 0
    b7fa:	40 e8       	ldi	r20, 0x80	; 128
    b7fc:	50 e4       	ldi	r21, 0x40	; 64
    b7fe:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b802:	9b 01       	movw	r18, r22
    b804:	ac 01       	movw	r20, r24
    b806:	60 e0       	ldi	r22, 0x00	; 0
    b808:	70 e0       	ldi	r23, 0x00	; 0
    b80a:	84 e3       	ldi	r24, 0x34	; 52
    b80c:	94 e4       	ldi	r25, 0x44	; 68
    b80e:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b812:	29 81       	ldd	r18, Y+1	; 0x01
    b814:	3a 81       	ldd	r19, Y+2	; 0x02
    b816:	4b 81       	ldd	r20, Y+3	; 0x03
    b818:	5c 81       	ldd	r21, Y+4	; 0x04
    b81a:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b81e:	2a 96       	adiw	r28, 0x0a	; 10
    b820:	0f b6       	in	r0, 0x3f	; 63
    b822:	f8 94       	cli
    b824:	de bf       	out	0x3e, r29	; 62
    b826:	0f be       	out	0x3f, r0	; 63
    b828:	cd bf       	out	0x3d, r28	; 61
    b82a:	df 91       	pop	r29
    b82c:	cf 91       	pop	r28
    b82e:	1f 91       	pop	r17
    b830:	0f 91       	pop	r16
    b832:	ff 90       	pop	r15
    b834:	ef 90       	pop	r14
    b836:	df 90       	pop	r13
    b838:	cf 90       	pop	r12
    b83a:	bf 90       	pop	r11
    b83c:	af 90       	pop	r10
    b83e:	7f 90       	pop	r7
    b840:	6f 90       	pop	r6
    b842:	5f 90       	pop	r5
    b844:	4f 90       	pop	r4
    b846:	3f 90       	pop	r3
    b848:	08 95       	ret

0000b84a <Dusk2Dawn::jDay(int, int, int)>:
_ZN9Dusk2Dawn4jDayEiii():
    b84a:	4f 92       	push	r4
    b84c:	5f 92       	push	r5
    b84e:	6f 92       	push	r6
    b850:	7f 92       	push	r7
    b852:	8f 92       	push	r8
    b854:	9f 92       	push	r9
    b856:	af 92       	push	r10
    b858:	bf 92       	push	r11
    b85a:	cf 92       	push	r12
    b85c:	df 92       	push	r13
    b85e:	ef 92       	push	r14
    b860:	ff 92       	push	r15
    b862:	0f 93       	push	r16
    b864:	1f 93       	push	r17
    b866:	cf 93       	push	r28
    b868:	df 93       	push	r29
    b86a:	eb 01       	movw	r28, r22
    b86c:	5a 01       	movw	r10, r20
    b86e:	89 01       	movw	r16, r18
    b870:	43 30       	cpi	r20, 0x03	; 3
    b872:	51 05       	cpc	r21, r1
    b874:	24 f4       	brge	.+8      	; 0xb87e <Dusk2Dawn::jDay(int, int, int)+0x34>
    b876:	21 97       	sbiw	r28, 0x01	; 1
    b878:	8c e0       	ldi	r24, 0x0C	; 12
    b87a:	a8 0e       	add	r10, r24
    b87c:	b1 1c       	adc	r11, r1
    b87e:	be 01       	movw	r22, r28
    b880:	64 59       	subi	r22, 0x94	; 148
    b882:	7d 4e       	sbci	r23, 0xED	; 237
    b884:	07 2e       	mov	r0, r23
    b886:	00 0c       	add	r0, r0
    b888:	88 0b       	sbc	r24, r24
    b88a:	99 0b       	sbc	r25, r25
    b88c:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    b890:	20 e0       	ldi	r18, 0x00	; 0
    b892:	30 ea       	ldi	r19, 0xA0	; 160
    b894:	46 eb       	ldi	r20, 0xB6	; 182
    b896:	53 e4       	ldi	r21, 0x43	; 67
    b898:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b89c:	0e 94 50 72 	call	0xe4a0	; 0xe4a0 <floor>
    b8a0:	6b 01       	movw	r12, r22
    b8a2:	7c 01       	movw	r14, r24
    b8a4:	b5 01       	movw	r22, r10
    b8a6:	6f 5f       	subi	r22, 0xFF	; 255
    b8a8:	7f 4f       	sbci	r23, 0xFF	; 255
    b8aa:	07 2e       	mov	r0, r23
    b8ac:	00 0c       	add	r0, r0
    b8ae:	88 0b       	sbc	r24, r24
    b8b0:	99 0b       	sbc	r25, r25
    b8b2:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    b8b6:	21 e0       	ldi	r18, 0x01	; 1
    b8b8:	3d ec       	ldi	r19, 0xCD	; 205
    b8ba:	44 ef       	ldi	r20, 0xF4	; 244
    b8bc:	51 e4       	ldi	r21, 0x41	; 65
    b8be:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    b8c2:	0e 94 50 72 	call	0xe4a0	; 0xe4a0 <floor>
    b8c6:	4b 01       	movw	r8, r22
    b8c8:	5c 01       	movw	r10, r24
    b8ca:	ce 01       	movw	r24, r28
    b8cc:	64 e6       	ldi	r22, 0x64	; 100
    b8ce:	70 e0       	ldi	r23, 0x00	; 0
    b8d0:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodhi4>
    b8d4:	cb 01       	movw	r24, r22
    b8d6:	62 e0       	ldi	r22, 0x02	; 2
    b8d8:	70 e0       	ldi	r23, 0x00	; 0
    b8da:	68 1b       	sub	r22, r24
    b8dc:	79 0b       	sbc	r23, r25
    b8de:	07 2e       	mov	r0, r23
    b8e0:	00 0c       	add	r0, r0
    b8e2:	88 0b       	sbc	r24, r24
    b8e4:	99 0b       	sbc	r25, r25
    b8e6:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    b8ea:	2b 01       	movw	r4, r22
    b8ec:	3c 01       	movw	r6, r24
    b8ee:	ce 01       	movw	r24, r28
    b8f0:	60 e9       	ldi	r22, 0x90	; 144
    b8f2:	71 e0       	ldi	r23, 0x01	; 1
    b8f4:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodhi4>
    b8f8:	07 2e       	mov	r0, r23
    b8fa:	00 0c       	add	r0, r0
    b8fc:	88 0b       	sbc	r24, r24
    b8fe:	99 0b       	sbc	r25, r25
    b900:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    b904:	9b 01       	movw	r18, r22
    b906:	ac 01       	movw	r20, r24
    b908:	c3 01       	movw	r24, r6
    b90a:	b2 01       	movw	r22, r4
    b90c:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b910:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    b914:	07 2e       	mov	r0, r23
    b916:	00 0c       	add	r0, r0
    b918:	88 0b       	sbc	r24, r24
    b91a:	99 0b       	sbc	r25, r25
    b91c:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    b920:	2b 01       	movw	r4, r22
    b922:	3c 01       	movw	r6, r24
    b924:	a5 01       	movw	r20, r10
    b926:	94 01       	movw	r18, r8
    b928:	c7 01       	movw	r24, r14
    b92a:	b6 01       	movw	r22, r12
    b92c:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b930:	6b 01       	movw	r12, r22
    b932:	7c 01       	movw	r14, r24
    b934:	b8 01       	movw	r22, r16
    b936:	11 0f       	add	r17, r17
    b938:	88 0b       	sbc	r24, r24
    b93a:	99 0b       	sbc	r25, r25
    b93c:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    b940:	9b 01       	movw	r18, r22
    b942:	ac 01       	movw	r20, r24
    b944:	c7 01       	movw	r24, r14
    b946:	b6 01       	movw	r22, r12
    b948:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b94c:	9b 01       	movw	r18, r22
    b94e:	ac 01       	movw	r20, r24
    b950:	c3 01       	movw	r24, r6
    b952:	b2 01       	movw	r22, r4
    b954:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    b958:	20 e0       	ldi	r18, 0x00	; 0
    b95a:	30 e9       	ldi	r19, 0x90	; 144
    b95c:	4e eb       	ldi	r20, 0xBE	; 190
    b95e:	54 e4       	ldi	r21, 0x44	; 68
    b960:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    b964:	df 91       	pop	r29
    b966:	cf 91       	pop	r28
    b968:	1f 91       	pop	r17
    b96a:	0f 91       	pop	r16
    b96c:	ff 90       	pop	r15
    b96e:	ef 90       	pop	r14
    b970:	df 90       	pop	r13
    b972:	cf 90       	pop	r12
    b974:	bf 90       	pop	r11
    b976:	af 90       	pop	r10
    b978:	9f 90       	pop	r9
    b97a:	8f 90       	pop	r8
    b97c:	7f 90       	pop	r7
    b97e:	6f 90       	pop	r6
    b980:	5f 90       	pop	r5
    b982:	4f 90       	pop	r4
    b984:	08 95       	ret

0000b986 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)>:
_ZN9Dusk2Dawn10sunriseSetEbiiib():
    b986:	4f 92       	push	r4
    b988:	5f 92       	push	r5
    b98a:	6f 92       	push	r6
    b98c:	7f 92       	push	r7
    b98e:	8f 92       	push	r8
    b990:	9f 92       	push	r9
    b992:	af 92       	push	r10
    b994:	bf 92       	push	r11
    b996:	cf 92       	push	r12
    b998:	df 92       	push	r13
    b99a:	ef 92       	push	r14
    b99c:	ff 92       	push	r15
    b99e:	0f 93       	push	r16
    b9a0:	1f 93       	push	r17
    b9a2:	cf 93       	push	r28
    b9a4:	df 93       	push	r29
    b9a6:	cd b7       	in	r28, 0x3d	; 61
    b9a8:	de b7       	in	r29, 0x3e	; 62
    b9aa:	2a 97       	sbiw	r28, 0x0a	; 10
    b9ac:	0f b6       	in	r0, 0x3f	; 63
    b9ae:	f8 94       	cli
    b9b0:	de bf       	out	0x3e, r29	; 62
    b9b2:	0f be       	out	0x3f, r0	; 63
    b9b4:	cd bf       	out	0x3d, r28	; 61
    b9b6:	4c 01       	movw	r8, r24
    b9b8:	69 87       	std	Y+9, r22	; 0x09
    b9ba:	ba 01       	movw	r22, r20
    b9bc:	a9 01       	movw	r20, r18
    b9be:	98 01       	movw	r18, r16
    b9c0:	ea 86       	std	Y+10, r14	; 0x0a
    b9c2:	0e 94 25 5c 	call	0xb84a	; 0xb84a <Dusk2Dawn::jDay(int, int, int)>
    b9c6:	6d 83       	std	Y+5, r22	; 0x05
    b9c8:	7e 83       	std	Y+6, r23	; 0x06
    b9ca:	8f 83       	std	Y+7, r24	; 0x07
    b9cc:	98 87       	std	Y+8, r25	; 0x08
    b9ce:	d4 01       	movw	r26, r8
    b9d0:	14 96       	adiw	r26, 0x04	; 4
    b9d2:	4d 90       	ld	r4, X+
    b9d4:	5d 90       	ld	r5, X+
    b9d6:	6d 90       	ld	r6, X+
    b9d8:	7c 90       	ld	r7, X
    b9da:	17 97       	sbiw	r26, 0x07	; 7
    b9dc:	8d 91       	ld	r24, X+
    b9de:	9d 91       	ld	r25, X+
    b9e0:	0d 90       	ld	r0, X+
    b9e2:	bc 91       	ld	r27, X
    b9e4:	a0 2d       	mov	r26, r0
    b9e6:	89 83       	std	Y+1, r24	; 0x01
    b9e8:	9a 83       	std	Y+2, r25	; 0x02
    b9ea:	ab 83       	std	Y+3, r26	; 0x03
    b9ec:	bc 83       	std	Y+4, r27	; 0x04
    b9ee:	63 01       	movw	r12, r6
    b9f0:	52 01       	movw	r10, r4
    b9f2:	7c 01       	movw	r14, r24
    b9f4:	8d 01       	movw	r16, r26
    b9f6:	2d 81       	ldd	r18, Y+5	; 0x05
    b9f8:	3e 81       	ldd	r19, Y+6	; 0x06
    b9fa:	4f 81       	ldd	r20, Y+7	; 0x07
    b9fc:	58 85       	ldd	r21, Y+8	; 0x08
    b9fe:	69 85       	ldd	r22, Y+9	; 0x09
    ba00:	c4 01       	movw	r24, r8
    ba02:	0e 94 a0 5b 	call	0xb740	; 0xb740 <Dusk2Dawn::sunriseSetUTC(bool, float, float, float)>
    ba06:	20 e0       	ldi	r18, 0x00	; 0
    ba08:	30 e0       	ldi	r19, 0x00	; 0
    ba0a:	44 eb       	ldi	r20, 0xB4	; 180
    ba0c:	54 e4       	ldi	r21, 0x44	; 68
    ba0e:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    ba12:	2d 81       	ldd	r18, Y+5	; 0x05
    ba14:	3e 81       	ldd	r19, Y+6	; 0x06
    ba16:	4f 81       	ldd	r20, Y+7	; 0x07
    ba18:	58 85       	ldd	r21, Y+8	; 0x08
    ba1a:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    ba1e:	9b 01       	movw	r18, r22
    ba20:	ac 01       	movw	r20, r24
    ba22:	e9 80       	ldd	r14, Y+1	; 0x01
    ba24:	fa 80       	ldd	r15, Y+2	; 0x02
    ba26:	0b 81       	ldd	r16, Y+3	; 0x03
    ba28:	1c 81       	ldd	r17, Y+4	; 0x04
    ba2a:	69 85       	ldd	r22, Y+9	; 0x09
    ba2c:	c4 01       	movw	r24, r8
    ba2e:	0e 94 a0 5b 	call	0xb740	; 0xb740 <Dusk2Dawn::sunriseSetUTC(bool, float, float, float)>
    ba32:	2b 01       	movw	r4, r22
    ba34:	3c 01       	movw	r6, r24
    ba36:	ac 01       	movw	r20, r24
    ba38:	9b 01       	movw	r18, r22
    ba3a:	0e 94 a8 74 	call	0xe950	; 0xe950 <__unordsf2>
    ba3e:	81 11       	cpse	r24, r1
    ba40:	4b c0       	rjmp	.+150    	; 0xbad8 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)+0x152>
    ba42:	f4 01       	movw	r30, r8
    ba44:	80 85       	ldd	r24, Z+8	; 0x08
    ba46:	91 85       	ldd	r25, Z+9	; 0x09
    ba48:	2c e3       	ldi	r18, 0x3C	; 60
    ba4a:	28 9f       	mul	r18, r24
    ba4c:	b0 01       	movw	r22, r0
    ba4e:	29 9f       	mul	r18, r25
    ba50:	70 0d       	add	r23, r0
    ba52:	11 24       	eor	r1, r1
    ba54:	07 2e       	mov	r0, r23
    ba56:	00 0c       	add	r0, r0
    ba58:	88 0b       	sbc	r24, r24
    ba5a:	99 0b       	sbc	r25, r25
    ba5c:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    ba60:	a3 01       	movw	r20, r6
    ba62:	92 01       	movw	r18, r4
    ba64:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    ba68:	2b 01       	movw	r4, r22
    ba6a:	3c 01       	movw	r6, r24
    ba6c:	20 e0       	ldi	r18, 0x00	; 0
    ba6e:	30 e0       	ldi	r19, 0x00	; 0
    ba70:	a9 01       	movw	r20, r18
    ba72:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    ba76:	20 e0       	ldi	r18, 0x00	; 0
    ba78:	30 e0       	ldi	r19, 0x00	; 0
    ba7a:	40 e0       	ldi	r20, 0x00	; 0
    ba7c:	5f e3       	ldi	r21, 0x3F	; 63
    ba7e:	87 fd       	sbrc	r24, 7
    ba80:	26 c0       	rjmp	.+76     	; 0xbace <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)+0x148>
    ba82:	c3 01       	movw	r24, r6
    ba84:	b2 01       	movw	r22, r4
    ba86:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    ba8a:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    ba8e:	fa 85       	ldd	r31, Y+10	; 0x0a
    ba90:	90 e0       	ldi	r25, 0x00	; 0
    ba92:	80 e0       	ldi	r24, 0x00	; 0
    ba94:	ff 23       	and	r31, r31
    ba96:	11 f0       	breq	.+4      	; 0xba9c <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)+0x116>
    ba98:	8c e3       	ldi	r24, 0x3C	; 60
    ba9a:	90 e0       	ldi	r25, 0x00	; 0
    ba9c:	86 0f       	add	r24, r22
    ba9e:	97 1f       	adc	r25, r23
    baa0:	2a 96       	adiw	r28, 0x0a	; 10
    baa2:	0f b6       	in	r0, 0x3f	; 63
    baa4:	f8 94       	cli
    baa6:	de bf       	out	0x3e, r29	; 62
    baa8:	0f be       	out	0x3f, r0	; 63
    baaa:	cd bf       	out	0x3d, r28	; 61
    baac:	df 91       	pop	r29
    baae:	cf 91       	pop	r28
    bab0:	1f 91       	pop	r17
    bab2:	0f 91       	pop	r16
    bab4:	ff 90       	pop	r15
    bab6:	ef 90       	pop	r14
    bab8:	df 90       	pop	r13
    baba:	cf 90       	pop	r12
    babc:	bf 90       	pop	r11
    babe:	af 90       	pop	r10
    bac0:	9f 90       	pop	r9
    bac2:	8f 90       	pop	r8
    bac4:	7f 90       	pop	r7
    bac6:	6f 90       	pop	r6
    bac8:	5f 90       	pop	r5
    baca:	4f 90       	pop	r4
    bacc:	08 95       	ret
    bace:	c3 01       	movw	r24, r6
    bad0:	b2 01       	movw	r22, r4
    bad2:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    bad6:	d9 cf       	rjmp	.-78     	; 0xba8a <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)+0x104>
    bad8:	8f ef       	ldi	r24, 0xFF	; 255
    bada:	9f ef       	ldi	r25, 0xFF	; 255
    badc:	e1 cf       	rjmp	.-62     	; 0xbaa0 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)+0x11a>

0000bade <Dusk2Dawn::sunrise(int, int, int, bool)>:
_ZN9Dusk2Dawn7sunriseEiiib():
    bade:	ef 92       	push	r14
    bae0:	0f 93       	push	r16
    bae2:	1f 93       	push	r17
    bae4:	e0 2e       	mov	r14, r16
    bae6:	89 01       	movw	r16, r18
    bae8:	9a 01       	movw	r18, r20
    baea:	ab 01       	movw	r20, r22
    baec:	61 e0       	ldi	r22, 0x01	; 1
    baee:	0e 94 c3 5c 	call	0xb986	; 0xb986 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)>
    baf2:	1f 91       	pop	r17
    baf4:	0f 91       	pop	r16
    baf6:	ef 90       	pop	r14
    baf8:	08 95       	ret

0000bafa <Dusk2Dawn::sunset(int, int, int, bool)>:
_ZN9Dusk2Dawn6sunsetEiiib():
    bafa:	ef 92       	push	r14
    bafc:	0f 93       	push	r16
    bafe:	1f 93       	push	r17
    bb00:	e0 2e       	mov	r14, r16
    bb02:	89 01       	movw	r16, r18
    bb04:	9a 01       	movw	r18, r20
    bb06:	ab 01       	movw	r20, r22
    bb08:	60 e0       	ldi	r22, 0x00	; 0
    bb0a:	0e 94 c3 5c 	call	0xb986	; 0xb986 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)>
    bb0e:	1f 91       	pop	r17
    bb10:	0f 91       	pop	r16
    bb12:	ef 90       	pop	r14
    bb14:	08 95       	ret

0000bb16 <Dusk2Dawn::zeroPadTime(char*, unsigned char)>:
_ZN9Dusk2Dawn11zeroPadTimeEPch():
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:293

/* Zero-pad a component of time, e.g. 1 → "01", 24 → "24".
 *
 * NOTE: Supports integers of up to only two digits.
 */
bool Dusk2Dawn::zeroPadTime(char *str, byte timeComponent) {
    bb16:	1f 93       	push	r17
    bb18:	cf 93       	push	r28
    bb1a:	df 93       	push	r29
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:294
  if (timeComponent >= 100) { return false; }
    bb1c:	64 36       	cpi	r22, 0x64	; 100
    bb1e:	e0 f4       	brcc	.+56     	; 0xbb58 <Dusk2Dawn::zeroPadTime(char*, unsigned char)+0x42>
    bb20:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:296

  str[0] = (floor(timeComponent / 10)) + '0';
    bb22:	86 2f       	mov	r24, r22
    bb24:	6a e0       	ldi	r22, 0x0A	; 10
    bb26:	0e 94 c4 74 	call	0xe988	; 0xe988 <__udivmodqi4>
    bb2a:	19 2f       	mov	r17, r25
    bb2c:	68 2f       	mov	r22, r24
    bb2e:	70 e0       	ldi	r23, 0x00	; 0
    bb30:	90 e0       	ldi	r25, 0x00	; 0
    bb32:	80 e0       	ldi	r24, 0x00	; 0
    bb34:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    bb38:	20 e0       	ldi	r18, 0x00	; 0
    bb3a:	30 e0       	ldi	r19, 0x00	; 0
    bb3c:	40 e4       	ldi	r20, 0x40	; 64
    bb3e:	52 e4       	ldi	r21, 0x42	; 66
    bb40:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    bb44:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    bb48:	68 83       	st	Y, r22
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:297
  str[1] = (timeComponent % 10) + '0';
    bb4a:	10 5d       	subi	r17, 0xD0	; 208
    bb4c:	19 83       	std	Y+1, r17	; 0x01
    bb4e:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:299
  return true;
}
    bb50:	df 91       	pop	r29
    bb52:	cf 91       	pop	r28
    bb54:	1f 91       	pop	r17
    bb56:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:294
/* Zero-pad a component of time, e.g. 1 → "01", 24 → "24".
 *
 * NOTE: Supports integers of up to only two digits.
 */
bool Dusk2Dawn::zeroPadTime(char *str, byte timeComponent) {
  if (timeComponent >= 100) { return false; }
    bb58:	80 e0       	ldi	r24, 0x00	; 0
    bb5a:	fa cf       	rjmp	.-12     	; 0xbb50 <Dusk2Dawn::zeroPadTime(char*, unsigned char)+0x3a>

0000bb5c <Dusk2Dawn::min2str(char*, int)>:
_ZN9Dusk2Dawn7min2strEPci():
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:52
 * sunrise and sunset, the solar noon can be calculated, at which point it can
 * be converted to a 24-hour clock format.
 *
 * String classes are avoided to keep memory use to a minimum.
 */
bool Dusk2Dawn::min2str(char *str, int minutes) {
    bb5c:	4f 92       	push	r4
    bb5e:	5f 92       	push	r5
    bb60:	6f 92       	push	r6
    bb62:	7f 92       	push	r7
    bb64:	8f 92       	push	r8
    bb66:	9f 92       	push	r9
    bb68:	af 92       	push	r10
    bb6a:	bf 92       	push	r11
    bb6c:	cf 92       	push	r12
    bb6e:	df 92       	push	r13
    bb70:	ef 92       	push	r14
    bb72:	ff 92       	push	r15
    bb74:	0f 93       	push	r16
    bb76:	1f 93       	push	r17
    bb78:	cf 93       	push	r28
    bb7a:	df 93       	push	r29
    bb7c:	00 d0       	rcall	.+0      	; 0xbb7e <Dusk2Dawn::min2str(char*, int)+0x22>
    bb7e:	00 d0       	rcall	.+0      	; 0xbb80 <Dusk2Dawn::min2str(char*, int)+0x24>
    bb80:	00 d0       	rcall	.+0      	; 0xbb82 <Dusk2Dawn::min2str(char*, int)+0x26>
    bb82:	cd b7       	in	r28, 0x3d	; 61
    bb84:	de b7       	in	r29, 0x3e	; 62
    bb86:	8c 01       	movw	r16, r24
    bb88:	6b 01       	movw	r12, r22
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:59

  if (minutes < 0 || minutes >= 1440) {
    isError = true;
  }

   float floatHour   = minutes / 60.0;
    bb8a:	07 2e       	mov	r0, r23
    bb8c:	00 0c       	add	r0, r0
    bb8e:	88 0b       	sbc	r24, r24
    bb90:	99 0b       	sbc	r25, r25
    bb92:	0e 94 15 72 	call	0xe42a	; 0xe42a <__floatsisf>
    bb96:	20 e0       	ldi	r18, 0x00	; 0
    bb98:	30 e0       	ldi	r19, 0x00	; 0
    bb9a:	40 e7       	ldi	r20, 0x70	; 112
    bb9c:	52 e4       	ldi	r21, 0x42	; 66
    bb9e:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    bba2:	4b 01       	movw	r8, r22
    bba4:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:60
   float floatMinute = 60.0 * (floatHour - floor(floatHour));
    bba6:	0e 94 50 72 	call	0xe4a0	; 0xe4a0 <floor>
    bbaa:	2b 01       	movw	r4, r22
    bbac:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:61
   byte  byteHour    = (byte) floatHour;
    bbae:	c5 01       	movw	r24, r10
    bbb0:	b4 01       	movw	r22, r8
    bbb2:	0e 94 e4 71 	call	0xe3c8	; 0xe3c8 <__fixunssfsi>
    bbb6:	e6 2e       	mov	r14, r22
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:60
  if (minutes < 0 || minutes >= 1440) {
    isError = true;
  }

   float floatHour   = minutes / 60.0;
   float floatMinute = 60.0 * (floatHour - floor(floatHour));
    bbb8:	a3 01       	movw	r20, r6
    bbba:	92 01       	movw	r18, r4
    bbbc:	c5 01       	movw	r24, r10
    bbbe:	b4 01       	movw	r22, r8
    bbc0:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    bbc4:	20 e0       	ldi	r18, 0x00	; 0
    bbc6:	30 e0       	ldi	r19, 0x00	; 0
    bbc8:	40 e7       	ldi	r20, 0x70	; 112
    bbca:	52 e4       	ldi	r21, 0x42	; 66
    bbcc:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:62
   byte  byteHour    = (byte) floatHour;
   byte  byteMinute  = (byte) floatMinute;
    bbd0:	0e 94 e4 71 	call	0xe3c8	; 0xe3c8 <__fixunssfsi>
    bbd4:	f6 2e       	mov	r15, r22
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:64

   if (byteMinute > 59) {
    bbd6:	8b e3       	ldi	r24, 0x3B	; 59
    bbd8:	8f 15       	cp	r24, r15
    bbda:	10 f4       	brcc	.+4      	; 0xbbe0 <Dusk2Dawn::min2str(char*, int)+0x84>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:65
     byteHour   += 1;
    bbdc:	e3 94       	inc	r14
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:66
     byteMinute  = 0;
    bbde:	f1 2c       	mov	r15, r1
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:69
   }

   char strHour[]   = "00";
    bbe0:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <vtable for TwoWire+0x12>
    bbe4:	90 91 8b 02 	lds	r25, 0x028B	; 0x80028b <vtable for TwoWire+0x13>
    bbe8:	a0 91 8c 02 	lds	r26, 0x028C	; 0x80028c <vtable for TwoWire+0x14>
    bbec:	8c 83       	std	Y+4, r24	; 0x04
    bbee:	9d 83       	std	Y+5, r25	; 0x05
    bbf0:	ae 83       	std	Y+6, r26	; 0x06
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:70
   char strMinute[] = "00";
    bbf2:	89 83       	std	Y+1, r24	; 0x01
    bbf4:	9a 83       	std	Y+2, r25	; 0x02
    bbf6:	ab 83       	std	Y+3, r26	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:73

   // In case of an error, keep passing it down.
   isError = isError ? isError : !zeroPadTime(strHour, byteHour);
    bbf8:	e0 ea       	ldi	r30, 0xA0	; 160
    bbfa:	ce 16       	cp	r12, r30
    bbfc:	e5 e0       	ldi	r30, 0x05	; 5
    bbfe:	de 06       	cpc	r13, r30
    bc00:	88 f5       	brcc	.+98     	; 0xbc64 <Dusk2Dawn::min2str(char*, int)+0x108>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:73 (discriminator 2)
    bc02:	6e 2d       	mov	r22, r14
    bc04:	ce 01       	movw	r24, r28
    bc06:	04 96       	adiw	r24, 0x04	; 4
    bc08:	0e 94 8b 5d 	call	0xbb16	; 0xbb16 <Dusk2Dawn::zeroPadTime(char*, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:74 (discriminator 2)
   isError = isError ? isError : !zeroPadTime(strMinute, byteMinute);
    bc0c:	88 23       	and	r24, r24
    bc0e:	51 f1       	breq	.+84     	; 0xbc64 <Dusk2Dawn::min2str(char*, int)+0x108>
    bc10:	6f 2d       	mov	r22, r15
    bc12:	ce 01       	movw	r24, r28
    bc14:	01 96       	adiw	r24, 0x01	; 1
    bc16:	0e 94 8b 5d 	call	0xbb16	; 0xbb16 <Dusk2Dawn::zeroPadTime(char*, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:77 (discriminator 2)

   // This is fugly but I can't think of a better way....
   if (!isError) {
    bc1a:	88 23       	and	r24, r24
    bc1c:	19 f1       	breq	.+70     	; 0xbc64 <Dusk2Dawn::min2str(char*, int)+0x108>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:78
     str[0] = strHour[0];
    bc1e:	9c 81       	ldd	r25, Y+4	; 0x04
    bc20:	f8 01       	movw	r30, r16
    bc22:	90 83       	st	Z, r25
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:79
     str[1] = strHour[1];
    bc24:	9d 81       	ldd	r25, Y+5	; 0x05
    bc26:	91 83       	std	Z+1, r25	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:80
     str[2] = ':';
    bc28:	9a e3       	ldi	r25, 0x3A	; 58
    bc2a:	92 83       	std	Z+2, r25	; 0x02
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:81
     str[3] = strMinute[0];
    bc2c:	99 81       	ldd	r25, Y+1	; 0x01
    bc2e:	93 83       	std	Z+3, r25	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:82
     str[4] = strMinute[1];
    bc30:	9a 81       	ldd	r25, Y+2	; 0x02
    bc32:	94 83       	std	Z+4, r25	; 0x04
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:83
     str[5] = '\0';
    bc34:	15 82       	std	Z+5, r1	; 0x05
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:94
     str[4] = 'R';
     str[5] = '\0';
   }

   return !isError;
}
    bc36:	26 96       	adiw	r28, 0x06	; 6
    bc38:	0f b6       	in	r0, 0x3f	; 63
    bc3a:	f8 94       	cli
    bc3c:	de bf       	out	0x3e, r29	; 62
    bc3e:	0f be       	out	0x3f, r0	; 63
    bc40:	cd bf       	out	0x3d, r28	; 61
    bc42:	df 91       	pop	r29
    bc44:	cf 91       	pop	r28
    bc46:	1f 91       	pop	r17
    bc48:	0f 91       	pop	r16
    bc4a:	ff 90       	pop	r15
    bc4c:	ef 90       	pop	r14
    bc4e:	df 90       	pop	r13
    bc50:	cf 90       	pop	r12
    bc52:	bf 90       	pop	r11
    bc54:	af 90       	pop	r10
    bc56:	9f 90       	pop	r9
    bc58:	8f 90       	pop	r8
    bc5a:	7f 90       	pop	r7
    bc5c:	6f 90       	pop	r6
    bc5e:	5f 90       	pop	r5
    bc60:	4f 90       	pop	r4
    bc62:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:85
     str[2] = ':';
     str[3] = strMinute[0];
     str[4] = strMinute[1];
     str[5] = '\0';
   } else {
     str[0] = 'E';
    bc64:	85 e4       	ldi	r24, 0x45	; 69
    bc66:	f8 01       	movw	r30, r16
    bc68:	80 83       	st	Z, r24
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:86
     str[1] = 'R';
    bc6a:	82 e5       	ldi	r24, 0x52	; 82
    bc6c:	81 83       	std	Z+1, r24	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:87
     str[2] = 'R';
    bc6e:	82 83       	std	Z+2, r24	; 0x02
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:88
     str[3] = 'O';
    bc70:	9f e4       	ldi	r25, 0x4F	; 79
    bc72:	93 83       	std	Z+3, r25	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:89
     str[4] = 'R';
    bc74:	84 83       	std	Z+4, r24	; 0x04
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:90
     str[5] = '\0';
    bc76:	15 82       	std	Z+5, r1	; 0x05
    bc78:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:93
   }

   return !isError;
    bc7a:	dd cf       	rjmp	.-70     	; 0xbc36 <Dusk2Dawn::min2str(char*, int)+0xda>

0000bc7c <LSM303::LSM303()>:
_ZN6LSM303C2Ev():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:337
  {
    return readMagReg(reg);
  }
  else
  {
    return readAccReg(reg);
    bc7c:	cf 93       	push	r28
    bc7e:	df 93       	push	r29
    bc80:	ec 01       	movw	r28, r24
    bc82:	86 e0       	ldi	r24, 0x06	; 6
    bc84:	e9 ed       	ldi	r30, 0xD9	; 217
    bc86:	f1 e0       	ldi	r31, 0x01	; 1
    bc88:	de 01       	movw	r26, r28
    bc8a:	52 96       	adiw	r26, 0x12	; 18
    bc8c:	01 90       	ld	r0, Z+
    bc8e:	0d 92       	st	X+, r0
    bc90:	8a 95       	dec	r24
    bc92:	e1 f7       	brne	.-8      	; 0xbc8c <LSM303::LSM303()+0x10>
    bc94:	86 e0       	ldi	r24, 0x06	; 6
    bc96:	ef ed       	ldi	r30, 0xDF	; 223
    bc98:	f1 e0       	ldi	r31, 0x01	; 1
    bc9a:	de 01       	movw	r26, r28
    bc9c:	1c 96       	adiw	r26, 0x0c	; 12
    bc9e:	01 90       	ld	r0, Z+
    bca0:	0d 92       	st	X+, r0
    bca2:	8a 95       	dec	r24
    bca4:	e1 f7       	brne	.-8      	; 0xbc9e <LSM303::LSM303()+0x22>
    bca6:	84 e0       	ldi	r24, 0x04	; 4
    bca8:	90 e0       	ldi	r25, 0x00	; 0
    bcaa:	9a 8f       	std	Y+26, r25	; 0x1a
    bcac:	89 8f       	std	Y+25, r24	; 0x19
    bcae:	1c a6       	std	Y+44, r1	; 0x2c
    bcb0:	1b a6       	std	Y+43, r1	; 0x2b
    bcb2:	1d a6       	std	Y+45, r1	; 0x2d
    bcb4:	df 91       	pop	r29
    bcb6:	cf 91       	pop	r28
    bcb8:	08 95       	ret

0000bcba <LSM303::writeAccReg(unsigned char, unsigned char)>:
_ZN6LSM30311writeAccRegEhh():
    bcba:	0f 93       	push	r16
    bcbc:	1f 93       	push	r17
    bcbe:	cf 93       	push	r28
    bcc0:	df 93       	push	r29
    bcc2:	ec 01       	movw	r28, r24
    bcc4:	06 2f       	mov	r16, r22
    bcc6:	14 2f       	mov	r17, r20
    bcc8:	6b 8d       	ldd	r22, Y+27	; 0x1b
    bcca:	86 ec       	ldi	r24, 0xC6	; 198
    bccc:	99 e0       	ldi	r25, 0x09	; 9
    bcce:	0e 94 5a 54 	call	0xa8b4	; 0xa8b4 <TwoWire::beginTransmission(unsigned char)>
    bcd2:	60 2f       	mov	r22, r16
    bcd4:	86 ec       	ldi	r24, 0xC6	; 198
    bcd6:	99 e0       	ldi	r25, 0x09	; 9
    bcd8:	0e 94 e8 53 	call	0xa7d0	; 0xa7d0 <TwoWire::write(unsigned char)>
    bcdc:	61 2f       	mov	r22, r17
    bcde:	86 ec       	ldi	r24, 0xC6	; 198
    bce0:	99 e0       	ldi	r25, 0x09	; 9
    bce2:	0e 94 e8 53 	call	0xa7d0	; 0xa7d0 <TwoWire::write(unsigned char)>
    bce6:	86 ec       	ldi	r24, 0xC6	; 198
    bce8:	99 e0       	ldi	r25, 0x09	; 9
    bcea:	0e 94 df 54 	call	0xa9be	; 0xa9be <TwoWire::endTransmission()>
    bcee:	88 8f       	std	Y+24, r24	; 0x18
    bcf0:	df 91       	pop	r29
    bcf2:	cf 91       	pop	r28
    bcf4:	1f 91       	pop	r17
    bcf6:	0f 91       	pop	r16
    bcf8:	08 95       	ret

0000bcfa <LSM303::writeMagReg(unsigned char, unsigned char)>:
_ZN6LSM30311writeMagRegEhh():
    bcfa:	0f 93       	push	r16
    bcfc:	1f 93       	push	r17
    bcfe:	cf 93       	push	r28
    bd00:	df 93       	push	r29
    bd02:	ec 01       	movw	r28, r24
    bd04:	06 2f       	mov	r16, r22
    bd06:	14 2f       	mov	r17, r20
    bd08:	6c 8d       	ldd	r22, Y+28	; 0x1c
    bd0a:	86 ec       	ldi	r24, 0xC6	; 198
    bd0c:	99 e0       	ldi	r25, 0x09	; 9
    bd0e:	0e 94 5a 54 	call	0xa8b4	; 0xa8b4 <TwoWire::beginTransmission(unsigned char)>
    bd12:	60 2f       	mov	r22, r16
    bd14:	86 ec       	ldi	r24, 0xC6	; 198
    bd16:	99 e0       	ldi	r25, 0x09	; 9
    bd18:	0e 94 e8 53 	call	0xa7d0	; 0xa7d0 <TwoWire::write(unsigned char)>
    bd1c:	61 2f       	mov	r22, r17
    bd1e:	86 ec       	ldi	r24, 0xC6	; 198
    bd20:	99 e0       	ldi	r25, 0x09	; 9
    bd22:	0e 94 e8 53 	call	0xa7d0	; 0xa7d0 <TwoWire::write(unsigned char)>
    bd26:	86 ec       	ldi	r24, 0xC6	; 198
    bd28:	99 e0       	ldi	r25, 0x09	; 9
    bd2a:	0e 94 df 54 	call	0xa9be	; 0xa9be <TwoWire::endTransmission()>
    bd2e:	88 8f       	std	Y+24, r24	; 0x18
    bd30:	df 91       	pop	r29
    bd32:	cf 91       	pop	r28
    bd34:	1f 91       	pop	r17
    bd36:	0f 91       	pop	r16
    bd38:	08 95       	ret

0000bd3a <LSM303::writeReg(unsigned char, unsigned char)>:
_ZN6LSM3038writeRegEhh():
    bd3a:	fc 01       	movw	r30, r24
    bd3c:	21 8d       	ldd	r18, Z+25	; 0x19
    bd3e:	32 8d       	ldd	r19, Z+26	; 0x1a
    bd40:	23 30       	cpi	r18, 0x03	; 3
    bd42:	31 05       	cpc	r19, r1
    bd44:	11 f0       	breq	.+4      	; 0xbd4a <LSM303::writeReg(unsigned char, unsigned char)+0x10>
    bd46:	60 32       	cpi	r22, 0x20	; 32
    bd48:	10 f4       	brcc	.+4      	; 0xbd4e <LSM303::writeReg(unsigned char, unsigned char)+0x14>
    bd4a:	0c 94 7d 5e 	jmp	0xbcfa	; 0xbcfa <LSM303::writeMagReg(unsigned char, unsigned char)>
    bd4e:	0c 94 5d 5e 	jmp	0xbcba	; 0xbcba <LSM303::writeAccReg(unsigned char, unsigned char)>

0000bd52 <LSM303::enableDefault()>:
_ZN6LSM30313enableDefaultEv():
    bd52:	cf 93       	push	r28
    bd54:	df 93       	push	r29
    bd56:	ec 01       	movw	r28, r24
    bd58:	89 8d       	ldd	r24, Y+25	; 0x19
    bd5a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    bd5c:	83 30       	cpi	r24, 0x03	; 3
    bd5e:	91 05       	cpc	r25, r1
    bd60:	d9 f4       	brne	.+54     	; 0xbd98 <LSM303::enableDefault()+0x46>
    bd62:	40 e0       	ldi	r20, 0x00	; 0
    bd64:	61 e2       	ldi	r22, 0x21	; 33
    bd66:	ce 01       	movw	r24, r28
    bd68:	0e 94 9d 5e 	call	0xbd3a	; 0xbd3a <LSM303::writeReg(unsigned char, unsigned char)>
    bd6c:	47 e5       	ldi	r20, 0x57	; 87
    bd6e:	60 e2       	ldi	r22, 0x20	; 32
    bd70:	ce 01       	movw	r24, r28
    bd72:	0e 94 9d 5e 	call	0xbd3a	; 0xbd3a <LSM303::writeReg(unsigned char, unsigned char)>
    bd76:	44 e6       	ldi	r20, 0x64	; 100
    bd78:	64 e2       	ldi	r22, 0x24	; 36
    bd7a:	ce 01       	movw	r24, r28
    bd7c:	0e 94 9d 5e 	call	0xbd3a	; 0xbd3a <LSM303::writeReg(unsigned char, unsigned char)>
    bd80:	40 e2       	ldi	r20, 0x20	; 32
    bd82:	65 e2       	ldi	r22, 0x25	; 37
    bd84:	ce 01       	movw	r24, r28
    bd86:	0e 94 9d 5e 	call	0xbd3a	; 0xbd3a <LSM303::writeReg(unsigned char, unsigned char)>
    bd8a:	40 e0       	ldi	r20, 0x00	; 0
    bd8c:	66 e2       	ldi	r22, 0x26	; 38
    bd8e:	ce 01       	movw	r24, r28
    bd90:	df 91       	pop	r29
    bd92:	cf 91       	pop	r28
    bd94:	0c 94 9d 5e 	jmp	0xbd3a	; 0xbd3a <LSM303::writeReg(unsigned char, unsigned char)>
    bd98:	02 97       	sbiw	r24, 0x02	; 2
    bd9a:	d9 f4       	brne	.+54     	; 0xbdd2 <LSM303::enableDefault()+0x80>
    bd9c:	48 e0       	ldi	r20, 0x08	; 8
    bd9e:	63 e2       	ldi	r22, 0x23	; 35
    bda0:	ce 01       	movw	r24, r28
    bda2:	0e 94 5d 5e 	call	0xbcba	; 0xbcba <LSM303::writeAccReg(unsigned char, unsigned char)>
    bda6:	47 e4       	ldi	r20, 0x47	; 71
    bda8:	60 e2       	ldi	r22, 0x20	; 32
    bdaa:	ce 01       	movw	r24, r28
    bdac:	0e 94 5d 5e 	call	0xbcba	; 0xbcba <LSM303::writeAccReg(unsigned char, unsigned char)>
    bdb0:	4c e0       	ldi	r20, 0x0C	; 12
    bdb2:	60 e0       	ldi	r22, 0x00	; 0
    bdb4:	ce 01       	movw	r24, r28
    bdb6:	0e 94 7d 5e 	call	0xbcfa	; 0xbcfa <LSM303::writeMagReg(unsigned char, unsigned char)>
    bdba:	40 e2       	ldi	r20, 0x20	; 32
    bdbc:	61 e0       	ldi	r22, 0x01	; 1
    bdbe:	ce 01       	movw	r24, r28
    bdc0:	0e 94 7d 5e 	call	0xbcfa	; 0xbcfa <LSM303::writeMagReg(unsigned char, unsigned char)>
    bdc4:	40 e0       	ldi	r20, 0x00	; 0
    bdc6:	62 e0       	ldi	r22, 0x02	; 2
    bdc8:	ce 01       	movw	r24, r28
    bdca:	df 91       	pop	r29
    bdcc:	cf 91       	pop	r28
    bdce:	0c 94 7d 5e 	jmp	0xbcfa	; 0xbcfa <LSM303::writeMagReg(unsigned char, unsigned char)>
    bdd2:	40 e0       	ldi	r20, 0x00	; 0
    bdd4:	63 e2       	ldi	r22, 0x23	; 35
    bdd6:	ce 01       	movw	r24, r28
    bdd8:	0e 94 5d 5e 	call	0xbcba	; 0xbcba <LSM303::writeAccReg(unsigned char, unsigned char)>
    bddc:	47 e2       	ldi	r20, 0x27	; 39
    bdde:	e4 cf       	rjmp	.-56     	; 0xbda8 <LSM303::enableDefault()+0x56>

0000bde0 <LSM303::readAcc()>:
_ZN6LSM3037readAccEv():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:343
  }
}

// Reads the 3 accelerometer channels and stores them in vector a
void LSM303::readAcc(void)
{
    bde0:	df 92       	push	r13
    bde2:	ef 92       	push	r14
    bde4:	ff 92       	push	r15
    bde6:	0f 93       	push	r16
    bde8:	1f 93       	push	r17
    bdea:	cf 93       	push	r28
    bdec:	df 93       	push	r29
    bdee:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:344
  Wire.beginTransmission(acc_address);
    bdf0:	6b 8d       	ldd	r22, Y+27	; 0x1b
    bdf2:	86 ec       	ldi	r24, 0xC6	; 198
    bdf4:	99 e0       	ldi	r25, 0x09	; 9
    bdf6:	0e 94 5a 54 	call	0xa8b4	; 0xa8b4 <TwoWire::beginTransmission(unsigned char)>
_ZN7TwoWire5writeEi():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src/Wire.h:81
    void onRequest( void (*)(void) );

    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    bdfa:	68 ea       	ldi	r22, 0xA8	; 168
    bdfc:	86 ec       	ldi	r24, 0xC6	; 198
    bdfe:	99 e0       	ldi	r25, 0x09	; 9
    be00:	0e 94 e8 53 	call	0xa7d0	; 0xa7d0 <TwoWire::write(unsigned char)>
_ZN6LSM3037readAccEv():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:348
  // assert the MSB of the address to get the accelerometer
  // to do slave-transmit subaddress updating.
  Wire.write(OUT_X_L_A | (1 << 7));
  last_status = Wire.endTransmission();
    be04:	86 ec       	ldi	r24, 0xC6	; 198
    be06:	99 e0       	ldi	r25, 0x09	; 9
    be08:	0e 94 df 54 	call	0xa9be	; 0xa9be <TwoWire::endTransmission()>
    be0c:	88 8f       	std	Y+24, r24	; 0x18
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:349
  Wire.requestFrom(acc_address, (byte)6);
    be0e:	46 e0       	ldi	r20, 0x06	; 6
    be10:	6b 8d       	ldd	r22, Y+27	; 0x1b
    be12:	86 ec       	ldi	r24, 0xC6	; 198
    be14:	99 e0       	ldi	r25, 0x09	; 9
    be16:	0e 94 dc 54 	call	0xa9b8	; 0xa9b8 <TwoWire::requestFrom(unsigned char, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:351

  unsigned int millis_start = millis();
    be1a:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    be1e:	8b 01       	movw	r16, r22
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:352
  while (Wire.available() < 6) {
    be20:	86 ec       	ldi	r24, 0xC6	; 198
    be22:	99 e0       	ldi	r25, 0x09	; 9
    be24:	0e 94 88 53 	call	0xa710	; 0xa710 <TwoWire::available()>
    be28:	06 97       	sbiw	r24, 0x06	; 6
    be2a:	bc f4       	brge	.+46     	; 0xbe5a <LSM303::readAcc()+0x7a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:353
    if (io_timeout > 0 && ((unsigned int)millis() - millis_start) > io_timeout)
    be2c:	8b a5       	ldd	r24, Y+43	; 0x2b
    be2e:	9c a5       	ldd	r25, Y+44	; 0x2c
    be30:	89 2b       	or	r24, r25
    be32:	b1 f3       	breq	.-20     	; 0xbe20 <LSM303::readAcc()+0x40>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:353 (discriminator 1)
    be34:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    be38:	60 1b       	sub	r22, r16
    be3a:	71 0b       	sbc	r23, r17
    be3c:	8b a5       	ldd	r24, Y+43	; 0x2b
    be3e:	9c a5       	ldd	r25, Y+44	; 0x2c
    be40:	86 17       	cp	r24, r22
    be42:	97 07       	cpc	r25, r23
    be44:	68 f7       	brcc	.-38     	; 0xbe20 <LSM303::readAcc()+0x40>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:355
    {
      did_timeout = true;
    be46:	81 e0       	ldi	r24, 0x01	; 1
    be48:	8d a7       	std	Y+45, r24	; 0x2d
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:373
  // This no longer drops the lowest 4 bits of the readings from the DLH/DLM/DLHC, which are always 0
  // (12-bit resolution, left-aligned). The D has 16-bit resolution
  a.x = (int16_t)(xha << 8 | xla);
  a.y = (int16_t)(yha << 8 | yla);
  a.z = (int16_t)(zha << 8 | zla);
}
    be4a:	df 91       	pop	r29
    be4c:	cf 91       	pop	r28
    be4e:	1f 91       	pop	r17
    be50:	0f 91       	pop	r16
    be52:	ff 90       	pop	r15
    be54:	ef 90       	pop	r14
    be56:	df 90       	pop	r13
    be58:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:360
      did_timeout = true;
      return;
    }
  }

  byte xla = Wire.read();
    be5a:	86 ec       	ldi	r24, 0xC6	; 198
    be5c:	99 e0       	ldi	r25, 0x09	; 9
    be5e:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    be62:	e8 2e       	mov	r14, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:361
  byte xha = Wire.read();
    be64:	86 ec       	ldi	r24, 0xC6	; 198
    be66:	99 e0       	ldi	r25, 0x09	; 9
    be68:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    be6c:	d8 2e       	mov	r13, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:362
  byte yla = Wire.read();
    be6e:	86 ec       	ldi	r24, 0xC6	; 198
    be70:	99 e0       	ldi	r25, 0x09	; 9
    be72:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    be76:	08 2f       	mov	r16, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:363
  byte yha = Wire.read();
    be78:	86 ec       	ldi	r24, 0xC6	; 198
    be7a:	99 e0       	ldi	r25, 0x09	; 9
    be7c:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    be80:	f8 2e       	mov	r15, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:364
  byte zla = Wire.read();
    be82:	86 ec       	ldi	r24, 0xC6	; 198
    be84:	99 e0       	ldi	r25, 0x09	; 9
    be86:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    be8a:	18 2f       	mov	r17, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:365
  byte zha = Wire.read();
    be8c:	86 ec       	ldi	r24, 0xC6	; 198
    be8e:	99 e0       	ldi	r25, 0x09	; 9
    be90:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:370

  // combine high and low bytes
  // This no longer drops the lowest 4 bits of the readings from the DLH/DLM/DLHC, which are always 0
  // (12-bit resolution, left-aligned). The D has 16-bit resolution
  a.x = (int16_t)(xha << 8 | xla);
    be94:	20 e0       	ldi	r18, 0x00	; 0
    be96:	3d 2d       	mov	r19, r13
    be98:	2e 29       	or	r18, r14
    be9a:	39 83       	std	Y+1, r19	; 0x01
    be9c:	28 83       	st	Y, r18
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:371
  a.y = (int16_t)(yha << 8 | yla);
    be9e:	20 e0       	ldi	r18, 0x00	; 0
    bea0:	3f 2d       	mov	r19, r15
    bea2:	20 2b       	or	r18, r16
    bea4:	3b 83       	std	Y+3, r19	; 0x03
    bea6:	2a 83       	std	Y+2, r18	; 0x02
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:372
  a.z = (int16_t)(zha << 8 | zla);
    bea8:	20 e0       	ldi	r18, 0x00	; 0
    beaa:	38 2f       	mov	r19, r24
    beac:	21 2b       	or	r18, r17
    beae:	3d 83       	std	Y+5, r19	; 0x05
    beb0:	2c 83       	std	Y+4, r18	; 0x04
    beb2:	cb cf       	rjmp	.-106    	; 0xbe4a <LSM303::readAcc()+0x6a>

0000beb4 <LSM303::readMag()>:
_ZN6LSM3037readMagEv():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:377
}

// Reads the 3 magnetometer channels and stores them in vector m
void LSM303::readMag(void)
{
    beb4:	cf 92       	push	r12
    beb6:	df 92       	push	r13
    beb8:	ef 92       	push	r14
    beba:	ff 92       	push	r15
    bebc:	0f 93       	push	r16
    bebe:	1f 93       	push	r17
    bec0:	cf 93       	push	r28
    bec2:	df 93       	push	r29
    bec4:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:378
  Wire.beginTransmission(mag_address);
    bec6:	6c 8d       	ldd	r22, Y+28	; 0x1c
    bec8:	86 ec       	ldi	r24, 0xC6	; 198
    beca:	99 e0       	ldi	r25, 0x09	; 9
    becc:	0e 94 5a 54 	call	0xa8b4	; 0xa8b4 <TwoWire::beginTransmission(unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:381
  // If LSM303D, assert MSB to enable subaddress updating
  // OUT_X_L_M comes first on D, OUT_X_H_M on others
  Wire.write((_device == device_D) ? translated_regs[-OUT_X_L_M] | (1 << 7) : translated_regs[-OUT_X_H_M]);
    bed0:	89 8d       	ldd	r24, Y+25	; 0x19
    bed2:	9a 8d       	ldd	r25, Y+26	; 0x1a
    bed4:	03 97       	sbiw	r24, 0x03	; 3
    bed6:	99 f5       	brne	.+102    	; 0xbf3e <LSM303::readMag()+0x8a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:381 (discriminator 1)
    bed8:	69 a1       	ldd	r22, Y+33	; 0x21
    beda:	7a a1       	ldd	r23, Y+34	; 0x22
    bedc:	60 68       	ori	r22, 0x80	; 128
_ZN7TwoWire5writeEi():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src/Wire.h:81 (discriminator 4)
    bede:	86 ec       	ldi	r24, 0xC6	; 198
    bee0:	99 e0       	ldi	r25, 0x09	; 9
    bee2:	0e 94 e8 53 	call	0xa7d0	; 0xa7d0 <TwoWire::write(unsigned char)>
_ZN6LSM3037readMagEv():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:382 (discriminator 4)
  last_status = Wire.endTransmission();
    bee6:	86 ec       	ldi	r24, 0xC6	; 198
    bee8:	99 e0       	ldi	r25, 0x09	; 9
    beea:	0e 94 df 54 	call	0xa9be	; 0xa9be <TwoWire::endTransmission()>
    beee:	88 8f       	std	Y+24, r24	; 0x18
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:383 (discriminator 4)
  Wire.requestFrom(mag_address, (byte)6);
    bef0:	46 e0       	ldi	r20, 0x06	; 6
    bef2:	6c 8d       	ldd	r22, Y+28	; 0x1c
    bef4:	86 ec       	ldi	r24, 0xC6	; 198
    bef6:	99 e0       	ldi	r25, 0x09	; 9
    bef8:	0e 94 dc 54 	call	0xa9b8	; 0xa9b8 <TwoWire::requestFrom(unsigned char, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:385 (discriminator 4)

  unsigned int millis_start = millis();
    befc:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    bf00:	8b 01       	movw	r16, r22
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:386
  while (Wire.available() < 6) {
    bf02:	86 ec       	ldi	r24, 0xC6	; 198
    bf04:	99 e0       	ldi	r25, 0x09	; 9
    bf06:	0e 94 88 53 	call	0xa710	; 0xa710 <TwoWire::available()>
    bf0a:	06 97       	sbiw	r24, 0x06	; 6
    bf0c:	dc f4       	brge	.+54     	; 0xbf44 <LSM303::readMag()+0x90>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:387
    if (io_timeout > 0 && ((unsigned int)millis() - millis_start) > io_timeout)
    bf0e:	8b a5       	ldd	r24, Y+43	; 0x2b
    bf10:	9c a5       	ldd	r25, Y+44	; 0x2c
    bf12:	89 2b       	or	r24, r25
    bf14:	b1 f3       	breq	.-20     	; 0xbf02 <LSM303::readMag()+0x4e>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:387 (discriminator 1)
    bf16:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    bf1a:	60 1b       	sub	r22, r16
    bf1c:	71 0b       	sbc	r23, r17
    bf1e:	8b a5       	ldd	r24, Y+43	; 0x2b
    bf20:	9c a5       	ldd	r25, Y+44	; 0x2c
    bf22:	86 17       	cp	r24, r22
    bf24:	97 07       	cpc	r25, r23
    bf26:	68 f7       	brcc	.-38     	; 0xbf02 <LSM303::readMag()+0x4e>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:389
    {
      did_timeout = true;
    bf28:	81 e0       	ldi	r24, 0x01	; 1
    bf2a:	8d a7       	std	Y+45, r24	; 0x2d
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:434

  // combine high and low bytes
  m.x = (int16_t)(xhm << 8 | xlm);
  m.y = (int16_t)(yhm << 8 | ylm);
  m.z = (int16_t)(zhm << 8 | zlm);
}
    bf2c:	df 91       	pop	r29
    bf2e:	cf 91       	pop	r28
    bf30:	1f 91       	pop	r17
    bf32:	0f 91       	pop	r16
    bf34:	ff 90       	pop	r15
    bf36:	ef 90       	pop	r14
    bf38:	df 90       	pop	r13
    bf3a:	cf 90       	pop	r12
    bf3c:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:381 (discriminator 2)
void LSM303::readMag(void)
{
  Wire.beginTransmission(mag_address);
  // If LSM303D, assert MSB to enable subaddress updating
  // OUT_X_L_M comes first on D, OUT_X_H_M on others
  Wire.write((_device == device_D) ? translated_regs[-OUT_X_L_M] | (1 << 7) : translated_regs[-OUT_X_H_M]);
    bf3e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    bf40:	78 a1       	ldd	r23, Y+32	; 0x20
    bf42:	cd cf       	rjmp	.-102    	; 0xbede <LSM303::readMag()+0x2a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:396
    }
  }

  byte xlm, xhm, ylm, yhm, zlm, zhm;

  if (_device == device_D)
    bf44:	89 8d       	ldd	r24, Y+25	; 0x19
    bf46:	9a 8d       	ldd	r25, Y+26	; 0x1a
    bf48:	03 97       	sbiw	r24, 0x03	; 3
    bf4a:	51 f5       	brne	.+84     	; 0xbfa0 <LSM303::readMag()+0xec>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:399
  {
    // D: X_L, X_H, Y_L, Y_H, Z_L, Z_H
    xlm = Wire.read();
    bf4c:	86 ec       	ldi	r24, 0xC6	; 198
    bf4e:	99 e0       	ldi	r25, 0x09	; 9
    bf50:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bf54:	c8 2e       	mov	r12, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:400
    xhm = Wire.read();
    bf56:	86 ec       	ldi	r24, 0xC6	; 198
    bf58:	99 e0       	ldi	r25, 0x09	; 9
    bf5a:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bf5e:	f8 2e       	mov	r15, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:401
    ylm = Wire.read();
    bf60:	86 ec       	ldi	r24, 0xC6	; 198
    bf62:	99 e0       	ldi	r25, 0x09	; 9
    bf64:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bf68:	d8 2e       	mov	r13, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:402
    yhm = Wire.read();
    bf6a:	86 ec       	ldi	r24, 0xC6	; 198
    bf6c:	99 e0       	ldi	r25, 0x09	; 9
    bf6e:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bf72:	08 2f       	mov	r16, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:403
    zlm = Wire.read();
    bf74:	86 ec       	ldi	r24, 0xC6	; 198
    bf76:	99 e0       	ldi	r25, 0x09	; 9
    bf78:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bf7c:	e8 2e       	mov	r14, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:404
    zhm = Wire.read();
    bf7e:	86 ec       	ldi	r24, 0xC6	; 198
    bf80:	99 e0       	ldi	r25, 0x09	; 9
    bf82:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bf86:	18 2f       	mov	r17, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:431
      ylm = Wire.read();
    }
  }

  // combine high and low bytes
  m.x = (int16_t)(xhm << 8 | xlm);
    bf88:	9f 2d       	mov	r25, r15
    bf8a:	8c 2d       	mov	r24, r12
    bf8c:	9f 83       	std	Y+7, r25	; 0x07
    bf8e:	8e 83       	std	Y+6, r24	; 0x06
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:432
  m.y = (int16_t)(yhm << 8 | ylm);
    bf90:	90 2f       	mov	r25, r16
    bf92:	8d 2d       	mov	r24, r13
    bf94:	99 87       	std	Y+9, r25	; 0x09
    bf96:	88 87       	std	Y+8, r24	; 0x08
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:433
  m.z = (int16_t)(zhm << 8 | zlm);
    bf98:	f1 2e       	mov	r15, r17
    bf9a:	fb 86       	std	Y+11, r15	; 0x0b
    bf9c:	ea 86       	std	Y+10, r14	; 0x0a
    bf9e:	c6 cf       	rjmp	.-116    	; 0xbf2c <LSM303::readMag()+0x78>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:409
    zhm = Wire.read();
  }
  else
  {
    // DLHC, DLM, DLH: X_H, X_L...
    xhm = Wire.read();
    bfa0:	86 ec       	ldi	r24, 0xC6	; 198
    bfa2:	99 e0       	ldi	r25, 0x09	; 9
    bfa4:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bfa8:	f8 2e       	mov	r15, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:410
    xlm = Wire.read();
    bfaa:	86 ec       	ldi	r24, 0xC6	; 198
    bfac:	99 e0       	ldi	r25, 0x09	; 9
    bfae:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bfb2:	c8 2e       	mov	r12, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:412

    if (_device == device_DLH)
    bfb4:	89 8d       	ldd	r24, Y+25	; 0x19
    bfb6:	9a 8d       	ldd	r25, Y+26	; 0x1a
    bfb8:	89 2b       	or	r24, r25
    bfba:	a9 f4       	brne	.+42     	; 0xbfe6 <LSM303::readMag()+0x132>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:415
    {
      // DLH: ...Y_H, Y_L, Z_H, Z_L
      yhm = Wire.read();
    bfbc:	86 ec       	ldi	r24, 0xC6	; 198
    bfbe:	99 e0       	ldi	r25, 0x09	; 9
    bfc0:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bfc4:	08 2f       	mov	r16, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:416
      ylm = Wire.read();
    bfc6:	86 ec       	ldi	r24, 0xC6	; 198
    bfc8:	99 e0       	ldi	r25, 0x09	; 9
    bfca:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bfce:	d8 2e       	mov	r13, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:417
      zhm = Wire.read();
    bfd0:	86 ec       	ldi	r24, 0xC6	; 198
    bfd2:	99 e0       	ldi	r25, 0x09	; 9
    bfd4:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bfd8:	18 2f       	mov	r17, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:418
      zlm = Wire.read();
    bfda:	86 ec       	ldi	r24, 0xC6	; 198
    bfdc:	99 e0       	ldi	r25, 0x09	; 9
    bfde:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bfe2:	e8 2e       	mov	r14, r24
    bfe4:	d1 cf       	rjmp	.-94     	; 0xbf88 <LSM303::readMag()+0xd4>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:423
    }
    else
    {
      // DLM, DLHC: ...Z_H, Z_L, Y_H, Y_L
      zhm = Wire.read();
    bfe6:	86 ec       	ldi	r24, 0xC6	; 198
    bfe8:	99 e0       	ldi	r25, 0x09	; 9
    bfea:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bfee:	18 2f       	mov	r17, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:424
      zlm = Wire.read();
    bff0:	86 ec       	ldi	r24, 0xC6	; 198
    bff2:	99 e0       	ldi	r25, 0x09	; 9
    bff4:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    bff8:	e8 2e       	mov	r14, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:425
      yhm = Wire.read();
    bffa:	86 ec       	ldi	r24, 0xC6	; 198
    bffc:	99 e0       	ldi	r25, 0x09	; 9
    bffe:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    c002:	08 2f       	mov	r16, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:426
      ylm = Wire.read();
    c004:	86 ec       	ldi	r24, 0xC6	; 198
    c006:	99 e0       	ldi	r25, 0x09	; 9
    c008:	0e 94 8f 53 	call	0xa71e	; 0xa71e <TwoWire::read()>
    c00c:	d8 2e       	mov	r13, r24
    c00e:	bc cf       	rjmp	.-136    	; 0xbf88 <LSM303::readMag()+0xd4>

0000c010 <LSM303::read()>:
_ZN6LSM3034readEv():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:438
  m.z = (int16_t)(zhm << 8 | zlm);
}

// Reads all 6 channels of the LSM303 and stores them in the object variables
void LSM303::read(void)
{
    c010:	cf 93       	push	r28
    c012:	df 93       	push	r29
    c014:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:439
  readAcc();
    c016:	0e 94 f0 5e 	call	0xbde0	; 0xbde0 <LSM303::readAcc()>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:440
  readMag();
    c01a:	ce 01       	movw	r24, r28
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:441
}
    c01c:	df 91       	pop	r29
    c01e:	cf 91       	pop	r28
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:440

// Reads all 6 channels of the LSM303 and stores them in the object variables
void LSM303::read(void)
{
  readAcc();
  readMag();
    c020:	0c 94 5a 5f 	jmp	0xbeb4	; 0xbeb4 <LSM303::readMag()>

0000c024 <LSM303::testReg(unsigned char, LSM303::regAddr)>:
_ZN6LSM3037testRegEhNS_7regAddrE():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:475
}

// Private Methods //////////////////////////////////////////////////////////////

int LSM303::testReg(byte address, regAddr reg)
{
    c024:	cf 93       	push	r28
    c026:	df 93       	push	r29
    c028:	c6 2f       	mov	r28, r22
    c02a:	d4 2f       	mov	r29, r20
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:476
  Wire.beginTransmission(address);
    c02c:	86 ec       	ldi	r24, 0xC6	; 198
    c02e:	99 e0       	ldi	r25, 0x09	; 9
    c030:	0e 94 5a 54 	call	0xa8b4	; 0xa8b4 <TwoWire::beginTransmission(unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:477
  Wire.write((byte)reg);
    c034:	6d 2f       	mov	r22, r29
    c036:	86 ec       	ldi	r24, 0xC6	; 198
    c038:	99 e0       	ldi	r25, 0x09	; 9
    c03a:	0e 94 e8 53 	call	0xa7d0	; 0xa7d0 <TwoWire::write(unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:478
  if (Wire.endTransmission() != 0)
    c03e:	86 ec       	ldi	r24, 0xC6	; 198
    c040:	99 e0       	ldi	r25, 0x09	; 9
    c042:	0e 94 df 54 	call	0xa9be	; 0xa9be <TwoWire::endTransmission()>
    c046:	81 11       	cpse	r24, r1
    c048:	12 c0       	rjmp	.+36     	; 0xc06e <LSM303::testReg(unsigned char, LSM303::regAddr)+0x4a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:483
  {
    return TEST_REG_ERROR;
  }

  Wire.requestFrom(address, (byte)1);
    c04a:	41 e0       	ldi	r20, 0x01	; 1
    c04c:	6c 2f       	mov	r22, r28
    c04e:	86 ec       	ldi	r24, 0xC6	; 198
    c050:	99 e0       	ldi	r25, 0x09	; 9
    c052:	0e 94 dc 54 	call	0xa9b8	; 0xa9b8 <TwoWire::requestFrom(unsigned char, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:484
  if (Wire.available())
    c056:	86 ec       	ldi	r24, 0xC6	; 198
    c058:	99 e0       	ldi	r25, 0x09	; 9
    c05a:	0e 94 88 53 	call	0xa710	; 0xa710 <TwoWire::available()>
    c05e:	89 2b       	or	r24, r25
    c060:	31 f0       	breq	.+12     	; 0xc06e <LSM303::testReg(unsigned char, LSM303::regAddr)+0x4a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:486
  {
    return Wire.read();
    c062:	86 ec       	ldi	r24, 0xC6	; 198
    c064:	99 e0       	ldi	r25, 0x09	; 9
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:492
  }
  else
  {
    return TEST_REG_ERROR;
  }
    c066:	df 91       	pop	r29
    c068:	cf 91       	pop	r28
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:486
  }

  Wire.requestFrom(address, (byte)1);
  if (Wire.available())
  {
    return Wire.read();
    c06a:	0c 94 8f 53 	jmp	0xa71e	; 0xa71e <TwoWire::read()>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:492
  }
  else
  {
    return TEST_REG_ERROR;
  }
    c06e:	8f ef       	ldi	r24, 0xFF	; 255
    c070:	9f ef       	ldi	r25, 0xFF	; 255
    c072:	df 91       	pop	r29
    c074:	cf 91       	pop	r28
    c076:	08 95       	ret

0000c078 <LSM303::init(LSM303::deviceType, LSM303::sa0State)>:
_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:60
{
  return io_timeout;
}

bool LSM303::init(deviceType device, sa0State sa0)
{
    c078:	ef 92       	push	r14
    c07a:	ff 92       	push	r15
    c07c:	0f 93       	push	r16
    c07e:	1f 93       	push	r17
    c080:	cf 93       	push	r28
    c082:	df 93       	push	r29
    c084:	ec 01       	movw	r28, r24
    c086:	8b 01       	movw	r16, r22
    c088:	7a 01       	movw	r14, r20
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:62
  // perform auto-detection unless device type and SA0 state were both specified
  if (device == device_auto || sa0 == sa0_auto)
    c08a:	64 30       	cpi	r22, 0x04	; 4
    c08c:	71 05       	cpc	r23, r1
    c08e:	21 f0       	breq	.+8      	; 0xc098 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x20>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:62 (discriminator 1)
    c090:	42 30       	cpi	r20, 0x02	; 2
    c092:	51 05       	cpc	r21, r1
    c094:	09 f0       	breq	.+2      	; 0xc098 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x20>
    c096:	8b c0       	rjmp	.+278    	; 0xc1ae <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:65
  {
    // check for LSM303D if device is unidentified or was specified to be this type
    if (device == device_auto || device == device_D)
    c098:	c8 01       	movw	r24, r16
    c09a:	03 97       	sbiw	r24, 0x03	; 3
    c09c:	02 97       	sbiw	r24, 0x02	; 2
    c09e:	88 f1       	brcs	.+98     	; 0xc102 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x8a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:84
        sa0 = sa0_low;
      }
    }
    
    // check for LSM303DLHC, DLM, DLH if device is still unidentified or was specified to be one of these types
    if (device == device_auto || device == device_DLHC || device == device_DLM || device == device_DLH)
    c0a0:	02 30       	cpi	r16, 0x02	; 2
    c0a2:	11 05       	cpc	r17, r1
    c0a4:	09 f0       	breq	.+2      	; 0xc0a8 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x30>
    c0a6:	56 c0       	rjmp	.+172    	; 0xc154 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xdc>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:87
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
    c0a8:	e1 14       	cp	r14, r1
    c0aa:	f1 04       	cpc	r15, r1
    c0ac:	71 f0       	breq	.+28     	; 0xc0ca <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x52>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:87 (discriminator 1)
    c0ae:	40 e2       	ldi	r20, 0x20	; 32
    c0b0:	50 e0       	ldi	r21, 0x00	; 0
    c0b2:	69 e1       	ldi	r22, 0x19	; 25
    c0b4:	ce 01       	movw	r24, r28
    c0b6:	0e 94 12 60 	call	0xc024	; 0xc024 <LSM303::testReg(unsigned char, LSM303::regAddr)>
    c0ba:	01 96       	adiw	r24, 0x01	; 1
    c0bc:	09 f0       	breq	.+2      	; 0xc0c0 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x48>
    c0be:	5d c0       	rjmp	.+186    	; 0xc17a <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x102>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:104 (discriminator 4)
          // magnetometer gives the DLM ID is actually a DLHC.
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLHC : device_DLH;
        }
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(DLM_DLH_ACC_SA0_LOW_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
    c0c0:	81 e0       	ldi	r24, 0x01	; 1
    c0c2:	e8 16       	cp	r14, r24
    c0c4:	f1 04       	cpc	r15, r1
    c0c6:	09 f4       	brne	.+2      	; 0xc0ca <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x52>
    c0c8:	e6 c0       	rjmp	.+460    	; 0xc296 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x21e>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:104 (discriminator 1)
    c0ca:	40 e2       	ldi	r20, 0x20	; 32
    c0cc:	50 e0       	ldi	r21, 0x00	; 0
    c0ce:	68 e1       	ldi	r22, 0x18	; 24
    c0d0:	ce 01       	movw	r24, r28
    c0d2:	0e 94 12 60 	call	0xc024	; 0xc024 <LSM303::testReg(unsigned char, LSM303::regAddr)>
    c0d6:	01 96       	adiw	r24, 0x01	; 1
    c0d8:	09 f4       	brne	.+2      	; 0xc0dc <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x64>
    c0da:	44 c0       	rjmp	.+136    	; 0xc164 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xec>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:108
      {
        // device responds to address 0011000; it's a DLM with SA0 low or DLH with SA0 low
        sa0 = sa0_low;
        if (device == device_auto)
    c0dc:	04 30       	cpi	r16, 0x04	; 4
    c0de:	11 05       	cpc	r17, r1
    c0e0:	69 f4       	brne	.+26     	; 0xc0fc <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x84>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:111
        {
          // use magnetometer WHO_AM_I register to determine device type
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLM : device_DLH;
    c0e2:	4f e0       	ldi	r20, 0x0F	; 15
    c0e4:	50 e0       	ldi	r21, 0x00	; 0
    c0e6:	6e e1       	ldi	r22, 0x1E	; 30
    c0e8:	ce 01       	movw	r24, r28
    c0ea:	0e 94 12 60 	call	0xc024	; 0xc024 <LSM303::testReg(unsigned char, LSM303::regAddr)>
    c0ee:	31 e0       	ldi	r19, 0x01	; 1
    c0f0:	20 e0       	ldi	r18, 0x00	; 0
    c0f2:	cc 97       	sbiw	r24, 0x3c	; 60
    c0f4:	09 f0       	breq	.+2      	; 0xc0f8 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x80>
    c0f6:	30 e0       	ldi	r19, 0x00	; 0
    c0f8:	03 2f       	mov	r16, r19
    c0fa:	12 2f       	mov	r17, r18
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:107
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(DLM_DLH_ACC_SA0_LOW_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
      {
        // device responds to address 0011000; it's a DLM with SA0 low or DLH with SA0 low
        sa0 = sa0_low;
    c0fc:	f1 2c       	mov	r15, r1
    c0fe:	e1 2c       	mov	r14, r1
    c100:	56 c0       	rjmp	.+172    	; 0xc1ae <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:68
  {
    // check for LSM303D if device is unidentified or was specified to be this type
    if (device == device_auto || device == device_D)
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
    c102:	e1 14       	cp	r14, r1
    c104:	f1 04       	cpc	r15, r1
    c106:	71 f4       	brne	.+28     	; 0xc124 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xac>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:75
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
        sa0 = sa0_high;
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(D_SA0_LOW_ADDRESS, WHO_AM_I) == D_WHO_ID)
    c108:	4f e0       	ldi	r20, 0x0F	; 15
    c10a:	50 e0       	ldi	r21, 0x00	; 0
    c10c:	6e e1       	ldi	r22, 0x1E	; 30
    c10e:	ce 01       	movw	r24, r28
    c110:	0e 94 12 60 	call	0xc024	; 0xc024 <LSM303::testReg(unsigned char, LSM303::regAddr)>
    c114:	89 34       	cpi	r24, 0x49	; 73
    c116:	91 05       	cpc	r25, r1
    c118:	c1 f4       	brne	.+48     	; 0xc14a <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xd2>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:79
      {
        // device responds to address 0011110 with D ID; it's a D with SA0 low
        device = device_D;
        sa0 = sa0_low;
    c11a:	f1 2c       	mov	r15, r1
    c11c:	e1 2c       	mov	r14, r1
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:71
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
      {
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
    c11e:	03 e0       	ldi	r16, 0x03	; 3
    c120:	10 e0       	ldi	r17, 0x00	; 0
    c122:	45 c0       	rjmp	.+138    	; 0xc1ae <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:68 (discriminator 1)
  {
    // check for LSM303D if device is unidentified or was specified to be this type
    if (device == device_auto || device == device_D)
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
    c124:	4f e0       	ldi	r20, 0x0F	; 15
    c126:	50 e0       	ldi	r21, 0x00	; 0
    c128:	6d e1       	ldi	r22, 0x1D	; 29
    c12a:	ce 01       	movw	r24, r28
    c12c:	0e 94 12 60 	call	0xc024	; 0xc024 <LSM303::testReg(unsigned char, LSM303::regAddr)>
    c130:	89 34       	cpi	r24, 0x49	; 73
    c132:	91 05       	cpc	r25, r1
    c134:	09 f4       	brne	.+2      	; 0xc138 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xc0>
    c136:	6a c0       	rjmp	.+212    	; 0xc20c <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x194>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:75 (discriminator 4)
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
        sa0 = sa0_high;
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(D_SA0_LOW_ADDRESS, WHO_AM_I) == D_WHO_ID)
    c138:	81 e0       	ldi	r24, 0x01	; 1
    c13a:	e8 16       	cp	r14, r24
    c13c:	f1 04       	cpc	r15, r1
    c13e:	21 f7       	brne	.-56     	; 0xc108 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x90>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:84
        sa0 = sa0_low;
      }
    }
    
    // check for LSM303DLHC, DLM, DLH if device is still unidentified or was specified to be one of these types
    if (device == device_auto || device == device_DLHC || device == device_DLM || device == device_DLH)
    c140:	04 30       	cpi	r16, 0x04	; 4
    c142:	11 05       	cpc	r17, r1
    c144:	09 f4       	brne	.+2      	; 0xc148 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xd0>
    c146:	b3 cf       	rjmp	.-154    	; 0xc0ae <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x36>
    c148:	09 c0       	rjmp	.+18     	; 0xc15c <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xe4>
    c14a:	04 30       	cpi	r16, 0x04	; 4
    c14c:	11 05       	cpc	r17, r1
    c14e:	09 f4       	brne	.+2      	; 0xc152 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xda>
    c150:	ab cf       	rjmp	.-170    	; 0xc0a8 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x30>
    c152:	a6 cf       	rjmp	.-180    	; 0xc0a0 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x28>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:84 (discriminator 2)
    c154:	01 30       	cpi	r16, 0x01	; 1
    c156:	11 05       	cpc	r17, r1
    c158:	09 f4       	brne	.+2      	; 0xc15c <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xe4>
    c15a:	a6 cf       	rjmp	.-180    	; 0xc0a8 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x30>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:84 (discriminator 3)
    c15c:	01 15       	cp	r16, r1
    c15e:	11 05       	cpc	r17, r1
    c160:	09 f4       	brne	.+2      	; 0xc164 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xec>
    c162:	a2 cf       	rjmp	.-188    	; 0xc0a8 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x30>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:117
        }
      }
    }
    
    // make sure device and SA0 were successfully detected; otherwise, indicate failure
    if (device == device_auto || sa0 == sa0_auto)
    c164:	04 30       	cpi	r16, 0x04	; 4
    c166:	11 05       	cpc	r17, r1
    c168:	f1 f4       	brne	.+60     	; 0xc1a6 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x12e>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:119
    {
      return false;
    c16a:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:173
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
      break;
  }
  
  return true;
}
    c16c:	df 91       	pop	r29
    c16e:	cf 91       	pop	r28
    c170:	1f 91       	pop	r17
    c172:	0f 91       	pop	r16
    c174:	ff 90       	pop	r15
    c176:	ef 90       	pop	r14
    c178:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:90
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
      {
        // device responds to address 0011001; it's a DLHC, DLM with SA0 high, or DLH with SA0 high
        sa0 = sa0_high;
    c17a:	ee 24       	eor	r14, r14
    c17c:	e3 94       	inc	r14
    c17e:	f1 2c       	mov	r15, r1
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:91
        if (device == device_auto)
    c180:	04 30       	cpi	r16, 0x04	; 4
    c182:	11 05       	cpc	r17, r1
    c184:	a1 f4       	brne	.+40     	; 0xc1ae <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:100
          // DLHC seems to respond to WHO_AM_I request the same way as DLM, even though this
          // register isn't documented in its datasheet. Since the DLHC accelerometer address is the
          // same as the DLM with SA0 high, but Pololu DLM boards pull SA0 low by default, we'll
          // guess that a device whose accelerometer responds to the SA0 high address and whose
          // magnetometer gives the DLM ID is actually a DLHC.
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLHC : device_DLH;
    c186:	4f e0       	ldi	r20, 0x0F	; 15
    c188:	50 e0       	ldi	r21, 0x00	; 0
    c18a:	6e e1       	ldi	r22, 0x1E	; 30
    c18c:	ce 01       	movw	r24, r28
    c18e:	0e 94 12 60 	call	0xc024	; 0xc024 <LSM303::testReg(unsigned char, LSM303::regAddr)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:90
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
      {
        // device responds to address 0011001; it's a DLHC, DLM with SA0 high, or DLH with SA0 high
        sa0 = sa0_high;
    c192:	ee 24       	eor	r14, r14
    c194:	e3 94       	inc	r14
    c196:	f1 2c       	mov	r15, r1
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:100
          // DLHC seems to respond to WHO_AM_I request the same way as DLM, even though this
          // register isn't documented in its datasheet. Since the DLHC accelerometer address is the
          // same as the DLM with SA0 high, but Pololu DLM boards pull SA0 low by default, we'll
          // guess that a device whose accelerometer responds to the SA0 high address and whose
          // magnetometer gives the DLM ID is actually a DLHC.
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLHC : device_DLH;
    c198:	10 e0       	ldi	r17, 0x00	; 0
    c19a:	00 e0       	ldi	r16, 0x00	; 0
    c19c:	cc 97       	sbiw	r24, 0x3c	; 60
    c19e:	39 f4       	brne	.+14     	; 0xc1ae <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
    c1a0:	02 e0       	ldi	r16, 0x02	; 2
    c1a2:	10 e0       	ldi	r17, 0x00	; 0
    c1a4:	04 c0       	rjmp	.+8      	; 0xc1ae <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:117 (discriminator 1)
        }
      }
    }
    
    // make sure device and SA0 were successfully detected; otherwise, indicate failure
    if (device == device_auto || sa0 == sa0_auto)
    c1a6:	82 e0       	ldi	r24, 0x02	; 2
    c1a8:	e8 16       	cp	r14, r24
    c1aa:	f1 04       	cpc	r15, r1
    c1ac:	f1 f2       	breq	.-68     	; 0xc16a <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xf2>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:123
    {
      return false;
    }
  }
  
  _device = device;
    c1ae:	1a 8f       	std	Y+26, r17	; 0x1a
    c1b0:	09 8f       	std	Y+25, r16	; 0x19
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:126
  
  // set device addresses and translated register addresses
  switch (device)
    c1b2:	01 30       	cpi	r16, 0x01	; 1
    c1b4:	11 05       	cpc	r17, r1
    c1b6:	71 f1       	breq	.+92     	; 0xc214 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x19c>
    c1b8:	08 f4       	brcc	.+2      	; 0xc1bc <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x144>
    c1ba:	4e c0       	rjmp	.+156    	; 0xc258 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1e0>
    c1bc:	02 30       	cpi	r16, 0x02	; 2
    c1be:	11 05       	cpc	r17, r1
    c1c0:	09 f4       	brne	.+2      	; 0xc1c4 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x14c>
    c1c2:	48 c0       	rjmp	.+144    	; 0xc254 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1dc>
    c1c4:	03 30       	cpi	r16, 0x03	; 3
    c1c6:	11 05       	cpc	r17, r1
    c1c8:	f9 f4       	brne	.+62     	; 0xc208 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x190>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:129
  {
    case device_D:
      acc_address = mag_address = (sa0 == sa0_high) ? D_SA0_HIGH_ADDRESS : D_SA0_LOW_ADDRESS;
    c1ca:	8e e1       	ldi	r24, 0x1E	; 30
    c1cc:	ea 94       	dec	r14
    c1ce:	ef 28       	or	r14, r15
    c1d0:	09 f4       	brne	.+2      	; 0xc1d4 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x15c>
    c1d2:	8d e1       	ldi	r24, 0x1D	; 29
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:129 (discriminator 4)
    c1d4:	8c 8f       	std	Y+28, r24	; 0x1c
    c1d6:	8b 8f       	std	Y+27, r24	; 0x1b
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:130 (discriminator 4)
      translated_regs[-OUT_X_L_M] = D_OUT_X_L_M;
    c1d8:	88 e0       	ldi	r24, 0x08	; 8
    c1da:	90 e0       	ldi	r25, 0x00	; 0
    c1dc:	9a a3       	std	Y+34, r25	; 0x22
    c1de:	89 a3       	std	Y+33, r24	; 0x21
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:131 (discriminator 4)
      translated_regs[-OUT_X_H_M] = D_OUT_X_H_M;
    c1e0:	89 e0       	ldi	r24, 0x09	; 9
    c1e2:	90 e0       	ldi	r25, 0x00	; 0
    c1e4:	98 a3       	std	Y+32, r25	; 0x20
    c1e6:	8f 8f       	std	Y+31, r24	; 0x1f
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:132 (discriminator 4)
      translated_regs[-OUT_Y_L_M] = D_OUT_Y_L_M;
    c1e8:	8a e0       	ldi	r24, 0x0A	; 10
    c1ea:	90 e0       	ldi	r25, 0x00	; 0
    c1ec:	9e a3       	std	Y+38, r25	; 0x26
    c1ee:	8d a3       	std	Y+37, r24	; 0x25
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:133 (discriminator 4)
      translated_regs[-OUT_Y_H_M] = D_OUT_Y_H_M;
    c1f0:	8b e0       	ldi	r24, 0x0B	; 11
    c1f2:	90 e0       	ldi	r25, 0x00	; 0
    c1f4:	9c a3       	std	Y+36, r25	; 0x24
    c1f6:	8b a3       	std	Y+35, r24	; 0x23
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:134 (discriminator 4)
      translated_regs[-OUT_Z_L_M] = D_OUT_Z_L_M;
    c1f8:	8c e0       	ldi	r24, 0x0C	; 12
    c1fa:	90 e0       	ldi	r25, 0x00	; 0
    c1fc:	9a a7       	std	Y+42, r25	; 0x2a
    c1fe:	89 a7       	std	Y+41, r24	; 0x29
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:135 (discriminator 4)
      translated_regs[-OUT_Z_H_M] = D_OUT_Z_H_M;
    c200:	8d e0       	ldi	r24, 0x0D	; 13
    c202:	90 e0       	ldi	r25, 0x00	; 0
    c204:	98 a7       	std	Y+40, r25	; 0x28
    c206:	8f a3       	std	Y+39, r24	; 0x27
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:172
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
      break;
  }
  
  return true;
    c208:	81 e0       	ldi	r24, 0x01	; 1
    c20a:	b0 cf       	rjmp	.-160    	; 0xc16c <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xf4>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:72
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
      {
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
        sa0 = sa0_high;
    c20c:	ee 24       	eor	r14, r14
    c20e:	e3 94       	inc	r14
    c210:	f1 2c       	mov	r15, r1
    c212:	85 cf       	rjmp	.-246    	; 0xc11e <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xa6>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:150
      translated_regs[-OUT_Z_H_M] = DLHC_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLHC_OUT_Z_L_M;
      break;

    case device_DLM:
      acc_address = (sa0 == sa0_high) ? DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS : DLM_DLH_ACC_SA0_LOW_ADDRESS;
    c214:	ea 94       	dec	r14
    c216:	ef 28       	or	r14, r15
    c218:	e9 f0       	breq	.+58     	; 0xc254 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1dc>
    c21a:	88 e1       	ldi	r24, 0x18	; 24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:150 (discriminator 4)
    c21c:	8b 8f       	std	Y+27, r24	; 0x1b
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:151 (discriminator 4)
      mag_address = DLHC_DLM_DLH_MAG_ADDRESS;
    c21e:	8e e1       	ldi	r24, 0x1E	; 30
    c220:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:152 (discriminator 4)
      translated_regs[-OUT_X_H_M] = DLM_OUT_X_H_M;
    c222:	83 e0       	ldi	r24, 0x03	; 3
    c224:	90 e0       	ldi	r25, 0x00	; 0
    c226:	98 a3       	std	Y+32, r25	; 0x20
    c228:	8f 8f       	std	Y+31, r24	; 0x1f
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:153 (discriminator 4)
      translated_regs[-OUT_X_L_M] = DLM_OUT_X_L_M;
    c22a:	84 e0       	ldi	r24, 0x04	; 4
    c22c:	90 e0       	ldi	r25, 0x00	; 0
    c22e:	9a a3       	std	Y+34, r25	; 0x22
    c230:	89 a3       	std	Y+33, r24	; 0x21
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:154 (discriminator 4)
      translated_regs[-OUT_Y_H_M] = DLM_OUT_Y_H_M;
    c232:	87 e0       	ldi	r24, 0x07	; 7
    c234:	90 e0       	ldi	r25, 0x00	; 0
    c236:	9c a3       	std	Y+36, r25	; 0x24
    c238:	8b a3       	std	Y+35, r24	; 0x23
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:155 (discriminator 4)
      translated_regs[-OUT_Y_L_M] = DLM_OUT_Y_L_M;
    c23a:	88 e0       	ldi	r24, 0x08	; 8
    c23c:	90 e0       	ldi	r25, 0x00	; 0
    c23e:	9e a3       	std	Y+38, r25	; 0x26
    c240:	8d a3       	std	Y+37, r24	; 0x25
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:156 (discriminator 4)
      translated_regs[-OUT_Z_H_M] = DLM_OUT_Z_H_M;
    c242:	85 e0       	ldi	r24, 0x05	; 5
    c244:	90 e0       	ldi	r25, 0x00	; 0
    c246:	98 a7       	std	Y+40, r25	; 0x28
    c248:	8f a3       	std	Y+39, r24	; 0x27
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:157 (discriminator 4)
      translated_regs[-OUT_Z_L_M] = DLM_OUT_Z_L_M;
    c24a:	86 e0       	ldi	r24, 0x06	; 6
    c24c:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:168 (discriminator 4)
      translated_regs[-OUT_X_H_M] = DLH_OUT_X_H_M;
      translated_regs[-OUT_X_L_M] = DLH_OUT_X_L_M;
      translated_regs[-OUT_Y_H_M] = DLH_OUT_Y_H_M;
      translated_regs[-OUT_Y_L_M] = DLH_OUT_Y_L_M;
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
    c24e:	9a a7       	std	Y+42, r25	; 0x2a
    c250:	89 a7       	std	Y+41, r24	; 0x29
    c252:	da cf       	rjmp	.-76     	; 0xc208 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x190>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:150
      translated_regs[-OUT_Z_H_M] = DLHC_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLHC_OUT_Z_L_M;
      break;

    case device_DLM:
      acc_address = (sa0 == sa0_high) ? DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS : DLM_DLH_ACC_SA0_LOW_ADDRESS;
    c254:	89 e1       	ldi	r24, 0x19	; 25
    c256:	e2 cf       	rjmp	.-60     	; 0xc21c <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1a4>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:161
      translated_regs[-OUT_Z_H_M] = DLM_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLM_OUT_Z_L_M;
      break;

    case device_DLH:
      acc_address = (sa0 == sa0_high) ? DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS : DLM_DLH_ACC_SA0_LOW_ADDRESS;
    c258:	88 e1       	ldi	r24, 0x18	; 24
    c25a:	ea 94       	dec	r14
    c25c:	ef 28       	or	r14, r15
    c25e:	09 f4       	brne	.+2      	; 0xc262 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1ea>
    c260:	89 e1       	ldi	r24, 0x19	; 25
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:161 (discriminator 4)
    c262:	8b 8f       	std	Y+27, r24	; 0x1b
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:162 (discriminator 4)
      mag_address = DLHC_DLM_DLH_MAG_ADDRESS;
    c264:	8e e1       	ldi	r24, 0x1E	; 30
    c266:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:163 (discriminator 4)
      translated_regs[-OUT_X_H_M] = DLH_OUT_X_H_M;
    c268:	83 e0       	ldi	r24, 0x03	; 3
    c26a:	90 e0       	ldi	r25, 0x00	; 0
    c26c:	98 a3       	std	Y+32, r25	; 0x20
    c26e:	8f 8f       	std	Y+31, r24	; 0x1f
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:164 (discriminator 4)
      translated_regs[-OUT_X_L_M] = DLH_OUT_X_L_M;
    c270:	84 e0       	ldi	r24, 0x04	; 4
    c272:	90 e0       	ldi	r25, 0x00	; 0
    c274:	9a a3       	std	Y+34, r25	; 0x22
    c276:	89 a3       	std	Y+33, r24	; 0x21
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:165 (discriminator 4)
      translated_regs[-OUT_Y_H_M] = DLH_OUT_Y_H_M;
    c278:	85 e0       	ldi	r24, 0x05	; 5
    c27a:	90 e0       	ldi	r25, 0x00	; 0
    c27c:	9c a3       	std	Y+36, r25	; 0x24
    c27e:	8b a3       	std	Y+35, r24	; 0x23
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:166 (discriminator 4)
      translated_regs[-OUT_Y_L_M] = DLH_OUT_Y_L_M;
    c280:	86 e0       	ldi	r24, 0x06	; 6
    c282:	90 e0       	ldi	r25, 0x00	; 0
    c284:	9e a3       	std	Y+38, r25	; 0x26
    c286:	8d a3       	std	Y+37, r24	; 0x25
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:167 (discriminator 4)
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
    c288:	87 e0       	ldi	r24, 0x07	; 7
    c28a:	90 e0       	ldi	r25, 0x00	; 0
    c28c:	98 a7       	std	Y+40, r25	; 0x28
    c28e:	8f a3       	std	Y+39, r24	; 0x27
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:168 (discriminator 4)
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
    c290:	88 e0       	ldi	r24, 0x08	; 8
    c292:	90 e0       	ldi	r25, 0x00	; 0
    c294:	dc cf       	rjmp	.-72     	; 0xc24e <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1d6>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:117
        }
      }
    }
    
    // make sure device and SA0 were successfully detected; otherwise, indicate failure
    if (device == device_auto || sa0 == sa0_auto)
    c296:	04 30       	cpi	r16, 0x04	; 4
    c298:	11 05       	cpc	r17, r1
    c29a:	09 f4       	brne	.+2      	; 0xc29e <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x226>
    c29c:	66 cf       	rjmp	.-308    	; 0xc16a <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xf2>
    c29e:	87 cf       	rjmp	.-242    	; 0xc1ae <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>

0000c2a0 <SoftwareSerial::read()>:
_ZN14SoftwareSerial4readEv():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:308
uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    return num - sub;
  else
    return 1;
}
    c2a0:	20 91 cc 0a 	lds	r18, 0x0ACC	; 0x800acc <SoftwareSerial::active_object>
    c2a4:	30 91 cd 0a 	lds	r19, 0x0ACD	; 0x800acd <SoftwareSerial::active_object+0x1>
    c2a8:	28 17       	cp	r18, r24
    c2aa:	39 07       	cpc	r19, r25
    c2ac:	b9 f4       	brne	.+46     	; 0xc2dc <SoftwareSerial::read()+0x3c>
    c2ae:	90 91 8a 0a 	lds	r25, 0x0A8A	; 0x800a8a <SoftwareSerial::_receive_buffer_head>
    c2b2:	80 91 8b 0a 	lds	r24, 0x0A8B	; 0x800a8b <SoftwareSerial::_receive_buffer_tail>
    c2b6:	98 17       	cp	r25, r24
    c2b8:	89 f0       	breq	.+34     	; 0xc2dc <SoftwareSerial::read()+0x3c>
    c2ba:	e0 91 8a 0a 	lds	r30, 0x0A8A	; 0x800a8a <SoftwareSerial::_receive_buffer_head>
    c2be:	f0 e0       	ldi	r31, 0x00	; 0
    c2c0:	e4 57       	subi	r30, 0x74	; 116
    c2c2:	f5 4f       	sbci	r31, 0xF5	; 245
    c2c4:	80 81       	ld	r24, Z
    c2c6:	20 91 8a 0a 	lds	r18, 0x0A8A	; 0x800a8a <SoftwareSerial::_receive_buffer_head>
    c2ca:	30 e0       	ldi	r19, 0x00	; 0
    c2cc:	2f 5f       	subi	r18, 0xFF	; 255
    c2ce:	3f 4f       	sbci	r19, 0xFF	; 255
    c2d0:	2f 73       	andi	r18, 0x3F	; 63
    c2d2:	33 27       	eor	r19, r19
    c2d4:	20 93 8a 0a 	sts	0x0A8A, r18	; 0x800a8a <SoftwareSerial::_receive_buffer_head>
    c2d8:	90 e0       	ldi	r25, 0x00	; 0
    c2da:	08 95       	ret
    c2dc:	8f ef       	ldi	r24, 0xFF	; 255
    c2de:	9f ef       	ldi	r25, 0xFF	; 255
    c2e0:	08 95       	ret

0000c2e2 <SoftwareSerial::write(unsigned char)>:
_ZN14SoftwareSerial5writeEh():
    c2e2:	ef 92       	push	r14
    c2e4:	ff 92       	push	r15
    c2e6:	0f 93       	push	r16
    c2e8:	1f 93       	push	r17
    c2ea:	cf 93       	push	r28
    c2ec:	df 93       	push	r29
    c2ee:	dc 01       	movw	r26, r24
    c2f0:	5c 96       	adiw	r26, 0x1c	; 28
    c2f2:	ed 90       	ld	r14, X+
    c2f4:	fc 90       	ld	r15, X
    c2f6:	5d 97       	sbiw	r26, 0x1d	; 29
    c2f8:	e1 14       	cp	r14, r1
    c2fa:	f1 04       	cpc	r15, r1
    c2fc:	79 f4       	brne	.+30     	; 0xc31c <SoftwareSerial::write(unsigned char)+0x3a>
_ZN5Print13setWriteErrorEi():
    c2fe:	81 e0       	ldi	r24, 0x01	; 1
    c300:	90 e0       	ldi	r25, 0x00	; 0
    c302:	13 96       	adiw	r26, 0x03	; 3
    c304:	9c 93       	st	X, r25
    c306:	8e 93       	st	-X, r24
    c308:	12 97       	sbiw	r26, 0x02	; 2
_ZN14SoftwareSerial5writeEh():
    c30a:	90 e0       	ldi	r25, 0x00	; 0
    c30c:	80 e0       	ldi	r24, 0x00	; 0
    c30e:	df 91       	pop	r29
    c310:	cf 91       	pop	r28
    c312:	1f 91       	pop	r17
    c314:	0f 91       	pop	r16
    c316:	ff 90       	pop	r15
    c318:	ef 90       	pop	r14
    c31a:	08 95       	ret
    c31c:	51 96       	adiw	r26, 0x11	; 17
    c31e:	ed 91       	ld	r30, X+
    c320:	fc 91       	ld	r31, X
    c322:	52 97       	sbiw	r26, 0x12	; 18
    c324:	50 96       	adiw	r26, 0x10	; 16
    c326:	8c 91       	ld	r24, X
    c328:	50 97       	sbiw	r26, 0x10	; 16
    c32a:	98 2f       	mov	r25, r24
    c32c:	90 95       	com	r25
    c32e:	0f b7       	in	r16, 0x3f	; 63
    c330:	5e 96       	adiw	r26, 0x1e	; 30
    c332:	2c 91       	ld	r18, X
    c334:	5e 97       	sbiw	r26, 0x1e	; 30
    c336:	12 2f       	mov	r17, r18
    c338:	12 70       	andi	r17, 0x02	; 2
    c33a:	21 fd       	sbrc	r18, 1
    c33c:	60 95       	com	r22
    c33e:	f8 94       	cli
    c340:	20 81       	ld	r18, Z
    c342:	11 23       	and	r17, r17
    c344:	19 f1       	breq	.+70     	; 0xc38c <SoftwareSerial::write(unsigned char)+0xaa>
    c346:	28 2b       	or	r18, r24
    c348:	20 83       	st	Z, r18
_delay_loop_2():
    c34a:	e7 01       	movw	r28, r14
    c34c:	21 97       	sbiw	r28, 0x01	; 1
    c34e:	f1 f7       	brne	.-4      	; 0xc34c <SoftwareSerial::write(unsigned char)+0x6a>
    c350:	28 e0       	ldi	r18, 0x08	; 8
_ZN14SoftwareSerial5writeEh():
    c352:	46 2f       	mov	r20, r22
    c354:	50 e0       	ldi	r21, 0x00	; 0
    c356:	30 81       	ld	r19, Z
    c358:	60 ff       	sbrs	r22, 0
    c35a:	1a c0       	rjmp	.+52     	; 0xc390 <SoftwareSerial::write(unsigned char)+0xae>
    c35c:	38 2b       	or	r19, r24
    c35e:	30 83       	st	Z, r19
_delay_loop_2():
    c360:	e7 01       	movw	r28, r14
    c362:	21 97       	sbiw	r28, 0x01	; 1
    c364:	f1 f7       	brne	.-4      	; 0xc362 <SoftwareSerial::write(unsigned char)+0x80>
_ZN14SoftwareSerial5writeEh():
    c366:	ba 01       	movw	r22, r20
    c368:	75 95       	asr	r23
    c36a:	67 95       	ror	r22
    c36c:	21 50       	subi	r18, 0x01	; 1
    c36e:	89 f7       	brne	.-30     	; 0xc352 <SoftwareSerial::write(unsigned char)+0x70>
    c370:	11 23       	and	r17, r17
    c372:	81 f0       	breq	.+32     	; 0xc394 <SoftwareSerial::write(unsigned char)+0xb2>
    c374:	80 81       	ld	r24, Z
    c376:	89 23       	and	r24, r25
    c378:	80 83       	st	Z, r24
    c37a:	0f bf       	out	0x3f, r16	; 63
_delay_loop_2():
    c37c:	5c 96       	adiw	r26, 0x1c	; 28
    c37e:	8d 91       	ld	r24, X+
    c380:	9c 91       	ld	r25, X
    c382:	01 97       	sbiw	r24, 0x01	; 1
    c384:	f1 f7       	brne	.-4      	; 0xc382 <SoftwareSerial::write(unsigned char)+0xa0>
_ZN14SoftwareSerial5writeEh():
    c386:	81 e0       	ldi	r24, 0x01	; 1
    c388:	90 e0       	ldi	r25, 0x00	; 0
    c38a:	c1 cf       	rjmp	.-126    	; 0xc30e <SoftwareSerial::write(unsigned char)+0x2c>
    c38c:	29 23       	and	r18, r25
    c38e:	dc cf       	rjmp	.-72     	; 0xc348 <SoftwareSerial::write(unsigned char)+0x66>
    c390:	39 23       	and	r19, r25
    c392:	e5 cf       	rjmp	.-54     	; 0xc35e <SoftwareSerial::write(unsigned char)+0x7c>
    c394:	90 81       	ld	r25, Z
    c396:	89 2b       	or	r24, r25
    c398:	ef cf       	rjmp	.-34     	; 0xc378 <SoftwareSerial::write(unsigned char)+0x96>

0000c39a <SoftwareSerial::flush()>:
_ZN14SoftwareSerial5flushEv():
    c39a:	08 95       	ret

0000c39c <SoftwareSerial::peek()>:
_ZN14SoftwareSerial4peekEv():
    c39c:	20 91 cc 0a 	lds	r18, 0x0ACC	; 0x800acc <SoftwareSerial::active_object>
    c3a0:	30 91 cd 0a 	lds	r19, 0x0ACD	; 0x800acd <SoftwareSerial::active_object+0x1>
    c3a4:	28 17       	cp	r18, r24
    c3a6:	39 07       	cpc	r19, r25
    c3a8:	71 f4       	brne	.+28     	; 0xc3c6 <SoftwareSerial::peek()+0x2a>
    c3aa:	90 91 8a 0a 	lds	r25, 0x0A8A	; 0x800a8a <SoftwareSerial::_receive_buffer_head>
    c3ae:	80 91 8b 0a 	lds	r24, 0x0A8B	; 0x800a8b <SoftwareSerial::_receive_buffer_tail>
    c3b2:	98 17       	cp	r25, r24
    c3b4:	41 f0       	breq	.+16     	; 0xc3c6 <SoftwareSerial::peek()+0x2a>
    c3b6:	e0 91 8a 0a 	lds	r30, 0x0A8A	; 0x800a8a <SoftwareSerial::_receive_buffer_head>
    c3ba:	f0 e0       	ldi	r31, 0x00	; 0
    c3bc:	e4 57       	subi	r30, 0x74	; 116
    c3be:	f5 4f       	sbci	r31, 0xF5	; 245
    c3c0:	80 81       	ld	r24, Z
    c3c2:	90 e0       	ldi	r25, 0x00	; 0
    c3c4:	08 95       	ret
    c3c6:	8f ef       	ldi	r24, 0xFF	; 255
    c3c8:	9f ef       	ldi	r25, 0xFF	; 255
    c3ca:	08 95       	ret

0000c3cc <SoftwareSerial::available()>:
_ZN14SoftwareSerial9availableEv():
    c3cc:	20 91 cc 0a 	lds	r18, 0x0ACC	; 0x800acc <SoftwareSerial::active_object>
    c3d0:	30 91 cd 0a 	lds	r19, 0x0ACD	; 0x800acd <SoftwareSerial::active_object+0x1>
    c3d4:	28 17       	cp	r18, r24
    c3d6:	39 07       	cpc	r19, r25
    c3d8:	71 f4       	brne	.+28     	; 0xc3f6 <SoftwareSerial::available()+0x2a>
    c3da:	80 91 8b 0a 	lds	r24, 0x0A8B	; 0x800a8b <SoftwareSerial::_receive_buffer_tail>
    c3de:	20 91 8a 0a 	lds	r18, 0x0A8A	; 0x800a8a <SoftwareSerial::_receive_buffer_head>
    c3e2:	90 e0       	ldi	r25, 0x00	; 0
    c3e4:	80 5c       	subi	r24, 0xC0	; 192
    c3e6:	9f 4f       	sbci	r25, 0xFF	; 255
    c3e8:	82 1b       	sub	r24, r18
    c3ea:	91 09       	sbc	r25, r1
    c3ec:	60 e4       	ldi	r22, 0x40	; 64
    c3ee:	70 e0       	ldi	r23, 0x00	; 0
    c3f0:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodhi4>
    c3f4:	08 95       	ret
    c3f6:	90 e0       	ldi	r25, 0x00	; 0
    c3f8:	80 e0       	ldi	r24, 0x00	; 0
    c3fa:	08 95       	ret

0000c3fc <SoftwareSerial::stopListening()>:
_ZN14SoftwareSerial13stopListeningEv():
    c3fc:	e0 91 cc 0a 	lds	r30, 0x0ACC	; 0x800acc <SoftwareSerial::active_object>
    c400:	f0 91 cd 0a 	lds	r31, 0x0ACD	; 0x800acd <SoftwareSerial::active_object+0x1>
    c404:	e8 17       	cp	r30, r24
    c406:	f9 07       	cpc	r31, r25
    c408:	69 f4       	brne	.+26     	; 0xc424 <SoftwareSerial::stopListening()+0x28>
_ZN14SoftwareSerial11setRxIntMskEb():
    c40a:	a3 89       	ldd	r26, Z+19	; 0x13
    c40c:	b4 89       	ldd	r27, Z+20	; 0x14
    c40e:	9c 91       	ld	r25, X
    c410:	85 89       	ldd	r24, Z+21	; 0x15
    c412:	80 95       	com	r24
    c414:	89 23       	and	r24, r25
    c416:	8c 93       	st	X, r24
_ZN14SoftwareSerial13stopListeningEv():
    c418:	10 92 cd 0a 	sts	0x0ACD, r1	; 0x800acd <SoftwareSerial::active_object+0x1>
    c41c:	10 92 cc 0a 	sts	0x0ACC, r1	; 0x800acc <SoftwareSerial::active_object>
    c420:	81 e0       	ldi	r24, 0x01	; 1
    c422:	08 95       	ret
    c424:	80 e0       	ldi	r24, 0x00	; 0
    c426:	08 95       	ret

0000c428 <SoftwareSerial::listen()>:
_ZN14SoftwareSerial6listenEv():
    c428:	cf 93       	push	r28
    c42a:	df 93       	push	r29
    c42c:	ec 01       	movw	r28, r24
    c42e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    c430:	9b 8d       	ldd	r25, Y+27	; 0x1b
    c432:	89 2b       	or	r24, r25
    c434:	01 f1       	breq	.+64     	; 0xc476 <SoftwareSerial::listen()+0x4e>
    c436:	80 91 cc 0a 	lds	r24, 0x0ACC	; 0x800acc <SoftwareSerial::active_object>
    c43a:	90 91 cd 0a 	lds	r25, 0x0ACD	; 0x800acd <SoftwareSerial::active_object+0x1>
    c43e:	8c 17       	cp	r24, r28
    c440:	9d 07       	cpc	r25, r29
    c442:	c9 f0       	breq	.+50     	; 0xc476 <SoftwareSerial::listen()+0x4e>
    c444:	00 97       	sbiw	r24, 0x00	; 0
    c446:	11 f0       	breq	.+4      	; 0xc44c <SoftwareSerial::listen()+0x24>
    c448:	0e 94 fe 61 	call	0xc3fc	; 0xc3fc <SoftwareSerial::stopListening()>
    c44c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    c44e:	8e 7f       	andi	r24, 0xFE	; 254
    c450:	8e 8f       	std	Y+30, r24	; 0x1e
    c452:	10 92 8b 0a 	sts	0x0A8B, r1	; 0x800a8b <SoftwareSerial::_receive_buffer_tail>
    c456:	10 92 8a 0a 	sts	0x0A8A, r1	; 0x800a8a <SoftwareSerial::_receive_buffer_head>
    c45a:	d0 93 cd 0a 	sts	0x0ACD, r29	; 0x800acd <SoftwareSerial::active_object+0x1>
    c45e:	c0 93 cc 0a 	sts	0x0ACC, r28	; 0x800acc <SoftwareSerial::active_object>
_ZN14SoftwareSerial11setRxIntMskEb():
    c462:	eb 89       	ldd	r30, Y+19	; 0x13
    c464:	fc 89       	ldd	r31, Y+20	; 0x14
    c466:	80 81       	ld	r24, Z
    c468:	9d 89       	ldd	r25, Y+21	; 0x15
    c46a:	89 2b       	or	r24, r25
    c46c:	80 83       	st	Z, r24
    c46e:	81 e0       	ldi	r24, 0x01	; 1
_ZN14SoftwareSerial6listenEv():
    c470:	df 91       	pop	r29
    c472:	cf 91       	pop	r28
    c474:	08 95       	ret
    c476:	80 e0       	ldi	r24, 0x00	; 0
    c478:	fb cf       	rjmp	.-10     	; 0xc470 <SoftwareSerial::listen()+0x48>

0000c47a <__vector_4>:
__vector_6():
    c47a:	1f 92       	push	r1
    c47c:	0f 92       	push	r0
    c47e:	0f b6       	in	r0, 0x3f	; 63
    c480:	0f 92       	push	r0
    c482:	11 24       	eor	r1, r1
    c484:	0b b6       	in	r0, 0x3b	; 59
    c486:	0f 92       	push	r0
    c488:	2f 93       	push	r18
    c48a:	3f 93       	push	r19
    c48c:	4f 93       	push	r20
    c48e:	5f 93       	push	r21
    c490:	6f 93       	push	r22
    c492:	7f 93       	push	r23
    c494:	8f 93       	push	r24
    c496:	9f 93       	push	r25
    c498:	af 93       	push	r26
    c49a:	bf 93       	push	r27
    c49c:	ef 93       	push	r30
    c49e:	ff 93       	push	r31
_ZN14SoftwareSerial16handle_interruptEv():
    c4a0:	e0 91 cc 0a 	lds	r30, 0x0ACC	; 0x800acc <SoftwareSerial::active_object>
    c4a4:	f0 91 cd 0a 	lds	r31, 0x0ACD	; 0x800acd <SoftwareSerial::active_object+0x1>
    c4a8:	30 97       	sbiw	r30, 0x00	; 0
    c4aa:	49 f0       	breq	.+18     	; 0xc4be <__vector_4+0x44>
    c4ac:	a6 85       	ldd	r26, Z+14	; 0x0e
    c4ae:	b7 85       	ldd	r27, Z+15	; 0x0f
    c4b0:	85 85       	ldd	r24, Z+13	; 0x0d
_ZN14SoftwareSerial4recvEv():
    c4b2:	96 8d       	ldd	r25, Z+30	; 0x1e
    c4b4:	91 ff       	sbrs	r25, 1
    c4b6:	16 c0       	rjmp	.+44     	; 0xc4e4 <__vector_4+0x6a>
_ZN14SoftwareSerial11rx_pin_readEv():
    c4b8:	9c 91       	ld	r25, X
    c4ba:	89 23       	and	r24, r25
_ZN14SoftwareSerial4recvEv():
    c4bc:	b1 f4       	brne	.+44     	; 0xc4ea <__vector_4+0x70>
__vector_6():
    c4be:	ff 91       	pop	r31
    c4c0:	ef 91       	pop	r30
    c4c2:	bf 91       	pop	r27
    c4c4:	af 91       	pop	r26
    c4c6:	9f 91       	pop	r25
    c4c8:	8f 91       	pop	r24
    c4ca:	7f 91       	pop	r23
    c4cc:	6f 91       	pop	r22
    c4ce:	5f 91       	pop	r21
    c4d0:	4f 91       	pop	r20
    c4d2:	3f 91       	pop	r19
    c4d4:	2f 91       	pop	r18
    c4d6:	0f 90       	pop	r0
    c4d8:	0b be       	out	0x3b, r0	; 59
    c4da:	0f 90       	pop	r0
    c4dc:	0f be       	out	0x3f, r0	; 63
    c4de:	0f 90       	pop	r0
    c4e0:	1f 90       	pop	r1
    c4e2:	18 95       	reti
_ZN14SoftwareSerial11rx_pin_readEv():
    c4e4:	9c 91       	ld	r25, X
    c4e6:	89 23       	and	r24, r25
_ZN14SoftwareSerial4recvEv():
    c4e8:	51 f7       	brne	.-44     	; 0xc4be <__vector_4+0x44>
_ZN14SoftwareSerial11setRxIntMskEb():
    c4ea:	a3 89       	ldd	r26, Z+19	; 0x13
    c4ec:	b4 89       	ldd	r27, Z+20	; 0x14
    c4ee:	9c 91       	ld	r25, X
    c4f0:	85 89       	ldd	r24, Z+21	; 0x15
    c4f2:	80 95       	com	r24
    c4f4:	89 23       	and	r24, r25
    c4f6:	8c 93       	st	X, r24
_delay_loop_2():
    c4f8:	86 89       	ldd	r24, Z+22	; 0x16
    c4fa:	97 89       	ldd	r25, Z+23	; 0x17
    c4fc:	01 97       	sbiw	r24, 0x01	; 1
    c4fe:	f1 f7       	brne	.-4      	; 0xc4fc <__vector_4+0x82>
_ZN14SoftwareSerial4recvEv():
    c500:	60 8d       	ldd	r22, Z+24	; 0x18
    c502:	71 8d       	ldd	r23, Z+25	; 0x19
_ZN14SoftwareSerial11rx_pin_readEv():
    c504:	a6 85       	ldd	r26, Z+14	; 0x0e
    c506:	b7 85       	ldd	r27, Z+15	; 0x0f
    c508:	55 85       	ldd	r21, Z+13	; 0x0d
    c50a:	38 e0       	ldi	r19, 0x08	; 8
_ZN14SoftwareSerial4recvEv():
    c50c:	20 e0       	ldi	r18, 0x00	; 0
_delay_loop_2():
    c50e:	cb 01       	movw	r24, r22
    c510:	01 97       	sbiw	r24, 0x01	; 1
    c512:	f1 f7       	brne	.-4      	; 0xc510 <__vector_4+0x96>
_ZN14SoftwareSerial4recvEv():
    c514:	82 2f       	mov	r24, r18
    c516:	90 e0       	ldi	r25, 0x00	; 0
    c518:	95 95       	asr	r25
    c51a:	87 95       	ror	r24
    c51c:	28 2f       	mov	r18, r24
_ZN14SoftwareSerial11rx_pin_readEv():
    c51e:	4c 91       	ld	r20, X
    c520:	45 23       	and	r20, r21
_ZN14SoftwareSerial4recvEv():
    c522:	09 f0       	breq	.+2      	; 0xc526 <__vector_4+0xac>
    c524:	20 68       	ori	r18, 0x80	; 128
    c526:	31 50       	subi	r19, 0x01	; 1
    c528:	91 f7       	brne	.-28     	; 0xc50e <__vector_4+0x94>
    c52a:	86 8d       	ldd	r24, Z+30	; 0x1e
    c52c:	81 fd       	sbrc	r24, 1
    c52e:	20 95       	com	r18
    c530:	80 91 8b 0a 	lds	r24, 0x0A8B	; 0x800a8b <SoftwareSerial::_receive_buffer_tail>
    c534:	90 e0       	ldi	r25, 0x00	; 0
    c536:	01 96       	adiw	r24, 0x01	; 1
    c538:	8f 73       	andi	r24, 0x3F	; 63
    c53a:	99 27       	eor	r25, r25
    c53c:	30 91 8a 0a 	lds	r19, 0x0A8A	; 0x800a8a <SoftwareSerial::_receive_buffer_head>
    c540:	38 17       	cp	r19, r24
    c542:	99 f0       	breq	.+38     	; 0xc56a <__vector_4+0xf0>
    c544:	a0 91 8b 0a 	lds	r26, 0x0A8B	; 0x800a8b <SoftwareSerial::_receive_buffer_tail>
    c548:	b0 e0       	ldi	r27, 0x00	; 0
    c54a:	a4 57       	subi	r26, 0x74	; 116
    c54c:	b5 4f       	sbci	r27, 0xF5	; 245
    c54e:	2c 93       	st	X, r18
    c550:	80 93 8b 0a 	sts	0x0A8B, r24	; 0x800a8b <SoftwareSerial::_receive_buffer_tail>
_delay_loop_2():
    c554:	82 8d       	ldd	r24, Z+26	; 0x1a
    c556:	93 8d       	ldd	r25, Z+27	; 0x1b
    c558:	01 97       	sbiw	r24, 0x01	; 1
    c55a:	f1 f7       	brne	.-4      	; 0xc558 <__vector_4+0xde>
_ZN14SoftwareSerial11setRxIntMskEb():
    c55c:	a3 89       	ldd	r26, Z+19	; 0x13
    c55e:	b4 89       	ldd	r27, Z+20	; 0x14
    c560:	8c 91       	ld	r24, X
    c562:	95 89       	ldd	r25, Z+21	; 0x15
    c564:	89 2b       	or	r24, r25
    c566:	8c 93       	st	X, r24
__vector_6():
    c568:	aa cf       	rjmp	.-172    	; 0xc4be <__vector_4+0x44>
_ZN14SoftwareSerial4recvEv():
    c56a:	86 8d       	ldd	r24, Z+30	; 0x1e
    c56c:	81 60       	ori	r24, 0x01	; 1
    c56e:	86 8f       	std	Z+30, r24	; 0x1e
    c570:	f1 cf       	rjmp	.-30     	; 0xc554 <__vector_4+0xda>

0000c572 <SoftwareSerial::~SoftwareSerial()>:
_ZN14SoftwareSerialD2Ev():
    c572:	21 e9       	ldi	r18, 0x91	; 145
    c574:	32 e0       	ldi	r19, 0x02	; 2
    c576:	fc 01       	movw	r30, r24
    c578:	31 83       	std	Z+1, r19	; 0x01
    c57a:	20 83       	st	Z, r18
_ZN14SoftwareSerial3endEv():
    c57c:	0c 94 fe 61 	jmp	0xc3fc	; 0xc3fc <SoftwareSerial::stopListening()>

0000c580 <SoftwareSerial::setTX(signed char)>:
_ZN14SoftwareSerial5setTXEa():
    c580:	1f 93       	push	r17
    c582:	cf 93       	push	r28
    c584:	df 93       	push	r29
    c586:	ec 01       	movw	r28, r24
    c588:	16 2f       	mov	r17, r22
    c58a:	6e 8d       	ldd	r22, Y+30	; 0x1e
    c58c:	66 95       	lsr	r22
    c58e:	61 70       	andi	r22, 0x01	; 1
    c590:	81 e0       	ldi	r24, 0x01	; 1
    c592:	68 27       	eor	r22, r24
    c594:	81 2f       	mov	r24, r17
    c596:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
    c59a:	61 e0       	ldi	r22, 0x01	; 1
    c59c:	81 2f       	mov	r24, r17
    c59e:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
    c5a2:	81 2f       	mov	r24, r17
    c5a4:	11 0f       	add	r17, r17
    c5a6:	99 0b       	sbc	r25, r25
    c5a8:	fc 01       	movw	r30, r24
    c5aa:	e0 59       	subi	r30, 0x90	; 144
    c5ac:	ff 4d       	sbci	r31, 0xDF	; 223
    c5ae:	e4 91       	lpm	r30, Z
    c5b0:	e8 8b       	std	Y+16, r30	; 0x10
    c5b2:	fc 01       	movw	r30, r24
    c5b4:	e0 57       	subi	r30, 0x70	; 112
    c5b6:	ff 4d       	sbci	r31, 0xDF	; 223
    c5b8:	e4 91       	lpm	r30, Z
    c5ba:	f0 e0       	ldi	r31, 0x00	; 0
    c5bc:	ee 0f       	add	r30, r30
    c5be:	ff 1f       	adc	r31, r31
    c5c0:	e6 54       	subi	r30, 0x46	; 70
    c5c2:	ff 4d       	sbci	r31, 0xDF	; 223
    c5c4:	85 91       	lpm	r24, Z+
    c5c6:	94 91       	lpm	r25, Z
    c5c8:	9a 8b       	std	Y+18, r25	; 0x12
    c5ca:	89 8b       	std	Y+17, r24	; 0x11
    c5cc:	df 91       	pop	r29
    c5ce:	cf 91       	pop	r28
    c5d0:	1f 91       	pop	r17
    c5d2:	08 95       	ret

0000c5d4 <SoftwareSerial::setRX(signed char)>:
_ZN14SoftwareSerial5setRXEa():
    c5d4:	1f 93       	push	r17
    c5d6:	cf 93       	push	r28
    c5d8:	df 93       	push	r29
    c5da:	ec 01       	movw	r28, r24
    c5dc:	16 2f       	mov	r17, r22
    c5de:	60 e0       	ldi	r22, 0x00	; 0
    c5e0:	81 2f       	mov	r24, r17
    c5e2:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
    c5e6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    c5e8:	81 fd       	sbrc	r24, 1
    c5ea:	04 c0       	rjmp	.+8      	; 0xc5f4 <SoftwareSerial::setRX(signed char)+0x20>
    c5ec:	61 e0       	ldi	r22, 0x01	; 1
    c5ee:	81 2f       	mov	r24, r17
    c5f0:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
    c5f4:	1c 87       	std	Y+12, r17	; 0x0c
    c5f6:	81 2f       	mov	r24, r17
    c5f8:	11 0f       	add	r17, r17
    c5fa:	99 0b       	sbc	r25, r25
    c5fc:	fc 01       	movw	r30, r24
    c5fe:	e0 59       	subi	r30, 0x90	; 144
    c600:	ff 4d       	sbci	r31, 0xDF	; 223
    c602:	e4 91       	lpm	r30, Z
    c604:	ed 87       	std	Y+13, r30	; 0x0d
    c606:	fc 01       	movw	r30, r24
    c608:	e0 57       	subi	r30, 0x70	; 112
    c60a:	ff 4d       	sbci	r31, 0xDF	; 223
    c60c:	e4 91       	lpm	r30, Z
    c60e:	f0 e0       	ldi	r31, 0x00	; 0
    c610:	ee 0f       	add	r30, r30
    c612:	ff 1f       	adc	r31, r31
    c614:	e0 55       	subi	r30, 0x50	; 80
    c616:	ff 4d       	sbci	r31, 0xDF	; 223
    c618:	85 91       	lpm	r24, Z+
    c61a:	94 91       	lpm	r25, Z
    c61c:	9f 87       	std	Y+15, r25	; 0x0f
    c61e:	8e 87       	std	Y+14, r24	; 0x0e
    c620:	df 91       	pop	r29
    c622:	cf 91       	pop	r28
    c624:	1f 91       	pop	r17
    c626:	08 95       	ret

0000c628 <SoftwareSerial::SoftwareSerial(signed char, signed char, bool)>:
_ZN14SoftwareSerialC2Eaab():
    c628:	1f 93       	push	r17
    c62a:	cf 93       	push	r28
    c62c:	df 93       	push	r29
    c62e:	ec 01       	movw	r28, r24
    c630:	16 2f       	mov	r17, r22
_ZN5PrintC4Ev():
    c632:	1b 82       	std	Y+3, r1	; 0x03
    c634:	1a 82       	std	Y+2, r1	; 0x02
_ZN6StreamC4Ev():
    c636:	88 ee       	ldi	r24, 0xE8	; 232
    c638:	93 e0       	ldi	r25, 0x03	; 3
    c63a:	a0 e0       	ldi	r26, 0x00	; 0
    c63c:	b0 e0       	ldi	r27, 0x00	; 0
    c63e:	8c 83       	std	Y+4, r24	; 0x04
    c640:	9d 83       	std	Y+5, r25	; 0x05
    c642:	ae 83       	std	Y+6, r26	; 0x06
    c644:	bf 83       	std	Y+7, r27	; 0x07
_ZN14SoftwareSerialC2Eaab():
    c646:	81 e9       	ldi	r24, 0x91	; 145
    c648:	92 e0       	ldi	r25, 0x02	; 2
    c64a:	99 83       	std	Y+1, r25	; 0x01
    c64c:	88 83       	st	Y, r24
    c64e:	1f 8a       	std	Y+23, r1	; 0x17
    c650:	1e 8a       	std	Y+22, r1	; 0x16
    c652:	19 8e       	std	Y+25, r1	; 0x19
    c654:	18 8e       	std	Y+24, r1	; 0x18
    c656:	1b 8e       	std	Y+27, r1	; 0x1b
    c658:	1a 8e       	std	Y+26, r1	; 0x1a
    c65a:	1d 8e       	std	Y+29, r1	; 0x1d
    c65c:	1c 8e       	std	Y+28, r1	; 0x1c
    c65e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    c660:	8e 7f       	andi	r24, 0xFE	; 254
    c662:	20 fb       	bst	r18, 0
    c664:	81 f9       	bld	r24, 1
    c666:	8e 8f       	std	Y+30, r24	; 0x1e
    c668:	64 2f       	mov	r22, r20
    c66a:	ce 01       	movw	r24, r28
    c66c:	0e 94 c0 62 	call	0xc580	; 0xc580 <SoftwareSerial::setTX(signed char)>
    c670:	61 2f       	mov	r22, r17
    c672:	ce 01       	movw	r24, r28
    c674:	df 91       	pop	r29
    c676:	cf 91       	pop	r28
    c678:	1f 91       	pop	r17
    c67a:	0c 94 ea 62 	jmp	0xc5d4	; 0xc5d4 <SoftwareSerial::setRX(signed char)>

0000c67e <SoftwareSerial::begin(long)>:
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:315
//
// Public methods
//

void SoftwareSerial::begin(long speed)
{ 
    c67e:	cf 93       	push	r28
    c680:	df 93       	push	r29
    c682:	ec 01       	movw	r28, r24
    c684:	9a 01       	movw	r18, r20
    c686:	ab 01       	movw	r20, r22
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:316
  _rx_delay_centering = _rx_delay_intrabit = _rx_delay_stopbit = _tx_delay = 0;
    c688:	1b 8e       	std	Y+27, r1	; 0x1b
    c68a:	1a 8e       	std	Y+26, r1	; 0x1a
    c68c:	19 8e       	std	Y+25, r1	; 0x19
    c68e:	18 8e       	std	Y+24, r1	; 0x18
    c690:	1f 8a       	std	Y+23, r1	; 0x17
    c692:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:319

  // Precalculate the various delays, in number of 4-cycle delays
  uint16_t bit_delay = (F_CPU / speed) / 4;
    c694:	60 e0       	ldi	r22, 0x00	; 0
    c696:	79 e0       	ldi	r23, 0x09	; 9
    c698:	8d e3       	ldi	r24, 0x3D	; 61
    c69a:	90 e0       	ldi	r25, 0x00	; 0
    c69c:	0e 94 06 75 	call	0xea0c	; 0xea0c <__divmodsi4>
    c6a0:	f9 01       	movw	r30, r18
_ZN14SoftwareSerial12subtract_capEjj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:305
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    return num - sub;
    c6a2:	c9 01       	movw	r24, r18
    c6a4:	03 97       	sbiw	r24, 0x03	; 3
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:304
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    c6a6:	24 30       	cpi	r18, 0x04	; 4
    c6a8:	31 05       	cpc	r19, r1
    c6aa:	10 f4       	brcc	.+4      	; 0xc6b0 <SoftwareSerial::begin(long)+0x32>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:307
    return num - sub;
  else
    return 1;
    c6ac:	81 e0       	ldi	r24, 0x01	; 1
    c6ae:	90 e0       	ldi	r25, 0x00	; 0
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:326
  // 12 (gcc 4.8.2) or 13 (gcc 4.3.2) cycles from start bit to first bit,
  // 15 (gcc 4.8.2) or 16 (gcc 4.3.2) cycles between bits,
  // 12 (gcc 4.8.2) or 14 (gcc 4.3.2) cycles from last bit to stop bit
  // These are all close enough to just use 15 cycles, since the inter-bit
  // timings are the most critical (deviations stack 8 times)
  _tx_delay = subtract_cap(bit_delay, 15 / 4);
    c6b0:	9d 8f       	std	Y+29, r25	; 0x1d
    c6b2:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:330

#if defined(PCINT_ONLY) || defined(INT_AND_PCINT)
  // Only setup rx when we have a valid PCINT for this pin
  if (digitalPinToPCICR(_receivePin)) {
    c6b4:	6c 85       	ldd	r22, Y+12	; 0x0c
    c6b6:	60 32       	cpi	r22, 0x20	; 32
    c6b8:	08 f0       	brcs	.+2      	; 0xc6bc <SoftwareSerial::begin(long)+0x3e>
    c6ba:	52 c0       	rjmp	.+164    	; 0xc760 <SoftwareSerial::begin(long)+0xe2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:345
    // are 17 more cycles until the pin value is read (excluding the
    // delay in the loop).
    // We want to have a total delay of 1.5 bit time. Inside the loop,
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);
    c6bc:	c9 01       	movw	r24, r18
    c6be:	96 95       	lsr	r25
    c6c0:	87 95       	ror	r24
_ZN14SoftwareSerial12subtract_capEjj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:304
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    c6c2:	84 31       	cpi	r24, 0x14	; 20
    c6c4:	91 05       	cpc	r25, r1
    c6c6:	08 f4       	brcc	.+2      	; 0xc6ca <SoftwareSerial::begin(long)+0x4c>
    c6c8:	50 c0       	rjmp	.+160    	; 0xc76a <SoftwareSerial::begin(long)+0xec>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:305
    return num - sub;
    c6ca:	43 97       	sbiw	r24, 0x13	; 19
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:345
    // are 17 more cycles until the pin value is read (excluding the
    // delay in the loop).
    // We want to have a total delay of 1.5 bit time. Inside the loop,
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);
    c6cc:	9f 8b       	std	Y+23, r25	; 0x17
    c6ce:	8e 8b       	std	Y+22, r24	; 0x16
_ZN14SoftwareSerial12subtract_capEjj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:305
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    return num - sub;
    c6d0:	c9 01       	movw	r24, r18
    c6d2:	05 97       	sbiw	r24, 0x05	; 5
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:304
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    c6d4:	36 97       	sbiw	r30, 0x06	; 6
    c6d6:	10 f4       	brcc	.+4      	; 0xc6dc <SoftwareSerial::begin(long)+0x5e>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:307
    return num - sub;
  else
    return 1;
    c6d8:	81 e0       	ldi	r24, 0x01	; 1
    c6da:	90 e0       	ldi	r25, 0x00	; 0
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:348
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);

    // There are 23 cycles in each loop iteration (excluding the delay)
    _rx_delay_intrabit = subtract_cap(bit_delay, 23 / 4);
    c6dc:	99 8f       	std	Y+25, r25	; 0x19
    c6de:	88 8f       	std	Y+24, r24	; 0x18
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:357
    // mask is enabled again (which _must_ happen during the stopbit).
    // This delay aims at 3/4 of a bit time, meaning the end of the
    // delay will be at 1/4th of the stopbit. This allows some extra
    // time for ISR cleanup, which makes 115200 baud at 16Mhz work more
    // reliably
    _rx_delay_stopbit = subtract_cap(bit_delay * 3 / 4, (37 + 11) / 4);
    c6e0:	c9 01       	movw	r24, r18
    c6e2:	88 0f       	add	r24, r24
    c6e4:	99 1f       	adc	r25, r25
    c6e6:	28 0f       	add	r18, r24
    c6e8:	39 1f       	adc	r19, r25
    c6ea:	36 95       	lsr	r19
    c6ec:	27 95       	ror	r18
    c6ee:	36 95       	lsr	r19
    c6f0:	27 95       	ror	r18
_ZN14SoftwareSerial12subtract_capEjj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:304
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    c6f2:	2d 30       	cpi	r18, 0x0D	; 13
    c6f4:	31 05       	cpc	r19, r1
    c6f6:	e0 f1       	brcs	.+120    	; 0xc770 <SoftwareSerial::begin(long)+0xf2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:305
    return num - sub;
    c6f8:	2c 50       	subi	r18, 0x0C	; 12
    c6fa:	31 09       	sbc	r19, r1
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:357
    // mask is enabled again (which _must_ happen during the stopbit).
    // This delay aims at 3/4 of a bit time, meaning the end of the
    // delay will be at 1/4th of the stopbit. This allows some extra
    // time for ISR cleanup, which makes 115200 baud at 16Mhz work more
    // reliably
    _rx_delay_stopbit = subtract_cap(bit_delay * 3 / 4, (37 + 11) / 4);
    c6fc:	3b 8f       	std	Y+27, r19	; 0x1b
    c6fe:	2a 8f       	std	Y+26, r18	; 0x1a
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371


    // Enable the PCINT for the entire port here, but never disable it
    // (others might also need it, so we disable the interrupt by using
    // the per-pin PCMSK register).
    *digitalPinToPCICR(_receivePin) |= _BV(digitalPinToPCICRbit(_receivePin));
    c700:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    c704:	82 e0       	ldi	r24, 0x02	; 2
    c706:	68 30       	cpi	r22, 0x08	; 8
    c708:	3c f0       	brlt	.+14     	; 0xc718 <SoftwareSerial::begin(long)+0x9a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371 (discriminator 5)
    c70a:	88 e0       	ldi	r24, 0x08	; 8
    c70c:	60 31       	cpi	r22, 0x10	; 16
    c70e:	24 f0       	brlt	.+8      	; 0xc718 <SoftwareSerial::begin(long)+0x9a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371 (discriminator 7)
    c710:	81 e0       	ldi	r24, 0x01	; 1
    c712:	68 31       	cpi	r22, 0x18	; 24
    c714:	0c f4       	brge	.+2      	; 0xc718 <SoftwareSerial::begin(long)+0x9a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371
    c716:	84 e0       	ldi	r24, 0x04	; 4
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371 (discriminator 16)
    c718:	89 2b       	or	r24, r25
    c71a:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:374 (discriminator 16)
    // Precalculate the pcint mask register and value, so setRxIntMask
    // can be used inside the ISR without costing too much time.
    _pcint_maskreg = digitalPinToPCMSK(_receivePin);
    c71e:	8c 85       	ldd	r24, Y+12	; 0x0c
    c720:	2c e6       	ldi	r18, 0x6C	; 108
    c722:	30 e0       	ldi	r19, 0x00	; 0
    c724:	88 30       	cpi	r24, 0x08	; 8
    c726:	54 f0       	brlt	.+20     	; 0xc73c <SoftwareSerial::begin(long)+0xbe>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:374 (discriminator 1)
    c728:	23 e7       	ldi	r18, 0x73	; 115
    c72a:	30 e0       	ldi	r19, 0x00	; 0
    c72c:	80 31       	cpi	r24, 0x10	; 16
    c72e:	34 f0       	brlt	.+12     	; 0xc73c <SoftwareSerial::begin(long)+0xbe>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:374 (discriminator 3)
    c730:	2b e6       	ldi	r18, 0x6B	; 107
    c732:	30 e0       	ldi	r19, 0x00	; 0
    c734:	88 31       	cpi	r24, 0x18	; 24
    c736:	14 f4       	brge	.+4      	; 0xc73c <SoftwareSerial::begin(long)+0xbe>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:374
    c738:	2d e6       	ldi	r18, 0x6D	; 109
    c73a:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:374 (discriminator 12)
    c73c:	3c 8b       	std	Y+20, r19	; 0x14
    c73e:	2b 8b       	std	Y+19, r18	; 0x13
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:375 (discriminator 12)
    _pcint_maskvalue = _BV(digitalPinToPCMSKbit(_receivePin));
    c740:	87 78       	andi	r24, 0x87	; 135
    c742:	87 ff       	sbrs	r24, 7
    c744:	03 c0       	rjmp	.+6      	; 0xc74c <SoftwareSerial::begin(long)+0xce>
    c746:	81 50       	subi	r24, 0x01	; 1
    c748:	88 6f       	ori	r24, 0xF8	; 248
    c74a:	8f 5f       	subi	r24, 0xFF	; 255
    c74c:	91 e0       	ldi	r25, 0x01	; 1
    c74e:	01 c0       	rjmp	.+2      	; 0xc752 <SoftwareSerial::begin(long)+0xd4>
    c750:	99 0f       	add	r25, r25
    c752:	8a 95       	dec	r24
    c754:	ea f7       	brpl	.-6      	; 0xc750 <SoftwareSerial::begin(long)+0xd2>
    c756:	9d 8b       	std	Y+21, r25	; 0x15
_delay_loop_2():
c:\users\nyvir\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay_basic.h:110 (discriminator 12)
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    c758:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c75a:	9d 8d       	ldd	r25, Y+29	; 0x1d
    c75c:	01 97       	sbiw	r24, 0x01	; 1
    c75e:	f1 f7       	brne	.-4      	; 0xc75c <SoftwareSerial::begin(long)+0xde>
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:442
#if _DEBUG
  pinMode(_DEBUG_PIN1, OUTPUT);
  pinMode(_DEBUG_PIN2, OUTPUT);
#endif

  listen();
    c760:	ce 01       	movw	r24, r28
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:443
}
    c762:	df 91       	pop	r29
    c764:	cf 91       	pop	r28
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:442
#if _DEBUG
  pinMode(_DEBUG_PIN1, OUTPUT);
  pinMode(_DEBUG_PIN2, OUTPUT);
#endif

  listen();
    c766:	0c 94 14 62 	jmp	0xc428	; 0xc428 <SoftwareSerial::listen()>
_ZN14SoftwareSerial12subtract_capEjj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:307

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    return num - sub;
  else
    return 1;
    c76a:	81 e0       	ldi	r24, 0x01	; 1
    c76c:	90 e0       	ldi	r25, 0x00	; 0
    c76e:	ae cf       	rjmp	.-164    	; 0xc6cc <SoftwareSerial::begin(long)+0x4e>
    c770:	21 e0       	ldi	r18, 0x01	; 1
    c772:	30 e0       	ldi	r19, 0x00	; 0
    c774:	c3 cf       	rjmp	.-122    	; 0xc6fc <SoftwareSerial::begin(long)+0x7e>

0000c776 <TinyGPSPlus::TinyGPSPlus()>:
_ZN11TinyGPSPlusC2Ev():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:434

uint8_t TinyGPSTime::centisecond()
{
   updated = false;
   return time % 100;
}
    c776:	fc 01       	movw	r30, r24
_ZN15TinyGPSLocationC4Ev():
    c778:	10 82       	st	Z, r1
    c77a:	11 82       	std	Z+1, r1	; 0x01
_ZN10RawDegreesC4Ev():
    c77c:	13 82       	std	Z+3, r1	; 0x03
    c77e:	12 82       	std	Z+2, r1	; 0x02
    c780:	14 82       	std	Z+4, r1	; 0x04
    c782:	15 82       	std	Z+5, r1	; 0x05
    c784:	16 82       	std	Z+6, r1	; 0x06
    c786:	17 82       	std	Z+7, r1	; 0x07
    c788:	10 86       	std	Z+8, r1	; 0x08
    c78a:	12 86       	std	Z+10, r1	; 0x0a
    c78c:	11 86       	std	Z+9, r1	; 0x09
    c78e:	13 86       	std	Z+11, r1	; 0x0b
    c790:	14 86       	std	Z+12, r1	; 0x0c
    c792:	15 86       	std	Z+13, r1	; 0x0d
    c794:	16 86       	std	Z+14, r1	; 0x0e
    c796:	17 86       	std	Z+15, r1	; 0x0f
    c798:	11 8a       	std	Z+17, r1	; 0x11
    c79a:	10 8a       	std	Z+16, r1	; 0x10
    c79c:	12 8a       	std	Z+18, r1	; 0x12
    c79e:	13 8a       	std	Z+19, r1	; 0x13
    c7a0:	14 8a       	std	Z+20, r1	; 0x14
    c7a2:	15 8a       	std	Z+21, r1	; 0x15
    c7a4:	16 8a       	std	Z+22, r1	; 0x16
    c7a6:	10 8e       	std	Z+24, r1	; 0x18
    c7a8:	17 8a       	std	Z+23, r1	; 0x17
    c7aa:	11 8e       	std	Z+25, r1	; 0x19
    c7ac:	12 8e       	std	Z+26, r1	; 0x1a
    c7ae:	13 8e       	std	Z+27, r1	; 0x1b
    c7b0:	14 8e       	std	Z+28, r1	; 0x1c
    c7b2:	15 8e       	std	Z+29, r1	; 0x1d
_ZN11TinyGPSDateC4Ev():
    c7b4:	12 a2       	std	Z+34, r1	; 0x22
    c7b6:	13 a2       	std	Z+35, r1	; 0x23
    c7b8:	14 a2       	std	Z+36, r1	; 0x24
    c7ba:	15 a2       	std	Z+37, r1	; 0x25
    c7bc:	16 a2       	std	Z+38, r1	; 0x26
    c7be:	17 a2       	std	Z+39, r1	; 0x27
_ZN11TinyGPSTimeC4Ev():
    c7c0:	10 aa       	std	Z+48, r1	; 0x30
    c7c2:	11 aa       	std	Z+49, r1	; 0x31
    c7c4:	12 aa       	std	Z+50, r1	; 0x32
    c7c6:	13 aa       	std	Z+51, r1	; 0x33
    c7c8:	14 aa       	std	Z+52, r1	; 0x34
    c7ca:	15 aa       	std	Z+53, r1	; 0x35
_ZN14TinyGPSDecimalC4Ev():
    c7cc:	16 ae       	std	Z+62, r1	; 0x3e
    c7ce:	17 ae       	std	Z+63, r1	; 0x3f
    c7d0:	dc 01       	movw	r26, r24
    c7d2:	de 96       	adiw	r26, 0x3e	; 62
    c7d4:	16 96       	adiw	r26, 0x06	; 6
    c7d6:	1d 92       	st	X+, r1
    c7d8:	1d 92       	st	X+, r1
    c7da:	1d 92       	st	X+, r1
    c7dc:	1c 92       	st	X, r1
    c7de:	19 97       	sbiw	r26, 0x09	; 9
    c7e0:	1e 96       	adiw	r26, 0x0e	; 14
    c7e2:	1c 92       	st	X, r1
    c7e4:	11 96       	adiw	r26, 0x01	; 1
    c7e6:	1c 92       	st	X, r1
    c7e8:	11 97       	sbiw	r26, 0x01	; 1
    c7ea:	16 96       	adiw	r26, 0x06	; 6
    c7ec:	1d 92       	st	X+, r1
    c7ee:	1d 92       	st	X+, r1
    c7f0:	1d 92       	st	X+, r1
    c7f2:	1c 92       	st	X, r1
    c7f4:	19 97       	sbiw	r26, 0x09	; 9
    c7f6:	1e 96       	adiw	r26, 0x0e	; 14
    c7f8:	1c 92       	st	X, r1
    c7fa:	11 96       	adiw	r26, 0x01	; 1
    c7fc:	1c 92       	st	X, r1
    c7fe:	11 97       	sbiw	r26, 0x01	; 1
    c800:	16 96       	adiw	r26, 0x06	; 6
    c802:	1d 92       	st	X+, r1
    c804:	1d 92       	st	X+, r1
    c806:	1d 92       	st	X+, r1
    c808:	1c 92       	st	X, r1
    c80a:	19 97       	sbiw	r26, 0x09	; 9
_ZN14TinyGPSIntegerC4Ev():
    c80c:	1e 96       	adiw	r26, 0x0e	; 14
    c80e:	1c 92       	st	X, r1
    c810:	11 96       	adiw	r26, 0x01	; 1
    c812:	1c 92       	st	X, r1
    c814:	11 97       	sbiw	r26, 0x01	; 1
    c816:	16 96       	adiw	r26, 0x06	; 6
    c818:	1d 92       	st	X+, r1
    c81a:	1d 92       	st	X+, r1
    c81c:	1d 92       	st	X+, r1
    c81e:	1c 92       	st	X, r1
    c820:	19 97       	sbiw	r26, 0x09	; 9
_ZN14TinyGPSDecimalC4Ev():
    c822:	1e 96       	adiw	r26, 0x0e	; 14
    c824:	1c 92       	st	X, r1
    c826:	11 96       	adiw	r26, 0x01	; 1
    c828:	1c 92       	st	X, r1
    c82a:	11 97       	sbiw	r26, 0x01	; 1
    c82c:	16 96       	adiw	r26, 0x06	; 6
    c82e:	1d 92       	st	X+, r1
    c830:	1d 92       	st	X+, r1
    c832:	1d 92       	st	X+, r1
    c834:	1c 92       	st	X, r1
    c836:	19 97       	sbiw	r26, 0x09	; 9
_ZN11TinyGPSPlusC2Ev():
    c838:	1e 96       	adiw	r26, 0x0e	; 14
    c83a:	1c 92       	st	X, r1
    c83c:	11 96       	adiw	r26, 0x01	; 1
    c83e:	1c 92       	st	X, r1
    c840:	50 96       	adiw	r26, 0x10	; 16
    c842:	82 e0       	ldi	r24, 0x02	; 2
    c844:	8c 93       	st	X, r24
    c846:	11 96       	adiw	r26, 0x01	; 1
    c848:	1c 92       	st	X, r1
    c84a:	11 96       	adiw	r26, 0x01	; 1
    c84c:	1c 92       	st	X, r1
    c84e:	11 96       	adiw	r26, 0x01	; 1
    c850:	1c 92       	st	X, r1
    c852:	11 96       	adiw	r26, 0x01	; 1
    c854:	11 96       	adiw	r26, 0x01	; 1
    c856:	1c 92       	st	X, r1
    c858:	1e 92       	st	-X, r1
    c85a:	12 96       	adiw	r26, 0x02	; 2
    c85c:	11 96       	adiw	r26, 0x01	; 1
    c85e:	1c 92       	st	X, r1
    c860:	1e 92       	st	-X, r1
    c862:	12 96       	adiw	r26, 0x02	; 2
    c864:	1d 92       	st	X+, r1
    c866:	1d 92       	st	X+, r1
    c868:	1d 92       	st	X+, r1
    c86a:	1c 92       	st	X, r1
    c86c:	13 97       	sbiw	r26, 0x03	; 3
    c86e:	14 96       	adiw	r26, 0x04	; 4
    c870:	1d 92       	st	X+, r1
    c872:	1d 92       	st	X+, r1
    c874:	1d 92       	st	X+, r1
    c876:	1c 92       	st	X, r1
    c878:	13 97       	sbiw	r26, 0x03	; 3
    c87a:	14 96       	adiw	r26, 0x04	; 4
    c87c:	1d 92       	st	X+, r1
    c87e:	1d 92       	st	X+, r1
    c880:	1d 92       	st	X+, r1
    c882:	1c 92       	st	X, r1
    c884:	13 97       	sbiw	r26, 0x03	; 3
    c886:	14 96       	adiw	r26, 0x04	; 4
    c888:	1d 92       	st	X+, r1
    c88a:	1d 92       	st	X+, r1
    c88c:	1d 92       	st	X+, r1
    c88e:	1c 92       	st	X, r1
    c890:	13 97       	sbiw	r26, 0x03	; 3
    c892:	ea 57       	subi	r30, 0x7A	; 122
    c894:	ff 4f       	sbci	r31, 0xFF	; 255
    c896:	10 82       	st	Z, r1
    c898:	08 95       	ret

0000c89a <TinyGPSPlus::fromHex(char)>:
_ZN11TinyGPSPlus7fromHexEc():
    c89a:	86 2f       	mov	r24, r22
    c89c:	06 2e       	mov	r0, r22
    c89e:	00 0c       	add	r0, r0
    c8a0:	99 0b       	sbc	r25, r25
    c8a2:	2f eb       	ldi	r18, 0xBF	; 191
    c8a4:	26 0f       	add	r18, r22
    c8a6:	26 30       	cpi	r18, 0x06	; 6
    c8a8:	10 f4       	brcc	.+4      	; 0xc8ae <TinyGPSPlus::fromHex(char)+0x14>
    c8aa:	c7 97       	sbiw	r24, 0x37	; 55
    c8ac:	08 95       	ret
    c8ae:	61 56       	subi	r22, 0x61	; 97
    c8b0:	66 30       	cpi	r22, 0x06	; 6
    c8b2:	18 f4       	brcc	.+6      	; 0xc8ba <TinyGPSPlus::fromHex(char)+0x20>
    c8b4:	87 55       	subi	r24, 0x57	; 87
    c8b6:	91 09       	sbc	r25, r1
    c8b8:	08 95       	ret
    c8ba:	c0 97       	sbiw	r24, 0x30	; 48
    c8bc:	08 95       	ret

0000c8be <TinyGPSPlus::parseDecimal(char const*)>:
_ZN11TinyGPSPlus12parseDecimalEPKc():
    c8be:	1f 93       	push	r17
    c8c0:	cf 93       	push	r28
    c8c2:	df 93       	push	r29
    c8c4:	ec 01       	movw	r28, r24
    c8c6:	18 81       	ld	r17, Y
    c8c8:	1d 32       	cpi	r17, 0x2D	; 45
    c8ca:	09 f4       	brne	.+2      	; 0xc8ce <TinyGPSPlus::parseDecimal(char const*)+0x10>
    c8cc:	21 96       	adiw	r28, 0x01	; 1
    c8ce:	ce 01       	movw	r24, r28
    c8d0:	0e 94 ac 76 	call	0xed58	; 0xed58 <atol>
    c8d4:	9b 01       	movw	r18, r22
    c8d6:	ac 01       	movw	r20, r24
    c8d8:	a4 e6       	ldi	r26, 0x64	; 100
    c8da:	b0 e0       	ldi	r27, 0x00	; 0
    c8dc:	0e 94 3d 75 	call	0xea7a	; 0xea7a <__muluhisi3>
    c8e0:	ab 01       	movw	r20, r22
    c8e2:	bc 01       	movw	r22, r24
    c8e4:	fe 01       	movw	r30, r28
    c8e6:	29 91       	ld	r18, Y+
    c8e8:	82 2f       	mov	r24, r18
    c8ea:	02 2e       	mov	r0, r18
    c8ec:	00 0c       	add	r0, r0
    c8ee:	99 0b       	sbc	r25, r25
    c8f0:	c0 97       	sbiw	r24, 0x30	; 48
    c8f2:	0a 97       	sbiw	r24, 0x0a	; 10
    c8f4:	b8 f3       	brcs	.-18     	; 0xc8e4 <TinyGPSPlus::parseDecimal(char const*)+0x26>
    c8f6:	2e 32       	cpi	r18, 0x2E	; 46
    c8f8:	31 f5       	brne	.+76     	; 0xc946 <TinyGPSPlus::parseDecimal(char const*)+0x88>
    c8fa:	81 81       	ldd	r24, Z+1	; 0x01
    c8fc:	08 2e       	mov	r0, r24
    c8fe:	00 0c       	add	r0, r0
    c900:	99 0b       	sbc	r25, r25
    c902:	c0 97       	sbiw	r24, 0x30	; 48
    c904:	8a 30       	cpi	r24, 0x0A	; 10
    c906:	91 05       	cpc	r25, r1
    c908:	f0 f4       	brcc	.+60     	; 0xc946 <TinyGPSPlus::parseDecimal(char const*)+0x88>
    c90a:	aa e0       	ldi	r26, 0x0A	; 10
    c90c:	a8 9f       	mul	r26, r24
    c90e:	90 01       	movw	r18, r0
    c910:	a9 9f       	mul	r26, r25
    c912:	30 0d       	add	r19, r0
    c914:	11 24       	eor	r1, r1
    c916:	c9 01       	movw	r24, r18
    c918:	33 0f       	add	r19, r19
    c91a:	aa 0b       	sbc	r26, r26
    c91c:	bb 0b       	sbc	r27, r27
    c91e:	48 0f       	add	r20, r24
    c920:	59 1f       	adc	r21, r25
    c922:	6a 1f       	adc	r22, r26
    c924:	7b 1f       	adc	r23, r27
    c926:	82 81       	ldd	r24, Z+2	; 0x02
    c928:	08 2e       	mov	r0, r24
    c92a:	00 0c       	add	r0, r0
    c92c:	99 0b       	sbc	r25, r25
    c92e:	c0 97       	sbiw	r24, 0x30	; 48
    c930:	8a 30       	cpi	r24, 0x0A	; 10
    c932:	91 05       	cpc	r25, r1
    c934:	40 f4       	brcc	.+16     	; 0xc946 <TinyGPSPlus::parseDecimal(char const*)+0x88>
    c936:	09 2e       	mov	r0, r25
    c938:	00 0c       	add	r0, r0
    c93a:	aa 0b       	sbc	r26, r26
    c93c:	bb 0b       	sbc	r27, r27
    c93e:	48 0f       	add	r20, r24
    c940:	59 1f       	adc	r21, r25
    c942:	6a 1f       	adc	r22, r26
    c944:	7b 1f       	adc	r23, r27
    c946:	1d 32       	cpi	r17, 0x2D	; 45
    c948:	39 f4       	brne	.+14     	; 0xc958 <TinyGPSPlus::parseDecimal(char const*)+0x9a>
    c94a:	70 95       	com	r23
    c94c:	60 95       	com	r22
    c94e:	50 95       	com	r21
    c950:	41 95       	neg	r20
    c952:	5f 4f       	sbci	r21, 0xFF	; 255
    c954:	6f 4f       	sbci	r22, 0xFF	; 255
    c956:	7f 4f       	sbci	r23, 0xFF	; 255
    c958:	cb 01       	movw	r24, r22
    c95a:	ba 01       	movw	r22, r20
    c95c:	df 91       	pop	r29
    c95e:	cf 91       	pop	r28
    c960:	1f 91       	pop	r17
    c962:	08 95       	ret

0000c964 <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)>:
_ZN11TinyGPSPlus12parseDegreesEPKcR10RawDegrees():
    c964:	2f 92       	push	r2
    c966:	3f 92       	push	r3
    c968:	4f 92       	push	r4
    c96a:	5f 92       	push	r5
    c96c:	6f 92       	push	r6
    c96e:	7f 92       	push	r7
    c970:	8f 92       	push	r8
    c972:	9f 92       	push	r9
    c974:	af 92       	push	r10
    c976:	bf 92       	push	r11
    c978:	cf 92       	push	r12
    c97a:	df 92       	push	r13
    c97c:	ef 92       	push	r14
    c97e:	ff 92       	push	r15
    c980:	0f 93       	push	r16
    c982:	1f 93       	push	r17
    c984:	cf 93       	push	r28
    c986:	df 93       	push	r29
    c988:	d8 2f       	mov	r29, r24
    c98a:	c9 2f       	mov	r28, r25
    c98c:	8b 01       	movw	r16, r22
    c98e:	0e 94 ac 76 	call	0xed58	; 0xed58 <atol>
    c992:	24 e6       	ldi	r18, 0x64	; 100
    c994:	30 e0       	ldi	r19, 0x00	; 0
    c996:	40 e0       	ldi	r20, 0x00	; 0
    c998:	50 e0       	ldi	r21, 0x00	; 0
    c99a:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    c99e:	49 01       	movw	r8, r18
    c9a0:	9b 01       	movw	r18, r22
    c9a2:	ac 01       	movw	r20, r24
    c9a4:	60 e8       	ldi	r22, 0x80	; 128
    c9a6:	76 e9       	ldi	r23, 0x96	; 150
    c9a8:	88 e9       	ldi	r24, 0x98	; 152
    c9aa:	90 e0       	ldi	r25, 0x00	; 0
    c9ac:	0e 94 b4 74 	call	0xe968	; 0xe968 <__mulsi3>
    c9b0:	6b 01       	movw	r12, r22
    c9b2:	7c 01       	movw	r14, r24
    c9b4:	f8 01       	movw	r30, r16
    c9b6:	91 82       	std	Z+1, r9	; 0x01
    c9b8:	80 82       	st	Z, r8
    c9ba:	ed 2f       	mov	r30, r29
    c9bc:	fc 2f       	mov	r31, r28
    c9be:	21 91       	ld	r18, Z+
    c9c0:	82 2f       	mov	r24, r18
    c9c2:	02 2e       	mov	r0, r18
    c9c4:	00 0c       	add	r0, r0
    c9c6:	99 0b       	sbc	r25, r25
    c9c8:	c0 97       	sbiw	r24, 0x30	; 48
    c9ca:	0a 97       	sbiw	r24, 0x0a	; 10
    c9cc:	c0 f3       	brcs	.-16     	; 0xc9be <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)+0x5a>
    c9ce:	2e 32       	cpi	r18, 0x2E	; 46
    c9d0:	39 f5       	brne	.+78     	; 0xca20 <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)+0xbc>
    c9d2:	1f 01       	movw	r2, r30
    c9d4:	80 e8       	ldi	r24, 0x80	; 128
    c9d6:	88 2e       	mov	r8, r24
    c9d8:	86 e9       	ldi	r24, 0x96	; 150
    c9da:	98 2e       	mov	r9, r24
    c9dc:	88 e9       	ldi	r24, 0x98	; 152
    c9de:	a8 2e       	mov	r10, r24
    c9e0:	b1 2c       	mov	r11, r1
    c9e2:	9a e0       	ldi	r25, 0x0A	; 10
    c9e4:	49 2e       	mov	r4, r25
    c9e6:	51 2c       	mov	r5, r1
    c9e8:	61 2c       	mov	r6, r1
    c9ea:	71 2c       	mov	r7, r1
    c9ec:	f1 01       	movw	r30, r2
    c9ee:	c1 91       	ld	r28, Z+
    c9f0:	1f 01       	movw	r2, r30
    c9f2:	0c 2e       	mov	r0, r28
    c9f4:	00 0c       	add	r0, r0
    c9f6:	dd 0b       	sbc	r29, r29
    c9f8:	e0 97       	sbiw	r28, 0x30	; 48
    c9fa:	ca 30       	cpi	r28, 0x0A	; 10
    c9fc:	d1 05       	cpc	r29, r1
    c9fe:	80 f4       	brcc	.+32     	; 0xca20 <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)+0xbc>
    ca00:	c5 01       	movw	r24, r10
    ca02:	b4 01       	movw	r22, r8
    ca04:	a3 01       	movw	r20, r6
    ca06:	92 01       	movw	r18, r4
    ca08:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    ca0c:	49 01       	movw	r8, r18
    ca0e:	5a 01       	movw	r10, r20
    ca10:	de 01       	movw	r26, r28
    ca12:	0e 94 48 75 	call	0xea90	; 0xea90 <__mulshisi3>
    ca16:	c6 0e       	add	r12, r22
    ca18:	d7 1e       	adc	r13, r23
    ca1a:	e8 1e       	adc	r14, r24
    ca1c:	f9 1e       	adc	r15, r25
    ca1e:	e6 cf       	rjmp	.-52     	; 0xc9ec <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)+0x88>
    ca20:	a5 e0       	ldi	r26, 0x05	; 5
    ca22:	b0 e0       	ldi	r27, 0x00	; 0
    ca24:	a7 01       	movw	r20, r14
    ca26:	96 01       	movw	r18, r12
    ca28:	0e 94 3d 75 	call	0xea7a	; 0xea7a <__muluhisi3>
    ca2c:	6f 5f       	subi	r22, 0xFF	; 255
    ca2e:	7f 4f       	sbci	r23, 0xFF	; 255
    ca30:	8f 4f       	sbci	r24, 0xFF	; 255
    ca32:	9f 4f       	sbci	r25, 0xFF	; 255
    ca34:	23 e0       	ldi	r18, 0x03	; 3
    ca36:	30 e0       	ldi	r19, 0x00	; 0
    ca38:	40 e0       	ldi	r20, 0x00	; 0
    ca3a:	50 e0       	ldi	r21, 0x00	; 0
    ca3c:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    ca40:	f8 01       	movw	r30, r16
    ca42:	22 83       	std	Z+2, r18	; 0x02
    ca44:	33 83       	std	Z+3, r19	; 0x03
    ca46:	44 83       	std	Z+4, r20	; 0x04
    ca48:	55 83       	std	Z+5, r21	; 0x05
    ca4a:	16 82       	std	Z+6, r1	; 0x06
    ca4c:	df 91       	pop	r29
    ca4e:	cf 91       	pop	r28
    ca50:	1f 91       	pop	r17
    ca52:	0f 91       	pop	r16
    ca54:	ff 90       	pop	r15
    ca56:	ef 90       	pop	r14
    ca58:	df 90       	pop	r13
    ca5a:	cf 90       	pop	r12
    ca5c:	bf 90       	pop	r11
    ca5e:	af 90       	pop	r10
    ca60:	9f 90       	pop	r9
    ca62:	8f 90       	pop	r8
    ca64:	7f 90       	pop	r7
    ca66:	6f 90       	pop	r6
    ca68:	5f 90       	pop	r5
    ca6a:	4f 90       	pop	r4
    ca6c:	3f 90       	pop	r3
    ca6e:	2f 90       	pop	r2
    ca70:	08 95       	ret

0000ca72 <TinyGPSPlus::distanceBetween(double, double, double, double)>:
_ZN11TinyGPSPlus15distanceBetweenEdddd():
    ca72:	4f 92       	push	r4
    ca74:	5f 92       	push	r5
    ca76:	6f 92       	push	r6
    ca78:	7f 92       	push	r7
    ca7a:	8f 92       	push	r8
    ca7c:	9f 92       	push	r9
    ca7e:	af 92       	push	r10
    ca80:	bf 92       	push	r11
    ca82:	cf 92       	push	r12
    ca84:	df 92       	push	r13
    ca86:	ef 92       	push	r14
    ca88:	ff 92       	push	r15
    ca8a:	0f 93       	push	r16
    ca8c:	1f 93       	push	r17
    ca8e:	cf 93       	push	r28
    ca90:	df 93       	push	r29
    ca92:	cd b7       	in	r28, 0x3d	; 61
    ca94:	de b7       	in	r29, 0x3e	; 62
    ca96:	60 97       	sbiw	r28, 0x10	; 16
    ca98:	0f b6       	in	r0, 0x3f	; 63
    ca9a:	f8 94       	cli
    ca9c:	de bf       	out	0x3e, r29	; 62
    ca9e:	0f be       	out	0x3f, r0	; 63
    caa0:	cd bf       	out	0x3d, r28	; 61
    caa2:	69 83       	std	Y+1, r22	; 0x01
    caa4:	7a 83       	std	Y+2, r23	; 0x02
    caa6:	8b 83       	std	Y+3, r24	; 0x03
    caa8:	9c 83       	std	Y+4, r25	; 0x04
    caaa:	ca 01       	movw	r24, r20
    caac:	b9 01       	movw	r22, r18
    caae:	27 01       	movw	r4, r14
    cab0:	a6 01       	movw	r20, r12
    cab2:	95 01       	movw	r18, r10
    cab4:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    cab8:	25 e3       	ldi	r18, 0x35	; 53
    caba:	3a ef       	ldi	r19, 0xFA	; 250
    cabc:	4e e8       	ldi	r20, 0x8E	; 142
    cabe:	5c e3       	ldi	r21, 0x3C	; 60
    cac0:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cac4:	6b 01       	movw	r12, r22
    cac6:	7c 01       	movw	r14, r24
    cac8:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    cacc:	4b 01       	movw	r8, r22
    cace:	5c 01       	movw	r10, r24
    cad0:	c7 01       	movw	r24, r14
    cad2:	b6 01       	movw	r22, r12
    cad4:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    cad8:	6d 83       	std	Y+5, r22	; 0x05
    cada:	7e 83       	std	Y+6, r23	; 0x06
    cadc:	8f 83       	std	Y+7, r24	; 0x07
    cade:	98 87       	std	Y+8, r25	; 0x08
    cae0:	25 e3       	ldi	r18, 0x35	; 53
    cae2:	3a ef       	ldi	r19, 0xFA	; 250
    cae4:	4e e8       	ldi	r20, 0x8E	; 142
    cae6:	5c e3       	ldi	r21, 0x3C	; 60
    cae8:	69 81       	ldd	r22, Y+1	; 0x01
    caea:	7a 81       	ldd	r23, Y+2	; 0x02
    caec:	8b 81       	ldd	r24, Y+3	; 0x03
    caee:	9c 81       	ldd	r25, Y+4	; 0x04
    caf0:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    caf4:	6b 01       	movw	r12, r22
    caf6:	7c 01       	movw	r14, r24
    caf8:	25 e3       	ldi	r18, 0x35	; 53
    cafa:	3a ef       	ldi	r19, 0xFA	; 250
    cafc:	4e e8       	ldi	r20, 0x8E	; 142
    cafe:	5c e3       	ldi	r21, 0x3C	; 60
    cb00:	c8 01       	movw	r24, r16
    cb02:	b2 01       	movw	r22, r4
    cb04:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cb08:	2b 01       	movw	r4, r22
    cb0a:	3c 01       	movw	r6, r24
    cb0c:	c7 01       	movw	r24, r14
    cb0e:	b6 01       	movw	r22, r12
    cb10:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    cb14:	69 83       	std	Y+1, r22	; 0x01
    cb16:	7a 83       	std	Y+2, r23	; 0x02
    cb18:	8b 83       	std	Y+3, r24	; 0x03
    cb1a:	9c 83       	std	Y+4, r25	; 0x04
    cb1c:	c7 01       	movw	r24, r14
    cb1e:	b6 01       	movw	r22, r12
    cb20:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    cb24:	69 87       	std	Y+9, r22	; 0x09
    cb26:	7a 87       	std	Y+10, r23	; 0x0a
    cb28:	8b 87       	std	Y+11, r24	; 0x0b
    cb2a:	9c 87       	std	Y+12, r25	; 0x0c
    cb2c:	c3 01       	movw	r24, r6
    cb2e:	b2 01       	movw	r22, r4
    cb30:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    cb34:	6d 87       	std	Y+13, r22	; 0x0d
    cb36:	7e 87       	std	Y+14, r23	; 0x0e
    cb38:	8f 87       	std	Y+15, r24	; 0x0f
    cb3a:	98 8b       	std	Y+16, r25	; 0x10
    cb3c:	c3 01       	movw	r24, r6
    cb3e:	b2 01       	movw	r22, r4
    cb40:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    cb44:	6b 01       	movw	r12, r22
    cb46:	7c 01       	movw	r14, r24
    cb48:	2d 85       	ldd	r18, Y+13	; 0x0d
    cb4a:	3e 85       	ldd	r19, Y+14	; 0x0e
    cb4c:	4f 85       	ldd	r20, Y+15	; 0x0f
    cb4e:	58 89       	ldd	r21, Y+16	; 0x10
    cb50:	69 85       	ldd	r22, Y+9	; 0x09
    cb52:	7a 85       	ldd	r23, Y+10	; 0x0a
    cb54:	8b 85       	ldd	r24, Y+11	; 0x0b
    cb56:	9c 85       	ldd	r25, Y+12	; 0x0c
    cb58:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cb5c:	2b 01       	movw	r4, r22
    cb5e:	3c 01       	movw	r6, r24
    cb60:	a7 01       	movw	r20, r14
    cb62:	96 01       	movw	r18, r12
    cb64:	69 81       	ldd	r22, Y+1	; 0x01
    cb66:	7a 81       	ldd	r23, Y+2	; 0x02
    cb68:	8b 81       	ldd	r24, Y+3	; 0x03
    cb6a:	9c 81       	ldd	r25, Y+4	; 0x04
    cb6c:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cb70:	2d 81       	ldd	r18, Y+5	; 0x05
    cb72:	3e 81       	ldd	r19, Y+6	; 0x06
    cb74:	4f 81       	ldd	r20, Y+7	; 0x07
    cb76:	58 85       	ldd	r21, Y+8	; 0x08
    cb78:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cb7c:	9b 01       	movw	r18, r22
    cb7e:	ac 01       	movw	r20, r24
    cb80:	c3 01       	movw	r24, r6
    cb82:	b2 01       	movw	r22, r4
    cb84:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    cb88:	2b 01       	movw	r4, r22
    cb8a:	3c 01       	movw	r6, r24
    cb8c:	a7 01       	movw	r20, r14
    cb8e:	96 01       	movw	r18, r12
    cb90:	c5 01       	movw	r24, r10
    cb92:	b4 01       	movw	r22, r8
    cb94:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cb98:	4b 01       	movw	r8, r22
    cb9a:	5c 01       	movw	r10, r24
    cb9c:	a3 01       	movw	r20, r6
    cb9e:	92 01       	movw	r18, r4
    cba0:	c3 01       	movw	r24, r6
    cba2:	b2 01       	movw	r22, r4
    cba4:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cba8:	2b 01       	movw	r4, r22
    cbaa:	3c 01       	movw	r6, r24
    cbac:	a5 01       	movw	r20, r10
    cbae:	94 01       	movw	r18, r8
    cbb0:	c5 01       	movw	r24, r10
    cbb2:	b4 01       	movw	r22, r8
    cbb4:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cbb8:	9b 01       	movw	r18, r22
    cbba:	ac 01       	movw	r20, r24
    cbbc:	c3 01       	movw	r24, r6
    cbbe:	b2 01       	movw	r22, r4
    cbc0:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    cbc4:	0e 94 3f 74 	call	0xe87e	; 0xe87e <sqrt>
    cbc8:	4b 01       	movw	r8, r22
    cbca:	5c 01       	movw	r10, r24
    cbcc:	a7 01       	movw	r20, r14
    cbce:	96 01       	movw	r18, r12
    cbd0:	69 85       	ldd	r22, Y+9	; 0x09
    cbd2:	7a 85       	ldd	r23, Y+10	; 0x0a
    cbd4:	8b 85       	ldd	r24, Y+11	; 0x0b
    cbd6:	9c 85       	ldd	r25, Y+12	; 0x0c
    cbd8:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cbdc:	2d 81       	ldd	r18, Y+5	; 0x05
    cbde:	3e 81       	ldd	r19, Y+6	; 0x06
    cbe0:	4f 81       	ldd	r20, Y+7	; 0x07
    cbe2:	58 85       	ldd	r21, Y+8	; 0x08
    cbe4:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cbe8:	6b 01       	movw	r12, r22
    cbea:	7c 01       	movw	r14, r24
    cbec:	2d 85       	ldd	r18, Y+13	; 0x0d
    cbee:	3e 85       	ldd	r19, Y+14	; 0x0e
    cbf0:	4f 85       	ldd	r20, Y+15	; 0x0f
    cbf2:	58 89       	ldd	r21, Y+16	; 0x10
    cbf4:	69 81       	ldd	r22, Y+1	; 0x01
    cbf6:	7a 81       	ldd	r23, Y+2	; 0x02
    cbf8:	8b 81       	ldd	r24, Y+3	; 0x03
    cbfa:	9c 81       	ldd	r25, Y+4	; 0x04
    cbfc:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cc00:	9b 01       	movw	r18, r22
    cc02:	ac 01       	movw	r20, r24
    cc04:	c7 01       	movw	r24, r14
    cc06:	b6 01       	movw	r22, r12
    cc08:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    cc0c:	9b 01       	movw	r18, r22
    cc0e:	ac 01       	movw	r20, r24
    cc10:	c5 01       	movw	r24, r10
    cc12:	b4 01       	movw	r22, r8
    cc14:	0e 94 02 71 	call	0xe204	; 0xe204 <atan2>
    cc18:	26 e7       	ldi	r18, 0x76	; 118
    cc1a:	3b e7       	ldi	r19, 0x7B	; 123
    cc1c:	42 ec       	ldi	r20, 0xC2	; 194
    cc1e:	5a e4       	ldi	r21, 0x4A	; 74
    cc20:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cc24:	60 96       	adiw	r28, 0x10	; 16
    cc26:	0f b6       	in	r0, 0x3f	; 63
    cc28:	f8 94       	cli
    cc2a:	de bf       	out	0x3e, r29	; 62
    cc2c:	0f be       	out	0x3f, r0	; 63
    cc2e:	cd bf       	out	0x3d, r28	; 61
    cc30:	df 91       	pop	r29
    cc32:	cf 91       	pop	r28
    cc34:	1f 91       	pop	r17
    cc36:	0f 91       	pop	r16
    cc38:	ff 90       	pop	r15
    cc3a:	ef 90       	pop	r14
    cc3c:	df 90       	pop	r13
    cc3e:	cf 90       	pop	r12
    cc40:	bf 90       	pop	r11
    cc42:	af 90       	pop	r10
    cc44:	9f 90       	pop	r9
    cc46:	8f 90       	pop	r8
    cc48:	7f 90       	pop	r7
    cc4a:	6f 90       	pop	r6
    cc4c:	5f 90       	pop	r5
    cc4e:	4f 90       	pop	r4
    cc50:	08 95       	ret

0000cc52 <TinyGPSPlus::courseTo(double, double, double, double)>:
_ZN11TinyGPSPlus8courseToEdddd():
    cc52:	4f 92       	push	r4
    cc54:	5f 92       	push	r5
    cc56:	6f 92       	push	r6
    cc58:	7f 92       	push	r7
    cc5a:	8f 92       	push	r8
    cc5c:	9f 92       	push	r9
    cc5e:	af 92       	push	r10
    cc60:	bf 92       	push	r11
    cc62:	cf 92       	push	r12
    cc64:	df 92       	push	r13
    cc66:	ef 92       	push	r14
    cc68:	ff 92       	push	r15
    cc6a:	0f 93       	push	r16
    cc6c:	1f 93       	push	r17
    cc6e:	cf 93       	push	r28
    cc70:	df 93       	push	r29
    cc72:	cd b7       	in	r28, 0x3d	; 61
    cc74:	de b7       	in	r29, 0x3e	; 62
    cc76:	2c 97       	sbiw	r28, 0x0c	; 12
    cc78:	0f b6       	in	r0, 0x3f	; 63
    cc7a:	f8 94       	cli
    cc7c:	de bf       	out	0x3e, r29	; 62
    cc7e:	0f be       	out	0x3f, r0	; 63
    cc80:	cd bf       	out	0x3d, r28	; 61
    cc82:	69 83       	std	Y+1, r22	; 0x01
    cc84:	7a 83       	std	Y+2, r23	; 0x02
    cc86:	8b 83       	std	Y+3, r24	; 0x03
    cc88:	9c 83       	std	Y+4, r25	; 0x04
    cc8a:	ed 82       	std	Y+5, r14	; 0x05
    cc8c:	fe 82       	std	Y+6, r15	; 0x06
    cc8e:	0f 83       	std	Y+7, r16	; 0x07
    cc90:	18 87       	std	Y+8, r17	; 0x08
    cc92:	c6 01       	movw	r24, r12
    cc94:	b5 01       	movw	r22, r10
    cc96:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    cc9a:	25 e3       	ldi	r18, 0x35	; 53
    cc9c:	3a ef       	ldi	r19, 0xFA	; 250
    cc9e:	4e e8       	ldi	r20, 0x8E	; 142
    cca0:	5c e3       	ldi	r21, 0x3C	; 60
    cca2:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cca6:	2b 01       	movw	r4, r22
    cca8:	3c 01       	movw	r6, r24
    ccaa:	25 e3       	ldi	r18, 0x35	; 53
    ccac:	3a ef       	ldi	r19, 0xFA	; 250
    ccae:	4e e8       	ldi	r20, 0x8E	; 142
    ccb0:	5c e3       	ldi	r21, 0x3C	; 60
    ccb2:	69 81       	ldd	r22, Y+1	; 0x01
    ccb4:	7a 81       	ldd	r23, Y+2	; 0x02
    ccb6:	8b 81       	ldd	r24, Y+3	; 0x03
    ccb8:	9c 81       	ldd	r25, Y+4	; 0x04
    ccba:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    ccbe:	4b 01       	movw	r8, r22
    ccc0:	5c 01       	movw	r10, r24
    ccc2:	25 e3       	ldi	r18, 0x35	; 53
    ccc4:	3a ef       	ldi	r19, 0xFA	; 250
    ccc6:	4e e8       	ldi	r20, 0x8E	; 142
    ccc8:	5c e3       	ldi	r21, 0x3C	; 60
    ccca:	c8 01       	movw	r24, r16
    cccc:	b7 01       	movw	r22, r14
    ccce:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    ccd2:	6b 01       	movw	r12, r22
    ccd4:	7c 01       	movw	r14, r24
    ccd6:	c3 01       	movw	r24, r6
    ccd8:	b2 01       	movw	r22, r4
    ccda:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    ccde:	6d 83       	std	Y+5, r22	; 0x05
    cce0:	7e 83       	std	Y+6, r23	; 0x06
    cce2:	8f 83       	std	Y+7, r24	; 0x07
    cce4:	98 87       	std	Y+8, r25	; 0x08
    cce6:	c7 01       	movw	r24, r14
    cce8:	b6 01       	movw	r22, r12
    ccea:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    ccee:	69 83       	std	Y+1, r22	; 0x01
    ccf0:	7a 83       	std	Y+2, r23	; 0x02
    ccf2:	8b 83       	std	Y+3, r24	; 0x03
    ccf4:	9c 83       	std	Y+4, r25	; 0x04
    ccf6:	c5 01       	movw	r24, r10
    ccf8:	b4 01       	movw	r22, r8
    ccfa:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    ccfe:	69 87       	std	Y+9, r22	; 0x09
    cd00:	7a 87       	std	Y+10, r23	; 0x0a
    cd02:	8b 87       	std	Y+11, r24	; 0x0b
    cd04:	9c 87       	std	Y+12, r25	; 0x0c
    cd06:	c3 01       	movw	r24, r6
    cd08:	b2 01       	movw	r22, r4
    cd0a:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    cd0e:	2b 01       	movw	r4, r22
    cd10:	3c 01       	movw	r6, r24
    cd12:	c5 01       	movw	r24, r10
    cd14:	b4 01       	movw	r22, r8
    cd16:	0e 94 66 71 	call	0xe2cc	; 0xe2cc <cos>
    cd1a:	4b 01       	movw	r8, r22
    cd1c:	5c 01       	movw	r10, r24
    cd1e:	c7 01       	movw	r24, r14
    cd20:	b6 01       	movw	r22, r12
    cd22:	0e 94 31 74 	call	0xe862	; 0xe862 <sin>
    cd26:	9b 01       	movw	r18, r22
    cd28:	ac 01       	movw	r20, r24
    cd2a:	c5 01       	movw	r24, r10
    cd2c:	b4 01       	movw	r22, r8
    cd2e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cd32:	6b 01       	movw	r12, r22
    cd34:	7c 01       	movw	r14, r24
    cd36:	29 85       	ldd	r18, Y+9	; 0x09
    cd38:	3a 85       	ldd	r19, Y+10	; 0x0a
    cd3a:	4b 85       	ldd	r20, Y+11	; 0x0b
    cd3c:	5c 85       	ldd	r21, Y+12	; 0x0c
    cd3e:	69 81       	ldd	r22, Y+1	; 0x01
    cd40:	7a 81       	ldd	r23, Y+2	; 0x02
    cd42:	8b 81       	ldd	r24, Y+3	; 0x03
    cd44:	9c 81       	ldd	r25, Y+4	; 0x04
    cd46:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cd4a:	a3 01       	movw	r20, r6
    cd4c:	92 01       	movw	r18, r4
    cd4e:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cd52:	9b 01       	movw	r18, r22
    cd54:	ac 01       	movw	r20, r24
    cd56:	c7 01       	movw	r24, r14
    cd58:	b6 01       	movw	r22, r12
    cd5a:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    cd5e:	6b 01       	movw	r12, r22
    cd60:	7c 01       	movw	r14, r24
    cd62:	29 81       	ldd	r18, Y+1	; 0x01
    cd64:	3a 81       	ldd	r19, Y+2	; 0x02
    cd66:	4b 81       	ldd	r20, Y+3	; 0x03
    cd68:	5c 81       	ldd	r21, Y+4	; 0x04
    cd6a:	6d 81       	ldd	r22, Y+5	; 0x05
    cd6c:	7e 81       	ldd	r23, Y+6	; 0x06
    cd6e:	8f 81       	ldd	r24, Y+7	; 0x07
    cd70:	98 85       	ldd	r25, Y+8	; 0x08
    cd72:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cd76:	a7 01       	movw	r20, r14
    cd78:	96 01       	movw	r18, r12
    cd7a:	0e 94 02 71 	call	0xe204	; 0xe204 <atan2>
    cd7e:	6b 01       	movw	r12, r22
    cd80:	7c 01       	movw	r14, r24
    cd82:	20 e0       	ldi	r18, 0x00	; 0
    cd84:	30 e0       	ldi	r19, 0x00	; 0
    cd86:	a9 01       	movw	r20, r18
    cd88:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    cd8c:	87 ff       	sbrs	r24, 7
    cd8e:	0a c0       	rjmp	.+20     	; 0xcda4 <TinyGPSPlus::courseTo(double, double, double, double)+0x152>
    cd90:	2b ed       	ldi	r18, 0xDB	; 219
    cd92:	3f e0       	ldi	r19, 0x0F	; 15
    cd94:	49 ec       	ldi	r20, 0xC9	; 201
    cd96:	50 e4       	ldi	r21, 0x40	; 64
    cd98:	c7 01       	movw	r24, r14
    cd9a:	b6 01       	movw	r22, r12
    cd9c:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    cda0:	6b 01       	movw	r12, r22
    cda2:	7c 01       	movw	r14, r24
    cda4:	21 ee       	ldi	r18, 0xE1	; 225
    cda6:	3e e2       	ldi	r19, 0x2E	; 46
    cda8:	45 e6       	ldi	r20, 0x65	; 101
    cdaa:	52 e4       	ldi	r21, 0x42	; 66
    cdac:	c7 01       	movw	r24, r14
    cdae:	b6 01       	movw	r22, r12
    cdb0:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    cdb4:	2c 96       	adiw	r28, 0x0c	; 12
    cdb6:	0f b6       	in	r0, 0x3f	; 63
    cdb8:	f8 94       	cli
    cdba:	de bf       	out	0x3e, r29	; 62
    cdbc:	0f be       	out	0x3f, r0	; 63
    cdbe:	cd bf       	out	0x3d, r28	; 61
    cdc0:	df 91       	pop	r29
    cdc2:	cf 91       	pop	r28
    cdc4:	1f 91       	pop	r17
    cdc6:	0f 91       	pop	r16
    cdc8:	ff 90       	pop	r15
    cdca:	ef 90       	pop	r14
    cdcc:	df 90       	pop	r13
    cdce:	cf 90       	pop	r12
    cdd0:	bf 90       	pop	r11
    cdd2:	af 90       	pop	r10
    cdd4:	9f 90       	pop	r9
    cdd6:	8f 90       	pop	r8
    cdd8:	7f 90       	pop	r7
    cdda:	6f 90       	pop	r6
    cddc:	5f 90       	pop	r5
    cdde:	4f 90       	pop	r4
    cde0:	08 95       	ret

0000cde2 <TinyGPSPlus::cardinal(double)>:
_ZN11TinyGPSPlus8cardinalEd():
    cde2:	20 e0       	ldi	r18, 0x00	; 0
    cde4:	30 e0       	ldi	r19, 0x00	; 0
    cde6:	44 e3       	ldi	r20, 0x34	; 52
    cde8:	51 e4       	ldi	r21, 0x41	; 65
    cdea:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    cdee:	20 e0       	ldi	r18, 0x00	; 0
    cdf0:	30 e0       	ldi	r19, 0x00	; 0
    cdf2:	44 eb       	ldi	r20, 0xB4	; 180
    cdf4:	51 e4       	ldi	r21, 0x41	; 65
    cdf6:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    cdfa:	0e 94 dd 71 	call	0xe3ba	; 0xe3ba <__fixsfsi>
    cdfe:	cb 01       	movw	r24, r22
    ce00:	60 e1       	ldi	r22, 0x10	; 16
    ce02:	70 e0       	ldi	r23, 0x00	; 0
    ce04:	0e 94 d0 74 	call	0xe9a0	; 0xe9a0 <__divmodhi4>
    ce08:	fc 01       	movw	r30, r24
    ce0a:	ee 0f       	add	r30, r30
    ce0c:	ff 1f       	adc	r31, r31
    ce0e:	e7 52       	subi	r30, 0x27	; 39
    ce10:	fd 4f       	sbci	r31, 0xFD	; 253
    ce12:	80 81       	ld	r24, Z
    ce14:	91 81       	ldd	r25, Z+1	; 0x01
    ce16:	08 95       	ret

0000ce18 <TinyGPSLocation::commit()>:
_ZN15TinyGPSLocation6commitEv():
    ce18:	cf 93       	push	r28
    ce1a:	df 93       	push	r29
    ce1c:	ec 01       	movw	r28, r24
    ce1e:	87 e0       	ldi	r24, 0x07	; 7
    ce20:	fe 01       	movw	r30, r28
    ce22:	70 96       	adiw	r30, 0x10	; 16
    ce24:	de 01       	movw	r26, r28
    ce26:	12 96       	adiw	r26, 0x02	; 2
    ce28:	01 90       	ld	r0, Z+
    ce2a:	0d 92       	st	X+, r0
    ce2c:	8a 95       	dec	r24
    ce2e:	e1 f7       	brne	.-8      	; 0xce28 <TinyGPSLocation::commit()+0x10>
    ce30:	87 e0       	ldi	r24, 0x07	; 7
    ce32:	fe 01       	movw	r30, r28
    ce34:	77 96       	adiw	r30, 0x17	; 23
    ce36:	de 01       	movw	r26, r28
    ce38:	19 96       	adiw	r26, 0x09	; 9
    ce3a:	01 90       	ld	r0, Z+
    ce3c:	0d 92       	st	X+, r0
    ce3e:	8a 95       	dec	r24
    ce40:	e1 f7       	brne	.-8      	; 0xce3a <TinyGPSLocation::commit()+0x22>
    ce42:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    ce46:	6e 8f       	std	Y+30, r22	; 0x1e
    ce48:	7f 8f       	std	Y+31, r23	; 0x1f
    ce4a:	88 a3       	std	Y+32, r24	; 0x20
    ce4c:	99 a3       	std	Y+33, r25	; 0x21
    ce4e:	81 e0       	ldi	r24, 0x01	; 1
    ce50:	89 83       	std	Y+1, r24	; 0x01
    ce52:	88 83       	st	Y, r24
    ce54:	df 91       	pop	r29
    ce56:	cf 91       	pop	r28
    ce58:	08 95       	ret

0000ce5a <TinyGPSLocation::lat()>:
_ZN15TinyGPSLocation3latEv():
    ce5a:	cf 92       	push	r12
    ce5c:	df 92       	push	r13
    ce5e:	ef 92       	push	r14
    ce60:	ff 92       	push	r15
    ce62:	cf 93       	push	r28
    ce64:	df 93       	push	r29
    ce66:	ec 01       	movw	r28, r24
    ce68:	19 82       	std	Y+1, r1	; 0x01
    ce6a:	6c 81       	ldd	r22, Y+4	; 0x04
    ce6c:	7d 81       	ldd	r23, Y+5	; 0x05
    ce6e:	8e 81       	ldd	r24, Y+6	; 0x06
    ce70:	9f 81       	ldd	r25, Y+7	; 0x07
    ce72:	0e 94 13 72 	call	0xe426	; 0xe426 <__floatunsisf>
    ce76:	28 e2       	ldi	r18, 0x28	; 40
    ce78:	3b e6       	ldi	r19, 0x6B	; 107
    ce7a:	4e e6       	ldi	r20, 0x6E	; 110
    ce7c:	5e e4       	ldi	r21, 0x4E	; 78
    ce7e:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    ce82:	6b 01       	movw	r12, r22
    ce84:	7c 01       	movw	r14, r24
    ce86:	6a 81       	ldd	r22, Y+2	; 0x02
    ce88:	7b 81       	ldd	r23, Y+3	; 0x03
    ce8a:	90 e0       	ldi	r25, 0x00	; 0
    ce8c:	80 e0       	ldi	r24, 0x00	; 0
    ce8e:	0e 94 13 72 	call	0xe426	; 0xe426 <__floatunsisf>
    ce92:	9b 01       	movw	r18, r22
    ce94:	ac 01       	movw	r20, r24
    ce96:	c7 01       	movw	r24, r14
    ce98:	b6 01       	movw	r22, r12
    ce9a:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    ce9e:	28 85       	ldd	r18, Y+8	; 0x08
    cea0:	21 11       	cpse	r18, r1
    cea2:	90 58       	subi	r25, 0x80	; 128
    cea4:	df 91       	pop	r29
    cea6:	cf 91       	pop	r28
    cea8:	ff 90       	pop	r15
    ceaa:	ef 90       	pop	r14
    ceac:	df 90       	pop	r13
    ceae:	cf 90       	pop	r12
    ceb0:	08 95       	ret

0000ceb2 <TinyGPSLocation::lng()>:
_ZN15TinyGPSLocation3lngEv():
    ceb2:	cf 92       	push	r12
    ceb4:	df 92       	push	r13
    ceb6:	ef 92       	push	r14
    ceb8:	ff 92       	push	r15
    ceba:	cf 93       	push	r28
    cebc:	df 93       	push	r29
    cebe:	ec 01       	movw	r28, r24
    cec0:	19 82       	std	Y+1, r1	; 0x01
    cec2:	6b 85       	ldd	r22, Y+11	; 0x0b
    cec4:	7c 85       	ldd	r23, Y+12	; 0x0c
    cec6:	8d 85       	ldd	r24, Y+13	; 0x0d
    cec8:	9e 85       	ldd	r25, Y+14	; 0x0e
    ceca:	0e 94 13 72 	call	0xe426	; 0xe426 <__floatunsisf>
    cece:	28 e2       	ldi	r18, 0x28	; 40
    ced0:	3b e6       	ldi	r19, 0x6B	; 107
    ced2:	4e e6       	ldi	r20, 0x6E	; 110
    ced4:	5e e4       	ldi	r21, 0x4E	; 78
    ced6:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
    ceda:	6b 01       	movw	r12, r22
    cedc:	7c 01       	movw	r14, r24
    cede:	69 85       	ldd	r22, Y+9	; 0x09
    cee0:	7a 85       	ldd	r23, Y+10	; 0x0a
    cee2:	90 e0       	ldi	r25, 0x00	; 0
    cee4:	80 e0       	ldi	r24, 0x00	; 0
    cee6:	0e 94 13 72 	call	0xe426	; 0xe426 <__floatunsisf>
    ceea:	9b 01       	movw	r18, r22
    ceec:	ac 01       	movw	r20, r24
    ceee:	c7 01       	movw	r24, r14
    cef0:	b6 01       	movw	r22, r12
    cef2:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    cef6:	2f 85       	ldd	r18, Y+15	; 0x0f
    cef8:	21 11       	cpse	r18, r1
    cefa:	90 58       	subi	r25, 0x80	; 128
    cefc:	df 91       	pop	r29
    cefe:	cf 91       	pop	r28
    cf00:	ff 90       	pop	r15
    cf02:	ef 90       	pop	r14
    cf04:	df 90       	pop	r13
    cf06:	cf 90       	pop	r12
    cf08:	08 95       	ret

0000cf0a <TinyGPSDate::commit()>:
_ZN11TinyGPSDate6commitEv():
    cf0a:	cf 93       	push	r28
    cf0c:	df 93       	push	r29
    cf0e:	ec 01       	movw	r28, r24
    cf10:	8e 81       	ldd	r24, Y+6	; 0x06
    cf12:	9f 81       	ldd	r25, Y+7	; 0x07
    cf14:	a8 85       	ldd	r26, Y+8	; 0x08
    cf16:	b9 85       	ldd	r27, Y+9	; 0x09
    cf18:	8a 83       	std	Y+2, r24	; 0x02
    cf1a:	9b 83       	std	Y+3, r25	; 0x03
    cf1c:	ac 83       	std	Y+4, r26	; 0x04
    cf1e:	bd 83       	std	Y+5, r27	; 0x05
    cf20:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    cf24:	6a 87       	std	Y+10, r22	; 0x0a
    cf26:	7b 87       	std	Y+11, r23	; 0x0b
    cf28:	8c 87       	std	Y+12, r24	; 0x0c
    cf2a:	9d 87       	std	Y+13, r25	; 0x0d
    cf2c:	81 e0       	ldi	r24, 0x01	; 1
    cf2e:	89 83       	std	Y+1, r24	; 0x01
    cf30:	88 83       	st	Y, r24
    cf32:	df 91       	pop	r29
    cf34:	cf 91       	pop	r28
    cf36:	08 95       	ret

0000cf38 <TinyGPSTime::commit()>:
_ZN11TinyGPSTime6commitEv():
    cf38:	cf 93       	push	r28
    cf3a:	df 93       	push	r29
    cf3c:	ec 01       	movw	r28, r24
    cf3e:	8e 81       	ldd	r24, Y+6	; 0x06
    cf40:	9f 81       	ldd	r25, Y+7	; 0x07
    cf42:	a8 85       	ldd	r26, Y+8	; 0x08
    cf44:	b9 85       	ldd	r27, Y+9	; 0x09
    cf46:	8a 83       	std	Y+2, r24	; 0x02
    cf48:	9b 83       	std	Y+3, r25	; 0x03
    cf4a:	ac 83       	std	Y+4, r26	; 0x04
    cf4c:	bd 83       	std	Y+5, r27	; 0x05
    cf4e:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    cf52:	6a 87       	std	Y+10, r22	; 0x0a
    cf54:	7b 87       	std	Y+11, r23	; 0x0b
    cf56:	8c 87       	std	Y+12, r24	; 0x0c
    cf58:	9d 87       	std	Y+13, r25	; 0x0d
    cf5a:	81 e0       	ldi	r24, 0x01	; 1
    cf5c:	89 83       	std	Y+1, r24	; 0x01
    cf5e:	88 83       	st	Y, r24
    cf60:	df 91       	pop	r29
    cf62:	cf 91       	pop	r28
    cf64:	08 95       	ret

0000cf66 <TinyGPSTime::setTime(char const*)>:
_ZN11TinyGPSTime7setTimeEPKc():
    cf66:	cf 93       	push	r28
    cf68:	df 93       	push	r29
    cf6a:	ec 01       	movw	r28, r24
    cf6c:	cb 01       	movw	r24, r22
    cf6e:	0e 94 5f 64 	call	0xc8be	; 0xc8be <TinyGPSPlus::parseDecimal(char const*)>
    cf72:	6e 83       	std	Y+6, r22	; 0x06
    cf74:	7f 83       	std	Y+7, r23	; 0x07
    cf76:	88 87       	std	Y+8, r24	; 0x08
    cf78:	99 87       	std	Y+9, r25	; 0x09
    cf7a:	df 91       	pop	r29
    cf7c:	cf 91       	pop	r28
    cf7e:	08 95       	ret

0000cf80 <TinyGPSDate::setDate(char const*)>:
_ZN11TinyGPSDate7setDateEPKc():
    cf80:	cf 93       	push	r28
    cf82:	df 93       	push	r29
    cf84:	ec 01       	movw	r28, r24
    cf86:	cb 01       	movw	r24, r22
    cf88:	0e 94 ac 76 	call	0xed58	; 0xed58 <atol>
    cf8c:	6e 83       	std	Y+6, r22	; 0x06
    cf8e:	7f 83       	std	Y+7, r23	; 0x07
    cf90:	88 87       	std	Y+8, r24	; 0x08
    cf92:	99 87       	std	Y+9, r25	; 0x09
    cf94:	df 91       	pop	r29
    cf96:	cf 91       	pop	r28
    cf98:	08 95       	ret

0000cf9a <TinyGPSDate::year()>:
_ZN11TinyGPSDate4yearEv():
    cf9a:	fc 01       	movw	r30, r24
    cf9c:	11 82       	std	Z+1, r1	; 0x01
    cf9e:	62 81       	ldd	r22, Z+2	; 0x02
    cfa0:	73 81       	ldd	r23, Z+3	; 0x03
    cfa2:	84 81       	ldd	r24, Z+4	; 0x04
    cfa4:	95 81       	ldd	r25, Z+5	; 0x05
    cfa6:	24 e6       	ldi	r18, 0x64	; 100
    cfa8:	30 e0       	ldi	r19, 0x00	; 0
    cfaa:	40 e0       	ldi	r20, 0x00	; 0
    cfac:	50 e0       	ldi	r21, 0x00	; 0
    cfae:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    cfb2:	cb 01       	movw	r24, r22
    cfb4:	80 53       	subi	r24, 0x30	; 48
    cfb6:	98 4f       	sbci	r25, 0xF8	; 248
    cfb8:	08 95       	ret

0000cfba <TinyGPSDate::month()>:
_ZN11TinyGPSDate5monthEv():
    cfba:	cf 92       	push	r12
    cfbc:	df 92       	push	r13
    cfbe:	ef 92       	push	r14
    cfc0:	ff 92       	push	r15
    cfc2:	fc 01       	movw	r30, r24
    cfc4:	11 82       	std	Z+1, r1	; 0x01
    cfc6:	62 81       	ldd	r22, Z+2	; 0x02
    cfc8:	73 81       	ldd	r23, Z+3	; 0x03
    cfca:	84 81       	ldd	r24, Z+4	; 0x04
    cfcc:	95 81       	ldd	r25, Z+5	; 0x05
    cfce:	24 e6       	ldi	r18, 0x64	; 100
    cfd0:	c2 2e       	mov	r12, r18
    cfd2:	d1 2c       	mov	r13, r1
    cfd4:	e1 2c       	mov	r14, r1
    cfd6:	f1 2c       	mov	r15, r1
    cfd8:	a7 01       	movw	r20, r14
    cfda:	96 01       	movw	r18, r12
    cfdc:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    cfe0:	ca 01       	movw	r24, r20
    cfe2:	b9 01       	movw	r22, r18
    cfe4:	a7 01       	movw	r20, r14
    cfe6:	96 01       	movw	r18, r12
    cfe8:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    cfec:	86 2f       	mov	r24, r22
    cfee:	ff 90       	pop	r15
    cff0:	ef 90       	pop	r14
    cff2:	df 90       	pop	r13
    cff4:	cf 90       	pop	r12
    cff6:	08 95       	ret

0000cff8 <TinyGPSDate::day()>:
_ZN11TinyGPSDate3dayEv():
    cff8:	fc 01       	movw	r30, r24
    cffa:	11 82       	std	Z+1, r1	; 0x01
    cffc:	62 81       	ldd	r22, Z+2	; 0x02
    cffe:	73 81       	ldd	r23, Z+3	; 0x03
    d000:	84 81       	ldd	r24, Z+4	; 0x04
    d002:	95 81       	ldd	r25, Z+5	; 0x05
    d004:	20 e1       	ldi	r18, 0x10	; 16
    d006:	37 e2       	ldi	r19, 0x27	; 39
    d008:	40 e0       	ldi	r20, 0x00	; 0
    d00a:	50 e0       	ldi	r21, 0x00	; 0
    d00c:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    d010:	82 2f       	mov	r24, r18
    d012:	08 95       	ret

0000d014 <TinyGPSTime::hour()>:
_ZN11TinyGPSTime4hourEv():
    d014:	fc 01       	movw	r30, r24
    d016:	11 82       	std	Z+1, r1	; 0x01
    d018:	62 81       	ldd	r22, Z+2	; 0x02
    d01a:	73 81       	ldd	r23, Z+3	; 0x03
    d01c:	84 81       	ldd	r24, Z+4	; 0x04
    d01e:	95 81       	ldd	r25, Z+5	; 0x05
    d020:	20 e4       	ldi	r18, 0x40	; 64
    d022:	32 e4       	ldi	r19, 0x42	; 66
    d024:	4f e0       	ldi	r20, 0x0F	; 15
    d026:	50 e0       	ldi	r21, 0x00	; 0
    d028:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    d02c:	82 2f       	mov	r24, r18
    d02e:	08 95       	ret

0000d030 <TinyGPSTime::minute()>:
_ZN11TinyGPSTime6minuteEv():
    d030:	fc 01       	movw	r30, r24
    d032:	11 82       	std	Z+1, r1	; 0x01
    d034:	62 81       	ldd	r22, Z+2	; 0x02
    d036:	73 81       	ldd	r23, Z+3	; 0x03
    d038:	84 81       	ldd	r24, Z+4	; 0x04
    d03a:	95 81       	ldd	r25, Z+5	; 0x05
    d03c:	20 e1       	ldi	r18, 0x10	; 16
    d03e:	37 e2       	ldi	r19, 0x27	; 39
    d040:	40 e0       	ldi	r20, 0x00	; 0
    d042:	50 e0       	ldi	r21, 0x00	; 0
    d044:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    d048:	ca 01       	movw	r24, r20
    d04a:	b9 01       	movw	r22, r18
    d04c:	24 e6       	ldi	r18, 0x64	; 100
    d04e:	30 e0       	ldi	r19, 0x00	; 0
    d050:	40 e0       	ldi	r20, 0x00	; 0
    d052:	50 e0       	ldi	r21, 0x00	; 0
    d054:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    d058:	86 2f       	mov	r24, r22
    d05a:	08 95       	ret

0000d05c <TinyGPSTime::second()>:
_ZN11TinyGPSTime6secondEv():
    d05c:	cf 92       	push	r12
    d05e:	df 92       	push	r13
    d060:	ef 92       	push	r14
    d062:	ff 92       	push	r15
    d064:	fc 01       	movw	r30, r24
    d066:	11 82       	std	Z+1, r1	; 0x01
    d068:	62 81       	ldd	r22, Z+2	; 0x02
    d06a:	73 81       	ldd	r23, Z+3	; 0x03
    d06c:	84 81       	ldd	r24, Z+4	; 0x04
    d06e:	95 81       	ldd	r25, Z+5	; 0x05
    d070:	24 e6       	ldi	r18, 0x64	; 100
    d072:	c2 2e       	mov	r12, r18
    d074:	d1 2c       	mov	r13, r1
    d076:	e1 2c       	mov	r14, r1
    d078:	f1 2c       	mov	r15, r1
    d07a:	a7 01       	movw	r20, r14
    d07c:	96 01       	movw	r18, r12
    d07e:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    d082:	ca 01       	movw	r24, r20
    d084:	b9 01       	movw	r22, r18
    d086:	a7 01       	movw	r20, r14
    d088:	96 01       	movw	r18, r12
    d08a:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    d08e:	86 2f       	mov	r24, r22
    d090:	ff 90       	pop	r15
    d092:	ef 90       	pop	r14
    d094:	df 90       	pop	r13
    d096:	cf 90       	pop	r12
    d098:	08 95       	ret

0000d09a <TinyGPSDecimal::commit()>:
_ZN14TinyGPSDecimal6commitEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:437

void TinyGPSDecimal::commit()
{
    d09a:	cf 93       	push	r28
    d09c:	df 93       	push	r29
    d09e:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:438
   val = newval;
    d0a0:	8a 85       	ldd	r24, Y+10	; 0x0a
    d0a2:	9b 85       	ldd	r25, Y+11	; 0x0b
    d0a4:	ac 85       	ldd	r26, Y+12	; 0x0c
    d0a6:	bd 85       	ldd	r27, Y+13	; 0x0d
    d0a8:	8e 83       	std	Y+6, r24	; 0x06
    d0aa:	9f 83       	std	Y+7, r25	; 0x07
    d0ac:	a8 87       	std	Y+8, r26	; 0x08
    d0ae:	b9 87       	std	Y+9, r27	; 0x09
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:439
   lastCommitTime = millis();
    d0b0:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    d0b4:	6a 83       	std	Y+2, r22	; 0x02
    d0b6:	7b 83       	std	Y+3, r23	; 0x03
    d0b8:	8c 83       	std	Y+4, r24	; 0x04
    d0ba:	9d 83       	std	Y+5, r25	; 0x05
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:440
   valid = updated = true;
    d0bc:	81 e0       	ldi	r24, 0x01	; 1
    d0be:	89 83       	std	Y+1, r24	; 0x01
    d0c0:	88 83       	st	Y, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:441
}
    d0c2:	df 91       	pop	r29
    d0c4:	cf 91       	pop	r28
    d0c6:	08 95       	ret

0000d0c8 <TinyGPSDecimal::set(char const*)>:
_ZN14TinyGPSDecimal3setEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:444

void TinyGPSDecimal::set(const char *term)
{
    d0c8:	cf 93       	push	r28
    d0ca:	df 93       	push	r29
    d0cc:	ec 01       	movw	r28, r24
    d0ce:	cb 01       	movw	r24, r22
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:445
   newval = TinyGPSPlus::parseDecimal(term);
    d0d0:	0e 94 5f 64 	call	0xc8be	; 0xc8be <TinyGPSPlus::parseDecimal(char const*)>
    d0d4:	6a 87       	std	Y+10, r22	; 0x0a
    d0d6:	7b 87       	std	Y+11, r23	; 0x0b
    d0d8:	8c 87       	std	Y+12, r24	; 0x0c
    d0da:	9d 87       	std	Y+13, r25	; 0x0d
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:446
}
    d0dc:	df 91       	pop	r29
    d0de:	cf 91       	pop	r28
    d0e0:	08 95       	ret

0000d0e2 <TinyGPSInteger::commit()>:
_ZN14TinyGPSInteger6commitEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:449

void TinyGPSInteger::commit()
{
    d0e2:	cf 93       	push	r28
    d0e4:	df 93       	push	r29
    d0e6:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:450
   val = newval;
    d0e8:	8a 85       	ldd	r24, Y+10	; 0x0a
    d0ea:	9b 85       	ldd	r25, Y+11	; 0x0b
    d0ec:	ac 85       	ldd	r26, Y+12	; 0x0c
    d0ee:	bd 85       	ldd	r27, Y+13	; 0x0d
    d0f0:	8e 83       	std	Y+6, r24	; 0x06
    d0f2:	9f 83       	std	Y+7, r25	; 0x07
    d0f4:	a8 87       	std	Y+8, r26	; 0x08
    d0f6:	b9 87       	std	Y+9, r27	; 0x09
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:451
   lastCommitTime = millis();
    d0f8:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    d0fc:	6a 83       	std	Y+2, r22	; 0x02
    d0fe:	7b 83       	std	Y+3, r23	; 0x03
    d100:	8c 83       	std	Y+4, r24	; 0x04
    d102:	9d 83       	std	Y+5, r25	; 0x05
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:452
   valid = updated = true;
    d104:	81 e0       	ldi	r24, 0x01	; 1
    d106:	89 83       	std	Y+1, r24	; 0x01
    d108:	88 83       	st	Y, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:453
}
    d10a:	df 91       	pop	r29
    d10c:	cf 91       	pop	r28
    d10e:	08 95       	ret

0000d110 <TinyGPSInteger::set(char const*)>:
_ZN14TinyGPSInteger3setEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:456

void TinyGPSInteger::set(const char *term)
{
    d110:	cf 93       	push	r28
    d112:	df 93       	push	r29
    d114:	ec 01       	movw	r28, r24
    d116:	cb 01       	movw	r24, r22
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:457
   newval = atol(term);
    d118:	0e 94 ac 76 	call	0xed58	; 0xed58 <atol>
    d11c:	6a 87       	std	Y+10, r22	; 0x0a
    d11e:	7b 87       	std	Y+11, r23	; 0x0b
    d120:	8c 87       	std	Y+12, r24	; 0x0c
    d122:	9d 87       	std	Y+13, r25	; 0x0d
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:458
}
    d124:	df 91       	pop	r29
    d126:	cf 91       	pop	r28
    d128:	08 95       	ret

0000d12a <TinyGPSCustom::commit()>:
_ZN13TinyGPSCustom6commitEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:479
   // Insert this item into the GPS tree
   gps.insertCustom(this, _sentenceName, _termNumber);
}

void TinyGPSCustom::commit()
{
    d12a:	cf 93       	push	r28
    d12c:	df 93       	push	r29
    d12e:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:480
   strcpy(this->buffer, this->stagingBuffer);
    d130:	bc 01       	movw	r22, r24
    d132:	40 96       	adiw	r24, 0x10	; 16
    d134:	0e 94 e3 76 	call	0xedc6	; 0xedc6 <strcpy>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:481
   lastCommitTime = millis();
    d138:	0e 94 92 6c 	call	0xd924	; 0xd924 <millis>
    d13c:	68 a3       	std	Y+32, r22	; 0x20
    d13e:	79 a3       	std	Y+33, r23	; 0x21
    d140:	8a a3       	std	Y+34, r24	; 0x22
    d142:	9b a3       	std	Y+35, r25	; 0x23
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:482
   valid = updated = true;
    d144:	81 e0       	ldi	r24, 0x01	; 1
    d146:	8d a3       	std	Y+37, r24	; 0x25
    d148:	8c a3       	std	Y+36, r24	; 0x24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:483
}
    d14a:	df 91       	pop	r29
    d14c:	cf 91       	pop	r28
    d14e:	08 95       	ret

0000d150 <TinyGPSCustom::set(char const*)>:
_ZN13TinyGPSCustom3setEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:487

void TinyGPSCustom::set(const char *term)
{
   strncpy(this->stagingBuffer, term, sizeof(this->stagingBuffer));
    d150:	40 e1       	ldi	r20, 0x10	; 16
    d152:	50 e0       	ldi	r21, 0x00	; 0
    d154:	0c 94 ea 76 	jmp	0xedd4	; 0xedd4 <strncpy>

0000d158 <TinyGPSPlus::endOfTermHandler()>:
_ZN11TinyGPSPlus16endOfTermHandlerEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:160
#define COMBINE(sentence_type, term_number) (((unsigned)(sentence_type) << 5) | term_number)

// Processes a just-completed term
// Returns true if new sentence has just passed checksum test and is validated
bool TinyGPSPlus::endOfTermHandler()
{
    d158:	af 92       	push	r10
    d15a:	bf 92       	push	r11
    d15c:	df 92       	push	r13
    d15e:	ef 92       	push	r14
    d160:	ff 92       	push	r15
    d162:	0f 93       	push	r16
    d164:	1f 93       	push	r17
    d166:	cf 93       	push	r28
    d168:	df 93       	push	r29
    d16a:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:162
  // If it's the checksum term, and the checksum checks out, commit
  if (isChecksumTerm)
    d16c:	fc 01       	movw	r30, r24
    d16e:	eb 57       	subi	r30, 0x7B	; 123
    d170:	ff 4f       	sbci	r31, 0xFF	; 255
    d172:	d0 80       	ld	r13, Z
    d174:	dd 20       	and	r13, r13
    d176:	09 f4       	brne	.+2      	; 0xd17a <TinyGPSPlus::endOfTermHandler()+0x22>
    d178:	a0 c0       	rjmp	.+320    	; 0xd2ba <TinyGPSPlus::endOfTermHandler()+0x162>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:164
  {
    byte checksum = 16 * fromHex(term[0]) + fromHex(term[1]);
    d17a:	31 96       	adiw	r30, 0x01	; 1
    d17c:	60 81       	ld	r22, Z
    d17e:	0e 94 4d 64 	call	0xc89a	; 0xc89a <TinyGPSPlus::fromHex(char)>
    d182:	18 2f       	mov	r17, r24
    d184:	fe 01       	movw	r30, r28
    d186:	e9 57       	subi	r30, 0x79	; 121
    d188:	ff 4f       	sbci	r31, 0xFF	; 255
    d18a:	60 81       	ld	r22, Z
    d18c:	ce 01       	movw	r24, r28
    d18e:	0e 94 4d 64 	call	0xc89a	; 0xc89a <TinyGPSPlus::fromHex(char)>
    d192:	12 95       	swap	r17
    d194:	10 7f       	andi	r17, 0xF0	; 240
    d196:	18 0f       	add	r17, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:165
    if (checksum == parity)
    d198:	fe 01       	movw	r30, r28
    d19a:	ec 57       	subi	r30, 0x7C	; 124
    d19c:	ff 4f       	sbci	r31, 0xFF	; 255
    d19e:	80 81       	ld	r24, Z
    d1a0:	81 13       	cpse	r24, r17
    d1a2:	72 c0       	rjmp	.+228    	; 0xd288 <TinyGPSPlus::endOfTermHandler()+0x130>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:167
    {
      passedChecksumCount++;
    d1a4:	b5 96       	adiw	r30, 0x25	; 37
    d1a6:	80 81       	ld	r24, Z
    d1a8:	91 81       	ldd	r25, Z+1	; 0x01
    d1aa:	a2 81       	ldd	r26, Z+2	; 0x02
    d1ac:	b3 81       	ldd	r27, Z+3	; 0x03
    d1ae:	01 96       	adiw	r24, 0x01	; 1
    d1b0:	a1 1d       	adc	r26, r1
    d1b2:	b1 1d       	adc	r27, r1
    d1b4:	80 83       	st	Z, r24
    d1b6:	91 83       	std	Z+1, r25	; 0x01
    d1b8:	a2 83       	std	Z+2, r26	; 0x02
    d1ba:	b3 83       	std	Z+3, r27	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:168
      if (sentenceHasFix)
    d1bc:	8e 01       	movw	r16, r28
    d1be:	08 56       	subi	r16, 0x68	; 104
    d1c0:	1f 4f       	sbci	r17, 0xFF	; 255
    d1c2:	d8 01       	movw	r26, r16
    d1c4:	8c 91       	ld	r24, X
    d1c6:	88 23       	and	r24, r24
    d1c8:	61 f0       	breq	.+24     	; 0xd1e2 <TinyGPSPlus::endOfTermHandler()+0x8a>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:169
        ++sentencesWithFixCount;
    d1ca:	38 97       	sbiw	r30, 0x08	; 8
    d1cc:	80 81       	ld	r24, Z
    d1ce:	91 81       	ldd	r25, Z+1	; 0x01
    d1d0:	a2 81       	ldd	r26, Z+2	; 0x02
    d1d2:	b3 81       	ldd	r27, Z+3	; 0x03
    d1d4:	01 96       	adiw	r24, 0x01	; 1
    d1d6:	a1 1d       	adc	r26, r1
    d1d8:	b1 1d       	adc	r27, r1
    d1da:	80 83       	st	Z, r24
    d1dc:	91 83       	std	Z+1, r25	; 0x01
    d1de:	a2 83       	std	Z+2, r26	; 0x02
    d1e0:	b3 83       	std	Z+3, r27	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:171

      switch(curSentenceType)
    d1e2:	fe 01       	movw	r30, r28
    d1e4:	eb 56       	subi	r30, 0x6B	; 107
    d1e6:	ff 4f       	sbci	r31, 0xFF	; 255
    d1e8:	80 81       	ld	r24, Z
    d1ea:	88 23       	and	r24, r24
    d1ec:	a1 f1       	breq	.+104    	; 0xd256 <TinyGPSPlus::endOfTermHandler()+0xfe>
    d1ee:	81 30       	cpi	r24, 0x01	; 1
    d1f0:	c1 f4       	brne	.+48     	; 0xd222 <TinyGPSPlus::endOfTermHandler()+0xca>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:174
      {
      case GPS_SENTENCE_GPRMC:
        date.commit();
    d1f2:	ce 01       	movw	r24, r28
    d1f4:	82 96       	adiw	r24, 0x22	; 34
    d1f6:	0e 94 85 67 	call	0xcf0a	; 0xcf0a <TinyGPSDate::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:175
        time.commit();
    d1fa:	ce 01       	movw	r24, r28
    d1fc:	c0 96       	adiw	r24, 0x30	; 48
    d1fe:	0e 94 9c 67 	call	0xcf38	; 0xcf38 <TinyGPSTime::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:176
        if (sentenceHasFix)
    d202:	f8 01       	movw	r30, r16
    d204:	80 81       	ld	r24, Z
    d206:	88 23       	and	r24, r24
    d208:	61 f0       	breq	.+24     	; 0xd222 <TinyGPSPlus::endOfTermHandler()+0xca>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:178
        {
           location.commit();
    d20a:	ce 01       	movw	r24, r28
    d20c:	0e 94 0c 67 	call	0xce18	; 0xce18 <TinyGPSLocation::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:179
           speed.commit();
    d210:	ce 01       	movw	r24, r28
    d212:	ce 96       	adiw	r24, 0x3e	; 62
    d214:	0e 94 4d 68 	call	0xd09a	; 0xd09a <TinyGPSDecimal::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:180
           course.commit();
    d218:	ce 01       	movw	r24, r28
    d21a:	84 5b       	subi	r24, 0xB4	; 180
    d21c:	9f 4f       	sbci	r25, 0xFF	; 255
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:191
        {
          location.commit();
          altitude.commit();
        }
        satellites.commit();
        hdop.commit();
    d21e:	0e 94 4d 68 	call	0xd09a	; 0xd09a <TinyGPSDecimal::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:196
        break;
      }

      // Commit all custom listeners of this sentence type
      for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0; p = p->next)
    d222:	8e 01       	movw	r16, r28
    d224:	05 56       	subi	r16, 0x65	; 101
    d226:	1f 4f       	sbci	r17, 0xFF	; 255
    d228:	f8 01       	movw	r30, r16
    d22a:	c0 81       	ld	r28, Z
    d22c:	d1 81       	ldd	r29, Z+1	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:196 (discriminator 4)
    d22e:	20 97       	sbiw	r28, 0x00	; 0
    d230:	c9 f1       	breq	.+114    	; 0xd2a4 <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:196 (discriminator 2)
    d232:	d8 01       	movw	r26, r16
    d234:	ed 91       	ld	r30, X+
    d236:	fc 91       	ld	r31, X
    d238:	66 a1       	ldd	r22, Z+38	; 0x26
    d23a:	77 a1       	ldd	r23, Z+39	; 0x27
    d23c:	8e a1       	ldd	r24, Y+38	; 0x26
    d23e:	9f a1       	ldd	r25, Y+39	; 0x27
    d240:	0e 94 da 76 	call	0xedb4	; 0xedb4 <strcmp>
    d244:	89 2b       	or	r24, r25
    d246:	71 f5       	brne	.+92     	; 0xd2a4 <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:197 (discriminator 3)
         p->commit();
    d248:	ce 01       	movw	r24, r28
    d24a:	0e 94 95 68 	call	0xd12a	; 0xd12a <TinyGPSCustom::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:196 (discriminator 3)
        hdop.commit();
        break;
      }

      // Commit all custom listeners of this sentence type
      for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0; p = p->next)
    d24e:	0a a4       	ldd	r0, Y+42	; 0x2a
    d250:	db a5       	ldd	r29, Y+43	; 0x2b
    d252:	c0 2d       	mov	r28, r0
    d254:	ec cf       	rjmp	.-40     	; 0xd22e <TinyGPSPlus::endOfTermHandler()+0xd6>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:184
           speed.commit();
           course.commit();
        }
        break;
      case GPS_SENTENCE_GPGGA:
        time.commit();
    d256:	ce 01       	movw	r24, r28
    d258:	c0 96       	adiw	r24, 0x30	; 48
    d25a:	0e 94 9c 67 	call	0xcf38	; 0xcf38 <TinyGPSTime::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:185
        if (sentenceHasFix)
    d25e:	d8 01       	movw	r26, r16
    d260:	8c 91       	ld	r24, X
    d262:	88 23       	and	r24, r24
    d264:	41 f0       	breq	.+16     	; 0xd276 <TinyGPSPlus::endOfTermHandler()+0x11e>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:187
        {
          location.commit();
    d266:	ce 01       	movw	r24, r28
    d268:	0e 94 0c 67 	call	0xce18	; 0xce18 <TinyGPSLocation::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:188
          altitude.commit();
    d26c:	ce 01       	movw	r24, r28
    d26e:	86 5a       	subi	r24, 0xA6	; 166
    d270:	9f 4f       	sbci	r25, 0xFF	; 255
    d272:	0e 94 4d 68 	call	0xd09a	; 0xd09a <TinyGPSDecimal::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:190
        }
        satellites.commit();
    d276:	ce 01       	movw	r24, r28
    d278:	88 59       	subi	r24, 0x98	; 152
    d27a:	9f 4f       	sbci	r25, 0xFF	; 255
    d27c:	0e 94 71 68 	call	0xd0e2	; 0xd0e2 <TinyGPSInteger::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:191
        hdop.commit();
    d280:	ce 01       	movw	r24, r28
    d282:	8a 58       	subi	r24, 0x8A	; 138
    d284:	9f 4f       	sbci	r25, 0xFF	; 255
    d286:	cb cf       	rjmp	.-106    	; 0xd21e <TinyGPSPlus::endOfTermHandler()+0xc6>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:203
      return true;
    }

    else
    {
      ++failedChecksumCount;
    d288:	cb 55       	subi	r28, 0x5B	; 91
    d28a:	df 4f       	sbci	r29, 0xFF	; 255
    d28c:	88 81       	ld	r24, Y
    d28e:	99 81       	ldd	r25, Y+1	; 0x01
    d290:	aa 81       	ldd	r26, Y+2	; 0x02
    d292:	bb 81       	ldd	r27, Y+3	; 0x03
    d294:	01 96       	adiw	r24, 0x01	; 1
    d296:	a1 1d       	adc	r26, r1
    d298:	b1 1d       	adc	r27, r1
    d29a:	88 83       	st	Y, r24
    d29c:	99 83       	std	Y+1, r25	; 0x01
    d29e:	aa 83       	std	Y+2, r26	; 0x02
    d2a0:	bb 83       	std	Y+3, r27	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:206
    }

    return false;
    d2a2:	d1 2c       	mov	r13, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:282
  for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0 && p->termNumber <= curTermNumber; p = p->next)
    if (p->termNumber == curTermNumber)
         p->set(term);

  return false;
}
    d2a4:	8d 2d       	mov	r24, r13
    d2a6:	df 91       	pop	r29
    d2a8:	cf 91       	pop	r28
    d2aa:	1f 91       	pop	r17
    d2ac:	0f 91       	pop	r16
    d2ae:	ff 90       	pop	r15
    d2b0:	ef 90       	pop	r14
    d2b2:	df 90       	pop	r13
    d2b4:	bf 90       	pop	r11
    d2b6:	af 90       	pop	r10
    d2b8:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:210

    return false;
  }

  // the first term determines the sentence type
  if (curTermNumber == 0)
    d2ba:	7c 01       	movw	r14, r24
    d2bc:	b6 e9       	ldi	r27, 0x96	; 150
    d2be:	eb 0e       	add	r14, r27
    d2c0:	f1 1c       	adc	r15, r1
    d2c2:	f7 01       	movw	r30, r14
    d2c4:	30 81       	ld	r19, Z
    d2c6:	8b 56       	subi	r24, 0x6B	; 107
    d2c8:	9f 4f       	sbci	r25, 0xFF	; 255
    d2ca:	5c 01       	movw	r10, r24
    d2cc:	8e 01       	movw	r16, r28
    d2ce:	05 56       	subi	r16, 0x65	; 101
    d2d0:	1f 4f       	sbci	r17, 0xFF	; 255
    d2d2:	31 11       	cpse	r19, r1
    d2d4:	3e c0       	rjmp	.+124    	; 0xd352 <TinyGPSPlus::endOfTermHandler()+0x1fa>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:212
  {
    if (!strcmp(term, _GPRMCterm) || !strcmp(term, _GNRMCterm))
    d2d6:	7e 01       	movw	r14, r28
    d2d8:	96 e8       	ldi	r25, 0x86	; 134
    d2da:	e9 0e       	add	r14, r25
    d2dc:	f1 1c       	adc	r15, r1
    d2de:	6f e9       	ldi	r22, 0x9F	; 159
    d2e0:	72 e0       	ldi	r23, 0x02	; 2
    d2e2:	c7 01       	movw	r24, r14
    d2e4:	0e 94 da 76 	call	0xedb4	; 0xedb4 <strcmp>
    d2e8:	89 2b       	or	r24, r25
    d2ea:	39 f0       	breq	.+14     	; 0xd2fa <TinyGPSPlus::endOfTermHandler()+0x1a2>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:212 (discriminator 1)
    d2ec:	65 ea       	ldi	r22, 0xA5	; 165
    d2ee:	72 e0       	ldi	r23, 0x02	; 2
    d2f0:	c7 01       	movw	r24, r14
    d2f2:	0e 94 da 76 	call	0xedb4	; 0xedb4 <strcmp>
    d2f6:	89 2b       	or	r24, r25
    d2f8:	21 f4       	brne	.+8      	; 0xd302 <TinyGPSPlus::endOfTermHandler()+0x1aa>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:213
      curSentenceType = GPS_SENTENCE_GPRMC;
    d2fa:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:217
    else if (!strcmp(term, _GPGGAterm) || !strcmp(term, _GNGGAterm))
      curSentenceType = GPS_SENTENCE_GPGGA;
    else
      curSentenceType = GPS_SENTENCE_OTHER;
    d2fc:	d5 01       	movw	r26, r10
    d2fe:	8c 93       	st	X, r24
    d300:	10 c0       	rjmp	.+32     	; 0xd322 <TinyGPSPlus::endOfTermHandler()+0x1ca>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:214
  // the first term determines the sentence type
  if (curTermNumber == 0)
  {
    if (!strcmp(term, _GPRMCterm) || !strcmp(term, _GNRMCterm))
      curSentenceType = GPS_SENTENCE_GPRMC;
    else if (!strcmp(term, _GPGGAterm) || !strcmp(term, _GNGGAterm))
    d302:	6b ea       	ldi	r22, 0xAB	; 171
    d304:	72 e0       	ldi	r23, 0x02	; 2
    d306:	c7 01       	movw	r24, r14
    d308:	0e 94 da 76 	call	0xedb4	; 0xedb4 <strcmp>
    d30c:	89 2b       	or	r24, r25
    d30e:	39 f0       	breq	.+14     	; 0xd31e <TinyGPSPlus::endOfTermHandler()+0x1c6>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:214 (discriminator 1)
    d310:	61 eb       	ldi	r22, 0xB1	; 177
    d312:	72 e0       	ldi	r23, 0x02	; 2
    d314:	c7 01       	movw	r24, r14
    d316:	0e 94 da 76 	call	0xedb4	; 0xedb4 <strcmp>
    d31a:	89 2b       	or	r24, r25
    d31c:	c1 f4       	brne	.+48     	; 0xd34e <TinyGPSPlus::endOfTermHandler()+0x1f6>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:215
      curSentenceType = GPS_SENTENCE_GPGGA;
    d31e:	f5 01       	movw	r30, r10
    d320:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:220
    else
      curSentenceType = GPS_SENTENCE_OTHER;

    // Any custom candidates of this sentence type?
    for (customCandidates = customElts; customCandidates != NULL && strcmp(customCandidates->sentenceName, term) < 0; customCandidates = customCandidates->next);
    d322:	c7 56       	subi	r28, 0x67	; 103
    d324:	df 4f       	sbci	r29, 0xFF	; 255
    d326:	88 81       	ld	r24, Y
    d328:	99 81       	ldd	r25, Y+1	; 0x01
    d32a:	f8 01       	movw	r30, r16
    d32c:	91 83       	std	Z+1, r25	; 0x01
    d32e:	80 83       	st	Z, r24
    d330:	c0 81       	ld	r28, Z
    d332:	d1 81       	ldd	r29, Z+1	; 0x01
    d334:	20 97       	sbiw	r28, 0x00	; 0
    d336:	09 f4       	brne	.+2      	; 0xd33a <TinyGPSPlus::endOfTermHandler()+0x1e2>
    d338:	b5 cf       	rjmp	.-150    	; 0xd2a4 <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:220 (discriminator 2)
    d33a:	b7 01       	movw	r22, r14
    d33c:	8e a1       	ldd	r24, Y+38	; 0x26
    d33e:	9f a1       	ldd	r25, Y+39	; 0x27
    d340:	0e 94 da 76 	call	0xedb4	; 0xedb4 <strcmp>
    d344:	97 ff       	sbrs	r25, 7
    d346:	c3 c0       	rjmp	.+390    	; 0xd4ce <TinyGPSPlus::endOfTermHandler()+0x376>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:220 (discriminator 3)
    d348:	8a a5       	ldd	r24, Y+42	; 0x2a
    d34a:	9b a5       	ldd	r25, Y+43	; 0x2b
    d34c:	ee cf       	rjmp	.-36     	; 0xd32a <TinyGPSPlus::endOfTermHandler()+0x1d2>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:217
    if (!strcmp(term, _GPRMCterm) || !strcmp(term, _GNRMCterm))
      curSentenceType = GPS_SENTENCE_GPRMC;
    else if (!strcmp(term, _GPGGAterm) || !strcmp(term, _GNGGAterm))
      curSentenceType = GPS_SENTENCE_GPGGA;
    else
      curSentenceType = GPS_SENTENCE_OTHER;
    d34e:	82 e0       	ldi	r24, 0x02	; 2
    d350:	d5 cf       	rjmp	.-86     	; 0xd2fc <TinyGPSPlus::endOfTermHandler()+0x1a4>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:227
       customCandidates = NULL;

    return false;
  }

  if (curSentenceType != GPS_SENTENCE_OTHER && term[0])
    d352:	dc 01       	movw	r26, r24
    d354:	ec 91       	ld	r30, X
    d356:	e2 30       	cpi	r30, 0x02	; 2
    d358:	09 f4       	brne	.+2      	; 0xd35c <TinyGPSPlus::endOfTermHandler()+0x204>
    d35a:	44 c0       	rjmp	.+136    	; 0xd3e4 <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:227 (discriminator 1)
    d35c:	ce 01       	movw	r24, r28
    d35e:	8a 57       	subi	r24, 0x7A	; 122
    d360:	9f 4f       	sbci	r25, 0xFF	; 255
    d362:	dc 01       	movw	r26, r24
    d364:	2c 91       	ld	r18, X
    d366:	22 23       	and	r18, r18
    d368:	09 f4       	brne	.+2      	; 0xd36c <TinyGPSPlus::endOfTermHandler()+0x214>
    d36a:	3c c0       	rjmp	.+120    	; 0xd3e4 <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:228
    switch(COMBINE(curSentenceType, curTermNumber))
    d36c:	b0 e2       	ldi	r27, 0x20	; 32
    d36e:	eb 9f       	mul	r30, r27
    d370:	f0 01       	movw	r30, r0
    d372:	11 24       	eor	r1, r1
    d374:	e3 2b       	or	r30, r19
    d376:	31 97       	sbiw	r30, 0x01	; 1
    d378:	e9 32       	cpi	r30, 0x29	; 41
    d37a:	f1 05       	cpc	r31, r1
    d37c:	08 f0       	brcs	.+2      	; 0xd380 <TinyGPSPlus::endOfTermHandler()+0x228>
    d37e:	32 c0       	rjmp	.+100    	; 0xd3e4 <TinyGPSPlus::endOfTermHandler()+0x28c>
    d380:	ec 53       	subi	r30, 0x3C	; 60
    d382:	f6 49       	sbci	r31, 0x96	; 150
    d384:	0c 94 25 75 	jmp	0xea4a	; 0xea4a <__tablejump2__>
    d388:	ed 69       	ori	r30, 0x9D	; 157
    d38a:	27 6a       	ori	r18, 0xA7	; 167
    d38c:	2d 6a       	ori	r18, 0xAD	; 173
    d38e:	33 6a       	ori	r19, 0xA3	; 163
    d390:	37 6a       	ori	r19, 0xA7	; 167
    d392:	4e 6a       	ori	r20, 0xAE	; 174
    d394:	56 6a       	ori	r21, 0xA6	; 166
    d396:	5d 6a       	ori	r21, 0xAD	; 173
    d398:	62 6a       	ori	r22, 0xA2	; 162
    d39a:	f2 69       	ori	r31, 0x92	; 146
    d39c:	f2 69       	ori	r31, 0x92	; 146
    d39e:	f2 69       	ori	r31, 0x92	; 146
    d3a0:	f2 69       	ori	r31, 0x92	; 146
    d3a2:	f2 69       	ori	r31, 0x92	; 146
    d3a4:	f2 69       	ori	r31, 0x92	; 146
    d3a6:	f2 69       	ori	r31, 0x92	; 146
    d3a8:	f2 69       	ori	r31, 0x92	; 146
    d3aa:	f2 69       	ori	r31, 0x92	; 146
    d3ac:	f2 69       	ori	r31, 0x92	; 146
    d3ae:	f2 69       	ori	r31, 0x92	; 146
    d3b0:	f2 69       	ori	r31, 0x92	; 146
    d3b2:	f2 69       	ori	r31, 0x92	; 146
    d3b4:	f2 69       	ori	r31, 0x92	; 146
    d3b6:	f2 69       	ori	r31, 0x92	; 146
    d3b8:	f2 69       	ori	r31, 0x92	; 146
    d3ba:	f2 69       	ori	r31, 0x92	; 146
    d3bc:	f2 69       	ori	r31, 0x92	; 146
    d3be:	f2 69       	ori	r31, 0x92	; 146
    d3c0:	f2 69       	ori	r31, 0x92	; 146
    d3c2:	f2 69       	ori	r31, 0x92	; 146
    d3c4:	f2 69       	ori	r31, 0x92	; 146
    d3c6:	f2 69       	ori	r31, 0x92	; 146
    d3c8:	ed 69       	ori	r30, 0x9D	; 157
    d3ca:	1f 6a       	ori	r17, 0xAF	; 175
    d3cc:	27 6a       	ori	r18, 0xA7	; 167
    d3ce:	2d 6a       	ori	r18, 0xAD	; 173
    d3d0:	33 6a       	ori	r19, 0xA3	; 163
    d3d2:	37 6a       	ori	r19, 0xA7	; 167
    d3d4:	3d 6a       	ori	r19, 0xAD	; 173
    d3d6:	43 6a       	ori	r20, 0xA3	; 163
    d3d8:	48 6a       	ori	r20, 0xA8	; 168
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:232
  {
    case COMBINE(GPS_SENTENCE_GPRMC, 1): // Time in both sentences
    case COMBINE(GPS_SENTENCE_GPGGA, 1):
      time.setTime(term);
    d3da:	bc 01       	movw	r22, r24
    d3dc:	ce 01       	movw	r24, r28
    d3de:	c0 96       	adiw	r24, 0x30	; 48
    d3e0:	0e 94 b3 67 	call	0xcf66	; 0xcf66 <TinyGPSTime::setTime(char const*)>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:277
      altitude.set(term);
      break;
  }

  // Set custom values as needed
  for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0 && p->termNumber <= curTermNumber; p = p->next)
    d3e4:	f8 01       	movw	r30, r16
    d3e6:	a0 80       	ld	r10, Z
    d3e8:	b1 80       	ldd	r11, Z+1	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:279
    if (p->termNumber == curTermNumber)
         p->set(term);
    d3ea:	ca 57       	subi	r28, 0x7A	; 122
    d3ec:	df 4f       	sbci	r29, 0xFF	; 255
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:277 (discriminator 1)
      altitude.set(term);
      break;
  }

  // Set custom values as needed
  for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0 && p->termNumber <= curTermNumber; p = p->next)
    d3ee:	a1 14       	cp	r10, r1
    d3f0:	b1 04       	cpc	r11, r1
    d3f2:	09 f4       	brne	.+2      	; 0xd3f6 <TinyGPSPlus::endOfTermHandler()+0x29e>
    d3f4:	57 cf       	rjmp	.-338    	; 0xd2a4 <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:277 (discriminator 2)
    d3f6:	d8 01       	movw	r26, r16
    d3f8:	ed 91       	ld	r30, X+
    d3fa:	fc 91       	ld	r31, X
    d3fc:	66 a1       	ldd	r22, Z+38	; 0x26
    d3fe:	77 a1       	ldd	r23, Z+39	; 0x27
    d400:	f5 01       	movw	r30, r10
    d402:	86 a1       	ldd	r24, Z+38	; 0x26
    d404:	97 a1       	ldd	r25, Z+39	; 0x27
    d406:	0e 94 da 76 	call	0xedb4	; 0xedb4 <strcmp>
    d40a:	89 2b       	or	r24, r25
    d40c:	09 f0       	breq	.+2      	; 0xd410 <TinyGPSPlus::endOfTermHandler()+0x2b8>
    d40e:	4a cf       	rjmp	.-364    	; 0xd2a4 <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:277 (discriminator 3)
    d410:	d5 01       	movw	r26, r10
    d412:	98 96       	adiw	r26, 0x28	; 40
    d414:	2d 91       	ld	r18, X+
    d416:	3c 91       	ld	r19, X
    d418:	f7 01       	movw	r30, r14
    d41a:	80 81       	ld	r24, Z
    d41c:	90 e0       	ldi	r25, 0x00	; 0
    d41e:	82 17       	cp	r24, r18
    d420:	93 07       	cpc	r25, r19
    d422:	0c f4       	brge	.+2      	; 0xd426 <TinyGPSPlus::endOfTermHandler()+0x2ce>
    d424:	3f cf       	rjmp	.-386    	; 0xd2a4 <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:278
    if (p->termNumber == curTermNumber)
    d426:	28 17       	cp	r18, r24
    d428:	39 07       	cpc	r19, r25
    d42a:	21 f4       	brne	.+8      	; 0xd434 <TinyGPSPlus::endOfTermHandler()+0x2dc>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:279
         p->set(term);
    d42c:	be 01       	movw	r22, r28
    d42e:	c5 01       	movw	r24, r10
    d430:	0e 94 a8 68 	call	0xd150	; 0xd150 <TinyGPSCustom::set(char const*)>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:277 (discriminator 4)
      altitude.set(term);
      break;
  }

  // Set custom values as needed
  for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0 && p->termNumber <= curTermNumber; p = p->next)
    d434:	d5 01       	movw	r26, r10
    d436:	9a 96       	adiw	r26, 0x2a	; 42
    d438:	ad 90       	ld	r10, X+
    d43a:	bc 90       	ld	r11, X
    d43c:	d8 cf       	rjmp	.-80     	; 0xd3ee <TinyGPSPlus::endOfTermHandler()+0x296>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:235
    case COMBINE(GPS_SENTENCE_GPRMC, 1): // Time in both sentences
    case COMBINE(GPS_SENTENCE_GPGGA, 1):
      time.setTime(term);
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 2): // GPRMC validity
      sentenceHasFix = term[0] == 'A';
    d43e:	fe 01       	movw	r30, r28
    d440:	e8 56       	subi	r30, 0x68	; 104
    d442:	ff 4f       	sbci	r31, 0xFF	; 255
    d444:	81 e0       	ldi	r24, 0x01	; 1
    d446:	21 34       	cpi	r18, 0x41	; 65
    d448:	79 f1       	breq	.+94     	; 0xd4a8 <TinyGPSPlus::endOfTermHandler()+0x350>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:263
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 9): // Date (GPRMC)
      date.setDate(term);
      break;
    case COMBINE(GPS_SENTENCE_GPGGA, 6): // Fix data (GPGGA)
      sentenceHasFix = term[0] > '0';
    d44a:	80 e0       	ldi	r24, 0x00	; 0
    d44c:	2d c0       	rjmp	.+90     	; 0xd4a8 <TinyGPSPlus::endOfTermHandler()+0x350>
_ZN15TinyGPSLocation11setLatitudeEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:347
   valid = updated = true;
}

void TinyGPSLocation::setLatitude(const char *term)
{
   TinyGPSPlus::parseDegrees(term, rawNewLatData);
    d44e:	be 01       	movw	r22, r28
    d450:	60 5f       	subi	r22, 0xF0	; 240
    d452:	7f 4f       	sbci	r23, 0xFF	; 255
_ZN15TinyGPSLocation12setLongitudeEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:352
}

void TinyGPSLocation::setLongitude(const char *term)
{
   TinyGPSPlus::parseDegrees(term, rawNewLngData);
    d454:	0e 94 b2 64 	call	0xc964	; 0xc964 <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)>
    d458:	c5 cf       	rjmp	.-118    	; 0xd3e4 <TinyGPSPlus::endOfTermHandler()+0x28c>
_ZN11TinyGPSPlus16endOfTermHandlerEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:243
    case COMBINE(GPS_SENTENCE_GPGGA, 2):
      location.setLatitude(term);
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 4): // N/S
    case COMBINE(GPS_SENTENCE_GPGGA, 3):
      location.rawNewLatData.negative = term[0] == 'S';
    d45a:	81 e0       	ldi	r24, 0x01	; 1
    d45c:	23 35       	cpi	r18, 0x53	; 83
    d45e:	09 f0       	breq	.+2      	; 0xd462 <TinyGPSPlus::endOfTermHandler()+0x30a>
    d460:	80 e0       	ldi	r24, 0x00	; 0
    d462:	8e 8b       	std	Y+22, r24	; 0x16
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:244
      break;
    d464:	bf cf       	rjmp	.-130    	; 0xd3e4 <TinyGPSPlus::endOfTermHandler()+0x28c>
_ZN15TinyGPSLocation12setLongitudeEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:352
   TinyGPSPlus::parseDegrees(term, rawNewLatData);
}

void TinyGPSLocation::setLongitude(const char *term)
{
   TinyGPSPlus::parseDegrees(term, rawNewLngData);
    d466:	be 01       	movw	r22, r28
    d468:	69 5e       	subi	r22, 0xE9	; 233
    d46a:	7f 4f       	sbci	r23, 0xFF	; 255
    d46c:	f3 cf       	rjmp	.-26     	; 0xd454 <TinyGPSPlus::endOfTermHandler()+0x2fc>
_ZN11TinyGPSPlus16endOfTermHandlerEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:251
    case COMBINE(GPS_SENTENCE_GPGGA, 4):
      location.setLongitude(term);
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 6): // E/W
    case COMBINE(GPS_SENTENCE_GPGGA, 5):
      location.rawNewLngData.negative = term[0] == 'W';
    d46e:	81 e0       	ldi	r24, 0x01	; 1
    d470:	27 35       	cpi	r18, 0x57	; 87
    d472:	09 f0       	breq	.+2      	; 0xd476 <TinyGPSPlus::endOfTermHandler()+0x31e>
    d474:	80 e0       	ldi	r24, 0x00	; 0
    d476:	8d 8f       	std	Y+29, r24	; 0x1d
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:252
      break;
    d478:	b5 cf       	rjmp	.-150    	; 0xd3e4 <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:254
    case COMBINE(GPS_SENTENCE_GPRMC, 7): // Speed (GPRMC)
      speed.set(term);
    d47a:	bc 01       	movw	r22, r24
    d47c:	ce 01       	movw	r24, r28
    d47e:	ce 96       	adiw	r24, 0x3e	; 62
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:272
      break;
    case COMBINE(GPS_SENTENCE_GPGGA, 8): // HDOP
      hdop.set(term);
      break;
    case COMBINE(GPS_SENTENCE_GPGGA, 9): // Altitude (GPGGA)
      altitude.set(term);
    d480:	0e 94 64 68 	call	0xd0c8	; 0xd0c8 <TinyGPSDecimal::set(char const*)>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:273
      break;
    d484:	af cf       	rjmp	.-162    	; 0xd3e4 <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:257
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 7): // Speed (GPRMC)
      speed.set(term);
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 8): // Course (GPRMC)
      course.set(term);
    d486:	bc 01       	movw	r22, r24
    d488:	ce 01       	movw	r24, r28
    d48a:	84 5b       	subi	r24, 0xB4	; 180
    d48c:	9f 4f       	sbci	r25, 0xFF	; 255
    d48e:	f8 cf       	rjmp	.-16     	; 0xd480 <TinyGPSPlus::endOfTermHandler()+0x328>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:260
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 9): // Date (GPRMC)
      date.setDate(term);
    d490:	bc 01       	movw	r22, r24
    d492:	ce 01       	movw	r24, r28
    d494:	82 96       	adiw	r24, 0x22	; 34
    d496:	0e 94 c0 67 	call	0xcf80	; 0xcf80 <TinyGPSDate::setDate(char const*)>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:261
      break;
    d49a:	a4 cf       	rjmp	.-184    	; 0xd3e4 <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:263
    case COMBINE(GPS_SENTENCE_GPGGA, 6): // Fix data (GPGGA)
      sentenceHasFix = term[0] > '0';
    d49c:	fe 01       	movw	r30, r28
    d49e:	e8 56       	subi	r30, 0x68	; 104
    d4a0:	ff 4f       	sbci	r31, 0xFF	; 255
    d4a2:	81 e0       	ldi	r24, 0x01	; 1
    d4a4:	21 33       	cpi	r18, 0x31	; 49
    d4a6:	8c f2       	brlt	.-94     	; 0xd44a <TinyGPSPlus::endOfTermHandler()+0x2f2>
    d4a8:	80 83       	st	Z, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:264
      break;
    d4aa:	9c cf       	rjmp	.-200    	; 0xd3e4 <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:266
    case COMBINE(GPS_SENTENCE_GPGGA, 7): // Satellites used (GPGGA)
      satellites.set(term);
    d4ac:	bc 01       	movw	r22, r24
    d4ae:	ce 01       	movw	r24, r28
    d4b0:	88 59       	subi	r24, 0x98	; 152
    d4b2:	9f 4f       	sbci	r25, 0xFF	; 255
    d4b4:	0e 94 88 68 	call	0xd110	; 0xd110 <TinyGPSInteger::set(char const*)>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:267
      break;
    d4b8:	95 cf       	rjmp	.-214    	; 0xd3e4 <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:269
    case COMBINE(GPS_SENTENCE_GPGGA, 8): // HDOP
      hdop.set(term);
    d4ba:	bc 01       	movw	r22, r24
    d4bc:	ce 01       	movw	r24, r28
    d4be:	8a 58       	subi	r24, 0x8A	; 138
    d4c0:	9f 4f       	sbci	r25, 0xFF	; 255
    d4c2:	de cf       	rjmp	.-68     	; 0xd480 <TinyGPSPlus::endOfTermHandler()+0x328>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:272
      break;
    case COMBINE(GPS_SENTENCE_GPGGA, 9): // Altitude (GPGGA)
      altitude.set(term);
    d4c4:	bc 01       	movw	r22, r24
    d4c6:	ce 01       	movw	r24, r28
    d4c8:	86 5a       	subi	r24, 0xA6	; 166
    d4ca:	9f 4f       	sbci	r25, 0xFF	; 255
    d4cc:	d9 cf       	rjmp	.-78     	; 0xd480 <TinyGPSPlus::endOfTermHandler()+0x328>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:221
    else
      curSentenceType = GPS_SENTENCE_OTHER;

    // Any custom candidates of this sentence type?
    for (customCandidates = customElts; customCandidates != NULL && strcmp(customCandidates->sentenceName, term) < 0; customCandidates = customCandidates->next);
    if (customCandidates != NULL && strcmp(customCandidates->sentenceName, term) > 0)
    d4ce:	89 2b       	or	r24, r25
    d4d0:	09 f4       	brne	.+2      	; 0xd4d4 <TinyGPSPlus::endOfTermHandler()+0x37c>
    d4d2:	e8 ce       	rjmp	.-560    	; 0xd2a4 <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:222
       customCandidates = NULL;
    d4d4:	d8 01       	movw	r26, r16
    d4d6:	1d 92       	st	X+, r1
    d4d8:	1c 92       	st	X, r1
    d4da:	e4 ce       	rjmp	.-568    	; 0xd2a4 <TinyGPSPlus::endOfTermHandler()+0x14c>

0000d4dc <TinyGPSPlus::encode(char)>:
_ZN11TinyGPSPlus6encodeEc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:57
//
// public methods
//

bool TinyGPSPlus::encode(char c)
{
    d4dc:	cf 92       	push	r12
    d4de:	df 92       	push	r13
    d4e0:	ef 92       	push	r14
    d4e2:	ff 92       	push	r15
    d4e4:	1f 93       	push	r17
    d4e6:	cf 93       	push	r28
    d4e8:	df 93       	push	r29
    d4ea:	9c 01       	movw	r18, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:58
  ++encodedCharCount;
    d4ec:	fc 01       	movw	r30, r24
    d4ee:	e3 56       	subi	r30, 0x63	; 99
    d4f0:	ff 4f       	sbci	r31, 0xFF	; 255
    d4f2:	80 81       	ld	r24, Z
    d4f4:	91 81       	ldd	r25, Z+1	; 0x01
    d4f6:	a2 81       	ldd	r26, Z+2	; 0x02
    d4f8:	b3 81       	ldd	r27, Z+3	; 0x03
    d4fa:	01 96       	adiw	r24, 0x01	; 1
    d4fc:	a1 1d       	adc	r26, r1
    d4fe:	b1 1d       	adc	r27, r1
    d500:	80 83       	st	Z, r24
    d502:	91 83       	std	Z+1, r25	; 0x01
    d504:	a2 83       	std	Z+2, r26	; 0x02
    d506:	b3 83       	std	Z+3, r27	; 0x03
    d508:	c9 01       	movw	r24, r18
    d50a:	89 56       	subi	r24, 0x69	; 105
    d50c:	9f 4f       	sbci	r25, 0xFF	; 255
    d50e:	6c 01       	movw	r12, r24
    d510:	d9 01       	movw	r26, r18
    d512:	ab 57       	subi	r26, 0x7B	; 123
    d514:	bf 4f       	sbci	r27, 0xFF	; 255
    d516:	7d 01       	movw	r14, r26
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:60

  switch(c)
    d518:	64 32       	cpi	r22, 0x24	; 36
    d51a:	b1 f1       	breq	.+108    	; 0xd588 <TinyGPSPlus::encode(char)+0xac>
    d51c:	54 f5       	brge	.+84     	; 0xd572 <TinyGPSPlus::encode(char)+0x96>
    d51e:	6a 30       	cpi	r22, 0x0A	; 10
    d520:	19 f0       	breq	.+6      	; 0xd528 <TinyGPSPlus::encode(char)+0x4c>
    d522:	6d 30       	cpi	r22, 0x0D	; 13
    d524:	09 f0       	breq	.+2      	; 0xd528 <TinyGPSPlus::encode(char)+0x4c>
    d526:	42 c0       	rjmp	.+132    	; 0xd5ac <TinyGPSPlus::encode(char)+0xd0>
    d528:	16 2f       	mov	r17, r22
    d52a:	e9 01       	movw	r28, r18
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:69
  case '\r':
  case '\n':
  case '*':
    {
      bool isValidSentence = false;
      if (curTermOffset < sizeof(term))
    d52c:	d6 01       	movw	r26, r12
    d52e:	ec 91       	ld	r30, X
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:68
    parity ^= (uint8_t)c;
  case '\r':
  case '\n':
  case '*':
    {
      bool isValidSentence = false;
    d530:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:69
      if (curTermOffset < sizeof(term))
    d532:	ef 30       	cpi	r30, 0x0F	; 15
    d534:	48 f4       	brcc	.+18     	; 0xd548 <TinyGPSPlus::encode(char)+0x6c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:71
      {
        term[curTermOffset] = 0;
    d536:	e2 0f       	add	r30, r18
    d538:	f3 2f       	mov	r31, r19
    d53a:	f1 1d       	adc	r31, r1
    d53c:	ea 57       	subi	r30, 0x7A	; 122
    d53e:	ff 4f       	sbci	r31, 0xFF	; 255
    d540:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:72
        isValidSentence = endOfTermHandler();
    d542:	c9 01       	movw	r24, r18
    d544:	0e 94 ac 68 	call	0xd158	; 0xd158 <TinyGPSPlus::endOfTermHandler()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:74
      }
      ++curTermNumber;
    d548:	ca 56       	subi	r28, 0x6A	; 106
    d54a:	df 4f       	sbci	r29, 0xFF	; 255
    d54c:	98 81       	ld	r25, Y
    d54e:	9f 5f       	subi	r25, 0xFF	; 255
    d550:	98 83       	st	Y, r25
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:75
      curTermOffset = 0;
    d552:	f6 01       	movw	r30, r12
    d554:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:76
      isChecksumTerm = c == '*';
    d556:	91 e0       	ldi	r25, 0x01	; 1
    d558:	1a 32       	cpi	r17, 0x2A	; 42
    d55a:	09 f0       	breq	.+2      	; 0xd55e <TinyGPSPlus::encode(char)+0x82>
    d55c:	90 e0       	ldi	r25, 0x00	; 0
    d55e:	d7 01       	movw	r26, r14
    d560:	9c 93       	st	X, r25
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:98
      parity ^= c;
    return false;
  }

  return false;
}
    d562:	df 91       	pop	r29
    d564:	cf 91       	pop	r28
    d566:	1f 91       	pop	r17
    d568:	ff 90       	pop	r15
    d56a:	ef 90       	pop	r14
    d56c:	df 90       	pop	r13
    d56e:	cf 90       	pop	r12
    d570:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:60

bool TinyGPSPlus::encode(char c)
{
  ++encodedCharCount;

  switch(c)
    d572:	6a 32       	cpi	r22, 0x2A	; 42
    d574:	c9 f2       	breq	.-78     	; 0xd528 <TinyGPSPlus::encode(char)+0x4c>
    d576:	6c 32       	cpi	r22, 0x2C	; 44
    d578:	c9 f4       	brne	.+50     	; 0xd5ac <TinyGPSPlus::encode(char)+0xd0>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:63
  {
  case ',': // term terminators
    parity ^= (uint8_t)c;
    d57a:	f9 01       	movw	r30, r18
    d57c:	ec 57       	subi	r30, 0x7C	; 124
    d57e:	ff 4f       	sbci	r31, 0xFF	; 255
    d580:	80 81       	ld	r24, Z
    d582:	86 27       	eor	r24, r22
    d584:	80 83       	st	Z, r24
    d586:	d0 cf       	rjmp	.-96     	; 0xd528 <TinyGPSPlus::encode(char)+0x4c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:82
      return isValidSentence;
    }
    break;

  case '$': // sentence begin
    curTermNumber = curTermOffset = 0;
    d588:	fc 01       	movw	r30, r24
    d58a:	10 82       	st	Z, r1
    d58c:	f9 01       	movw	r30, r18
    d58e:	ea 56       	subi	r30, 0x6A	; 106
    d590:	ff 4f       	sbci	r31, 0xFF	; 255
    d592:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:83
    parity = 0;
    d594:	72 97       	sbiw	r30, 0x12	; 18
    d596:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:84
    curSentenceType = GPS_SENTENCE_OTHER;
    d598:	71 96       	adiw	r30, 0x11	; 17
    d59a:	82 e0       	ldi	r24, 0x02	; 2
    d59c:	80 83       	st	Z, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:85
    isChecksumTerm = false;
    d59e:	1c 92       	st	X, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:86
    sentenceHasFix = false;
    d5a0:	28 56       	subi	r18, 0x68	; 104
    d5a2:	3f 4f       	sbci	r19, 0xFF	; 255
    d5a4:	f9 01       	movw	r30, r18
    d5a6:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:94
  default: // ordinary characters
    if (curTermOffset < sizeof(term) - 1)
      term[curTermOffset++] = c;
    if (!isChecksumTerm)
      parity ^= c;
    return false;
    d5a8:	80 e0       	ldi	r24, 0x00	; 0
    d5aa:	db cf       	rjmp	.-74     	; 0xd562 <TinyGPSPlus::encode(char)+0x86>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:90
    isChecksumTerm = false;
    sentenceHasFix = false;
    return false;

  default: // ordinary characters
    if (curTermOffset < sizeof(term) - 1)
    d5ac:	d6 01       	movw	r26, r12
    d5ae:	ec 91       	ld	r30, X
    d5b0:	ee 30       	cpi	r30, 0x0E	; 14
    d5b2:	48 f4       	brcc	.+18     	; 0xd5c6 <TinyGPSPlus::encode(char)+0xea>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:91
      term[curTermOffset++] = c;
    d5b4:	81 e0       	ldi	r24, 0x01	; 1
    d5b6:	8e 0f       	add	r24, r30
    d5b8:	8c 93       	st	X, r24
    d5ba:	e2 0f       	add	r30, r18
    d5bc:	f3 2f       	mov	r31, r19
    d5be:	f1 1d       	adc	r31, r1
    d5c0:	ea 57       	subi	r30, 0x7A	; 122
    d5c2:	ff 4f       	sbci	r31, 0xFF	; 255
    d5c4:	60 83       	st	Z, r22
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:92
    if (!isChecksumTerm)
    d5c6:	f7 01       	movw	r30, r14
    d5c8:	80 81       	ld	r24, Z
    d5ca:	81 11       	cpse	r24, r1
    d5cc:	ed cf       	rjmp	.-38     	; 0xd5a8 <TinyGPSPlus::encode(char)+0xcc>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:93
      parity ^= c;
    d5ce:	f9 01       	movw	r30, r18
    d5d0:	ec 57       	subi	r30, 0x7C	; 124
    d5d2:	ff 4f       	sbci	r31, 0xFF	; 255
    d5d4:	90 81       	ld	r25, Z
    d5d6:	69 27       	eor	r22, r25
    d5d8:	60 83       	st	Z, r22
    d5da:	c3 cf       	rjmp	.-122    	; 0xd562 <TinyGPSPlus::encode(char)+0x86>

0000d5dc <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)>:
_ZN11TinyGPSPlus12insertCustomEP13TinyGPSCustomPKci():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:491
{
   strncpy(this->stagingBuffer, term, sizeof(this->stagingBuffer));
}

void TinyGPSPlus::insertCustom(TinyGPSCustom *pElt, const char *sentenceName, int termNumber)
{
    d5dc:	af 92       	push	r10
    d5de:	bf 92       	push	r11
    d5e0:	cf 92       	push	r12
    d5e2:	df 92       	push	r13
    d5e4:	ef 92       	push	r14
    d5e6:	ff 92       	push	r15
    d5e8:	0f 93       	push	r16
    d5ea:	1f 93       	push	r17
    d5ec:	cf 93       	push	r28
    d5ee:	df 93       	push	r29
    d5f0:	7b 01       	movw	r14, r22
    d5f2:	5a 01       	movw	r10, r20
    d5f4:	69 01       	movw	r12, r18
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:494
   TinyGPSCustom **ppelt;

   for (ppelt = &this->customElts; *ppelt != NULL; ppelt = &(*ppelt)->next)
    d5f6:	8c 01       	movw	r16, r24
    d5f8:	07 56       	subi	r16, 0x67	; 103
    d5fa:	1f 4f       	sbci	r17, 0xFF	; 255
    d5fc:	f8 01       	movw	r30, r16
    d5fe:	c0 81       	ld	r28, Z
    d600:	d1 81       	ldd	r29, Z+1	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:494 (discriminator 1)
    d602:	20 97       	sbiw	r28, 0x00	; 0
    d604:	a9 f0       	breq	.+42     	; 0xd630 <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)+0x54>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:496
   {
      int cmp = strcmp(sentenceName, (*ppelt)->sentenceName);
    d606:	6e a1       	ldd	r22, Y+38	; 0x26
    d608:	7f a1       	ldd	r23, Y+39	; 0x27
    d60a:	c5 01       	movw	r24, r10
    d60c:	0e 94 da 76 	call	0xedb4	; 0xedb4 <strcmp>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:497
      if (cmp < 0 || (cmp == 0 && termNumber < (*ppelt)->termNumber))
    d610:	97 fd       	sbrc	r25, 7
    d612:	0e c0       	rjmp	.+28     	; 0xd630 <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)+0x54>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:497 (discriminator 1)
    d614:	89 2b       	or	r24, r25
    d616:	29 f4       	brne	.+10     	; 0xd622 <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)+0x46>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:497 (discriminator 2)
    d618:	88 a5       	ldd	r24, Y+40	; 0x28
    d61a:	99 a5       	ldd	r25, Y+41	; 0x29
    d61c:	c8 16       	cp	r12, r24
    d61e:	d9 06       	cpc	r13, r25
    d620:	3c f0       	brlt	.+14     	; 0xd630 <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)+0x54>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:494 (discriminator 2)

void TinyGPSPlus::insertCustom(TinyGPSCustom *pElt, const char *sentenceName, int termNumber)
{
   TinyGPSCustom **ppelt;

   for (ppelt = &this->customElts; *ppelt != NULL; ppelt = &(*ppelt)->next)
    d622:	8e 01       	movw	r16, r28
    d624:	06 5d       	subi	r16, 0xD6	; 214
    d626:	1f 4f       	sbci	r17, 0xFF	; 255
    d628:	0a a4       	ldd	r0, Y+42	; 0x2a
    d62a:	db a5       	ldd	r29, Y+43	; 0x2b
    d62c:	c0 2d       	mov	r28, r0
    d62e:	e9 cf       	rjmp	.-46     	; 0xd602 <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)+0x26>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:501
      int cmp = strcmp(sentenceName, (*ppelt)->sentenceName);
      if (cmp < 0 || (cmp == 0 && termNumber < (*ppelt)->termNumber))
         break;
   }

   pElt->next = *ppelt;
    d630:	f7 01       	movw	r30, r14
    d632:	d3 a7       	std	Z+43, r29	; 0x2b
    d634:	c2 a7       	std	Z+42, r28	; 0x2a
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:502
   *ppelt = pElt;
    d636:	f8 01       	movw	r30, r16
    d638:	f1 82       	std	Z+1, r15	; 0x01
    d63a:	e0 82       	st	Z, r14
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:503
}
    d63c:	df 91       	pop	r29
    d63e:	cf 91       	pop	r28
    d640:	1f 91       	pop	r17
    d642:	0f 91       	pop	r16
    d644:	ff 90       	pop	r15
    d646:	ef 90       	pop	r14
    d648:	df 90       	pop	r13
    d64a:	cf 90       	pop	r12
    d64c:	bf 90       	pop	r11
    d64e:	af 90       	pop	r10
    d650:	08 95       	ret

0000d652 <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>:
_ZN13TinyGPSCustom5beginER11TinyGPSPlusPKci():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:466
{
   begin(gps, _sentenceName, _termNumber);
}

void TinyGPSCustom::begin(TinyGPSPlus &gps, const char *_sentenceName, int _termNumber)
{
    d652:	cf 93       	push	r28
    d654:	df 93       	push	r29
    d656:	fc 01       	movw	r30, r24
    d658:	db 01       	movw	r26, r22
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:467
   lastCommitTime = 0;
    d65a:	10 a2       	std	Z+32, r1	; 0x20
    d65c:	11 a2       	std	Z+33, r1	; 0x21
    d65e:	12 a2       	std	Z+34, r1	; 0x22
    d660:	13 a2       	std	Z+35, r1	; 0x23
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:468
   updated = valid = false;
    d662:	14 a2       	std	Z+36, r1	; 0x24
    d664:	15 a2       	std	Z+37, r1	; 0x25
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:469
   sentenceName = _sentenceName;
    d666:	57 a3       	std	Z+39, r21	; 0x27
    d668:	46 a3       	std	Z+38, r20	; 0x26
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:470
   termNumber = _termNumber;
    d66a:	31 a7       	std	Z+41, r19	; 0x29
    d66c:	20 a7       	std	Z+40, r18	; 0x28
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:471
   memset(stagingBuffer, '\0', sizeof(stagingBuffer));
    d66e:	90 e1       	ldi	r25, 0x10	; 16
    d670:	ef 01       	movw	r28, r30
    d672:	89 2f       	mov	r24, r25
    d674:	19 92       	st	Y+, r1
    d676:	8a 95       	dec	r24
    d678:	e9 f7       	brne	.-6      	; 0xd674 <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)+0x22>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:472
   memset(buffer, '\0', sizeof(buffer));
    d67a:	bf 01       	movw	r22, r30
    d67c:	60 5f       	subi	r22, 0xF0	; 240
    d67e:	7f 4f       	sbci	r23, 0xFF	; 255
    d680:	eb 01       	movw	r28, r22
    d682:	19 92       	st	Y+, r1
    d684:	9a 95       	dec	r25
    d686:	e9 f7       	brne	.-6      	; 0xd682 <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)+0x30>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:475

   // Insert this item into the GPS tree
   gps.insertCustom(this, _sentenceName, _termNumber);
    d688:	bf 01       	movw	r22, r30
    d68a:	cd 01       	movw	r24, r26
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:476
}
    d68c:	df 91       	pop	r29
    d68e:	cf 91       	pop	r28
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:475
   termNumber = _termNumber;
   memset(stagingBuffer, '\0', sizeof(stagingBuffer));
   memset(buffer, '\0', sizeof(buffer));

   // Insert this item into the GPS tree
   gps.insertCustom(this, _sentenceName, _termNumber);
    d690:	0c 94 ee 6a 	jmp	0xd5dc	; 0xd5dc <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)>

0000d694 <TinyGPSCustom::TinyGPSCustom(TinyGPSPlus&, char const*, int)>:
_ZN13TinyGPSCustomC2ER11TinyGPSPlusPKci():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:462
   newval = atol(term);
}

TinyGPSCustom::TinyGPSCustom(TinyGPSPlus &gps, const char *_sentenceName, int _termNumber)
{
   begin(gps, _sentenceName, _termNumber);
    d694:	0c 94 29 6b 	jmp	0xd652	; 0xd652 <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>

0000d698 <DHTNEW::reset()>:
_ZN6DHTNEW5resetEv():
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:86
  reset();
};


void DHTNEW::reset()
{
    d698:	cf 93       	push	r28
    d69a:	df 93       	push	r29
    d69c:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:88
  // Data-bus's free status is high voltage level.
  pinMode(_dataPin, OUTPUT);
    d69e:	61 e0       	ldi	r22, 0x01	; 1
    d6a0:	88 81       	ld	r24, Y
    d6a2:	0e 94 66 6d 	call	0xdacc	; 0xdacc <pinMode>
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:89
  digitalWrite(_dataPin, HIGH);
    d6a6:	61 e0       	ldi	r22, 0x01	; 1
    d6a8:	88 81       	ld	r24, Y
    d6aa:	0e 94 a2 6d 	call	0xdb44	; 0xdb44 <digitalWrite>
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:91

  _wakeupDelay   = 0;
    d6ae:	19 82       	std	Y+1, r1	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:92
  _type          = 0;
    d6b0:	1a 82       	std	Y+2, r1	; 0x02
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:93
  _humOffset     = 0.0;
    d6b2:	1b 82       	std	Y+3, r1	; 0x03
    d6b4:	1c 82       	std	Y+4, r1	; 0x04
    d6b6:	1d 82       	std	Y+5, r1	; 0x05
    d6b8:	1e 82       	std	Y+6, r1	; 0x06
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:94
  _tempOffset    = 0.0;
    d6ba:	1f 82       	std	Y+7, r1	; 0x07
    d6bc:	18 86       	std	Y+8, r1	; 0x08
    d6be:	19 86       	std	Y+9, r1	; 0x09
    d6c0:	1a 86       	std	Y+10, r1	; 0x0a
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:95
  _humidity      = 0.0;
    d6c2:	1b 86       	std	Y+11, r1	; 0x0b
    d6c4:	1c 86       	std	Y+12, r1	; 0x0c
    d6c6:	1d 86       	std	Y+13, r1	; 0x0d
    d6c8:	1e 86       	std	Y+14, r1	; 0x0e
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:96
  _temperature   = 0.0;
    d6ca:	1f 86       	std	Y+15, r1	; 0x0f
    d6cc:	18 8a       	std	Y+16, r1	; 0x10
    d6ce:	19 8a       	std	Y+17, r1	; 0x11
    d6d0:	1a 8a       	std	Y+18, r1	; 0x12
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:97
  _lastRead      = 0;
    d6d2:	1b 8a       	std	Y+19, r1	; 0x13
    d6d4:	1c 8a       	std	Y+20, r1	; 0x14
    d6d6:	1d 8a       	std	Y+21, r1	; 0x15
    d6d8:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:99
  _disableIRQ    = true;
  _waitForRead   = false;
    d6da:	18 8e       	std	Y+24, r1	; 0x18
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:100
  _suppressError = false;
    d6dc:	19 8e       	std	Y+25, r1	; 0x19
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:101
  _readDelay     = 0;
    d6de:	1b 8e       	std	Y+27, r1	; 0x1b
    d6e0:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:103
#if defined(__AVR__)
  _disableIRQ    = false;
    d6e2:	1f 8a       	std	Y+23, r1	; 0x17
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:108
#endif
// #if defined(MKR1010)  // TODO find out real define 
  // _disableIRQ    = false;
// #endif
}
    d6e4:	df 91       	pop	r29
    d6e6:	cf 91       	pop	r28
    d6e8:	08 95       	ret

0000d6ea <DHTNEW::DHTNEW(unsigned char)>:
_ZN6DHTNEWC2Eh():
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:78

/////////////////////////////////////////////////////
//
// PUBLIC
//
DHTNEW::DHTNEW(uint8_t pin)
    d6ea:	fc 01       	movw	r30, r24
    d6ec:	11 82       	std	Z+1, r1	; 0x01
    d6ee:	12 82       	std	Z+2, r1	; 0x02
    d6f0:	13 82       	std	Z+3, r1	; 0x03
    d6f2:	14 82       	std	Z+4, r1	; 0x04
    d6f4:	15 82       	std	Z+5, r1	; 0x05
    d6f6:	16 82       	std	Z+6, r1	; 0x06
    d6f8:	17 82       	std	Z+7, r1	; 0x07
    d6fa:	10 86       	std	Z+8, r1	; 0x08
    d6fc:	11 86       	std	Z+9, r1	; 0x09
    d6fe:	12 86       	std	Z+10, r1	; 0x0a
    d700:	13 86       	std	Z+11, r1	; 0x0b
    d702:	14 86       	std	Z+12, r1	; 0x0c
    d704:	15 86       	std	Z+13, r1	; 0x0d
    d706:	16 86       	std	Z+14, r1	; 0x0e
    d708:	17 86       	std	Z+15, r1	; 0x0f
    d70a:	10 8a       	std	Z+16, r1	; 0x10
    d70c:	11 8a       	std	Z+17, r1	; 0x11
    d70e:	12 8a       	std	Z+18, r1	; 0x12
    d710:	13 8a       	std	Z+19, r1	; 0x13
    d712:	14 8a       	std	Z+20, r1	; 0x14
    d714:	15 8a       	std	Z+21, r1	; 0x15
    d716:	16 8a       	std	Z+22, r1	; 0x16
    d718:	81 e0       	ldi	r24, 0x01	; 1
    d71a:	87 8b       	std	Z+23, r24	; 0x17
    d71c:	10 8e       	std	Z+24, r1	; 0x18
    d71e:	11 8e       	std	Z+25, r1	; 0x19
    d720:	13 8e       	std	Z+27, r1	; 0x1b
    d722:	12 8e       	std	Z+26, r1	; 0x1a
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:80
{
  _dataPin = pin;
    d724:	60 83       	st	Z, r22
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:81
  reset();
    d726:	cf 01       	movw	r24, r30
    d728:	0c 94 4c 6b 	jmp	0xd698	; 0xd698 <DHTNEW::reset()>

0000d72c <nothing>:
nothing():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WInterrupts.c:358
        case 1:
          EIMSK &= ~(1 << INT1);
          break;
        case 2:
          EIMSK &= ~(1 << INT2);
          break; 
    d72c:	08 95       	ret

0000d72e <attachInterrupt>:
attachInterrupt():
    d72e:	83 30       	cpi	r24, 0x03	; 3
    d730:	60 f5       	brcc	.+88     	; 0xd78a <attachInterrupt+0x5c>
    d732:	e8 2f       	mov	r30, r24
    d734:	f0 e0       	ldi	r31, 0x00	; 0
    d736:	ee 0f       	add	r30, r30
    d738:	ff 1f       	adc	r31, r31
    d73a:	e9 56       	subi	r30, 0x69	; 105
    d73c:	fe 4f       	sbci	r31, 0xFE	; 254
    d73e:	71 83       	std	Z+1, r23	; 0x01
    d740:	60 83       	st	Z, r22
    d742:	81 30       	cpi	r24, 0x01	; 1
    d744:	51 f0       	breq	.+20     	; 0xd75a <attachInterrupt+0x2c>
    d746:	82 30       	cpi	r24, 0x02	; 2
    d748:	a1 f0       	breq	.+40     	; 0xd772 <attachInterrupt+0x44>
    d74a:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d74e:	8c 7f       	andi	r24, 0xFC	; 252
    d750:	48 2b       	or	r20, r24
    d752:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d756:	e8 9a       	sbi	0x1d, 0	; 29
    d758:	08 95       	ret
    d75a:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d75e:	83 7f       	andi	r24, 0xF3	; 243
    d760:	44 0f       	add	r20, r20
    d762:	55 1f       	adc	r21, r21
    d764:	44 0f       	add	r20, r20
    d766:	55 1f       	adc	r21, r21
    d768:	48 2b       	or	r20, r24
    d76a:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d76e:	e9 9a       	sbi	0x1d, 1	; 29
    d770:	08 95       	ret
    d772:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d776:	8f 7c       	andi	r24, 0xCF	; 207
    d778:	94 e0       	ldi	r25, 0x04	; 4
    d77a:	44 0f       	add	r20, r20
    d77c:	55 1f       	adc	r21, r21
    d77e:	9a 95       	dec	r25
    d780:	e1 f7       	brne	.-8      	; 0xd77a <attachInterrupt+0x4c>
    d782:	48 2b       	or	r20, r24
    d784:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d788:	ea 9a       	sbi	0x1d, 2	; 29
    d78a:	08 95       	ret

0000d78c <__vector_1>:
__vector_1():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WInterrupts.c:432
// ATmega164A/P, ATmega324A/P/PA/PB, ATmega644/P, ATmega1284/P    
#elif defined(__AVR_ATmega164A__) || defined(__AVR_ATmega164P__) || defined(__AVR_ATmega324A__) \
|| defined(__AVR_ATmega324P__) || defined(__AVR_ATmega324PA__) || defined(__AVR_ATmega324PB__) \
|| defined(__AVR_ATmega644__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega1284__) \
|| defined(__AVR_ATmega1284P__)
  IMPLEMENT_ISR(INT0_vect, EXTERNAL_INT_0)
    d78c:	1f 92       	push	r1
    d78e:	0f 92       	push	r0
    d790:	0f b6       	in	r0, 0x3f	; 63
    d792:	0f 92       	push	r0
    d794:	11 24       	eor	r1, r1
    d796:	0b b6       	in	r0, 0x3b	; 59
    d798:	0f 92       	push	r0
    d79a:	2f 93       	push	r18
    d79c:	3f 93       	push	r19
    d79e:	4f 93       	push	r20
    d7a0:	5f 93       	push	r21
    d7a2:	6f 93       	push	r22
    d7a4:	7f 93       	push	r23
    d7a6:	8f 93       	push	r24
    d7a8:	9f 93       	push	r25
    d7aa:	af 93       	push	r26
    d7ac:	bf 93       	push	r27
    d7ae:	ef 93       	push	r30
    d7b0:	ff 93       	push	r31
    d7b2:	e0 91 97 01 	lds	r30, 0x0197	; 0x800197 <intFunc>
    d7b6:	f0 91 98 01 	lds	r31, 0x0198	; 0x800198 <intFunc+0x1>
    d7ba:	09 95       	icall
    d7bc:	ff 91       	pop	r31
    d7be:	ef 91       	pop	r30
    d7c0:	bf 91       	pop	r27
    d7c2:	af 91       	pop	r26
    d7c4:	9f 91       	pop	r25
    d7c6:	8f 91       	pop	r24
    d7c8:	7f 91       	pop	r23
    d7ca:	6f 91       	pop	r22
    d7cc:	5f 91       	pop	r21
    d7ce:	4f 91       	pop	r20
    d7d0:	3f 91       	pop	r19
    d7d2:	2f 91       	pop	r18
    d7d4:	0f 90       	pop	r0
    d7d6:	0b be       	out	0x3b, r0	; 59
    d7d8:	0f 90       	pop	r0
    d7da:	0f be       	out	0x3f, r0	; 63
    d7dc:	0f 90       	pop	r0
    d7de:	1f 90       	pop	r1
    d7e0:	18 95       	reti

0000d7e2 <__vector_2>:
__vector_2():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WInterrupts.c:433
  IMPLEMENT_ISR(INT1_vect, EXTERNAL_INT_1)
    d7e2:	1f 92       	push	r1
    d7e4:	0f 92       	push	r0
    d7e6:	0f b6       	in	r0, 0x3f	; 63
    d7e8:	0f 92       	push	r0
    d7ea:	11 24       	eor	r1, r1
    d7ec:	0b b6       	in	r0, 0x3b	; 59
    d7ee:	0f 92       	push	r0
    d7f0:	2f 93       	push	r18
    d7f2:	3f 93       	push	r19
    d7f4:	4f 93       	push	r20
    d7f6:	5f 93       	push	r21
    d7f8:	6f 93       	push	r22
    d7fa:	7f 93       	push	r23
    d7fc:	8f 93       	push	r24
    d7fe:	9f 93       	push	r25
    d800:	af 93       	push	r26
    d802:	bf 93       	push	r27
    d804:	ef 93       	push	r30
    d806:	ff 93       	push	r31
    d808:	e0 91 99 01 	lds	r30, 0x0199	; 0x800199 <intFunc+0x2>
    d80c:	f0 91 9a 01 	lds	r31, 0x019A	; 0x80019a <intFunc+0x3>
    d810:	09 95       	icall
    d812:	ff 91       	pop	r31
    d814:	ef 91       	pop	r30
    d816:	bf 91       	pop	r27
    d818:	af 91       	pop	r26
    d81a:	9f 91       	pop	r25
    d81c:	8f 91       	pop	r24
    d81e:	7f 91       	pop	r23
    d820:	6f 91       	pop	r22
    d822:	5f 91       	pop	r21
    d824:	4f 91       	pop	r20
    d826:	3f 91       	pop	r19
    d828:	2f 91       	pop	r18
    d82a:	0f 90       	pop	r0
    d82c:	0b be       	out	0x3b, r0	; 59
    d82e:	0f 90       	pop	r0
    d830:	0f be       	out	0x3f, r0	; 63
    d832:	0f 90       	pop	r0
    d834:	1f 90       	pop	r1
    d836:	18 95       	reti

0000d838 <__vector_3>:
__vector_3():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WInterrupts.c:434
  IMPLEMENT_ISR(INT2_vect, EXTERNAL_INT_2)  
    d838:	1f 92       	push	r1
    d83a:	0f 92       	push	r0
    d83c:	0f b6       	in	r0, 0x3f	; 63
    d83e:	0f 92       	push	r0
    d840:	11 24       	eor	r1, r1
    d842:	0b b6       	in	r0, 0x3b	; 59
    d844:	0f 92       	push	r0
    d846:	2f 93       	push	r18
    d848:	3f 93       	push	r19
    d84a:	4f 93       	push	r20
    d84c:	5f 93       	push	r21
    d84e:	6f 93       	push	r22
    d850:	7f 93       	push	r23
    d852:	8f 93       	push	r24
    d854:	9f 93       	push	r25
    d856:	af 93       	push	r26
    d858:	bf 93       	push	r27
    d85a:	ef 93       	push	r30
    d85c:	ff 93       	push	r31
    d85e:	e0 91 9b 01 	lds	r30, 0x019B	; 0x80019b <intFunc+0x4>
    d862:	f0 91 9c 01 	lds	r31, 0x019C	; 0x80019c <intFunc+0x5>
    d866:	09 95       	icall
    d868:	ff 91       	pop	r31
    d86a:	ef 91       	pop	r30
    d86c:	bf 91       	pop	r27
    d86e:	af 91       	pop	r26
    d870:	9f 91       	pop	r25
    d872:	8f 91       	pop	r24
    d874:	7f 91       	pop	r23
    d876:	6f 91       	pop	r22
    d878:	5f 91       	pop	r21
    d87a:	4f 91       	pop	r20
    d87c:	3f 91       	pop	r19
    d87e:	2f 91       	pop	r18
    d880:	0f 90       	pop	r0
    d882:	0b be       	out	0x3b, r0	; 59
    d884:	0f 90       	pop	r0
    d886:	0f be       	out	0x3f, r0	; 63
    d888:	0f 90       	pop	r0
    d88a:	1f 90       	pop	r1
    d88c:	18 95       	reti

0000d88e <yield>:
__empty():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/hooks.c:30
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
  // Empty
}
    d88e:	08 95       	ret

0000d890 <__vector_18>:
__vector_18():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:939
    "   brne 1b"                     // 2 cycles
    : /* no outputs */
    : "w" (us)
  );
  // return = 4 cycles
}
    d890:	1f 92       	push	r1
    d892:	0f 92       	push	r0
    d894:	0f b6       	in	r0, 0x3f	; 63
    d896:	0f 92       	push	r0
    d898:	11 24       	eor	r1, r1
    d89a:	2f 93       	push	r18
    d89c:	3f 93       	push	r19
    d89e:	8f 93       	push	r24
    d8a0:	9f 93       	push	r25
    d8a2:	af 93       	push	r26
    d8a4:	bf 93       	push	r27
    d8a6:	80 91 d3 0a 	lds	r24, 0x0AD3	; 0x800ad3 <timer0_millis>
    d8aa:	90 91 d4 0a 	lds	r25, 0x0AD4	; 0x800ad4 <timer0_millis+0x1>
    d8ae:	a0 91 d5 0a 	lds	r26, 0x0AD5	; 0x800ad5 <timer0_millis+0x2>
    d8b2:	b0 91 d6 0a 	lds	r27, 0x0AD6	; 0x800ad6 <timer0_millis+0x3>
    d8b6:	30 91 d2 0a 	lds	r19, 0x0AD2	; 0x800ad2 <timer0_fract>
    d8ba:	23 e0       	ldi	r18, 0x03	; 3
    d8bc:	23 0f       	add	r18, r19
    d8be:	2d 37       	cpi	r18, 0x7D	; 125
    d8c0:	68 f1       	brcs	.+90     	; 0xd91c <__vector_18+0x8c>
    d8c2:	26 e8       	ldi	r18, 0x86	; 134
    d8c4:	23 0f       	add	r18, r19
    d8c6:	02 96       	adiw	r24, 0x02	; 2
    d8c8:	a1 1d       	adc	r26, r1
    d8ca:	b1 1d       	adc	r27, r1
    d8cc:	20 93 d2 0a 	sts	0x0AD2, r18	; 0x800ad2 <timer0_fract>
    d8d0:	80 93 d3 0a 	sts	0x0AD3, r24	; 0x800ad3 <timer0_millis>
    d8d4:	90 93 d4 0a 	sts	0x0AD4, r25	; 0x800ad4 <timer0_millis+0x1>
    d8d8:	a0 93 d5 0a 	sts	0x0AD5, r26	; 0x800ad5 <timer0_millis+0x2>
    d8dc:	b0 93 d6 0a 	sts	0x0AD6, r27	; 0x800ad6 <timer0_millis+0x3>
    d8e0:	80 91 ce 0a 	lds	r24, 0x0ACE	; 0x800ace <timer0_overflow_count>
    d8e4:	90 91 cf 0a 	lds	r25, 0x0ACF	; 0x800acf <timer0_overflow_count+0x1>
    d8e8:	a0 91 d0 0a 	lds	r26, 0x0AD0	; 0x800ad0 <timer0_overflow_count+0x2>
    d8ec:	b0 91 d1 0a 	lds	r27, 0x0AD1	; 0x800ad1 <timer0_overflow_count+0x3>
    d8f0:	01 96       	adiw	r24, 0x01	; 1
    d8f2:	a1 1d       	adc	r26, r1
    d8f4:	b1 1d       	adc	r27, r1
    d8f6:	80 93 ce 0a 	sts	0x0ACE, r24	; 0x800ace <timer0_overflow_count>
    d8fa:	90 93 cf 0a 	sts	0x0ACF, r25	; 0x800acf <timer0_overflow_count+0x1>
    d8fe:	a0 93 d0 0a 	sts	0x0AD0, r26	; 0x800ad0 <timer0_overflow_count+0x2>
    d902:	b0 93 d1 0a 	sts	0x0AD1, r27	; 0x800ad1 <timer0_overflow_count+0x3>
    d906:	bf 91       	pop	r27
    d908:	af 91       	pop	r26
    d90a:	9f 91       	pop	r25
    d90c:	8f 91       	pop	r24
    d90e:	3f 91       	pop	r19
    d910:	2f 91       	pop	r18
    d912:	0f 90       	pop	r0
    d914:	0f be       	out	0x3f, r0	; 63
    d916:	0f 90       	pop	r0
    d918:	1f 90       	pop	r1
    d91a:	18 95       	reti
    d91c:	01 96       	adiw	r24, 0x01	; 1
    d91e:	a1 1d       	adc	r26, r1
    d920:	b1 1d       	adc	r27, r1
    d922:	d4 cf       	rjmp	.-88     	; 0xd8cc <__vector_18+0x3c>

0000d924 <millis>:
millis():
    d924:	2f b7       	in	r18, 0x3f	; 63
    d926:	f8 94       	cli
    d928:	60 91 d3 0a 	lds	r22, 0x0AD3	; 0x800ad3 <timer0_millis>
    d92c:	70 91 d4 0a 	lds	r23, 0x0AD4	; 0x800ad4 <timer0_millis+0x1>
    d930:	80 91 d5 0a 	lds	r24, 0x0AD5	; 0x800ad5 <timer0_millis+0x2>
    d934:	90 91 d6 0a 	lds	r25, 0x0AD6	; 0x800ad6 <timer0_millis+0x3>
    d938:	2f bf       	out	0x3f, r18	; 63
    d93a:	08 95       	ret

0000d93c <micros>:
micros():
    d93c:	3f b7       	in	r19, 0x3f	; 63
    d93e:	f8 94       	cli
    d940:	80 91 ce 0a 	lds	r24, 0x0ACE	; 0x800ace <timer0_overflow_count>
    d944:	90 91 cf 0a 	lds	r25, 0x0ACF	; 0x800acf <timer0_overflow_count+0x1>
    d948:	a0 91 d0 0a 	lds	r26, 0x0AD0	; 0x800ad0 <timer0_overflow_count+0x2>
    d94c:	b0 91 d1 0a 	lds	r27, 0x0AD1	; 0x800ad1 <timer0_overflow_count+0x3>
    d950:	26 b5       	in	r18, 0x26	; 38
    d952:	a8 9b       	sbis	0x15, 0	; 21
    d954:	05 c0       	rjmp	.+10     	; 0xd960 <micros+0x24>
    d956:	2f 3f       	cpi	r18, 0xFF	; 255
    d958:	19 f0       	breq	.+6      	; 0xd960 <micros+0x24>
    d95a:	01 96       	adiw	r24, 0x01	; 1
    d95c:	a1 1d       	adc	r26, r1
    d95e:	b1 1d       	adc	r27, r1
    d960:	3f bf       	out	0x3f, r19	; 63
    d962:	ba 2f       	mov	r27, r26
    d964:	a9 2f       	mov	r26, r25
    d966:	98 2f       	mov	r25, r24
    d968:	88 27       	eor	r24, r24
    d96a:	bc 01       	movw	r22, r24
    d96c:	cd 01       	movw	r24, r26
    d96e:	62 0f       	add	r22, r18
    d970:	71 1d       	adc	r23, r1
    d972:	81 1d       	adc	r24, r1
    d974:	91 1d       	adc	r25, r1
    d976:	42 e0       	ldi	r20, 0x02	; 2
    d978:	66 0f       	add	r22, r22
    d97a:	77 1f       	adc	r23, r23
    d97c:	88 1f       	adc	r24, r24
    d97e:	99 1f       	adc	r25, r25
    d980:	4a 95       	dec	r20
    d982:	d1 f7       	brne	.-12     	; 0xd978 <micros+0x3c>
    d984:	08 95       	ret

0000d986 <delay>:
delay():
    d986:	8f 92       	push	r8
    d988:	9f 92       	push	r9
    d98a:	af 92       	push	r10
    d98c:	bf 92       	push	r11
    d98e:	cf 92       	push	r12
    d990:	df 92       	push	r13
    d992:	ef 92       	push	r14
    d994:	ff 92       	push	r15
    d996:	6b 01       	movw	r12, r22
    d998:	7c 01       	movw	r14, r24
    d99a:	0e 94 9e 6c 	call	0xd93c	; 0xd93c <micros>
    d99e:	4b 01       	movw	r8, r22
    d9a0:	5c 01       	movw	r10, r24
    d9a2:	c1 14       	cp	r12, r1
    d9a4:	d1 04       	cpc	r13, r1
    d9a6:	e1 04       	cpc	r14, r1
    d9a8:	f1 04       	cpc	r15, r1
    d9aa:	e9 f0       	breq	.+58     	; 0xd9e6 <delay+0x60>
    d9ac:	0e 94 47 6c 	call	0xd88e	; 0xd88e <yield>
    d9b0:	0e 94 9e 6c 	call	0xd93c	; 0xd93c <micros>
    d9b4:	68 19       	sub	r22, r8
    d9b6:	79 09       	sbc	r23, r9
    d9b8:	8a 09       	sbc	r24, r10
    d9ba:	9b 09       	sbc	r25, r11
    d9bc:	68 3e       	cpi	r22, 0xE8	; 232
    d9be:	73 40       	sbci	r23, 0x03	; 3
    d9c0:	81 05       	cpc	r24, r1
    d9c2:	91 05       	cpc	r25, r1
    d9c4:	70 f3       	brcs	.-36     	; 0xd9a2 <delay+0x1c>
    d9c6:	21 e0       	ldi	r18, 0x01	; 1
    d9c8:	c2 1a       	sub	r12, r18
    d9ca:	d1 08       	sbc	r13, r1
    d9cc:	e1 08       	sbc	r14, r1
    d9ce:	f1 08       	sbc	r15, r1
    d9d0:	88 ee       	ldi	r24, 0xE8	; 232
    d9d2:	88 0e       	add	r8, r24
    d9d4:	83 e0       	ldi	r24, 0x03	; 3
    d9d6:	98 1e       	adc	r9, r24
    d9d8:	a1 1c       	adc	r10, r1
    d9da:	b1 1c       	adc	r11, r1
    d9dc:	c1 14       	cp	r12, r1
    d9de:	d1 04       	cpc	r13, r1
    d9e0:	e1 04       	cpc	r14, r1
    d9e2:	f1 04       	cpc	r15, r1
    d9e4:	29 f7       	brne	.-54     	; 0xd9b0 <delay+0x2a>
    d9e6:	ff 90       	pop	r15
    d9e8:	ef 90       	pop	r14
    d9ea:	df 90       	pop	r13
    d9ec:	cf 90       	pop	r12
    d9ee:	bf 90       	pop	r11
    d9f0:	af 90       	pop	r10
    d9f2:	9f 90       	pop	r9
    d9f4:	8f 90       	pop	r8
    d9f6:	08 95       	ret

0000d9f8 <init>:
init():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:945

void init()
{
  // this needs to be called before setup() or some functions won't
  // work there
  sei();
    d9f8:	78 94       	sei
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:957

  // On the ATmega168, timer 0 is also used for fast hardware pwm
  // (using phase-correct PWM would mean that timer 0 overflowed half as often
  // resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
  TCCR0A |= _BV(WGM01) | _BV(WGM00);
    d9fa:	84 b5       	in	r24, 0x24	; 36
    d9fc:	83 60       	ori	r24, 0x03	; 3
    d9fe:	84 bd       	out	0x24, r24	; 36
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:972
  #if defined(WGM00) && defined(WGM01) // The ATmega8 doesn't have WGM00 and WGM01
    TCCR0 |= _BV(WGM01) | _BV(WGM00);
  #endif
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
  // This combination is for the standard 168/328/640/1280/1281/2560/2561
  TCCR0B |= _BV(CS01) | _BV(CS00);
    da00:	85 b5       	in	r24, 0x25	; 37
    da02:	83 60       	ori	r24, 0x03	; 3
    da04:	85 bd       	out	0x25, r24	; 37
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:984

// Enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
  TIMSK |= _BV(TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
  TIMSK0 |= _BV(TOIE0);
    da06:	ee e6       	ldi	r30, 0x6E	; 110
    da08:	f0 e0       	ldi	r31, 0x00	; 0
    da0a:	80 81       	ld	r24, Z
    da0c:	81 60       	ori	r24, 0x01	; 1
    da0e:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:995
// this is better for motors as it ensures an even waveform
// note, however, that fast pwm mode can achieve a frequency of up
// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
  TCCR1B = _BV(CS11); // Set timer 1 prescale factor to 64
    da10:	e1 e8       	ldi	r30, 0x81	; 129
    da12:	f0 e0       	ldi	r31, 0x00	; 0
    da14:	82 e0       	ldi	r24, 0x02	; 2
    da16:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:997
#if F_CPU >= 8000000L
  TCCR1B |= _BV(CS10);
    da18:	80 81       	ld	r24, Z
    da1a:	81 60       	ori	r24, 0x01	; 1
    da1c:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1006
#if F_CPU >= 8000000L
  TCCR1 |= _BV(CS10);
#endif
#endif
#if defined(TCCR1A) && defined(WGM10)
  TCCR1A |= _BV(WGM10); // Put timer 1 in 8-bit phase correct pwm mode
    da1e:	e0 e8       	ldi	r30, 0x80	; 128
    da20:	f0 e0       	ldi	r31, 0x00	; 0
    da22:	80 81       	ld	r24, Z
    da24:	81 60       	ori	r24, 0x01	; 1
    da26:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1013

// Set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
  TCCR2 |= _BV(CS22);
#elif defined(TCCR2B) && defined(CS22)
  TCCR2B |= _BV(CS22);
    da28:	e1 eb       	ldi	r30, 0xB1	; 177
    da2a:	f0 e0       	ldi	r31, 0x00	; 0
    da2c:	80 81       	ld	r24, Z
    da2e:	84 60       	ori	r24, 0x04	; 4
    da30:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1022

// Configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
  TCCR2 |= _BV(WGM20);
#elif defined(TCCR2A) && defined(WGM20)
  TCCR2A |= _BV(WGM20);
    da32:	e0 eb       	ldi	r30, 0xB0	; 176
    da34:	f0 e0       	ldi	r31, 0x00	; 0
    da36:	80 81       	ld	r24, Z
    da38:	81 60       	ori	r24, 0x01	; 1
    da3a:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1028
//#else
  // Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
  TCCR3B |= _BV(CS31) | _BV(CS30); // Set timer 3 prescale factor to 64
    da3c:	e1 e9       	ldi	r30, 0x91	; 145
    da3e:	f0 e0       	ldi	r31, 0x00	; 0
    da40:	80 81       	ld	r24, Z
    da42:	83 60       	ori	r24, 0x03	; 3
    da44:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1029
  TCCR3A |= _BV(WGM30);            // Put timer 3 in 8-bit phase correct pwm mode
    da46:	e0 e9       	ldi	r30, 0x90	; 144
    da48:	f0 e0       	ldi	r31, 0x00	; 0
    da4a:	80 81       	ld	r24, Z
    da4c:	81 60       	ori	r24, 0x01	; 1
    da4e:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1050
#endif

#if defined(ADCSRA)
  // set a2d prescaler so we are inside the desired 50-200 KHz range.
  #if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0) | _BV(ADEN);
    da50:	87 e8       	ldi	r24, 0x87	; 135
    da52:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1070
  // here so they can be used as normal digital i/o; they will be
  // reconnected in Serial.begin()
#if defined(UCSRB)
  UCSRB = 0;
#elif defined(UCSR0B)
  UCSR0B = 0;
    da56:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1072
#endif
}
    da5a:	08 95       	ret

0000da5c <turnOffPWM>:
turnOffPWM():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:77
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
  switch (timer)
    da5c:	82 50       	subi	r24, 0x02	; 2
    da5e:	8a 30       	cpi	r24, 0x0A	; 10
    da60:	88 f5       	brcc	.+98     	; 0xdac4 <turnOffPWM+0x68>
    da62:	e8 2f       	mov	r30, r24
    da64:	f0 e0       	ldi	r31, 0x00	; 0
    da66:	e9 5c       	subi	r30, 0xC9	; 201
    da68:	f2 49       	sbci	r31, 0x92	; 146
    da6a:	0c 94 25 75 	jmp	0xea4a	; 0xea4a <__tablejump2__>
    da6e:	5f 6d       	ori	r21, 0xDF	; 223
    da70:	63 6d       	ori	r22, 0xD3	; 211
    da72:	41 6d       	ori	r20, 0xD1	; 209
    da74:	47 6d       	ori	r20, 0xD7	; 215
    da76:	62 6d       	ori	r22, 0xD2	; 210
    da78:	62 6d       	ori	r22, 0xD2	; 210
    da7a:	4b 6d       	ori	r20, 0xDB	; 219
    da7c:	51 6d       	ori	r21, 0xD1	; 209
    da7e:	55 6d       	ori	r21, 0xD5	; 213
    da80:	5b 6d       	ori	r21, 0xDB	; 219
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:82
  {
    // Timer1
    #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        TCCR1A &= ~_BV(COM1A1);
    da82:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    da86:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:87
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
    da88:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:88
        break;
    da8c:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:87
        TCCR1A &= ~_BV(COM1A1);
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
    da8e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    da92:	8f 7d       	andi	r24, 0xDF	; 223
    da94:	f9 cf       	rjmp	.-14     	; 0xda88 <turnOffPWM+0x2c>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:104
        TCCR2 &= ~_BV(COM21);
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2A1)
      case TIMER2A:
        TCCR2A &= ~_BV(COM2A1);
    da96:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    da9a:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:109
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2B1)
      case TIMER2B:
        TCCR2A &= ~_BV(COM2B1);
    da9c:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:110
        break;
    daa0:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:109
        TCCR2A &= ~_BV(COM2A1);
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2B1)
      case TIMER2B:
        TCCR2A &= ~_BV(COM2B1);
    daa2:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    daa6:	8f 7d       	andi	r24, 0xDF	; 223
    daa8:	f9 cf       	rjmp	.-14     	; 0xda9c <turnOffPWM+0x40>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:116
    #endif

    // Timer3
    #if defined(TCCR3A) && defined(COM3A1)
      case TIMER3A:
        TCCR3A &= ~_BV(COM3A1);
    daaa:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    daae:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:121
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3B1)
      case TIMER3B:
        TCCR3A &= ~_BV(COM3B1);
    dab0:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:122
        break;
    dab4:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:121
        TCCR3A &= ~_BV(COM3A1);
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3B1)
      case TIMER3B:
        TCCR3A &= ~_BV(COM3B1);
    dab6:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    daba:	8f 7d       	andi	r24, 0xDF	; 223
    dabc:	f9 cf       	rjmp	.-14     	; 0xdab0 <turnOffPWM+0x54>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:176
        TCCR0 &= ~_BV(COM01);
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0A1)
      case TIMER0A:
        TCCR0A &= ~_BV(COM0A1);
    dabe:	84 b5       	in	r24, 0x24	; 36
    dac0:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:181
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0B1)
      case TIMER0B:
        TCCR0A &= ~_BV(COM0B1);
    dac2:	84 bd       	out	0x24, r24	; 36
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:185
        break;
    #endif
  }
}
    dac4:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:181
        TCCR0A &= ~_BV(COM0A1);
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0B1)
      case TIMER0B:
        TCCR0A &= ~_BV(COM0B1);
    dac6:	84 b5       	in	r24, 0x24	; 36
    dac8:	8f 7d       	andi	r24, 0xDF	; 223
    daca:	fb cf       	rjmp	.-10     	; 0xdac2 <turnOffPWM+0x66>

0000dacc <pinMode>:
pinMode():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:30
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    dacc:	cf 93       	push	r28
    dace:	df 93       	push	r29
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:31
  uint8_t bit = digitalPinToBitMask(pin);
    dad0:	90 e0       	ldi	r25, 0x00	; 0
    dad2:	fc 01       	movw	r30, r24
    dad4:	e0 59       	subi	r30, 0x90	; 144
    dad6:	ff 4d       	sbci	r31, 0xDF	; 223
    dad8:	24 91       	lpm	r18, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:32
  uint8_t port = digitalPinToPort(pin);
    dada:	80 57       	subi	r24, 0x70	; 112
    dadc:	9f 4d       	sbci	r25, 0xDF	; 223
    dade:	fc 01       	movw	r30, r24
    dae0:	84 91       	lpm	r24, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:35
  volatile uint8_t *reg, *out;

  if (port == NOT_A_PIN) return;
    dae2:	88 23       	and	r24, r24
    dae4:	c9 f0       	breq	.+50     	; 0xdb18 <pinMode+0x4c>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:38

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
    dae6:	90 e0       	ldi	r25, 0x00	; 0
    dae8:	88 0f       	add	r24, r24
    daea:	99 1f       	adc	r25, r25
    daec:	fc 01       	movw	r30, r24
    daee:	ec 53       	subi	r30, 0x3C	; 60
    daf0:	ff 4d       	sbci	r31, 0xDF	; 223
    daf2:	a5 91       	lpm	r26, Z+
    daf4:	b4 91       	lpm	r27, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:39
  out = portOutputRegister(port);
    daf6:	fc 01       	movw	r30, r24
    daf8:	e6 54       	subi	r30, 0x46	; 70
    dafa:	ff 4d       	sbci	r31, 0xDF	; 223
    dafc:	c5 91       	lpm	r28, Z+
    dafe:	d4 91       	lpm	r29, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:41

  if (mode == INPUT) { 
    db00:	61 11       	cpse	r22, r1
    db02:	0d c0       	rjmp	.+26     	; 0xdb1e <pinMode+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:42
    uint8_t oldSREG = SREG;
    db04:	9f b7       	in	r25, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:43
    cli();
    db06:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:44
    *reg &= ~bit;
    db08:	8c 91       	ld	r24, X
    db0a:	20 95       	com	r18
    db0c:	82 23       	and	r24, r18
    db0e:	8c 93       	st	X, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:45
    *out &= ~bit;
    db10:	88 81       	ld	r24, Y
    db12:	28 23       	and	r18, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:51
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out |= bit;
    db14:	28 83       	st	Y, r18
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:52
    SREG = oldSREG;
    db16:	9f bf       	out	0x3f, r25	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:59
    uint8_t oldSREG = SREG;
    cli();
    *reg |= bit;
    SREG = oldSREG;
  }
}
    db18:	df 91       	pop	r29
    db1a:	cf 91       	pop	r28
    db1c:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:47
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    db1e:	62 30       	cpi	r22, 0x02	; 2
    db20:	51 f4       	brne	.+20     	; 0xdb36 <pinMode+0x6a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:48
    uint8_t oldSREG = SREG;
    db22:	9f b7       	in	r25, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:49
    cli();
    db24:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:50
    *reg &= ~bit;
    db26:	3c 91       	ld	r19, X
    db28:	82 2f       	mov	r24, r18
    db2a:	80 95       	com	r24
    db2c:	83 23       	and	r24, r19
    db2e:	8c 93       	st	X, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:51
    *out |= bit;
    db30:	e8 81       	ld	r30, Y
    db32:	2e 2b       	or	r18, r30
    db34:	ef cf       	rjmp	.-34     	; 0xdb14 <pinMode+0x48>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:54
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
    db36:	8f b7       	in	r24, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:55
    cli();
    db38:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:56
    *reg |= bit;
    db3a:	ec 91       	ld	r30, X
    db3c:	2e 2b       	or	r18, r30
    db3e:	2c 93       	st	X, r18
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:57
    SREG = oldSREG;
    db40:	8f bf       	out	0x3f, r24	; 63
    db42:	ea cf       	rjmp	.-44     	; 0xdb18 <pinMode+0x4c>

0000db44 <digitalWrite>:
digitalWrite():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:188
    #endif
  }
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    db44:	1f 93       	push	r17
    db46:	cf 93       	push	r28
    db48:	df 93       	push	r29
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:189
  uint8_t timer = digitalPinToTimer(pin);
    db4a:	28 2f       	mov	r18, r24
    db4c:	30 e0       	ldi	r19, 0x00	; 0
    db4e:	f9 01       	movw	r30, r18
    db50:	e0 5b       	subi	r30, 0xB0	; 176
    db52:	ff 4d       	sbci	r31, 0xDF	; 223
    db54:	84 91       	lpm	r24, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:190
  uint8_t bit = digitalPinToBitMask(pin);
    db56:	f9 01       	movw	r30, r18
    db58:	e0 59       	subi	r30, 0x90	; 144
    db5a:	ff 4d       	sbci	r31, 0xDF	; 223
    db5c:	d4 91       	lpm	r29, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:191
  uint8_t port = digitalPinToPort(pin);
    db5e:	f9 01       	movw	r30, r18
    db60:	e0 57       	subi	r30, 0x70	; 112
    db62:	ff 4d       	sbci	r31, 0xDF	; 223
    db64:	c4 91       	lpm	r28, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:194
  volatile uint8_t *out;

  if (port == NOT_A_PIN) return;
    db66:	cc 23       	and	r28, r28
    db68:	a9 f0       	breq	.+42     	; 0xdb94 <digitalWrite+0x50>
    db6a:	16 2f       	mov	r17, r22
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:198

  // If the pin that support PWM output, we need to turn it off
  // before doing a digital write.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    db6c:	81 11       	cpse	r24, r1
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:198 (discriminator 1)
    db6e:	0e 94 2e 6d 	call	0xda5c	; 0xda5c <turnOffPWM>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:200

  out = portOutputRegister(port);
    db72:	ec 2f       	mov	r30, r28
    db74:	f0 e0       	ldi	r31, 0x00	; 0
    db76:	ee 0f       	add	r30, r30
    db78:	ff 1f       	adc	r31, r31
    db7a:	e6 54       	subi	r30, 0x46	; 70
    db7c:	ff 4d       	sbci	r31, 0xDF	; 223
    db7e:	a5 91       	lpm	r26, Z+
    db80:	b4 91       	lpm	r27, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:202

  uint8_t oldSREG = SREG;
    db82:	8f b7       	in	r24, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:203
  cli();
    db84:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:206

  if (val == LOW) {
    *out &= ~bit;
    db86:	ec 91       	ld	r30, X
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:205
  out = portOutputRegister(port);

  uint8_t oldSREG = SREG;
  cli();

  if (val == LOW) {
    db88:	11 11       	cpse	r17, r1
    db8a:	08 c0       	rjmp	.+16     	; 0xdb9c <digitalWrite+0x58>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:206
    *out &= ~bit;
    db8c:	d0 95       	com	r29
    db8e:	de 23       	and	r29, r30
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:208
  } else {
    *out |= bit;
    db90:	dc 93       	st	X, r29
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:211
  }

  SREG = oldSREG;
    db92:	8f bf       	out	0x3f, r24	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:212
}
    db94:	df 91       	pop	r29
    db96:	cf 91       	pop	r28
    db98:	1f 91       	pop	r17
    db9a:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:208
  cli();

  if (val == LOW) {
    *out &= ~bit;
  } else {
    *out |= bit;
    db9c:	de 2b       	or	r29, r30
    db9e:	f8 cf       	rjmp	.-16     	; 0xdb90 <digitalWrite+0x4c>

0000dba0 <digitalRead>:
digitalRead():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:215

  SREG = oldSREG;
}

int digitalRead(uint8_t pin)
{
    dba0:	cf 93       	push	r28
    dba2:	df 93       	push	r29
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:216
  uint8_t timer = digitalPinToTimer(pin);
    dba4:	28 2f       	mov	r18, r24
    dba6:	30 e0       	ldi	r19, 0x00	; 0
    dba8:	f9 01       	movw	r30, r18
    dbaa:	e0 5b       	subi	r30, 0xB0	; 176
    dbac:	ff 4d       	sbci	r31, 0xDF	; 223
    dbae:	84 91       	lpm	r24, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:217
  uint8_t bit = digitalPinToBitMask(pin);
    dbb0:	f9 01       	movw	r30, r18
    dbb2:	e0 59       	subi	r30, 0x90	; 144
    dbb4:	ff 4d       	sbci	r31, 0xDF	; 223
    dbb6:	d4 91       	lpm	r29, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:218
  uint8_t port = digitalPinToPort(pin);
    dbb8:	f9 01       	movw	r30, r18
    dbba:	e0 57       	subi	r30, 0x70	; 112
    dbbc:	ff 4d       	sbci	r31, 0xDF	; 223
    dbbe:	c4 91       	lpm	r28, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:220

  if (port == NOT_A_PIN) return LOW;
    dbc0:	cc 23       	and	r28, r28
    dbc2:	a1 f0       	breq	.+40     	; 0xdbec <digitalRead+0x4c>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:224

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    dbc4:	81 11       	cpse	r24, r1
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:224 (discriminator 1)
    dbc6:	0e 94 2e 6d 	call	0xda5c	; 0xda5c <turnOffPWM>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:226

  if (*portInputRegister(port) & bit) return HIGH;
    dbca:	ec 2f       	mov	r30, r28
    dbcc:	f0 e0       	ldi	r31, 0x00	; 0
    dbce:	ee 0f       	add	r30, r30
    dbd0:	ff 1f       	adc	r31, r31
    dbd2:	e0 55       	subi	r30, 0x50	; 80
    dbd4:	ff 4d       	sbci	r31, 0xDF	; 223
    dbd6:	a5 91       	lpm	r26, Z+
    dbd8:	b4 91       	lpm	r27, Z
    dbda:	ec 91       	ld	r30, X
    dbdc:	ed 23       	and	r30, r29
    dbde:	81 e0       	ldi	r24, 0x01	; 1
    dbe0:	90 e0       	ldi	r25, 0x00	; 0
    dbe2:	09 f4       	brne	.+2      	; 0xdbe6 <digitalRead+0x46>
    dbe4:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:228
  return LOW;
}
    dbe6:	df 91       	pop	r29
    dbe8:	cf 91       	pop	r28
    dbea:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:220
{
  uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);

  if (port == NOT_A_PIN) return LOW;
    dbec:	80 e0       	ldi	r24, 0x00	; 0
    dbee:	90 e0       	ldi	r25, 0x00	; 0
    dbf0:	fa cf       	rjmp	.-12     	; 0xdbe6 <digitalRead+0x46>

0000dbf2 <Print::write(unsigned char const*, unsigned int)>:
_ZN5Print5writeEPKhj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:185
size_t Print::println(unsigned long num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    dbf2:	af 92       	push	r10
    dbf4:	bf 92       	push	r11
    dbf6:	cf 92       	push	r12
    dbf8:	df 92       	push	r13
    dbfa:	ef 92       	push	r14
    dbfc:	ff 92       	push	r15
    dbfe:	0f 93       	push	r16
    dc00:	1f 93       	push	r17
    dc02:	cf 93       	push	r28
    dc04:	df 93       	push	r29
    dc06:	6c 01       	movw	r12, r24
    dc08:	7b 01       	movw	r14, r22
    dc0a:	8b 01       	movw	r16, r22
    dc0c:	04 0f       	add	r16, r20
    dc0e:	15 1f       	adc	r17, r21
    dc10:	eb 01       	movw	r28, r22
    dc12:	5e 01       	movw	r10, r28
    dc14:	ae 18       	sub	r10, r14
    dc16:	bf 08       	sbc	r11, r15
    dc18:	c0 17       	cp	r28, r16
    dc1a:	d1 07       	cpc	r29, r17
    dc1c:	59 f0       	breq	.+22     	; 0xdc34 <Print::write(unsigned char const*, unsigned int)+0x42>
    dc1e:	69 91       	ld	r22, Y+
    dc20:	d6 01       	movw	r26, r12
    dc22:	ed 91       	ld	r30, X+
    dc24:	fc 91       	ld	r31, X
    dc26:	01 90       	ld	r0, Z+
    dc28:	f0 81       	ld	r31, Z
    dc2a:	e0 2d       	mov	r30, r0
    dc2c:	c6 01       	movw	r24, r12
    dc2e:	09 95       	icall
    dc30:	89 2b       	or	r24, r25
    dc32:	79 f7       	brne	.-34     	; 0xdc12 <Print::write(unsigned char const*, unsigned int)+0x20>
    dc34:	c5 01       	movw	r24, r10
    dc36:	df 91       	pop	r29
    dc38:	cf 91       	pop	r28
    dc3a:	1f 91       	pop	r17
    dc3c:	0f 91       	pop	r16
    dc3e:	ff 90       	pop	r15
    dc40:	ef 90       	pop	r14
    dc42:	df 90       	pop	r13
    dc44:	cf 90       	pop	r12
    dc46:	bf 90       	pop	r11
    dc48:	af 90       	pop	r10
    dc4a:	08 95       	ret

0000dc4c <Print::write(char const*) [clone .part.2]>:
_ZN5Print5writeEPKc():
    dc4c:	fb 01       	movw	r30, r22
    dc4e:	01 90       	ld	r0, Z+
    dc50:	00 20       	and	r0, r0
    dc52:	e9 f7       	brne	.-6      	; 0xdc4e <Print::write(char const*) [clone .part.2]+0x2>
    dc54:	31 97       	sbiw	r30, 0x01	; 1
    dc56:	af 01       	movw	r20, r30
    dc58:	46 1b       	sub	r20, r22
    dc5a:	57 0b       	sbc	r21, r23
    dc5c:	dc 01       	movw	r26, r24
    dc5e:	ed 91       	ld	r30, X+
    dc60:	fc 91       	ld	r31, X
    dc62:	02 80       	ldd	r0, Z+2	; 0x02
    dc64:	f3 81       	ldd	r31, Z+3	; 0x03
    dc66:	e0 2d       	mov	r30, r0
    dc68:	09 94       	ijmp

0000dc6a <Print::print(__FlashStringHelper const*)>:
_ZN5Print5printEPK19__FlashStringHelper():
    dc6a:	ef 92       	push	r14
    dc6c:	ff 92       	push	r15
    dc6e:	0f 93       	push	r16
    dc70:	1f 93       	push	r17
    dc72:	cf 93       	push	r28
    dc74:	df 93       	push	r29
    dc76:	8c 01       	movw	r16, r24
    dc78:	7b 01       	movw	r14, r22
    dc7a:	d0 e0       	ldi	r29, 0x00	; 0
    dc7c:	c0 e0       	ldi	r28, 0x00	; 0
    dc7e:	f7 01       	movw	r30, r14
    dc80:	ec 0f       	add	r30, r28
    dc82:	fd 1f       	adc	r31, r29
    dc84:	64 91       	lpm	r22, Z
    dc86:	66 23       	and	r22, r22
    dc88:	61 f0       	breq	.+24     	; 0xdca2 <Print::print(__FlashStringHelper const*)+0x38>
    dc8a:	d8 01       	movw	r26, r16
    dc8c:	ed 91       	ld	r30, X+
    dc8e:	fc 91       	ld	r31, X
    dc90:	01 90       	ld	r0, Z+
    dc92:	f0 81       	ld	r31, Z
    dc94:	e0 2d       	mov	r30, r0
    dc96:	c8 01       	movw	r24, r16
    dc98:	09 95       	icall
    dc9a:	89 2b       	or	r24, r25
    dc9c:	11 f0       	breq	.+4      	; 0xdca2 <Print::print(__FlashStringHelper const*)+0x38>
    dc9e:	21 96       	adiw	r28, 0x01	; 1
    dca0:	ee cf       	rjmp	.-36     	; 0xdc7e <Print::print(__FlashStringHelper const*)+0x14>
    dca2:	ce 01       	movw	r24, r28
    dca4:	df 91       	pop	r29
    dca6:	cf 91       	pop	r28
    dca8:	1f 91       	pop	r17
    dcaa:	0f 91       	pop	r16
    dcac:	ff 90       	pop	r15
    dcae:	ef 90       	pop	r14
    dcb0:	08 95       	ret

0000dcb2 <Print::print(char const*)>:
_ZN5Print5writeEPKc():
    dcb2:	61 15       	cp	r22, r1
    dcb4:	71 05       	cpc	r23, r1
    dcb6:	11 f0       	breq	.+4      	; 0xdcbc <Print::print(char const*)+0xa>
    dcb8:	0c 94 26 6e 	jmp	0xdc4c	; 0xdc4c <Print::write(char const*) [clone .part.2]>
_ZN5Print5printEPKc():
    dcbc:	90 e0       	ldi	r25, 0x00	; 0
    dcbe:	80 e0       	ldi	r24, 0x00	; 0
    dcc0:	08 95       	ret

0000dcc2 <Print::print(char)>:
_ZN5Print5printEc():
    dcc2:	dc 01       	movw	r26, r24
    dcc4:	ed 91       	ld	r30, X+
    dcc6:	fc 91       	ld	r31, X
    dcc8:	01 90       	ld	r0, Z+
    dcca:	f0 81       	ld	r31, Z
    dccc:	e0 2d       	mov	r30, r0
    dcce:	09 94       	ijmp

0000dcd0 <Print::printNumber(unsigned long, unsigned char)>:
_ZN5Print11printNumberEmh():
    dcd0:	8f 92       	push	r8
    dcd2:	9f 92       	push	r9
    dcd4:	af 92       	push	r10
    dcd6:	bf 92       	push	r11
    dcd8:	ef 92       	push	r14
    dcda:	ff 92       	push	r15
    dcdc:	0f 93       	push	r16
    dcde:	1f 93       	push	r17
    dce0:	cf 93       	push	r28
    dce2:	df 93       	push	r29
    dce4:	cd b7       	in	r28, 0x3d	; 61
    dce6:	de b7       	in	r29, 0x3e	; 62
    dce8:	a1 97       	sbiw	r28, 0x21	; 33
    dcea:	0f b6       	in	r0, 0x3f	; 63
    dcec:	f8 94       	cli
    dcee:	de bf       	out	0x3e, r29	; 62
    dcf0:	0f be       	out	0x3f, r0	; 63
    dcf2:	cd bf       	out	0x3d, r28	; 61
    dcf4:	7c 01       	movw	r14, r24
    dcf6:	fa 01       	movw	r30, r20
    dcf8:	cb 01       	movw	r24, r22
    dcfa:	19 a2       	std	Y+33, r1	; 0x21
    dcfc:	22 30       	cpi	r18, 0x02	; 2
    dcfe:	08 f4       	brcc	.+2      	; 0xdd02 <Print::printNumber(unsigned long, unsigned char)+0x32>
    dd00:	2a e0       	ldi	r18, 0x0A	; 10
    dd02:	8e 01       	movw	r16, r28
    dd04:	0f 5d       	subi	r16, 0xDF	; 223
    dd06:	1f 4f       	sbci	r17, 0xFF	; 255
    dd08:	82 2e       	mov	r8, r18
    dd0a:	91 2c       	mov	r9, r1
    dd0c:	b1 2c       	mov	r11, r1
    dd0e:	a1 2c       	mov	r10, r1
    dd10:	bf 01       	movw	r22, r30
    dd12:	a5 01       	movw	r20, r10
    dd14:	94 01       	movw	r18, r8
    dd16:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
    dd1a:	f9 01       	movw	r30, r18
    dd1c:	ca 01       	movw	r24, r20
    dd1e:	6a 30       	cpi	r22, 0x0A	; 10
    dd20:	0c f5       	brge	.+66     	; 0xdd64 <Print::printNumber(unsigned long, unsigned char)+0x94>
    dd22:	60 5d       	subi	r22, 0xD0	; 208
    dd24:	d8 01       	movw	r26, r16
    dd26:	6e 93       	st	-X, r22
    dd28:	8d 01       	movw	r16, r26
    dd2a:	23 2b       	or	r18, r19
    dd2c:	24 2b       	or	r18, r20
    dd2e:	25 2b       	or	r18, r21
    dd30:	79 f7       	brne	.-34     	; 0xdd10 <Print::printNumber(unsigned long, unsigned char)+0x40>
_ZN5Print5writeEPKc():
    dd32:	90 e0       	ldi	r25, 0x00	; 0
    dd34:	80 e0       	ldi	r24, 0x00	; 0
    dd36:	10 97       	sbiw	r26, 0x00	; 0
    dd38:	21 f0       	breq	.+8      	; 0xdd42 <Print::printNumber(unsigned long, unsigned char)+0x72>
    dd3a:	bd 01       	movw	r22, r26
    dd3c:	c7 01       	movw	r24, r14
    dd3e:	0e 94 26 6e 	call	0xdc4c	; 0xdc4c <Print::write(char const*) [clone .part.2]>
_ZN5Print11printNumberEmh():
    dd42:	a1 96       	adiw	r28, 0x21	; 33
    dd44:	0f b6       	in	r0, 0x3f	; 63
    dd46:	f8 94       	cli
    dd48:	de bf       	out	0x3e, r29	; 62
    dd4a:	0f be       	out	0x3f, r0	; 63
    dd4c:	cd bf       	out	0x3d, r28	; 61
    dd4e:	df 91       	pop	r29
    dd50:	cf 91       	pop	r28
    dd52:	1f 91       	pop	r17
    dd54:	0f 91       	pop	r16
    dd56:	ff 90       	pop	r15
    dd58:	ef 90       	pop	r14
    dd5a:	bf 90       	pop	r11
    dd5c:	af 90       	pop	r10
    dd5e:	9f 90       	pop	r9
    dd60:	8f 90       	pop	r8
    dd62:	08 95       	ret
    dd64:	69 5c       	subi	r22, 0xC9	; 201
    dd66:	de cf       	rjmp	.-68     	; 0xdd24 <Print::printNumber(unsigned long, unsigned char)+0x54>

0000dd68 <Print::print(long, int)>:
_ZN5Print5printEli():
    dd68:	cf 92       	push	r12
    dd6a:	df 92       	push	r13
    dd6c:	ef 92       	push	r14
    dd6e:	ff 92       	push	r15
    dd70:	0f 93       	push	r16
    dd72:	1f 93       	push	r17
    dd74:	cf 93       	push	r28
    dd76:	df 93       	push	r29
    dd78:	21 15       	cp	r18, r1
    dd7a:	31 05       	cpc	r19, r1
    dd7c:	81 f4       	brne	.+32     	; 0xdd9e <Print::print(long, int)+0x36>
    dd7e:	dc 01       	movw	r26, r24
    dd80:	ed 91       	ld	r30, X+
    dd82:	fc 91       	ld	r31, X
    dd84:	01 90       	ld	r0, Z+
    dd86:	f0 81       	ld	r31, Z
    dd88:	e0 2d       	mov	r30, r0
    dd8a:	64 2f       	mov	r22, r20
    dd8c:	df 91       	pop	r29
    dd8e:	cf 91       	pop	r28
    dd90:	1f 91       	pop	r17
    dd92:	0f 91       	pop	r16
    dd94:	ff 90       	pop	r15
    dd96:	ef 90       	pop	r14
    dd98:	df 90       	pop	r13
    dd9a:	cf 90       	pop	r12
    dd9c:	09 94       	ijmp
    dd9e:	2a 30       	cpi	r18, 0x0A	; 10
    dda0:	31 05       	cpc	r19, r1
    dda2:	01 f5       	brne	.+64     	; 0xdde4 <Print::print(long, int)+0x7c>
    dda4:	2a e0       	ldi	r18, 0x0A	; 10
    dda6:	77 ff       	sbrs	r23, 7
    dda8:	1d c0       	rjmp	.+58     	; 0xdde4 <Print::print(long, int)+0x7c>
    ddaa:	6a 01       	movw	r12, r20
    ddac:	7b 01       	movw	r14, r22
    ddae:	ec 01       	movw	r28, r24
    ddb0:	6d e2       	ldi	r22, 0x2D	; 45
    ddb2:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    ddb6:	8c 01       	movw	r16, r24
    ddb8:	44 27       	eor	r20, r20
    ddba:	55 27       	eor	r21, r21
    ddbc:	ba 01       	movw	r22, r20
    ddbe:	4c 19       	sub	r20, r12
    ddc0:	5d 09       	sbc	r21, r13
    ddc2:	6e 09       	sbc	r22, r14
    ddc4:	7f 09       	sbc	r23, r15
    ddc6:	2a e0       	ldi	r18, 0x0A	; 10
    ddc8:	ce 01       	movw	r24, r28
    ddca:	0e 94 68 6e 	call	0xdcd0	; 0xdcd0 <Print::printNumber(unsigned long, unsigned char)>
    ddce:	80 0f       	add	r24, r16
    ddd0:	91 1f       	adc	r25, r17
    ddd2:	df 91       	pop	r29
    ddd4:	cf 91       	pop	r28
    ddd6:	1f 91       	pop	r17
    ddd8:	0f 91       	pop	r16
    ddda:	ff 90       	pop	r15
    dddc:	ef 90       	pop	r14
    ddde:	df 90       	pop	r13
    dde0:	cf 90       	pop	r12
    dde2:	08 95       	ret
    dde4:	df 91       	pop	r29
    dde6:	cf 91       	pop	r28
    dde8:	1f 91       	pop	r17
    ddea:	0f 91       	pop	r16
    ddec:	ff 90       	pop	r15
    ddee:	ef 90       	pop	r14
    ddf0:	df 90       	pop	r13
    ddf2:	cf 90       	pop	r12
    ddf4:	0c 94 68 6e 	jmp	0xdcd0	; 0xdcd0 <Print::printNumber(unsigned long, unsigned char)>

0000ddf8 <Print::print(int, int)>:
_ZN5Print5printEii():
    ddf8:	9a 01       	movw	r18, r20
    ddfa:	ab 01       	movw	r20, r22
    ddfc:	77 0f       	add	r23, r23
    ddfe:	66 0b       	sbc	r22, r22
    de00:	77 0b       	sbc	r23, r23
    de02:	0c 94 b4 6e 	jmp	0xdd68	; 0xdd68 <Print::print(long, int)>

0000de06 <Print::print(unsigned long, int)>:
_ZN5Print5printEmi():
    de06:	21 15       	cp	r18, r1
    de08:	31 05       	cpc	r19, r1
    de0a:	41 f4       	brne	.+16     	; 0xde1c <Print::print(unsigned long, int)+0x16>
    de0c:	dc 01       	movw	r26, r24
    de0e:	ed 91       	ld	r30, X+
    de10:	fc 91       	ld	r31, X
    de12:	01 90       	ld	r0, Z+
    de14:	f0 81       	ld	r31, Z
    de16:	e0 2d       	mov	r30, r0
    de18:	64 2f       	mov	r22, r20
    de1a:	09 94       	ijmp
    de1c:	0c 94 68 6e 	jmp	0xdcd0	; 0xdcd0 <Print::printNumber(unsigned long, unsigned char)>

0000de20 <Print::print(unsigned char, int)>:
_ZN5Print5printEhi():
    de20:	9a 01       	movw	r18, r20
    de22:	46 2f       	mov	r20, r22
    de24:	50 e0       	ldi	r21, 0x00	; 0
    de26:	70 e0       	ldi	r23, 0x00	; 0
    de28:	60 e0       	ldi	r22, 0x00	; 0
    de2a:	0c 94 03 6f 	jmp	0xde06	; 0xde06 <Print::print(unsigned long, int)>

0000de2e <Print::print(unsigned int, int)>:
_ZN5Print5printEji():
    de2e:	9a 01       	movw	r18, r20
    de30:	ab 01       	movw	r20, r22
    de32:	70 e0       	ldi	r23, 0x00	; 0
    de34:	60 e0       	ldi	r22, 0x00	; 0
    de36:	0c 94 03 6f 	jmp	0xde06	; 0xde06 <Print::print(unsigned long, int)>

0000de3a <Print::printFloat(double, unsigned char)>:
_ZN5Print10printFloatEdh():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:253

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
    de3a:	2f 92       	push	r2
    de3c:	3f 92       	push	r3
    de3e:	4f 92       	push	r4
    de40:	5f 92       	push	r5
    de42:	6f 92       	push	r6
    de44:	7f 92       	push	r7
    de46:	8f 92       	push	r8
    de48:	9f 92       	push	r9
    de4a:	af 92       	push	r10
    de4c:	bf 92       	push	r11
    de4e:	cf 92       	push	r12
    de50:	df 92       	push	r13
    de52:	ef 92       	push	r14
    de54:	ff 92       	push	r15
    de56:	1f 93       	push	r17
    de58:	cf 93       	push	r28
    de5a:	df 93       	push	r29
    de5c:	ec 01       	movw	r28, r24
    de5e:	6a 01       	movw	r12, r20
    de60:	7b 01       	movw	r14, r22
    de62:	72 2e       	mov	r7, r18
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:256
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
    de64:	ab 01       	movw	r20, r22
    de66:	96 01       	movw	r18, r12
    de68:	cb 01       	movw	r24, r22
    de6a:	b6 01       	movw	r22, r12
    de6c:	0e 94 a8 74 	call	0xe950	; 0xe950 <__unordsf2>
_ZN5Print5writeEPKc():
    de70:	69 ef       	ldi	r22, 0xF9	; 249
    de72:	72 e0       	ldi	r23, 0x02	; 2
_ZN5Print10printFloatEdh():
    de74:	81 11       	cpse	r24, r1
    de76:	26 c0       	rjmp	.+76     	; 0xdec4 <Print::printFloat(double, unsigned char)+0x8a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:257
  if (isinf(number)) return print("inf");
    de78:	46 01       	movw	r8, r12
    de7a:	57 01       	movw	r10, r14
    de7c:	e8 94       	clt
    de7e:	b7 f8       	bld	r11, 7
    de80:	2f ef       	ldi	r18, 0xFF	; 255
    de82:	3f ef       	ldi	r19, 0xFF	; 255
    de84:	4f e7       	ldi	r20, 0x7F	; 127
    de86:	5f e7       	ldi	r21, 0x7F	; 127
    de88:	c5 01       	movw	r24, r10
    de8a:	b4 01       	movw	r22, r8
    de8c:	0e 94 a8 74 	call	0xe950	; 0xe950 <__unordsf2>
    de90:	81 11       	cpse	r24, r1
    de92:	0c c0       	rjmp	.+24     	; 0xdeac <Print::printFloat(double, unsigned char)+0x72>
    de94:	2f ef       	ldi	r18, 0xFF	; 255
    de96:	3f ef       	ldi	r19, 0xFF	; 255
    de98:	4f e7       	ldi	r20, 0x7F	; 127
    de9a:	5f e7       	ldi	r21, 0x7F	; 127
    de9c:	c5 01       	movw	r24, r10
    de9e:	b4 01       	movw	r22, r8
    dea0:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
_ZN5Print5writeEPKc():
    dea4:	6d ef       	ldi	r22, 0xFD	; 253
    dea6:	72 e0       	ldi	r23, 0x02	; 2
_ZN5Print10printFloatEdh():
    dea8:	18 16       	cp	r1, r24
    deaa:	64 f0       	brlt	.+24     	; 0xdec4 <Print::printFloat(double, unsigned char)+0x8a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:258
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
    deac:	2f ef       	ldi	r18, 0xFF	; 255
    deae:	3f ef       	ldi	r19, 0xFF	; 255
    deb0:	4f e7       	ldi	r20, 0x7F	; 127
    deb2:	5f e4       	ldi	r21, 0x4F	; 79
    deb4:	c7 01       	movw	r24, r14
    deb6:	b6 01       	movw	r22, r12
    deb8:	0e 94 b7 73 	call	0xe76e	; 0xe76e <__gesf2>
    debc:	18 16       	cp	r1, r24
    debe:	b4 f4       	brge	.+44     	; 0xdeec <Print::printFloat(double, unsigned char)+0xb2>
_ZN5Print5writeEPKc():
    dec0:	61 e0       	ldi	r22, 0x01	; 1
    dec2:	73 e0       	ldi	r23, 0x03	; 3
    dec4:	ce 01       	movw	r24, r28
_ZN5Print10printFloatEdh():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:295
    n += print(toPrint);
    remainder -= toPrint; 
  } 
  
  return n;
}
    dec6:	df 91       	pop	r29
    dec8:	cf 91       	pop	r28
    deca:	1f 91       	pop	r17
    decc:	ff 90       	pop	r15
    dece:	ef 90       	pop	r14
    ded0:	df 90       	pop	r13
    ded2:	cf 90       	pop	r12
    ded4:	bf 90       	pop	r11
    ded6:	af 90       	pop	r10
    ded8:	9f 90       	pop	r9
    deda:	8f 90       	pop	r8
    dedc:	7f 90       	pop	r7
    dede:	6f 90       	pop	r6
    dee0:	5f 90       	pop	r5
    dee2:	4f 90       	pop	r4
    dee4:	3f 90       	pop	r3
    dee6:	2f 90       	pop	r2
_ZN5Print5writeEPKc():
    dee8:	0c 94 26 6e 	jmp	0xdc4c	; 0xdc4c <Print::write(char const*) [clone .part.2]>
_ZN5Print10printFloatEdh():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:259
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
    deec:	2f ef       	ldi	r18, 0xFF	; 255
    deee:	3f ef       	ldi	r19, 0xFF	; 255
    def0:	4f e7       	ldi	r20, 0x7F	; 127
    def2:	5f ec       	ldi	r21, 0xCF	; 207
    def4:	c7 01       	movw	r24, r14
    def6:	b6 01       	movw	r22, r12
    def8:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
    defc:	87 fd       	sbrc	r24, 7
    defe:	e0 cf       	rjmp	.-64     	; 0xdec0 <Print::printFloat(double, unsigned char)+0x86>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:262
  
  // Handle negative numbers
  if (number < 0.0)
    df00:	20 e0       	ldi	r18, 0x00	; 0
    df02:	30 e0       	ldi	r19, 0x00	; 0
    df04:	a9 01       	movw	r20, r18
    df06:	c7 01       	movw	r24, r14
    df08:	b6 01       	movw	r22, r12
    df0a:	0e 94 61 71 	call	0xe2c2	; 0xe2c2 <__cmpsf2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:254
  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
    df0e:	31 2c       	mov	r3, r1
    df10:	21 2c       	mov	r2, r1
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:262
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
  
  // Handle negative numbers
  if (number < 0.0)
    df12:	87 ff       	sbrs	r24, 7
    df14:	09 c0       	rjmp	.+18     	; 0xdf28 <Print::printFloat(double, unsigned char)+0xee>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:264
  {
     n += print('-');
    df16:	6d e2       	ldi	r22, 0x2D	; 45
    df18:	ce 01       	movw	r24, r28
    df1a:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    df1e:	1c 01       	movw	r2, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:265
     number = -number;
    df20:	f7 fa       	bst	r15, 7
    df22:	f0 94       	com	r15
    df24:	f7 f8       	bld	r15, 7
    df26:	f0 94       	com	r15
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:270
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    df28:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:269
     n += print('-');
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
    df2a:	60 e0       	ldi	r22, 0x00	; 0
    df2c:	70 e0       	ldi	r23, 0x00	; 0
    df2e:	80 e0       	ldi	r24, 0x00	; 0
    df30:	9f e3       	ldi	r25, 0x3F	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:270
  for (uint8_t i=0; i<digits; ++i)
    df32:	71 16       	cp	r7, r17
    df34:	41 f0       	breq	.+16     	; 0xdf46 <Print::printFloat(double, unsigned char)+0x10c>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:271
    rounding /= 10.0;
    df36:	20 e0       	ldi	r18, 0x00	; 0
    df38:	30 e0       	ldi	r19, 0x00	; 0
    df3a:	40 e2       	ldi	r20, 0x20	; 32
    df3c:	51 e4       	ldi	r21, 0x41	; 65
    df3e:	0e 94 6b 71 	call	0xe2d6	; 0xe2d6 <__divsf3>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:270
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    df42:	1f 5f       	subi	r17, 0xFF	; 255
    df44:	f6 cf       	rjmp	.-20     	; 0xdf32 <Print::printFloat(double, unsigned char)+0xf8>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:273
    rounding /= 10.0;
  
  number += rounding;
    df46:	a7 01       	movw	r20, r14
    df48:	96 01       	movw	r18, r12
    df4a:	0e 94 68 70 	call	0xe0d0	; 0xe0d0 <__addsf3>
    df4e:	2b 01       	movw	r4, r22
    df50:	3c 01       	movw	r6, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:276

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
    df52:	0e 94 e4 71 	call	0xe3c8	; 0xe3c8 <__fixunssfsi>
    df56:	4b 01       	movw	r8, r22
    df58:	5c 01       	movw	r10, r24
_ZN5Print5printEmi():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:106
}

size_t Print::print(unsigned long n, int base)
{
  if (base == 0) return write(n);
  else return printNumber(n, base);
    df5a:	2a e0       	ldi	r18, 0x0A	; 10
    df5c:	bc 01       	movw	r22, r24
    df5e:	a4 01       	movw	r20, r8
    df60:	ce 01       	movw	r24, r28
    df62:	0e 94 68 6e 	call	0xdcd0	; 0xdcd0 <Print::printNumber(unsigned long, unsigned char)>
_ZN5Print10printFloatEdh():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:278
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
    df66:	7c 01       	movw	r14, r24
    df68:	e2 0c       	add	r14, r2
    df6a:	f3 1c       	adc	r15, r3
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:281

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    df6c:	11 23       	and	r17, r17
    df6e:	b1 f1       	breq	.+108    	; 0xdfdc <Print::printFloat(double, unsigned char)+0x1a2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:277
  
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
    df70:	c5 01       	movw	r24, r10
    df72:	b4 01       	movw	r22, r8
    df74:	0e 94 13 72 	call	0xe426	; 0xe426 <__floatunsisf>
    df78:	9b 01       	movw	r18, r22
    df7a:	ac 01       	movw	r20, r24
    df7c:	c3 01       	movw	r24, r6
    df7e:	b2 01       	movw	r22, r4
    df80:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    df84:	4b 01       	movw	r8, r22
    df86:	5c 01       	movw	r10, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:282
  n += print(int_part);

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    n += print('.'); 
    df88:	6e e2       	ldi	r22, 0x2E	; 46
    df8a:	ce 01       	movw	r24, r28
    df8c:	0e 94 61 6e 	call	0xdcc2	; 0xdcc2 <Print::print(char)>
    df90:	e8 0e       	add	r14, r24
    df92:	f9 1e       	adc	r15, r25
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:286
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
    df94:	11 50       	subi	r17, 0x01	; 1
    df96:	10 f1       	brcs	.+68     	; 0xdfdc <Print::printFloat(double, unsigned char)+0x1a2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:288
  {
    remainder *= 10.0;
    df98:	20 e0       	ldi	r18, 0x00	; 0
    df9a:	30 e0       	ldi	r19, 0x00	; 0
    df9c:	40 e2       	ldi	r20, 0x20	; 32
    df9e:	51 e4       	ldi	r21, 0x41	; 65
    dfa0:	c5 01       	movw	r24, r10
    dfa2:	b4 01       	movw	r22, r8
    dfa4:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    dfa8:	2b 01       	movw	r4, r22
    dfaa:	3c 01       	movw	r6, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:289
    unsigned int toPrint = (unsigned int)(remainder);
    dfac:	0e 94 e4 71 	call	0xe3c8	; 0xe3c8 <__fixunssfsi>
    dfb0:	4b 01       	movw	r8, r22
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:290
    n += print(toPrint);
    dfb2:	4a e0       	ldi	r20, 0x0A	; 10
    dfb4:	50 e0       	ldi	r21, 0x00	; 0
    dfb6:	ce 01       	movw	r24, r28
    dfb8:	0e 94 17 6f 	call	0xde2e	; 0xde2e <Print::print(unsigned int, int)>
    dfbc:	e8 0e       	add	r14, r24
    dfbe:	f9 1e       	adc	r15, r25
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:291
    remainder -= toPrint; 
    dfc0:	b4 01       	movw	r22, r8
    dfc2:	90 e0       	ldi	r25, 0x00	; 0
    dfc4:	80 e0       	ldi	r24, 0x00	; 0
    dfc6:	0e 94 13 72 	call	0xe426	; 0xe426 <__floatunsisf>
    dfca:	9b 01       	movw	r18, r22
    dfcc:	ac 01       	movw	r20, r24
    dfce:	c3 01       	movw	r24, r6
    dfd0:	b2 01       	movw	r22, r4
    dfd2:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    dfd6:	4b 01       	movw	r8, r22
    dfd8:	5c 01       	movw	r10, r24
    dfda:	dc cf       	rjmp	.-72     	; 0xdf94 <Print::printFloat(double, unsigned char)+0x15a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:295
  } 
  
  return n;
}
    dfdc:	c7 01       	movw	r24, r14
    dfde:	df 91       	pop	r29
    dfe0:	cf 91       	pop	r28
    dfe2:	1f 91       	pop	r17
    dfe4:	ff 90       	pop	r15
    dfe6:	ef 90       	pop	r14
    dfe8:	df 90       	pop	r13
    dfea:	cf 90       	pop	r12
    dfec:	bf 90       	pop	r11
    dfee:	af 90       	pop	r10
    dff0:	9f 90       	pop	r9
    dff2:	8f 90       	pop	r8
    dff4:	7f 90       	pop	r7
    dff6:	6f 90       	pop	r6
    dff8:	5f 90       	pop	r5
    dffa:	4f 90       	pop	r4
    dffc:	3f 90       	pop	r3
    dffe:	2f 90       	pop	r2
    e000:	08 95       	ret

0000e002 <Print::print(double, int)>:
_ZN5Print5printEdi():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:111
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    e002:	0c 94 1d 6f 	jmp	0xde3a	; 0xde3a <Print::printFloat(double, unsigned char)>

0000e006 <map(long, long, long, long, long)>:
_Z3maplllll():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WMath.cpp:53
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
}

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
    e006:	4f 92       	push	r4
    e008:	5f 92       	push	r5
    e00a:	6f 92       	push	r6
    e00c:	7f 92       	push	r7
    e00e:	af 92       	push	r10
    e010:	bf 92       	push	r11
    e012:	cf 92       	push	r12
    e014:	df 92       	push	r13
    e016:	ef 92       	push	r14
    e018:	ff 92       	push	r15
    e01a:	0f 93       	push	r16
    e01c:	1f 93       	push	r17
    e01e:	cf 93       	push	r28
    e020:	df 93       	push	r29
    e022:	cd b7       	in	r28, 0x3d	; 61
    e024:	de b7       	in	r29, 0x3e	; 62
    e026:	29 01       	movw	r4, r18
    e028:	3a 01       	movw	r6, r20
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WMath.cpp:54
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
    e02a:	9b 01       	movw	r18, r22
    e02c:	ac 01       	movw	r20, r24
    e02e:	24 19       	sub	r18, r4
    e030:	35 09       	sbc	r19, r5
    e032:	46 09       	sbc	r20, r6
    e034:	57 09       	sbc	r21, r7
    e036:	89 89       	ldd	r24, Y+17	; 0x11
    e038:	9a 89       	ldd	r25, Y+18	; 0x12
    e03a:	ab 89       	ldd	r26, Y+19	; 0x13
    e03c:	bc 89       	ldd	r27, Y+20	; 0x14
    e03e:	bc 01       	movw	r22, r24
    e040:	cd 01       	movw	r24, r26
    e042:	6a 19       	sub	r22, r10
    e044:	7b 09       	sbc	r23, r11
    e046:	8c 09       	sbc	r24, r12
    e048:	9d 09       	sbc	r25, r13
    e04a:	0e 94 b4 74 	call	0xe968	; 0xe968 <__mulsi3>
    e04e:	a8 01       	movw	r20, r16
    e050:	97 01       	movw	r18, r14
    e052:	24 19       	sub	r18, r4
    e054:	35 09       	sbc	r19, r5
    e056:	46 09       	sbc	r20, r6
    e058:	57 09       	sbc	r21, r7
    e05a:	0e 94 06 75 	call	0xea0c	; 0xea0c <__divmodsi4>
    e05e:	ca 01       	movw	r24, r20
    e060:	b9 01       	movw	r22, r18
    e062:	6a 0d       	add	r22, r10
    e064:	7b 1d       	adc	r23, r11
    e066:	8c 1d       	adc	r24, r12
    e068:	9d 1d       	adc	r25, r13
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WMath.cpp:55
}
    e06a:	df 91       	pop	r29
    e06c:	cf 91       	pop	r28
    e06e:	1f 91       	pop	r17
    e070:	0f 91       	pop	r16
    e072:	ff 90       	pop	r15
    e074:	ef 90       	pop	r14
    e076:	df 90       	pop	r13
    e078:	cf 90       	pop	r12
    e07a:	bf 90       	pop	r11
    e07c:	af 90       	pop	r10
    e07e:	7f 90       	pop	r7
    e080:	6f 90       	pop	r6
    e082:	5f 90       	pop	r5
    e084:	4f 90       	pop	r4
    e086:	08 95       	ret

0000e088 <__cxa_pure_virtual>:
__cxa_pure_virtual():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/abi.cpp:27
extern "C" void __cxa_deleted_virtual(void) __attribute__ ((__noreturn__));

void __cxa_pure_virtual(void) {
  // We might want to write some diagnostics to uart in this case
  //std::terminate();
  abort();
    e088:	0e 94 89 76 	call	0xed12	; 0xed12 <abort>

0000e08c <initVariant>:
initVariant():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:28
int atexit(void (* /*func*/ )()) { return 0; }

// Weak empty variant initialization function.
// May be redefined by variant files.
void initVariant() __attribute__((weak));
void initVariant() { }
    e08c:	08 95       	ret

0000e08e <main>:
main():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:35
//void setupUSB() __attribute__((weak));
//void setupUSB() { }

int main(void)
{
  init();
    e08e:	0e 94 fc 6c 	call	0xd9f8	; 0xd9f8 <init>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:37

  initVariant();
    e092:	0e 94 46 70 	call	0xe08c	; 0xe08c <initVariant>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:43

#if defined(USBCON)
  USBDevice.attach();
#endif
  
  setup();
    e096:	0e 94 d6 1c 	call	0x39ac	; 0x39ac <setup>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:47
    
  for (;;) {
    loop();
    if (serialEventRun) serialEventRun();
    e09a:	c0 e0       	ldi	r28, 0x00	; 0
    e09c:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:46
#endif
  
  setup();
    
  for (;;) {
    loop();
    e09e:	0e 94 90 41 	call	0x8320	; 0x8320 <loop>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:47
    if (serialEventRun) serialEventRun();
    e0a2:	20 97       	sbiw	r28, 0x00	; 0
    e0a4:	e1 f3       	breq	.-8      	; 0xe09e <main+0x10>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:47 (discriminator 1)
    e0a6:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    e0aa:	f9 cf       	rjmp	.-14     	; 0xe09e <main+0x10>

0000e0ac <acos>:
acos():
    e0ac:	9f 93       	push	r25
    e0ae:	9f 77       	andi	r25, 0x7F	; 127
    e0b0:	0e 94 67 72 	call	0xe4ce	; 0xe4ce <__fp_arccos>
    e0b4:	0f 90       	pop	r0
    e0b6:	00 20       	and	r0, r0
    e0b8:	42 f4       	brpl	.+16     	; 0xe0ca <acos+0x1e>
    e0ba:	90 58       	subi	r25, 0x80	; 128
    e0bc:	a2 ea       	ldi	r26, 0xA2	; 162
    e0be:	2a ed       	ldi	r18, 0xDA	; 218
    e0c0:	3f e0       	ldi	r19, 0x0F	; 15
    e0c2:	49 e4       	ldi	r20, 0x49	; 73
    e0c4:	50 e4       	ldi	r21, 0x40	; 64
    e0c6:	0e 94 7f 70 	call	0xe0fe	; 0xe0fe <__addsf3x>
    e0ca:	0c 94 51 73 	jmp	0xe6a2	; 0xe6a2 <__fp_round>

0000e0ce <__subsf3>:
__subsf3():
    e0ce:	50 58       	subi	r21, 0x80	; 128

0000e0d0 <__addsf3>:
    e0d0:	bb 27       	eor	r27, r27
    e0d2:	aa 27       	eor	r26, r26
    e0d4:	0e 94 7f 70 	call	0xe0fe	; 0xe0fe <__addsf3x>
    e0d8:	0c 94 51 73 	jmp	0xe6a2	; 0xe6a2 <__fp_round>
__addsf3():
    e0dc:	0e 94 18 73 	call	0xe630	; 0xe630 <__fp_pscA>
    e0e0:	38 f0       	brcs	.+14     	; 0xe0f0 <__addsf3+0x20>
    e0e2:	0e 94 1f 73 	call	0xe63e	; 0xe63e <__fp_pscB>
    e0e6:	20 f0       	brcs	.+8      	; 0xe0f0 <__addsf3+0x20>
    e0e8:	39 f4       	brne	.+14     	; 0xe0f8 <__addsf3+0x28>
    e0ea:	9f 3f       	cpi	r25, 0xFF	; 255
    e0ec:	19 f4       	brne	.+6      	; 0xe0f4 <__addsf3+0x24>
    e0ee:	26 f4       	brtc	.+8      	; 0xe0f8 <__addsf3+0x28>
    e0f0:	0c 94 da 72 	jmp	0xe5b4	; 0xe5b4 <__fp_nan>
    e0f4:	0e f4       	brtc	.+2      	; 0xe0f8 <__addsf3+0x28>
    e0f6:	e0 95       	com	r30
    e0f8:	e7 fb       	bst	r30, 7
    e0fa:	0c 94 ab 72 	jmp	0xe556	; 0xe556 <__fp_inf>

0000e0fe <__addsf3x>:
__addsf3x():
    e0fe:	e9 2f       	mov	r30, r25
    e100:	0e 94 76 73 	call	0xe6ec	; 0xe6ec <__fp_split3>
    e104:	58 f3       	brcs	.-42     	; 0xe0dc <__addsf3+0xc>
    e106:	ba 17       	cp	r27, r26
    e108:	62 07       	cpc	r22, r18
    e10a:	73 07       	cpc	r23, r19
    e10c:	84 07       	cpc	r24, r20
    e10e:	95 07       	cpc	r25, r21
    e110:	20 f0       	brcs	.+8      	; 0xe11a <__addsf3x+0x1c>
    e112:	79 f4       	brne	.+30     	; 0xe132 <__addsf3x+0x34>
    e114:	a6 f5       	brtc	.+104    	; 0xe17e <__addsf3x+0x80>
    e116:	0c 94 b0 73 	jmp	0xe760	; 0xe760 <__fp_zero>
    e11a:	0e f4       	brtc	.+2      	; 0xe11e <__addsf3x+0x20>
    e11c:	e0 95       	com	r30
    e11e:	0b 2e       	mov	r0, r27
    e120:	ba 2f       	mov	r27, r26
    e122:	a0 2d       	mov	r26, r0
    e124:	0b 01       	movw	r0, r22
    e126:	b9 01       	movw	r22, r18
    e128:	90 01       	movw	r18, r0
    e12a:	0c 01       	movw	r0, r24
    e12c:	ca 01       	movw	r24, r20
    e12e:	a0 01       	movw	r20, r0
    e130:	11 24       	eor	r1, r1
    e132:	ff 27       	eor	r31, r31
    e134:	59 1b       	sub	r21, r25
    e136:	99 f0       	breq	.+38     	; 0xe15e <__addsf3x+0x60>
    e138:	59 3f       	cpi	r21, 0xF9	; 249
    e13a:	50 f4       	brcc	.+20     	; 0xe150 <__addsf3x+0x52>
    e13c:	50 3e       	cpi	r21, 0xE0	; 224
    e13e:	68 f1       	brcs	.+90     	; 0xe19a <__addsf3x+0x9c>
    e140:	1a 16       	cp	r1, r26
    e142:	f0 40       	sbci	r31, 0x00	; 0
    e144:	a2 2f       	mov	r26, r18
    e146:	23 2f       	mov	r18, r19
    e148:	34 2f       	mov	r19, r20
    e14a:	44 27       	eor	r20, r20
    e14c:	58 5f       	subi	r21, 0xF8	; 248
    e14e:	f3 cf       	rjmp	.-26     	; 0xe136 <__addsf3x+0x38>
    e150:	46 95       	lsr	r20
    e152:	37 95       	ror	r19
    e154:	27 95       	ror	r18
    e156:	a7 95       	ror	r26
    e158:	f0 40       	sbci	r31, 0x00	; 0
    e15a:	53 95       	inc	r21
    e15c:	c9 f7       	brne	.-14     	; 0xe150 <__addsf3x+0x52>
    e15e:	7e f4       	brtc	.+30     	; 0xe17e <__addsf3x+0x80>
    e160:	1f 16       	cp	r1, r31
    e162:	ba 0b       	sbc	r27, r26
    e164:	62 0b       	sbc	r22, r18
    e166:	73 0b       	sbc	r23, r19
    e168:	84 0b       	sbc	r24, r20
    e16a:	ba f0       	brmi	.+46     	; 0xe19a <__addsf3x+0x9c>
    e16c:	91 50       	subi	r25, 0x01	; 1
    e16e:	a1 f0       	breq	.+40     	; 0xe198 <__addsf3x+0x9a>
    e170:	ff 0f       	add	r31, r31
    e172:	bb 1f       	adc	r27, r27
    e174:	66 1f       	adc	r22, r22
    e176:	77 1f       	adc	r23, r23
    e178:	88 1f       	adc	r24, r24
    e17a:	c2 f7       	brpl	.-16     	; 0xe16c <__addsf3x+0x6e>
    e17c:	0e c0       	rjmp	.+28     	; 0xe19a <__addsf3x+0x9c>
    e17e:	ba 0f       	add	r27, r26
    e180:	62 1f       	adc	r22, r18
    e182:	73 1f       	adc	r23, r19
    e184:	84 1f       	adc	r24, r20
    e186:	48 f4       	brcc	.+18     	; 0xe19a <__addsf3x+0x9c>
    e188:	87 95       	ror	r24
    e18a:	77 95       	ror	r23
    e18c:	67 95       	ror	r22
    e18e:	b7 95       	ror	r27
    e190:	f7 95       	ror	r31
    e192:	9e 3f       	cpi	r25, 0xFE	; 254
    e194:	08 f0       	brcs	.+2      	; 0xe198 <__addsf3x+0x9a>
    e196:	b0 cf       	rjmp	.-160    	; 0xe0f8 <__addsf3+0x28>
    e198:	93 95       	inc	r25
    e19a:	88 0f       	add	r24, r24
    e19c:	08 f0       	brcs	.+2      	; 0xe1a0 <__addsf3x+0xa2>
    e19e:	99 27       	eor	r25, r25
    e1a0:	ee 0f       	add	r30, r30
    e1a2:	97 95       	ror	r25
    e1a4:	87 95       	ror	r24
    e1a6:	08 95       	ret

0000e1a8 <asin>:
    e1a8:	9f 93       	push	r25
    e1aa:	9f 77       	andi	r25, 0x7F	; 127
    e1ac:	ee e3       	ldi	r30, 0x3E	; 62
    e1ae:	89 37       	cpi	r24, 0x79	; 121
    e1b0:	9e 07       	cpc	r25, r30
    e1b2:	28 f4       	brcc	.+10     	; 0xe1be <asin+0x16>
    e1b4:	ec e8       	ldi	r30, 0x8C	; 140
    e1b6:	f0 e0       	ldi	r31, 0x00	; 0
    e1b8:	0e 94 04 73 	call	0xe608	; 0xe608 <__fp_powsodd>
    e1bc:	0c c0       	rjmp	.+24     	; 0xe1d6 <asin+0x2e>
    e1be:	0e 94 67 72 	call	0xe4ce	; 0xe4ce <__fp_arccos>
    e1c2:	90 58       	subi	r25, 0x80	; 128
    e1c4:	a2 ea       	ldi	r26, 0xA2	; 162
    e1c6:	2a ed       	ldi	r18, 0xDA	; 218
    e1c8:	3f e0       	ldi	r19, 0x0F	; 15
asin():
    e1ca:	49 ec       	ldi	r20, 0xC9	; 201
    e1cc:	5f e3       	ldi	r21, 0x3F	; 63
    e1ce:	0e 94 7f 70 	call	0xe0fe	; 0xe0fe <__addsf3x>
    e1d2:	0e 94 51 73 	call	0xe6a2	; 0xe6a2 <__fp_round>
    e1d6:	0f 90       	pop	r0
    e1d8:	07 fc       	sbrc	r0, 7
    e1da:	90 58       	subi	r25, 0x80	; 128
    e1dc:	08 95       	ret
    e1de:	0e 94 18 73 	call	0xe630	; 0xe630 <__fp_pscA>
    e1e2:	60 f0       	brcs	.+24     	; 0xe1fc <asin+0x54>
    e1e4:	80 e8       	ldi	r24, 0x80	; 128
    e1e6:	91 e0       	ldi	r25, 0x01	; 1
    e1e8:	09 f4       	brne	.+2      	; 0xe1ec <asin+0x44>
    e1ea:	9e ef       	ldi	r25, 0xFE	; 254
    e1ec:	0e 94 1f 73 	call	0xe63e	; 0xe63e <__fp_pscB>
    e1f0:	28 f0       	brcs	.+10     	; 0xe1fc <asin+0x54>
    e1f2:	40 e8       	ldi	r20, 0x80	; 128
    e1f4:	51 e0       	ldi	r21, 0x01	; 1
    e1f6:	71 f4       	brne	.+28     	; 0xe214 <atan2+0x10>
    e1f8:	5e ef       	ldi	r21, 0xFE	; 254
    e1fa:	0c c0       	rjmp	.+24     	; 0xe214 <atan2+0x10>
    e1fc:	0c 94 da 72 	jmp	0xe5b4	; 0xe5b4 <__fp_nan>
    e200:	0c 94 b0 73 	jmp	0xe760	; 0xe760 <__fp_zero>

0000e204 <atan2>:
atan2():
    e204:	e9 2f       	mov	r30, r25
    e206:	e0 78       	andi	r30, 0x80	; 128
    e208:	0e 94 76 73 	call	0xe6ec	; 0xe6ec <__fp_split3>
    e20c:	40 f3       	brcs	.-48     	; 0xe1de <asin+0x36>
    e20e:	09 2e       	mov	r0, r25
    e210:	05 2a       	or	r0, r21
    e212:	b1 f3       	breq	.-20     	; 0xe200 <asin+0x58>
    e214:	26 17       	cp	r18, r22
    e216:	37 07       	cpc	r19, r23
    e218:	48 07       	cpc	r20, r24
    e21a:	59 07       	cpc	r21, r25
    e21c:	38 f0       	brcs	.+14     	; 0xe22c <atan2+0x28>
    e21e:	0e 2e       	mov	r0, r30
    e220:	07 f8       	bld	r0, 7
    e222:	e0 25       	eor	r30, r0
    e224:	69 f0       	breq	.+26     	; 0xe240 <atan2+0x3c>
    e226:	e0 25       	eor	r30, r0
    e228:	e0 64       	ori	r30, 0x40	; 64
    e22a:	0a c0       	rjmp	.+20     	; 0xe240 <atan2+0x3c>
    e22c:	ef 63       	ori	r30, 0x3F	; 63
    e22e:	07 f8       	bld	r0, 7
    e230:	00 94       	com	r0
    e232:	07 fa       	bst	r0, 7
    e234:	db 01       	movw	r26, r22
    e236:	b9 01       	movw	r22, r18
    e238:	9d 01       	movw	r18, r26
    e23a:	dc 01       	movw	r26, r24
    e23c:	ca 01       	movw	r24, r20
    e23e:	ad 01       	movw	r20, r26
    e240:	ef 93       	push	r30
    e242:	0e 94 82 71 	call	0xe304	; 0xe304 <__divsf3_pse>
    e246:	0e 94 51 73 	call	0xe6a2	; 0xe6a2 <__fp_round>
    e24a:	0e 94 32 71 	call	0xe264	; 0xe264 <atan>
    e24e:	5f 91       	pop	r21
    e250:	55 23       	and	r21, r21
    e252:	39 f0       	breq	.+14     	; 0xe262 <atan2+0x5e>
    e254:	2b ed       	ldi	r18, 0xDB	; 219
    e256:	3f e0       	ldi	r19, 0x0F	; 15
    e258:	49 e4       	ldi	r20, 0x49	; 73
    e25a:	50 fd       	sbrc	r21, 0
    e25c:	49 ec       	ldi	r20, 0xC9	; 201
    e25e:	0c 94 68 70 	jmp	0xe0d0	; 0xe0d0 <__addsf3>
    e262:	08 95       	ret

0000e264 <atan>:
    e264:	df 93       	push	r29
    e266:	dd 27       	eor	r29, r29
    e268:	b9 2f       	mov	r27, r25
    e26a:	bf 77       	andi	r27, 0x7F	; 127
    e26c:	40 e8       	ldi	r20, 0x80	; 128
    e26e:	5f e3       	ldi	r21, 0x3F	; 63
    e270:	16 16       	cp	r1, r22
    e272:	17 06       	cpc	r1, r23
    e274:	48 07       	cpc	r20, r24
    e276:	5b 07       	cpc	r21, r27
    e278:	18 f4       	brcc	.+6      	; 0xe280 <atan+0x1c>
    e27a:	d9 2f       	mov	r29, r25
    e27c:	0e 94 bc 73 	call	0xe778	; 0xe778 <inverse>
    e280:	9f 93       	push	r25
    e282:	8f 93       	push	r24
    e284:	7f 93       	push	r23
    e286:	6f 93       	push	r22
    e288:	0e 94 7f 74 	call	0xe8fe	; 0xe8fe <square>
atan():
    e28c:	e0 ea       	ldi	r30, 0xA0	; 160
    e28e:	f0 e0       	ldi	r31, 0x00	; 0
    e290:	0e 94 dd 72 	call	0xe5ba	; 0xe5ba <__fp_powser>
    e294:	0e 94 51 73 	call	0xe6a2	; 0xe6a2 <__fp_round>
    e298:	2f 91       	pop	r18
    e29a:	3f 91       	pop	r19
    e29c:	4f 91       	pop	r20
    e29e:	5f 91       	pop	r21
    e2a0:	0e 94 d7 73 	call	0xe7ae	; 0xe7ae <__mulsf3x>
    e2a4:	dd 23       	and	r29, r29
    e2a6:	51 f0       	breq	.+20     	; 0xe2bc <atan+0x58>
    e2a8:	90 58       	subi	r25, 0x80	; 128
    e2aa:	a2 ea       	ldi	r26, 0xA2	; 162
    e2ac:	2a ed       	ldi	r18, 0xDA	; 218
    e2ae:	3f e0       	ldi	r19, 0x0F	; 15
    e2b0:	49 ec       	ldi	r20, 0xC9	; 201
    e2b2:	5f e3       	ldi	r21, 0x3F	; 63
    e2b4:	d0 78       	andi	r29, 0x80	; 128
    e2b6:	5d 27       	eor	r21, r29
    e2b8:	0e 94 7f 70 	call	0xe0fe	; 0xe0fe <__addsf3x>
    e2bc:	df 91       	pop	r29
    e2be:	0c 94 51 73 	jmp	0xe6a2	; 0xe6a2 <__fp_round>

0000e2c2 <__cmpsf2>:
__cmpsf2():
    e2c2:	0e 94 87 72 	call	0xe50e	; 0xe50e <__fp_cmp>
    e2c6:	08 f4       	brcc	.+2      	; 0xe2ca <__cmpsf2+0x8>
    e2c8:	81 e0       	ldi	r24, 0x01	; 1
    e2ca:	08 95       	ret

0000e2cc <cos>:
cos():
    e2cc:	0e 94 28 73 	call	0xe650	; 0xe650 <__fp_rempio2>
    e2d0:	e3 95       	inc	r30
    e2d2:	0c 94 62 73 	jmp	0xe6c4	; 0xe6c4 <__fp_sinus>

0000e2d6 <__divsf3>:
__divsf3():
    e2d6:	0e 94 7f 71 	call	0xe2fe	; 0xe2fe <__divsf3x>
    e2da:	0c 94 51 73 	jmp	0xe6a2	; 0xe6a2 <__fp_round>
    e2de:	0e 94 1f 73 	call	0xe63e	; 0xe63e <__fp_pscB>
    e2e2:	58 f0       	brcs	.+22     	; 0xe2fa <__divsf3+0x24>
    e2e4:	0e 94 18 73 	call	0xe630	; 0xe630 <__fp_pscA>
    e2e8:	40 f0       	brcs	.+16     	; 0xe2fa <__divsf3+0x24>
    e2ea:	29 f4       	brne	.+10     	; 0xe2f6 <__divsf3+0x20>
    e2ec:	5f 3f       	cpi	r21, 0xFF	; 255
    e2ee:	29 f0       	breq	.+10     	; 0xe2fa <__divsf3+0x24>
    e2f0:	0c 94 ab 72 	jmp	0xe556	; 0xe556 <__fp_inf>
    e2f4:	51 11       	cpse	r21, r1
    e2f6:	0c 94 b1 73 	jmp	0xe762	; 0xe762 <__fp_szero>
    e2fa:	0c 94 da 72 	jmp	0xe5b4	; 0xe5b4 <__fp_nan>

0000e2fe <__divsf3x>:
__divsf3x():
    e2fe:	0e 94 76 73 	call	0xe6ec	; 0xe6ec <__fp_split3>
    e302:	68 f3       	brcs	.-38     	; 0xe2de <__divsf3+0x8>

0000e304 <__divsf3_pse>:
    e304:	99 23       	and	r25, r25
    e306:	b1 f3       	breq	.-20     	; 0xe2f4 <__divsf3+0x1e>
    e308:	55 23       	and	r21, r21
    e30a:	91 f3       	breq	.-28     	; 0xe2f0 <__divsf3+0x1a>
    e30c:	95 1b       	sub	r25, r21
    e30e:	55 0b       	sbc	r21, r21
    e310:	bb 27       	eor	r27, r27
    e312:	aa 27       	eor	r26, r26
    e314:	62 17       	cp	r22, r18
    e316:	73 07       	cpc	r23, r19
    e318:	84 07       	cpc	r24, r20
    e31a:	38 f0       	brcs	.+14     	; 0xe32a <__divsf3_pse+0x26>
    e31c:	9f 5f       	subi	r25, 0xFF	; 255
    e31e:	5f 4f       	sbci	r21, 0xFF	; 255
    e320:	22 0f       	add	r18, r18
    e322:	33 1f       	adc	r19, r19
    e324:	44 1f       	adc	r20, r20
    e326:	aa 1f       	adc	r26, r26
    e328:	a9 f3       	breq	.-22     	; 0xe314 <__divsf3_pse+0x10>
    e32a:	35 d0       	rcall	.+106    	; 0xe396 <__divsf3_pse+0x92>
    e32c:	0e 2e       	mov	r0, r30
    e32e:	3a f0       	brmi	.+14     	; 0xe33e <__divsf3_pse+0x3a>
    e330:	e0 e8       	ldi	r30, 0x80	; 128
    e332:	32 d0       	rcall	.+100    	; 0xe398 <__divsf3_pse+0x94>
    e334:	91 50       	subi	r25, 0x01	; 1
    e336:	50 40       	sbci	r21, 0x00	; 0
    e338:	e6 95       	lsr	r30
    e33a:	00 1c       	adc	r0, r0
    e33c:	ca f7       	brpl	.-14     	; 0xe330 <__divsf3_pse+0x2c>
    e33e:	2b d0       	rcall	.+86     	; 0xe396 <__divsf3_pse+0x92>
    e340:	fe 2f       	mov	r31, r30
    e342:	29 d0       	rcall	.+82     	; 0xe396 <__divsf3_pse+0x92>
    e344:	66 0f       	add	r22, r22
    e346:	77 1f       	adc	r23, r23
    e348:	88 1f       	adc	r24, r24
    e34a:	bb 1f       	adc	r27, r27
    e34c:	26 17       	cp	r18, r22
    e34e:	37 07       	cpc	r19, r23
    e350:	48 07       	cpc	r20, r24
    e352:	ab 07       	cpc	r26, r27
    e354:	b0 e8       	ldi	r27, 0x80	; 128
    e356:	09 f0       	breq	.+2      	; 0xe35a <__divsf3_pse+0x56>
    e358:	bb 0b       	sbc	r27, r27
    e35a:	80 2d       	mov	r24, r0
    e35c:	bf 01       	movw	r22, r30
    e35e:	ff 27       	eor	r31, r31
    e360:	93 58       	subi	r25, 0x83	; 131
    e362:	5f 4f       	sbci	r21, 0xFF	; 255
    e364:	3a f0       	brmi	.+14     	; 0xe374 <__divsf3_pse+0x70>
    e366:	9e 3f       	cpi	r25, 0xFE	; 254
    e368:	51 05       	cpc	r21, r1
    e36a:	78 f0       	brcs	.+30     	; 0xe38a <__divsf3_pse+0x86>
    e36c:	0c 94 ab 72 	jmp	0xe556	; 0xe556 <__fp_inf>
    e370:	0c 94 b1 73 	jmp	0xe762	; 0xe762 <__fp_szero>
    e374:	5f 3f       	cpi	r21, 0xFF	; 255
    e376:	e4 f3       	brlt	.-8      	; 0xe370 <__divsf3_pse+0x6c>
    e378:	98 3e       	cpi	r25, 0xE8	; 232
    e37a:	d4 f3       	brlt	.-12     	; 0xe370 <__divsf3_pse+0x6c>
    e37c:	86 95       	lsr	r24
    e37e:	77 95       	ror	r23
    e380:	67 95       	ror	r22
    e382:	b7 95       	ror	r27
    e384:	f7 95       	ror	r31
    e386:	9f 5f       	subi	r25, 0xFF	; 255
    e388:	c9 f7       	brne	.-14     	; 0xe37c <__divsf3_pse+0x78>
    e38a:	88 0f       	add	r24, r24
    e38c:	91 1d       	adc	r25, r1
    e38e:	96 95       	lsr	r25
    e390:	87 95       	ror	r24
    e392:	97 f9       	bld	r25, 7
    e394:	08 95       	ret
    e396:	e1 e0       	ldi	r30, 0x01	; 1
    e398:	66 0f       	add	r22, r22
    e39a:	77 1f       	adc	r23, r23
    e39c:	88 1f       	adc	r24, r24
    e39e:	bb 1f       	adc	r27, r27
    e3a0:	62 17       	cp	r22, r18
    e3a2:	73 07       	cpc	r23, r19
    e3a4:	84 07       	cpc	r24, r20
    e3a6:	ba 07       	cpc	r27, r26
    e3a8:	20 f0       	brcs	.+8      	; 0xe3b2 <__divsf3_pse+0xae>
    e3aa:	62 1b       	sub	r22, r18
    e3ac:	73 0b       	sbc	r23, r19
    e3ae:	84 0b       	sbc	r24, r20
    e3b0:	ba 0b       	sbc	r27, r26
    e3b2:	ee 1f       	adc	r30, r30
    e3b4:	88 f7       	brcc	.-30     	; 0xe398 <__divsf3_pse+0x94>
    e3b6:	e0 95       	com	r30
    e3b8:	08 95       	ret

0000e3ba <__fixsfsi>:
    e3ba:	0e 94 e4 71 	call	0xe3c8	; 0xe3c8 <__fixunssfsi>
    e3be:	68 94       	set
    e3c0:	b1 11       	cpse	r27, r1
    e3c2:	0c 94 b1 73 	jmp	0xe762	; 0xe762 <__fp_szero>
    e3c6:	08 95       	ret

0000e3c8 <__fixunssfsi>:
    e3c8:	0e 94 7e 73 	call	0xe6fc	; 0xe6fc <__fp_splitA>
    e3cc:	88 f0       	brcs	.+34     	; 0xe3f0 <__fixunssfsi+0x28>
    e3ce:	9f 57       	subi	r25, 0x7F	; 127
    e3d0:	98 f0       	brcs	.+38     	; 0xe3f8 <__fixunssfsi+0x30>
    e3d2:	b9 2f       	mov	r27, r25
    e3d4:	99 27       	eor	r25, r25
    e3d6:	b7 51       	subi	r27, 0x17	; 23
    e3d8:	b0 f0       	brcs	.+44     	; 0xe406 <__fixunssfsi+0x3e>
__fixunssfsi():
    e3da:	e1 f0       	breq	.+56     	; 0xe414 <__fixunssfsi+0x4c>
    e3dc:	66 0f       	add	r22, r22
    e3de:	77 1f       	adc	r23, r23
    e3e0:	88 1f       	adc	r24, r24
    e3e2:	99 1f       	adc	r25, r25
    e3e4:	1a f0       	brmi	.+6      	; 0xe3ec <__fixunssfsi+0x24>
    e3e6:	ba 95       	dec	r27
    e3e8:	c9 f7       	brne	.-14     	; 0xe3dc <__fixunssfsi+0x14>
    e3ea:	14 c0       	rjmp	.+40     	; 0xe414 <__fixunssfsi+0x4c>
    e3ec:	b1 30       	cpi	r27, 0x01	; 1
    e3ee:	91 f0       	breq	.+36     	; 0xe414 <__fixunssfsi+0x4c>
    e3f0:	0e 94 b0 73 	call	0xe760	; 0xe760 <__fp_zero>
    e3f4:	b1 e0       	ldi	r27, 0x01	; 1
    e3f6:	08 95       	ret
    e3f8:	0c 94 b0 73 	jmp	0xe760	; 0xe760 <__fp_zero>
    e3fc:	67 2f       	mov	r22, r23
    e3fe:	78 2f       	mov	r23, r24
    e400:	88 27       	eor	r24, r24
    e402:	b8 5f       	subi	r27, 0xF8	; 248
    e404:	39 f0       	breq	.+14     	; 0xe414 <__fixunssfsi+0x4c>
    e406:	b9 3f       	cpi	r27, 0xF9	; 249
    e408:	cc f3       	brlt	.-14     	; 0xe3fc <__fixunssfsi+0x34>
    e40a:	86 95       	lsr	r24
    e40c:	77 95       	ror	r23
    e40e:	67 95       	ror	r22
    e410:	b3 95       	inc	r27
    e412:	d9 f7       	brne	.-10     	; 0xe40a <__fixunssfsi+0x42>
    e414:	3e f4       	brtc	.+14     	; 0xe424 <__fixunssfsi+0x5c>
    e416:	90 95       	com	r25
    e418:	80 95       	com	r24
    e41a:	70 95       	com	r23
    e41c:	61 95       	neg	r22
    e41e:	7f 4f       	sbci	r23, 0xFF	; 255
    e420:	8f 4f       	sbci	r24, 0xFF	; 255
    e422:	9f 4f       	sbci	r25, 0xFF	; 255
    e424:	08 95       	ret

0000e426 <__floatunsisf>:
__floatunsisf():
    e426:	e8 94       	clt
    e428:	09 c0       	rjmp	.+18     	; 0xe43c <__floatsisf+0x12>

0000e42a <__floatsisf>:
    e42a:	97 fb       	bst	r25, 7
    e42c:	3e f4       	brtc	.+14     	; 0xe43c <__floatsisf+0x12>
    e42e:	90 95       	com	r25
    e430:	80 95       	com	r24
    e432:	70 95       	com	r23
    e434:	61 95       	neg	r22
    e436:	7f 4f       	sbci	r23, 0xFF	; 255
    e438:	8f 4f       	sbci	r24, 0xFF	; 255
    e43a:	9f 4f       	sbci	r25, 0xFF	; 255
    e43c:	99 23       	and	r25, r25
    e43e:	a9 f0       	breq	.+42     	; 0xe46a <__floatsisf+0x40>
    e440:	f9 2f       	mov	r31, r25
    e442:	96 e9       	ldi	r25, 0x96	; 150
    e444:	bb 27       	eor	r27, r27
    e446:	93 95       	inc	r25
    e448:	f6 95       	lsr	r31
    e44a:	87 95       	ror	r24
    e44c:	77 95       	ror	r23
    e44e:	67 95       	ror	r22
    e450:	b7 95       	ror	r27
    e452:	f1 11       	cpse	r31, r1
    e454:	f8 cf       	rjmp	.-16     	; 0xe446 <__floatsisf+0x1c>
    e456:	fa f4       	brpl	.+62     	; 0xe496 <__floatsisf+0x6c>
    e458:	bb 0f       	add	r27, r27
    e45a:	11 f4       	brne	.+4      	; 0xe460 <__floatsisf+0x36>
    e45c:	60 ff       	sbrs	r22, 0
    e45e:	1b c0       	rjmp	.+54     	; 0xe496 <__floatsisf+0x6c>
    e460:	6f 5f       	subi	r22, 0xFF	; 255
    e462:	7f 4f       	sbci	r23, 0xFF	; 255
    e464:	8f 4f       	sbci	r24, 0xFF	; 255
    e466:	9f 4f       	sbci	r25, 0xFF	; 255
    e468:	16 c0       	rjmp	.+44     	; 0xe496 <__floatsisf+0x6c>
    e46a:	88 23       	and	r24, r24
    e46c:	11 f0       	breq	.+4      	; 0xe472 <__floatsisf+0x48>
    e46e:	96 e9       	ldi	r25, 0x96	; 150
    e470:	11 c0       	rjmp	.+34     	; 0xe494 <__floatsisf+0x6a>
    e472:	77 23       	and	r23, r23
    e474:	21 f0       	breq	.+8      	; 0xe47e <__floatsisf+0x54>
    e476:	9e e8       	ldi	r25, 0x8E	; 142
    e478:	87 2f       	mov	r24, r23
    e47a:	76 2f       	mov	r23, r22
    e47c:	05 c0       	rjmp	.+10     	; 0xe488 <__floatsisf+0x5e>
    e47e:	66 23       	and	r22, r22
    e480:	71 f0       	breq	.+28     	; 0xe49e <__floatsisf+0x74>
    e482:	96 e8       	ldi	r25, 0x86	; 134
    e484:	86 2f       	mov	r24, r22
    e486:	70 e0       	ldi	r23, 0x00	; 0
    e488:	60 e0       	ldi	r22, 0x00	; 0
    e48a:	2a f0       	brmi	.+10     	; 0xe496 <__floatsisf+0x6c>
    e48c:	9a 95       	dec	r25
    e48e:	66 0f       	add	r22, r22
    e490:	77 1f       	adc	r23, r23
    e492:	88 1f       	adc	r24, r24
    e494:	da f7       	brpl	.-10     	; 0xe48c <__floatsisf+0x62>
    e496:	88 0f       	add	r24, r24
    e498:	96 95       	lsr	r25
    e49a:	87 95       	ror	r24
    e49c:	97 f9       	bld	r25, 7
    e49e:	08 95       	ret

0000e4a0 <floor>:
floor():
    e4a0:	0e 94 98 73 	call	0xe730	; 0xe730 <__fp_trunc>
    e4a4:	90 f0       	brcs	.+36     	; 0xe4ca <floor+0x2a>
    e4a6:	9f 37       	cpi	r25, 0x7F	; 127
    e4a8:	48 f4       	brcc	.+18     	; 0xe4bc <floor+0x1c>
    e4aa:	91 11       	cpse	r25, r1
    e4ac:	16 f0       	brts	.+4      	; 0xe4b2 <floor+0x12>
    e4ae:	0c 94 b1 73 	jmp	0xe762	; 0xe762 <__fp_szero>
    e4b2:	60 e0       	ldi	r22, 0x00	; 0
    e4b4:	70 e0       	ldi	r23, 0x00	; 0
    e4b6:	80 e8       	ldi	r24, 0x80	; 128
    e4b8:	9f eb       	ldi	r25, 0xBF	; 191
    e4ba:	08 95       	ret
    e4bc:	26 f4       	brtc	.+8      	; 0xe4c6 <floor+0x26>
    e4be:	1b 16       	cp	r1, r27
    e4c0:	61 1d       	adc	r22, r1
    e4c2:	71 1d       	adc	r23, r1
    e4c4:	81 1d       	adc	r24, r1
    e4c6:	0c 94 b1 72 	jmp	0xe562	; 0xe562 <__fp_mintl>
    e4ca:	0c 94 cc 72 	jmp	0xe598	; 0xe598 <__fp_mpack>

0000e4ce <__fp_arccos>:
__fp_arccos():
    e4ce:	df 93       	push	r29
    e4d0:	cf 93       	push	r28
    e4d2:	1f 93       	push	r17
    e4d4:	0f 93       	push	r16
    e4d6:	8b 01       	movw	r16, r22
    e4d8:	ec 01       	movw	r28, r24
    e4da:	ed ec       	ldi	r30, 0xCD	; 205
    e4dc:	f0 e0       	ldi	r31, 0x00	; 0
    e4de:	0e 94 dd 72 	call	0xe5ba	; 0xe5ba <__fp_powser>
    e4e2:	0e 94 51 73 	call	0xe6a2	; 0xe6a2 <__fp_round>
    e4e6:	98 01       	movw	r18, r16
    e4e8:	ae 01       	movw	r20, r28
    e4ea:	8b 01       	movw	r16, r22
    e4ec:	ec 01       	movw	r28, r24
    e4ee:	60 e0       	ldi	r22, 0x00	; 0
    e4f0:	70 e0       	ldi	r23, 0x00	; 0
    e4f2:	80 e8       	ldi	r24, 0x80	; 128
    e4f4:	9f e3       	ldi	r25, 0x3F	; 63
    e4f6:	0e 94 67 70 	call	0xe0ce	; 0xe0ce <__subsf3>
    e4fa:	0e 94 3f 74 	call	0xe87e	; 0xe87e <sqrt>
    e4fe:	98 01       	movw	r18, r16
    e500:	ae 01       	movw	r20, r28
    e502:	0f 91       	pop	r16
    e504:	1f 91       	pop	r17
    e506:	cf 91       	pop	r28
    e508:	df 91       	pop	r29
    e50a:	0c 94 d7 73 	jmp	0xe7ae	; 0xe7ae <__mulsf3x>

0000e50e <__fp_cmp>:
__fp_cmp():
    e50e:	99 0f       	add	r25, r25
    e510:	00 08       	sbc	r0, r0
    e512:	55 0f       	add	r21, r21
    e514:	aa 0b       	sbc	r26, r26
    e516:	e0 e8       	ldi	r30, 0x80	; 128
    e518:	fe ef       	ldi	r31, 0xFE	; 254
    e51a:	16 16       	cp	r1, r22
    e51c:	17 06       	cpc	r1, r23
    e51e:	e8 07       	cpc	r30, r24
    e520:	f9 07       	cpc	r31, r25
    e522:	c0 f0       	brcs	.+48     	; 0xe554 <__fp_cmp+0x46>
    e524:	12 16       	cp	r1, r18
    e526:	13 06       	cpc	r1, r19
    e528:	e4 07       	cpc	r30, r20
    e52a:	f5 07       	cpc	r31, r21
    e52c:	98 f0       	brcs	.+38     	; 0xe554 <__fp_cmp+0x46>
    e52e:	62 1b       	sub	r22, r18
    e530:	73 0b       	sbc	r23, r19
    e532:	84 0b       	sbc	r24, r20
    e534:	95 0b       	sbc	r25, r21
    e536:	39 f4       	brne	.+14     	; 0xe546 <__fp_cmp+0x38>
    e538:	0a 26       	eor	r0, r26
    e53a:	61 f0       	breq	.+24     	; 0xe554 <__fp_cmp+0x46>
    e53c:	23 2b       	or	r18, r19
    e53e:	24 2b       	or	r18, r20
    e540:	25 2b       	or	r18, r21
    e542:	21 f4       	brne	.+8      	; 0xe54c <__fp_cmp+0x3e>
    e544:	08 95       	ret
    e546:	0a 26       	eor	r0, r26
    e548:	09 f4       	brne	.+2      	; 0xe54c <__fp_cmp+0x3e>
    e54a:	a1 40       	sbci	r26, 0x01	; 1
    e54c:	a6 95       	lsr	r26
    e54e:	8f ef       	ldi	r24, 0xFF	; 255
    e550:	81 1d       	adc	r24, r1
    e552:	81 1d       	adc	r24, r1
    e554:	08 95       	ret

0000e556 <__fp_inf>:
__fp_inf():
    e556:	97 f9       	bld	r25, 7
    e558:	9f 67       	ori	r25, 0x7F	; 127
    e55a:	80 e8       	ldi	r24, 0x80	; 128
    e55c:	70 e0       	ldi	r23, 0x00	; 0
    e55e:	60 e0       	ldi	r22, 0x00	; 0
    e560:	08 95       	ret

0000e562 <__fp_mintl>:
__fp_mintl():
    e562:	88 23       	and	r24, r24
    e564:	71 f4       	brne	.+28     	; 0xe582 <__fp_mintl+0x20>
    e566:	77 23       	and	r23, r23
    e568:	21 f0       	breq	.+8      	; 0xe572 <__fp_mintl+0x10>
    e56a:	98 50       	subi	r25, 0x08	; 8
    e56c:	87 2b       	or	r24, r23
    e56e:	76 2f       	mov	r23, r22
    e570:	07 c0       	rjmp	.+14     	; 0xe580 <__fp_mintl+0x1e>
    e572:	66 23       	and	r22, r22
    e574:	11 f4       	brne	.+4      	; 0xe57a <__fp_mintl+0x18>
    e576:	99 27       	eor	r25, r25
    e578:	0d c0       	rjmp	.+26     	; 0xe594 <__fp_mintl+0x32>
    e57a:	90 51       	subi	r25, 0x10	; 16
    e57c:	86 2b       	or	r24, r22
    e57e:	70 e0       	ldi	r23, 0x00	; 0
    e580:	60 e0       	ldi	r22, 0x00	; 0
    e582:	2a f0       	brmi	.+10     	; 0xe58e <__fp_mintl+0x2c>
    e584:	9a 95       	dec	r25
    e586:	66 0f       	add	r22, r22
    e588:	77 1f       	adc	r23, r23
    e58a:	88 1f       	adc	r24, r24
    e58c:	da f7       	brpl	.-10     	; 0xe584 <__fp_mintl+0x22>
    e58e:	88 0f       	add	r24, r24
    e590:	96 95       	lsr	r25
    e592:	87 95       	ror	r24
    e594:	97 f9       	bld	r25, 7
    e596:	08 95       	ret

0000e598 <__fp_mpack>:
__fp_mpack():
    e598:	9f 3f       	cpi	r25, 0xFF	; 255
    e59a:	31 f0       	breq	.+12     	; 0xe5a8 <__fp_mpack_finite+0xc>

0000e59c <__fp_mpack_finite>:
    e59c:	91 50       	subi	r25, 0x01	; 1
    e59e:	20 f4       	brcc	.+8      	; 0xe5a8 <__fp_mpack_finite+0xc>
    e5a0:	87 95       	ror	r24
    e5a2:	77 95       	ror	r23
    e5a4:	67 95       	ror	r22
    e5a6:	b7 95       	ror	r27
    e5a8:	88 0f       	add	r24, r24
    e5aa:	91 1d       	adc	r25, r1
    e5ac:	96 95       	lsr	r25
    e5ae:	87 95       	ror	r24
    e5b0:	97 f9       	bld	r25, 7
    e5b2:	08 95       	ret

0000e5b4 <__fp_nan>:
__fp_nan():
    e5b4:	9f ef       	ldi	r25, 0xFF	; 255
    e5b6:	80 ec       	ldi	r24, 0xC0	; 192
    e5b8:	08 95       	ret

0000e5ba <__fp_powser>:
__fp_powser():
    e5ba:	df 93       	push	r29
    e5bc:	cf 93       	push	r28
    e5be:	1f 93       	push	r17
    e5c0:	0f 93       	push	r16
    e5c2:	ff 92       	push	r15
    e5c4:	ef 92       	push	r14
    e5c6:	df 92       	push	r13
    e5c8:	7b 01       	movw	r14, r22
    e5ca:	8c 01       	movw	r16, r24
    e5cc:	68 94       	set
    e5ce:	06 c0       	rjmp	.+12     	; 0xe5dc <__fp_powser+0x22>
    e5d0:	da 2e       	mov	r13, r26
    e5d2:	ef 01       	movw	r28, r30
    e5d4:	0e 94 d7 73 	call	0xe7ae	; 0xe7ae <__mulsf3x>
    e5d8:	fe 01       	movw	r30, r28
    e5da:	e8 94       	clt
    e5dc:	a5 91       	lpm	r26, Z+
    e5de:	25 91       	lpm	r18, Z+
    e5e0:	35 91       	lpm	r19, Z+
    e5e2:	45 91       	lpm	r20, Z+
    e5e4:	55 91       	lpm	r21, Z+
    e5e6:	a6 f3       	brts	.-24     	; 0xe5d0 <__fp_powser+0x16>
    e5e8:	ef 01       	movw	r28, r30
    e5ea:	0e 94 7f 70 	call	0xe0fe	; 0xe0fe <__addsf3x>
    e5ee:	fe 01       	movw	r30, r28
    e5f0:	97 01       	movw	r18, r14
    e5f2:	a8 01       	movw	r20, r16
    e5f4:	da 94       	dec	r13
    e5f6:	69 f7       	brne	.-38     	; 0xe5d2 <__fp_powser+0x18>
    e5f8:	df 90       	pop	r13
    e5fa:	ef 90       	pop	r14
    e5fc:	ff 90       	pop	r15
    e5fe:	0f 91       	pop	r16
    e600:	1f 91       	pop	r17
    e602:	cf 91       	pop	r28
    e604:	df 91       	pop	r29
    e606:	08 95       	ret

0000e608 <__fp_powsodd>:
__fp_powsodd():
    e608:	9f 93       	push	r25
    e60a:	8f 93       	push	r24
    e60c:	7f 93       	push	r23
    e60e:	6f 93       	push	r22
    e610:	ff 93       	push	r31
    e612:	ef 93       	push	r30
    e614:	9b 01       	movw	r18, r22
    e616:	ac 01       	movw	r20, r24
    e618:	0e 94 c4 73 	call	0xe788	; 0xe788 <__mulsf3>
    e61c:	ef 91       	pop	r30
    e61e:	ff 91       	pop	r31
    e620:	0e 94 dd 72 	call	0xe5ba	; 0xe5ba <__fp_powser>
    e624:	2f 91       	pop	r18
    e626:	3f 91       	pop	r19
    e628:	4f 91       	pop	r20
    e62a:	5f 91       	pop	r21
    e62c:	0c 94 c4 73 	jmp	0xe788	; 0xe788 <__mulsf3>

0000e630 <__fp_pscA>:
__fp_pscA():
    e630:	00 24       	eor	r0, r0
    e632:	0a 94       	dec	r0
    e634:	16 16       	cp	r1, r22
    e636:	17 06       	cpc	r1, r23
    e638:	18 06       	cpc	r1, r24
    e63a:	09 06       	cpc	r0, r25
    e63c:	08 95       	ret

0000e63e <__fp_pscB>:
__fp_pscB():
    e63e:	00 24       	eor	r0, r0
    e640:	0a 94       	dec	r0
    e642:	12 16       	cp	r1, r18
    e644:	13 06       	cpc	r1, r19
    e646:	14 06       	cpc	r1, r20
    e648:	05 06       	cpc	r0, r21
    e64a:	08 95       	ret
    e64c:	0c 94 da 72 	jmp	0xe5b4	; 0xe5b4 <__fp_nan>

0000e650 <__fp_rempio2>:
__fp_rempio2():
    e650:	0e 94 7e 73 	call	0xe6fc	; 0xe6fc <__fp_splitA>
    e654:	d8 f3       	brcs	.-10     	; 0xe64c <__fp_pscB+0xe>
    e656:	e8 94       	clt
    e658:	e0 e0       	ldi	r30, 0x00	; 0
    e65a:	bb 27       	eor	r27, r27
    e65c:	9f 57       	subi	r25, 0x7F	; 127
    e65e:	f0 f0       	brcs	.+60     	; 0xe69c <__fp_rempio2+0x4c>
    e660:	2a ed       	ldi	r18, 0xDA	; 218
    e662:	3f e0       	ldi	r19, 0x0F	; 15
    e664:	49 ec       	ldi	r20, 0xC9	; 201
    e666:	06 c0       	rjmp	.+12     	; 0xe674 <__fp_rempio2+0x24>
    e668:	ee 0f       	add	r30, r30
    e66a:	bb 0f       	add	r27, r27
    e66c:	66 1f       	adc	r22, r22
    e66e:	77 1f       	adc	r23, r23
    e670:	88 1f       	adc	r24, r24
    e672:	28 f0       	brcs	.+10     	; 0xe67e <__fp_rempio2+0x2e>
    e674:	b2 3a       	cpi	r27, 0xA2	; 162
    e676:	62 07       	cpc	r22, r18
    e678:	73 07       	cpc	r23, r19
    e67a:	84 07       	cpc	r24, r20
    e67c:	28 f0       	brcs	.+10     	; 0xe688 <__fp_rempio2+0x38>
    e67e:	b2 5a       	subi	r27, 0xA2	; 162
    e680:	62 0b       	sbc	r22, r18
    e682:	73 0b       	sbc	r23, r19
    e684:	84 0b       	sbc	r24, r20
    e686:	e3 95       	inc	r30
    e688:	9a 95       	dec	r25
    e68a:	72 f7       	brpl	.-36     	; 0xe668 <__fp_rempio2+0x18>
    e68c:	80 38       	cpi	r24, 0x80	; 128
    e68e:	30 f4       	brcc	.+12     	; 0xe69c <__fp_rempio2+0x4c>
    e690:	9a 95       	dec	r25
    e692:	bb 0f       	add	r27, r27
    e694:	66 1f       	adc	r22, r22
    e696:	77 1f       	adc	r23, r23
    e698:	88 1f       	adc	r24, r24
    e69a:	d2 f7       	brpl	.-12     	; 0xe690 <__fp_rempio2+0x40>
    e69c:	90 48       	sbci	r25, 0x80	; 128
    e69e:	0c 94 ce 72 	jmp	0xe59c	; 0xe59c <__fp_mpack_finite>

0000e6a2 <__fp_round>:
    e6a2:	09 2e       	mov	r0, r25
    e6a4:	03 94       	inc	r0
__fp_round():
    e6a6:	00 0c       	add	r0, r0
    e6a8:	11 f4       	brne	.+4      	; 0xe6ae <__fp_round+0xc>
    e6aa:	88 23       	and	r24, r24
    e6ac:	52 f0       	brmi	.+20     	; 0xe6c2 <__fp_round+0x20>
    e6ae:	bb 0f       	add	r27, r27
    e6b0:	40 f4       	brcc	.+16     	; 0xe6c2 <__fp_round+0x20>
    e6b2:	bf 2b       	or	r27, r31
    e6b4:	11 f4       	brne	.+4      	; 0xe6ba <__fp_round+0x18>
    e6b6:	60 ff       	sbrs	r22, 0
    e6b8:	04 c0       	rjmp	.+8      	; 0xe6c2 <__fp_round+0x20>
    e6ba:	6f 5f       	subi	r22, 0xFF	; 255
    e6bc:	7f 4f       	sbci	r23, 0xFF	; 255
    e6be:	8f 4f       	sbci	r24, 0xFF	; 255
    e6c0:	9f 4f       	sbci	r25, 0xFF	; 255
    e6c2:	08 95       	ret

0000e6c4 <__fp_sinus>:
__fp_sinus():
    e6c4:	ef 93       	push	r30
    e6c6:	e0 ff       	sbrs	r30, 0
    e6c8:	07 c0       	rjmp	.+14     	; 0xe6d8 <__fp_sinus+0x14>
    e6ca:	a2 ea       	ldi	r26, 0xA2	; 162
    e6cc:	2a ed       	ldi	r18, 0xDA	; 218
    e6ce:	3f e0       	ldi	r19, 0x0F	; 15
    e6d0:	49 ec       	ldi	r20, 0xC9	; 201
    e6d2:	5f eb       	ldi	r21, 0xBF	; 191
    e6d4:	0e 94 7f 70 	call	0xe0fe	; 0xe0fe <__addsf3x>
    e6d8:	0e 94 51 73 	call	0xe6a2	; 0xe6a2 <__fp_round>
    e6dc:	0f 90       	pop	r0
    e6de:	03 94       	inc	r0
    e6e0:	01 fc       	sbrc	r0, 1
    e6e2:	90 58       	subi	r25, 0x80	; 128
    e6e4:	e5 ef       	ldi	r30, 0xF5	; 245
    e6e6:	f0 e0       	ldi	r31, 0x00	; 0
    e6e8:	0c 94 04 73 	jmp	0xe608	; 0xe608 <__fp_powsodd>

0000e6ec <__fp_split3>:
__fp_split3():
    e6ec:	57 fd       	sbrc	r21, 7
    e6ee:	90 58       	subi	r25, 0x80	; 128
    e6f0:	44 0f       	add	r20, r20
    e6f2:	55 1f       	adc	r21, r21
    e6f4:	59 f0       	breq	.+22     	; 0xe70c <__fp_splitA+0x10>
    e6f6:	5f 3f       	cpi	r21, 0xFF	; 255
    e6f8:	71 f0       	breq	.+28     	; 0xe716 <__fp_splitA+0x1a>
    e6fa:	47 95       	ror	r20

0000e6fc <__fp_splitA>:
    e6fc:	88 0f       	add	r24, r24
    e6fe:	97 fb       	bst	r25, 7
    e700:	99 1f       	adc	r25, r25
    e702:	61 f0       	breq	.+24     	; 0xe71c <__fp_splitA+0x20>
    e704:	9f 3f       	cpi	r25, 0xFF	; 255
    e706:	79 f0       	breq	.+30     	; 0xe726 <__fp_splitA+0x2a>
    e708:	87 95       	ror	r24
    e70a:	08 95       	ret
    e70c:	12 16       	cp	r1, r18
    e70e:	13 06       	cpc	r1, r19
    e710:	14 06       	cpc	r1, r20
    e712:	55 1f       	adc	r21, r21
    e714:	f2 cf       	rjmp	.-28     	; 0xe6fa <__fp_split3+0xe>
    e716:	46 95       	lsr	r20
    e718:	f1 df       	rcall	.-30     	; 0xe6fc <__fp_splitA>
    e71a:	08 c0       	rjmp	.+16     	; 0xe72c <__fp_splitA+0x30>
    e71c:	16 16       	cp	r1, r22
    e71e:	17 06       	cpc	r1, r23
    e720:	18 06       	cpc	r1, r24
    e722:	99 1f       	adc	r25, r25
    e724:	f1 cf       	rjmp	.-30     	; 0xe708 <__fp_splitA+0xc>
    e726:	86 95       	lsr	r24
    e728:	71 05       	cpc	r23, r1
    e72a:	61 05       	cpc	r22, r1
    e72c:	08 94       	sec
    e72e:	08 95       	ret

0000e730 <__fp_trunc>:
__fp_trunc():
    e730:	0e 94 7e 73 	call	0xe6fc	; 0xe6fc <__fp_splitA>
    e734:	a0 f0       	brcs	.+40     	; 0xe75e <__fp_trunc+0x2e>
    e736:	be e7       	ldi	r27, 0x7E	; 126
    e738:	b9 17       	cp	r27, r25
    e73a:	88 f4       	brcc	.+34     	; 0xe75e <__fp_trunc+0x2e>
    e73c:	bb 27       	eor	r27, r27
    e73e:	9f 38       	cpi	r25, 0x8F	; 143
    e740:	60 f4       	brcc	.+24     	; 0xe75a <__fp_trunc+0x2a>
    e742:	16 16       	cp	r1, r22
    e744:	b1 1d       	adc	r27, r1
    e746:	67 2f       	mov	r22, r23
    e748:	78 2f       	mov	r23, r24
    e74a:	88 27       	eor	r24, r24
    e74c:	98 5f       	subi	r25, 0xF8	; 248
    e74e:	f7 cf       	rjmp	.-18     	; 0xe73e <__fp_trunc+0xe>
    e750:	86 95       	lsr	r24
    e752:	77 95       	ror	r23
    e754:	67 95       	ror	r22
    e756:	b1 1d       	adc	r27, r1
    e758:	93 95       	inc	r25
    e75a:	96 39       	cpi	r25, 0x96	; 150
    e75c:	c8 f3       	brcs	.-14     	; 0xe750 <__fp_trunc+0x20>
    e75e:	08 95       	ret

0000e760 <__fp_zero>:
__fp_zero():
    e760:	e8 94       	clt

0000e762 <__fp_szero>:
    e762:	bb 27       	eor	r27, r27
    e764:	66 27       	eor	r22, r22
    e766:	77 27       	eor	r23, r23
    e768:	cb 01       	movw	r24, r22
    e76a:	97 f9       	bld	r25, 7
    e76c:	08 95       	ret

0000e76e <__gesf2>:
__gesf2():
    e76e:	0e 94 87 72 	call	0xe50e	; 0xe50e <__fp_cmp>
    e772:	08 f4       	brcc	.+2      	; 0xe776 <__gesf2+0x8>
    e774:	8f ef       	ldi	r24, 0xFF	; 255
    e776:	08 95       	ret

0000e778 <inverse>:
inverse():
    e778:	9b 01       	movw	r18, r22
    e77a:	ac 01       	movw	r20, r24
    e77c:	60 e0       	ldi	r22, 0x00	; 0
    e77e:	70 e0       	ldi	r23, 0x00	; 0
    e780:	80 e8       	ldi	r24, 0x80	; 128
    e782:	9f e3       	ldi	r25, 0x3F	; 63
    e784:	0c 94 6b 71 	jmp	0xe2d6	; 0xe2d6 <__divsf3>

0000e788 <__mulsf3>:
__mulsf3():
    e788:	0e 94 d7 73 	call	0xe7ae	; 0xe7ae <__mulsf3x>
    e78c:	0c 94 51 73 	jmp	0xe6a2	; 0xe6a2 <__fp_round>
    e790:	0e 94 18 73 	call	0xe630	; 0xe630 <__fp_pscA>
    e794:	38 f0       	brcs	.+14     	; 0xe7a4 <__mulsf3+0x1c>
    e796:	0e 94 1f 73 	call	0xe63e	; 0xe63e <__fp_pscB>
    e79a:	20 f0       	brcs	.+8      	; 0xe7a4 <__mulsf3+0x1c>
    e79c:	95 23       	and	r25, r21
    e79e:	11 f0       	breq	.+4      	; 0xe7a4 <__mulsf3+0x1c>
    e7a0:	0c 94 ab 72 	jmp	0xe556	; 0xe556 <__fp_inf>
    e7a4:	0c 94 da 72 	jmp	0xe5b4	; 0xe5b4 <__fp_nan>
    e7a8:	11 24       	eor	r1, r1
    e7aa:	0c 94 b1 73 	jmp	0xe762	; 0xe762 <__fp_szero>

0000e7ae <__mulsf3x>:
__mulsf3x():
    e7ae:	0e 94 76 73 	call	0xe6ec	; 0xe6ec <__fp_split3>
    e7b2:	70 f3       	brcs	.-36     	; 0xe790 <__mulsf3+0x8>

0000e7b4 <__mulsf3_pse>:
    e7b4:	95 9f       	mul	r25, r21
    e7b6:	c1 f3       	breq	.-16     	; 0xe7a8 <__mulsf3+0x20>
    e7b8:	95 0f       	add	r25, r21
    e7ba:	50 e0       	ldi	r21, 0x00	; 0
    e7bc:	55 1f       	adc	r21, r21
    e7be:	62 9f       	mul	r22, r18
    e7c0:	f0 01       	movw	r30, r0
    e7c2:	72 9f       	mul	r23, r18
    e7c4:	bb 27       	eor	r27, r27
    e7c6:	f0 0d       	add	r31, r0
    e7c8:	b1 1d       	adc	r27, r1
    e7ca:	63 9f       	mul	r22, r19
    e7cc:	aa 27       	eor	r26, r26
    e7ce:	f0 0d       	add	r31, r0
    e7d0:	b1 1d       	adc	r27, r1
    e7d2:	aa 1f       	adc	r26, r26
    e7d4:	64 9f       	mul	r22, r20
    e7d6:	66 27       	eor	r22, r22
    e7d8:	b0 0d       	add	r27, r0
    e7da:	a1 1d       	adc	r26, r1
    e7dc:	66 1f       	adc	r22, r22
    e7de:	82 9f       	mul	r24, r18
    e7e0:	22 27       	eor	r18, r18
    e7e2:	b0 0d       	add	r27, r0
    e7e4:	a1 1d       	adc	r26, r1
    e7e6:	62 1f       	adc	r22, r18
    e7e8:	73 9f       	mul	r23, r19
    e7ea:	b0 0d       	add	r27, r0
    e7ec:	a1 1d       	adc	r26, r1
    e7ee:	62 1f       	adc	r22, r18
    e7f0:	83 9f       	mul	r24, r19
    e7f2:	a0 0d       	add	r26, r0
    e7f4:	61 1d       	adc	r22, r1
    e7f6:	22 1f       	adc	r18, r18
    e7f8:	74 9f       	mul	r23, r20
    e7fa:	33 27       	eor	r19, r19
    e7fc:	a0 0d       	add	r26, r0
    e7fe:	61 1d       	adc	r22, r1
    e800:	23 1f       	adc	r18, r19
    e802:	84 9f       	mul	r24, r20
    e804:	60 0d       	add	r22, r0
    e806:	21 1d       	adc	r18, r1
    e808:	82 2f       	mov	r24, r18
    e80a:	76 2f       	mov	r23, r22
    e80c:	6a 2f       	mov	r22, r26
    e80e:	11 24       	eor	r1, r1
    e810:	9f 57       	subi	r25, 0x7F	; 127
    e812:	50 40       	sbci	r21, 0x00	; 0
    e814:	9a f0       	brmi	.+38     	; 0xe83c <__mulsf3_pse+0x88>
    e816:	f1 f0       	breq	.+60     	; 0xe854 <__mulsf3_pse+0xa0>
    e818:	88 23       	and	r24, r24
    e81a:	4a f0       	brmi	.+18     	; 0xe82e <__mulsf3_pse+0x7a>
    e81c:	ee 0f       	add	r30, r30
    e81e:	ff 1f       	adc	r31, r31
    e820:	bb 1f       	adc	r27, r27
    e822:	66 1f       	adc	r22, r22
    e824:	77 1f       	adc	r23, r23
    e826:	88 1f       	adc	r24, r24
    e828:	91 50       	subi	r25, 0x01	; 1
    e82a:	50 40       	sbci	r21, 0x00	; 0
    e82c:	a9 f7       	brne	.-22     	; 0xe818 <__mulsf3_pse+0x64>
    e82e:	9e 3f       	cpi	r25, 0xFE	; 254
    e830:	51 05       	cpc	r21, r1
    e832:	80 f0       	brcs	.+32     	; 0xe854 <__mulsf3_pse+0xa0>
    e834:	0c 94 ab 72 	jmp	0xe556	; 0xe556 <__fp_inf>
    e838:	0c 94 b1 73 	jmp	0xe762	; 0xe762 <__fp_szero>
    e83c:	5f 3f       	cpi	r21, 0xFF	; 255
    e83e:	e4 f3       	brlt	.-8      	; 0xe838 <__mulsf3_pse+0x84>
    e840:	98 3e       	cpi	r25, 0xE8	; 232
    e842:	d4 f3       	brlt	.-12     	; 0xe838 <__mulsf3_pse+0x84>
    e844:	86 95       	lsr	r24
    e846:	77 95       	ror	r23
    e848:	67 95       	ror	r22
    e84a:	b7 95       	ror	r27
    e84c:	f7 95       	ror	r31
    e84e:	e7 95       	ror	r30
    e850:	9f 5f       	subi	r25, 0xFF	; 255
    e852:	c1 f7       	brne	.-16     	; 0xe844 <__mulsf3_pse+0x90>
    e854:	fe 2b       	or	r31, r30
    e856:	88 0f       	add	r24, r24
    e858:	91 1d       	adc	r25, r1
    e85a:	96 95       	lsr	r25
    e85c:	87 95       	ror	r24
    e85e:	97 f9       	bld	r25, 7
    e860:	08 95       	ret

0000e862 <sin>:
    e862:	9f 93       	push	r25
    e864:	0e 94 28 73 	call	0xe650	; 0xe650 <__fp_rempio2>
    e868:	0f 90       	pop	r0
    e86a:	07 fc       	sbrc	r0, 7
    e86c:	ee 5f       	subi	r30, 0xFE	; 254
    e86e:	0c 94 62 73 	jmp	0xe6c4	; 0xe6c4 <__fp_sinus>
    e872:	19 f4       	brne	.+6      	; 0xe87a <sin+0x18>
    e874:	16 f4       	brtc	.+4      	; 0xe87a <sin+0x18>
    e876:	0c 94 da 72 	jmp	0xe5b4	; 0xe5b4 <__fp_nan>
    e87a:	0c 94 cc 72 	jmp	0xe598	; 0xe598 <__fp_mpack>

0000e87e <sqrt>:
    e87e:	0e 94 7e 73 	call	0xe6fc	; 0xe6fc <__fp_splitA>
sqrt():
    e882:	b8 f3       	brcs	.-18     	; 0xe872 <sin+0x10>
    e884:	99 23       	and	r25, r25
    e886:	c9 f3       	breq	.-14     	; 0xe87a <sin+0x18>
    e888:	b6 f3       	brts	.-20     	; 0xe876 <sin+0x14>
    e88a:	9f 57       	subi	r25, 0x7F	; 127
    e88c:	55 0b       	sbc	r21, r21
    e88e:	87 ff       	sbrs	r24, 7
    e890:	0e 94 ad 74 	call	0xe95a	; 0xe95a <__fp_norm2>
    e894:	00 24       	eor	r0, r0
    e896:	a0 e6       	ldi	r26, 0x60	; 96
    e898:	40 ea       	ldi	r20, 0xA0	; 160
    e89a:	90 01       	movw	r18, r0
    e89c:	80 58       	subi	r24, 0x80	; 128
    e89e:	56 95       	lsr	r21
    e8a0:	97 95       	ror	r25
    e8a2:	28 f4       	brcc	.+10     	; 0xe8ae <sqrt+0x30>
    e8a4:	80 5c       	subi	r24, 0xC0	; 192
    e8a6:	66 0f       	add	r22, r22
    e8a8:	77 1f       	adc	r23, r23
    e8aa:	88 1f       	adc	r24, r24
    e8ac:	20 f0       	brcs	.+8      	; 0xe8b6 <sqrt+0x38>
    e8ae:	26 17       	cp	r18, r22
    e8b0:	37 07       	cpc	r19, r23
    e8b2:	48 07       	cpc	r20, r24
    e8b4:	30 f4       	brcc	.+12     	; 0xe8c2 <sqrt+0x44>
    e8b6:	62 1b       	sub	r22, r18
    e8b8:	73 0b       	sbc	r23, r19
    e8ba:	84 0b       	sbc	r24, r20
    e8bc:	20 29       	or	r18, r0
    e8be:	31 29       	or	r19, r1
    e8c0:	4a 2b       	or	r20, r26
    e8c2:	a6 95       	lsr	r26
    e8c4:	17 94       	ror	r1
    e8c6:	07 94       	ror	r0
    e8c8:	20 25       	eor	r18, r0
    e8ca:	31 25       	eor	r19, r1
    e8cc:	4a 27       	eor	r20, r26
    e8ce:	58 f7       	brcc	.-42     	; 0xe8a6 <sqrt+0x28>
    e8d0:	66 0f       	add	r22, r22
    e8d2:	77 1f       	adc	r23, r23
    e8d4:	88 1f       	adc	r24, r24
    e8d6:	20 f0       	brcs	.+8      	; 0xe8e0 <sqrt+0x62>
    e8d8:	26 17       	cp	r18, r22
    e8da:	37 07       	cpc	r19, r23
    e8dc:	48 07       	cpc	r20, r24
    e8de:	30 f4       	brcc	.+12     	; 0xe8ec <sqrt+0x6e>
    e8e0:	62 0b       	sbc	r22, r18
    e8e2:	73 0b       	sbc	r23, r19
    e8e4:	84 0b       	sbc	r24, r20
    e8e6:	20 0d       	add	r18, r0
    e8e8:	31 1d       	adc	r19, r1
    e8ea:	41 1d       	adc	r20, r1
    e8ec:	a0 95       	com	r26
    e8ee:	81 f7       	brne	.-32     	; 0xe8d0 <sqrt+0x52>
    e8f0:	b9 01       	movw	r22, r18
    e8f2:	84 2f       	mov	r24, r20
    e8f4:	91 58       	subi	r25, 0x81	; 129
    e8f6:	88 0f       	add	r24, r24
    e8f8:	96 95       	lsr	r25
    e8fa:	87 95       	ror	r24
    e8fc:	08 95       	ret

0000e8fe <square>:
    e8fe:	9b 01       	movw	r18, r22
    e900:	ac 01       	movw	r20, r24
    e902:	0c 94 c4 73 	jmp	0xe788	; 0xe788 <__mulsf3>

0000e906 <tan>:
    e906:	df 93       	push	r29
    e908:	d9 2f       	mov	r29, r25
tan():
    e90a:	0e 94 28 73 	call	0xe650	; 0xe650 <__fp_rempio2>
    e90e:	e6 95       	lsr	r30
    e910:	d7 95       	ror	r29
    e912:	2a ed       	ldi	r18, 0xDA	; 218
    e914:	3f e0       	ldi	r19, 0x0F	; 15
    e916:	49 e4       	ldi	r20, 0x49	; 73
    e918:	5f e3       	ldi	r21, 0x3F	; 63
    e91a:	b3 3a       	cpi	r27, 0xA3	; 163
    e91c:	62 07       	cpc	r22, r18
    e91e:	73 07       	cpc	r23, r19
    e920:	84 07       	cpc	r24, r20
    e922:	95 07       	cpc	r25, r21
    e924:	d7 95       	ror	r29
    e926:	3a f0       	brmi	.+14     	; 0xe936 <tan+0x30>
    e928:	a2 ea       	ldi	r26, 0xA2	; 162
    e92a:	49 ec       	ldi	r20, 0xC9	; 201
    e92c:	90 68       	ori	r25, 0x80	; 128
    e92e:	0e 94 7f 70 	call	0xe0fe	; 0xe0fe <__addsf3x>
    e932:	0e 94 51 73 	call	0xe6a2	; 0xe6a2 <__fp_round>
    e936:	e3 e1       	ldi	r30, 0x13	; 19
    e938:	f1 e0       	ldi	r31, 0x01	; 1
    e93a:	0e 94 04 73 	call	0xe608	; 0xe608 <__fp_powsodd>
    e93e:	dd 0f       	add	r29, r29
    e940:	13 f0       	brvs	.+4      	; 0xe946 <tan+0x40>
    e942:	0e 94 bc 73 	call	0xe778	; 0xe778 <inverse>
    e946:	dd 0f       	add	r29, r29
    e948:	0b f4       	brvc	.+2      	; 0xe94c <tan+0x46>
    e94a:	90 58       	subi	r25, 0x80	; 128
    e94c:	df 91       	pop	r29
    e94e:	08 95       	ret

0000e950 <__unordsf2>:
__unordsf2():
    e950:	0e 94 87 72 	call	0xe50e	; 0xe50e <__fp_cmp>
    e954:	88 0b       	sbc	r24, r24
    e956:	99 0b       	sbc	r25, r25
    e958:	08 95       	ret

0000e95a <__fp_norm2>:
__fp_norm2():
    e95a:	91 50       	subi	r25, 0x01	; 1
    e95c:	50 40       	sbci	r21, 0x00	; 0
    e95e:	66 0f       	add	r22, r22
    e960:	77 1f       	adc	r23, r23
    e962:	88 1f       	adc	r24, r24
    e964:	d2 f7       	brpl	.-12     	; 0xe95a <__fp_norm2>
    e966:	08 95       	ret

0000e968 <__mulsi3>:
__mulsi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:648
    e968:	db 01       	movw	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:649
    e96a:	8f 93       	push	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:650
    e96c:	9f 93       	push	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:651
    e96e:	0e 94 3d 75 	call	0xea7a	; 0xea7a <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:652
    e972:	bf 91       	pop	r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:653
    e974:	af 91       	pop	r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:655
    e976:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:656
    e978:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:657
    e97a:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:658
    e97c:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:659
    e97e:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:660
    e980:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:661
    e982:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:662
    e984:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:663
    e986:	08 95       	ret

0000e988 <__udivmodqi4>:
__udivmodqi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1346
    e988:	99 1b       	sub	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1347
    e98a:	79 e0       	ldi	r23, 0x09	; 9
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1348
    e98c:	04 c0       	rjmp	.+8      	; 0xe996 <__udivmodqi4_ep>

0000e98e <__udivmodqi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1350
    e98e:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1351
    e990:	96 17       	cp	r25, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1352
    e992:	08 f0       	brcs	.+2      	; 0xe996 <__udivmodqi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1353
    e994:	96 1b       	sub	r25, r22

0000e996 <__udivmodqi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1355
    e996:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1356
    e998:	7a 95       	dec	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1357
    e99a:	c9 f7       	brne	.-14     	; 0xe98e <__udivmodqi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1358
    e99c:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1360
    e99e:	08 95       	ret

0000e9a0 <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    e9a0:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    e9a2:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    e9a4:	16 f4       	brtc	.+4      	; 0xe9aa <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    e9a6:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    e9a8:	07 d0       	rcall	.+14     	; 0xe9b8 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    e9aa:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    e9ac:	09 d0       	rcall	.+18     	; 0xe9c0 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    e9ae:	0e 94 50 75 	call	0xeaa0	; 0xeaa0 <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    e9b2:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    e9b4:	05 d0       	rcall	.+10     	; 0xe9c0 <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    e9b6:	3e f4       	brtc	.+14     	; 0xe9c6 <__divmodhi4_exit>

0000e9b8 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    e9b8:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    e9ba:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    e9bc:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    e9be:	08 95       	ret

0000e9c0 <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    e9c0:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    e9c2:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    e9c4:	7f 4f       	sbci	r23, 0xFF	; 255

0000e9c6 <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    e9c6:	08 95       	ret

0000e9c8 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    e9c8:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    e9ca:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    e9cc:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    e9ce:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    e9d0:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    e9d2:	0d c0       	rjmp	.+26     	; 0xe9ee <__udivmodsi4_ep>

0000e9d4 <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    e9d4:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    e9d6:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    e9d8:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    e9da:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    e9dc:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    e9de:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    e9e0:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    e9e2:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    e9e4:	20 f0       	brcs	.+8      	; 0xe9ee <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    e9e6:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    e9e8:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    e9ea:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    e9ec:	f5 0b       	sbc	r31, r21

0000e9ee <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    e9ee:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    e9f0:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    e9f2:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    e9f4:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    e9f6:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    e9f8:	69 f7       	brne	.-38     	; 0xe9d4 <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    e9fa:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    e9fc:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    e9fe:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    ea00:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    ea02:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    ea04:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    ea06:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    ea08:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    ea0a:	08 95       	ret

0000ea0c <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    ea0c:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    ea0e:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    ea10:	1e f4       	brtc	.+6      	; 0xea18 <__divmodsi4+0xc>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    ea12:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    ea14:	0e 94 1d 75 	call	0xea3a	; 0xea3a <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    ea18:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
    ea1a:	07 d0       	rcall	.+14     	; 0xea2a <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    ea1c:	0e 94 e4 74 	call	0xe9c8	; 0xe9c8 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    ea20:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
    ea22:	03 d0       	rcall	.+6      	; 0xea2a <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    ea24:	4e f4       	brtc	.+18     	; 0xea38 <__divmodsi4_exit>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    ea26:	0c 94 1d 75 	jmp	0xea3a	; 0xea3a <__negsi2>

0000ea2a <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    ea2a:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    ea2c:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    ea2e:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    ea30:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    ea32:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    ea34:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    ea36:	5f 4f       	sbci	r21, 0xFF	; 255

0000ea38 <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    ea38:	08 95       	ret

0000ea3a <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    ea3a:	90 95       	com	r25
    ea3c:	80 95       	com	r24
    ea3e:	70 95       	com	r23
    ea40:	61 95       	neg	r22
    ea42:	7f 4f       	sbci	r23, 0xFF	; 255
    ea44:	8f 4f       	sbci	r24, 0xFF	; 255
    ea46:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    ea48:	08 95       	ret

0000ea4a <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    ea4a:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    ea4c:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2304
    ea4e:	00 24       	eor	r0, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2305
    ea50:	00 1c       	adc	r0, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2306
    ea52:	0b be       	out	0x3b, r0	; 59
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2312
    ea54:	07 90       	elpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2313
    ea56:	f6 91       	elpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2314
    ea58:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2319
    ea5a:	09 94       	ijmp

0000ea5c <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    ea5c:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    ea5e:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    ea60:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    ea62:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    ea64:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    ea66:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    ea68:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    ea6a:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    ea6c:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    ea6e:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    ea70:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    ea72:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    ea74:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    ea76:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    ea78:	08 95       	ret

0000ea7a <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    ea7a:	0e 94 2e 75 	call	0xea5c	; 0xea5c <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    ea7e:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    ea80:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    ea82:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    ea84:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    ea86:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    ea88:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    ea8a:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    ea8c:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    ea8e:	08 95       	ret

0000ea90 <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    ea90:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    ea92:	0c 94 3d 75 	jmp	0xea7a	; 0xea7a <__muluhisi3>

0000ea96 <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    ea96:	0e 94 3d 75 	call	0xea7a	; 0xea7a <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    ea9a:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    ea9c:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    ea9e:	08 95       	ret

0000eaa0 <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    eaa0:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    eaa2:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    eaa4:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    eaa6:	07 c0       	rjmp	.+14     	; 0xeab6 <__udivmodhi4_ep>

0000eaa8 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    eaa8:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    eaaa:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    eaac:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    eaae:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    eab0:	10 f0       	brcs	.+4      	; 0xeab6 <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    eab2:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    eab4:	b7 0b       	sbc	r27, r23

0000eab6 <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    eab6:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    eab8:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    eaba:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    eabc:	a9 f7       	brne	.-22     	; 0xeaa8 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    eabe:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    eac0:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    eac2:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    eac4:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    eac6:	08 95       	ret

0000eac8 <malloc>:
malloc():
    eac8:	0f 93       	push	r16
    eaca:	1f 93       	push	r17
    eacc:	cf 93       	push	r28
    eace:	df 93       	push	r29
    ead0:	82 30       	cpi	r24, 0x02	; 2
    ead2:	91 05       	cpc	r25, r1
    ead4:	10 f4       	brcc	.+4      	; 0xeada <malloc+0x12>
    ead6:	82 e0       	ldi	r24, 0x02	; 2
    ead8:	90 e0       	ldi	r25, 0x00	; 0
    eada:	e0 91 d9 0a 	lds	r30, 0x0AD9	; 0x800ad9 <__flp>
    eade:	f0 91 da 0a 	lds	r31, 0x0ADA	; 0x800ada <__flp+0x1>
    eae2:	30 e0       	ldi	r19, 0x00	; 0
    eae4:	20 e0       	ldi	r18, 0x00	; 0
    eae6:	b0 e0       	ldi	r27, 0x00	; 0
    eae8:	a0 e0       	ldi	r26, 0x00	; 0
    eaea:	30 97       	sbiw	r30, 0x00	; 0
    eaec:	99 f4       	brne	.+38     	; 0xeb14 <malloc+0x4c>
    eaee:	21 15       	cp	r18, r1
    eaf0:	31 05       	cpc	r19, r1
    eaf2:	09 f4       	brne	.+2      	; 0xeaf6 <malloc+0x2e>
    eaf4:	4a c0       	rjmp	.+148    	; 0xeb8a <malloc+0xc2>
    eaf6:	28 1b       	sub	r18, r24
    eaf8:	39 0b       	sbc	r19, r25
    eafa:	24 30       	cpi	r18, 0x04	; 4
    eafc:	31 05       	cpc	r19, r1
    eafe:	d8 f5       	brcc	.+118    	; 0xeb76 <malloc+0xae>
    eb00:	8a 81       	ldd	r24, Y+2	; 0x02
    eb02:	9b 81       	ldd	r25, Y+3	; 0x03
    eb04:	61 15       	cp	r22, r1
    eb06:	71 05       	cpc	r23, r1
    eb08:	89 f1       	breq	.+98     	; 0xeb6c <malloc+0xa4>
    eb0a:	fb 01       	movw	r30, r22
    eb0c:	93 83       	std	Z+3, r25	; 0x03
    eb0e:	82 83       	std	Z+2, r24	; 0x02
    eb10:	fe 01       	movw	r30, r28
    eb12:	11 c0       	rjmp	.+34     	; 0xeb36 <malloc+0x6e>
    eb14:	40 81       	ld	r20, Z
    eb16:	51 81       	ldd	r21, Z+1	; 0x01
    eb18:	02 81       	ldd	r16, Z+2	; 0x02
    eb1a:	13 81       	ldd	r17, Z+3	; 0x03
    eb1c:	48 17       	cp	r20, r24
    eb1e:	59 07       	cpc	r21, r25
    eb20:	e0 f0       	brcs	.+56     	; 0xeb5a <malloc+0x92>
    eb22:	48 17       	cp	r20, r24
    eb24:	59 07       	cpc	r21, r25
    eb26:	99 f4       	brne	.+38     	; 0xeb4e <malloc+0x86>
    eb28:	10 97       	sbiw	r26, 0x00	; 0
    eb2a:	61 f0       	breq	.+24     	; 0xeb44 <malloc+0x7c>
    eb2c:	12 96       	adiw	r26, 0x02	; 2
    eb2e:	0c 93       	st	X, r16
    eb30:	12 97       	sbiw	r26, 0x02	; 2
    eb32:	13 96       	adiw	r26, 0x03	; 3
    eb34:	1c 93       	st	X, r17
    eb36:	32 96       	adiw	r30, 0x02	; 2
    eb38:	cf 01       	movw	r24, r30
    eb3a:	df 91       	pop	r29
    eb3c:	cf 91       	pop	r28
    eb3e:	1f 91       	pop	r17
    eb40:	0f 91       	pop	r16
    eb42:	08 95       	ret
    eb44:	00 93 d9 0a 	sts	0x0AD9, r16	; 0x800ad9 <__flp>
    eb48:	10 93 da 0a 	sts	0x0ADA, r17	; 0x800ada <__flp+0x1>
    eb4c:	f4 cf       	rjmp	.-24     	; 0xeb36 <malloc+0x6e>
    eb4e:	21 15       	cp	r18, r1
    eb50:	31 05       	cpc	r19, r1
    eb52:	51 f0       	breq	.+20     	; 0xeb68 <malloc+0xa0>
    eb54:	42 17       	cp	r20, r18
    eb56:	53 07       	cpc	r21, r19
    eb58:	38 f0       	brcs	.+14     	; 0xeb68 <malloc+0xa0>
    eb5a:	a9 01       	movw	r20, r18
    eb5c:	db 01       	movw	r26, r22
    eb5e:	9a 01       	movw	r18, r20
    eb60:	bd 01       	movw	r22, r26
    eb62:	df 01       	movw	r26, r30
    eb64:	f8 01       	movw	r30, r16
    eb66:	c1 cf       	rjmp	.-126    	; 0xeaea <malloc+0x22>
    eb68:	ef 01       	movw	r28, r30
    eb6a:	f9 cf       	rjmp	.-14     	; 0xeb5e <malloc+0x96>
    eb6c:	90 93 da 0a 	sts	0x0ADA, r25	; 0x800ada <__flp+0x1>
    eb70:	80 93 d9 0a 	sts	0x0AD9, r24	; 0x800ad9 <__flp>
    eb74:	cd cf       	rjmp	.-102    	; 0xeb10 <malloc+0x48>
    eb76:	fe 01       	movw	r30, r28
    eb78:	e2 0f       	add	r30, r18
    eb7a:	f3 1f       	adc	r31, r19
    eb7c:	81 93       	st	Z+, r24
    eb7e:	91 93       	st	Z+, r25
    eb80:	22 50       	subi	r18, 0x02	; 2
    eb82:	31 09       	sbc	r19, r1
    eb84:	39 83       	std	Y+1, r19	; 0x01
    eb86:	28 83       	st	Y, r18
    eb88:	d7 cf       	rjmp	.-82     	; 0xeb38 <malloc+0x70>
    eb8a:	20 91 d7 0a 	lds	r18, 0x0AD7	; 0x800ad7 <__brkval>
    eb8e:	30 91 d8 0a 	lds	r19, 0x0AD8	; 0x800ad8 <__brkval+0x1>
    eb92:	23 2b       	or	r18, r19
    eb94:	41 f4       	brne	.+16     	; 0xeba6 <malloc+0xde>
    eb96:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    eb9a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    eb9e:	30 93 d8 0a 	sts	0x0AD8, r19	; 0x800ad8 <__brkval+0x1>
    eba2:	20 93 d7 0a 	sts	0x0AD7, r18	; 0x800ad7 <__brkval>
    eba6:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    ebaa:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    ebae:	21 15       	cp	r18, r1
    ebb0:	31 05       	cpc	r19, r1
    ebb2:	41 f4       	brne	.+16     	; 0xebc4 <malloc+0xfc>
    ebb4:	2d b7       	in	r18, 0x3d	; 61
    ebb6:	3e b7       	in	r19, 0x3e	; 62
    ebb8:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    ebbc:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    ebc0:	24 1b       	sub	r18, r20
    ebc2:	35 0b       	sbc	r19, r21
    ebc4:	e0 91 d7 0a 	lds	r30, 0x0AD7	; 0x800ad7 <__brkval>
    ebc8:	f0 91 d8 0a 	lds	r31, 0x0AD8	; 0x800ad8 <__brkval+0x1>
    ebcc:	e2 17       	cp	r30, r18
    ebce:	f3 07       	cpc	r31, r19
    ebd0:	a0 f4       	brcc	.+40     	; 0xebfa <malloc+0x132>
    ebd2:	2e 1b       	sub	r18, r30
    ebd4:	3f 0b       	sbc	r19, r31
    ebd6:	28 17       	cp	r18, r24
    ebd8:	39 07       	cpc	r19, r25
    ebda:	78 f0       	brcs	.+30     	; 0xebfa <malloc+0x132>
    ebdc:	ac 01       	movw	r20, r24
    ebde:	4e 5f       	subi	r20, 0xFE	; 254
    ebe0:	5f 4f       	sbci	r21, 0xFF	; 255
    ebe2:	24 17       	cp	r18, r20
    ebe4:	35 07       	cpc	r19, r21
    ebe6:	48 f0       	brcs	.+18     	; 0xebfa <malloc+0x132>
    ebe8:	4e 0f       	add	r20, r30
    ebea:	5f 1f       	adc	r21, r31
    ebec:	50 93 d8 0a 	sts	0x0AD8, r21	; 0x800ad8 <__brkval+0x1>
    ebf0:	40 93 d7 0a 	sts	0x0AD7, r20	; 0x800ad7 <__brkval>
    ebf4:	81 93       	st	Z+, r24
    ebf6:	91 93       	st	Z+, r25
    ebf8:	9f cf       	rjmp	.-194    	; 0xeb38 <malloc+0x70>
    ebfa:	f0 e0       	ldi	r31, 0x00	; 0
    ebfc:	e0 e0       	ldi	r30, 0x00	; 0
    ebfe:	9c cf       	rjmp	.-200    	; 0xeb38 <malloc+0x70>

0000ec00 <free>:
free():
    ec00:	cf 93       	push	r28
    ec02:	df 93       	push	r29
    ec04:	00 97       	sbiw	r24, 0x00	; 0
    ec06:	e9 f0       	breq	.+58     	; 0xec42 <free+0x42>
    ec08:	fc 01       	movw	r30, r24
    ec0a:	32 97       	sbiw	r30, 0x02	; 2
    ec0c:	13 82       	std	Z+3, r1	; 0x03
    ec0e:	12 82       	std	Z+2, r1	; 0x02
    ec10:	a0 91 d9 0a 	lds	r26, 0x0AD9	; 0x800ad9 <__flp>
    ec14:	b0 91 da 0a 	lds	r27, 0x0ADA	; 0x800ada <__flp+0x1>
    ec18:	ed 01       	movw	r28, r26
    ec1a:	30 e0       	ldi	r19, 0x00	; 0
    ec1c:	20 e0       	ldi	r18, 0x00	; 0
    ec1e:	10 97       	sbiw	r26, 0x00	; 0
    ec20:	a1 f4       	brne	.+40     	; 0xec4a <free+0x4a>
    ec22:	20 81       	ld	r18, Z
    ec24:	31 81       	ldd	r19, Z+1	; 0x01
    ec26:	82 0f       	add	r24, r18
    ec28:	93 1f       	adc	r25, r19
    ec2a:	20 91 d7 0a 	lds	r18, 0x0AD7	; 0x800ad7 <__brkval>
    ec2e:	30 91 d8 0a 	lds	r19, 0x0AD8	; 0x800ad8 <__brkval+0x1>
    ec32:	28 17       	cp	r18, r24
    ec34:	39 07       	cpc	r19, r25
    ec36:	09 f0       	breq	.+2      	; 0xec3a <free+0x3a>
    ec38:	61 c0       	rjmp	.+194    	; 0xecfc <free+0xfc>
    ec3a:	f0 93 d8 0a 	sts	0x0AD8, r31	; 0x800ad8 <__brkval+0x1>
    ec3e:	e0 93 d7 0a 	sts	0x0AD7, r30	; 0x800ad7 <__brkval>
    ec42:	df 91       	pop	r29
    ec44:	cf 91       	pop	r28
    ec46:	08 95       	ret
    ec48:	ea 01       	movw	r28, r20
    ec4a:	ce 17       	cp	r28, r30
    ec4c:	df 07       	cpc	r29, r31
    ec4e:	e8 f5       	brcc	.+122    	; 0xecca <free+0xca>
    ec50:	4a 81       	ldd	r20, Y+2	; 0x02
    ec52:	5b 81       	ldd	r21, Y+3	; 0x03
    ec54:	9e 01       	movw	r18, r28
    ec56:	41 15       	cp	r20, r1
    ec58:	51 05       	cpc	r21, r1
    ec5a:	b1 f7       	brne	.-20     	; 0xec48 <free+0x48>
    ec5c:	e9 01       	movw	r28, r18
    ec5e:	fb 83       	std	Y+3, r31	; 0x03
    ec60:	ea 83       	std	Y+2, r30	; 0x02
    ec62:	49 91       	ld	r20, Y+
    ec64:	59 91       	ld	r21, Y+
    ec66:	c4 0f       	add	r28, r20
    ec68:	d5 1f       	adc	r29, r21
    ec6a:	ec 17       	cp	r30, r28
    ec6c:	fd 07       	cpc	r31, r29
    ec6e:	61 f4       	brne	.+24     	; 0xec88 <free+0x88>
    ec70:	80 81       	ld	r24, Z
    ec72:	91 81       	ldd	r25, Z+1	; 0x01
    ec74:	02 96       	adiw	r24, 0x02	; 2
    ec76:	84 0f       	add	r24, r20
    ec78:	95 1f       	adc	r25, r21
    ec7a:	e9 01       	movw	r28, r18
    ec7c:	99 83       	std	Y+1, r25	; 0x01
    ec7e:	88 83       	st	Y, r24
    ec80:	82 81       	ldd	r24, Z+2	; 0x02
    ec82:	93 81       	ldd	r25, Z+3	; 0x03
    ec84:	9b 83       	std	Y+3, r25	; 0x03
    ec86:	8a 83       	std	Y+2, r24	; 0x02
    ec88:	f0 e0       	ldi	r31, 0x00	; 0
    ec8a:	e0 e0       	ldi	r30, 0x00	; 0
    ec8c:	12 96       	adiw	r26, 0x02	; 2
    ec8e:	8d 91       	ld	r24, X+
    ec90:	9c 91       	ld	r25, X
    ec92:	13 97       	sbiw	r26, 0x03	; 3
    ec94:	00 97       	sbiw	r24, 0x00	; 0
    ec96:	b9 f5       	brne	.+110    	; 0xed06 <free+0x106>
    ec98:	2d 91       	ld	r18, X+
    ec9a:	3c 91       	ld	r19, X
    ec9c:	11 97       	sbiw	r26, 0x01	; 1
    ec9e:	cd 01       	movw	r24, r26
    eca0:	02 96       	adiw	r24, 0x02	; 2
    eca2:	82 0f       	add	r24, r18
    eca4:	93 1f       	adc	r25, r19
    eca6:	20 91 d7 0a 	lds	r18, 0x0AD7	; 0x800ad7 <__brkval>
    ecaa:	30 91 d8 0a 	lds	r19, 0x0AD8	; 0x800ad8 <__brkval+0x1>
    ecae:	28 17       	cp	r18, r24
    ecb0:	39 07       	cpc	r19, r25
    ecb2:	39 f6       	brne	.-114    	; 0xec42 <free+0x42>
    ecb4:	30 97       	sbiw	r30, 0x00	; 0
    ecb6:	51 f5       	brne	.+84     	; 0xed0c <free+0x10c>
    ecb8:	10 92 da 0a 	sts	0x0ADA, r1	; 0x800ada <__flp+0x1>
    ecbc:	10 92 d9 0a 	sts	0x0AD9, r1	; 0x800ad9 <__flp>
    ecc0:	b0 93 d8 0a 	sts	0x0AD8, r27	; 0x800ad8 <__brkval+0x1>
    ecc4:	a0 93 d7 0a 	sts	0x0AD7, r26	; 0x800ad7 <__brkval>
    ecc8:	bc cf       	rjmp	.-136    	; 0xec42 <free+0x42>
    ecca:	d3 83       	std	Z+3, r29	; 0x03
    eccc:	c2 83       	std	Z+2, r28	; 0x02
    ecce:	40 81       	ld	r20, Z
    ecd0:	51 81       	ldd	r21, Z+1	; 0x01
    ecd2:	84 0f       	add	r24, r20
    ecd4:	95 1f       	adc	r25, r21
    ecd6:	c8 17       	cp	r28, r24
    ecd8:	d9 07       	cpc	r29, r25
    ecda:	61 f4       	brne	.+24     	; 0xecf4 <free+0xf4>
    ecdc:	4e 5f       	subi	r20, 0xFE	; 254
    ecde:	5f 4f       	sbci	r21, 0xFF	; 255
    ece0:	88 81       	ld	r24, Y
    ece2:	99 81       	ldd	r25, Y+1	; 0x01
    ece4:	48 0f       	add	r20, r24
    ece6:	59 1f       	adc	r21, r25
    ece8:	51 83       	std	Z+1, r21	; 0x01
    ecea:	40 83       	st	Z, r20
    ecec:	8a 81       	ldd	r24, Y+2	; 0x02
    ecee:	9b 81       	ldd	r25, Y+3	; 0x03
    ecf0:	93 83       	std	Z+3, r25	; 0x03
    ecf2:	82 83       	std	Z+2, r24	; 0x02
    ecf4:	21 15       	cp	r18, r1
    ecf6:	31 05       	cpc	r19, r1
    ecf8:	09 f0       	breq	.+2      	; 0xecfc <free+0xfc>
    ecfa:	b0 cf       	rjmp	.-160    	; 0xec5c <free+0x5c>
    ecfc:	f0 93 da 0a 	sts	0x0ADA, r31	; 0x800ada <__flp+0x1>
    ed00:	e0 93 d9 0a 	sts	0x0AD9, r30	; 0x800ad9 <__flp>
    ed04:	9e cf       	rjmp	.-196    	; 0xec42 <free+0x42>
    ed06:	fd 01       	movw	r30, r26
    ed08:	dc 01       	movw	r26, r24
    ed0a:	c0 cf       	rjmp	.-128    	; 0xec8c <free+0x8c>
    ed0c:	13 82       	std	Z+3, r1	; 0x03
    ed0e:	12 82       	std	Z+2, r1	; 0x02
    ed10:	d7 cf       	rjmp	.-82     	; 0xecc0 <free+0xc0>

0000ed12 <abort>:
abort():
    ed12:	81 e0       	ldi	r24, 0x01	; 1
    ed14:	90 e0       	ldi	r25, 0x00	; 0
    ed16:	f8 94       	cli
    ed18:	0c 94 2c 77 	jmp	0xee58	; 0xee58 <__do_global_dtors>

0000ed1c <atoi>:
atoi():
    ed1c:	fc 01       	movw	r30, r24
    ed1e:	88 27       	eor	r24, r24
    ed20:	99 27       	eor	r25, r25
    ed22:	e8 94       	clt
    ed24:	21 91       	ld	r18, Z+
    ed26:	20 32       	cpi	r18, 0x20	; 32
    ed28:	e9 f3       	breq	.-6      	; 0xed24 <atoi+0x8>
    ed2a:	29 30       	cpi	r18, 0x09	; 9
    ed2c:	10 f0       	brcs	.+4      	; 0xed32 <atoi+0x16>
    ed2e:	2e 30       	cpi	r18, 0x0E	; 14
    ed30:	c8 f3       	brcs	.-14     	; 0xed24 <atoi+0x8>
    ed32:	2b 32       	cpi	r18, 0x2B	; 43
    ed34:	41 f0       	breq	.+16     	; 0xed46 <atoi+0x2a>
    ed36:	2d 32       	cpi	r18, 0x2D	; 45
    ed38:	39 f4       	brne	.+14     	; 0xed48 <atoi+0x2c>
    ed3a:	68 94       	set
    ed3c:	04 c0       	rjmp	.+8      	; 0xed46 <atoi+0x2a>
    ed3e:	0e 94 0e 77 	call	0xee1c	; 0xee1c <__mulhi_const_10>
    ed42:	82 0f       	add	r24, r18
    ed44:	91 1d       	adc	r25, r1
    ed46:	21 91       	ld	r18, Z+
    ed48:	20 53       	subi	r18, 0x30	; 48
    ed4a:	2a 30       	cpi	r18, 0x0A	; 10
    ed4c:	c0 f3       	brcs	.-16     	; 0xed3e <atoi+0x22>
    ed4e:	1e f4       	brtc	.+6      	; 0xed56 <atoi+0x3a>
    ed50:	90 95       	com	r25
    ed52:	81 95       	neg	r24
    ed54:	9f 4f       	sbci	r25, 0xFF	; 255
    ed56:	08 95       	ret

0000ed58 <atol>:
atol():
    ed58:	1f 93       	push	r17
    ed5a:	fc 01       	movw	r30, r24
    ed5c:	99 27       	eor	r25, r25
    ed5e:	88 27       	eor	r24, r24
    ed60:	bc 01       	movw	r22, r24
    ed62:	e8 94       	clt
    ed64:	11 91       	ld	r17, Z+
    ed66:	10 32       	cpi	r17, 0x20	; 32
    ed68:	e9 f3       	breq	.-6      	; 0xed64 <atol+0xc>
    ed6a:	19 30       	cpi	r17, 0x09	; 9
    ed6c:	10 f0       	brcs	.+4      	; 0xed72 <atol+0x1a>
    ed6e:	1e 30       	cpi	r17, 0x0E	; 14
    ed70:	c8 f3       	brcs	.-14     	; 0xed64 <atol+0xc>
    ed72:	1b 32       	cpi	r17, 0x2B	; 43
    ed74:	51 f0       	breq	.+20     	; 0xed8a <atol+0x32>
    ed76:	1d 32       	cpi	r17, 0x2D	; 45
    ed78:	49 f4       	brne	.+18     	; 0xed8c <atol+0x34>
    ed7a:	68 94       	set
    ed7c:	06 c0       	rjmp	.+12     	; 0xed8a <atol+0x32>
    ed7e:	0e 94 f9 76 	call	0xedf2	; 0xedf2 <__mulsi_const_10>
    ed82:	61 0f       	add	r22, r17
    ed84:	71 1d       	adc	r23, r1
    ed86:	81 1d       	adc	r24, r1
    ed88:	91 1d       	adc	r25, r1
    ed8a:	11 91       	ld	r17, Z+
    ed8c:	10 53       	subi	r17, 0x30	; 48
    ed8e:	1a 30       	cpi	r17, 0x0A	; 10
    ed90:	b0 f3       	brcs	.-20     	; 0xed7e <atol+0x26>
    ed92:	3e f4       	brtc	.+14     	; 0xeda2 <atol+0x4a>
    ed94:	90 95       	com	r25
    ed96:	80 95       	com	r24
    ed98:	70 95       	com	r23
    ed9a:	61 95       	neg	r22
    ed9c:	7f 4f       	sbci	r23, 0xFF	; 255
    ed9e:	8f 4f       	sbci	r24, 0xFF	; 255
    eda0:	9f 4f       	sbci	r25, 0xFF	; 255
    eda2:	1f 91       	pop	r17
    eda4:	08 95       	ret

0000eda6 <memset>:
memset():
    eda6:	dc 01       	movw	r26, r24
    eda8:	01 c0       	rjmp	.+2      	; 0xedac <memset+0x6>
    edaa:	6d 93       	st	X+, r22
    edac:	41 50       	subi	r20, 0x01	; 1
    edae:	50 40       	sbci	r21, 0x00	; 0
    edb0:	e0 f7       	brcc	.-8      	; 0xedaa <memset+0x4>
    edb2:	08 95       	ret

0000edb4 <strcmp>:
strcmp():
    edb4:	fb 01       	movw	r30, r22
    edb6:	dc 01       	movw	r26, r24
    edb8:	8d 91       	ld	r24, X+
    edba:	01 90       	ld	r0, Z+
    edbc:	80 19       	sub	r24, r0
    edbe:	01 10       	cpse	r0, r1
    edc0:	d9 f3       	breq	.-10     	; 0xedb8 <strcmp+0x4>
    edc2:	99 0b       	sbc	r25, r25
    edc4:	08 95       	ret

0000edc6 <strcpy>:
strcpy():
    edc6:	fb 01       	movw	r30, r22
    edc8:	dc 01       	movw	r26, r24
    edca:	01 90       	ld	r0, Z+
    edcc:	0d 92       	st	X+, r0
    edce:	00 20       	and	r0, r0
    edd0:	e1 f7       	brne	.-8      	; 0xedca <strcpy+0x4>
    edd2:	08 95       	ret

0000edd4 <strncpy>:
strncpy():
    edd4:	fb 01       	movw	r30, r22
    edd6:	dc 01       	movw	r26, r24
    edd8:	41 50       	subi	r20, 0x01	; 1
    edda:	50 40       	sbci	r21, 0x00	; 0
    eddc:	48 f0       	brcs	.+18     	; 0xedf0 <strncpy+0x1c>
    edde:	01 90       	ld	r0, Z+
    ede0:	0d 92       	st	X+, r0
    ede2:	00 20       	and	r0, r0
    ede4:	c9 f7       	brne	.-14     	; 0xedd8 <strncpy+0x4>
    ede6:	01 c0       	rjmp	.+2      	; 0xedea <strncpy+0x16>
    ede8:	1d 92       	st	X+, r1
    edea:	41 50       	subi	r20, 0x01	; 1
    edec:	50 40       	sbci	r21, 0x00	; 0
    edee:	e0 f7       	brcc	.-8      	; 0xede8 <strncpy+0x14>
    edf0:	08 95       	ret

0000edf2 <__mulsi_const_10>:
__mulsi_const_10():
    edf2:	59 2f       	mov	r21, r25
    edf4:	48 2f       	mov	r20, r24
    edf6:	37 2f       	mov	r19, r23
    edf8:	26 2f       	mov	r18, r22
    edfa:	66 0f       	add	r22, r22
    edfc:	77 1f       	adc	r23, r23
    edfe:	88 1f       	adc	r24, r24
    ee00:	99 1f       	adc	r25, r25
    ee02:	66 0f       	add	r22, r22
    ee04:	77 1f       	adc	r23, r23
    ee06:	88 1f       	adc	r24, r24
    ee08:	99 1f       	adc	r25, r25
    ee0a:	62 0f       	add	r22, r18
    ee0c:	73 1f       	adc	r23, r19
    ee0e:	84 1f       	adc	r24, r20
    ee10:	95 1f       	adc	r25, r21
    ee12:	66 0f       	add	r22, r22
    ee14:	77 1f       	adc	r23, r23
    ee16:	88 1f       	adc	r24, r24
    ee18:	99 1f       	adc	r25, r25
    ee1a:	08 95       	ret

0000ee1c <__mulhi_const_10>:
__mulhi_const_10():
    ee1c:	7a e0       	ldi	r23, 0x0A	; 10
    ee1e:	97 9f       	mul	r25, r23
    ee20:	90 2d       	mov	r25, r0
    ee22:	87 9f       	mul	r24, r23
    ee24:	80 2d       	mov	r24, r0
    ee26:	91 0d       	add	r25, r1
    ee28:	11 24       	eor	r1, r1
    ee2a:	08 95       	ret

0000ee2c <eeprom_read_byte>:
eeprom_read_byte():
    ee2c:	f9 99       	sbic	0x1f, 1	; 31
    ee2e:	fe cf       	rjmp	.-4      	; 0xee2c <eeprom_read_byte>
    ee30:	92 bd       	out	0x22, r25	; 34
    ee32:	81 bd       	out	0x21, r24	; 33
    ee34:	f8 9a       	sbi	0x1f, 0	; 31
    ee36:	99 27       	eor	r25, r25
    ee38:	80 b5       	in	r24, 0x20	; 32
    ee3a:	08 95       	ret

0000ee3c <eeprom_write_byte>:
eeprom_write_byte():
    ee3c:	26 2f       	mov	r18, r22

0000ee3e <eeprom_write_r18>:
    ee3e:	f9 99       	sbic	0x1f, 1	; 31
    ee40:	fe cf       	rjmp	.-4      	; 0xee3e <eeprom_write_r18>
    ee42:	1f ba       	out	0x1f, r1	; 31
    ee44:	92 bd       	out	0x22, r25	; 34
    ee46:	81 bd       	out	0x21, r24	; 33
    ee48:	20 bd       	out	0x20, r18	; 32
    ee4a:	0f b6       	in	r0, 0x3f	; 63
    ee4c:	f8 94       	cli
    ee4e:	fa 9a       	sbi	0x1f, 2	; 31
    ee50:	f9 9a       	sbi	0x1f, 1	; 31
    ee52:	0f be       	out	0x3f, r0	; 63
    ee54:	01 96       	adiw	r24, 0x01	; 1
    ee56:	08 95       	ret

0000ee58 <__do_global_dtors>:
__do_global_dtors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2496
    ee58:	10 e1       	ldi	r17, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2497
    ee5a:	c9 e6       	ldi	r28, 0x69	; 105
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2498
    ee5c:	d0 e1       	ldi	r29, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2502
    ee5e:	04 c0       	rjmp	.+8      	; 0xee68 <__do_global_dtors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2508
    ee60:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2509
    ee62:	0e 94 25 75 	call	0xea4a	; 0xea4a <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2510
    ee66:	21 96       	adiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2515
    ee68:	ca 36       	cpi	r28, 0x6A	; 106
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2516
    ee6a:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2521
    ee6c:	c9 f7       	brne	.-14     	; 0xee60 <__do_global_dtors+0x8>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    ee6e:	f8 94       	cli

0000ee70 <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    ee70:	ff cf       	rjmp	.-2      	; 0xee70 <__stop_program>
