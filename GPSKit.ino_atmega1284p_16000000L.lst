
C:\Users\nyvir\AppData\Local\Temp\arduino_build_46253/GPSKit.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	0c 94 6a 10 	jmp	0x20d4	; 0x20d4 <__dtors_end>
       4:	0c 94 8b 69 	jmp	0xd316	; 0xd316 <__vector_1>
       8:	0c 94 b6 69 	jmp	0xd36c	; 0xd36c <__vector_2>
       c:	0c 94 e1 69 	jmp	0xd3c2	; 0xd3c2 <__vector_3>
      10:	0c 94 02 60 	jmp	0xc004	; 0xc004 <__vector_4>
      14:	0c 94 02 60 	jmp	0xc004	; 0xc004 <__vector_4>
      18:	0c 94 02 60 	jmp	0xc004	; 0xc004 <__vector_4>
      1c:	0c 94 02 60 	jmp	0xc004	; 0xc004 <__vector_4>
      20:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      24:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      28:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      2c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      30:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      34:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      38:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      3c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      40:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      44:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      48:	0c 94 0d 6a 	jmp	0xd41a	; 0xd41a <__vector_18>
      4c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      50:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      54:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      58:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      5c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      60:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      64:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      68:	0c 94 c9 53 	jmp	0xa792	; 0xa792 <__vector_26>
      6c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      70:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      74:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      78:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      7c:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      80:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      84:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      88:	0c 94 94 10 	jmp	0x2128	; 0x2128 <__bad_interrupt>
      8c:	03 6e       	ori	r16, 0xE3	; 227
      8e:	db 36       	cpi	r29, 0x6B	; 107
      90:	3d 9a       	sbi	0x07, 5	; 7
      92:	99 99       	sbic	0x13, 1	; 19
      94:	99 3d       	cpi	r25, 0xD9	; 217
      96:	ab aa       	std	Y+51, r10	; 0x33
      98:	aa 2a       	or	r10, r26
      9a:	3e 00       	.word	0x003e	; ????
      9c:	00 00       	nop
      9e:	80 3f       	cpi	r24, 0xF0	; 240
      a0:	08 4a       	sbci	r16, 0xA8	; 168
      a2:	d7 3b       	cpi	r29, 0xB7	; 183
      a4:	3b ce       	rjmp	.-906    	; 0xfffffd1c <__eeprom_end+0xff7efd1c>
      a6:	01 6e       	ori	r16, 0xE1	; 225
      a8:	84 bc       	out	0x24, r8	; 36
      aa:	bf fd       	.word	0xfdbf	; ????
      ac:	c1 2f       	mov	r28, r17
      ae:	3d 6c       	ori	r19, 0xCD	; 205
      b0:	74 31       	cpi	r23, 0x14	; 20
      b2:	9a bd       	out	0x2a, r25	; 42
      b4:	56 83       	std	Z+6, r21	; 0x06
      b6:	3d da       	rcall	.-2950   	; 0xfffff532 <__eeprom_end+0xff7ef532>
      b8:	3d 00       	.word	0x003d	; ????
      ba:	c7 7f       	andi	r28, 0xF7	; 247
      bc:	11 be       	out	0x31, r1	; 49
      be:	d9 e4       	ldi	r29, 0x49	; 73
      c0:	bb 4c       	sbci	r27, 0xCB	; 203
      c2:	3e 91       	ld	r19, -X
      c4:	6b aa       	std	Y+51, r6	; 0x33
      c6:	aa be       	out	0x3a, r10	; 58
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	3f 07       	cpc	r19, r31
      ce:	2c 7a       	andi	r18, 0xAC	; 172
      d0:	a5 ba       	out	0x15, r10	; 21
      d2:	6c c5       	rjmp	.+2776   	; 0xbac <gps_map_icon+0x106>
      d4:	90 da       	rcall	.-2784   	; 0xfffff5f6 <__eeprom_end+0xff7ef5f6>
      d6:	3b 93       	.word	0x933b	; ????
      d8:	65 fc       	sbrc	r6, 5
      da:	8b bc       	out	0x2b, r8	; 43
      dc:	53 f8       	bld	r5, 3
      de:	10 fd       	sbrc	r17, 0
      e0:	3c 56       	subi	r19, 0x6C	; 108
      e2:	92 83       	std	Z+2, r25	; 0x02
      e4:	4d bd       	out	0x2d, r20	; 45
      e6:	87 9d       	mul	r24, r7
      e8:	3a b6       	in	r3, 0x3a	; 58
      ea:	3d cb       	rjmp	.-2438   	; 0xfffff766 <__eeprom_end+0xff7ef766>
      ec:	c9 bf       	out	0x39, r28	; 57
      ee:	5b be       	out	0x3b, r5	; 59
      f0:	73 da       	rcall	.-2842   	; 0xfffff5d8 <__eeprom_end+0xff7ef5d8>
      f2:	0f c9       	rjmp	.-3554   	; 0xfffff312 <__eeprom_end+0xff7ef312>
      f4:	3f 05       	cpc	r19, r15
      f6:	a8 4c       	sbci	r26, 0xC8	; 200
      f8:	cd b2       	in	r12, 0x1d	; 29
      fa:	d4 4e       	sbci	r29, 0xE4	; 228
      fc:	b9 38       	cpi	r27, 0x89	; 137
      fe:	36 a9       	ldd	r19, Z+54	; 0x36
     100:	02 0c       	add	r0, r2
     102:	50 b9       	out	0x00, r21	; 0
     104:	91 86       	std	Z+9, r9	; 0x09
     106:	88 08       	sbc	r8, r8
     108:	3c a6       	std	Y+44, r3	; 0x2c
     10a:	aa aa       	std	Y+50, r10	; 0x32
     10c:	2a be       	out	0x3a, r2	; 58
     10e:	00 00       	nop
     110:	00 80       	ld	r0, Z
     112:	3f 06       	cpc	r3, r31
     114:	64 ec       	ldi	r22, 0xC4	; 196
     116:	1b 3c       	cpi	r17, 0xCB	; 203
     118:	04 bc       	out	0x24, r0	; 36
     11a:	16 3e       	cpi	r17, 0xE6	; 230
     11c:	3b e5       	ldi	r19, 0x5B	; 91
     11e:	b9 3c       	cpi	r27, 0xC9	; 201
     120:	c9 3c       	cpi	r28, 0xC9	; 201
     122:	37 c2       	rjmp	.+1134   	; 0x592 <altimeter_logo+0xd6>
     124:	9e 5a       	subi	r25, 0xAE	; 174
     126:	3d 66       	ori	r19, 0x6D	; 109
     128:	04 98       	cbi	0x00, 4	; 0
     12a:	08 3e       	cpi	r16, 0xE8	; 232
     12c:	ea 69       	ori	r30, 0x9A	; 154
     12e:	aa aa       	std	Y+50, r10	; 0x32
     130:	3e 00       	.word	0x003e	; ????
     132:	00 00       	nop
     134:	80 3f       	cpi	r24, 0xF0	; 240

00000136 <__trampolines_end>:
__trampolines_start():
     136:	44 45       	sbci	r20, 0x54	; 84
     138:	47 00       	.word	0x0047	; ????

0000013a <WaypointMenu()::__c>:
     13a:	6d 20 00                                            m .

0000013d <WaypointMenu()::__c>:
     13d:	30 00                                               0.

0000013f <WaypointMenu()::__c>:
     13f:	4e 4f 20 44 41 54 41 00                             NO DATA.

00000147 <WaypointMenu()::__c>:
     147:	53 45 4c 45 43 54 45 44 20 57 41 59 50 4f 49 4e     SELECTED WAYPOIN
     157:	54 3a 20 00                                         T: .

0000015b <WaypointMenu()::__c>:
     15b:	50 52 45 53 53 20 28 42 29 20 54 4f 20 53 45 4c     PRESS (B) TO SEL
     16b:	45 43 54 00                                         ECT.

0000016f <WaypointMenu()::__c>:
     16f:	57 41 59 50 4f 49 4e 54 3a 20 00                    WAYPOINT: .

0000017a <WaypointMenu()::__c>:
     17a:	53 45 4c 45 43 54 20 57 41 59 50 4f 49 4e 54 00     SELECT WAYPOINT.

0000018a <drawBitmap(int)::__c>:
     18a:	53 41 54 45 4c 4c 49 54 45 20 54 52 41 43 4b 45     SATELLITE TRACKE
     19a:	52 00                                               R.

0000019c <drawBitmap(int)::__c>:
     19c:	44 45 56 49 41 54 49 4f 4e 20 4d 41 50 00           DEVIATION MAP.

000001aa <drawBitmap(int)::__c>:
     1aa:	47 50 53 20 4e 41 56 49 47 41 54 49 4f 4e 00        GPS NAVIGATION.

000001b9 <drawBitmap(int)::__c>:
     1b9:	48 41 52 44 57 41 52 45 20 49 4e 46 4f 00           HARDWARE INFO.

000001c7 <drawBitmap(int)::__c>:
     1c7:	41 4c 54 49 4d 45 54 45 52 00                       ALTIMETER.

000001d1 <drawBitmap(int)::__c>:
     1d1:	44 49 47 49 54 41 4c 20 43 4f 4d 50 41 53 53 00     DIGITAL COMPASS.

000001e1 <drawBitmap(int)::__c>:
     1e1:	47 50 53 20 4e 41 56 49 47 41 54 49 4f 4e 00        GPS NAVIGATION.

000001f0 <UIMenu()::__c>:
     1f0:	47 4d 54 00                                         GMT.

000001f4 <UIMenu()::__c>:
     1f4:	55 54 43 00                                         UTC.

000001f8 <StartPointLog()::__c>:
     1f8:	45 45 50 52 4f 4d 20 52 45 43 4f 56 45 52 59 20     EEPROM RECOVERY 
     208:	44 41 54 41 00                                      DATA.

0000020d <StartPointLog()::__c>:
     20d:	64 65 67 00                                         deg.

00000211 <StartPointLog()::__c>:
     211:	44 49 53 54 2e 20 46 52 4f 4d 20 53 54 41 52 54     DIST. FROM START
     221:	20 50 4e 54 00                                       PNT.

00000226 <StartPointLog()::__c>:
     226:	53 54 41 52 54 20 50 4f 49 4e 54 00                 START POINT.

00000232 <StartPointLog()::__c>:
     232:	44 41 54 41 20 4c 4f 47 47 49 4e 47 00              DATA LOGGING.

0000023f <SatelliteTracker()::__c>:
     23f:	41 43 51 55 49 52 49 4e 47 2e 2e 2e 00              ACQUIRING....

0000024c <SatelliteTracker()::__c>:
     24c:	53 41 54 3a 20 00                                   SAT: .

00000252 <LogMenu()::__c>:
     252:	45 52 41 53 49 4e 47 20 45 45 50 52 4f 4d 2e 2e     ERASING EEPROM..
     262:	2e 00                                               ..

00000264 <LogMenu()::__c>:
     264:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

00000271 <LogMenu()::__c>:
     271:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

0000027e <LogMenu()::__c>:
     27e:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

0000028b <LogMenu()::__c>:
     28b:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

00000298 <LogMenu()::__c>:
     298:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

000002a5 <LogMenu()::__c>:
     2a5:	57 52 49 54 49 4e 47 2e 2e 2e 20 20 00              WRITING...  .

000002b2 <LogMenu()::__c>:
     2b2:	44 45 43 4f 44 49 4e 47 20 45 45 50 52 4f 4d 2e     DECODING EEPROM.
     2c2:	2e 2e 00                                            ...

000002c5 <InfoMenu()::__c>:
     2c5:	32 34 2e 31 31 32 30 32 31 00                       24.112021.

000002cf <InfoMenu()::__c>:
     2cf:	56 45 52 53 49 4f 4e 00                             VERSION.

000002d7 <InfoMenu()::__c>:
     2d7:	31 2e 37 30 25 00                                   1.70%.

000002dd <InfoMenu()::__c>:
     2dd:	45 45 50 52 4f 4d 00                                EEPROM.

000002e4 <InfoMenu()::__c>:
     2e4:	31 35 25 00                                         15%.

000002e8 <InfoMenu()::__c>:
     2e8:	52 41 4d 00                                         RAM.

000002ec <InfoMenu()::__c>:
     2ec:	34 36 25 00                                         46%.

000002f0 <InfoMenu()::__c>:
     2f0:	46 4c 41 53 48 00                                   FLASH.

000002f6 <InfoMenu()::__c>:
     2f6:	53 55 4e 53 45 54 00                                SUNSET.

000002fd <InfoMenu()::__c>:
     2fd:	53 55 4e 52 49 53 45 00                             SUNRISE.

00000305 <receptionSignalGraphMenu()::__c>:
     305:	47 50 53 20 53 54 41 52 54 55 50 3a 20 00           GPS STARTUP: .

00000313 <receptionSignalGraphMenu()::__c>:
     313:	48 44 4f 50 20 56 41 4c 55 45 3a 20 00              HDOP VALUE: .

00000320 <receptionSignalGraphMenu()::__c>:
     320:	6d 73 00                                            ms.

00000323 <receptionSignalGraphMenu()::__c>:
     323:	55 50 44 20 49 4e 54 45 52 56 41 4c 3a 20 00        UPD INTERVAL: .

00000332 <receptionSignalGraphMenu()::__c>:
     332:	43 4f 4e 4e 45 43 54 49 4f 4e 20 49 4e 46 4f 00     CONNECTION INFO.

00000342 <receptionSignalGraphMenu()::__c>:
     342:	52 45 43 45 50 54 49 4f 4e 20 53 49 47 4e 41 4c     RECEPTION SIGNAL
	...

00000353 <GPSMenu()::__c>:
     353:	48 44 4f 50 20 00                                   HDOP .

00000359 <GPSMenu()::__c>:
     359:	64 65 67 00                                         deg.

0000035d <GPSMenu()::__c>:
     35d:	53 41 54 45 4c 4c 49 54 45 00                       SATELLITE.

00000367 <GPSMenu()::__c>:
     367:	20 4b 6d 2f 68 00                                    Km/h.

0000036d <GPSMenu()::__c>:
     36d:	53 50 45 45 44 00                                   SPEED.

00000373 <GPSMenu()::__c>:
     373:	20 6d 00                                             m.

00000376 <GPSMenu()::__c>:
     376:	41 4c 54 49 54 55 44 45 00                          ALTITUDE.

0000037f <GPSMenu()::__c>:
     37f:	4c 4f 4e 47 49 54 55 44 45 20 00                    LONGITUDE .

0000038a <GPSMenu()::__c>:
     38a:	4c 41 54 49 54 55 44 45 00                          LATITUDE.

00000393 <GPSMenu()::__c>:
     393:	41 43 51 55 49 52 49 4e 47 20 53 41 54 45 4c 4c     ACQUIRING SATELL
     3a3:	49 54 45 53 00                                      ITES.

000003a8 <GPSMenu()::__c>:
     3a8:	41 43 51 55 49 52 49 4e 47 20 53 41 54 45 4c 4c     ACQUIRING SATELL
     3b8:	49 54 45 53 00                                      ITES.

000003bd <noReceptionSignal()::__c>:
     3bd:	41 52 45 20 59 4f 55 20 49 4e 44 4f 4f 52 3f 00     ARE YOU INDOOR?.

000003cd <noReceptionSignal()::__c>:
     3cd:	41 52 45 20 59 4f 55 20 49 4e 44 4f 4f 52 3f 00     ARE YOU INDOOR?.

000003dd <noReceptionSignal()::__c>:
     3dd:	20 55 54 43 00                                       UTC.

000003e2 <noReceptionSignal()::__c>:
     3e2:	30 00                                               0.

000003e4 <noReceptionSignal()::__c>:
     3e4:	43 48 45 43 4b 20 54 48 45 20 41 4e 54 45 4e 4e     CHECK THE ANTENN
     3f4:	41 00                                               A.

000003f6 <noReceptionSignal()::__c>:
     3f6:	54 4f 4f 20 4c 4f 4e 47 00                          TOO LONG.

000003ff <noReceptionSignal()::__c>:
     3ff:	53 49 47 4e 41 4c 20 52 45 43 45 50 54 49 4f 4e     SIGNAL RECEPTION
     40f:	20 54 4f 4f 4b 00                                    TOOK.

00000415 <DeviationMap()::__c>:
     415:	4e 4f 20 44 41 54 41 00                             NO DATA.

0000041d <CompassMenu()::__c>:
     41d:	44 49 47 49 54 41 4c 20 43 4f 4d 50 41 53 53 00     DIGITAL COMPASS.

0000042d <ButtonIO()::__c>:
     42d:	6d 61 6b 65 2e 62 65 6c 69 65 76 65 00              make.believe.

0000043a <ButtonIO()::__c>:
     43a:	42 4f 52 41 20 4e 59 00                             BORA NY.

00000442 <ButtonIO()::__c>:
     442:	50 52 4f 47 52 41 4d 4d 45 44 20 42 59 00           PROGRAMMED BY.

00000450 <AltitudeMenu()::__c>:
     450:	4e 4f 20 44 41 54 41 2e 2e 2e 00                    NO DATA....

0000045b <AltitudeMenu()::__c>:
     45b:	41 4c 54 49 54 55 44 45 20 47 52 41 50 48 00        ALTITUDE GRAPH.

0000046a <setup::__c>:
     46a:	5b 46 41 49 4c 45 44 5d 20 44 48 54 31 31 00        [FAILED] DHT11.

00000479 <setup::__c>:
     479:	5b 20 20 4f 4b 20 20 5d 20 4c 53 4d 33 30 33 44     [  OK  ] LSM303D
     489:	4c 48 43 00                                         LHC.

0000048d <setup::__c>:
     48d:	5b 20 20 4f 4b 20 20 5d 20 4e 45 4f 2d 36 4d 00     [  OK  ] NEO-6M.

0000049d <setup::__c>:
     49d:	5b 20 20 4f 4b 20 20 5d 20 47 50 49 4f 00           [  OK  ] GPIO.

000004ab <setup::__c>:
     4ab:	5b 20 20 4f 4b 20 20 5d 20 53 53 44 31 33 30 36     [  OK  ] SSD1306
	...

000004bc <altimeter_logo>:
	...
     4c4:	00 1f ff 00 00 00 00 00 ff ff e0 00 00 0f ff ff     ................
     4d4:	ff ff fe 00 0f ff f0 01 ff ff 00 1c ff 81 f8 3f     ...............?
     4e4:	e7 00 18 7e 09 fa 0f c3 00 18 7c 21 f8 03 c3 00     ...~......|!....
     4f4:	1c f0 80 f0 91 e7 00 1f e6 90 60 a4 ff 00 1f c2     ..........`.....
     504:	40 00 28 7f 00 1f 89 00 00 19 3f 00 1f 05 00 00     @.(.......?.....
     514:	12 5f 00 1f 30 00 00 00 8f 00 1e 88 00 00 01 07     ._..0...........
     524:	00 1c 40 00 00 01 67 00 1c 20 18 00 06 83 80 39     ..@...g.. .....9
     534:	80 1c 00 0c 33 80 38 40 0e 00 38 43 c0 3b 00 06     ....3.8@..8C.;..
     544:	00 70 1d c0 78 c0 07 00 c0 71 c0 70 00 03 03 80     .p..x....q.p....
     554:	01 c0 73 80 01 87 00 19 e0 70 00 01 cc 00 00 e0     ..s......p......
     564:	77 80 00 f8 00 1c e0 70 00 00 f0 00 00 e0 70 00     w......p......p.
     574:	01 f0 00 00 e0 74 00 07 f8 00 04 e0 70 00 0f 3c     .....t......p..<
     584:	00 01 e0 73 80 07 3e 00 1d c0 70 00 00 3c 00 01     ...s..>...p..<..
     594:	c0 79 c0 00 38 00 79 c0 3a 00 00 00 00 09 c0 38     .y..8.y.:......8
     5a4:	40 00 00 00 63 c0 3d 00 00 00 00 13 80 1c 20 00     @...c.=....... .
     5b4:	00 00 87 80 1e c0 00 00 00 27 00 1e 10 00 00 01     .........'......
     5c4:	0f 00 1f 20 00 00 04 8f 00 1f 05 00 00 12 1f 00     ... ............
     5d4:	1f 89 00 00 09 3f 00 1f c2 40 00 2c 7f 00 1f e4     .....?...@.,....
     5e4:	90 40 a4 ff 00 1c f8 a5 42 91 e7 00 18 7c 21 42     .@......B....|!B
     5f4:	03 c3 00 18 7f 09 4a 0f c3 00 1c ff c0 48 3f e7     ......J......H?.
     604:	00 0f ff f8 03 ff ff 00 07 ff ff ff ff fe 00 00     ................
     614:	00 7f ff e0 00 00 00 00 0f fe 00 00 00 00 00 00     ................
     624:	00 00 00 00                                         ....

00000628 <compass_logo>:
	...
     630:	00 01 10 00 00 00 00 00 01 90 00 00 00 00 00 01     ................
     640:	50 00 00 00 00 00 01 30 00 00 00 00 00 01 10 00     P......0........
	...
     65c:	60 00 00 00 00 00 00 60 00 00 00 00 00 0f 6f 00     `......`......o.
     66c:	00 00 00 00 3f 6f c0 00 00 00 00 f8 01 f0 00 00     ....?o..........
     67c:	00 01 e0 00 78 00 00 00 03 80 00 1c 00 00 00 07     ....x...........
     68c:	03 fc 0e 00 00 00 0e 0f ff 07 00 00 00 1c 3f ff     ..............?.
     69c:	83 80 00 00 18 7f ff e1 80 00 00 38 ff ff e1 c0     ...........8....
     6ac:	00 00 30 ff fe f0 c0 00 00 71 ff f8 78 e0 00 00     ..0......q..x...
     6bc:	61 ff e0 f8 60 00 00 63 ff 80 f8 60 00 88 63 fe     a...`..c...`..c.
     6cc:	01 fc 63 e0 a8 03 f0 01 fc 02 00 ab e3 c0 03 fc     ..c.............
     6dc:	7b c0 ab e3 80 03 fc 7a 00 50 03 80 07 fc 03 e0     {......z.P......
     6ec:	00 63 f0 07 fc 60 00 00 63 fc 0f f8 60 00 00 61     .c...`..c...`..a
     6fc:	fe 0f f8 60 00 00 71 fe 1f f8 e0 00 00 30 ff 1f     ...`..q......0..
     70c:	f0 c0 00 00 38 7f 3f e1 c0 00 00 18 7f 3f c1 80     ....8.?......?..
     71c:	00 00 1c 1f ff 83 80 00 00 0e 0f ff 07 00 00 00     ................
     72c:	07 01 f8 0e 00 00 00 03 80 00 1c 00 00 00 01 e0     ................
     73c:	00 78 00 00 00 00 f8 01 f0 00 00 00 00 3f 6f c0     .x...........?o.
     74c:	00 00 00 00 0f 6f 00 00 00 00 00 00 60 00 00 00     .....o......`...
     75c:	00 00 00 60 00 00 00 00 00 00 00 00 00 00 00 00     ...`............
     76c:	00 f0 00 00 00 00 00 01 00 00 00 00 00 00 00 e0     ................
     77c:	00 00 00 00 00 00 10 00 00 00 00 00 01 e0 00 00     ................
	...

00000794 <falling_icon>:
     794:	04 00 8a 40 51 40 20 c0 03 c0                       ...@Q@ ...

0000079e <no_changing_icon>:
     79e:	01 00 00 80 ff c0 00 80 01 00                       ..........

000007a8 <rising_icon>:
     7a8:	03 c0 20 c0 51 40 8a 40 04 00                       .. .Q@.@..

000007b2 <mini_satellite_icon>:
     7b2:	87 08 8f 88 9f c8 ff f8 9f c8 8f 88 87 08           ..............

000007c0 <connecting_icon>:
	...
     7c8:	00 00 00 10 00 00 00 00 00 00 38 00 00 00 00 00     ..........8.....
     7d8:	00 fe 00 00 00 00 00 01 c7 1b 00 00 00 00 01 c3     ................
     7e8:	bf 80 00 00 00 00 e3 ff c0 00 00 00 00 77 e6 c0     .............w..
     7f8:	00 00 00 00 3f c3 c0 00 00 00 00 1b 81 c0 00 00     ....?...........
     808:	00 00 07 01 c0 00 00 00 00 06 03 80 00 00 00 00     ................
     818:	0c 03 00 00 00 00 00 0c 0f 80 00 00 00 00 0c 1f     ................
     828:	c0 00 00 00 00 06 3f e0 00 00 00 00 07 f6 70 00     ......?.......p.
     838:	00 00 01 79 ce 30 00 00 00 03 78 0e 18 00 03 f8     ...y.0....x.....
     848:	03 f8 07 38 00 1f ff 81 d8 03 f0 00 7f 7f c0 e0     ...8............
     858:	01 e0 00 f6 6e e0 78 00 c0 01 c4 66 78 10 00 00     ....n.x....fx...
     868:	07 8c 63 1e 00 00 00 0f 98 61 be 00 00 00 0f f8     ..c......a......
     878:	61 fe 00 00 00 18 ff ff e3 00 00 00 18 3f ff 83     a............?..
     888:	80 00 00 10 30 60 81 80 00 00 30 30 60 81 c0 00     ....0`....00`...
     898:	00 30 60 60 c0 c0 00 00 30 60 60 c0 c0 00 00 60     .0``....0``....`
     8a8:	60 60 c0 60 00 00 60 60 60 c0 60 00 00 7f ff ff     ``.`..```.`.....
     8b8:	ff e0 00 00 7f ff ff ff e0 00 00 60 60 60 c0 60     ...........```.`
     8c8:	00 00 60 60 60 c0 60 00 00 60 60 60 c0 60 00 00     ..```.`..```.`..
     8d8:	30 60 60 c0 c0 00 00 30 30 60 80 c0 00 00 30 30     0``....00`....00
     8e8:	60 81 c0 00 00 10 30 60 81 80 00 00 18 3f ff 83     `.....0`.....?..
     8f8:	80 00 00 18 ff ff e3 00 00 00 0f f8 61 fe 00 00     ............a...
     908:	00 07 0c 63 0e 00 00 00 03 8c 63 1c 00 00 00 01     ...c......c.....
     918:	c4 66 78 00 00 00 00 f6 6e e0 00 00 00 00 7f ff     .fx.....n.......
     928:	c0 00 00 00 00 03 f8 00 00 00 00 00 00 00 00 00     ................
	...

0000093a <task_icon>:
     93a:	7f ff ff ff ff ff e0 ff ff ff ff ff ff f0 c0 1a     ................
     94a:	26 66 45 80 30 c0 1b 66 66 6d 80 30 c0 1f ff ff     &fE.0..ffm.0....
     95a:	ff 80 30 c0 00 00 00 00 00 30 c0 00 00 00 00 00     ..0......0......
     96a:	30 c0 00 00 00 00 00 30 c0 00 00 00 00 01 30 c0     0......0......0.
     97a:	00 00 00 00 03 f0 c0 00 00 00 00 03 00 f8 00 31     ...............1
     98a:	08 c0 03 00 f8 00 31 08 c0 03 00 c8 00 31 08 c0     ......1......1..
     99a:	03 f0 f8 00 00 00 00 00 30 d8 00 ff fc f0 00 30     ........0......0
     9aa:	c8 01 ff fc 78 00 30 d8 01 80 00 18 00 30 f8 1d     ....x.0......0..
     9ba:	ff 80 19 80 30 c8 1d ff c0 19 80 30 c8 01 80 c0     ....0......0....
     9ca:	18 00 30 f8 01 80 c0 18 00 30 f8 01 80 c0 18 00     ..0......0......
     9da:	30 c8 1d 80 c2 1b 80 30 c8 01 80 c2 18 00 30 f8     0......0......0.
     9ea:	01 80 c2 18 00 30 f8 01 80 42 18 00 30 c8 01 80     .....0...B..0...
     9fa:	02 18 00 30 c8 1d 80 02 1b 80 30 f8 01 80 c0 18     ...0......0.....
     a0a:	00 30 f8 01 80 c0 18 00 30 c8 01 80 c0 18 00 30     .0......0......0
     a1a:	c8 1d ff c0 19 80 30 f8 1d ff 80 19 80 30 d8 01     ......0......0..
     a2a:	80 00 18 00 30 c8 01 ff ff f8 00 30 d8 00 ff ff     ....0......0....
     a3a:	f0 00 30 f8 00 00 00 00 00 30 c8 00 01 08 00 3f     ..0......0.....?
     a4a:	30 f8 00 31 08 c0 31 30 f8 00 31 08 c0 21 30 c0     0..1..10..1..!0.
     a5a:	00 00 00 00 21 30 c0 00 00 00 00 21 30 c0 00 00     ....!0.....!0...
     a6a:	00 00 3f 30 c0 00 00 00 00 3f 30 c0 00 00 00 00     ..?0.....?0.....
     a7a:	00 30 c0 00 00 00 00 00 30 c0 1f ff ff ff 80 30     .0......0......0
     a8a:	c0 1b 66 66 6d 80 30 c0 1a 26 66 45 80 30 f8 ff     ..ffm.0..&fE.0..
     a9a:	ff ff ff ff f0 79 ff ff ff ff ff e0                 .....y......

00000aa6 <gps_map_icon>:
     aa6:	ff ff ff ff ff fc 00 ff ff ff ff ff fc 00 ff ff     ................
     ab6:	ff ff ff fc 00 e0 00 00 e3 80 0c 00 e0 00 00 61     ...............a
     ac6:	80 0c 00 e0 00 00 61 80 0c 00 e0 3f 00 71 80 0c     ......a....?.q..
     ad6:	00 e0 7f 80 71 c0 0c 00 e1 ff e0 71 c0 0c 00 e1     ....q......q....
     ae6:	80 70 30 c0 0c 00 e3 8c 30 38 c0 0c 00 e7 3f 38     .p0.....08....?8
     af6:	38 e0 0c 00 e7 3f 38 38 e0 0c 00 e6 73 9f f8 7f     8....?88....s...
     b06:	fc 00 e6 73 98 00 00 0c 00 e7 7f 98 00 00 0c 00     ...s............
     b16:	e7 3f 38 00 00 0c 00 e3 9e 30 00 00 0c 00 e3 80     .?8......0......
     b26:	70 00 00 0c 00 ff c0 ff 0f cc fc 00 ff e0 ff 0f     p...............
     b36:	cc fc 00 ff e1 ff 1f 00 7c 00 e0 73 87 18 00 0c     ........|..s....
     b46:	00 e0 3f 0e 38 00 0c 00 e0 1e 1c 70 3f cc 00 e0     ..?.8......p?...
     b56:	0c 1c e0 ff fc 00 e0 04 38 e3 e0 fc 00 e0 00 39     ........8......9
     b66:	c7 80 1e 00 e0 00 31 c7 00 0f 00 ff c4 71 9c 00     ......1......q..
     b76:	07 c0 ff c4 63 38 00 01 c0 e0 00 e3 38 00 00 c0     ....c8......8...
     b86:	e0 00 e7 70 00 00 40 e0 01 c7 60 00 00 60 e0 03     ...p..@...`..`..
     b96:	ce e7 cf 0f 60 e0 03 9c c7 cf 9f 70 e0 07 1c cc     ....`......p....
     ba6:	0d 98 70 e0 07 38 cc 0f 98 70 ff ff ff cc ef 9f     ..p..8...p......
     bb6:	70 ff ff ff cf ef 01 f0 00 00 00 e7 ec 1f 70 00     p.............p.
     bc6:	00 00 e7 8c 1e 60 00 00 00 60 00 00 60 00 00 00     .....`...`..`...
     bd6:	70 00 00 60 00 00 00 78 00 00 c0 00 00 00 1c 00     p..`...x........
     be6:	01 c0 00 00 00 1c 00 03 80 00 00 00 0e 00 07 00     ................
     bf6:	00 00 00 07 00 0e 00 00 00 00 07 ff fc 00 00 00     ................
     c06:	00 00 7f f0 00 00 00 00 00 1f 80 00                 ............

00000c12 <borany_icon>:
     c12:	00 00 22 73 cf 8f 22 00 00 00 00 36 8a 28 08 a2     .."s.."....6.(..
     c22:	00 00 00 00 2a fa 2f 0f 14 00 00 00 00 22 8a 28     ....*./......".(
     c32:	08 88 00 00 00 00 22 8b cf 8f 08 00 00 00 00 00     ......".........
	...
     c76:	07 f8 1f 87 f8 1f 80 00 00 07 f8 1f 87 f8 1f 80     ................
     c86:	00 00 06 06 60 66 06 60 60 00 00 06 06 60 66 06     ....`f.``....`f.
     c96:	60 60 00 00 07 f8 60 67 f8 7f e0 00 00 07 f8 60     ``....`g.......`
     ca6:	67 f8 7f e0 00 00 06 06 60 66 18 60 60 00 00 06     g.......`f.``...
     cb6:	06 60 66 18 60 60 00 00 07 f8 1f 86 06 60 60 00     .`f.``.......``.
     cc6:	00 07 f8 1f 86 06 60 60 00 00 00 00 00 00 00 00     ......``........
     cd6:	00 00 00 00 00 00 24 00 00 00 00 00 00 00 00 2c     ......$........,
     ce6:	00 00 00 00 00 00 00 ff ff ff 80 00 00 00 00 00     ................
     cf6:	80 2c 00 80 00 00 00 00 00 80 24 00 80 00 00 00     .,........$.....
     d06:	00 00 80 00 00 80 00 00 00 00 00 80 00 00 80 00     ................
     d16:	00 00 00 e0 80 00 00 83 80 00 00 00 ff f8 0f ff     ................
     d26:	ff 80 00 00 00 e0 08 08 08 03 80 00 00 00 00 08     ................
     d36:	08 08 00 00 00 00 00 00 08 3e 08 00 00 00 00 00     .........>......
     d46:	00 08 1c 08 00 00 00 00 00 00 08 08 08 00 00 00     ................
     d56:	00 00 00 3e 3e 3e 00 00 00 00 00 00 00 00 00 00     ...>>>..........
     d66:	00 00 00 00 00 ff ff ff 80 00 00 00 00 00 00 00     ................
     d76:	00 80 00 00 00 00 00 00 00 00 80 00 00 00 00 00     ................
     d86:	00 00 00 80 00 00 00 00 00 00 00 00 80 00 00 00     ................
     d96:	00 00 00 00 00 80 00 00 00 00 00 00 00 01 c0 00     ................
     da6:	00 00 00 00 00 00 01 c0 00 00 00 00 00 00 00 01     ................
     db6:	c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     dc6:	00 00 00 00 00 00 00 f3 e7 be f9 c8 00 00 00 00     ................
     dd6:	88 88 08 22 28 00 00 00 00 88 89 88 23 e8 00 00     ..."(.......#...
     de6:	00 00 88 88 88 22 28 00 00 00 00 f3 e7 3e 22 2f     ....."(......>"/
     df6:	80 00 00 00 00 00 00 00 00 00 00 fa 28 a2 f3 ef     ............(...
     e06:	1e f9 cf 22 22 28 b2 8a 08 a0 22 28 b6 23 e8 aa     ...""(...."(.#..
     e16:	8b cf 1c 22 2f 2a 22 28 a6 8a 09 02 22 29 22 22     ..."/*"(....")""
     e26:	27 22 f3 e8 bc 21 c8 a2                             '"...!..

00000e2e <route_icon>:
     e2e:	00 fc 00 00 00 00 00 01 ff 80 00 00 00 00 07 ff     ................
     e3e:	e0 00 00 00 00 1f 01 f0 00 00 00 00 18 00 38 00     ..............8.
     e4e:	00 00 00 30 00 18 00 00 00 00 30 7c 1c 00 00 00     ...0......0|....
     e5e:	00 70 fe 0c 00 00 00 00 e1 ff 0e 00 00 00 00 e3     .p..............
     e6e:	c7 86 00 00 00 00 e3 83 86 00 00 00 00 e3 83 86     ................
     e7e:	00 00 00 00 e3 83 86 00 00 00 00 e3 c7 86 00 00     ................
     e8e:	00 00 61 ff 0e 00 00 00 00 70 fe 0e 00 00 00 00     ..a......p......
     e9e:	70 7c 1c 00 00 00 00 30 00 1c 00 00 00 00 30 00     p|.....0......0.
     eae:	18 00 01 fe 00 1c 00 38 00 1f ff 80 1c 00 70 00     .......8......p.
     ebe:	1c 03 e0 0e 00 70 00 38 00 f0 0e 00 e0 00 70 00     .....p.8......p.
     ece:	70 07 00 c0 00 f0 00 30 03 83 c0 01 e0 f8 18 01     p......0........
     ede:	83 80 01 c1 fc 18 01 87 00 01 83 fe 1c 00 c6 00     ................
     eee:	01 87 8f 1c 00 ee 00 01 87 07 1c 00 fc 00 01 87     ................
     efe:	07 1c 00 7c 00 01 87 07 1c 00 7e 00 01 87 8f 1c     ...|......~.....
     f0e:	00 ff 00 01 c3 fe 18 00 e7 ff 81 c1 fc 18 00 e7     ................
     f1e:	ff c0 e0 f8 18 00 ff ff f0 f0 00 70 00 ff 00 70     ...........p...p
     f2e:	30 00 70 00 7e 00 30 30 00 e0 00 18 00 30 18 00     0.p.~.00.....0..
     f3e:	e0 00 00 00 30 1c 01 c0 00 00 00 f0 1e 03 80 00     ....0...........
     f4e:	ff ff f0 06 03 00 01 ff ff c0 07 06 00 03 ff ff     ................
     f5e:	00 03 86 00 07 80 00 00 03 8e 00 07 00 00 00 01     ................
     f6e:	dc 00 06 00 00 00 00 fc 00 06 00 00 00 01 f8 00     ................
     f7e:	07 00 00 00 03 fc 00 03 80 00 00 03 9c 00 03 ff     ................
     f8e:	fc cf ff 9c 00 00 ff fc cf ff fc 00 00 00 00 00     ................
     f9e:	01 f8 00 00 00 00 00 00 f0 00                       ..........

00000fa8 <reception_signal_icon>:
	...
     fb0:	00 00 30 00 00 00 00 00 00 78 00 00 00 00 00 00     ..0......x......
     fc0:	cc 00 00 40 00 00 01 c6 00 00 e0 00 00 03 e3 00     ...@............
     fd0:	0d c0 00 00 06 37 80 1f 80 00 0f 07 1e c7 f7 00     .....7..........
     fe0:	00 3f 03 9c 6e f3 80 00 70 01 fe 38 31 80 00 e3     .?..n...p..81...
     ff0:	00 f3 30 1f 00 00 cf 00 71 e1 8e 00 01 9c 00 39     ..0.....q......9
    1000:	c3 c6 00 01 99 80 1d 86 e6 00 01 b3 c0 0f 0c 62     ...............b
    1010:	00 01 b6 60 06 18 c6 00 00 06 60 0c 31 86 00 00     ...`......`.1...
    1020:	03 c0 0c 63 0c 00 00 01 80 07 76 18 00 00 00 00     ...c......v.....
    1030:	0f 3c 3c 00 00 00 00 7d 98 66 00 00 00 00 70 c0     .<<....}.f....p.
    1040:	e3 00 00 00 00 38 71 f1 80 00 00 00 1c 33 1b c0     .....8q......3..
    1050:	00 00 00 0e 7f 8f 60 00 00 00 07 6d ce 30 00 00     ......`....m.0..
    1060:	00 03 c0 ff 18 00 00 e0 01 c0 79 98 00 01 f0 00     ..........y.....
    1070:	c0 38 f0 01 ff 90 00 00 1c e0 1f ff f0 00 00 0e     .8..............
    1080:	c0 3f 71 e0 00 00 07 80 37 3b 40 00 00 03 00 63     .?q.....7;@....c
    1090:	9e c0 00 00 00 00 61 ce c0 00 00 00 00 60 e7 c0     ......a......`..
    10a0:	00 06 00 00 60 73 c0 00 0f 00 00 60 39 c0 00 19     ....`s.....`9...
    10b0:	80 00 60 1c e0 00 19 b6 00 60 0e c0 00 0f 36 00     ..`......`....6.
    10c0:	20 07 80 00 06 66 00 30 03 80 00 00 e6 00 18 01      ....f.0........
    10d0:	c0 00 03 cc 00 1c 01 c0 00 03 1c 00 1f 87 00 00     ................
    10e0:	00 38 00 13 fe 00 00 03 f0 00 10 60 00 00 03 c0     .8.........`....
    10f0:	00 10 60 00 00 00 00 00 1f e0 00 00 00 00 00 1f     ..`.............
    1100:	f8 00 00 00 00 00 10 1e 00 00 00 00 00 1f ff 00     ................
    1110:	00 00 00 00 3f ff 00 00 00 00 00 00 00 00 00 00     ....?...........
	...

00001122 <radar_icon>:
    1122:	00 00 00 20 00 00 00 00 00 00 20 00 00 00 00 00     ... ...... .....
    1132:	03 ff 00 00 00 00 00 3c 20 e0 00 00 00 00 c0 20     .......< ...... 
    1142:	18 00 00 00 03 00 20 06 00 00 00 04 00 20 01 00     ...... ...... ..
    1152:	00 00 78 00 20 00 c0 00 00 f8 00 20 00 20 00 00     ..x. ...... . ..
    1162:	f8 00 20 00 10 00 00 f8 00 20 00 08 00 01 70 00     .. ...... ....p.
    1172:	20 00 04 00 01 00 01 fc 00 04 00 02 00 0e 23 b8      .............#.
    1182:	02 00 04 00 10 20 7c 01 00 04 00 60 20 7c 01 00     ..... |....` |..
    1192:	08 00 80 20 7c 00 80 08 01 00 20 3c 00 80 10 01     ... |..... <....
    11a2:	0e 20 04 00 80 10 02 1f 20 02 00 40 10 04 1f 20     . ...... ..@... 
    11b2:	01 00 40 10 04 1f f8 01 00 40 20 04 0f 24 01 00     ..@......@ ..$..
    11c2:	20 20 08 02 22 00 80 20 20 08 04 21 00 80 20 20       .."..  ..!..  
    11d2:	08 04 21 00 80 20 ff ff ff ff ff ff f0 20 08 04     ..!.. ....... ..
    11e2:	21 00 80 20 20 08 04 21 00 80 20 20 08 02 22 70     !..  ..!..  .."p
    11f2:	80 20 20 04 01 24 f9 00 20 20 04 00 f8 f9 00 40     .  ..$..  .....@
    1202:	10 04 00 20 f9 00 40 10 02 00 20 72 00 40 10 02     ... ..@... r.@..
    1212:	00 20 04 00 40 08 01 70 20 04 00 80 08 00 f8 20     . ..@..p ...... 
    1222:	08 00 80 04 00 f8 20 30 01 00 04 00 f8 20 40 01     ...... 0..... @.
    1232:	00 02 00 7e 23 80 02 00 01 00 01 fc 00 04 00 01     ...~#...........
    1242:	00 00 20 00 04 00 00 80 00 20 00 08 00 00 40 00     .. ...... ....@.
    1252:	20 00 10 00 00 20 00 20 00 20 00 00 18 00 20 00      .... . . .... .
    1262:	c0 00 00 04 00 20 01 00 00 00 03 00 20 06 00 00     ..... ...... ...
    1272:	00 00 e0 20 18 00 00 00 00 1c 21 e0 00 00 00 00     ... ......!.....
    1282:	03 fe 00 00 00 00 00 00 20 00 00 00                 ........ ...

0000128e <satellite_tracker_icon>:
	...
    1296:	02 00 00 01 00 00 00 07 00 00 03 80 00 00 0f 80     ................
    12a6:	00 07 c0 00 00 19 80 00 06 60 00 00 3b 80 00 07     .........`..;...
    12b6:	30 00 00 1f 00 00 03 f0 00 00 fe 00 00 01 fc 00     0...............
    12c6:	01 fc 00 00 00 fe 00 01 38 00 00 00 32 00 01 f0     ........8...2...
    12d6:	00 00 00 3e 00 0f ff 00 00 03 ff c0 1f de 00 00     ...>............
    12e6:	01 ef e0 33 1c a0 00 0a e3 30 77 1a a0 00 09 63     ...3.....0w....c
    12f6:	90 7e 11 20 00 0a 21 d0 3c 06 41 f8 09 c0 f0 18     .~. ..!.<.A.....
    1306:	00 86 06 04 00 60 00 0f 08 01 03 c0 00 00 00 14     .....`..........
    1316:	cc 80 00 00 00 00 2f ff 40 00 00 00 00 5f ff 60     ....../.@...._.`
    1326:	00 00 00 00 5f ff 60 00 00 00 00 9f fe 50 00 00     ...._.`......P..
    1336:	00 00 83 d9 50 00 00 00 00 8f c3 10 00 00 00 00     ....P...........
    1346:	9f e2 10 00 00 00 00 9f e7 90 00 00 00 00 8f f0     ................
    1356:	d0 00 00 00 00 43 f0 20 00 00 00 00 41 e3 a0 00     .....C. ....A...
    1366:	00 00 00 21 c7 c0 00 00 00 00 10 c7 80 00 00 00     ...!............
    1376:	00 08 c5 3e 00 00 00 00 06 06 40 03 00 00 00 01     ...>......@.....
    1386:	f8 8c 07 80 00 00 00 00 91 0f c0 00 00 00 00 ab     ................
    1396:	1d c0 00 00 00 00 a7 19 80 00 00 00 00 8f 7f 00     ................
    13a6:	00 00 00 00 1f fe 00 00 00 00 00 01 f0 00 00 00     ................
    13b6:	00 00 03 90 00 00 00 00 00 07 f0 00 00 00 00 00     ................
    13c6:	0f e0 00 00 00 00 00 1f 00 00 00 00 00 00 3b 80     ..............;.
    13d6:	00 00 00 00 00 33 00 00 00 00 00 00 3e 00 00 00     .....3......>...
    13e6:	00 00 00 1c 00 00 00 00 00 00 08 00 00 00 00 00     ................
    13f6:	00 00 00 00                                         ....

000013fa <sunrise_sunset_icon>:
    13fa:	02 00 40 42 10 e0 20 21 50 07 00 40 08 80 40 10     ..@B.. !P..@..@.
    140a:	40 40 d0 58 00 10 40 40 08 80 40 07 00 40 20 21     @@.X..@@..@..@ !
    141a:	50 42 10 e0 02 00 40                                PB....@

00001421 <menuGPS>:
    1421:	00 00 00 00 fe 00 01 01 00 02 00 80 02 38 80 02     .............8..
    1431:	44 80 02 44 80 02 44 80 02 38 80 02 00 80 02 00     D..D..D..8......
    1441:	80 01 01 00 00 82 00 00 44 00 00 28 00 00 10 00     ........D..(....
    1451:	00 00 00 00 00 00 0e 78 f0 10 45 00 13 78 e0 11     .......x..E..x..
    1461:	40 10 0e 41 e0 00 00 00                             @..A....

00001469 <menuSatellite>:
	...
    1471:	00 18 3e 0c 18 41 0c 18 80 8c 18 80 8c 1f 80 fc     ..>..A..........
    1481:	18 80 8c 18 80 8c 18 41 0c 18 3e 0c 00 00 00 00     .......A..>.....
	...
    149d:	00 00 07 9c f8 08 22 20 07 3e 20 00 a2 20 0f 22     ......" .> .. ."
    14ad:	20 00 00 00                                          ...

000014b1 <menuRadar>:
    14b1:	00 00 00 00 00 00 01 ff 80 02 00 c0 04 7e 20 04     .............~ .
    14c1:	81 20 05 03 a0 05 07 a0 05 0f a0 05 07 a0 05 03     . ..............
    14d1:	a0 04 81 20 04 7e 20 02 00 c0 01 ff 80 00 00 00     ... .~ .........
    14e1:	00 00 00 00 00 00 79 f4 5f 25 04 44 25 e4 44 25     ......y._%.D%.D%
    14f1:	02 84 79 f1 1f 00 00 00                             ..y.....

000014f9 <menuCompass>:
	...
    1501:	00 00 08 00 00 1c 00 00 3e 00 00 3e 00 00 3e 00     ........>..>..>.
    1511:	00 00 00 20 22 02 20 32 02 2a aa aa 20 26 02 20     ... ". 2.*.. &. 
    1521:	22 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     "...............
    1531:	00 3c e4 5e 41 16 d1 41 15 5e 41 14 50 3c e4 50     .<.^A..A.^A.P<.P

00001541 <menuAltimeter>:
	...
    154d:	00 40 00 00 e1 00 01 f3 80 03 ff c0 05 5d 60 08     .@...........]`.
    155d:	04 10 10 02 08 20 01 04 40 00 82 ff ff ff 00 00     ..... ..@.......
	...
    1579:	00 72 0f be 8a 02 08 fa 02 08 8a 02 08 8b e2 3e     .r.............>

00001589 <menuHardware>:
    1589:	01 55 00 01 55 00 00 00 00 03 ff 80 1a 00 b0 02     .U..U...........
    1599:	80 80 1a 00 b0 02 00 80 1a 00 b0 02 00 80 1a 00     ................
    15a9:	b0 02 00 80 1a 00 b0 03 ff 80 00 00 00 01 55 00     ..............U.
    15b9:	01 55 00 00 00 00 00 00 00 0f 44 f0 10 45 00 0e     .U........D..E..
    15c9:	28 e0 01 10 10 1e 11 e0                             (.......

000015d1 <menuLog>:
    15d1:	00 00 00 0f fc 00 08 06 00 08 05 00 08 04 80 08     ................
    15e1:	04 40 08 04 20 08 07 f0 09 f0 10 09 10 10 09 10     .@.. ...........
    15f1:	10 09 f0 10 09 00 10 09 00 10 09 00 10 08 00 10     ................
    1601:	0f ff f0 00 00 00 10 38 e0 10 45 00 10 45 30 10     .......8..E..E0.
    1611:	45 10 1f 38 e0 00 00 00                             E..8....

00001619 <menuNavigation>:
    1619:	00 00 00 00 00 3e 00 00 22 00 55 22 00 00 3e 01     .....>..".U"..>.
    1629:	00 20 00 00 20 01 00 00 00 00 00 00 55 40 3e 00     . .. .......U@>.
    1639:	00 3e 00 10 3e 00 00 3e 00 10 20 00 00 21 55 40     .>..>..>.. ..!U@
    1649:	00 00 00 00 00 00 44 e4 5f 65 14 44 55 f4 44 4d     ......D._e.DU.DM
    1659:	12 84 45 11 1f 00 00 00                             ..E.....

00001661 <navFlag>:
    1661:	3f c0 3f c0 3f c0 3f c0 3f c0 3f c0 20 00 20 00     ?.?.?.?.?.?. . .
    1671:	20 00 20 00                                          . .

00001675 <navCurrentPos>:
    1675:	0c 00 0c 00 33 00 21 00 cc c0 cc c0 21 00 33 00     ....3.!.....!.3.
    1685:	0c 00 0c 00                                         ....

00001689 <font>:
    1689:	00 00 00 00 00 3e 5b 4f 5b 3e 3e 6b 4f 6b 3e 1c     .....>[O[>>kOk>.
    1699:	3e 7c 3e 1c 18 3c 7e 3c 18 1c 57 7d 57 1c 1c 5e     >|>..<~<..W}W..^
    16a9:	7f 5e 1c 00 18 3c 18 00 ff e7 c3 e7 ff 00 18 24     .^...<.........$
    16b9:	18 00 ff e7 db e7 ff 30 48 3a 06 0e 26 29 79 29     .......0H:..&)y)
    16c9:	26 40 7f 05 05 07 40 7f 05 25 3f 5a 3c e7 3c 5a     &@....@..%?Z<.<Z
    16d9:	7f 3e 1c 1c 08 08 1c 1c 3e 7f 14 22 7f 22 14 5f     .>......>.."."._
    16e9:	5f 00 5f 5f 06 09 7f 01 7f 00 66 89 95 6a 60 60     _.__......f..j``
    16f9:	60 60 60 94 a2 ff a2 94 08 04 7e 04 08 10 20 7e     ```.......~... ~
    1709:	20 10 08 08 2a 1c 08 08 1c 2a 08 08 1e 10 10 10      ...*....*......
    1719:	10 0c 1e 0c 1e 0c 30 38 3e 38 30 06 0e 3e 0e 06     ......08>80..>..
    1729:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
    1739:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
    1749:	56 20 50 00 08 07 03 00 00 1c 22 41 00 00 41 22     V P......."A..A"
    1759:	1c 00 2a 1c 7f 1c 2a 08 08 3e 08 08 00 80 70 30     ..*...*..>....p0
    1769:	00 08 08 08 08 08 00 00 60 60 00 20 10 08 04 02     ........``. ....
    1779:	3e 51 49 45 3e 00 42 7f 40 00 72 49 49 49 46 21     >QIE>.B.@.rIIIF!
    1789:	41 49 4d 33 18 14 12 7f 10 27 45 45 45 39 3c 4a     AIM3.....'EEE9<J
    1799:	49 49 31 41 21 11 09 07 36 49 49 49 36 46 49 49     II1A!...6III6FII
    17a9:	29 1e 00 00 14 00 00 00 40 34 00 00 00 08 14 22     ).......@4....."
    17b9:	41 14 14 14 14 14 00 41 22 14 08 02 01 59 09 06     A......A"....Y..
    17c9:	3e 41 5d 59 4e 7c 12 11 12 7c 7f 49 49 49 36 3e     >A]YN|...|.III6>
    17d9:	41 41 41 22 7f 41 41 41 3e 7f 49 49 49 41 7f 09     AAA".AAA>.IIIA..
    17e9:	09 09 01 3e 41 41 51 73 7f 08 08 08 7f 00 41 7f     ...>AAQs......A.
    17f9:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
    1809:	40 7f 02 1c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
    1819:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 26     .....>AQ!^...)F&
    1829:	49 49 49 32 03 01 7f 01 03 3f 40 40 40 3f 1f 20     III2.....?@@@?. 
    1839:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 03 04 78     @ .?@8@?c...c..x
    1849:	04 03 61 59 49 4d 43 00 7f 41 41 41 02 04 08 10     ..aYIMC..AAA....
    1859:	20 00 41 41 41 7f 04 02 01 02 04 40 40 40 40 40      .AAA......@@@@@
    1869:	00 03 07 08 00 20 54 54 78 40 7f 28 44 44 38 38     ..... TTx@.(DD88
    1879:	44 44 44 28 38 44 44 28 7f 38 54 54 54 18 00 08     DDD(8DD(.8TTT...
    1889:	7e 09 02 18 a4 a4 9c 78 7f 08 04 04 78 00 44 7d     ~......x....x.D}
    1899:	40 00 20 40 40 3d 00 7f 10 28 44 00 00 41 7f 40     @. @@=...(D..A.@
    18a9:	00 7c 04 78 04 78 7c 08 04 04 78 38 44 44 44 38     .|.x.x|...x8DDD8
    18b9:	fc 18 24 24 18 18 24 24 18 fc 7c 08 04 04 08 48     ..$$..$$..|....H
    18c9:	54 54 54 24 04 04 3f 44 24 3c 40 40 20 7c 1c 20     TTT$..?D$<@@ |. 
    18d9:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 4c 90 90     @ .<@0@<D(.(DL..
    18e9:	90 7c 44 64 54 4c 44 00 08 36 41 00 00 00 77 00     .|DdTLD..6A...w.
    18f9:	00 00 41 36 08 00 02 01 02 04 02 3c 26 23 26 3c     ..A6.......<&#&<
    1909:	1e a1 a1 61 12 3a 40 40 20 7a 38 54 54 55 59 21     ...a.:@@ z8TTUY!
    1919:	55 55 79 41 22 54 54 78 42 21 55 54 78 40 20 54     UUyA"TTxB!UTx@ T
    1929:	55 79 40 0c 1e 52 72 12 39 55 55 55 59 39 54 54     Uy@..Rr.9UUUY9TT
    1939:	54 59 39 55 54 54 58 00 00 45 7c 41 00 02 45 7d     TY9UTTX..E|A..E}
    1949:	42 00 01 45 7c 40 7d 12 11 12 7d f0 28 25 28 f0     B..E|@}...}.(%(.
    1959:	7c 54 55 45 00 20 54 54 7c 54 7c 0a 09 7f 49 32     |TUE. TT|T|...I2
    1969:	49 49 49 32 3a 44 44 44 3a 32 4a 48 48 30 3a 41     III2:DDD:2JHH0:A
    1979:	41 21 7a 3a 42 40 20 78 00 9d a0 a0 7d 3d 42 42     A!z:B@ x....}=BB
    1989:	42 3d 3d 40 40 40 3d 3c 24 ff 24 24 48 7e 49 43     B==@@@=<$.$$H~IC
    1999:	66 2b 2f fc 2f 2b ff 09 29 f6 20 c0 88 7e 09 03     f+/./+..). ..~..
    19a9:	20 54 54 79 41 00 00 44 7d 41 30 48 48 4a 32 38      TTyA..D}A0HHJ28
    19b9:	40 40 22 7a 00 7a 0a 0a 72 7d 0d 19 31 7d 26 29     @@"z.z..r}..1}&)
    19c9:	29 2f 28 26 29 29 29 26 30 48 4d 40 20 38 08 08     )/(&)))&0HM@ 8..
    19d9:	08 08 08 08 08 08 38 2f 10 c8 ac ba 2f 10 28 34     ......8/..../.(4
    19e9:	fa 00 00 7b 00 00 08 14 2a 14 22 22 14 2a 14 08     ...{....*."".*..
    19f9:	55 00 55 00 55 aa 55 aa 55 aa ff 55 ff 55 ff 00     U.U.U.U.U..U.U..
    1a09:	00 00 ff 00 10 10 10 ff 00 14 14 14 ff 00 10 10     ................
    1a19:	ff 00 ff 10 10 f0 10 f0 14 14 14 fc 00 14 14 f7     ................
    1a29:	00 ff 00 00 ff 00 ff 14 14 f4 04 fc 14 14 17 10     ................
    1a39:	1f 10 10 1f 10 1f 14 14 14 1f 00 10 10 10 f0 00     ................
    1a49:	00 00 00 1f 10 10 10 10 1f 10 10 10 10 f0 10 00     ................
    1a59:	00 00 ff 10 10 10 10 10 10 10 10 10 ff 10 00 00     ................
    1a69:	00 ff 14 00 00 ff 00 ff 00 00 1f 10 17 00 00 fc     ................
    1a79:	04 f4 14 14 17 10 17 14 14 f4 04 f4 00 00 ff 00     ................
    1a89:	f7 14 14 14 14 14 14 14 f7 00 f7 14 14 14 17 14     ................
    1a99:	10 10 1f 10 1f 14 14 14 f4 14 10 10 f0 10 f0 00     ................
    1aa9:	00 1f 10 1f 00 00 00 1f 14 00 00 00 fc 14 00 00     ................
    1ab9:	f0 10 f0 10 10 ff 10 ff 14 14 14 ff 14 10 10 10     ................
    1ac9:	1f 00 00 00 00 f0 10 ff ff ff ff ff f0 f0 f0 f0     ................
    1ad9:	f0 ff ff ff 00 00 00 00 00 ff ff 0f 0f 0f 0f 0f     ................
    1ae9:	38 44 44 38 44 fc 4a 4a 4a 34 7e 02 02 06 06 02     8DD8D.JJJ4~.....
    1af9:	7e 02 7e 02 63 55 49 41 63 38 44 44 3c 04 40 7e     ~.~.cUIAc8DD<.@~
    1b09:	20 1e 20 06 02 7e 02 02 99 a5 e7 a5 99 1c 2a 49      . ..~........*I
    1b19:	2a 1c 4c 72 01 72 4c 30 4a 4d 4d 30 30 48 78 48     *.Lr.rL0JMM00HxH
    1b29:	30 bc 62 5a 46 3d 3e 49 49 49 00 7e 01 01 01 7e     0.bZF=>III.~...~
    1b39:	2a 2a 2a 2a 2a 44 44 5f 44 44 40 51 4a 44 40 40     *****DD_DD@QJD@@
    1b49:	44 4a 51 40 00 00 ff 01 03 e0 80 ff 00 00 08 08     DJQ@............
    1b59:	6b 6b 08 36 12 36 24 36 06 0f 09 0f 06 00 00 18     kk.6.6$6........
    1b69:	18 00 00 00 10 10 00 30 40 ff 01 01 00 1f 01 01     .......0@.......
    1b79:	1e 00 19 1d 17 12 00 3c 3c 3c 3c 00 00 00 00 00     .......<<<<.....

00001b89 <Adafruit_SSD1306::display()::dlist1>:
    1b89:	22 00 ff 21 00                                      "..!.

00001b8e <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)::postmask>:
    1b8e:	00 01 03 07 0f 1f 3f 7f                             ......?.

00001b96 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)::premask>:
    1b96:	00 80 c0 e0 f0 f8 fc fe                             ........

00001b9e <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init5>:
    1b9e:	db 40 a4 a6 2e af                                   .@....

00001ba4 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init3>:
    1ba4:	20 00 a1 c8                                          ...

00001ba8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init2>:
    1ba8:	d3 00 40 8d                                         ..@.

00001bac <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)::init1>:
    1bac:	ae d5 80 a8                                         ....

00001bb0 <splash2_data>:
    1bb0:	00 00 60 00 00 00 00 00 00 00 00 00 00 00 00 00     ..`.............
    1bc0:	00 e0 00 00 00 00 00 00 00 00 00 00 00 00 00 01     ................
    1bd0:	e0 00 00 00 00 00 00 00 00 00 00 00 00 00 01 f0     ................
	...
    1bec:	00 03 f0 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1bfc:	07 f0 00 00 00 00 00 00 00 00 00 00 00 00 00 07     ................
    1c0c:	f8 00 00 00 00 00 00 00 00 00 00 00 00 00 0f f8     ................
    1c1c:	00 00 00 03 c0 00 7e 00 00 01 e0 00 7f 0f f8 00     ......~.........
    1c2c:	00 00 03 c0 00 fe 00 00 01 e0 00 ff ef f8 00 00     ................
    1c3c:	00 03 c0 00 fe 00 00 01 e0 00 ff ff f8 00 00 00     ................
    1c4c:	03 c0 00 f0 00 00 00 0f 00 7f fe 7f c0 00 00 03     ................
    1c5c:	c0 00 f0 00 00 00 0f 00 3f fe 7f f8 3f f1 fb cf     ........?...?...
    1c6c:	fc fe f3 bc 3d ef e0 1f fe 7f ff 7f fb ff df fe     ....=...........
    1c7c:	fe ff bc 3d ef e0 1f c6 ff ff 7f fb ff df fe fe     ...=............
    1c8c:	ff bc 3d ef e0 0f e3 c7 fe 78 7b c3 de 1e f0 ff     ..=......x{.....
    1c9c:	bc 3d ef 00 07 ff 87 fc 78 7b c3 de 1e f0 f8 3c     .=......x{.....<
    1cac:	3d ef 00 01 ff ff f0 00 7b c3 c0 1e f0 f0 3c 3d     =.......{.....<=
    1cbc:	ef 00 01 f3 7f e0 3f fb c3 cf fe f0 f0 3c 3d ef     ......?......<=.
    1ccc:	00 03 e3 3f 80 7f fb c3 df fe f0 f0 3c 3d ef 00     ...?........<=..
    1cdc:	07 e7 3c 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 07     ..<.x{.....<=...
    1cec:	ff be 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 07 ff     ...x{.....<=....
    1cfc:	fe 00 78 7b c3 de 1e f0 f0 3c 3d ef 00 0f ff fe     ..x{.....<=.....
    1d0c:	00 7f fb ff df fe f0 f0 3f fd ef e0 0f ff ff 00     ........?.......
    1d1c:	7f fb ff df fe f0 f0 3f fd ef e0 0f f9 ff 00 3e     .......?.......>
    1d2c:	79 f9 cf 9e f0 f0 1f 3d e7 e0 1f f1 ff 00 00 00     y......=........
	...
    1d44:	00 1f 80 ff 00 7f ff ff ff ff ff ff ff ff ff e0     ................
    1d54:	1c 00 7f 00 7f ff ff ff fe b4 6d 88 8d 18 e0 00     ..........m.....
    1d64:	00 1f 00 7f ff ff ff fe 95 ad 7d b5 77 e0 00 00     ..........}.w...
    1d74:	0f 00 7f ff ff ff fe a5 ad 9d 8d 19 e0 00 00 06     ................
    1d84:	00 7f ff ff ff fe b5 ad ed b5 7e e0                 ..........~.

00001d90 <splash1_data>:
    1d90:	00 00 00 00 00 01 80 00 00 00 00 00 00 00 00 00     ................
    1da0:	03 80 00 00 00 00 00 00 00 00 00 07 c0 00 00 00     ................
    1db0:	00 00 00 00 00 00 07 c0 00 00 00 00 00 00 00 00     ................
    1dc0:	00 0f c0 00 00 00 00 00 00 00 00 00 1f e0 00 00     ................
    1dd0:	00 00 00 00 00 00 00 1f e0 00 00 00 00 00 00 00     ................
    1de0:	00 00 3f e0 00 00 00 00 00 00 00 00 00 3f f0 00     ..?..........?..
	...
    1df8:	7f f0 00 00 00 00 00 00 00 1f f8 7f f0 00 00 00     ................
    1e08:	00 00 00 00 3f fe 7f f0 00 00 00 00 00 00 00 3f     ....?..........?
    1e18:	ff 7f f0 00 00 00 00 00 00 00 1f ff fb e0 00 00     ................
    1e28:	00 00 00 00 00 0f ff f9 ff c0 00 00 00 00 00 00     ................
    1e38:	0f ff f9 ff f8 00 00 00 00 00 00 07 ff f1 ff ff     ................
    1e48:	00 00 00 00 00 00 03 fc 73 ff ff 80 00 00 00 00     ........s.......
    1e58:	00 01 fe 3f ff ff 80 00 00 00 00 00 00 ff 1e 0f     ...?............
    1e68:	ff 00 00 00 00 00 00 00 7f fe 1f fc 00 00 00 00     ................
    1e78:	00 00 00 3f ff ff f8 00 00 00 00 00 00 00 0f df     ...?............
    1e88:	ff e0 00 00 00 00 00 00 00 1f 19 ff c0 00 00 00     ................
    1e98:	00 00 00 00 3f 3c ff 00 00 00 00 00 00 00 00 7e     ....?<.........~
    1ea8:	7c f8 00 00 00 00 00 00 00 00 7f fe 7c 00 00 00     |...........|...
    1eb8:	00 00 00 00 00 ff ff fc 00 00 00 00 00 00 00 00     ................
    1ec8:	ff ff fe 00 00 00 00 00 00 00 00 ff ff fe 00 00     ................
    1ed8:	00 00 00 00 00 01 ff ef fe 00 00 00 00 00 00 00     ................
    1ee8:	01 ff cf fe 00 00 00 00 00 00 00 03 ff 07 fe 00     ................
    1ef8:	00 00 00 00 00 00 03 fc 07 fe 00 00 00 00 00 00     ................
    1f08:	00 03 f0 03 fe 00 00 00 00 00 00 00 01 80 00 fe     ................
	...
    1f20:	00 00 7e 00 00 00 00 00 00 00 00 00 00 3e 00 00     ..~..........>..
	...
    1f38:	0c 00 00 00 00 00 00 07 80 00 fc 00 00 03 c0 00     ................
    1f48:	00 00 07 80 01 fc 00 00 03 c0 00 00 00 07 80 01     ................
    1f58:	fc 00 00 03 c0 00 00 00 07 80 01 e0 00 00 00 1e     ................
    1f68:	00 00 00 07 80 01 e0 00 00 00 1e 00 7f e3 f7 9f     ................
    1f78:	f9 fd e7 78 7b df c0 ff f7 ff bf fd fd ff 78 7b     ...x{.........x{
    1f88:	df c0 ff f7 ff bf fd fd ff 78 7b df c0 f0 f7 87     .........x{.....
    1f98:	bc 3d e1 ff 78 7b de 00 f0 f7 87 bc 3d e1 f0 78     .=..x{......=..x
    1fa8:	7b de 00 00 f7 87 80 3d e1 e0 78 7b de 00 7f f7     {......=..x{....
    1fb8:	87 9f fd e1 e0 78 7b de 00 ff f7 87 bf fd e1 e0     .....x{.........
    1fc8:	78 7b de 00 f0 f7 87 bc 3d e1 e0 78 7b de 00 f0     x{......=..x{...
    1fd8:	f7 87 bc 3d e1 e0 78 7b de 00 f0 f7 87 bc 3d e1     ...=..x{......=.
    1fe8:	e0 78 7b de 00 ff f7 ff bf fd e1 e0 7f fb df c0     .x{.............
    1ff8:	ff f7 ff bf fd e1 e0 7f fb df c0 7c f3 f3 9f 3d     ...........|...=
    2008:	e1 e0 3e 7b cf c0 00 00 00 00 00 00 00 00 00 00     ..>{............
    2018:	00 ff ff ff ff ff ff ff ff ff ff c0 ff ff ff ff     ................
    2028:	fd 68 db 11 1a 31 c0 ff ff ff ff fd 2b 5a fb 6a     .h...1......+Z.j
    2038:	ef c0 ff ff ff ff fd 4b 5b 3b 1a 33 c0 ff ff ff     .......K[;.3....
    2048:	ff fd 6b 5b db 6a fd c0                             ..k[.j..

00002050 <digital_pin_to_timer_PGM>:
    2050:	00 00 00 02 03 00 0a 0b 00 00 00 00 05 04 09 08     ................
	...

00002070 <digital_pin_to_bit_mask_PGM>:
    2070:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 40 80     ..... @...... @.
    2080:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 40 80     ..... @...... @.

00002090 <digital_pin_to_port_PGM>:
    2090:	02 02 02 02 02 02 02 02 04 04 04 04 04 04 04 04     ................
    20a0:	03 03 03 03 03 03 03 03 01 01 01 01 01 01 01 01     ................

000020b0 <port_to_input_PGM>:
    20b0:	00 00 20 00 23 00 26 00 29 00                       .. .#.&.).

000020ba <port_to_output_PGM>:
    20ba:	00 00 22 00 25 00 28 00 2b 00                       ..".%.(.+.

000020c4 <port_to_mode_PGM>:
    20c4:	00 00 21 00 24 00 27 00 2a 00                       ..!.$.'.*.

000020ce <__ctors_start>:
__ctors_start():
    20ce:	72 1a       	sub	r7, r18
    20d0:	a7 52       	subi	r26, 0x27	; 39

000020d2 <__ctors_end>:
__dtors_start():
    20d2:	eb 1a       	sub	r14, r27

000020d4 <__dtors_end>:
__dtors_end():
    20d4:	11 24       	eor	r1, r1
    20d6:	1f be       	out	0x3f, r1	; 63
    20d8:	cf ef       	ldi	r28, 0xFF	; 255
    20da:	d0 e4       	ldi	r29, 0x40	; 64
    20dc:	de bf       	out	0x3e, r29	; 62
    20de:	cd bf       	out	0x3d, r28	; 61

000020e0 <__do_copy_data>:
__do_copy_data():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2373
    20e0:	12 e0       	ldi	r17, 0x02	; 2
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2374
    20e2:	a0 e0       	ldi	r26, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2375
    20e4:	b1 e0       	ldi	r27, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2376
    20e6:	ec ef       	ldi	r30, 0xFC	; 252
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2377
    20e8:	f9 ee       	ldi	r31, 0xE9	; 233
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2378
    20ea:	00 e0       	ldi	r16, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2379
    20ec:	0b bf       	out	0x3b, r16	; 59
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2380
    20ee:	02 c0       	rjmp	.+4      	; 0x20f4 <__do_copy_data+0x14>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2382
    20f0:	07 90       	elpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2383
    20f2:	0d 92       	st	X+, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2385
    20f4:	a6 3f       	cpi	r26, 0xF6	; 246
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2386
    20f6:	b1 07       	cpc	r27, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2387
    20f8:	d9 f7       	brne	.-10     	; 0x20f0 <__do_copy_data+0x10>

000020fa <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
    20fa:	2a e0       	ldi	r18, 0x0A	; 10
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
    20fc:	a6 ef       	ldi	r26, 0xF6	; 246
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
    20fe:	b2 e0       	ldi	r27, 0x02	; 2
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
    2100:	01 c0       	rjmp	.+2      	; 0x2104 <.do_clear_bss_start>

00002102 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
    2102:	1d 92       	st	X+, r1

00002104 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
    2104:	a8 3b       	cpi	r26, 0xB8	; 184
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
    2106:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
    2108:	e1 f7       	brne	.-8      	; 0x2102 <.do_clear_bss_loop>

0000210a <__do_global_ctors>:
__do_global_ctors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
    210a:	10 e1       	ldi	r17, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
    210c:	c9 e6       	ldi	r28, 0x69	; 105
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
    210e:	d0 e1       	ldi	r29, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
    2110:	04 c0       	rjmp	.+8      	; 0x211a <__do_global_ctors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
    2112:	21 97       	sbiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
    2114:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
    2116:	0e 94 ea 72 	call	0xe5d4	; 0xe5d4 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
    211a:	c7 36       	cpi	r28, 0x67	; 103
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
    211c:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
    211e:	c9 f7       	brne	.-14     	; 0x2112 <__do_global_ctors+0x8>
    2120:	0e 94 0c 6e 	call	0xdc18	; 0xdc18 <main>
    2124:	0c 94 f1 74 	jmp	0xe9e2	; 0xe9e2 <__do_global_dtors>

00002128 <__bad_interrupt>:
__vector_22():
    2128:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000212c <AButtonISR()>:
_Z10AButtonISRv():
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:14
        }
        /* Clear Old Rectangle */
        display.drawRoundRect(menu.iconX + 32, menu.iconY, 32, 32, 3, BLACK);
}

void AButtonISR(void){
    212c:	0f 93       	push	r16
    212e:	1f 93       	push	r17
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:16
        static unsigned long last_interrupt_time = 0;
        if (millis() - last_interrupt_time > 200) {
    2130:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    2134:	00 91 6e 03 	lds	r16, 0x036E	; 0x80036e <AButtonISR()::last_interrupt_time>
    2138:	10 91 6f 03 	lds	r17, 0x036F	; 0x80036f <AButtonISR()::last_interrupt_time+0x1>
    213c:	20 91 70 03 	lds	r18, 0x0370	; 0x800370 <AButtonISR()::last_interrupt_time+0x2>
    2140:	30 91 71 03 	lds	r19, 0x0371	; 0x800371 <AButtonISR()::last_interrupt_time+0x3>
    2144:	60 1b       	sub	r22, r16
    2146:	71 0b       	sbc	r23, r17
    2148:	82 0b       	sbc	r24, r18
    214a:	93 0b       	sbc	r25, r19
    214c:	69 3c       	cpi	r22, 0xC9	; 201
    214e:	71 05       	cpc	r23, r1
    2150:	81 05       	cpc	r24, r1
    2152:	91 05       	cpc	r25, r1
    2154:	60 f0       	brcs	.+24     	; 0x216e <AButtonISR()+0x42>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:17
                menu.switchMenu = !menu.switchMenu;
    2156:	80 91 34 09 	lds	r24, 0x0934	; 0x800934 <menu+0x2>
    215a:	91 e0       	ldi	r25, 0x01	; 1
    215c:	89 27       	eor	r24, r25
    215e:	80 93 34 09 	sts	0x0934, r24	; 0x800934 <menu+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:18
                menu.newTabFlag = true;
    2162:	90 93 39 09 	sts	0x0939, r25	; 0x800939 <menu+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:19
                altitude_graph.x_increment = 0;
    2166:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <altitude_graph+0x3>
    216a:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <altitude_graph+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:21
        }
        display.clearDisplay();
    216e:	8d ee       	ldi	r24, 0xED	; 237
    2170:	98 e0       	ldi	r25, 0x08	; 8
    2172:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:22
        last_interrupt_time = millis(); /* Update Interrupt Time */
    2176:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    217a:	60 93 6e 03 	sts	0x036E, r22	; 0x80036e <AButtonISR()::last_interrupt_time>
    217e:	70 93 6f 03 	sts	0x036F, r23	; 0x80036f <AButtonISR()::last_interrupt_time+0x1>
    2182:	80 93 70 03 	sts	0x0370, r24	; 0x800370 <AButtonISR()::last_interrupt_time+0x2>
    2186:	90 93 71 03 	sts	0x0371, r25	; 0x800371 <AButtonISR()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:23
}
    218a:	1f 91       	pop	r17
    218c:	0f 91       	pop	r16
    218e:	08 95       	ret

00002190 <EEPROMClass::read(int) [clone .isra.0]>:
_ZNK5EERefdeEv():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\EEPROM\src/EEPROM.h:42

    EERef( const int index )
        : index( index )                 {}
    
    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    2190:	0c 94 db 74 	jmp	0xe9b6	; 0xe9b6 <eeprom_read_byte>

00002194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>:
_ZN5EERefaSEh():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\EEPROM\src/EEPROM.h:47
    operator uint8_t() const             { return **this; }
    
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    2194:	0c 94 e3 74 	jmp	0xe9c6	; 0xe9c6 <eeprom_write_byte>

00002198 <BButtonISR()>:
_Z10BButtonISRv():
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:1
void BButtonISR(void) {
    2198:	cf 92       	push	r12
    219a:	df 92       	push	r13
    219c:	ef 92       	push	r14
    219e:	ff 92       	push	r15
    21a0:	0f 93       	push	r16
    21a2:	1f 93       	push	r17
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:3
        static unsigned long last_interrupt_time = 0;
        while (!digitalRead(B_Pin)) {
    21a4:	81 e0       	ldi	r24, 0x01	; 1
    21a6:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    21aa:	89 2b       	or	r24, r25
    21ac:	51 f5       	brne	.+84     	; 0x2202 <BButtonISR()+0x6a>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:4
                if (millis() - last_interrupt_time > 200) {
    21ae:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    21b2:	00 91 72 03 	lds	r16, 0x0372	; 0x800372 <BButtonISR()::last_interrupt_time>
    21b6:	10 91 73 03 	lds	r17, 0x0373	; 0x800373 <BButtonISR()::last_interrupt_time+0x1>
    21ba:	20 91 74 03 	lds	r18, 0x0374	; 0x800374 <BButtonISR()::last_interrupt_time+0x2>
    21be:	30 91 75 03 	lds	r19, 0x0375	; 0x800375 <BButtonISR()::last_interrupt_time+0x3>
    21c2:	60 1b       	sub	r22, r16
    21c4:	71 0b       	sbc	r23, r17
    21c6:	82 0b       	sbc	r24, r18
    21c8:	93 0b       	sbc	r25, r19
    21ca:	69 3c       	cpi	r22, 0xC9	; 201
    21cc:	71 05       	cpc	r23, r1
    21ce:	81 05       	cpc	r24, r1
    21d0:	91 05       	cpc	r25, r1
    21d2:	60 f0       	brcs	.+24     	; 0x21ec <BButtonISR()+0x54>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:5
                        menu.iconX -= 32;
    21d4:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <menu+0x3>
    21d8:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <menu+0x4>
    21dc:	80 97       	sbiw	r24, 0x20	; 32
    21de:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <menu+0x4>
    21e2:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <menu+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:6
                        menu.newTabFlag = true;
    21e6:	81 e0       	ldi	r24, 0x01	; 1
    21e8:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <menu+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:8
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
    21ec:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    21f0:	60 93 72 03 	sts	0x0372, r22	; 0x800372 <BButtonISR()::last_interrupt_time>
    21f4:	70 93 73 03 	sts	0x0373, r23	; 0x800373 <BButtonISR()::last_interrupt_time+0x1>
    21f8:	80 93 74 03 	sts	0x0374, r24	; 0x800374 <BButtonISR()::last_interrupt_time+0x2>
    21fc:	90 93 75 03 	sts	0x0375, r25	; 0x800375 <BButtonISR()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:3
void BButtonISR(void) {
        static unsigned long last_interrupt_time = 0;
        while (!digitalRead(B_Pin)) {
    2200:	d1 cf       	rjmp	.-94     	; 0x21a4 <BButtonISR()+0xc>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:11
                        menu.newTabFlag = true;
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
        }
        /* Clear Old Rectangle */
        display.drawRoundRect(menu.iconX + 32, menu.iconY, 32, 32, 3, BLACK);
    2202:	40 91 37 09 	lds	r20, 0x0937	; 0x800937 <menu+0x5>
    2206:	50 91 38 09 	lds	r21, 0x0938	; 0x800938 <menu+0x6>
    220a:	60 91 35 09 	lds	r22, 0x0935	; 0x800935 <menu+0x3>
    220e:	70 91 36 09 	lds	r23, 0x0936	; 0x800936 <menu+0x4>
    2212:	60 5e       	subi	r22, 0xE0	; 224
    2214:	7f 4f       	sbci	r23, 0xFF	; 255
    2216:	d1 2c       	mov	r13, r1
    2218:	c1 2c       	mov	r12, r1
    221a:	83 e0       	ldi	r24, 0x03	; 3
    221c:	e8 2e       	mov	r14, r24
    221e:	f1 2c       	mov	r15, r1
    2220:	00 e2       	ldi	r16, 0x20	; 32
    2222:	10 e0       	ldi	r17, 0x00	; 0
    2224:	20 e2       	ldi	r18, 0x20	; 32
    2226:	30 e0       	ldi	r19, 0x00	; 0
    2228:	8d ee       	ldi	r24, 0xED	; 237
    222a:	98 e0       	ldi	r25, 0x08	; 8
    222c:	0e 94 8b 45 	call	0x8b16	; 0x8b16 <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:12
}
    2230:	1f 91       	pop	r17
    2232:	0f 91       	pop	r16
    2234:	ff 90       	pop	r15
    2236:	ef 90       	pop	r14
    2238:	df 90       	pop	r13
    223a:	cf 90       	pop	r12
    223c:	08 95       	ret

0000223e <CButton()>:
_Z7CButtonv():
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:26
        display.clearDisplay();
        last_interrupt_time = millis(); /* Update Interrupt Time */
}

void CButton(void)
{
    223e:	cf 92       	push	r12
    2240:	df 92       	push	r13
    2242:	ef 92       	push	r14
    2244:	ff 92       	push	r15
    2246:	0f 93       	push	r16
    2248:	1f 93       	push	r17
    224a:	cf 93       	push	r28
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:31
        static unsigned long last_interrupt_time = 0;
        while(!digitalRead(C_Pin)) {
                if (millis() - last_interrupt_time > 200) {
                        menu.iconX += 32;
                        menu.newTabFlag = true;
    224c:	c1 e0       	ldi	r28, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:28
}

void CButton(void)
{
        static unsigned long last_interrupt_time = 0;
        while(!digitalRead(C_Pin)) {
    224e:	80 e0       	ldi	r24, 0x00	; 0
    2250:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    2254:	89 2b       	or	r24, r25
    2256:	09 f0       	breq	.+2      	; 0x225a <CButton()+0x1c>
    2258:	40 c0       	rjmp	.+128    	; 0x22da <CButton()+0x9c>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:29
                if (millis() - last_interrupt_time > 200) {
    225a:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    225e:	00 91 6a 03 	lds	r16, 0x036A	; 0x80036a <CButton()::last_interrupt_time>
    2262:	10 91 6b 03 	lds	r17, 0x036B	; 0x80036b <CButton()::last_interrupt_time+0x1>
    2266:	20 91 6c 03 	lds	r18, 0x036C	; 0x80036c <CButton()::last_interrupt_time+0x2>
    226a:	30 91 6d 03 	lds	r19, 0x036D	; 0x80036d <CButton()::last_interrupt_time+0x3>
    226e:	60 1b       	sub	r22, r16
    2270:	71 0b       	sbc	r23, r17
    2272:	82 0b       	sbc	r24, r18
    2274:	93 0b       	sbc	r25, r19
    2276:	69 3c       	cpi	r22, 0xC9	; 201
    2278:	71 05       	cpc	r23, r1
    227a:	81 05       	cpc	r24, r1
    227c:	91 05       	cpc	r25, r1
    227e:	58 f0       	brcs	.+22     	; 0x2296 <CButton()+0x58>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:30
                        menu.iconX += 32;
    2280:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <menu+0x3>
    2284:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <menu+0x4>
    2288:	80 96       	adiw	r24, 0x20	; 32
    228a:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <menu+0x4>
    228e:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <menu+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:31
                        menu.newTabFlag = true;
    2292:	c0 93 39 09 	sts	0x0939, r28	; 0x800939 <menu+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:33
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
    2296:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    229a:	60 93 6a 03 	sts	0x036A, r22	; 0x80036a <CButton()::last_interrupt_time>
    229e:	70 93 6b 03 	sts	0x036B, r23	; 0x80036b <CButton()::last_interrupt_time+0x1>
    22a2:	80 93 6c 03 	sts	0x036C, r24	; 0x80036c <CButton()::last_interrupt_time+0x2>
    22a6:	90 93 6d 03 	sts	0x036D, r25	; 0x80036d <CButton()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:34
                display.drawRoundRect(menu.iconX - 32, menu.iconY, 32, 32, 3, BLACK);
    22aa:	40 91 37 09 	lds	r20, 0x0937	; 0x800937 <menu+0x5>
    22ae:	50 91 38 09 	lds	r21, 0x0938	; 0x800938 <menu+0x6>
    22b2:	60 91 35 09 	lds	r22, 0x0935	; 0x800935 <menu+0x3>
    22b6:	70 91 36 09 	lds	r23, 0x0936	; 0x800936 <menu+0x4>
    22ba:	60 52       	subi	r22, 0x20	; 32
    22bc:	71 09       	sbc	r23, r1
    22be:	d1 2c       	mov	r13, r1
    22c0:	c1 2c       	mov	r12, r1
    22c2:	83 e0       	ldi	r24, 0x03	; 3
    22c4:	e8 2e       	mov	r14, r24
    22c6:	f1 2c       	mov	r15, r1
    22c8:	00 e2       	ldi	r16, 0x20	; 32
    22ca:	10 e0       	ldi	r17, 0x00	; 0
    22cc:	20 e2       	ldi	r18, 0x20	; 32
    22ce:	30 e0       	ldi	r19, 0x00	; 0
    22d0:	8d ee       	ldi	r24, 0xED	; 237
    22d2:	98 e0       	ldi	r25, 0x08	; 8
    22d4:	0e 94 8b 45 	call	0x8b16	; 0x8b16 <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:28
}

void CButton(void)
{
        static unsigned long last_interrupt_time = 0;
        while(!digitalRead(C_Pin)) {
    22d8:	ba cf       	rjmp	.-140    	; 0x224e <CButton()+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:36
                        menu.newTabFlag = true;
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
                display.drawRoundRect(menu.iconX - 32, menu.iconY, 32, 32, 3, BLACK);
        }
}
    22da:	cf 91       	pop	r28
    22dc:	1f 91       	pop	r17
    22de:	0f 91       	pop	r16
    22e0:	ff 90       	pop	r15
    22e2:	ef 90       	pop	r14
    22e4:	df 90       	pop	r13
    22e6:	cf 90       	pop	r12
    22e8:	08 95       	ret

000022ea <writeToEEPROM(int, double)>:
_Z13writeToEEPROMid():
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:7
    Note: For each floating point value needed 5 memory address
          to store value, hence if first value start with memory Address
          10, so the next memory address for next value would be 16
 */

void writeToEEPROM(int address, double value){
    22ea:	4f 92       	push	r4
    22ec:	5f 92       	push	r5
    22ee:	6f 92       	push	r6
    22f0:	7f 92       	push	r7
    22f2:	8f 92       	push	r8
    22f4:	9f 92       	push	r9
    22f6:	af 92       	push	r10
    22f8:	bf 92       	push	r11
    22fa:	cf 92       	push	r12
    22fc:	df 92       	push	r13
    22fe:	ef 92       	push	r14
    2300:	ff 92       	push	r15
    2302:	0f 93       	push	r16
    2304:	1f 93       	push	r17
    2306:	cf 93       	push	r28
    2308:	df 93       	push	r29
    230a:	ec 01       	movw	r28, r24
    230c:	6a 01       	movw	r12, r20
    230e:	7b 01       	movw	r14, r22
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:13
        int tempAddress = address;
        double tempValue = value, bias;
        double fraction[3] = {0, 0, 0};

        /* Check if value is negative */
        if(tempValue < 0) {
    2310:	20 e0       	ldi	r18, 0x00	; 0
    2312:	30 e0       	ldi	r19, 0x00	; 0
    2314:	a9 01       	movw	r20, r18
    2316:	cb 01       	movw	r24, r22
    2318:	b6 01       	movw	r22, r12
    231a:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:14
                EEPROM.write(tempAddress, 1); /* 1 is negative, for sign bit*/
    231e:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:13
        int tempAddress = address;
        double tempValue = value, bias;
        double fraction[3] = {0, 0, 0};

        /* Check if value is negative */
        if(tempValue < 0) {
    2320:	87 ff       	sbrs	r24, 7
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:17
                EEPROM.write(tempAddress, 1); /* 1 is negative, for sign bit*/
                delay(10);
        } else {
                EEPROM.write(tempAddress, 0);
    2322:	60 e0       	ldi	r22, 0x00	; 0
    2324:	ce 01       	movw	r24, r28
    2326:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:18
                delay(10);
    232a:	6a e0       	ldi	r22, 0x0A	; 10
    232c:	70 e0       	ldi	r23, 0x00	; 0
    232e:	80 e0       	ldi	r24, 0x00	; 0
    2330:	90 e0       	ldi	r25, 0x00	; 0
    2332:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:22
        }

        /* Convert float to int */
        bias = int(abs(tempValue));
    2336:	c7 01       	movw	r24, r14
    2338:	b6 01       	movw	r22, r12
    233a:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    233e:	8b 01       	movw	r16, r22
    2340:	77 ff       	sbrs	r23, 7
    2342:	04 c0       	rjmp	.+8      	; 0x234c <writeToEEPROM(int, double)+0x62>
    2344:	00 27       	eor	r16, r16
    2346:	11 27       	eor	r17, r17
    2348:	06 1b       	sub	r16, r22
    234a:	17 0b       	sbc	r17, r23
    234c:	b8 01       	movw	r22, r16
    234e:	11 0f       	add	r17, r17
    2350:	88 0b       	sbc	r24, r24
    2352:	99 0b       	sbc	r25, r25
    2354:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    2358:	9b 01       	movw	r18, r22
    235a:	ac 01       	movw	r20, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:23
        fraction[0] = tempValue - bias;
    235c:	c7 01       	movw	r24, r14
    235e:	b6 01       	movw	r22, r12
    2360:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    2364:	6b 01       	movw	r12, r22
    2366:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:24
        fraction[1] = fraction[0] - int(fraction[0] * 1e2) * 1e-2;
    2368:	20 e0       	ldi	r18, 0x00	; 0
    236a:	30 e0       	ldi	r19, 0x00	; 0
    236c:	48 ec       	ldi	r20, 0xC8	; 200
    236e:	52 e4       	ldi	r21, 0x42	; 66
    2370:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2374:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    2378:	2b 01       	movw	r4, r22
    237a:	07 2e       	mov	r0, r23
    237c:	00 0c       	add	r0, r0
    237e:	88 0b       	sbc	r24, r24
    2380:	99 0b       	sbc	r25, r25
    2382:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    2386:	2a e0       	ldi	r18, 0x0A	; 10
    2388:	37 ed       	ldi	r19, 0xD7	; 215
    238a:	43 e2       	ldi	r20, 0x23	; 35
    238c:	5c e3       	ldi	r21, 0x3C	; 60
    238e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2392:	9b 01       	movw	r18, r22
    2394:	ac 01       	movw	r20, r24
    2396:	c7 01       	movw	r24, r14
    2398:	b6 01       	movw	r22, r12
    239a:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    239e:	4b 01       	movw	r8, r22
    23a0:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:25
        fraction[2] = fraction[1] - int(fraction[1] * 1e4) * 1e-4;
    23a2:	20 e0       	ldi	r18, 0x00	; 0
    23a4:	30 e4       	ldi	r19, 0x40	; 64
    23a6:	4c e1       	ldi	r20, 0x1C	; 28
    23a8:	56 e4       	ldi	r21, 0x46	; 70
    23aa:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    23ae:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    23b2:	6b 01       	movw	r12, r22
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:32
        fraction[0] = int(fraction[0] * 1e2);
        fraction[1] = int(fraction[1] * 1e4);
        fraction[2] = int(fraction[2] * 1e6);

        /* Save value to EEPROM */
        EEPROM.write((tempAddress + 1), bias); delay(10);
    23b4:	60 2f       	mov	r22, r16
    23b6:	ce 01       	movw	r24, r28
    23b8:	01 96       	adiw	r24, 0x01	; 1
    23ba:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    23be:	6a e0       	ldi	r22, 0x0A	; 10
    23c0:	70 e0       	ldi	r23, 0x00	; 0
    23c2:	80 e0       	ldi	r24, 0x00	; 0
    23c4:	90 e0       	ldi	r25, 0x00	; 0
    23c6:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:33
        EEPROM.write((tempAddress + 2), fraction[0]); delay(10);
    23ca:	64 2d       	mov	r22, r4
    23cc:	ce 01       	movw	r24, r28
    23ce:	02 96       	adiw	r24, 0x02	; 2
    23d0:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    23d4:	6a e0       	ldi	r22, 0x0A	; 10
    23d6:	70 e0       	ldi	r23, 0x00	; 0
    23d8:	80 e0       	ldi	r24, 0x00	; 0
    23da:	90 e0       	ldi	r25, 0x00	; 0
    23dc:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:34
        EEPROM.write((tempAddress + 3), fraction[1]); delay(10);
    23e0:	6c 2d       	mov	r22, r12
    23e2:	ce 01       	movw	r24, r28
    23e4:	03 96       	adiw	r24, 0x03	; 3
    23e6:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    23ea:	6a e0       	ldi	r22, 0x0A	; 10
    23ec:	70 e0       	ldi	r23, 0x00	; 0
    23ee:	80 e0       	ldi	r24, 0x00	; 0
    23f0:	90 e0       	ldi	r25, 0x00	; 0
    23f2:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:25

        /* Convert float to int */
        bias = int(abs(tempValue));
        fraction[0] = tempValue - bias;
        fraction[1] = fraction[0] - int(fraction[0] * 1e2) * 1e-2;
        fraction[2] = fraction[1] - int(fraction[1] * 1e4) * 1e-4;
    23f6:	b6 01       	movw	r22, r12
    23f8:	dd 0c       	add	r13, r13
    23fa:	88 0b       	sbc	r24, r24
    23fc:	99 0b       	sbc	r25, r25
    23fe:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    2402:	27 e1       	ldi	r18, 0x17	; 23
    2404:	37 eb       	ldi	r19, 0xB7	; 183
    2406:	41 ed       	ldi	r20, 0xD1	; 209
    2408:	58 e3       	ldi	r21, 0x38	; 56
    240a:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    240e:	9b 01       	movw	r18, r22
    2410:	ac 01       	movw	r20, r24
    2412:	c5 01       	movw	r24, r10
    2414:	b4 01       	movw	r22, r8
    2416:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:29

        fraction[0] = int(fraction[0] * 1e2);
        fraction[1] = int(fraction[1] * 1e4);
        fraction[2] = int(fraction[2] * 1e6);
    241a:	20 e0       	ldi	r18, 0x00	; 0
    241c:	34 e2       	ldi	r19, 0x24	; 36
    241e:	44 e7       	ldi	r20, 0x74	; 116
    2420:	59 e4       	ldi	r21, 0x49	; 73
    2422:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2426:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:35

        /* Save value to EEPROM */
        EEPROM.write((tempAddress + 1), bias); delay(10);
        EEPROM.write((tempAddress + 2), fraction[0]); delay(10);
        EEPROM.write((tempAddress + 3), fraction[1]); delay(10);
        EEPROM.write((tempAddress + 4), fraction[2]); delay(10);
    242a:	ce 01       	movw	r24, r28
    242c:	04 96       	adiw	r24, 0x04	; 4
    242e:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
    2432:	6a e0       	ldi	r22, 0x0A	; 10
    2434:	70 e0       	ldi	r23, 0x00	; 0
    2436:	80 e0       	ldi	r24, 0x00	; 0
    2438:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:36
}
    243a:	df 91       	pop	r29
    243c:	cf 91       	pop	r28
    243e:	1f 91       	pop	r17
    2440:	0f 91       	pop	r16
    2442:	ff 90       	pop	r15
    2444:	ef 90       	pop	r14
    2446:	df 90       	pop	r13
    2448:	cf 90       	pop	r12
    244a:	bf 90       	pop	r11
    244c:	af 90       	pop	r10
    244e:	9f 90       	pop	r9
    2450:	8f 90       	pop	r8
    2452:	7f 90       	pop	r7
    2454:	6f 90       	pop	r6
    2456:	5f 90       	pop	r5
    2458:	4f 90       	pop	r4
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:35

        /* Save value to EEPROM */
        EEPROM.write((tempAddress + 1), bias); delay(10);
        EEPROM.write((tempAddress + 2), fraction[0]); delay(10);
        EEPROM.write((tempAddress + 3), fraction[1]); delay(10);
        EEPROM.write((tempAddress + 4), fraction[2]); delay(10);
    245a:	0c 94 88 6a 	jmp	0xd510	; 0xd510 <delay>

0000245e <decodeFromEEPROM(int)>:
_Z16decodeFromEEPROMi():
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:38
}

double decodeFromEEPROM(int address){
    245e:	4f 92       	push	r4
    2460:	5f 92       	push	r5
    2462:	6f 92       	push	r6
    2464:	7f 92       	push	r7
    2466:	8f 92       	push	r8
    2468:	9f 92       	push	r9
    246a:	af 92       	push	r10
    246c:	bf 92       	push	r11
    246e:	cf 92       	push	r12
    2470:	df 92       	push	r13
    2472:	ef 92       	push	r14
    2474:	ff 92       	push	r15
    2476:	cf 93       	push	r28
    2478:	df 93       	push	r29
    247a:	00 d0       	rcall	.+0      	; 0x247c <decodeFromEEPROM(int)+0x1e>
    247c:	00 d0       	rcall	.+0      	; 0x247e <decodeFromEEPROM(int)+0x20>
    247e:	cd b7       	in	r28, 0x3d	; 61
    2480:	de b7       	in	r29, 0x3e	; 62
    2482:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:44
        double tempValue;
        int tempAddress = address;
        int bias, fraction[3] = {0, 0, 0}, signBit;

        /* Read value from EEPROM address */
        signBit = EEPROM.read(tempAddress); delay(10);
    2484:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    2488:	89 83       	std	Y+1, r24	; 0x01
    248a:	6a e0       	ldi	r22, 0x0A	; 10
    248c:	70 e0       	ldi	r23, 0x00	; 0
    248e:	80 e0       	ldi	r24, 0x00	; 0
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:45
        bias = EEPROM.read(tempAddress + 1); delay(10);
    2496:	c7 01       	movw	r24, r14
    2498:	01 96       	adiw	r24, 0x01	; 1
    249a:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    249e:	48 2e       	mov	r4, r24
    24a0:	51 2c       	mov	r5, r1
    24a2:	6a e0       	ldi	r22, 0x0A	; 10
    24a4:	70 e0       	ldi	r23, 0x00	; 0
    24a6:	80 e0       	ldi	r24, 0x00	; 0
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:46
        fraction[0] = EEPROM.read(tempAddress + 2); delay(10);
    24ae:	c7 01       	movw	r24, r14
    24b0:	02 96       	adiw	r24, 0x02	; 2
    24b2:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    24b6:	a8 2e       	mov	r10, r24
    24b8:	b1 2c       	mov	r11, r1
    24ba:	6a e0       	ldi	r22, 0x0A	; 10
    24bc:	70 e0       	ldi	r23, 0x00	; 0
    24be:	80 e0       	ldi	r24, 0x00	; 0
    24c0:	90 e0       	ldi	r25, 0x00	; 0
    24c2:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:47
        fraction[1] = EEPROM.read(tempAddress + 3); delay(10);
    24c6:	c7 01       	movw	r24, r14
    24c8:	03 96       	adiw	r24, 0x03	; 3
    24ca:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    24ce:	88 2e       	mov	r8, r24
    24d0:	91 2c       	mov	r9, r1
    24d2:	6a e0       	ldi	r22, 0x0A	; 10
    24d4:	70 e0       	ldi	r23, 0x00	; 0
    24d6:	80 e0       	ldi	r24, 0x00	; 0
    24d8:	90 e0       	ldi	r25, 0x00	; 0
    24da:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:48
        fraction[2] = EEPROM.read(tempAddress + 4); delay(10);
    24de:	c7 01       	movw	r24, r14
    24e0:	04 96       	adiw	r24, 0x04	; 4
    24e2:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    24e6:	c8 2e       	mov	r12, r24
    24e8:	d1 2c       	mov	r13, r1
    24ea:	6a e0       	ldi	r22, 0x0A	; 10
    24ec:	70 e0       	ldi	r23, 0x00	; 0
    24ee:	80 e0       	ldi	r24, 0x00	; 0
    24f0:	90 e0       	ldi	r25, 0x00	; 0
    24f2:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
    24f6:	b5 01       	movw	r22, r10
    24f8:	bb 0c       	add	r11, r11
    24fa:	88 0b       	sbc	r24, r24
    24fc:	99 0b       	sbc	r25, r25
    24fe:	05 2c       	mov	r0, r5
    2500:	00 0c       	add	r0, r0
    2502:	66 08       	sbc	r6, r6
    2504:	77 08       	sbc	r7, r7
    2506:	09 2c       	mov	r0, r9
    2508:	00 0c       	add	r0, r0
    250a:	aa 08       	sbc	r10, r10
    250c:	bb 08       	sbc	r11, r11
    250e:	0d 2c       	mov	r0, r13
    2510:	00 0c       	add	r0, r0
    2512:	ee 08       	sbc	r14, r14
    2514:	ff 08       	sbc	r15, r15
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:51

        /* Reconstruct value to floating point */
        if(signBit == 1) { /* Check if value is negative */
    2516:	29 81       	ldd	r18, Y+1	; 0x01
    2518:	21 30       	cpi	r18, 0x01	; 1
    251a:	09 f0       	breq	.+2      	; 0x251e <decodeFromEEPROM(int)+0xc0>
    251c:	50 c0       	rjmp	.+160    	; 0x25be <decodeFromEEPROM(int)+0x160>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:54
                tempValue = -(
                        bias
                        + fraction[0] * 1e-2
    251e:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    2522:	2a e0       	ldi	r18, 0x0A	; 10
    2524:	37 ed       	ldi	r19, 0xD7	; 215
    2526:	43 e2       	ldi	r20, 0x23	; 35
    2528:	5c e3       	ldi	r21, 0x3C	; 60
    252a:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    252e:	69 83       	std	Y+1, r22	; 0x01
    2530:	7a 83       	std	Y+2, r23	; 0x02
    2532:	8b 83       	std	Y+3, r24	; 0x03
    2534:	9c 83       	std	Y+4, r25	; 0x04
    2536:	c3 01       	movw	r24, r6
    2538:	b2 01       	movw	r22, r4
    253a:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    253e:	9b 01       	movw	r18, r22
    2540:	ac 01       	movw	r20, r24
    2542:	69 81       	ldd	r22, Y+1	; 0x01
    2544:	7a 81       	ldd	r23, Y+2	; 0x02
    2546:	8b 81       	ldd	r24, Y+3	; 0x03
    2548:	9c 81       	ldd	r25, Y+4	; 0x04
    254a:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    254e:	2b 01       	movw	r4, r22
    2550:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:55
                        + fraction[1] * 1e-4
    2552:	c5 01       	movw	r24, r10
    2554:	b4 01       	movw	r22, r8
    2556:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    255a:	27 e1       	ldi	r18, 0x17	; 23
    255c:	37 eb       	ldi	r19, 0xB7	; 183
    255e:	41 ed       	ldi	r20, 0xD1	; 209
    2560:	58 e3       	ldi	r21, 0x38	; 56
    2562:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2566:	9b 01       	movw	r18, r22
    2568:	ac 01       	movw	r20, r24
    256a:	c3 01       	movw	r24, r6
    256c:	b2 01       	movw	r22, r4
    256e:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    2572:	4b 01       	movw	r8, r22
    2574:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:56
                        + fraction[2] * 1e-6);
    2576:	c7 01       	movw	r24, r14
    2578:	b6 01       	movw	r22, r12
    257a:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    257e:	2d eb       	ldi	r18, 0xBD	; 189
    2580:	37 e3       	ldi	r19, 0x37	; 55
    2582:	46 e8       	ldi	r20, 0x86	; 134
    2584:	55 e3       	ldi	r21, 0x35	; 53
    2586:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    258a:	9b 01       	movw	r18, r22
    258c:	ac 01       	movw	r20, r24
    258e:	c5 01       	movw	r24, r10
    2590:	b4 01       	movw	r22, r8
    2592:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:52
        fraction[1] = EEPROM.read(tempAddress + 3); delay(10);
        fraction[2] = EEPROM.read(tempAddress + 4); delay(10);

        /* Reconstruct value to floating point */
        if(signBit == 1) { /* Check if value is negative */
                tempValue = -(
    2596:	90 58       	subi	r25, 0x80	; 128
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:65
                            + fraction[1] * 1e-4
                            + fraction[2] * 1e-6;
        }

        return tempValue;
}
    2598:	0f 90       	pop	r0
    259a:	0f 90       	pop	r0
    259c:	0f 90       	pop	r0
    259e:	0f 90       	pop	r0
    25a0:	df 91       	pop	r29
    25a2:	cf 91       	pop	r28
    25a4:	ff 90       	pop	r15
    25a6:	ef 90       	pop	r14
    25a8:	df 90       	pop	r13
    25aa:	cf 90       	pop	r12
    25ac:	bf 90       	pop	r11
    25ae:	af 90       	pop	r10
    25b0:	9f 90       	pop	r9
    25b2:	8f 90       	pop	r8
    25b4:	7f 90       	pop	r7
    25b6:	6f 90       	pop	r6
    25b8:	5f 90       	pop	r5
    25ba:	4f 90       	pop	r4
    25bc:	08 95       	ret
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:59
                        + fraction[0] * 1e-2
                        + fraction[1] * 1e-4
                        + fraction[2] * 1e-6);
        } else {
                tempValue = bias
                            + fraction[0] * 1e-2
    25be:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    25c2:	2a e0       	ldi	r18, 0x0A	; 10
    25c4:	37 ed       	ldi	r19, 0xD7	; 215
    25c6:	43 e2       	ldi	r20, 0x23	; 35
    25c8:	5c e3       	ldi	r21, 0x3C	; 60
    25ca:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    25ce:	69 83       	std	Y+1, r22	; 0x01
    25d0:	7a 83       	std	Y+2, r23	; 0x02
    25d2:	8b 83       	std	Y+3, r24	; 0x03
    25d4:	9c 83       	std	Y+4, r25	; 0x04
    25d6:	c3 01       	movw	r24, r6
    25d8:	b2 01       	movw	r22, r4
    25da:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    25de:	9b 01       	movw	r18, r22
    25e0:	ac 01       	movw	r20, r24
    25e2:	69 81       	ldd	r22, Y+1	; 0x01
    25e4:	7a 81       	ldd	r23, Y+2	; 0x02
    25e6:	8b 81       	ldd	r24, Y+3	; 0x03
    25e8:	9c 81       	ldd	r25, Y+4	; 0x04
    25ea:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    25ee:	2b 01       	movw	r4, r22
    25f0:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:60
                            + fraction[1] * 1e-4
    25f2:	c5 01       	movw	r24, r10
    25f4:	b4 01       	movw	r22, r8
    25f6:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    25fa:	27 e1       	ldi	r18, 0x17	; 23
    25fc:	37 eb       	ldi	r19, 0xB7	; 183
    25fe:	41 ed       	ldi	r20, 0xD1	; 209
    2600:	58 e3       	ldi	r21, 0x38	; 56
    2602:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2606:	9b 01       	movw	r18, r22
    2608:	ac 01       	movw	r20, r24
    260a:	c3 01       	movw	r24, r6
    260c:	b2 01       	movw	r22, r4
    260e:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    2612:	4b 01       	movw	r8, r22
    2614:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:61
                            + fraction[2] * 1e-6;
    2616:	c7 01       	movw	r24, r14
    2618:	b6 01       	movw	r22, r12
    261a:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    261e:	2d eb       	ldi	r18, 0xBD	; 189
    2620:	37 e3       	ldi	r19, 0x37	; 55
    2622:	46 e8       	ldi	r20, 0x86	; 134
    2624:	55 e3       	ldi	r21, 0x35	; 53
    2626:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    262a:	9b 01       	movw	r18, r22
    262c:	ac 01       	movw	r20, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:58
                        bias
                        + fraction[0] * 1e-2
                        + fraction[1] * 1e-4
                        + fraction[2] * 1e-6);
        } else {
                tempValue = bias
    262e:	c5 01       	movw	r24, r10
    2630:	b4 01       	movw	r22, r8
    2632:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/EEPROMManager.ino:64
                            + fraction[0] * 1e-2
                            + fraction[1] * 1e-4
                            + fraction[2] * 1e-6;
        }

        return tempValue;
    2636:	b0 cf       	rjmp	.-160    	; 0x2598 <decodeFromEEPROM(int)+0x13a>

00002638 <getTimeZone(double)>:
_Z11getTimeZoned():
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:1
int getTimeZone(double longitude) {
    2638:	cf 92       	push	r12
    263a:	df 92       	push	r13
    263c:	ef 92       	push	r14
    263e:	ff 92       	push	r15
    2640:	6b 01       	movw	r12, r22
    2642:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:5
  /* 360deg = 24h --> 1h = 15deg */

  /* GMT -11 */
  if ((longitude > -172.5) && (longitude < -157.5))
    2644:	20 e0       	ldi	r18, 0x00	; 0
    2646:	30 e8       	ldi	r19, 0x80	; 128
    2648:	4c e2       	ldi	r20, 0x2C	; 44
    264a:	53 ec       	ldi	r21, 0xC3	; 195
    264c:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2650:	18 16       	cp	r1, r24
    2652:	54 f4       	brge	.+20     	; 0x2668 <getTimeZone(double)+0x30>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:5 (discriminator 1)
    2654:	20 e0       	ldi	r18, 0x00	; 0
    2656:	30 e8       	ldi	r19, 0x80	; 128
    2658:	4d e1       	ldi	r20, 0x1D	; 29
    265a:	53 ec       	ldi	r21, 0xC3	; 195
    265c:	c7 01       	movw	r24, r14
    265e:	b6 01       	movw	r22, r12
    2660:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    2664:	87 fd       	sbrc	r24, 7
    2666:	d4 c1       	rjmp	.+936    	; 0x2a10 <getTimeZone(double)+0x3d8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:8
    return -11;
  /* GMT -10 */
  if ((longitude > -157.5) && (longitude < -142.5))
    2668:	20 e0       	ldi	r18, 0x00	; 0
    266a:	30 e8       	ldi	r19, 0x80	; 128
    266c:	4d e1       	ldi	r20, 0x1D	; 29
    266e:	53 ec       	ldi	r21, 0xC3	; 195
    2670:	c7 01       	movw	r24, r14
    2672:	b6 01       	movw	r22, r12
    2674:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2678:	18 16       	cp	r1, r24
    267a:	54 f4       	brge	.+20     	; 0x2690 <getTimeZone(double)+0x58>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:8 (discriminator 1)
    267c:	20 e0       	ldi	r18, 0x00	; 0
    267e:	30 e8       	ldi	r19, 0x80	; 128
    2680:	4e e0       	ldi	r20, 0x0E	; 14
    2682:	53 ec       	ldi	r21, 0xC3	; 195
    2684:	c7 01       	movw	r24, r14
    2686:	b6 01       	movw	r22, r12
    2688:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    268c:	87 fd       	sbrc	r24, 7
    268e:	c3 c1       	rjmp	.+902    	; 0x2a16 <getTimeZone(double)+0x3de>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:11
    return -10;
  /* GMT -9 */
  if ((longitude > -142.5) && (longitude < -127.5))
    2690:	20 e0       	ldi	r18, 0x00	; 0
    2692:	30 e8       	ldi	r19, 0x80	; 128
    2694:	4e e0       	ldi	r20, 0x0E	; 14
    2696:	53 ec       	ldi	r21, 0xC3	; 195
    2698:	c7 01       	movw	r24, r14
    269a:	b6 01       	movw	r22, r12
    269c:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    26a0:	18 16       	cp	r1, r24
    26a2:	54 f4       	brge	.+20     	; 0x26b8 <getTimeZone(double)+0x80>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:11 (discriminator 1)
    26a4:	20 e0       	ldi	r18, 0x00	; 0
    26a6:	30 e0       	ldi	r19, 0x00	; 0
    26a8:	4f ef       	ldi	r20, 0xFF	; 255
    26aa:	52 ec       	ldi	r21, 0xC2	; 194
    26ac:	c7 01       	movw	r24, r14
    26ae:	b6 01       	movw	r22, r12
    26b0:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    26b4:	87 fd       	sbrc	r24, 7
    26b6:	b2 c1       	rjmp	.+868    	; 0x2a1c <getTimeZone(double)+0x3e4>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:14
    return -9;
  /* GMT -8 */
  if ((longitude > -127.5) && (longitude < -112.5))
    26b8:	20 e0       	ldi	r18, 0x00	; 0
    26ba:	30 e0       	ldi	r19, 0x00	; 0
    26bc:	4f ef       	ldi	r20, 0xFF	; 255
    26be:	52 ec       	ldi	r21, 0xC2	; 194
    26c0:	c7 01       	movw	r24, r14
    26c2:	b6 01       	movw	r22, r12
    26c4:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    26c8:	18 16       	cp	r1, r24
    26ca:	54 f4       	brge	.+20     	; 0x26e0 <getTimeZone(double)+0xa8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:14 (discriminator 1)
    26cc:	20 e0       	ldi	r18, 0x00	; 0
    26ce:	30 e0       	ldi	r19, 0x00	; 0
    26d0:	41 ee       	ldi	r20, 0xE1	; 225
    26d2:	52 ec       	ldi	r21, 0xC2	; 194
    26d4:	c7 01       	movw	r24, r14
    26d6:	b6 01       	movw	r22, r12
    26d8:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    26dc:	87 fd       	sbrc	r24, 7
    26de:	a1 c1       	rjmp	.+834    	; 0x2a22 <getTimeZone(double)+0x3ea>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:17
    return -8;
  /* GMT -7 */
  if ((longitude > -112.5) && (longitude < -97.5))
    26e0:	20 e0       	ldi	r18, 0x00	; 0
    26e2:	30 e0       	ldi	r19, 0x00	; 0
    26e4:	41 ee       	ldi	r20, 0xE1	; 225
    26e6:	52 ec       	ldi	r21, 0xC2	; 194
    26e8:	c7 01       	movw	r24, r14
    26ea:	b6 01       	movw	r22, r12
    26ec:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    26f0:	18 16       	cp	r1, r24
    26f2:	54 f4       	brge	.+20     	; 0x2708 <getTimeZone(double)+0xd0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:17 (discriminator 1)
    26f4:	20 e0       	ldi	r18, 0x00	; 0
    26f6:	30 e0       	ldi	r19, 0x00	; 0
    26f8:	43 ec       	ldi	r20, 0xC3	; 195
    26fa:	52 ec       	ldi	r21, 0xC2	; 194
    26fc:	c7 01       	movw	r24, r14
    26fe:	b6 01       	movw	r22, r12
    2700:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    2704:	87 fd       	sbrc	r24, 7
    2706:	90 c1       	rjmp	.+800    	; 0x2a28 <getTimeZone(double)+0x3f0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:20
    return -7;
  /* GMT -6 */
  if ((longitude > 97.5) && (longitude < -82.5))
    2708:	20 e0       	ldi	r18, 0x00	; 0
    270a:	30 e0       	ldi	r19, 0x00	; 0
    270c:	43 ec       	ldi	r20, 0xC3	; 195
    270e:	52 e4       	ldi	r21, 0x42	; 66
    2710:	c7 01       	movw	r24, r14
    2712:	b6 01       	movw	r22, r12
    2714:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2718:	18 16       	cp	r1, r24
    271a:	54 f4       	brge	.+20     	; 0x2730 <getTimeZone(double)+0xf8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:20 (discriminator 1)
    271c:	20 e0       	ldi	r18, 0x00	; 0
    271e:	30 e0       	ldi	r19, 0x00	; 0
    2720:	45 ea       	ldi	r20, 0xA5	; 165
    2722:	52 ec       	ldi	r21, 0xC2	; 194
    2724:	c7 01       	movw	r24, r14
    2726:	b6 01       	movw	r22, r12
    2728:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    272c:	87 fd       	sbrc	r24, 7
    272e:	7f c1       	rjmp	.+766    	; 0x2a2e <getTimeZone(double)+0x3f6>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:23
    return -6;
  /* GMT -5 */
  if ((longitude > -82.5) && (longitude < -67.5))
    2730:	20 e0       	ldi	r18, 0x00	; 0
    2732:	30 e0       	ldi	r19, 0x00	; 0
    2734:	45 ea       	ldi	r20, 0xA5	; 165
    2736:	52 ec       	ldi	r21, 0xC2	; 194
    2738:	c7 01       	movw	r24, r14
    273a:	b6 01       	movw	r22, r12
    273c:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2740:	18 16       	cp	r1, r24
    2742:	54 f4       	brge	.+20     	; 0x2758 <getTimeZone(double)+0x120>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:23 (discriminator 1)
    2744:	20 e0       	ldi	r18, 0x00	; 0
    2746:	30 e0       	ldi	r19, 0x00	; 0
    2748:	47 e8       	ldi	r20, 0x87	; 135
    274a:	52 ec       	ldi	r21, 0xC2	; 194
    274c:	c7 01       	movw	r24, r14
    274e:	b6 01       	movw	r22, r12
    2750:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    2754:	87 fd       	sbrc	r24, 7
    2756:	6e c1       	rjmp	.+732    	; 0x2a34 <getTimeZone(double)+0x3fc>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:26
    return -5;
  /* GMT -4 */
  if ((longitude > -67.5) && (longitude < -52.5))
    2758:	20 e0       	ldi	r18, 0x00	; 0
    275a:	30 e0       	ldi	r19, 0x00	; 0
    275c:	47 e8       	ldi	r20, 0x87	; 135
    275e:	52 ec       	ldi	r21, 0xC2	; 194
    2760:	c7 01       	movw	r24, r14
    2762:	b6 01       	movw	r22, r12
    2764:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2768:	18 16       	cp	r1, r24
    276a:	54 f4       	brge	.+20     	; 0x2780 <getTimeZone(double)+0x148>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:26 (discriminator 1)
    276c:	20 e0       	ldi	r18, 0x00	; 0
    276e:	30 e0       	ldi	r19, 0x00	; 0
    2770:	42 e5       	ldi	r20, 0x52	; 82
    2772:	52 ec       	ldi	r21, 0xC2	; 194
    2774:	c7 01       	movw	r24, r14
    2776:	b6 01       	movw	r22, r12
    2778:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    277c:	87 fd       	sbrc	r24, 7
    277e:	5d c1       	rjmp	.+698    	; 0x2a3a <getTimeZone(double)+0x402>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:29
    return -4;
  /* GMT -3 */
  if ((longitude > -52.5) && (longitude < -37.5))
    2780:	20 e0       	ldi	r18, 0x00	; 0
    2782:	30 e0       	ldi	r19, 0x00	; 0
    2784:	42 e5       	ldi	r20, 0x52	; 82
    2786:	52 ec       	ldi	r21, 0xC2	; 194
    2788:	c7 01       	movw	r24, r14
    278a:	b6 01       	movw	r22, r12
    278c:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2790:	18 16       	cp	r1, r24
    2792:	54 f4       	brge	.+20     	; 0x27a8 <getTimeZone(double)+0x170>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:29 (discriminator 1)
    2794:	20 e0       	ldi	r18, 0x00	; 0
    2796:	30 e0       	ldi	r19, 0x00	; 0
    2798:	46 e1       	ldi	r20, 0x16	; 22
    279a:	52 ec       	ldi	r21, 0xC2	; 194
    279c:	c7 01       	movw	r24, r14
    279e:	b6 01       	movw	r22, r12
    27a0:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    27a4:	87 fd       	sbrc	r24, 7
    27a6:	4c c1       	rjmp	.+664    	; 0x2a40 <getTimeZone(double)+0x408>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:32
    return -3;
  /* GMT -2 */
  if ((longitude > -37.5) && (longitude < -22.5))
    27a8:	20 e0       	ldi	r18, 0x00	; 0
    27aa:	30 e0       	ldi	r19, 0x00	; 0
    27ac:	46 e1       	ldi	r20, 0x16	; 22
    27ae:	52 ec       	ldi	r21, 0xC2	; 194
    27b0:	c7 01       	movw	r24, r14
    27b2:	b6 01       	movw	r22, r12
    27b4:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    27b8:	18 16       	cp	r1, r24
    27ba:	54 f4       	brge	.+20     	; 0x27d0 <getTimeZone(double)+0x198>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:32 (discriminator 1)
    27bc:	20 e0       	ldi	r18, 0x00	; 0
    27be:	30 e0       	ldi	r19, 0x00	; 0
    27c0:	44 eb       	ldi	r20, 0xB4	; 180
    27c2:	51 ec       	ldi	r21, 0xC1	; 193
    27c4:	c7 01       	movw	r24, r14
    27c6:	b6 01       	movw	r22, r12
    27c8:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    27cc:	87 fd       	sbrc	r24, 7
    27ce:	3b c1       	rjmp	.+630    	; 0x2a46 <getTimeZone(double)+0x40e>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:35
    return -2;
  /* GMT -1 */
  if ((longitude > -22.5) && (longitude < -7.5))
    27d0:	20 e0       	ldi	r18, 0x00	; 0
    27d2:	30 e0       	ldi	r19, 0x00	; 0
    27d4:	44 eb       	ldi	r20, 0xB4	; 180
    27d6:	51 ec       	ldi	r21, 0xC1	; 193
    27d8:	c7 01       	movw	r24, r14
    27da:	b6 01       	movw	r22, r12
    27dc:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    27e0:	18 16       	cp	r1, r24
    27e2:	54 f4       	brge	.+20     	; 0x27f8 <getTimeZone(double)+0x1c0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:35 (discriminator 1)
    27e4:	20 e0       	ldi	r18, 0x00	; 0
    27e6:	30 e0       	ldi	r19, 0x00	; 0
    27e8:	40 ef       	ldi	r20, 0xF0	; 240
    27ea:	50 ec       	ldi	r21, 0xC0	; 192
    27ec:	c7 01       	movw	r24, r14
    27ee:	b6 01       	movw	r22, r12
    27f0:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    27f4:	87 fd       	sbrc	r24, 7
    27f6:	2a c1       	rjmp	.+596    	; 0x2a4c <getTimeZone(double)+0x414>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:38
    return -1;
  /* GMT 0 */
  if ((longitude > -7.5) && (longitude < 7.5))
    27f8:	20 e0       	ldi	r18, 0x00	; 0
    27fa:	30 e0       	ldi	r19, 0x00	; 0
    27fc:	40 ef       	ldi	r20, 0xF0	; 240
    27fe:	50 ec       	ldi	r21, 0xC0	; 192
    2800:	c7 01       	movw	r24, r14
    2802:	b6 01       	movw	r22, r12
    2804:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2808:	18 16       	cp	r1, r24
    280a:	54 f4       	brge	.+20     	; 0x2820 <getTimeZone(double)+0x1e8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:38 (discriminator 1)
    280c:	20 e0       	ldi	r18, 0x00	; 0
    280e:	30 e0       	ldi	r19, 0x00	; 0
    2810:	40 ef       	ldi	r20, 0xF0	; 240
    2812:	50 e4       	ldi	r21, 0x40	; 64
    2814:	c7 01       	movw	r24, r14
    2816:	b6 01       	movw	r22, r12
    2818:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    281c:	87 fd       	sbrc	r24, 7
    281e:	3a c1       	rjmp	.+628    	; 0x2a94 <getTimeZone(double)+0x45c>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:41
    return 0;
  /* GMT +1 */
  if ((longitude > 7.5) && (longitude < 22.5))
    2820:	20 e0       	ldi	r18, 0x00	; 0
    2822:	30 e0       	ldi	r19, 0x00	; 0
    2824:	40 ef       	ldi	r20, 0xF0	; 240
    2826:	50 e4       	ldi	r21, 0x40	; 64
    2828:	c7 01       	movw	r24, r14
    282a:	b6 01       	movw	r22, r12
    282c:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2830:	18 16       	cp	r1, r24
    2832:	54 f4       	brge	.+20     	; 0x2848 <getTimeZone(double)+0x210>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:41 (discriminator 1)
    2834:	20 e0       	ldi	r18, 0x00	; 0
    2836:	30 e0       	ldi	r19, 0x00	; 0
    2838:	44 eb       	ldi	r20, 0xB4	; 180
    283a:	51 e4       	ldi	r21, 0x41	; 65
    283c:	c7 01       	movw	r24, r14
    283e:	b6 01       	movw	r22, r12
    2840:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    2844:	87 fd       	sbrc	r24, 7
    2846:	05 c1       	rjmp	.+522    	; 0x2a52 <getTimeZone(double)+0x41a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:44
    return 1;
  /* GMT +2 */
  if ((longitude > 22.5) && (longitude < 37.5))
    2848:	20 e0       	ldi	r18, 0x00	; 0
    284a:	30 e0       	ldi	r19, 0x00	; 0
    284c:	44 eb       	ldi	r20, 0xB4	; 180
    284e:	51 e4       	ldi	r21, 0x41	; 65
    2850:	c7 01       	movw	r24, r14
    2852:	b6 01       	movw	r22, r12
    2854:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2858:	18 16       	cp	r1, r24
    285a:	54 f4       	brge	.+20     	; 0x2870 <getTimeZone(double)+0x238>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:44 (discriminator 1)
    285c:	20 e0       	ldi	r18, 0x00	; 0
    285e:	30 e0       	ldi	r19, 0x00	; 0
    2860:	46 e1       	ldi	r20, 0x16	; 22
    2862:	52 e4       	ldi	r21, 0x42	; 66
    2864:	c7 01       	movw	r24, r14
    2866:	b6 01       	movw	r22, r12
    2868:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    286c:	87 fd       	sbrc	r24, 7
    286e:	f4 c0       	rjmp	.+488    	; 0x2a58 <getTimeZone(double)+0x420>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:47
    return 2;
  /* GMT +3 */
  if ((longitude > 37.5) && (longitude < 52.5))
    2870:	20 e0       	ldi	r18, 0x00	; 0
    2872:	30 e0       	ldi	r19, 0x00	; 0
    2874:	46 e1       	ldi	r20, 0x16	; 22
    2876:	52 e4       	ldi	r21, 0x42	; 66
    2878:	c7 01       	movw	r24, r14
    287a:	b6 01       	movw	r22, r12
    287c:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2880:	18 16       	cp	r1, r24
    2882:	54 f4       	brge	.+20     	; 0x2898 <getTimeZone(double)+0x260>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:47 (discriminator 1)
    2884:	20 e0       	ldi	r18, 0x00	; 0
    2886:	30 e0       	ldi	r19, 0x00	; 0
    2888:	42 e5       	ldi	r20, 0x52	; 82
    288a:	52 e4       	ldi	r21, 0x42	; 66
    288c:	c7 01       	movw	r24, r14
    288e:	b6 01       	movw	r22, r12
    2890:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    2894:	87 fd       	sbrc	r24, 7
    2896:	e3 c0       	rjmp	.+454    	; 0x2a5e <getTimeZone(double)+0x426>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:50
    return 3;
  /* GMT +4 */
  if ((longitude > 52.5) && (longitude < 67.5))
    2898:	20 e0       	ldi	r18, 0x00	; 0
    289a:	30 e0       	ldi	r19, 0x00	; 0
    289c:	42 e5       	ldi	r20, 0x52	; 82
    289e:	52 e4       	ldi	r21, 0x42	; 66
    28a0:	c7 01       	movw	r24, r14
    28a2:	b6 01       	movw	r22, r12
    28a4:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    28a8:	18 16       	cp	r1, r24
    28aa:	54 f4       	brge	.+20     	; 0x28c0 <getTimeZone(double)+0x288>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:50 (discriminator 1)
    28ac:	20 e0       	ldi	r18, 0x00	; 0
    28ae:	30 e0       	ldi	r19, 0x00	; 0
    28b0:	47 e8       	ldi	r20, 0x87	; 135
    28b2:	52 e4       	ldi	r21, 0x42	; 66
    28b4:	c7 01       	movw	r24, r14
    28b6:	b6 01       	movw	r22, r12
    28b8:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    28bc:	87 fd       	sbrc	r24, 7
    28be:	d2 c0       	rjmp	.+420    	; 0x2a64 <getTimeZone(double)+0x42c>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:53
    return 4;
  /* GMT +5 */
  if ((longitude > 67.5) && (longitude < 82.5))
    28c0:	20 e0       	ldi	r18, 0x00	; 0
    28c2:	30 e0       	ldi	r19, 0x00	; 0
    28c4:	47 e8       	ldi	r20, 0x87	; 135
    28c6:	52 e4       	ldi	r21, 0x42	; 66
    28c8:	c7 01       	movw	r24, r14
    28ca:	b6 01       	movw	r22, r12
    28cc:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    28d0:	18 16       	cp	r1, r24
    28d2:	54 f4       	brge	.+20     	; 0x28e8 <getTimeZone(double)+0x2b0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:53 (discriminator 1)
    28d4:	20 e0       	ldi	r18, 0x00	; 0
    28d6:	30 e0       	ldi	r19, 0x00	; 0
    28d8:	45 ea       	ldi	r20, 0xA5	; 165
    28da:	52 e4       	ldi	r21, 0x42	; 66
    28dc:	c7 01       	movw	r24, r14
    28de:	b6 01       	movw	r22, r12
    28e0:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    28e4:	87 fd       	sbrc	r24, 7
    28e6:	c1 c0       	rjmp	.+386    	; 0x2a6a <getTimeZone(double)+0x432>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:56
    return 5;
  /* GMT +6 */
  if ((longitude > 82.5) && (longitude < 97.5))
    28e8:	20 e0       	ldi	r18, 0x00	; 0
    28ea:	30 e0       	ldi	r19, 0x00	; 0
    28ec:	45 ea       	ldi	r20, 0xA5	; 165
    28ee:	52 e4       	ldi	r21, 0x42	; 66
    28f0:	c7 01       	movw	r24, r14
    28f2:	b6 01       	movw	r22, r12
    28f4:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    28f8:	18 16       	cp	r1, r24
    28fa:	54 f4       	brge	.+20     	; 0x2910 <getTimeZone(double)+0x2d8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:56 (discriminator 1)
    28fc:	20 e0       	ldi	r18, 0x00	; 0
    28fe:	30 e0       	ldi	r19, 0x00	; 0
    2900:	43 ec       	ldi	r20, 0xC3	; 195
    2902:	52 e4       	ldi	r21, 0x42	; 66
    2904:	c7 01       	movw	r24, r14
    2906:	b6 01       	movw	r22, r12
    2908:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    290c:	87 fd       	sbrc	r24, 7
    290e:	b0 c0       	rjmp	.+352    	; 0x2a70 <getTimeZone(double)+0x438>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:59
    return 6;
  /* GMT +7 */
  if ((longitude > 97.5) && (longitude < 112.5))
    2910:	20 e0       	ldi	r18, 0x00	; 0
    2912:	30 e0       	ldi	r19, 0x00	; 0
    2914:	43 ec       	ldi	r20, 0xC3	; 195
    2916:	52 e4       	ldi	r21, 0x42	; 66
    2918:	c7 01       	movw	r24, r14
    291a:	b6 01       	movw	r22, r12
    291c:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2920:	18 16       	cp	r1, r24
    2922:	54 f4       	brge	.+20     	; 0x2938 <getTimeZone(double)+0x300>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:59 (discriminator 1)
    2924:	20 e0       	ldi	r18, 0x00	; 0
    2926:	30 e0       	ldi	r19, 0x00	; 0
    2928:	41 ee       	ldi	r20, 0xE1	; 225
    292a:	52 e4       	ldi	r21, 0x42	; 66
    292c:	c7 01       	movw	r24, r14
    292e:	b6 01       	movw	r22, r12
    2930:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    2934:	87 fd       	sbrc	r24, 7
    2936:	9f c0       	rjmp	.+318    	; 0x2a76 <getTimeZone(double)+0x43e>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:62
    return 7;
  /* GMT +8 */
  if ((longitude > 112.5) && (longitude < 127.5))
    2938:	20 e0       	ldi	r18, 0x00	; 0
    293a:	30 e0       	ldi	r19, 0x00	; 0
    293c:	41 ee       	ldi	r20, 0xE1	; 225
    293e:	52 e4       	ldi	r21, 0x42	; 66
    2940:	c7 01       	movw	r24, r14
    2942:	b6 01       	movw	r22, r12
    2944:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2948:	18 16       	cp	r1, r24
    294a:	54 f4       	brge	.+20     	; 0x2960 <getTimeZone(double)+0x328>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:62 (discriminator 1)
    294c:	20 e0       	ldi	r18, 0x00	; 0
    294e:	30 e0       	ldi	r19, 0x00	; 0
    2950:	4f ef       	ldi	r20, 0xFF	; 255
    2952:	52 e4       	ldi	r21, 0x42	; 66
    2954:	c7 01       	movw	r24, r14
    2956:	b6 01       	movw	r22, r12
    2958:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    295c:	87 fd       	sbrc	r24, 7
    295e:	8e c0       	rjmp	.+284    	; 0x2a7c <getTimeZone(double)+0x444>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:65
    return 8;
  /* GMT +9 */
  if ((longitude > 127.5) && (longitude < 142.5))
    2960:	20 e0       	ldi	r18, 0x00	; 0
    2962:	30 e0       	ldi	r19, 0x00	; 0
    2964:	4f ef       	ldi	r20, 0xFF	; 255
    2966:	52 e4       	ldi	r21, 0x42	; 66
    2968:	c7 01       	movw	r24, r14
    296a:	b6 01       	movw	r22, r12
    296c:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2970:	18 16       	cp	r1, r24
    2972:	54 f4       	brge	.+20     	; 0x2988 <getTimeZone(double)+0x350>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:65 (discriminator 1)
    2974:	20 e0       	ldi	r18, 0x00	; 0
    2976:	30 e8       	ldi	r19, 0x80	; 128
    2978:	4e e0       	ldi	r20, 0x0E	; 14
    297a:	53 e4       	ldi	r21, 0x43	; 67
    297c:	c7 01       	movw	r24, r14
    297e:	b6 01       	movw	r22, r12
    2980:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    2984:	87 fd       	sbrc	r24, 7
    2986:	7d c0       	rjmp	.+250    	; 0x2a82 <getTimeZone(double)+0x44a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:68
    return 9;
  /* GMT +10 */
  if ((longitude > 142.5) && (longitude < 157.5))
    2988:	20 e0       	ldi	r18, 0x00	; 0
    298a:	30 e8       	ldi	r19, 0x80	; 128
    298c:	4e e0       	ldi	r20, 0x0E	; 14
    298e:	53 e4       	ldi	r21, 0x43	; 67
    2990:	c7 01       	movw	r24, r14
    2992:	b6 01       	movw	r22, r12
    2994:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    2998:	18 16       	cp	r1, r24
    299a:	54 f4       	brge	.+20     	; 0x29b0 <getTimeZone(double)+0x378>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:68 (discriminator 1)
    299c:	20 e0       	ldi	r18, 0x00	; 0
    299e:	30 e8       	ldi	r19, 0x80	; 128
    29a0:	4d e1       	ldi	r20, 0x1D	; 29
    29a2:	53 e4       	ldi	r21, 0x43	; 67
    29a4:	c7 01       	movw	r24, r14
    29a6:	b6 01       	movw	r22, r12
    29a8:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    29ac:	87 fd       	sbrc	r24, 7
    29ae:	6c c0       	rjmp	.+216    	; 0x2a88 <getTimeZone(double)+0x450>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:71
    return 10;
  /* GMT +11 */
  if ((longitude > 157.5) && (longitude < 172.5))
    29b0:	20 e0       	ldi	r18, 0x00	; 0
    29b2:	30 e8       	ldi	r19, 0x80	; 128
    29b4:	4d e1       	ldi	r20, 0x1D	; 29
    29b6:	53 e4       	ldi	r21, 0x43	; 67
    29b8:	c7 01       	movw	r24, r14
    29ba:	b6 01       	movw	r22, r12
    29bc:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    29c0:	18 16       	cp	r1, r24
    29c2:	54 f4       	brge	.+20     	; 0x29d8 <getTimeZone(double)+0x3a0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:71 (discriminator 1)
    29c4:	20 e0       	ldi	r18, 0x00	; 0
    29c6:	30 e8       	ldi	r19, 0x80	; 128
    29c8:	4c e2       	ldi	r20, 0x2C	; 44
    29ca:	53 e4       	ldi	r21, 0x43	; 67
    29cc:	c7 01       	movw	r24, r14
    29ce:	b6 01       	movw	r22, r12
    29d0:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    29d4:	87 fd       	sbrc	r24, 7
    29d6:	5b c0       	rjmp	.+182    	; 0x2a8e <getTimeZone(double)+0x456>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:74
    return 11;
  /* GMT +12 */
  if ((longitude > 172.5) && (longitude < 187.5))
    29d8:	20 e0       	ldi	r18, 0x00	; 0
    29da:	30 e8       	ldi	r19, 0x80	; 128
    29dc:	4c e2       	ldi	r20, 0x2C	; 44
    29de:	53 e4       	ldi	r21, 0x43	; 67
    29e0:	c7 01       	movw	r24, r14
    29e2:	b6 01       	movw	r22, r12
    29e4:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    29e8:	18 16       	cp	r1, r24
    29ea:	0c f0       	brlt	.+2      	; 0x29ee <getTimeZone(double)+0x3b6>
    29ec:	53 c0       	rjmp	.+166    	; 0x2a94 <getTimeZone(double)+0x45c>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:74 (discriminator 1)
    29ee:	20 e0       	ldi	r18, 0x00	; 0
    29f0:	30 e8       	ldi	r19, 0x80	; 128
    29f2:	4b e3       	ldi	r20, 0x3B	; 59
    29f4:	53 e4       	ldi	r21, 0x43	; 67
    29f6:	c7 01       	movw	r24, r14
    29f8:	b6 01       	movw	r22, r12
    29fa:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    29fe:	87 ff       	sbrs	r24, 7
    2a00:	49 c0       	rjmp	.+146    	; 0x2a94 <getTimeZone(double)+0x45c>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:75
    return 12;
    2a02:	8c e0       	ldi	r24, 0x0C	; 12
    2a04:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:78

  return 0; /* Case Nothing */
}
    2a06:	ff 90       	pop	r15
    2a08:	ef 90       	pop	r14
    2a0a:	df 90       	pop	r13
    2a0c:	cf 90       	pop	r12
    2a0e:	08 95       	ret
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:6
int getTimeZone(double longitude) {
  /* 360deg = 24h --> 1h = 15deg */

  /* GMT -11 */
  if ((longitude > -172.5) && (longitude < -157.5))
    return -11;
    2a10:	85 ef       	ldi	r24, 0xF5	; 245
    2a12:	9f ef       	ldi	r25, 0xFF	; 255
    2a14:	f8 cf       	rjmp	.-16     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:9
  /* GMT -10 */
  if ((longitude > -157.5) && (longitude < -142.5))
    return -10;
    2a16:	86 ef       	ldi	r24, 0xF6	; 246
    2a18:	9f ef       	ldi	r25, 0xFF	; 255
    2a1a:	f5 cf       	rjmp	.-22     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:12
  /* GMT -9 */
  if ((longitude > -142.5) && (longitude < -127.5))
    return -9;
    2a1c:	87 ef       	ldi	r24, 0xF7	; 247
    2a1e:	9f ef       	ldi	r25, 0xFF	; 255
    2a20:	f2 cf       	rjmp	.-28     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:15
  /* GMT -8 */
  if ((longitude > -127.5) && (longitude < -112.5))
    return -8;
    2a22:	88 ef       	ldi	r24, 0xF8	; 248
    2a24:	9f ef       	ldi	r25, 0xFF	; 255
    2a26:	ef cf       	rjmp	.-34     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:18
  /* GMT -7 */
  if ((longitude > -112.5) && (longitude < -97.5))
    return -7;
    2a28:	89 ef       	ldi	r24, 0xF9	; 249
    2a2a:	9f ef       	ldi	r25, 0xFF	; 255
    2a2c:	ec cf       	rjmp	.-40     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:21
  /* GMT -6 */
  if ((longitude > 97.5) && (longitude < -82.5))
    return -6;
    2a2e:	8a ef       	ldi	r24, 0xFA	; 250
    2a30:	9f ef       	ldi	r25, 0xFF	; 255
    2a32:	e9 cf       	rjmp	.-46     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:24
  /* GMT -5 */
  if ((longitude > -82.5) && (longitude < -67.5))
    return -5;
    2a34:	8b ef       	ldi	r24, 0xFB	; 251
    2a36:	9f ef       	ldi	r25, 0xFF	; 255
    2a38:	e6 cf       	rjmp	.-52     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:27
  /* GMT -4 */
  if ((longitude > -67.5) && (longitude < -52.5))
    return -4;
    2a3a:	8c ef       	ldi	r24, 0xFC	; 252
    2a3c:	9f ef       	ldi	r25, 0xFF	; 255
    2a3e:	e3 cf       	rjmp	.-58     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:30
  /* GMT -3 */
  if ((longitude > -52.5) && (longitude < -37.5))
    return -3;
    2a40:	8d ef       	ldi	r24, 0xFD	; 253
    2a42:	9f ef       	ldi	r25, 0xFF	; 255
    2a44:	e0 cf       	rjmp	.-64     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:33
  /* GMT -2 */
  if ((longitude > -37.5) && (longitude < -22.5))
    return -2;
    2a46:	8e ef       	ldi	r24, 0xFE	; 254
    2a48:	9f ef       	ldi	r25, 0xFF	; 255
    2a4a:	dd cf       	rjmp	.-70     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:36
  /* GMT -1 */
  if ((longitude > -22.5) && (longitude < -7.5))
    return -1;
    2a4c:	8f ef       	ldi	r24, 0xFF	; 255
    2a4e:	9f ef       	ldi	r25, 0xFF	; 255
    2a50:	da cf       	rjmp	.-76     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:42
  /* GMT 0 */
  if ((longitude > -7.5) && (longitude < 7.5))
    return 0;
  /* GMT +1 */
  if ((longitude > 7.5) && (longitude < 22.5))
    return 1;
    2a52:	81 e0       	ldi	r24, 0x01	; 1
    2a54:	90 e0       	ldi	r25, 0x00	; 0
    2a56:	d7 cf       	rjmp	.-82     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:45
  /* GMT +2 */
  if ((longitude > 22.5) && (longitude < 37.5))
    return 2;
    2a58:	82 e0       	ldi	r24, 0x02	; 2
    2a5a:	90 e0       	ldi	r25, 0x00	; 0
    2a5c:	d4 cf       	rjmp	.-88     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:48
  /* GMT +3 */
  if ((longitude > 37.5) && (longitude < 52.5))
    return 3;
    2a5e:	83 e0       	ldi	r24, 0x03	; 3
    2a60:	90 e0       	ldi	r25, 0x00	; 0
    2a62:	d1 cf       	rjmp	.-94     	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:51
  /* GMT +4 */
  if ((longitude > 52.5) && (longitude < 67.5))
    return 4;
    2a64:	84 e0       	ldi	r24, 0x04	; 4
    2a66:	90 e0       	ldi	r25, 0x00	; 0
    2a68:	ce cf       	rjmp	.-100    	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:54
  /* GMT +5 */
  if ((longitude > 67.5) && (longitude < 82.5))
    return 5;
    2a6a:	85 e0       	ldi	r24, 0x05	; 5
    2a6c:	90 e0       	ldi	r25, 0x00	; 0
    2a6e:	cb cf       	rjmp	.-106    	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:57
  /* GMT +6 */
  if ((longitude > 82.5) && (longitude < 97.5))
    return 6;
    2a70:	86 e0       	ldi	r24, 0x06	; 6
    2a72:	90 e0       	ldi	r25, 0x00	; 0
    2a74:	c8 cf       	rjmp	.-112    	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:60
  /* GMT +7 */
  if ((longitude > 97.5) && (longitude < 112.5))
    return 7;
    2a76:	87 e0       	ldi	r24, 0x07	; 7
    2a78:	90 e0       	ldi	r25, 0x00	; 0
    2a7a:	c5 cf       	rjmp	.-118    	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:63
  /* GMT +8 */
  if ((longitude > 112.5) && (longitude < 127.5))
    return 8;
    2a7c:	88 e0       	ldi	r24, 0x08	; 8
    2a7e:	90 e0       	ldi	r25, 0x00	; 0
    2a80:	c2 cf       	rjmp	.-124    	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:66
  /* GMT +9 */
  if ((longitude > 127.5) && (longitude < 142.5))
    return 9;
    2a82:	89 e0       	ldi	r24, 0x09	; 9
    2a84:	90 e0       	ldi	r25, 0x00	; 0
    2a86:	bf cf       	rjmp	.-130    	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:69
  /* GMT +10 */
  if ((longitude > 142.5) && (longitude < 157.5))
    return 10;
    2a88:	8a e0       	ldi	r24, 0x0A	; 10
    2a8a:	90 e0       	ldi	r25, 0x00	; 0
    2a8c:	bc cf       	rjmp	.-136    	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:72
  /* GMT +11 */
  if ((longitude > 157.5) && (longitude < 172.5))
    return 11;
    2a8e:	8b e0       	ldi	r24, 0x0B	; 11
    2a90:	90 e0       	ldi	r25, 0x00	; 0
    2a92:	b9 cf       	rjmp	.-142    	; 0x2a06 <getTimeZone(double)+0x3ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/GMTTimeZone.ino:77
  /* GMT +12 */
  if ((longitude > 172.5) && (longitude < 187.5))
    return 12;

  return 0; /* Case Nothing */
    2a94:	90 e0       	ldi	r25, 0x00	; 0
    2a96:	80 e0       	ldi	r24, 0x00	; 0
    2a98:	b6 cf       	rjmp	.-148    	; 0x2a06 <getTimeZone(double)+0x3ce>

00002a9a <dataSensIndicator()>:
_Z17dataSensIndicatorv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:2
void dataSensIndicator(void){
        digitalWrite(USR_LED_0, LOW);
    2a9a:	60 e0       	ldi	r22, 0x00	; 0
    2a9c:	85 e1       	ldi	r24, 0x15	; 21
    2a9e:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:3
        delay(10);
    2aa2:	6a e0       	ldi	r22, 0x0A	; 10
    2aa4:	70 e0       	ldi	r23, 0x00	; 0
    2aa6:	80 e0       	ldi	r24, 0x00	; 0
    2aa8:	90 e0       	ldi	r25, 0x00	; 0
    2aaa:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:4
        digitalWrite(USR_LED_0, HIGH);
    2aae:	61 e0       	ldi	r22, 0x01	; 1
    2ab0:	85 e1       	ldi	r24, 0x15	; 21
    2ab2:	0c 94 67 6b 	jmp	0xd6ce	; 0xd6ce <digitalWrite>

00002ab6 <saveLocationToEEPROM()>:
_Z20saveLocationToEEPROMv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:18
                menu.newTabFlag = false;
        }
        logic.lastState = true;
}

void saveLocationToEEPROM(void) {
    2ab6:	8f 92       	push	r8
    2ab8:	9f 92       	push	r9
    2aba:	af 92       	push	r10
    2abc:	bf 92       	push	r11
    2abe:	cf 92       	push	r12
    2ac0:	df 92       	push	r13
    2ac2:	ef 92       	push	r14
    2ac4:	ff 92       	push	r15
    2ac6:	cf 93       	push	r28
    2ac8:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:20
        /* Check if Latitude is negative eg.-45.3251 (EEPROM doesn't support negative value) */
        if (gps_var.start_latitude < 0)
    2aca:	20 e0       	ldi	r18, 0x00	; 0
    2acc:	30 e0       	ldi	r19, 0x00	; 0
    2ace:	a9 01       	movw	r20, r18
    2ad0:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <gps_var+0x6>
    2ad4:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <gps_var+0x7>
    2ad8:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <gps_var+0x8>
    2adc:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <gps_var+0x9>
    2ae0:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:21
                EEPROM.write(4, 1); // Address 4 store sign bit (1 Neg, 0 Pos)
    2ae4:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:20
        logic.lastState = true;
}

void saveLocationToEEPROM(void) {
        /* Check if Latitude is negative eg.-45.3251 (EEPROM doesn't support negative value) */
        if (gps_var.start_latitude < 0)
    2ae6:	87 ff       	sbrs	r24, 7
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:23
                EEPROM.write(4, 1); // Address 4 store sign bit (1 Neg, 0 Pos)
        else
                EEPROM.write(4, 0);
    2ae8:	60 e0       	ldi	r22, 0x00	; 0
    2aea:	84 e0       	ldi	r24, 0x04	; 4
    2aec:	90 e0       	ldi	r25, 0x00	; 0
    2aee:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:24
        delay(10);        // Give EEPROM 10ms to write data
    2af2:	6a e0       	ldi	r22, 0x0A	; 10
    2af4:	70 e0       	ldi	r23, 0x00	; 0
    2af6:	80 e0       	ldi	r24, 0x00	; 0
    2af8:	90 e0       	ldi	r25, 0x00	; 0
    2afa:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:27

        /* Convert Laititude float to int and store in EEPROM */
        eeprom.lat_bias = int(abs(gps_var.start_latitude));
    2afe:	c0 90 24 01 	lds	r12, 0x0124	; 0x800124 <gps_var+0x6>
    2b02:	d0 90 25 01 	lds	r13, 0x0125	; 0x800125 <gps_var+0x7>
    2b06:	e0 90 26 01 	lds	r14, 0x0126	; 0x800126 <gps_var+0x8>
    2b0a:	f0 90 27 01 	lds	r15, 0x0127	; 0x800127 <gps_var+0x9>
    2b0e:	c7 01       	movw	r24, r14
    2b10:	b6 01       	movw	r22, r12
    2b12:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    2b16:	eb 01       	movw	r28, r22
    2b18:	77 ff       	sbrs	r23, 7
    2b1a:	04 c0       	rjmp	.+8      	; 0x2b24 <saveLocationToEEPROM()+0x6e>
    2b1c:	cc 27       	eor	r28, r28
    2b1e:	dd 27       	eor	r29, r29
    2b20:	c6 1b       	sub	r28, r22
    2b22:	d7 0b       	sbc	r29, r23
    2b24:	be 01       	movw	r22, r28
    2b26:	dd 0f       	add	r29, r29
    2b28:	88 0b       	sbc	r24, r24
    2b2a:	99 0b       	sbc	r25, r25
    2b2c:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    2b30:	9b 01       	movw	r18, r22
    2b32:	ac 01       	movw	r20, r24
    2b34:	20 93 7b 09 	sts	0x097B, r18	; 0x80097b <eeprom+0x8>
    2b38:	30 93 7c 09 	sts	0x097C, r19	; 0x80097c <eeprom+0x9>
    2b3c:	40 93 7d 09 	sts	0x097D, r20	; 0x80097d <eeprom+0xa>
    2b40:	50 93 7e 09 	sts	0x097E, r21	; 0x80097e <eeprom+0xb>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:28
        eeprom.lat_fract[0] = gps_var.start_latitude - eeprom.lat_bias;
    2b44:	c7 01       	movw	r24, r14
    2b46:	b6 01       	movw	r22, r12
    2b48:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    2b4c:	6b 01       	movw	r12, r22
    2b4e:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:29
        eeprom.lat_fract[1] =  eeprom.lat_fract[0] - int(eeprom.lat_fract[0] * 1e2) * 1e-2;
    2b50:	20 e0       	ldi	r18, 0x00	; 0
    2b52:	30 e0       	ldi	r19, 0x00	; 0
    2b54:	48 ec       	ldi	r20, 0xC8	; 200
    2b56:	52 e4       	ldi	r21, 0x42	; 66
    2b58:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2b5c:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    2b60:	07 2e       	mov	r0, r23
    2b62:	00 0c       	add	r0, r0
    2b64:	88 0b       	sbc	r24, r24
    2b66:	99 0b       	sbc	r25, r25
    2b68:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    2b6c:	4b 01       	movw	r8, r22
    2b6e:	5c 01       	movw	r10, r24
    2b70:	2a e0       	ldi	r18, 0x0A	; 10
    2b72:	37 ed       	ldi	r19, 0xD7	; 215
    2b74:	43 e2       	ldi	r20, 0x23	; 35
    2b76:	5c e3       	ldi	r21, 0x3C	; 60
    2b78:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2b7c:	9b 01       	movw	r18, r22
    2b7e:	ac 01       	movw	r20, r24
    2b80:	c7 01       	movw	r24, r14
    2b82:	b6 01       	movw	r22, r12
    2b84:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    2b88:	6b 01       	movw	r12, r22
    2b8a:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:30
        eeprom.lat_fract[2] =  eeprom.lat_fract[1] - int(eeprom.lat_fract[1] * 1e4) * 1e-4;
    2b8c:	20 e0       	ldi	r18, 0x00	; 0
    2b8e:	30 e4       	ldi	r19, 0x40	; 64
    2b90:	4c e1       	ldi	r20, 0x1C	; 28
    2b92:	56 e4       	ldi	r21, 0x46	; 70
    2b94:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2b98:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    2b9c:	07 2e       	mov	r0, r23
    2b9e:	00 0c       	add	r0, r0
    2ba0:	88 0b       	sbc	r24, r24
    2ba2:	99 0b       	sbc	r25, r25
    2ba4:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:33

        /* Convert Floating Point to Int */
        eeprom.lat_fract[0] = int(eeprom.lat_fract[0] * 1e2);
    2ba8:	80 92 7f 09 	sts	0x097F, r8	; 0x80097f <eeprom+0xc>
    2bac:	90 92 80 09 	sts	0x0980, r9	; 0x800980 <eeprom+0xd>
    2bb0:	a0 92 81 09 	sts	0x0981, r10	; 0x800981 <eeprom+0xe>
    2bb4:	b0 92 82 09 	sts	0x0982, r11	; 0x800982 <eeprom+0xf>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:34
        eeprom.lat_fract[1] = int(eeprom.lat_fract[1] * 1e4);
    2bb8:	60 93 83 09 	sts	0x0983, r22	; 0x800983 <eeprom+0x10>
    2bbc:	70 93 84 09 	sts	0x0984, r23	; 0x800984 <eeprom+0x11>
    2bc0:	80 93 85 09 	sts	0x0985, r24	; 0x800985 <eeprom+0x12>
    2bc4:	90 93 86 09 	sts	0x0986, r25	; 0x800986 <eeprom+0x13>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:30

        /* Convert Laititude float to int and store in EEPROM */
        eeprom.lat_bias = int(abs(gps_var.start_latitude));
        eeprom.lat_fract[0] = gps_var.start_latitude - eeprom.lat_bias;
        eeprom.lat_fract[1] =  eeprom.lat_fract[0] - int(eeprom.lat_fract[0] * 1e2) * 1e-2;
        eeprom.lat_fract[2] =  eeprom.lat_fract[1] - int(eeprom.lat_fract[1] * 1e4) * 1e-4;
    2bc8:	27 e1       	ldi	r18, 0x17	; 23
    2bca:	37 eb       	ldi	r19, 0xB7	; 183
    2bcc:	41 ed       	ldi	r20, 0xD1	; 209
    2bce:	58 e3       	ldi	r21, 0x38	; 56
    2bd0:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2bd4:	9b 01       	movw	r18, r22
    2bd6:	ac 01       	movw	r20, r24
    2bd8:	c7 01       	movw	r24, r14
    2bda:	b6 01       	movw	r22, r12
    2bdc:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:35

        /* Convert Floating Point to Int */
        eeprom.lat_fract[0] = int(eeprom.lat_fract[0] * 1e2);
        eeprom.lat_fract[1] = int(eeprom.lat_fract[1] * 1e4);
        eeprom.lat_fract[2] = int(eeprom.lat_fract[2] * 1e6);
    2be0:	20 e0       	ldi	r18, 0x00	; 0
    2be2:	34 e2       	ldi	r19, 0x24	; 36
    2be4:	44 e7       	ldi	r20, 0x74	; 116
    2be6:	59 e4       	ldi	r21, 0x49	; 73
    2be8:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2bec:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    2bf0:	07 2e       	mov	r0, r23
    2bf2:	00 0c       	add	r0, r0
    2bf4:	88 0b       	sbc	r24, r24
    2bf6:	99 0b       	sbc	r25, r25
    2bf8:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    2bfc:	60 93 87 09 	sts	0x0987, r22	; 0x800987 <eeprom+0x14>
    2c00:	70 93 88 09 	sts	0x0988, r23	; 0x800988 <eeprom+0x15>
    2c04:	80 93 89 09 	sts	0x0989, r24	; 0x800989 <eeprom+0x16>
    2c08:	90 93 8a 09 	sts	0x098A, r25	; 0x80098a <eeprom+0x17>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:38

        /* Save Latitude to EEPROM */
        eeprom.array_index = 0; // Reset Array Index
    2c0c:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <eeprom+0x3>
    2c10:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <eeprom+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:39
        EEPROM.write(0, eeprom.lat_bias);
    2c14:	6c 2f       	mov	r22, r28
    2c16:	90 e0       	ldi	r25, 0x00	; 0
    2c18:	80 e0       	ldi	r24, 0x00	; 0
    2c1a:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:40
        for (eeprom.index = 1; eeprom.index < 4; eeprom.index++) {
    2c1e:	81 e0       	ldi	r24, 0x01	; 1
    2c20:	90 e0       	ldi	r25, 0x00	; 0
    2c22:	90 93 74 09 	sts	0x0974, r25	; 0x800974 <eeprom+0x1>
    2c26:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <eeprom>
    2c2a:	c0 91 73 09 	lds	r28, 0x0973	; 0x800973 <eeprom>
    2c2e:	d0 91 74 09 	lds	r29, 0x0974	; 0x800974 <eeprom+0x1>
    2c32:	c4 30       	cpi	r28, 0x04	; 4
    2c34:	d1 05       	cpc	r29, r1
    2c36:	44 f5       	brge	.+80     	; 0x2c88 <saveLocationToEEPROM()+0x1d2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:41 (discriminator 2)
                EEPROM.write(eeprom.index, eeprom.lat_fract[eeprom.array_index]);
    2c38:	e0 91 75 09 	lds	r30, 0x0975	; 0x800975 <eeprom+0x2>
    2c3c:	f0 91 76 09 	lds	r31, 0x0976	; 0x800976 <eeprom+0x3>
    2c40:	ee 0f       	add	r30, r30
    2c42:	ff 1f       	adc	r31, r31
    2c44:	ee 0f       	add	r30, r30
    2c46:	ff 1f       	adc	r31, r31
    2c48:	e1 58       	subi	r30, 0x81	; 129
    2c4a:	f6 4f       	sbci	r31, 0xF6	; 246
    2c4c:	60 81       	ld	r22, Z
    2c4e:	71 81       	ldd	r23, Z+1	; 0x01
    2c50:	82 81       	ldd	r24, Z+2	; 0x02
    2c52:	93 81       	ldd	r25, Z+3	; 0x03
    2c54:	0e 94 a9 6f 	call	0xdf52	; 0xdf52 <__fixunssfsi>
    2c58:	ce 01       	movw	r24, r28
    2c5a:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:42 (discriminator 2)
                eeprom.array_index++;
    2c5e:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <eeprom+0x2>
    2c62:	90 91 76 09 	lds	r25, 0x0976	; 0x800976 <eeprom+0x3>
    2c66:	01 96       	adiw	r24, 0x01	; 1
    2c68:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <eeprom+0x3>
    2c6c:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <eeprom+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:43 (discriminator 2)
                delay(10);
    2c70:	6a e0       	ldi	r22, 0x0A	; 10
    2c72:	70 e0       	ldi	r23, 0x00	; 0
    2c74:	80 e0       	ldi	r24, 0x00	; 0
    2c76:	90 e0       	ldi	r25, 0x00	; 0
    2c78:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:40 (discriminator 2)
        eeprom.lat_fract[2] = int(eeprom.lat_fract[2] * 1e6);

        /* Save Latitude to EEPROM */
        eeprom.array_index = 0; // Reset Array Index
        EEPROM.write(0, eeprom.lat_bias);
        for (eeprom.index = 1; eeprom.index < 4; eeprom.index++) {
    2c7c:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <eeprom>
    2c80:	90 91 74 09 	lds	r25, 0x0974	; 0x800974 <eeprom+0x1>
    2c84:	01 96       	adiw	r24, 0x01	; 1
    2c86:	cd cf       	rjmp	.-102    	; 0x2c22 <saveLocationToEEPROM()+0x16c>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:47
                eeprom.array_index++;
                delay(10);
        }

        /* Check if Longitude is negative (EEPROM doesn't support negative value) */
        if (gps_var.start_longitude < 0)
    2c88:	20 e0       	ldi	r18, 0x00	; 0
    2c8a:	30 e0       	ldi	r19, 0x00	; 0
    2c8c:	a9 01       	movw	r20, r18
    2c8e:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <gps_var+0xa>
    2c92:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <gps_var+0xb>
    2c96:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <gps_var+0xc>
    2c9a:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <gps_var+0xd>
    2c9e:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:48
                EEPROM.write(9, 1); // Address 9 store sign bit (1 Neg, 0 Pos)
    2ca2:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:47
                eeprom.array_index++;
                delay(10);
        }

        /* Check if Longitude is negative (EEPROM doesn't support negative value) */
        if (gps_var.start_longitude < 0)
    2ca4:	87 ff       	sbrs	r24, 7
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:50
                EEPROM.write(9, 1); // Address 9 store sign bit (1 Neg, 0 Pos)
        else
                EEPROM.write(9, 0);
    2ca6:	60 e0       	ldi	r22, 0x00	; 0
    2ca8:	89 e0       	ldi	r24, 0x09	; 9
    2caa:	90 e0       	ldi	r25, 0x00	; 0
    2cac:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:51
        delay(10); /* Give EEPROM 10ms to write data */
    2cb0:	6a e0       	ldi	r22, 0x0A	; 10
    2cb2:	70 e0       	ldi	r23, 0x00	; 0
    2cb4:	80 e0       	ldi	r24, 0x00	; 0
    2cb6:	90 e0       	ldi	r25, 0x00	; 0
    2cb8:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:54

        /* Convert Longitude float to int and store in EEPROM */
        eeprom.lng_bias = int(abs(gps_var.start_longitude));
    2cbc:	c0 90 28 01 	lds	r12, 0x0128	; 0x800128 <gps_var+0xa>
    2cc0:	d0 90 29 01 	lds	r13, 0x0129	; 0x800129 <gps_var+0xb>
    2cc4:	e0 90 2a 01 	lds	r14, 0x012A	; 0x80012a <gps_var+0xc>
    2cc8:	f0 90 2b 01 	lds	r15, 0x012B	; 0x80012b <gps_var+0xd>
    2ccc:	c7 01       	movw	r24, r14
    2cce:	b6 01       	movw	r22, r12
    2cd0:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    2cd4:	eb 01       	movw	r28, r22
    2cd6:	77 ff       	sbrs	r23, 7
    2cd8:	04 c0       	rjmp	.+8      	; 0x2ce2 <saveLocationToEEPROM()+0x22c>
    2cda:	cc 27       	eor	r28, r28
    2cdc:	dd 27       	eor	r29, r29
    2cde:	c6 1b       	sub	r28, r22
    2ce0:	d7 0b       	sbc	r29, r23
    2ce2:	be 01       	movw	r22, r28
    2ce4:	dd 0f       	add	r29, r29
    2ce6:	88 0b       	sbc	r24, r24
    2ce8:	99 0b       	sbc	r25, r25
    2cea:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    2cee:	9b 01       	movw	r18, r22
    2cf0:	ac 01       	movw	r20, r24
    2cf2:	20 93 8f 09 	sts	0x098F, r18	; 0x80098f <eeprom+0x1c>
    2cf6:	30 93 90 09 	sts	0x0990, r19	; 0x800990 <eeprom+0x1d>
    2cfa:	40 93 91 09 	sts	0x0991, r20	; 0x800991 <eeprom+0x1e>
    2cfe:	50 93 92 09 	sts	0x0992, r21	; 0x800992 <eeprom+0x1f>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:55
        eeprom.lng_fract[0] = gps_var.start_longitude - eeprom.lng_bias;
    2d02:	c7 01       	movw	r24, r14
    2d04:	b6 01       	movw	r22, r12
    2d06:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    2d0a:	6b 01       	movw	r12, r22
    2d0c:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:56
        eeprom.lng_fract[1] =  eeprom.lng_fract[0] - int(eeprom.lng_fract[0] * 1e2) * 1e-2;
    2d0e:	20 e0       	ldi	r18, 0x00	; 0
    2d10:	30 e0       	ldi	r19, 0x00	; 0
    2d12:	48 ec       	ldi	r20, 0xC8	; 200
    2d14:	52 e4       	ldi	r21, 0x42	; 66
    2d16:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2d1a:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    2d1e:	07 2e       	mov	r0, r23
    2d20:	00 0c       	add	r0, r0
    2d22:	88 0b       	sbc	r24, r24
    2d24:	99 0b       	sbc	r25, r25
    2d26:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    2d2a:	4b 01       	movw	r8, r22
    2d2c:	5c 01       	movw	r10, r24
    2d2e:	2a e0       	ldi	r18, 0x0A	; 10
    2d30:	37 ed       	ldi	r19, 0xD7	; 215
    2d32:	43 e2       	ldi	r20, 0x23	; 35
    2d34:	5c e3       	ldi	r21, 0x3C	; 60
    2d36:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2d3a:	9b 01       	movw	r18, r22
    2d3c:	ac 01       	movw	r20, r24
    2d3e:	c7 01       	movw	r24, r14
    2d40:	b6 01       	movw	r22, r12
    2d42:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    2d46:	6b 01       	movw	r12, r22
    2d48:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:57
        eeprom.lng_fract[2] =  eeprom.lng_fract[1] - int(eeprom.lng_fract[1] * 1e4) * 1e-4;
    2d4a:	20 e0       	ldi	r18, 0x00	; 0
    2d4c:	30 e4       	ldi	r19, 0x40	; 64
    2d4e:	4c e1       	ldi	r20, 0x1C	; 28
    2d50:	56 e4       	ldi	r21, 0x46	; 70
    2d52:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2d56:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    2d5a:	07 2e       	mov	r0, r23
    2d5c:	00 0c       	add	r0, r0
    2d5e:	88 0b       	sbc	r24, r24
    2d60:	99 0b       	sbc	r25, r25
    2d62:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:60

        /* Convert Float to Int */
        eeprom.lng_fract[0] = int(eeprom.lng_fract[0] * 1e2);
    2d66:	80 92 93 09 	sts	0x0993, r8	; 0x800993 <eeprom+0x20>
    2d6a:	90 92 94 09 	sts	0x0994, r9	; 0x800994 <eeprom+0x21>
    2d6e:	a0 92 95 09 	sts	0x0995, r10	; 0x800995 <eeprom+0x22>
    2d72:	b0 92 96 09 	sts	0x0996, r11	; 0x800996 <eeprom+0x23>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:61
        eeprom.lng_fract[1] = int(eeprom.lng_fract[1] * 1e4);
    2d76:	60 93 97 09 	sts	0x0997, r22	; 0x800997 <eeprom+0x24>
    2d7a:	70 93 98 09 	sts	0x0998, r23	; 0x800998 <eeprom+0x25>
    2d7e:	80 93 99 09 	sts	0x0999, r24	; 0x800999 <eeprom+0x26>
    2d82:	90 93 9a 09 	sts	0x099A, r25	; 0x80099a <eeprom+0x27>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:57

        /* Convert Longitude float to int and store in EEPROM */
        eeprom.lng_bias = int(abs(gps_var.start_longitude));
        eeprom.lng_fract[0] = gps_var.start_longitude - eeprom.lng_bias;
        eeprom.lng_fract[1] =  eeprom.lng_fract[0] - int(eeprom.lng_fract[0] * 1e2) * 1e-2;
        eeprom.lng_fract[2] =  eeprom.lng_fract[1] - int(eeprom.lng_fract[1] * 1e4) * 1e-4;
    2d86:	27 e1       	ldi	r18, 0x17	; 23
    2d88:	37 eb       	ldi	r19, 0xB7	; 183
    2d8a:	41 ed       	ldi	r20, 0xD1	; 209
    2d8c:	58 e3       	ldi	r21, 0x38	; 56
    2d8e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2d92:	9b 01       	movw	r18, r22
    2d94:	ac 01       	movw	r20, r24
    2d96:	c7 01       	movw	r24, r14
    2d98:	b6 01       	movw	r22, r12
    2d9a:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:62

        /* Convert Float to Int */
        eeprom.lng_fract[0] = int(eeprom.lng_fract[0] * 1e2);
        eeprom.lng_fract[1] = int(eeprom.lng_fract[1] * 1e4);
        eeprom.lng_fract[2] = int(eeprom.lng_fract[2] * 1e6);
    2d9e:	20 e0       	ldi	r18, 0x00	; 0
    2da0:	34 e2       	ldi	r19, 0x24	; 36
    2da2:	44 e7       	ldi	r20, 0x74	; 116
    2da4:	59 e4       	ldi	r21, 0x49	; 73
    2da6:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2daa:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    2dae:	07 2e       	mov	r0, r23
    2db0:	00 0c       	add	r0, r0
    2db2:	88 0b       	sbc	r24, r24
    2db4:	99 0b       	sbc	r25, r25
    2db6:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    2dba:	60 93 9b 09 	sts	0x099B, r22	; 0x80099b <eeprom+0x28>
    2dbe:	70 93 9c 09 	sts	0x099C, r23	; 0x80099c <eeprom+0x29>
    2dc2:	80 93 9d 09 	sts	0x099D, r24	; 0x80099d <eeprom+0x2a>
    2dc6:	90 93 9e 09 	sts	0x099E, r25	; 0x80099e <eeprom+0x2b>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:65

        /* Save Latitude to EEPROM */
        eeprom.array_index = 0; /* Reset Array Index */
    2dca:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <eeprom+0x3>
    2dce:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <eeprom+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:66
        EEPROM.write(5, eeprom.lng_bias);
    2dd2:	6c 2f       	mov	r22, r28
    2dd4:	85 e0       	ldi	r24, 0x05	; 5
    2dd6:	90 e0       	ldi	r25, 0x00	; 0
    2dd8:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:67
        for (eeprom.index = 6; eeprom.index < 9; eeprom.index++) {
    2ddc:	86 e0       	ldi	r24, 0x06	; 6
    2dde:	90 e0       	ldi	r25, 0x00	; 0
    2de0:	90 93 74 09 	sts	0x0974, r25	; 0x800974 <eeprom+0x1>
    2de4:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <eeprom>
    2de8:	c0 91 73 09 	lds	r28, 0x0973	; 0x800973 <eeprom>
    2dec:	d0 91 74 09 	lds	r29, 0x0974	; 0x800974 <eeprom+0x1>
    2df0:	c9 30       	cpi	r28, 0x09	; 9
    2df2:	d1 05       	cpc	r29, r1
    2df4:	44 f5       	brge	.+80     	; 0x2e46 <saveLocationToEEPROM()+0x390>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:68 (discriminator 2)
                EEPROM.write(eeprom.index, eeprom.lng_fract[eeprom.array_index]);
    2df6:	e0 91 75 09 	lds	r30, 0x0975	; 0x800975 <eeprom+0x2>
    2dfa:	f0 91 76 09 	lds	r31, 0x0976	; 0x800976 <eeprom+0x3>
    2dfe:	ee 0f       	add	r30, r30
    2e00:	ff 1f       	adc	r31, r31
    2e02:	ee 0f       	add	r30, r30
    2e04:	ff 1f       	adc	r31, r31
    2e06:	ed 56       	subi	r30, 0x6D	; 109
    2e08:	f6 4f       	sbci	r31, 0xF6	; 246
    2e0a:	60 81       	ld	r22, Z
    2e0c:	71 81       	ldd	r23, Z+1	; 0x01
    2e0e:	82 81       	ldd	r24, Z+2	; 0x02
    2e10:	93 81       	ldd	r25, Z+3	; 0x03
    2e12:	0e 94 a9 6f 	call	0xdf52	; 0xdf52 <__fixunssfsi>
    2e16:	ce 01       	movw	r24, r28
    2e18:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:69 (discriminator 2)
                eeprom.array_index++;
    2e1c:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <eeprom+0x2>
    2e20:	90 91 76 09 	lds	r25, 0x0976	; 0x800976 <eeprom+0x3>
    2e24:	01 96       	adiw	r24, 0x01	; 1
    2e26:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <eeprom+0x3>
    2e2a:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <eeprom+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:70 (discriminator 2)
                delay(10);
    2e2e:	6a e0       	ldi	r22, 0x0A	; 10
    2e30:	70 e0       	ldi	r23, 0x00	; 0
    2e32:	80 e0       	ldi	r24, 0x00	; 0
    2e34:	90 e0       	ldi	r25, 0x00	; 0
    2e36:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:67 (discriminator 2)
        eeprom.lng_fract[2] = int(eeprom.lng_fract[2] * 1e6);

        /* Save Latitude to EEPROM */
        eeprom.array_index = 0; /* Reset Array Index */
        EEPROM.write(5, eeprom.lng_bias);
        for (eeprom.index = 6; eeprom.index < 9; eeprom.index++) {
    2e3a:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <eeprom>
    2e3e:	90 91 74 09 	lds	r25, 0x0974	; 0x800974 <eeprom+0x1>
    2e42:	01 96       	adiw	r24, 0x01	; 1
    2e44:	cd cf       	rjmp	.-102    	; 0x2de0 <saveLocationToEEPROM()+0x32a>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:72
                EEPROM.write(eeprom.index, eeprom.lng_fract[eeprom.array_index]);
                eeprom.array_index++;
                delay(10);
        }
}
    2e46:	df 91       	pop	r29
    2e48:	cf 91       	pop	r28
    2e4a:	ff 90       	pop	r15
    2e4c:	ef 90       	pop	r14
    2e4e:	df 90       	pop	r13
    2e50:	cf 90       	pop	r12
    2e52:	bf 90       	pop	r11
    2e54:	af 90       	pop	r10
    2e56:	9f 90       	pop	r9
    2e58:	8f 90       	pop	r8
    2e5a:	08 95       	ret

00002e5c <decodeLocationFromEEPROM()>:
_Z24decodeLocationFromEEPROMv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:74

void decodeLocationFromEEPROM(void) {
    2e5c:	4f 92       	push	r4
    2e5e:	5f 92       	push	r5
    2e60:	6f 92       	push	r6
    2e62:	7f 92       	push	r7
    2e64:	8f 92       	push	r8
    2e66:	9f 92       	push	r9
    2e68:	af 92       	push	r10
    2e6a:	bf 92       	push	r11
    2e6c:	cf 92       	push	r12
    2e6e:	df 92       	push	r13
    2e70:	ef 92       	push	r14
    2e72:	ff 92       	push	r15
    2e74:	0f 93       	push	r16
    2e76:	1f 93       	push	r17
    2e78:	cf 93       	push	r28
    2e7a:	df 93       	push	r29
    2e7c:	00 d0       	rcall	.+0      	; 0x2e7e <decodeLocationFromEEPROM()+0x22>
    2e7e:	00 d0       	rcall	.+0      	; 0x2e80 <decodeLocationFromEEPROM()+0x24>
    2e80:	cd b7       	in	r28, 0x3d	; 61
    2e82:	de b7       	in	r29, 0x3e	; 62
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:76
        /* Read from EEPROM Address 0, Latitude Bias */
        eeprom.lat_bias = EEPROM.read(0);
    2e84:	90 e0       	ldi	r25, 0x00	; 0
    2e86:	80 e0       	ldi	r24, 0x00	; 0
    2e88:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    2e8c:	68 2f       	mov	r22, r24
    2e8e:	70 e0       	ldi	r23, 0x00	; 0
    2e90:	90 e0       	ldi	r25, 0x00	; 0
    2e92:	80 e0       	ldi	r24, 0x00	; 0
    2e94:	0e 94 d8 6f 	call	0xdfb0	; 0xdfb0 <__floatunsisf>
    2e98:	60 93 7b 09 	sts	0x097B, r22	; 0x80097b <eeprom+0x8>
    2e9c:	70 93 7c 09 	sts	0x097C, r23	; 0x80097c <eeprom+0x9>
    2ea0:	80 93 7d 09 	sts	0x097D, r24	; 0x80097d <eeprom+0xa>
    2ea4:	90 93 7e 09 	sts	0x097E, r25	; 0x80097e <eeprom+0xb>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:77
        eeprom.array_index = 0; // Reset Array Index
    2ea8:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <eeprom+0x3>
    2eac:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <eeprom+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:80

        /* Read from EEPROM Address 1->3, Latitude Decimal */
        for (eeprom.index = 1; eeprom.index < 4; eeprom.index++) {
    2eb0:	81 e0       	ldi	r24, 0x01	; 1
    2eb2:	90 e0       	ldi	r25, 0x00	; 0
    2eb4:	90 93 74 09 	sts	0x0974, r25	; 0x800974 <eeprom+0x1>
    2eb8:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <eeprom>
    2ebc:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <eeprom>
    2ec0:	90 91 74 09 	lds	r25, 0x0974	; 0x800974 <eeprom+0x1>
    2ec4:	84 30       	cpi	r24, 0x04	; 4
    2ec6:	91 05       	cpc	r25, r1
    2ec8:	74 f5       	brge	.+92     	; 0x2f26 <decodeLocationFromEEPROM()+0xca>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:81 (discriminator 2)
                eeprom.lat_fract[eeprom.array_index] = EEPROM.read(eeprom.index);
    2eca:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    2ece:	20 91 75 09 	lds	r18, 0x0975	; 0x800975 <eeprom+0x2>
    2ed2:	30 91 76 09 	lds	r19, 0x0976	; 0x800976 <eeprom+0x3>
    2ed6:	3a 83       	std	Y+2, r19	; 0x02
    2ed8:	29 83       	std	Y+1, r18	; 0x01
    2eda:	89 01       	movw	r16, r18
    2edc:	00 0f       	add	r16, r16
    2ede:	11 1f       	adc	r17, r17
    2ee0:	00 0f       	add	r16, r16
    2ee2:	11 1f       	adc	r17, r17
    2ee4:	01 58       	subi	r16, 0x81	; 129
    2ee6:	16 4f       	sbci	r17, 0xF6	; 246
    2ee8:	68 2f       	mov	r22, r24
    2eea:	70 e0       	ldi	r23, 0x00	; 0
    2eec:	90 e0       	ldi	r25, 0x00	; 0
    2eee:	80 e0       	ldi	r24, 0x00	; 0
    2ef0:	0e 94 d8 6f 	call	0xdfb0	; 0xdfb0 <__floatunsisf>
    2ef4:	f8 01       	movw	r30, r16
    2ef6:	60 83       	st	Z, r22
    2ef8:	71 83       	std	Z+1, r23	; 0x01
    2efa:	82 83       	std	Z+2, r24	; 0x02
    2efc:	93 83       	std	Z+3, r25	; 0x03
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:82 (discriminator 2)
                eeprom.array_index++;
    2efe:	29 81       	ldd	r18, Y+1	; 0x01
    2f00:	3a 81       	ldd	r19, Y+2	; 0x02
    2f02:	2f 5f       	subi	r18, 0xFF	; 255
    2f04:	3f 4f       	sbci	r19, 0xFF	; 255
    2f06:	30 93 76 09 	sts	0x0976, r19	; 0x800976 <eeprom+0x3>
    2f0a:	20 93 75 09 	sts	0x0975, r18	; 0x800975 <eeprom+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:83 (discriminator 2)
                delay(10);
    2f0e:	6a e0       	ldi	r22, 0x0A	; 10
    2f10:	70 e0       	ldi	r23, 0x00	; 0
    2f12:	80 e0       	ldi	r24, 0x00	; 0
    2f14:	90 e0       	ldi	r25, 0x00	; 0
    2f16:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:80 (discriminator 2)
        /* Read from EEPROM Address 0, Latitude Bias */
        eeprom.lat_bias = EEPROM.read(0);
        eeprom.array_index = 0; // Reset Array Index

        /* Read from EEPROM Address 1->3, Latitude Decimal */
        for (eeprom.index = 1; eeprom.index < 4; eeprom.index++) {
    2f1a:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <eeprom>
    2f1e:	90 91 74 09 	lds	r25, 0x0974	; 0x800974 <eeprom+0x1>
    2f22:	01 96       	adiw	r24, 0x01	; 1
    2f24:	c7 cf       	rjmp	.-114    	; 0x2eb4 <decodeLocationFromEEPROM()+0x58>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:87
                eeprom.array_index++;
                delay(10);
        }

        /* Reconstruct Latitude data from EEPROM */
        if (EEPROM.read(4) == 1) /* Check Address 4 of EEPROM for sign bit */
    2f26:	84 e0       	ldi	r24, 0x04	; 4
    2f28:	90 e0       	ldi	r25, 0x00	; 0
    2f2a:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    2f2e:	40 90 7b 09 	lds	r4, 0x097B	; 0x80097b <eeprom+0x8>
    2f32:	50 90 7c 09 	lds	r5, 0x097C	; 0x80097c <eeprom+0x9>
    2f36:	60 90 7d 09 	lds	r6, 0x097D	; 0x80097d <eeprom+0xa>
    2f3a:	70 90 7e 09 	lds	r7, 0x097E	; 0x80097e <eeprom+0xb>
    2f3e:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <eeprom+0xc>
    2f42:	30 91 80 09 	lds	r19, 0x0980	; 0x800980 <eeprom+0xd>
    2f46:	40 91 81 09 	lds	r20, 0x0981	; 0x800981 <eeprom+0xe>
    2f4a:	50 91 82 09 	lds	r21, 0x0982	; 0x800982 <eeprom+0xf>
    2f4e:	29 83       	std	Y+1, r18	; 0x01
    2f50:	3a 83       	std	Y+2, r19	; 0x02
    2f52:	4b 83       	std	Y+3, r20	; 0x03
    2f54:	5c 83       	std	Y+4, r21	; 0x04
    2f56:	80 90 83 09 	lds	r8, 0x0983	; 0x800983 <eeprom+0x10>
    2f5a:	90 90 84 09 	lds	r9, 0x0984	; 0x800984 <eeprom+0x11>
    2f5e:	a0 90 85 09 	lds	r10, 0x0985	; 0x800985 <eeprom+0x12>
    2f62:	b0 90 86 09 	lds	r11, 0x0986	; 0x800986 <eeprom+0x13>
    2f66:	c0 90 87 09 	lds	r12, 0x0987	; 0x800987 <eeprom+0x14>
    2f6a:	d0 90 88 09 	lds	r13, 0x0988	; 0x800988 <eeprom+0x15>
    2f6e:	e0 90 89 09 	lds	r14, 0x0989	; 0x800989 <eeprom+0x16>
    2f72:	f0 90 8a 09 	lds	r15, 0x098A	; 0x80098a <eeprom+0x17>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:89
                eeprom.eeprom_lat = -(eeprom.lat_bias
                                      + eeprom.lat_fract[0] * 1e-2
    2f76:	2a e0       	ldi	r18, 0x0A	; 10
    2f78:	37 ed       	ldi	r19, 0xD7	; 215
    2f7a:	43 e2       	ldi	r20, 0x23	; 35
    2f7c:	5c e3       	ldi	r21, 0x3C	; 60
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:87
                eeprom.array_index++;
                delay(10);
        }

        /* Reconstruct Latitude data from EEPROM */
        if (EEPROM.read(4) == 1) /* Check Address 4 of EEPROM for sign bit */
    2f7e:	81 30       	cpi	r24, 0x01	; 1
    2f80:	09 f0       	breq	.+2      	; 0x2f84 <decodeLocationFromEEPROM()+0x128>
    2f82:	85 c0       	rjmp	.+266    	; 0x308e <decodeLocationFromEEPROM()+0x232>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:89
                eeprom.eeprom_lat = -(eeprom.lat_bias
                                      + eeprom.lat_fract[0] * 1e-2
    2f84:	69 81       	ldd	r22, Y+1	; 0x01
    2f86:	7a 81       	ldd	r23, Y+2	; 0x02
    2f88:	8b 81       	ldd	r24, Y+3	; 0x03
    2f8a:	9c 81       	ldd	r25, Y+4	; 0x04
    2f8c:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2f90:	a3 01       	movw	r20, r6
    2f92:	92 01       	movw	r18, r4
    2f94:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    2f98:	2b 01       	movw	r4, r22
    2f9a:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:90
                                      + eeprom.lat_fract[1] * 1e-4
    2f9c:	27 e1       	ldi	r18, 0x17	; 23
    2f9e:	37 eb       	ldi	r19, 0xB7	; 183
    2fa0:	41 ed       	ldi	r20, 0xD1	; 209
    2fa2:	58 e3       	ldi	r21, 0x38	; 56
    2fa4:	c5 01       	movw	r24, r10
    2fa6:	b4 01       	movw	r22, r8
    2fa8:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2fac:	9b 01       	movw	r18, r22
    2fae:	ac 01       	movw	r20, r24
    2fb0:	c3 01       	movw	r24, r6
    2fb2:	b2 01       	movw	r22, r4
    2fb4:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    2fb8:	4b 01       	movw	r8, r22
    2fba:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:91
                                      + eeprom.lat_fract[2] * 1e-6);
    2fbc:	2d eb       	ldi	r18, 0xBD	; 189
    2fbe:	37 e3       	ldi	r19, 0x37	; 55
    2fc0:	46 e8       	ldi	r20, 0x86	; 134
    2fc2:	55 e3       	ldi	r21, 0x35	; 53
    2fc4:	c7 01       	movw	r24, r14
    2fc6:	b6 01       	movw	r22, r12
    2fc8:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    2fcc:	9b 01       	movw	r18, r22
    2fce:	ac 01       	movw	r20, r24
    2fd0:	c5 01       	movw	r24, r10
    2fd2:	b4 01       	movw	r22, r8
    2fd4:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:88
                delay(10);
        }

        /* Reconstruct Latitude data from EEPROM */
        if (EEPROM.read(4) == 1) /* Check Address 4 of EEPROM for sign bit */
                eeprom.eeprom_lat = -(eeprom.lat_bias
    2fd8:	90 58       	subi	r25, 0x80	; 128
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:93
                                      + eeprom.lat_fract[0] * 1e-2
                                      + eeprom.lat_fract[1] * 1e-4
                                      + eeprom.lat_fract[2] * 1e-6);
        else
                eeprom.eeprom_lat = eeprom.lat_bias
    2fda:	60 93 77 09 	sts	0x0977, r22	; 0x800977 <eeprom+0x4>
    2fde:	70 93 78 09 	sts	0x0978, r23	; 0x800978 <eeprom+0x5>
    2fe2:	80 93 79 09 	sts	0x0979, r24	; 0x800979 <eeprom+0x6>
    2fe6:	90 93 7a 09 	sts	0x097A, r25	; 0x80097a <eeprom+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:99
                                    + eeprom.lat_fract[0] * 1e-2
                                    + eeprom.lat_fract[1] * 1e-4
                                    + eeprom.lat_fract[2] * 1e-6;

        /* Read from EEPROM Address 5, Longitude Bias */
        eeprom.lng_bias = EEPROM.read(5);
    2fea:	85 e0       	ldi	r24, 0x05	; 5
    2fec:	90 e0       	ldi	r25, 0x00	; 0
    2fee:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    2ff2:	68 2f       	mov	r22, r24
    2ff4:	70 e0       	ldi	r23, 0x00	; 0
    2ff6:	90 e0       	ldi	r25, 0x00	; 0
    2ff8:	80 e0       	ldi	r24, 0x00	; 0
    2ffa:	0e 94 d8 6f 	call	0xdfb0	; 0xdfb0 <__floatunsisf>
    2ffe:	60 93 8f 09 	sts	0x098F, r22	; 0x80098f <eeprom+0x1c>
    3002:	70 93 90 09 	sts	0x0990, r23	; 0x800990 <eeprom+0x1d>
    3006:	80 93 91 09 	sts	0x0991, r24	; 0x800991 <eeprom+0x1e>
    300a:	90 93 92 09 	sts	0x0992, r25	; 0x800992 <eeprom+0x1f>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:100
        eeprom.array_index = 0; // Reset Array Index
    300e:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <eeprom+0x3>
    3012:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <eeprom+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:103

        /* Read from EEPROM Address 6->8, Longitude Decimal */
        for (eeprom.index = 6; eeprom.index < 9; eeprom.index++) {
    3016:	86 e0       	ldi	r24, 0x06	; 6
    3018:	90 e0       	ldi	r25, 0x00	; 0
    301a:	90 93 74 09 	sts	0x0974, r25	; 0x800974 <eeprom+0x1>
    301e:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <eeprom>
    3022:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <eeprom>
    3026:	90 91 74 09 	lds	r25, 0x0974	; 0x800974 <eeprom+0x1>
    302a:	89 30       	cpi	r24, 0x09	; 9
    302c:	91 05       	cpc	r25, r1
    302e:	0c f0       	brlt	.+2      	; 0x3032 <decodeLocationFromEEPROM()+0x1d6>
    3030:	59 c0       	rjmp	.+178    	; 0x30e4 <decodeLocationFromEEPROM()+0x288>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:104 (discriminator 2)
                eeprom.lng_fract[eeprom.array_index] = EEPROM.read(eeprom.index);
    3032:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    3036:	40 91 75 09 	lds	r20, 0x0975	; 0x800975 <eeprom+0x2>
    303a:	50 91 76 09 	lds	r21, 0x0976	; 0x800976 <eeprom+0x3>
    303e:	5a 83       	std	Y+2, r21	; 0x02
    3040:	49 83       	std	Y+1, r20	; 0x01
    3042:	8a 01       	movw	r16, r20
    3044:	00 0f       	add	r16, r16
    3046:	11 1f       	adc	r17, r17
    3048:	00 0f       	add	r16, r16
    304a:	11 1f       	adc	r17, r17
    304c:	0d 56       	subi	r16, 0x6D	; 109
    304e:	16 4f       	sbci	r17, 0xF6	; 246
    3050:	68 2f       	mov	r22, r24
    3052:	70 e0       	ldi	r23, 0x00	; 0
    3054:	90 e0       	ldi	r25, 0x00	; 0
    3056:	80 e0       	ldi	r24, 0x00	; 0
    3058:	0e 94 d8 6f 	call	0xdfb0	; 0xdfb0 <__floatunsisf>
    305c:	f8 01       	movw	r30, r16
    305e:	60 83       	st	Z, r22
    3060:	71 83       	std	Z+1, r23	; 0x01
    3062:	82 83       	std	Z+2, r24	; 0x02
    3064:	93 83       	std	Z+3, r25	; 0x03
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:105 (discriminator 2)
                eeprom.array_index++;
    3066:	29 81       	ldd	r18, Y+1	; 0x01
    3068:	3a 81       	ldd	r19, Y+2	; 0x02
    306a:	2f 5f       	subi	r18, 0xFF	; 255
    306c:	3f 4f       	sbci	r19, 0xFF	; 255
    306e:	30 93 76 09 	sts	0x0976, r19	; 0x800976 <eeprom+0x3>
    3072:	20 93 75 09 	sts	0x0975, r18	; 0x800975 <eeprom+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:106 (discriminator 2)
                delay(10);
    3076:	6a e0       	ldi	r22, 0x0A	; 10
    3078:	70 e0       	ldi	r23, 0x00	; 0
    307a:	80 e0       	ldi	r24, 0x00	; 0
    307c:	90 e0       	ldi	r25, 0x00	; 0
    307e:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:103 (discriminator 2)
        /* Read from EEPROM Address 5, Longitude Bias */
        eeprom.lng_bias = EEPROM.read(5);
        eeprom.array_index = 0; // Reset Array Index

        /* Read from EEPROM Address 6->8, Longitude Decimal */
        for (eeprom.index = 6; eeprom.index < 9; eeprom.index++) {
    3082:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <eeprom>
    3086:	90 91 74 09 	lds	r25, 0x0974	; 0x800974 <eeprom+0x1>
    308a:	01 96       	adiw	r24, 0x01	; 1
    308c:	c6 cf       	rjmp	.-116    	; 0x301a <decodeLocationFromEEPROM()+0x1be>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:94
                                      + eeprom.lat_fract[0] * 1e-2
                                      + eeprom.lat_fract[1] * 1e-4
                                      + eeprom.lat_fract[2] * 1e-6);
        else
                eeprom.eeprom_lat = eeprom.lat_bias
                                    + eeprom.lat_fract[0] * 1e-2
    308e:	69 81       	ldd	r22, Y+1	; 0x01
    3090:	7a 81       	ldd	r23, Y+2	; 0x02
    3092:	8b 81       	ldd	r24, Y+3	; 0x03
    3094:	9c 81       	ldd	r25, Y+4	; 0x04
    3096:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    309a:	a3 01       	movw	r20, r6
    309c:	92 01       	movw	r18, r4
    309e:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    30a2:	2b 01       	movw	r4, r22
    30a4:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:95
                                    + eeprom.lat_fract[1] * 1e-4
    30a6:	27 e1       	ldi	r18, 0x17	; 23
    30a8:	37 eb       	ldi	r19, 0xB7	; 183
    30aa:	41 ed       	ldi	r20, 0xD1	; 209
    30ac:	58 e3       	ldi	r21, 0x38	; 56
    30ae:	c5 01       	movw	r24, r10
    30b0:	b4 01       	movw	r22, r8
    30b2:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    30b6:	9b 01       	movw	r18, r22
    30b8:	ac 01       	movw	r20, r24
    30ba:	c3 01       	movw	r24, r6
    30bc:	b2 01       	movw	r22, r4
    30be:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    30c2:	4b 01       	movw	r8, r22
    30c4:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:96
                                    + eeprom.lat_fract[2] * 1e-6;
    30c6:	2d eb       	ldi	r18, 0xBD	; 189
    30c8:	37 e3       	ldi	r19, 0x37	; 55
    30ca:	46 e8       	ldi	r20, 0x86	; 134
    30cc:	55 e3       	ldi	r21, 0x35	; 53
    30ce:	c7 01       	movw	r24, r14
    30d0:	b6 01       	movw	r22, r12
    30d2:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    30d6:	9b 01       	movw	r18, r22
    30d8:	ac 01       	movw	r20, r24
    30da:	c5 01       	movw	r24, r10
    30dc:	b4 01       	movw	r22, r8
    30de:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    30e2:	7b cf       	rjmp	.-266    	; 0x2fda <decodeLocationFromEEPROM()+0x17e>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:110
                eeprom.array_index++;
                delay(10);
        }

        /* Reconstruct Longitude data from EEPROM */
        if (EEPROM.read(9) == 1) /* Check Address 9 for sign bit */
    30e4:	89 e0       	ldi	r24, 0x09	; 9
    30e6:	90 e0       	ldi	r25, 0x00	; 0
    30e8:	0e 94 c8 10 	call	0x2190	; 0x2190 <EEPROMClass::read(int) [clone .isra.0]>
    30ec:	40 90 8f 09 	lds	r4, 0x098F	; 0x80098f <eeprom+0x1c>
    30f0:	50 90 90 09 	lds	r5, 0x0990	; 0x800990 <eeprom+0x1d>
    30f4:	60 90 91 09 	lds	r6, 0x0991	; 0x800991 <eeprom+0x1e>
    30f8:	70 90 92 09 	lds	r7, 0x0992	; 0x800992 <eeprom+0x1f>
    30fc:	20 91 93 09 	lds	r18, 0x0993	; 0x800993 <eeprom+0x20>
    3100:	30 91 94 09 	lds	r19, 0x0994	; 0x800994 <eeprom+0x21>
    3104:	40 91 95 09 	lds	r20, 0x0995	; 0x800995 <eeprom+0x22>
    3108:	50 91 96 09 	lds	r21, 0x0996	; 0x800996 <eeprom+0x23>
    310c:	29 83       	std	Y+1, r18	; 0x01
    310e:	3a 83       	std	Y+2, r19	; 0x02
    3110:	4b 83       	std	Y+3, r20	; 0x03
    3112:	5c 83       	std	Y+4, r21	; 0x04
    3114:	80 90 97 09 	lds	r8, 0x0997	; 0x800997 <eeprom+0x24>
    3118:	90 90 98 09 	lds	r9, 0x0998	; 0x800998 <eeprom+0x25>
    311c:	a0 90 99 09 	lds	r10, 0x0999	; 0x800999 <eeprom+0x26>
    3120:	b0 90 9a 09 	lds	r11, 0x099A	; 0x80099a <eeprom+0x27>
    3124:	c0 90 9b 09 	lds	r12, 0x099B	; 0x80099b <eeprom+0x28>
    3128:	d0 90 9c 09 	lds	r13, 0x099C	; 0x80099c <eeprom+0x29>
    312c:	e0 90 9d 09 	lds	r14, 0x099D	; 0x80099d <eeprom+0x2a>
    3130:	f0 90 9e 09 	lds	r15, 0x099E	; 0x80099e <eeprom+0x2b>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:112
                eeprom.eeprom_lng = -(eeprom.lng_bias
                                      + eeprom.lng_fract[0] * 1e-2
    3134:	2a e0       	ldi	r18, 0x0A	; 10
    3136:	37 ed       	ldi	r19, 0xD7	; 215
    3138:	43 e2       	ldi	r20, 0x23	; 35
    313a:	5c e3       	ldi	r21, 0x3C	; 60
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:110
                eeprom.array_index++;
                delay(10);
        }

        /* Reconstruct Longitude data from EEPROM */
        if (EEPROM.read(9) == 1) /* Check Address 9 for sign bit */
    313c:	81 30       	cpi	r24, 0x01	; 1
    313e:	09 f0       	breq	.+2      	; 0x3142 <decodeLocationFromEEPROM()+0x2e6>
    3140:	48 c0       	rjmp	.+144    	; 0x31d2 <decodeLocationFromEEPROM()+0x376>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:112
                eeprom.eeprom_lng = -(eeprom.lng_bias
                                      + eeprom.lng_fract[0] * 1e-2
    3142:	69 81       	ldd	r22, Y+1	; 0x01
    3144:	7a 81       	ldd	r23, Y+2	; 0x02
    3146:	8b 81       	ldd	r24, Y+3	; 0x03
    3148:	9c 81       	ldd	r25, Y+4	; 0x04
    314a:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    314e:	a3 01       	movw	r20, r6
    3150:	92 01       	movw	r18, r4
    3152:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    3156:	2b 01       	movw	r4, r22
    3158:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:113
                                      + eeprom.lng_fract[1] * 1e-4
    315a:	27 e1       	ldi	r18, 0x17	; 23
    315c:	37 eb       	ldi	r19, 0xB7	; 183
    315e:	41 ed       	ldi	r20, 0xD1	; 209
    3160:	58 e3       	ldi	r21, 0x38	; 56
    3162:	c5 01       	movw	r24, r10
    3164:	b4 01       	movw	r22, r8
    3166:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    316a:	9b 01       	movw	r18, r22
    316c:	ac 01       	movw	r20, r24
    316e:	c3 01       	movw	r24, r6
    3170:	b2 01       	movw	r22, r4
    3172:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    3176:	4b 01       	movw	r8, r22
    3178:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:114
                                      + eeprom.lng_fract[2] * 1e-6);
    317a:	2d eb       	ldi	r18, 0xBD	; 189
    317c:	37 e3       	ldi	r19, 0x37	; 55
    317e:	46 e8       	ldi	r20, 0x86	; 134
    3180:	55 e3       	ldi	r21, 0x35	; 53
    3182:	c7 01       	movw	r24, r14
    3184:	b6 01       	movw	r22, r12
    3186:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    318a:	9b 01       	movw	r18, r22
    318c:	ac 01       	movw	r20, r24
    318e:	c5 01       	movw	r24, r10
    3190:	b4 01       	movw	r22, r8
    3192:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:111
                delay(10);
        }

        /* Reconstruct Longitude data from EEPROM */
        if (EEPROM.read(9) == 1) /* Check Address 9 for sign bit */
                eeprom.eeprom_lng = -(eeprom.lng_bias
    3196:	90 58       	subi	r25, 0x80	; 128
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:116
                                      + eeprom.lng_fract[0] * 1e-2
                                      + eeprom.lng_fract[1] * 1e-4
                                      + eeprom.lng_fract[2] * 1e-6);
        else
                eeprom.eeprom_lng = eeprom.lng_bias
    3198:	60 93 8b 09 	sts	0x098B, r22	; 0x80098b <eeprom+0x18>
    319c:	70 93 8c 09 	sts	0x098C, r23	; 0x80098c <eeprom+0x19>
    31a0:	80 93 8d 09 	sts	0x098D, r24	; 0x80098d <eeprom+0x1a>
    31a4:	90 93 8e 09 	sts	0x098E, r25	; 0x80098e <eeprom+0x1b>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:120
                                    + eeprom.lng_fract[0] * 1e-2
                                    + eeprom.lng_fract[1] * 1e-4
                                    + eeprom.lng_fract[2] * 1e-6;
}
    31a8:	0f 90       	pop	r0
    31aa:	0f 90       	pop	r0
    31ac:	0f 90       	pop	r0
    31ae:	0f 90       	pop	r0
    31b0:	df 91       	pop	r29
    31b2:	cf 91       	pop	r28
    31b4:	1f 91       	pop	r17
    31b6:	0f 91       	pop	r16
    31b8:	ff 90       	pop	r15
    31ba:	ef 90       	pop	r14
    31bc:	df 90       	pop	r13
    31be:	cf 90       	pop	r12
    31c0:	bf 90       	pop	r11
    31c2:	af 90       	pop	r10
    31c4:	9f 90       	pop	r9
    31c6:	8f 90       	pop	r8
    31c8:	7f 90       	pop	r7
    31ca:	6f 90       	pop	r6
    31cc:	5f 90       	pop	r5
    31ce:	4f 90       	pop	r4
    31d0:	08 95       	ret
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:117
                                      + eeprom.lng_fract[0] * 1e-2
                                      + eeprom.lng_fract[1] * 1e-4
                                      + eeprom.lng_fract[2] * 1e-6);
        else
                eeprom.eeprom_lng = eeprom.lng_bias
                                    + eeprom.lng_fract[0] * 1e-2
    31d2:	69 81       	ldd	r22, Y+1	; 0x01
    31d4:	7a 81       	ldd	r23, Y+2	; 0x02
    31d6:	8b 81       	ldd	r24, Y+3	; 0x03
    31d8:	9c 81       	ldd	r25, Y+4	; 0x04
    31da:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    31de:	a3 01       	movw	r20, r6
    31e0:	92 01       	movw	r18, r4
    31e2:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    31e6:	2b 01       	movw	r4, r22
    31e8:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:118
                                    + eeprom.lng_fract[1] * 1e-4
    31ea:	27 e1       	ldi	r18, 0x17	; 23
    31ec:	37 eb       	ldi	r19, 0xB7	; 183
    31ee:	41 ed       	ldi	r20, 0xD1	; 209
    31f0:	58 e3       	ldi	r21, 0x38	; 56
    31f2:	c5 01       	movw	r24, r10
    31f4:	b4 01       	movw	r22, r8
    31f6:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    31fa:	9b 01       	movw	r18, r22
    31fc:	ac 01       	movw	r20, r24
    31fe:	c3 01       	movw	r24, r6
    3200:	b2 01       	movw	r22, r4
    3202:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    3206:	4b 01       	movw	r8, r22
    3208:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:119
                                    + eeprom.lng_fract[2] * 1e-6;
    320a:	2d eb       	ldi	r18, 0xBD	; 189
    320c:	37 e3       	ldi	r19, 0x37	; 55
    320e:	46 e8       	ldi	r20, 0x86	; 134
    3210:	55 e3       	ldi	r21, 0x35	; 53
    3212:	c7 01       	movw	r24, r14
    3214:	b6 01       	movw	r22, r12
    3216:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    321a:	9b 01       	movw	r18, r22
    321c:	ac 01       	movw	r20, r24
    321e:	c5 01       	movw	r24, r10
    3220:	b4 01       	movw	r22, r8
    3222:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    3226:	b8 cf       	rjmp	.-144    	; 0x3198 <decodeLocationFromEEPROM()+0x33c>

00003228 <WarningAlert()>:
_Z12WarningAlertv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:129
        do {
                while (ss.available()) gps.encode(ss.read());
        } while (millis() - start < ms);
}

void WarningAlert(void) {
    3228:	0f 93       	push	r16
    322a:	1f 93       	push	r17
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:131
        /* Blink LED Using Timer */
        if (millis() - SysClkTmr.lastTick >= 500) SysClkTmr.tickState = !SysClkTmr.tickState;
    322c:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    3230:	00 91 2d 09 	lds	r16, 0x092D	; 0x80092d <SysClkTmr>
    3234:	10 91 2e 09 	lds	r17, 0x092E	; 0x80092e <SysClkTmr+0x1>
    3238:	20 91 2f 09 	lds	r18, 0x092F	; 0x80092f <SysClkTmr+0x2>
    323c:	30 91 30 09 	lds	r19, 0x0930	; 0x800930 <SysClkTmr+0x3>
    3240:	60 1b       	sub	r22, r16
    3242:	71 0b       	sbc	r23, r17
    3244:	82 0b       	sbc	r24, r18
    3246:	93 0b       	sbc	r25, r19
    3248:	64 3f       	cpi	r22, 0xF4	; 244
    324a:	71 40       	sbci	r23, 0x01	; 1
    324c:	81 05       	cpc	r24, r1
    324e:	91 05       	cpc	r25, r1
    3250:	30 f0       	brcs	.+12     	; 0x325e <WarningAlert()+0x36>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:131 (discriminator 1)
    3252:	80 91 31 09 	lds	r24, 0x0931	; 0x800931 <SysClkTmr+0x4>
    3256:	91 e0       	ldi	r25, 0x01	; 1
    3258:	89 27       	eor	r24, r25
    325a:	80 93 31 09 	sts	0x0931, r24	; 0x800931 <SysClkTmr+0x4>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:132
        digitalWrite(LED_BUILTIN, SysClkTmr.tickState);
    325e:	60 91 31 09 	lds	r22, 0x0931	; 0x800931 <SysClkTmr+0x4>
    3262:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:133
}
    3264:	1f 91       	pop	r17
    3266:	0f 91       	pop	r16
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:132
}

void WarningAlert(void) {
        /* Blink LED Using Timer */
        if (millis() - SysClkTmr.lastTick >= 500) SysClkTmr.tickState = !SysClkTmr.tickState;
        digitalWrite(LED_BUILTIN, SysClkTmr.tickState);
    3268:	0c 94 67 6b 	jmp	0xd6ce	; 0xd6ce <digitalWrite>

0000326c <drawBitmap(int)>:
_Z10drawBitmapi():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:135
}

void drawBitmap(int id) {
    326c:	cf 92       	push	r12
    326e:	df 92       	push	r13
    3270:	ef 92       	push	r14
    3272:	ff 92       	push	r15
    3274:	0f 93       	push	r16
    3276:	1f 93       	push	r17
    3278:	cf 93       	push	r28
    327a:	df 93       	push	r29
    327c:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:136
        display.setTextSize(1);
    327e:	61 e0       	ldi	r22, 0x01	; 1
    3280:	8d ee       	ldi	r24, 0xED	; 237
    3282:	98 e0       	ldi	r25, 0x08	; 8
    3284:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3288:	81 e0       	ldi	r24, 0x01	; 1
    328a:	90 e0       	ldi	r25, 0x00	; 0
    328c:	90 93 00 09 	sts	0x0900, r25	; 0x800900 <display+0x13>
    3290:	80 93 ff 08 	sts	0x08FF, r24	; 0x8008ff <display+0x12>
    3294:	90 93 fe 08 	sts	0x08FE, r25	; 0x8008fe <display+0x11>
    3298:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <display+0x10>
_Z10drawBitmapi():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:138
        display.setTextColor(WHITE);
        if (id == CONNECTING_ICON) {
    329c:	20 97       	sbiw	r28, 0x00	; 0
    329e:	09 f0       	breq	.+2      	; 0x32a2 <drawBitmap(int)+0x36>
    32a0:	45 c0       	rjmp	.+138    	; 0x332c <drawBitmap(int)+0xc0>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    32a2:	86 e1       	ldi	r24, 0x16	; 22
    32a4:	90 e0       	ldi	r25, 0x00	; 0
    32a6:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    32aa:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    32ae:	89 e3       	ldi	r24, 0x39	; 57
    32b0:	90 e0       	ldi	r25, 0x00	; 0
    32b2:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    32b6:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z10drawBitmapi():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:139
                display.setCursor(22, 57);  display.print(F("GPS NAVIGATION"));
    32ba:	61 ee       	ldi	r22, 0xE1	; 225
    32bc:	71 e0       	ldi	r23, 0x01	; 1
    32be:	8d ee       	ldi	r24, 0xED	; 237
    32c0:	98 e0       	ldi	r25, 0x08	; 8
    32c2:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:140
                display.drawBitmap(38, 0, connecting_icon, 52, 52, 1);
    32c6:	cc 24       	eor	r12, r12
    32c8:	c3 94       	inc	r12
    32ca:	d1 2c       	mov	r13, r1
    32cc:	04 e3       	ldi	r16, 0x34	; 52
    32ce:	e0 2e       	mov	r14, r16
    32d0:	f1 2c       	mov	r15, r1
    32d2:	04 e3       	ldi	r16, 0x34	; 52
    32d4:	10 e0       	ldi	r17, 0x00	; 0
    32d6:	20 ec       	ldi	r18, 0xC0	; 192
    32d8:	37 e0       	ldi	r19, 0x07	; 7
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:144
        }
        if (id == COMPASS_ICON) {
                display.setCursor(19, 57);  display.print(F("DIGITAL COMPASS"));
                display.drawBitmap(38, 0, compass_logo, 52, 52, 1);
    32da:	50 e0       	ldi	r21, 0x00	; 0
    32dc:	40 e0       	ldi	r20, 0x00	; 0
    32de:	66 e2       	ldi	r22, 0x26	; 38
    32e0:	70 e0       	ldi	r23, 0x00	; 0
    32e2:	8d ee       	ldi	r24, 0xED	; 237
    32e4:	98 e0       	ldi	r25, 0x08	; 8
    32e6:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:158
        }
        if (id == GPS_ICON) {
                display.setCursor(22, 57);  display.print(F("GPS NAVIGATION"));
                display.drawBitmap(38, 0, gps_map_icon, 52, 52, 1);
        }
        if (id == DEVIATION_MAP_ICON) {
    32ea:	c5 30       	cpi	r28, 0x05	; 5
    32ec:	d1 05       	cpc	r29, r1
    32ee:	09 f0       	breq	.+2      	; 0x32f2 <drawBitmap(int)+0x86>
    32f0:	65 c0       	rjmp	.+202    	; 0x33bc <drawBitmap(int)+0x150>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    32f2:	89 e1       	ldi	r24, 0x19	; 25
    32f4:	90 e0       	ldi	r25, 0x00	; 0
    32f6:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    32fa:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    32fe:	89 e3       	ldi	r24, 0x39	; 57
    3300:	90 e0       	ldi	r25, 0x00	; 0
    3302:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3306:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z10drawBitmapi():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:159
                display.setCursor(25, 57);  display.print(F("DEVIATION MAP"));
    330a:	6c e9       	ldi	r22, 0x9C	; 156
    330c:	71 e0       	ldi	r23, 0x01	; 1
    330e:	8d ee       	ldi	r24, 0xED	; 237
    3310:	98 e0       	ldi	r25, 0x08	; 8
    3312:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:160
                display.drawBitmap(38, 0, radar_icon, 52, 52, 1);
    3316:	cc 24       	eor	r12, r12
    3318:	c3 94       	inc	r12
    331a:	d1 2c       	mov	r13, r1
    331c:	34 e3       	ldi	r19, 0x34	; 52
    331e:	e3 2e       	mov	r14, r19
    3320:	f1 2c       	mov	r15, r1
    3322:	04 e3       	ldi	r16, 0x34	; 52
    3324:	10 e0       	ldi	r17, 0x00	; 0
    3326:	22 e2       	ldi	r18, 0x22	; 34
    3328:	31 e1       	ldi	r19, 0x11	; 17
    332a:	87 c0       	rjmp	.+270    	; 0x343a <drawBitmap(int)+0x1ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:142
        display.setTextColor(WHITE);
        if (id == CONNECTING_ICON) {
                display.setCursor(22, 57);  display.print(F("GPS NAVIGATION"));
                display.drawBitmap(38, 0, connecting_icon, 52, 52, 1);
        }
        if (id == COMPASS_ICON) {
    332c:	c1 30       	cpi	r28, 0x01	; 1
    332e:	d1 05       	cpc	r29, r1
    3330:	e9 f4       	brne	.+58     	; 0x336c <drawBitmap(int)+0x100>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3332:	83 e1       	ldi	r24, 0x13	; 19
    3334:	90 e0       	ldi	r25, 0x00	; 0
    3336:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    333a:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    333e:	89 e3       	ldi	r24, 0x39	; 57
    3340:	90 e0       	ldi	r25, 0x00	; 0
    3342:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3346:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z10drawBitmapi():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:143
                display.setCursor(19, 57);  display.print(F("DIGITAL COMPASS"));
    334a:	61 ed       	ldi	r22, 0xD1	; 209
    334c:	71 e0       	ldi	r23, 0x01	; 1
    334e:	8d ee       	ldi	r24, 0xED	; 237
    3350:	98 e0       	ldi	r25, 0x08	; 8
    3352:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:144
                display.drawBitmap(38, 0, compass_logo, 52, 52, 1);
    3356:	cc 24       	eor	r12, r12
    3358:	c3 94       	inc	r12
    335a:	d1 2c       	mov	r13, r1
    335c:	b4 e3       	ldi	r27, 0x34	; 52
    335e:	eb 2e       	mov	r14, r27
    3360:	f1 2c       	mov	r15, r1
    3362:	04 e3       	ldi	r16, 0x34	; 52
    3364:	10 e0       	ldi	r17, 0x00	; 0
    3366:	28 e2       	ldi	r18, 0x28	; 40
    3368:	36 e0       	ldi	r19, 0x06	; 6
    336a:	b7 cf       	rjmp	.-146    	; 0x32da <drawBitmap(int)+0x6e>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:146
        }
        if (id == ALTIMETER_ICON) {
    336c:	c2 30       	cpi	r28, 0x02	; 2
    336e:	d1 05       	cpc	r29, r1
    3370:	09 f0       	breq	.+2      	; 0x3374 <drawBitmap(int)+0x108>
    3372:	44 c0       	rjmp	.+136    	; 0x33fc <drawBitmap(int)+0x190>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3374:	85 e2       	ldi	r24, 0x25	; 37
    3376:	90 e0       	ldi	r25, 0x00	; 0
    3378:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    337c:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3380:	89 e3       	ldi	r24, 0x39	; 57
    3382:	90 e0       	ldi	r25, 0x00	; 0
    3384:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3388:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z10drawBitmapi():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:147
                display.setCursor(37, 57);  display.print(F("ALTIMETER"));
    338c:	67 ec       	ldi	r22, 0xC7	; 199
    338e:	71 e0       	ldi	r23, 0x01	; 1
    3390:	8d ee       	ldi	r24, 0xED	; 237
    3392:	98 e0       	ldi	r25, 0x08	; 8
    3394:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:148
                display.drawBitmap(38, 0, altimeter_logo, 52, 52, 1);
    3398:	cc 24       	eor	r12, r12
    339a:	c3 94       	inc	r12
    339c:	d1 2c       	mov	r13, r1
    339e:	f4 e3       	ldi	r31, 0x34	; 52
    33a0:	ef 2e       	mov	r14, r31
    33a2:	f1 2c       	mov	r15, r1
    33a4:	04 e3       	ldi	r16, 0x34	; 52
    33a6:	10 e0       	ldi	r17, 0x00	; 0
    33a8:	2c eb       	ldi	r18, 0xBC	; 188
    33aa:	34 e0       	ldi	r19, 0x04	; 4
    33ac:	50 e0       	ldi	r21, 0x00	; 0
    33ae:	40 e0       	ldi	r20, 0x00	; 0
    33b0:	66 e2       	ldi	r22, 0x26	; 38
    33b2:	70 e0       	ldi	r23, 0x00	; 0
    33b4:	8d ee       	ldi	r24, 0xED	; 237
    33b6:	98 e0       	ldi	r25, 0x08	; 8
    33b8:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:162
        }
        if (id == DEVIATION_MAP_ICON) {
                display.setCursor(25, 57);  display.print(F("DEVIATION MAP"));
                display.drawBitmap(38, 0, radar_icon, 52, 52, 1);
        }
        if (id == SATELLITE_ICON) {
    33bc:	26 97       	sbiw	r28, 0x06	; 6
    33be:	09 f0       	breq	.+2      	; 0x33c2 <drawBitmap(int)+0x156>
    33c0:	44 c0       	rjmp	.+136    	; 0x344a <drawBitmap(int)+0x1de>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    33c2:	8d e0       	ldi	r24, 0x0D	; 13
    33c4:	90 e0       	ldi	r25, 0x00	; 0
    33c6:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    33ca:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    33ce:	89 e3       	ldi	r24, 0x39	; 57
    33d0:	90 e0       	ldi	r25, 0x00	; 0
    33d2:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    33d6:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z10drawBitmapi():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:163
                display.setCursor(13, 57);  display.print(F("SATELLITE TRACKER"));
    33da:	6a e8       	ldi	r22, 0x8A	; 138
    33dc:	71 e0       	ldi	r23, 0x01	; 1
    33de:	8d ee       	ldi	r24, 0xED	; 237
    33e0:	98 e0       	ldi	r25, 0x08	; 8
    33e2:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:164
                display.drawBitmap(38, 0, satellite_tracker_icon, 52, 52, 1);
    33e6:	cc 24       	eor	r12, r12
    33e8:	c3 94       	inc	r12
    33ea:	d1 2c       	mov	r13, r1
    33ec:	94 e3       	ldi	r25, 0x34	; 52
    33ee:	e9 2e       	mov	r14, r25
    33f0:	f1 2c       	mov	r15, r1
    33f2:	04 e3       	ldi	r16, 0x34	; 52
    33f4:	10 e0       	ldi	r17, 0x00	; 0
    33f6:	2e e8       	ldi	r18, 0x8E	; 142
    33f8:	32 e1       	ldi	r19, 0x12	; 18
    33fa:	1f c0       	rjmp	.+62     	; 0x343a <drawBitmap(int)+0x1ce>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:150
        }
        if (id == ALTIMETER_ICON) {
                display.setCursor(37, 57);  display.print(F("ALTIMETER"));
                display.drawBitmap(38, 0, altimeter_logo, 52, 52, 1);
        }
        if (id == HARDWARE_ICON) {
    33fc:	c3 30       	cpi	r28, 0x03	; 3
    33fe:	d1 05       	cpc	r29, r1
    3400:	81 f5       	brne	.+96     	; 0x3462 <drawBitmap(int)+0x1f6>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3402:	89 e1       	ldi	r24, 0x19	; 25
    3404:	90 e0       	ldi	r25, 0x00	; 0
    3406:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    340a:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    340e:	89 e3       	ldi	r24, 0x39	; 57
    3410:	90 e0       	ldi	r25, 0x00	; 0
    3412:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3416:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z10drawBitmapi():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:151
                display.setCursor(25, 57);  display.print(F("HARDWARE INFO"));
    341a:	69 eb       	ldi	r22, 0xB9	; 185
    341c:	71 e0       	ldi	r23, 0x01	; 1
    341e:	8d ee       	ldi	r24, 0xED	; 237
    3420:	98 e0       	ldi	r25, 0x08	; 8
    3422:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:152
                display.drawBitmap(38, 0, task_icon, 52, 52, 1);
    3426:	cc 24       	eor	r12, r12
    3428:	c3 94       	inc	r12
    342a:	d1 2c       	mov	r13, r1
    342c:	74 e3       	ldi	r23, 0x34	; 52
    342e:	e7 2e       	mov	r14, r23
    3430:	f1 2c       	mov	r15, r1
    3432:	04 e3       	ldi	r16, 0x34	; 52
    3434:	10 e0       	ldi	r17, 0x00	; 0
    3436:	2a e3       	ldi	r18, 0x3A	; 58
    3438:	39 e0       	ldi	r19, 0x09	; 9
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:164
                display.setCursor(25, 57);  display.print(F("DEVIATION MAP"));
                display.drawBitmap(38, 0, radar_icon, 52, 52, 1);
        }
        if (id == SATELLITE_ICON) {
                display.setCursor(13, 57);  display.print(F("SATELLITE TRACKER"));
                display.drawBitmap(38, 0, satellite_tracker_icon, 52, 52, 1);
    343a:	50 e0       	ldi	r21, 0x00	; 0
    343c:	40 e0       	ldi	r20, 0x00	; 0
    343e:	66 e2       	ldi	r22, 0x26	; 38
    3440:	70 e0       	ldi	r23, 0x00	; 0
    3442:	8d ee       	ldi	r24, 0xED	; 237
    3444:	98 e0       	ldi	r25, 0x08	; 8
    3446:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:166
        }
        display.display();
    344a:	8d ee       	ldi	r24, 0xED	; 237
    344c:	98 e0       	ldi	r25, 0x08	; 8
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:167
}
    344e:	df 91       	pop	r29
    3450:	cf 91       	pop	r28
    3452:	1f 91       	pop	r17
    3454:	0f 91       	pop	r16
    3456:	ff 90       	pop	r15
    3458:	ef 90       	pop	r14
    345a:	df 90       	pop	r13
    345c:	cf 90       	pop	r12
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:166
        }
        if (id == SATELLITE_ICON) {
                display.setCursor(13, 57);  display.print(F("SATELLITE TRACKER"));
                display.drawBitmap(38, 0, satellite_tracker_icon, 52, 52, 1);
        }
        display.display();
    345e:	0c 94 24 50 	jmp	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:154
        }
        if (id == HARDWARE_ICON) {
                display.setCursor(25, 57);  display.print(F("HARDWARE INFO"));
                display.drawBitmap(38, 0, task_icon, 52, 52, 1);
        }
        if (id == GPS_ICON) {
    3462:	c4 30       	cpi	r28, 0x04	; 4
    3464:	d1 05       	cpc	r29, r1
    3466:	09 f0       	breq	.+2      	; 0x346a <drawBitmap(int)+0x1fe>
    3468:	40 cf       	rjmp	.-384    	; 0x32ea <drawBitmap(int)+0x7e>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    346a:	86 e1       	ldi	r24, 0x16	; 22
    346c:	90 e0       	ldi	r25, 0x00	; 0
    346e:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    3472:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3476:	89 e3       	ldi	r24, 0x39	; 57
    3478:	90 e0       	ldi	r25, 0x00	; 0
    347a:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    347e:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z10drawBitmapi():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:155
                display.setCursor(22, 57);  display.print(F("GPS NAVIGATION"));
    3482:	6a ea       	ldi	r22, 0xAA	; 170
    3484:	71 e0       	ldi	r23, 0x01	; 1
    3486:	8d ee       	ldi	r24, 0xED	; 237
    3488:	98 e0       	ldi	r25, 0x08	; 8
    348a:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:156
                display.drawBitmap(38, 0, gps_map_icon, 52, 52, 1);
    348e:	cc 24       	eor	r12, r12
    3490:	c3 94       	inc	r12
    3492:	d1 2c       	mov	r13, r1
    3494:	54 e3       	ldi	r21, 0x34	; 52
    3496:	e5 2e       	mov	r14, r21
    3498:	f1 2c       	mov	r15, r1
    349a:	04 e3       	ldi	r16, 0x34	; 52
    349c:	10 e0       	ldi	r17, 0x00	; 0
    349e:	26 ea       	ldi	r18, 0xA6	; 166
    34a0:	3a e0       	ldi	r19, 0x0A	; 10
    34a2:	cb cf       	rjmp	.-106    	; 0x343a <drawBitmap(int)+0x1ce>

000034a4 <ShowMenuIcon(int)>:
_Z12ShowMenuIconi():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:7
        digitalWrite(USR_LED_0, LOW);
        delay(10);
        digitalWrite(USR_LED_0, HIGH);
}

void ShowMenuIcon(int bitmap_id) {
    34a4:	cf 93       	push	r28
    34a6:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:8
        if (menu.newTabFlag) {
    34a8:	20 91 39 09 	lds	r18, 0x0939	; 0x800939 <menu+0x7>
    34ac:	22 23       	and	r18, r18
    34ae:	a1 f0       	breq	.+40     	; 0x34d8 <ShowMenuIcon(int)+0x34>
    34b0:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:9
                display.clearDisplay();
    34b2:	8d ee       	ldi	r24, 0xED	; 237
    34b4:	98 e0       	ldi	r25, 0x08	; 8
    34b6:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:10
                drawBitmap(bitmap_id);
    34ba:	ce 01       	movw	r24, r28
    34bc:	0e 94 36 19 	call	0x326c	; 0x326c <drawBitmap(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:11
                delay(1000);
    34c0:	68 ee       	ldi	r22, 0xE8	; 232
    34c2:	73 e0       	ldi	r23, 0x03	; 3
    34c4:	80 e0       	ldi	r24, 0x00	; 0
    34c6:	90 e0       	ldi	r25, 0x00	; 0
    34c8:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:12
                display.clearDisplay();
    34cc:	8d ee       	ldi	r24, 0xED	; 237
    34ce:	98 e0       	ldi	r25, 0x08	; 8
    34d0:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:13
                menu.newTabFlag = false;
    34d4:	10 92 39 09 	sts	0x0939, r1	; 0x800939 <menu+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:15
        }
        logic.lastState = true;
    34d8:	81 e0       	ldi	r24, 0x01	; 1
    34da:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:16
}
    34de:	df 91       	pop	r29
    34e0:	cf 91       	pop	r28
    34e2:	08 95       	ret

000034e4 <_GLOBAL__sub_I_waypoint>:
_GLOBAL__sub_I_waypoint():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:160

        /* Draw Line from current point to Way point */
        display.drawLine(64, 32, waypoint.screen_x, waypoint.screen_y, WHITE);

        display.display();
}
    34e4:	8f 92       	push	r8
    34e6:	9f 92       	push	r9
    34e8:	af 92       	push	r10
    34ea:	bf 92       	push	r11
    34ec:	cf 92       	push	r12
    34ee:	df 92       	push	r13
    34f0:	ef 92       	push	r14
    34f2:	ff 92       	push	r15
    34f4:	0f 93       	push	r16
_ZN8eeprom_sC4Ev():
C:\Users\nyvir\Documents\GitHub\GPSKit/variable.h:52
struct logic_s {
        bool lastState = true, newState = false;
} logic;

/* EEPROM Variable */
struct eeprom_s {
    34f6:	e3 e7       	ldi	r30, 0x73	; 115
    34f8:	f9 e0       	ldi	r31, 0x09	; 9
    34fa:	11 82       	std	Z+1, r1	; 0x01
    34fc:	10 82       	st	Z, r1
    34fe:	13 82       	std	Z+3, r1	; 0x03
    3500:	12 82       	std	Z+2, r1	; 0x02
_ZN6menu_sC4Ev():
C:\Users\nyvir\Documents\GitHub\GPSKit/variable.h:59
        double eeprom_lat, lat_bias, lat_fract[3];
        double eeprom_lng, lng_bias, lng_fract[3];
} eeprom;

/* Menu Variable */
struct menu_s {
    3502:	e2 e3       	ldi	r30, 0x32	; 50
    3504:	f9 e0       	ldi	r31, 0x09	; 9
    3506:	11 82       	std	Z+1, r1	; 0x01
    3508:	10 82       	st	Z, r1
    350a:	12 82       	std	Z+2, r1	; 0x02
    350c:	14 82       	std	Z+4, r1	; 0x04
    350e:	13 82       	std	Z+3, r1	; 0x03
    3510:	16 82       	std	Z+6, r1	; 0x06
    3512:	15 82       	std	Z+5, r1	; 0x05
    3514:	17 82       	std	Z+7, r1	; 0x07
    3516:	10 86       	std	Z+8, r1	; 0x08
    3518:	11 86       	std	Z+9, r1	; 0x09
    351a:	12 86       	std	Z+10, r1	; 0x0a
    351c:	13 86       	std	Z+11, r1	; 0x0b
    351e:	14 86       	std	Z+12, r1	; 0x0c
    3520:	80 e3       	ldi	r24, 0x30	; 48
    3522:	ed e9       	ldi	r30, 0x9D	; 157
    3524:	f1 e0       	ldi	r31, 0x01	; 1
    3526:	a3 e4       	ldi	r26, 0x43	; 67
    3528:	b9 e0       	ldi	r27, 0x09	; 9
    352a:	01 90       	ld	r0, Z+
    352c:	0d 92       	st	X+, r0
    352e:	8a 95       	dec	r24
    3530:	e1 f7       	brne	.-8      	; 0x352a <_GLOBAL__sub_I_waypoint+0x46>
__static_initialization_and_destruction_0():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:36
void WaypointMenu(void);
void writeToEEPROM(int address, double value);
double decodeFromEEPROM(int address);

/* Create Objects from Classes */
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire);
    3532:	80 ea       	ldi	r24, 0xA0	; 160
    3534:	88 2e       	mov	r8, r24
    3536:	86 e8       	ldi	r24, 0x86	; 134
    3538:	98 2e       	mov	r9, r24
    353a:	aa 24       	eor	r10, r10
    353c:	a3 94       	inc	r10
    353e:	b1 2c       	mov	r11, r1
    3540:	90 e8       	ldi	r25, 0x80	; 128
    3542:	c9 2e       	mov	r12, r25
    3544:	9a e1       	ldi	r25, 0x1A	; 26
    3546:	d9 2e       	mov	r13, r25
    3548:	96 e0       	ldi	r25, 0x06	; 6
    354a:	e9 2e       	mov	r14, r25
    354c:	f1 2c       	mov	r15, r1
    354e:	0f ef       	ldi	r16, 0xFF	; 255
    3550:	23 ea       	ldi	r18, 0xA3	; 163
    3552:	39 e0       	ldi	r19, 0x09	; 9
    3554:	40 e4       	ldi	r20, 0x40	; 64
    3556:	60 e8       	ldi	r22, 0x80	; 128
    3558:	8d ee       	ldi	r24, 0xED	; 237
    355a:	98 e0       	ldi	r25, 0x08	; 8
    355c:	0e 94 f5 4a 	call	0x95ea	; 0x95ea <Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:37
LSM303 compass;
    3560:	8f eb       	ldi	r24, 0xBF	; 191
    3562:	98 e0       	ldi	r25, 0x08	; 8
    3564:	0e 94 03 5c 	call	0xb806	; 0xb806 <LSM303::LSM303()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:38
TinyGPSPlus gps;
    3568:	82 e1       	ldi	r24, 0x12	; 18
    356a:	98 e0       	ldi	r25, 0x08	; 8
    356c:	0e 94 80 61 	call	0xc300	; 0xc300 <TinyGPSPlus::TinyGPSPlus()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:39
SoftwareSerial ss(19, 20);
    3570:	20 e0       	ldi	r18, 0x00	; 0
    3572:	44 e1       	ldi	r20, 0x14	; 20
    3574:	63 e1       	ldi	r22, 0x13	; 19
    3576:	83 ef       	ldi	r24, 0xF3	; 243
    3578:	97 e0       	ldi	r25, 0x07	; 7
    357a:	0e 94 d9 60 	call	0xc1b2	; 0xc1b2 <SoftwareSerial::SoftwareSerial(signed char, signed char, bool)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:40
DHTNEW dht11(DHT11_PIN);
    357e:	62 e0       	ldi	r22, 0x02	; 2
    3580:	82 ed       	ldi	r24, 0xD2	; 210
    3582:	97 e0       	ldi	r25, 0x07	; 7
    3584:	0e 94 3a 69 	call	0xd274	; 0xd274 <DHTNEW::DHTNEW(unsigned char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:43

/* Config Custom Satellite Tracker Decoder */
TinyGPSCustom totalGPGSVMessages(gps, "GPGSV", 1); /* $GPGSV first element  */
    3588:	21 e0       	ldi	r18, 0x01	; 1
    358a:	30 e0       	ldi	r19, 0x00	; 0
    358c:	45 ee       	ldi	r20, 0xE5	; 229
    358e:	51 e0       	ldi	r21, 0x01	; 1
    3590:	62 e1       	ldi	r22, 0x12	; 18
    3592:	78 e0       	ldi	r23, 0x08	; 8
    3594:	86 ea       	ldi	r24, 0xA6	; 166
    3596:	97 e0       	ldi	r25, 0x07	; 7
    3598:	0e 94 0f 69 	call	0xd21e	; 0xd21e <TinyGPSCustom::TinyGPSCustom(TinyGPSPlus&, char const*, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:44
TinyGPSCustom messageNumber(gps, "GPGSV", 2);      /* $GPGSV second element */
    359c:	22 e0       	ldi	r18, 0x02	; 2
    359e:	30 e0       	ldi	r19, 0x00	; 0
    35a0:	45 ee       	ldi	r20, 0xE5	; 229
    35a2:	51 e0       	ldi	r21, 0x01	; 1
    35a4:	62 e1       	ldi	r22, 0x12	; 18
    35a6:	78 e0       	ldi	r23, 0x08	; 8
    35a8:	8a e7       	ldi	r24, 0x7A	; 122
    35aa:	97 e0       	ldi	r25, 0x07	; 7
    35ac:	0e 94 0f 69 	call	0xd21e	; 0xd21e <TinyGPSCustom::TinyGPSCustom(TinyGPSPlus&, char const*, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:45
TinyGPSCustom satsInView(gps, "GPGSV", 3);         /* $GPGSV third element  */
    35b0:	23 e0       	ldi	r18, 0x03	; 3
    35b2:	30 e0       	ldi	r19, 0x00	; 0
    35b4:	45 ee       	ldi	r20, 0xE5	; 229
    35b6:	51 e0       	ldi	r21, 0x01	; 1
    35b8:	62 e1       	ldi	r22, 0x12	; 18
    35ba:	78 e0       	ldi	r23, 0x08	; 8
    35bc:	8e e4       	ldi	r24, 0x4E	; 78
    35be:	97 e0       	ldi	r25, 0x07	; 7
_GLOBAL__sub_I_waypoint():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:160
    35c0:	0f 91       	pop	r16
    35c2:	ff 90       	pop	r15
    35c4:	ef 90       	pop	r14
    35c6:	df 90       	pop	r13
    35c8:	cf 90       	pop	r12
    35ca:	bf 90       	pop	r11
    35cc:	af 90       	pop	r10
    35ce:	9f 90       	pop	r9
    35d0:	8f 90       	pop	r8
__static_initialization_and_destruction_0():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:45
    35d2:	0c 94 0f 69 	jmp	0xd21e	; 0xd21e <TinyGPSCustom::TinyGPSCustom(TinyGPSPlus&, char const*, int)>

000035d6 <_GLOBAL__sub_D_waypoint>:
_GLOBAL__sub_D_waypoint():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:39

/* Create Objects from Classes */
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire);
LSM303 compass;
TinyGPSPlus gps;
SoftwareSerial ss(19, 20);
    35d6:	83 ef       	ldi	r24, 0xF3	; 243
    35d8:	97 e0       	ldi	r25, 0x07	; 7
    35da:	0e 94 7e 60 	call	0xc0fc	; 0xc0fc <SoftwareSerial::~SoftwareSerial()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:36
void WaypointMenu(void);
void writeToEEPROM(int address, double value);
double decodeFromEEPROM(int address);

/* Create Objects from Classes */
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire);
    35de:	8d ee       	ldi	r24, 0xED	; 237
    35e0:	98 e0       	ldi	r25, 0x08	; 8
    35e2:	0c 94 40 4b 	jmp	0x9680	; 0x9680 <Adafruit_SSD1306::~Adafruit_SSD1306()>

000035e6 <setup>:
setup():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:56
struct {
        bool active;
        int elevation, azimuth, snr;
} sats[MAX_SATELLITES];

void setup() {
    35e6:	af 92       	push	r10
    35e8:	bf 92       	push	r11
    35ea:	cf 92       	push	r12
    35ec:	df 92       	push	r13
    35ee:	ef 92       	push	r14
    35f0:	ff 92       	push	r15
    35f2:	0f 93       	push	r16
    35f4:	1f 93       	push	r17
    35f6:	cf 93       	push	r28
    35f8:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:58
        /* Check OLED for Error &  Clear Adafruit Logo */
        if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C))
    35fa:	01 e0       	ldi	r16, 0x01	; 1
    35fc:	21 e0       	ldi	r18, 0x01	; 1
    35fe:	4c e3       	ldi	r20, 0x3C	; 60
    3600:	62 e0       	ldi	r22, 0x02	; 2
    3602:	8d ee       	ldi	r24, 0xED	; 237
    3604:	98 e0       	ldi	r25, 0x08	; 8
    3606:	0e 94 ad 4c 	call	0x995a	; 0x995a <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)>
    360a:	81 11       	cpse	r24, r1
    360c:	03 c0       	rjmp	.+6      	; 0x3614 <setup+0x2e>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:60 (discriminator 1)
                while (true)
                        WarningAlert(); // LED Alert if the OLED did not start
    360e:	0e 94 14 19 	call	0x3228	; 0x3228 <WarningAlert()>
    3612:	fd cf       	rjmp	.-6      	; 0x360e <setup+0x28>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:61
        display.clearDisplay();
    3614:	8d ee       	ldi	r24, 0xED	; 237
    3616:	98 e0       	ldi	r25, 0x08	; 8
    3618:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:62
        display.setTextSize(1);
    361c:	61 e0       	ldi	r22, 0x01	; 1
    361e:	8d ee       	ldi	r24, 0xED	; 237
    3620:	98 e0       	ldi	r25, 0x08	; 8
    3622:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3626:	c1 e0       	ldi	r28, 0x01	; 1
    3628:	d0 e0       	ldi	r29, 0x00	; 0
    362a:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    362e:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    3632:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    3636:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    363a:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    363e:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3642:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    3646:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
setup():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:65
        display.setTextColor(WHITE);
        display.setCursor(1, 1);
        display.print(F("[  OK  ] SSD1306"));
    364a:	6b ea       	ldi	r22, 0xAB	; 171
    364c:	74 e0       	ldi	r23, 0x04	; 4
    364e:	8d ee       	ldi	r24, 0xED	; 237
    3650:	98 e0       	ldi	r25, 0x08	; 8
    3652:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:66
        display.display();
    3656:	8d ee       	ldi	r24, 0xED	; 237
    3658:	98 e0       	ldi	r25, 0x08	; 8
    365a:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:67
        delay(500);
    365e:	64 ef       	ldi	r22, 0xF4	; 244
    3660:	71 e0       	ldi	r23, 0x01	; 1
    3662:	80 e0       	ldi	r24, 0x00	; 0
    3664:	90 e0       	ldi	r25, 0x00	; 0
    3666:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:70

        /* Input Buttons */
        pinMode(A_Pin, INPUT_PULLUP);
    366a:	62 e0       	ldi	r22, 0x02	; 2
    366c:	82 e0       	ldi	r24, 0x02	; 2
    366e:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:71
        pinMode(B_Pin, INPUT_PULLUP);
    3672:	62 e0       	ldi	r22, 0x02	; 2
    3674:	81 e0       	ldi	r24, 0x01	; 1
    3676:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:72
        pinMode(C_Pin, INPUT_PULLUP);
    367a:	62 e0       	ldi	r22, 0x02	; 2
    367c:	80 e0       	ldi	r24, 0x00	; 0
    367e:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:75

        /* GPIO & Interrupt Setup */
        attachInterrupt(digitalPinToInterrupt(A_Pin), AButtonISR, FALLING);
    3682:	42 e0       	ldi	r20, 0x02	; 2
    3684:	50 e0       	ldi	r21, 0x00	; 0
    3686:	66 e9       	ldi	r22, 0x96	; 150
    3688:	70 e1       	ldi	r23, 0x10	; 16
    368a:	82 e0       	ldi	r24, 0x02	; 2
    368c:	0e 94 5c 69 	call	0xd2b8	; 0xd2b8 <attachInterrupt>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3690:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    3694:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3698:	8b e0       	ldi	r24, 0x0B	; 11
    369a:	90 e0       	ldi	r25, 0x00	; 0
    369c:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    36a0:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
setup():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:84
        // pinMode(USR_LED_0, OUTPUT); digitalWrite(USR_LED_0, LOW);
        // pinMode(USR_LED_1, OUTPUT); digitalWrite(USR_LED_1, HIGH);
        // pinMode(USR_LED_2, OUTPUT); digitalWrite(USR_LED_2, LOW);

        display.setCursor(1, 11);
        display.print(F("[  OK  ] GPIO"));
    36a4:	6d e9       	ldi	r22, 0x9D	; 157
    36a6:	74 e0       	ldi	r23, 0x04	; 4
    36a8:	8d ee       	ldi	r24, 0xED	; 237
    36aa:	98 e0       	ldi	r25, 0x08	; 8
    36ac:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:85
        display.display();
    36b0:	8d ee       	ldi	r24, 0xED	; 237
    36b2:	98 e0       	ldi	r25, 0x08	; 8
    36b4:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:86
        delay(500);
    36b8:	64 ef       	ldi	r22, 0xF4	; 244
    36ba:	71 e0       	ldi	r23, 0x01	; 1
    36bc:	80 e0       	ldi	r24, 0x00	; 0
    36be:	90 e0       	ldi	r25, 0x00	; 0
    36c0:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:89

        /* SoftwareSerial Setup & Init all the uninitialized TinyGPSCustom objects */
        ss.begin(9600);
    36c4:	40 e8       	ldi	r20, 0x80	; 128
    36c6:	55 e2       	ldi	r21, 0x25	; 37
    36c8:	60 e0       	ldi	r22, 0x00	; 0
    36ca:	70 e0       	ldi	r23, 0x00	; 0
    36cc:	83 ef       	ldi	r24, 0xF3	; 243
    36ce:	97 e0       	ldi	r25, 0x07	; 7
    36d0:	0e 94 04 61 	call	0xc208	; 0xc208 <SoftwareSerial::begin(long)>
    36d4:	2e e9       	ldi	r18, 0x9E	; 158
    36d6:	a2 2e       	mov	r10, r18
    36d8:	26 e0       	ldi	r18, 0x06	; 6
    36da:	b2 2e       	mov	r11, r18
    36dc:	3e ee       	ldi	r19, 0xEE	; 238
    36de:	c3 2e       	mov	r12, r19
    36e0:	35 e0       	ldi	r19, 0x05	; 5
    36e2:	d3 2e       	mov	r13, r19
    36e4:	4e e3       	ldi	r20, 0x3E	; 62
    36e6:	e4 2e       	mov	r14, r20
    36e8:	45 e0       	ldi	r20, 0x05	; 5
    36ea:	f4 2e       	mov	r15, r20
    36ec:	0e e8       	ldi	r16, 0x8E	; 142
    36ee:	14 e0       	ldi	r17, 0x04	; 4
    36f0:	c4 e0       	ldi	r28, 0x04	; 4
    36f2:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:91 (discriminator 2)
        for (int i = 0; i < 4; ++i) {
                satNumber[i].begin(gps, "GPGSV", 4 + 4 * i);  /* offsets 4, 8, 12, 16 */
    36f4:	9e 01       	movw	r18, r28
    36f6:	45 ee       	ldi	r20, 0xE5	; 229
    36f8:	51 e0       	ldi	r21, 0x01	; 1
    36fa:	62 e1       	ldi	r22, 0x12	; 18
    36fc:	78 e0       	ldi	r23, 0x08	; 8
    36fe:	c5 01       	movw	r24, r10
    3700:	0e 94 ee 68 	call	0xd1dc	; 0xd1dc <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:92 (discriminator 2)
                elevation[i].begin(gps, "GPGSV", 5 + 4 * i);  /* offsets 5, 9, 13, 17 */
    3704:	9e 01       	movw	r18, r28
    3706:	2f 5f       	subi	r18, 0xFF	; 255
    3708:	3f 4f       	sbci	r19, 0xFF	; 255
    370a:	45 ee       	ldi	r20, 0xE5	; 229
    370c:	51 e0       	ldi	r21, 0x01	; 1
    370e:	62 e1       	ldi	r22, 0x12	; 18
    3710:	78 e0       	ldi	r23, 0x08	; 8
    3712:	c6 01       	movw	r24, r12
    3714:	0e 94 ee 68 	call	0xd1dc	; 0xd1dc <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:93 (discriminator 2)
                azimuth[i].begin(gps, "GPGSV", 6 + 4 * i);    /* offsets 6, 10, 14, 18 */
    3718:	9e 01       	movw	r18, r28
    371a:	2e 5f       	subi	r18, 0xFE	; 254
    371c:	3f 4f       	sbci	r19, 0xFF	; 255
    371e:	45 ee       	ldi	r20, 0xE5	; 229
    3720:	51 e0       	ldi	r21, 0x01	; 1
    3722:	62 e1       	ldi	r22, 0x12	; 18
    3724:	78 e0       	ldi	r23, 0x08	; 8
    3726:	c7 01       	movw	r24, r14
    3728:	0e 94 ee 68 	call	0xd1dc	; 0xd1dc <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:94 (discriminator 2)
                snr[i].begin(gps, "GPGSV", 7 + 4 * i);        /* offsets 7, 11, 15, 19 */
    372c:	9e 01       	movw	r18, r28
    372e:	2d 5f       	subi	r18, 0xFD	; 253
    3730:	3f 4f       	sbci	r19, 0xFF	; 255
    3732:	45 ee       	ldi	r20, 0xE5	; 229
    3734:	51 e0       	ldi	r21, 0x01	; 1
    3736:	62 e1       	ldi	r22, 0x12	; 18
    3738:	78 e0       	ldi	r23, 0x08	; 8
    373a:	c8 01       	movw	r24, r16
    373c:	0e 94 ee 68 	call	0xd1dc	; 0xd1dc <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>
    3740:	8c e2       	ldi	r24, 0x2C	; 44
    3742:	a8 0e       	add	r10, r24
    3744:	b1 1c       	adc	r11, r1
    3746:	24 96       	adiw	r28, 0x04	; 4
    3748:	8c e2       	ldi	r24, 0x2C	; 44
    374a:	c8 0e       	add	r12, r24
    374c:	d1 1c       	adc	r13, r1
    374e:	8c e2       	ldi	r24, 0x2C	; 44
    3750:	e8 0e       	add	r14, r24
    3752:	f1 1c       	adc	r15, r1
    3754:	04 5d       	subi	r16, 0xD4	; 212
    3756:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:90 (discriminator 2)
        display.display();
        delay(500);

        /* SoftwareSerial Setup & Init all the uninitialized TinyGPSCustom objects */
        ss.begin(9600);
        for (int i = 0; i < 4; ++i) {
    3758:	c4 31       	cpi	r28, 0x14	; 20
    375a:	d1 05       	cpc	r29, r1
    375c:	59 f6       	brne	.-106    	; 0x36f4 <setup+0x10e>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    375e:	c1 e0       	ldi	r28, 0x01	; 1
    3760:	d0 e0       	ldi	r29, 0x00	; 0
    3762:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    3766:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    376a:	85 e1       	ldi	r24, 0x15	; 21
    376c:	90 e0       	ldi	r25, 0x00	; 0
    376e:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3772:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3776:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    377a:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    377e:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    3782:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
setup():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:98
                azimuth[i].begin(gps, "GPGSV", 6 + 4 * i);    /* offsets 6, 10, 14, 18 */
                snr[i].begin(gps, "GPGSV", 7 + 4 * i);        /* offsets 7, 11, 15, 19 */
        }
        display.setCursor(1, 21);
        display.setTextColor(WHITE);
        display.print(F("[  OK  ] NEO-6M"));
    3786:	6d e8       	ldi	r22, 0x8D	; 141
    3788:	74 e0       	ldi	r23, 0x04	; 4
    378a:	8d ee       	ldi	r24, 0xED	; 237
    378c:	98 e0       	ldi	r25, 0x08	; 8
    378e:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:99
        display.display();
    3792:	8d ee       	ldi	r24, 0xED	; 237
    3794:	98 e0       	ldi	r25, 0x08	; 8
    3796:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:100
        delay(500);
    379a:	64 ef       	ldi	r22, 0xF4	; 244
    379c:	71 e0       	ldi	r23, 0x01	; 1
    379e:	80 e0       	ldi	r24, 0x00	; 0
    37a0:	90 e0       	ldi	r25, 0x00	; 0
    37a2:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:103

        /* LSM303 Compass Setup */
        Wire.begin();
    37a6:	83 ea       	ldi	r24, 0xA3	; 163
    37a8:	99 e0       	ldi	r25, 0x09	; 9
    37aa:	0e 94 09 52 	call	0xa412	; 0xa412 <TwoWire::begin()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:104
        compass.init();
    37ae:	42 e0       	ldi	r20, 0x02	; 2
    37b0:	50 e0       	ldi	r21, 0x00	; 0
    37b2:	64 e0       	ldi	r22, 0x04	; 4
    37b4:	70 e0       	ldi	r23, 0x00	; 0
    37b6:	8f eb       	ldi	r24, 0xBF	; 191
    37b8:	98 e0       	ldi	r25, 0x08	; 8
    37ba:	0e 94 01 5e 	call	0xbc02	; 0xbc02 <LSM303::init(LSM303::deviceType, LSM303::sa0State)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:105
        compass.enableDefault();
    37be:	8f eb       	ldi	r24, 0xBF	; 191
    37c0:	98 e0       	ldi	r25, 0x08	; 8
    37c2:	0e 94 6e 5c 	call	0xb8dc	; 0xb8dc <LSM303::enableDefault()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:106
        compass.m_min = (LSM303::vector<int16_t>) {
    37c6:	86 e0       	ldi	r24, 0x06	; 6
    37c8:	ed ec       	ldi	r30, 0xCD	; 205
    37ca:	f1 e0       	ldi	r31, 0x01	; 1
    37cc:	a1 ed       	ldi	r26, 0xD1	; 209
    37ce:	b8 e0       	ldi	r27, 0x08	; 8
    37d0:	01 90       	ld	r0, Z+
    37d2:	0d 92       	st	X+, r0
    37d4:	8a 95       	dec	r24
    37d6:	e1 f7       	brne	.-8      	; 0x37d0 <setup+0x1ea>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:109
                -32767, -32767, -32767
        };
        compass.m_max = (LSM303::vector<int16_t>) {
    37d8:	86 e0       	ldi	r24, 0x06	; 6
    37da:	e3 ed       	ldi	r30, 0xD3	; 211
    37dc:	f1 e0       	ldi	r31, 0x01	; 1
    37de:	ab ec       	ldi	r26, 0xCB	; 203
    37e0:	b8 e0       	ldi	r27, 0x08	; 8
    37e2:	01 90       	ld	r0, Z+
    37e4:	0d 92       	st	X+, r0
    37e6:	8a 95       	dec	r24
    37e8:	e1 f7       	brne	.-8      	; 0x37e2 <setup+0x1fc>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    37ea:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    37ee:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    37f2:	8f e1       	ldi	r24, 0x1F	; 31
    37f4:	90 e0       	ldi	r25, 0x00	; 0
    37f6:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    37fa:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
setup():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:113
                +32767, +32767, +32767
        };
        display.setCursor(1, 31);
        display.print(F("[  OK  ] LSM303DLHC"));
    37fe:	69 e7       	ldi	r22, 0x79	; 121
    3800:	74 e0       	ldi	r23, 0x04	; 4
    3802:	8d ee       	ldi	r24, 0xED	; 237
    3804:	98 e0       	ldi	r25, 0x08	; 8
    3806:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:114
        display.display();
    380a:	8d ee       	ldi	r24, 0xED	; 237
    380c:	98 e0       	ldi	r25, 0x08	; 8
    380e:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:115
        delay(500);
    3812:	64 ef       	ldi	r22, 0xF4	; 244
    3814:	71 e0       	ldi	r23, 0x01	; 1
    3816:	80 e0       	ldi	r24, 0x00	; 0
    3818:	90 e0       	ldi	r25, 0x00	; 0
    381a:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    381e:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    3822:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3826:	89 e2       	ldi	r24, 0x29	; 41
    3828:	90 e0       	ldi	r25, 0x00	; 0
    382a:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    382e:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
setup():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:119

        /* Show DHT11 Initialzaiton Info */
        display.setCursor(1, 41);
        display.print(F("[FAILED] DHT11"));
    3832:	6a e6       	ldi	r22, 0x6A	; 106
    3834:	74 e0       	ldi	r23, 0x04	; 4
    3836:	8d ee       	ldi	r24, 0xED	; 237
    3838:	98 e0       	ldi	r25, 0x08	; 8
    383a:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:120
        display.display();
    383e:	8d ee       	ldi	r24, 0xED	; 237
    3840:	98 e0       	ldi	r25, 0x08	; 8
    3842:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:123

        /* Blinking Cursor */
        gps_var.show_question_mark = !gps_var.show_question_mark;
    3846:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    384a:	91 e0       	ldi	r25, 0x01	; 1
    384c:	89 27       	eor	r24, r25
    384e:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
    3852:	c5 e0       	ldi	r28, 0x05	; 5
    3854:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:126
        for (int blink = 0; blink < 5; blink++) {
                display.fillRect(1, 51, 7, 7, BLACK); /* Update Screen */
                gps_var.show_question_mark = !gps_var.show_question_mark;
    3856:	dd 24       	eor	r13, r13
    3858:	d3 94       	inc	r13
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:125
        display.display();

        /* Blinking Cursor */
        gps_var.show_question_mark = !gps_var.show_question_mark;
        for (int blink = 0; blink < 5; blink++) {
                display.fillRect(1, 51, 7, 7, BLACK); /* Update Screen */
    385a:	f1 2c       	mov	r15, r1
    385c:	e1 2c       	mov	r14, r1
    385e:	07 e0       	ldi	r16, 0x07	; 7
    3860:	10 e0       	ldi	r17, 0x00	; 0
    3862:	27 e0       	ldi	r18, 0x07	; 7
    3864:	30 e0       	ldi	r19, 0x00	; 0
    3866:	43 e3       	ldi	r20, 0x33	; 51
    3868:	50 e0       	ldi	r21, 0x00	; 0
    386a:	61 e0       	ldi	r22, 0x01	; 1
    386c:	70 e0       	ldi	r23, 0x00	; 0
    386e:	8d ee       	ldi	r24, 0xED	; 237
    3870:	98 e0       	ldi	r25, 0x08	; 8
    3872:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:126
                gps_var.show_question_mark = !gps_var.show_question_mark;
    3876:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    387a:	8d 25       	eor	r24, r13
    387c:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3880:	21 e0       	ldi	r18, 0x01	; 1
    3882:	30 e0       	ldi	r19, 0x00	; 0
    3884:	30 93 fa 08 	sts	0x08FA, r19	; 0x8008fa <display+0xd>
    3888:	20 93 f9 08 	sts	0x08F9, r18	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    388c:	23 e3       	ldi	r18, 0x33	; 51
    388e:	30 e0       	ldi	r19, 0x00	; 0
    3890:	30 93 fc 08 	sts	0x08FC, r19	; 0x8008fc <display+0xf>
    3894:	20 93 fb 08 	sts	0x08FB, r18	; 0x8008fb <display+0xe>
setup():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:129
                display.setCursor(1, 51);
                if (gps_var.show_question_mark)
                        display.print('_');
    3898:	6f e5       	ldi	r22, 0x5F	; 95
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:128
        gps_var.show_question_mark = !gps_var.show_question_mark;
        for (int blink = 0; blink < 5; blink++) {
                display.fillRect(1, 51, 7, 7, BLACK); /* Update Screen */
                gps_var.show_question_mark = !gps_var.show_question_mark;
                display.setCursor(1, 51);
                if (gps_var.show_question_mark)
    389a:	81 11       	cpse	r24, r1
    389c:	01 c0       	rjmp	.+2      	; 0x38a0 <setup+0x2ba>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:131
                        display.print('_');
                else
                        display.print(' ');
    389e:	60 e2       	ldi	r22, 0x20	; 32
    38a0:	8d ee       	ldi	r24, 0xED	; 237
    38a2:	98 e0       	ldi	r25, 0x08	; 8
    38a4:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:132
                display.display();
    38a8:	8d ee       	ldi	r24, 0xED	; 237
    38aa:	98 e0       	ldi	r25, 0x08	; 8
    38ac:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:133
                delay(300);
    38b0:	6c e2       	ldi	r22, 0x2C	; 44
    38b2:	71 e0       	ldi	r23, 0x01	; 1
    38b4:	80 e0       	ldi	r24, 0x00	; 0
    38b6:	90 e0       	ldi	r25, 0x00	; 0
    38b8:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
    38bc:	21 97       	sbiw	r28, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:124
        display.print(F("[FAILED] DHT11"));
        display.display();

        /* Blinking Cursor */
        gps_var.show_question_mark = !gps_var.show_question_mark;
        for (int blink = 0; blink < 5; blink++) {
    38be:	69 f6       	brne	.-102    	; 0x385a <setup+0x274>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:135
                else
                        display.print(' ');
                display.display();
                delay(300);
        }
        delay(1000);
    38c0:	68 ee       	ldi	r22, 0xE8	; 232
    38c2:	73 e0       	ldi	r23, 0x03	; 3
    38c4:	80 e0       	ldi	r24, 0x00	; 0
    38c6:	90 e0       	ldi	r25, 0x00	; 0
    38c8:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:136
        display.clearDisplay();
    38cc:	8d ee       	ldi	r24, 0xED	; 237
    38ce:	98 e0       	ldi	r25, 0x08	; 8
    38d0:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:139

        /* Show Rangeman Car Logo */
        display.drawBitmap(28, 2, borany_icon, 72, 60, 1);
    38d4:	cc 24       	eor	r12, r12
    38d6:	c3 94       	inc	r12
    38d8:	d1 2c       	mov	r13, r1
    38da:	9c e3       	ldi	r25, 0x3C	; 60
    38dc:	e9 2e       	mov	r14, r25
    38de:	f1 2c       	mov	r15, r1
    38e0:	08 e4       	ldi	r16, 0x48	; 72
    38e2:	10 e0       	ldi	r17, 0x00	; 0
    38e4:	22 e1       	ldi	r18, 0x12	; 18
    38e6:	3c e0       	ldi	r19, 0x0C	; 12
    38e8:	42 e0       	ldi	r20, 0x02	; 2
    38ea:	50 e0       	ldi	r21, 0x00	; 0
    38ec:	6c e1       	ldi	r22, 0x1C	; 28
    38ee:	70 e0       	ldi	r23, 0x00	; 0
    38f0:	8d ee       	ldi	r24, 0xED	; 237
    38f2:	98 e0       	ldi	r25, 0x08	; 8
    38f4:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:140
        display.display();
    38f8:	8d ee       	ldi	r24, 0xED	; 237
    38fa:	98 e0       	ldi	r25, 0x08	; 8
    38fc:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:141
        delay(3000);
    3900:	68 eb       	ldi	r22, 0xB8	; 184
    3902:	7b e0       	ldi	r23, 0x0B	; 11
    3904:	80 e0       	ldi	r24, 0x00	; 0
    3906:	90 e0       	ldi	r25, 0x00	; 0
    3908:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:142
        display.clearDisplay();
    390c:	8d ee       	ldi	r24, 0xED	; 237
    390e:	98 e0       	ldi	r25, 0x08	; 8
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:143
}
    3910:	df 91       	pop	r29
    3912:	cf 91       	pop	r28
    3914:	1f 91       	pop	r17
    3916:	0f 91       	pop	r16
    3918:	ff 90       	pop	r15
    391a:	ef 90       	pop	r14
    391c:	df 90       	pop	r13
    391e:	cf 90       	pop	r12
    3920:	bf 90       	pop	r11
    3922:	af 90       	pop	r10
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:142

        /* Show Rangeman Car Logo */
        display.drawBitmap(28, 2, borany_icon, 72, 60, 1);
        display.display();
        delay(3000);
        display.clearDisplay();
    3924:	0c 94 8f 4c 	jmp	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>

00003928 <StartPointLog()>:
_Z13StartPointLogv():
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:1
void StartPointLog(void) {
    3928:	4f 92       	push	r4
    392a:	5f 92       	push	r5
    392c:	6f 92       	push	r6
    392e:	7f 92       	push	r7
    3930:	af 92       	push	r10
    3932:	bf 92       	push	r11
    3934:	cf 92       	push	r12
    3936:	df 92       	push	r13
    3938:	ef 92       	push	r14
    393a:	ff 92       	push	r15
    393c:	0f 93       	push	r16
    393e:	1f 93       	push	r17
    3940:	cf 93       	push	r28
    3942:	df 93       	push	r29
    3944:	00 d0       	rcall	.+0      	; 0x3946 <StartPointLog()+0x1e>
    3946:	00 d0       	rcall	.+0      	; 0x3948 <StartPointLog()+0x20>
    3948:	cd b7       	in	r28, 0x3d	; 61
    394a:	de b7       	in	r29, 0x3e	; 62
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:3
  /* Show Icon Once When Press and Hold */
  if (!digitalRead(A_Pin)) logic.newState = true;
    394c:	82 e0       	ldi	r24, 0x02	; 2
    394e:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    3952:	89 2b       	or	r24, r25
    3954:	19 f4       	brne	.+6      	; 0x395c <StartPointLog()+0x34>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:3 (discriminator 1)
    3956:	81 e0       	ldi	r24, 0x01	; 1
    3958:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <logic+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:4
  if (logic.newState == logic.lastState) menu.newTabFlag = true;
    395c:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <logic+0x1>
    3960:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    3964:	98 13       	cpse	r25, r24
    3966:	03 c0       	rjmp	.+6      	; 0x396e <StartPointLog()+0x46>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:4 (discriminator 1)
    3968:	81 e0       	ldi	r24, 0x01	; 1
    396a:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <menu+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:5
  if (menu.newTabFlag) {
    396e:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <menu+0x7>
    3972:	88 23       	and	r24, r24
    3974:	09 f4       	brne	.+2      	; 0x3978 <StartPointLog()+0x50>
    3976:	49 c0       	rjmp	.+146    	; 0x3a0a <StartPointLog()+0xe2>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:6
    display.setTextSize(1);
    3978:	61 e0       	ldi	r22, 0x01	; 1
    397a:	8d ee       	ldi	r24, 0xED	; 237
    397c:	98 e0       	ldi	r25, 0x08	; 8
    397e:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3982:	81 e0       	ldi	r24, 0x01	; 1
    3984:	90 e0       	ldi	r25, 0x00	; 0
    3986:	90 93 00 09 	sts	0x0900, r25	; 0x800900 <display+0x13>
    398a:	80 93 ff 08 	sts	0x08FF, r24	; 0x8008ff <display+0x12>
    398e:	90 93 fe 08 	sts	0x08FE, r25	; 0x8008fe <display+0x11>
    3992:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <display+0x10>
_Z13StartPointLogv():
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:8
    display.setTextColor(WHITE);
    display.clearDisplay();
    3996:	8d ee       	ldi	r24, 0xED	; 237
    3998:	98 e0       	ldi	r25, 0x08	; 8
    399a:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:9
    display.drawBitmap(40, 0, route_icon, 54, 54, 1);
    399e:	cc 24       	eor	r12, r12
    39a0:	c3 94       	inc	r12
    39a2:	d1 2c       	mov	r13, r1
    39a4:	56 e3       	ldi	r21, 0x36	; 54
    39a6:	e5 2e       	mov	r14, r21
    39a8:	f1 2c       	mov	r15, r1
    39aa:	06 e3       	ldi	r16, 0x36	; 54
    39ac:	10 e0       	ldi	r17, 0x00	; 0
    39ae:	2e e2       	ldi	r18, 0x2E	; 46
    39b0:	3e e0       	ldi	r19, 0x0E	; 14
    39b2:	50 e0       	ldi	r21, 0x00	; 0
    39b4:	40 e0       	ldi	r20, 0x00	; 0
    39b6:	68 e2       	ldi	r22, 0x28	; 40
    39b8:	70 e0       	ldi	r23, 0x00	; 0
    39ba:	8d ee       	ldi	r24, 0xED	; 237
    39bc:	98 e0       	ldi	r25, 0x08	; 8
    39be:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    39c2:	8c e1       	ldi	r24, 0x1C	; 28
    39c4:	90 e0       	ldi	r25, 0x00	; 0
    39c6:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    39ca:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    39ce:	89 e3       	ldi	r24, 0x39	; 57
    39d0:	90 e0       	ldi	r25, 0x00	; 0
    39d2:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    39d6:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z13StartPointLogv():
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:11
    display.setCursor(28, 57);
    display.print(F("DATA LOGGING"));
    39da:	62 e3       	ldi	r22, 0x32	; 50
    39dc:	72 e0       	ldi	r23, 0x02	; 2
    39de:	8d ee       	ldi	r24, 0xED	; 237
    39e0:	98 e0       	ldi	r25, 0x08	; 8
    39e2:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:12
    display.display();
    39e6:	8d ee       	ldi	r24, 0xED	; 237
    39e8:	98 e0       	ldi	r25, 0x08	; 8
    39ea:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:13
    delay(1000);
    39ee:	68 ee       	ldi	r22, 0xE8	; 232
    39f0:	73 e0       	ldi	r23, 0x03	; 3
    39f2:	80 e0       	ldi	r24, 0x00	; 0
    39f4:	90 e0       	ldi	r25, 0x00	; 0
    39f6:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:14
    display.clearDisplay();
    39fa:	8d ee       	ldi	r24, 0xED	; 237
    39fc:	98 e0       	ldi	r25, 0x08	; 8
    39fe:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:15
    menu.newTabFlag = false;
    3a02:	10 92 39 09 	sts	0x0939, r1	; 0x800939 <menu+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:16
    logic.lastState = false;
    3a06:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:20
  }

  /* Setup Start Point Log GUI */
  display.clearDisplay();
    3a0a:	8d ee       	ldi	r24, 0xED	; 237
    3a0c:	98 e0       	ldi	r25, 0x08	; 8
    3a0e:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:21
  display.setTextSize(1);
    3a12:	61 e0       	ldi	r22, 0x01	; 1
    3a14:	8d ee       	ldi	r24, 0xED	; 237
    3a16:	98 e0       	ldi	r25, 0x08	; 8
    3a18:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3a1c:	81 e0       	ldi	r24, 0x01	; 1
    3a1e:	90 e0       	ldi	r25, 0x00	; 0
    3a20:	90 93 00 09 	sts	0x0900, r25	; 0x800900 <display+0x13>
    3a24:	80 93 ff 08 	sts	0x08FF, r24	; 0x8008ff <display+0x12>
    3a28:	90 93 fe 08 	sts	0x08FE, r25	; 0x8008fe <display+0x11>
    3a2c:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3a30:	2f e1       	ldi	r18, 0x1F	; 31
    3a32:	c2 2e       	mov	r12, r18
    3a34:	d1 2c       	mov	r13, r1
    3a36:	d0 92 fa 08 	sts	0x08FA, r13	; 0x8008fa <display+0xd>
    3a3a:	c0 92 f9 08 	sts	0x08F9, r12	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3a3e:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3a42:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z13StartPointLogv():
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:24
  display.setTextColor(WHITE);
  display.setCursor(31, 1);
  display.print(F("START POINT"));
    3a46:	66 e2       	ldi	r22, 0x26	; 38
    3a48:	72 e0       	ldi	r23, 0x02	; 2
    3a4a:	8d ee       	ldi	r24, 0xED	; 237
    3a4c:	98 e0       	ldi	r25, 0x08	; 8
    3a4e:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3a52:	81 e0       	ldi	r24, 0x01	; 1
    3a54:	90 e0       	ldi	r25, 0x00	; 0
    3a56:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    3a5a:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3a5e:	8b e0       	ldi	r24, 0x0B	; 11
    3a60:	90 e0       	ldi	r25, 0x00	; 0
    3a62:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3a66:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z13StartPointLogv():
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:26
  display.setCursor(1, 11);
  display.print(gps_var.start_latitude, 6);
    3a6a:	40 91 24 01 	lds	r20, 0x0124	; 0x800124 <gps_var+0x6>
    3a6e:	50 91 25 01 	lds	r21, 0x0125	; 0x800125 <gps_var+0x7>
    3a72:	60 91 26 01 	lds	r22, 0x0126	; 0x800126 <gps_var+0x8>
    3a76:	70 91 27 01 	lds	r23, 0x0127	; 0x800127 <gps_var+0x9>
    3a7a:	26 e0       	ldi	r18, 0x06	; 6
    3a7c:	30 e0       	ldi	r19, 0x00	; 0
    3a7e:	8d ee       	ldi	r24, 0xED	; 237
    3a80:	98 e0       	ldi	r25, 0x08	; 8
    3a82:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:27
  display.print(',');
    3a86:	6c e2       	ldi	r22, 0x2C	; 44
    3a88:	8d ee       	ldi	r24, 0xED	; 237
    3a8a:	98 e0       	ldi	r25, 0x08	; 8
    3a8c:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:28
  display.print(gps_var.start_longitude, 6);
    3a90:	40 91 28 01 	lds	r20, 0x0128	; 0x800128 <gps_var+0xa>
    3a94:	50 91 29 01 	lds	r21, 0x0129	; 0x800129 <gps_var+0xb>
    3a98:	60 91 2a 01 	lds	r22, 0x012A	; 0x80012a <gps_var+0xc>
    3a9c:	70 91 2b 01 	lds	r23, 0x012B	; 0x80012b <gps_var+0xd>
    3aa0:	26 e0       	ldi	r18, 0x06	; 6
    3aa2:	30 e0       	ldi	r19, 0x00	; 0
    3aa4:	8d ee       	ldi	r24, 0xED	; 237
    3aa6:	98 e0       	ldi	r25, 0x08	; 8
    3aa8:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3aac:	81 e0       	ldi	r24, 0x01	; 1
    3aae:	90 e0       	ldi	r25, 0x00	; 0
    3ab0:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    3ab4:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3ab8:	85 e1       	ldi	r24, 0x15	; 21
    3aba:	90 e0       	ldi	r25, 0x00	; 0
    3abc:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3ac0:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z13StartPointLogv():
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:32

  /* Calculation Distance from Start Point */
  display.setCursor(1, 21);
  display.fillRect(0, 20, 128, 9, WHITE);
    3ac4:	ee 24       	eor	r14, r14
    3ac6:	e3 94       	inc	r14
    3ac8:	f1 2c       	mov	r15, r1
    3aca:	09 e0       	ldi	r16, 0x09	; 9
    3acc:	10 e0       	ldi	r17, 0x00	; 0
    3ace:	20 e8       	ldi	r18, 0x80	; 128
    3ad0:	30 e0       	ldi	r19, 0x00	; 0
    3ad2:	44 e1       	ldi	r20, 0x14	; 20
    3ad4:	50 e0       	ldi	r21, 0x00	; 0
    3ad6:	70 e0       	ldi	r23, 0x00	; 0
    3ad8:	60 e0       	ldi	r22, 0x00	; 0
    3ada:	8d ee       	ldi	r24, 0xED	; 237
    3adc:	98 e0       	ldi	r25, 0x08	; 8
    3ade:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3ae2:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    3ae6:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    3aea:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    3aee:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_Z13StartPointLogv():
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:34
  display.setTextColor(BLACK);
  display.print(F("DIST. FROM START PNT"));
    3af2:	61 e1       	ldi	r22, 0x11	; 17
    3af4:	72 e0       	ldi	r23, 0x02	; 2
    3af6:	8d ee       	ldi	r24, 0xED	; 237
    3af8:	98 e0       	ldi	r25, 0x08	; 8
    3afa:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3afe:	f0 92 fa 08 	sts	0x08FA, r15	; 0x8008fa <display+0xd>
    3b02:	e0 92 f9 08 	sts	0x08F9, r14	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3b06:	d0 92 fc 08 	sts	0x08FC, r13	; 0x8008fc <display+0xf>
    3b0a:	c0 92 fb 08 	sts	0x08FB, r12	; 0x8008fb <display+0xe>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3b0e:	f0 92 00 09 	sts	0x0900, r15	; 0x800900 <display+0x13>
    3b12:	e0 92 ff 08 	sts	0x08FF, r14	; 0x8008ff <display+0x12>
    3b16:	f0 92 fe 08 	sts	0x08FE, r15	; 0x8008fe <display+0x11>
    3b1a:	e0 92 fd 08 	sts	0x08FD, r14	; 0x8008fd <display+0x10>
_Z13StartPointLogv():
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:38
  display.setCursor(1, 31);
  display.setTextColor(WHITE);

  gps_var.distanceFromStartPoint = gps.distanceBetween(
    3b1e:	82 e1       	ldi	r24, 0x12	; 18
    3b20:	98 e0       	ldi	r25, 0x08	; 8
    3b22:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    3b26:	5b 01       	movw	r10, r22
    3b28:	6c 01       	movw	r12, r24
    3b2a:	82 e1       	ldi	r24, 0x12	; 18
    3b2c:	98 e0       	ldi	r25, 0x08	; 8
    3b2e:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
    3b32:	7b 01       	movw	r14, r22
    3b34:	8c 01       	movw	r16, r24
    3b36:	20 91 28 01 	lds	r18, 0x0128	; 0x800128 <gps_var+0xa>
    3b3a:	30 91 29 01 	lds	r19, 0x0129	; 0x800129 <gps_var+0xb>
    3b3e:	40 91 2a 01 	lds	r20, 0x012A	; 0x80012a <gps_var+0xc>
    3b42:	50 91 2b 01 	lds	r21, 0x012B	; 0x80012b <gps_var+0xd>
    3b46:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <gps_var+0x6>
    3b4a:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <gps_var+0x7>
    3b4e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <gps_var+0x8>
    3b52:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <gps_var+0x9>
    3b56:	0e 94 fe 62 	call	0xc5fc	; 0xc5fc <TinyGPSPlus::distanceBetween(double, double, double, double)>
    3b5a:	60 93 2c 01 	sts	0x012C, r22	; 0x80012c <gps_var+0xe>
    3b5e:	70 93 2d 01 	sts	0x012D, r23	; 0x80012d <gps_var+0xf>
    3b62:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <gps_var+0x10>
    3b66:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <gps_var+0x11>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:43
                                     gps_var.start_latitude, gps_var.start_longitude,
                                     gps.location.lat(), gps.location.lng());

  /* Set Distance From Start Point to 0 if Invalid*/
  if ((gps_var.start_latitude == 0) && (gps_var.start_longitude == 0))
    3b6a:	20 e0       	ldi	r18, 0x00	; 0
    3b6c:	30 e0       	ldi	r19, 0x00	; 0
    3b6e:	a9 01       	movw	r20, r18
    3b70:	60 91 24 01 	lds	r22, 0x0124	; 0x800124 <gps_var+0x6>
    3b74:	70 91 25 01 	lds	r23, 0x0125	; 0x800125 <gps_var+0x7>
    3b78:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <gps_var+0x8>
    3b7c:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <gps_var+0x9>
    3b80:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    3b84:	81 11       	cpse	r24, r1
    3b86:	17 c0       	rjmp	.+46     	; 0x3bb6 <StartPointLog()+0x28e>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:43 (discriminator 1)
    3b88:	20 e0       	ldi	r18, 0x00	; 0
    3b8a:	30 e0       	ldi	r19, 0x00	; 0
    3b8c:	a9 01       	movw	r20, r18
    3b8e:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <gps_var+0xa>
    3b92:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <gps_var+0xb>
    3b96:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <gps_var+0xc>
    3b9a:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <gps_var+0xd>
    3b9e:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    3ba2:	81 11       	cpse	r24, r1
    3ba4:	08 c0       	rjmp	.+16     	; 0x3bb6 <StartPointLog()+0x28e>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:44
    gps_var.distanceFromStartPoint = 0;
    3ba6:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <gps_var+0xe>
    3baa:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <gps_var+0xf>
    3bae:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <gps_var+0x10>
    3bb2:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <gps_var+0x11>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:45
  display.print(gps_var.distanceFromStartPoint, 2);
    3bb6:	40 91 2c 01 	lds	r20, 0x012C	; 0x80012c <gps_var+0xe>
    3bba:	50 91 2d 01 	lds	r21, 0x012D	; 0x80012d <gps_var+0xf>
    3bbe:	60 91 2e 01 	lds	r22, 0x012E	; 0x80012e <gps_var+0x10>
    3bc2:	70 91 2f 01 	lds	r23, 0x012F	; 0x80012f <gps_var+0x11>
    3bc6:	22 e0       	ldi	r18, 0x02	; 2
    3bc8:	30 e0       	ldi	r19, 0x00	; 0
    3bca:	8d ee       	ldi	r24, 0xED	; 237
    3bcc:	98 e0       	ldi	r25, 0x08	; 8
    3bce:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:46
  display.print('m');
    3bd2:	6d e6       	ldi	r22, 0x6D	; 109
    3bd4:	8d ee       	ldi	r24, 0xED	; 237
    3bd6:	98 e0       	ldi	r25, 0x08	; 8
    3bd8:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:49

  /* Show Heading Course to Start Point Destination */
  display.print(','); display.print(gps.courseTo(gps.location.lat(), gps.location.lng(),
    3bdc:	6c e2       	ldi	r22, 0x2C	; 44
    3bde:	8d ee       	ldi	r24, 0xED	; 237
    3be0:	98 e0       	ldi	r25, 0x08	; 8
    3be2:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    3be6:	a0 90 28 01 	lds	r10, 0x0128	; 0x800128 <gps_var+0xa>
    3bea:	b0 90 29 01 	lds	r11, 0x0129	; 0x800129 <gps_var+0xb>
    3bee:	c0 90 2a 01 	lds	r12, 0x012A	; 0x80012a <gps_var+0xc>
    3bf2:	d0 90 2b 01 	lds	r13, 0x012B	; 0x80012b <gps_var+0xd>
    3bf6:	40 90 24 01 	lds	r4, 0x0124	; 0x800124 <gps_var+0x6>
    3bfa:	50 90 25 01 	lds	r5, 0x0125	; 0x800125 <gps_var+0x7>
    3bfe:	60 90 26 01 	lds	r6, 0x0126	; 0x800126 <gps_var+0x8>
    3c02:	70 90 27 01 	lds	r7, 0x0127	; 0x800127 <gps_var+0x9>
    3c06:	82 e1       	ldi	r24, 0x12	; 18
    3c08:	98 e0       	ldi	r25, 0x08	; 8
    3c0a:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    3c0e:	69 83       	std	Y+1, r22	; 0x01
    3c10:	7a 83       	std	Y+2, r23	; 0x02
    3c12:	8b 83       	std	Y+3, r24	; 0x03
    3c14:	9c 83       	std	Y+4, r25	; 0x04
    3c16:	82 e1       	ldi	r24, 0x12	; 18
    3c18:	98 e0       	ldi	r25, 0x08	; 8
    3c1a:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
    3c1e:	83 01       	movw	r16, r6
    3c20:	72 01       	movw	r14, r4
    3c22:	29 81       	ldd	r18, Y+1	; 0x01
    3c24:	3a 81       	ldd	r19, Y+2	; 0x02
    3c26:	4b 81       	ldd	r20, Y+3	; 0x03
    3c28:	5c 81       	ldd	r21, Y+4	; 0x04
    3c2a:	0e 94 ee 63 	call	0xc7dc	; 0xc7dc <TinyGPSPlus::courseTo(double, double, double, double)>
    3c2e:	ab 01       	movw	r20, r22
    3c30:	bc 01       	movw	r22, r24
    3c32:	22 e0       	ldi	r18, 0x02	; 2
    3c34:	30 e0       	ldi	r19, 0x00	; 0
    3c36:	8d ee       	ldi	r24, 0xED	; 237
    3c38:	98 e0       	ldi	r25, 0x08	; 8
    3c3a:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:51
                                    gps_var.start_latitude, gps_var.start_longitude));
  display.print(F("deg"));
    3c3e:	6d e0       	ldi	r22, 0x0D	; 13
    3c40:	72 e0       	ldi	r23, 0x02	; 2
    3c42:	8d ee       	ldi	r24, 0xED	; 237
    3c44:	98 e0       	ldi	r25, 0x08	; 8
    3c46:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:53

  decodeLocationFromEEPROM(); /* Decode GPS Coordinate from EEPROM */
    3c4a:	0e 94 2e 17 	call	0x2e5c	; 0x2e5c <decodeLocationFromEEPROM()>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:55

  display.fillRect(0, 40, 128, 9, WHITE);
    3c4e:	ee 24       	eor	r14, r14
    3c50:	e3 94       	inc	r14
    3c52:	f1 2c       	mov	r15, r1
    3c54:	09 e0       	ldi	r16, 0x09	; 9
    3c56:	10 e0       	ldi	r17, 0x00	; 0
    3c58:	20 e8       	ldi	r18, 0x80	; 128
    3c5a:	30 e0       	ldi	r19, 0x00	; 0
    3c5c:	48 e2       	ldi	r20, 0x28	; 40
    3c5e:	50 e0       	ldi	r21, 0x00	; 0
    3c60:	70 e0       	ldi	r23, 0x00	; 0
    3c62:	60 e0       	ldi	r22, 0x00	; 0
    3c64:	8d ee       	ldi	r24, 0xED	; 237
    3c66:	98 e0       	ldi	r25, 0x08	; 8
    3c68:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    3c6c:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    3c70:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    3c74:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    3c78:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3c7c:	f0 92 fa 08 	sts	0x08FA, r15	; 0x8008fa <display+0xd>
    3c80:	e0 92 f9 08 	sts	0x08F9, r14	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3c84:	89 e2       	ldi	r24, 0x29	; 41
    3c86:	90 e0       	ldi	r25, 0x00	; 0
    3c88:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3c8c:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z13StartPointLogv():
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:58
  display.setTextColor(BLACK);
  display.setCursor(1, 41);
  display.print(F("EEPROM RECOVERY DATA"));
    3c90:	68 ef       	ldi	r22, 0xF8	; 248
    3c92:	71 e0       	ldi	r23, 0x01	; 1
    3c94:	8d ee       	ldi	r24, 0xED	; 237
    3c96:	98 e0       	ldi	r25, 0x08	; 8
    3c98:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3c9c:	f0 92 fa 08 	sts	0x08FA, r15	; 0x8008fa <display+0xd>
    3ca0:	e0 92 f9 08 	sts	0x08F9, r14	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3ca4:	83 e3       	ldi	r24, 0x33	; 51
    3ca6:	90 e0       	ldi	r25, 0x00	; 0
    3ca8:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3cac:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3cb0:	f0 92 00 09 	sts	0x0900, r15	; 0x800900 <display+0x13>
    3cb4:	e0 92 ff 08 	sts	0x08FF, r14	; 0x8008ff <display+0x12>
    3cb8:	f0 92 fe 08 	sts	0x08FE, r15	; 0x8008fe <display+0x11>
    3cbc:	e0 92 fd 08 	sts	0x08FD, r14	; 0x8008fd <display+0x10>
_Z13StartPointLogv():
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:61
  display.setCursor(1, 51);
  display.setTextColor(WHITE);
  display.print(eeprom.eeprom_lat, 6);
    3cc0:	40 91 77 09 	lds	r20, 0x0977	; 0x800977 <eeprom+0x4>
    3cc4:	50 91 78 09 	lds	r21, 0x0978	; 0x800978 <eeprom+0x5>
    3cc8:	60 91 79 09 	lds	r22, 0x0979	; 0x800979 <eeprom+0x6>
    3ccc:	70 91 7a 09 	lds	r23, 0x097A	; 0x80097a <eeprom+0x7>
    3cd0:	26 e0       	ldi	r18, 0x06	; 6
    3cd2:	30 e0       	ldi	r19, 0x00	; 0
    3cd4:	8d ee       	ldi	r24, 0xED	; 237
    3cd6:	98 e0       	ldi	r25, 0x08	; 8
    3cd8:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:62
  display.print(',');
    3cdc:	6c e2       	ldi	r22, 0x2C	; 44
    3cde:	8d ee       	ldi	r24, 0xED	; 237
    3ce0:	98 e0       	ldi	r25, 0x08	; 8
    3ce2:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:63
  display.print(eeprom.eeprom_lng, 6);
    3ce6:	40 91 8b 09 	lds	r20, 0x098B	; 0x80098b <eeprom+0x18>
    3cea:	50 91 8c 09 	lds	r21, 0x098C	; 0x80098c <eeprom+0x19>
    3cee:	60 91 8d 09 	lds	r22, 0x098D	; 0x80098d <eeprom+0x1a>
    3cf2:	70 91 8e 09 	lds	r23, 0x098E	; 0x80098e <eeprom+0x1b>
    3cf6:	26 e0       	ldi	r18, 0x06	; 6
    3cf8:	30 e0       	ldi	r19, 0x00	; 0
    3cfa:	8d ee       	ldi	r24, 0xED	; 237
    3cfc:	98 e0       	ldi	r25, 0x08	; 8
    3cfe:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:64
  display.display();
    3d02:	8d ee       	ldi	r24, 0xED	; 237
    3d04:	98 e0       	ldi	r25, 0x08	; 8
    3d06:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:65
  display.clearDisplay();
    3d0a:	8d ee       	ldi	r24, 0xED	; 237
    3d0c:	98 e0       	ldi	r25, 0x08	; 8
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:66
}
    3d0e:	0f 90       	pop	r0
    3d10:	0f 90       	pop	r0
    3d12:	0f 90       	pop	r0
    3d14:	0f 90       	pop	r0
    3d16:	df 91       	pop	r29
    3d18:	cf 91       	pop	r28
    3d1a:	1f 91       	pop	r17
    3d1c:	0f 91       	pop	r16
    3d1e:	ff 90       	pop	r15
    3d20:	ef 90       	pop	r14
    3d22:	df 90       	pop	r13
    3d24:	cf 90       	pop	r12
    3d26:	bf 90       	pop	r11
    3d28:	af 90       	pop	r10
    3d2a:	7f 90       	pop	r7
    3d2c:	6f 90       	pop	r6
    3d2e:	5f 90       	pop	r5
    3d30:	4f 90       	pop	r4
C:\Users\nyvir\Documents\GitHub\GPSKit/StartPointLog.ino:65
  display.setTextColor(WHITE);
  display.print(eeprom.eeprom_lat, 6);
  display.print(',');
  display.print(eeprom.eeprom_lng, 6);
  display.display();
  display.clearDisplay();
    3d32:	0c 94 8f 4c 	jmp	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>

00003d36 <ButtonIO()>:
_Z8ButtonIOv():
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:38

void ButtonIO(void) {
    3d36:	5f 92       	push	r5
    3d38:	6f 92       	push	r6
    3d3a:	7f 92       	push	r7
    3d3c:	8f 92       	push	r8
    3d3e:	9f 92       	push	r9
    3d40:	af 92       	push	r10
    3d42:	bf 92       	push	r11
    3d44:	cf 92       	push	r12
    3d46:	df 92       	push	r13
    3d48:	ef 92       	push	r14
    3d4a:	ff 92       	push	r15
    3d4c:	0f 93       	push	r16
    3d4e:	1f 93       	push	r17
    3d50:	cf 93       	push	r28
    3d52:	df 93       	push	r29
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    3d54:	01 e0       	ldi	r16, 0x01	; 1
    3d56:	10 e0       	ldi	r17, 0x00	; 0
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3d58:	89 e1       	ldi	r24, 0x19	; 25
    3d5a:	88 2e       	mov	r8, r24
    3d5c:	91 2c       	mov	r9, r1
    3d5e:	9b e2       	ldi	r25, 0x2B	; 43
    3d60:	a9 2e       	mov	r10, r25
    3d62:	b1 2c       	mov	r11, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3d64:	2b e0       	ldi	r18, 0x0B	; 11
    3d66:	c2 2e       	mov	r12, r18
    3d68:	d1 2c       	mov	r13, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3d6a:	3c e1       	ldi	r19, 0x1C	; 28
    3d6c:	e3 2e       	mov	r14, r19
    3d6e:	f1 2c       	mov	r15, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3d70:	43 e3       	ldi	r20, 0x33	; 51
    3d72:	64 2e       	mov	r6, r20
    3d74:	71 2c       	mov	r7, r1
_Z8ButtonIOv():
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:40
        /* Special Something? */
        while ((!digitalRead(A_Pin)) && (!digitalRead(C_Pin))) {
    3d76:	82 e0       	ldi	r24, 0x02	; 2
    3d78:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    3d7c:	89 2b       	or	r24, r25
    3d7e:	a1 f0       	breq	.+40     	; 0x3da8 <ButtonIO()+0x72>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:59

        // Switch to GPS Recption Menu //
        while (!digitalRead(C_Pin)) {
                display.clearDisplay();
                altitude_graph.x_increment = 0; // Reset Altitude Graph //
                altitude_graph.drawMesh = true;
    3d80:	c1 e0       	ldi	r28, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:56
                display.setCursor(28, 51); display.print(F("make.believe"));
                display.display();
        }

        // Switch to GPS Recption Menu //
        while (!digitalRead(C_Pin)) {
    3d82:	80 e0       	ldi	r24, 0x00	; 0
    3d84:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    3d88:	89 2b       	or	r24, r25
    3d8a:	09 f0       	breq	.+2      	; 0x3d8e <ButtonIO()+0x58>
    3d8c:	6a c0       	rjmp	.+212    	; 0x3e62 <ButtonIO()+0x12c>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:57
                display.clearDisplay();
    3d8e:	8d ee       	ldi	r24, 0xED	; 237
    3d90:	98 e0       	ldi	r25, 0x08	; 8
    3d92:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:58
                altitude_graph.x_increment = 0; // Reset Altitude Graph //
    3d96:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <altitude_graph+0x3>
    3d9a:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <altitude_graph+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:59
                altitude_graph.drawMesh = true;
    3d9e:	c0 93 39 01 	sts	0x0139, r28	; 0x800139 <altitude_graph+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:60
                StartPointLog();
    3da2:	0e 94 94 1c 	call	0x3928	; 0x3928 <StartPointLog()>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:56
                display.setCursor(28, 51); display.print(F("make.believe"));
                display.display();
        }

        // Switch to GPS Recption Menu //
        while (!digitalRead(C_Pin)) {
    3da6:	ed cf       	rjmp	.-38     	; 0x3d82 <ButtonIO()+0x4c>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:40 (discriminator 1)
        }
}

void ButtonIO(void) {
        /* Special Something? */
        while ((!digitalRead(A_Pin)) && (!digitalRead(C_Pin))) {
    3da8:	80 e0       	ldi	r24, 0x00	; 0
    3daa:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    3dae:	ec 01       	movw	r28, r24
    3db0:	89 2b       	or	r24, r25
    3db2:	31 f7       	brne	.-52     	; 0x3d80 <ButtonIO()+0x4a>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:41
                menu.tab = 0;
    3db4:	10 92 33 09 	sts	0x0933, r1	; 0x800933 <menu+0x1>
    3db8:	10 92 32 09 	sts	0x0932, r1	; 0x800932 <menu>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:42
                display.clearDisplay();
    3dbc:	8d ee       	ldi	r24, 0xED	; 237
    3dbe:	98 e0       	ldi	r25, 0x08	; 8
    3dc0:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3dc4:	10 93 00 09 	sts	0x0900, r17	; 0x800900 <display+0x13>
    3dc8:	00 93 ff 08 	sts	0x08FF, r16	; 0x8008ff <display+0x12>
    3dcc:	10 93 fe 08 	sts	0x08FE, r17	; 0x8008fe <display+0x11>
    3dd0:	00 93 fd 08 	sts	0x08FD, r16	; 0x8008fd <display+0x10>
_Z8ButtonIOv():
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:44
                display.setTextColor(WHITE);
                display.setTextSize(1);
    3dd4:	61 e0       	ldi	r22, 0x01	; 1
    3dd6:	8d ee       	ldi	r24, 0xED	; 237
    3dd8:	98 e0       	ldi	r25, 0x08	; 8
    3dda:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:46
                for (int i = 0; i < 128; i++) {
                        logic.lastState = !logic.lastState;
    3dde:	55 24       	eor	r5, r5
    3de0:	53 94       	inc	r5
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:46 (discriminator 2)
    3de2:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    3de6:	25 25       	eor	r18, r5
    3de8:	20 93 47 01 	sts	0x0147, r18	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:47 (discriminator 2)
                        display.drawPixel(i, 32, logic.lastState);
    3dec:	30 e0       	ldi	r19, 0x00	; 0
    3dee:	40 e2       	ldi	r20, 0x20	; 32
    3df0:	50 e0       	ldi	r21, 0x00	; 0
    3df2:	be 01       	movw	r22, r28
    3df4:	8d ee       	ldi	r24, 0xED	; 237
    3df6:	98 e0       	ldi	r25, 0x08	; 8
    3df8:	0e 94 25 4a 	call	0x944a	; 0x944a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:45 (discriminator 2)
        while ((!digitalRead(A_Pin)) && (!digitalRead(C_Pin))) {
                menu.tab = 0;
                display.clearDisplay();
                display.setTextColor(WHITE);
                display.setTextSize(1);
                for (int i = 0; i < 128; i++) {
    3dfc:	21 96       	adiw	r28, 0x01	; 1
    3dfe:	c0 38       	cpi	r28, 0x80	; 128
    3e00:	d1 05       	cpc	r29, r1
    3e02:	79 f7       	brne	.-34     	; 0x3de2 <ButtonIO()+0xac>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3e04:	90 92 fa 08 	sts	0x08FA, r9	; 0x8008fa <display+0xd>
    3e08:	80 92 f9 08 	sts	0x08F9, r8	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3e0c:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    3e10:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8ButtonIOv():
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:49
                        logic.lastState = !logic.lastState;
                        display.drawPixel(i, 32, logic.lastState);
                }
                display.setCursor(25, 1);  display.print(F("PROGRAMMED BY"));
    3e14:	62 e4       	ldi	r22, 0x42	; 66
    3e16:	74 e0       	ldi	r23, 0x04	; 4
    3e18:	8d ee       	ldi	r24, 0xED	; 237
    3e1a:	98 e0       	ldi	r25, 0x08	; 8
    3e1c:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3e20:	b0 92 fa 08 	sts	0x08FA, r11	; 0x8008fa <display+0xd>
    3e24:	a0 92 f9 08 	sts	0x08F9, r10	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3e28:	d0 92 fc 08 	sts	0x08FC, r13	; 0x8008fc <display+0xf>
    3e2c:	c0 92 fb 08 	sts	0x08FB, r12	; 0x8008fb <display+0xe>
_Z8ButtonIOv():
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:50
                display.setCursor(43, 11); display.print(F("BORA NY"));
    3e30:	6a e3       	ldi	r22, 0x3A	; 58
    3e32:	74 e0       	ldi	r23, 0x04	; 4
    3e34:	8d ee       	ldi	r24, 0xED	; 237
    3e36:	98 e0       	ldi	r25, 0x08	; 8
    3e38:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3e3c:	f0 92 fa 08 	sts	0x08FA, r15	; 0x8008fa <display+0xd>
    3e40:	e0 92 f9 08 	sts	0x08F9, r14	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3e44:	70 92 fc 08 	sts	0x08FC, r7	; 0x8008fc <display+0xf>
    3e48:	60 92 fb 08 	sts	0x08FB, r6	; 0x8008fb <display+0xe>
_Z8ButtonIOv():
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:51
                display.setCursor(28, 51); display.print(F("make.believe"));
    3e4c:	6d e2       	ldi	r22, 0x2D	; 45
    3e4e:	74 e0       	ldi	r23, 0x04	; 4
    3e50:	8d ee       	ldi	r24, 0xED	; 237
    3e52:	98 e0       	ldi	r25, 0x08	; 8
    3e54:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:52
                display.display();
    3e58:	8d ee       	ldi	r24, 0xED	; 237
    3e5a:	98 e0       	ldi	r25, 0x08	; 8
    3e5c:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:40
        }
}

void ButtonIO(void) {
        /* Special Something? */
        while ((!digitalRead(A_Pin)) && (!digitalRead(C_Pin))) {
    3e60:	8a cf       	rjmp	.-236    	; 0x3d76 <ButtonIO()+0x40>
C:\Users\nyvir\Documents\GitHub\GPSKit/ButtonIO.ino:62
                display.clearDisplay();
                altitude_graph.x_increment = 0; // Reset Altitude Graph //
                altitude_graph.drawMesh = true;
                StartPointLog();
        }
}
    3e62:	df 91       	pop	r29
    3e64:	cf 91       	pop	r28
    3e66:	1f 91       	pop	r17
    3e68:	0f 91       	pop	r16
    3e6a:	ff 90       	pop	r15
    3e6c:	ef 90       	pop	r14
    3e6e:	df 90       	pop	r13
    3e70:	cf 90       	pop	r12
    3e72:	bf 90       	pop	r11
    3e74:	af 90       	pop	r10
    3e76:	9f 90       	pop	r9
    3e78:	8f 90       	pop	r8
    3e7a:	7f 90       	pop	r7
    3e7c:	6f 90       	pop	r6
    3e7e:	5f 90       	pop	r5
    3e80:	08 95       	ret

00003e82 <CompassMenu()>:
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:1
void CompassMenu(void) {
    3e82:	4f 92       	push	r4
    3e84:	5f 92       	push	r5
    3e86:	6f 92       	push	r6
    3e88:	7f 92       	push	r7
    3e8a:	8f 92       	push	r8
    3e8c:	9f 92       	push	r9
    3e8e:	af 92       	push	r10
    3e90:	bf 92       	push	r11
    3e92:	cf 92       	push	r12
    3e94:	df 92       	push	r13
    3e96:	ef 92       	push	r14
    3e98:	ff 92       	push	r15
    3e9a:	0f 93       	push	r16
    3e9c:	1f 93       	push	r17
    3e9e:	cf 93       	push	r28
    3ea0:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:2
        compass.read();
    3ea2:	8f eb       	ldi	r24, 0xBF	; 191
    3ea4:	98 e0       	ldi	r25, 0x08	; 8
    3ea6:	0e 94 cd 5d 	call	0xbb9a	; 0xbb9a <LSM303::read()>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:3
        compass_var.heading = atan2(compass.m.y, compass.m.x) * 180 / PI;
    3eaa:	60 91 c5 08 	lds	r22, 0x08C5	; 0x8008c5 <compass+0x6>
    3eae:	70 91 c6 08 	lds	r23, 0x08C6	; 0x8008c6 <compass+0x7>
    3eb2:	07 2e       	mov	r0, r23
    3eb4:	00 0c       	add	r0, r0
    3eb6:	88 0b       	sbc	r24, r24
    3eb8:	99 0b       	sbc	r25, r25
    3eba:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    3ebe:	6b 01       	movw	r12, r22
    3ec0:	7c 01       	movw	r14, r24
    3ec2:	60 91 c7 08 	lds	r22, 0x08C7	; 0x8008c7 <compass+0x8>
    3ec6:	70 91 c8 08 	lds	r23, 0x08C8	; 0x8008c8 <compass+0x9>
    3eca:	07 2e       	mov	r0, r23
    3ecc:	00 0c       	add	r0, r0
    3ece:	88 0b       	sbc	r24, r24
    3ed0:	99 0b       	sbc	r25, r25
    3ed2:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    3ed6:	a7 01       	movw	r20, r14
    3ed8:	96 01       	movw	r18, r12
    3eda:	0e 94 c7 6e 	call	0xdd8e	; 0xdd8e <atan2>
    3ede:	20 e0       	ldi	r18, 0x00	; 0
    3ee0:	30 e0       	ldi	r19, 0x00	; 0
    3ee2:	44 e3       	ldi	r20, 0x34	; 52
    3ee4:	53 e4       	ldi	r21, 0x43	; 67
    3ee6:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    3eea:	2b ed       	ldi	r18, 0xDB	; 219
    3eec:	3f e0       	ldi	r19, 0x0F	; 15
    3eee:	49 e4       	ldi	r20, 0x49	; 73
    3ef0:	50 e4       	ldi	r21, 0x40	; 64
    3ef2:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    3ef6:	6b 01       	movw	r12, r22
    3ef8:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:4
        if (compass_var.heading < 0)
    3efa:	20 e0       	ldi	r18, 0x00	; 0
    3efc:	30 e0       	ldi	r19, 0x00	; 0
    3efe:	a9 01       	movw	r20, r18
    3f00:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    3f04:	87 fd       	sbrc	r24, 7
    3f06:	03 c3       	rjmp	.+1542   	; 0x450e <__stack+0x40f>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:3
void CompassMenu(void) {
        compass.read();
        compass_var.heading = atan2(compass.m.y, compass.m.x) * 180 / PI;
    3f08:	c0 92 0e 01 	sts	0x010E, r12	; 0x80010e <compass_var+0x6>
    3f0c:	d0 92 0f 01 	sts	0x010F, r13	; 0x80010f <compass_var+0x7>
    3f10:	e0 92 10 01 	sts	0x0110, r14	; 0x800110 <compass_var+0x8>
    3f14:	f0 92 11 01 	sts	0x0111, r15	; 0x800111 <compass_var+0x9>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:8
        if (compass_var.heading < 0)
                compass_var.heading = 360 + compass_var.heading;

        /* Apply Low Pass Filter for Compass Reading */
        compass_var.heading = compass_var.headingOld * compass_var.p1 +
    3f18:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <compass_var+0xe>
    3f1c:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <compass_var+0xf>
    3f20:	40 91 18 01 	lds	r20, 0x0118	; 0x800118 <compass_var+0x10>
    3f24:	50 91 19 01 	lds	r21, 0x0119	; 0x800119 <compass_var+0x11>
    3f28:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <compass_var+0xa>
    3f2c:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <compass_var+0xb>
    3f30:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <compass_var+0xc>
    3f34:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <compass_var+0xd>
    3f38:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    3f3c:	6b 01       	movw	r12, r22
    3f3e:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:9
                              compass_var.heading * compass_var.p2;
    3f40:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <compass_var+0x12>
    3f44:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <compass_var+0x13>
    3f48:	40 91 1c 01 	lds	r20, 0x011C	; 0x80011c <compass_var+0x14>
    3f4c:	50 91 1d 01 	lds	r21, 0x011D	; 0x80011d <compass_var+0x15>
    3f50:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    3f54:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    3f58:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    3f5c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    3f60:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    3f64:	9b 01       	movw	r18, r22
    3f66:	ac 01       	movw	r20, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:8
        compass_var.heading = atan2(compass.m.y, compass.m.x) * 180 / PI;
        if (compass_var.heading < 0)
                compass_var.heading = 360 + compass_var.heading;

        /* Apply Low Pass Filter for Compass Reading */
        compass_var.heading = compass_var.headingOld * compass_var.p1 +
    3f68:	c7 01       	movw	r24, r14
    3f6a:	b6 01       	movw	r22, r12
    3f6c:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    3f70:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <compass_var+0x6>
    3f74:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <compass_var+0x7>
    3f78:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <compass_var+0x8>
    3f7c:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <compass_var+0x9>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:10
                              compass_var.heading * compass_var.p2;
        compass_var.headingOld = compass_var.heading;
    3f80:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <compass_var+0xa>
    3f84:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <compass_var+0xb>
    3f88:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <compass_var+0xc>
    3f8c:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <compass_var+0xd>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:12

        display.clearDisplay();
    3f90:	8d ee       	ldi	r24, 0xED	; 237
    3f92:	98 e0       	ldi	r25, 0x08	; 8
    3f94:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:14
        /* White Rectangle */
        display.fillRect(1, 1, 128, 9, WHITE);
    3f98:	ee 24       	eor	r14, r14
    3f9a:	e3 94       	inc	r14
    3f9c:	f1 2c       	mov	r15, r1
    3f9e:	09 e0       	ldi	r16, 0x09	; 9
    3fa0:	10 e0       	ldi	r17, 0x00	; 0
    3fa2:	20 e8       	ldi	r18, 0x80	; 128
    3fa4:	30 e0       	ldi	r19, 0x00	; 0
    3fa6:	41 e0       	ldi	r20, 0x01	; 1
    3fa8:	50 e0       	ldi	r21, 0x00	; 0
    3faa:	61 e0       	ldi	r22, 0x01	; 1
    3fac:	70 e0       	ldi	r23, 0x00	; 0
    3fae:	8d ee       	ldi	r24, 0xED	; 237
    3fb0:	98 e0       	ldi	r25, 0x08	; 8
    3fb2:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:15
        display.setTextSize(1);
    3fb6:	61 e0       	ldi	r22, 0x01	; 1
    3fb8:	8d ee       	ldi	r24, 0xED	; 237
    3fba:	98 e0       	ldi	r25, 0x08	; 8
    3fbc:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3fc0:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    3fc4:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    3fc8:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    3fcc:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    3fd0:	83 e1       	ldi	r24, 0x13	; 19
    3fd2:	90 e0       	ldi	r25, 0x00	; 0
    3fd4:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    3fd8:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    3fdc:	82 e0       	ldi	r24, 0x02	; 2
    3fde:	90 e0       	ldi	r25, 0x00	; 0
    3fe0:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    3fe4:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:18
        display.setTextColor(BLACK);
        display.setCursor(19, 2);
        display.print(F("DIGITAL COMPASS"));
    3fe8:	6d e1       	ldi	r22, 0x1D	; 29
    3fea:	74 e0       	ldi	r23, 0x04	; 4
    3fec:	8d ee       	ldi	r24, 0xED	; 237
    3fee:	98 e0       	ldi	r25, 0x08	; 8
    3ff0:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    3ff4:	81 e0       	ldi	r24, 0x01	; 1
    3ff6:	90 e0       	ldi	r25, 0x00	; 0
    3ff8:	90 93 00 09 	sts	0x0900, r25	; 0x800900 <display+0x13>
    3ffc:	80 93 ff 08 	sts	0x08FF, r24	; 0x8008ff <display+0x12>
    4000:	90 93 fe 08 	sts	0x08FE, r25	; 0x8008fe <display+0x11>
    4004:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <display+0x10>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:22

        /* Compass GUI */
        display.setTextColor(WHITE);
        display.setTextSize(2);
    4008:	62 e0       	ldi	r22, 0x02	; 2
    400a:	8d ee       	ldi	r24, 0xED	; 237
    400c:	98 e0       	ldi	r25, 0x08	; 8
    400e:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:25

        /* Compass Heading */
        if ((compass_var.heading > 0) && (compass_var.heading < 10)) /* 1 Chars */
    4012:	c0 90 0e 01 	lds	r12, 0x010E	; 0x80010e <compass_var+0x6>
    4016:	d0 90 0f 01 	lds	r13, 0x010F	; 0x80010f <compass_var+0x7>
    401a:	e0 90 10 01 	lds	r14, 0x0110	; 0x800110 <compass_var+0x8>
    401e:	f0 90 11 01 	lds	r15, 0x0111	; 0x800111 <compass_var+0x9>
    4022:	20 e0       	ldi	r18, 0x00	; 0
    4024:	30 e0       	ldi	r19, 0x00	; 0
    4026:	a9 01       	movw	r20, r18
    4028:	c7 01       	movw	r24, r14
    402a:	b6 01       	movw	r22, r12
    402c:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    4030:	18 16       	cp	r1, r24
    4032:	b4 f4       	brge	.+44     	; 0x4060 <CompassMenu()+0x1de>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:25 (discriminator 1)
    4034:	20 e0       	ldi	r18, 0x00	; 0
    4036:	30 e0       	ldi	r19, 0x00	; 0
    4038:	40 e2       	ldi	r20, 0x20	; 32
    403a:	51 e4       	ldi	r21, 0x41	; 65
    403c:	c7 01       	movw	r24, r14
    403e:	b6 01       	movw	r22, r12
    4040:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    4044:	87 ff       	sbrs	r24, 7
    4046:	0c c0       	rjmp	.+24     	; 0x4060 <CompassMenu()+0x1de>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4048:	84 e7       	ldi	r24, 0x74	; 116
    404a:	90 e0       	ldi	r25, 0x00	; 0
    404c:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    4050:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4054:	87 e2       	ldi	r24, 0x27	; 39
    4056:	90 e0       	ldi	r25, 0x00	; 0
    4058:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    405c:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:27
                display.setCursor(116, 39);
        if ((compass_var.heading > 10) && (compass_var.heading < 100)) /* 2 Chars */
    4060:	20 e0       	ldi	r18, 0x00	; 0
    4062:	30 e0       	ldi	r19, 0x00	; 0
    4064:	40 e2       	ldi	r20, 0x20	; 32
    4066:	51 e4       	ldi	r21, 0x41	; 65
    4068:	c7 01       	movw	r24, r14
    406a:	b6 01       	movw	r22, r12
    406c:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    4070:	18 16       	cp	r1, r24
    4072:	b4 f4       	brge	.+44     	; 0x40a0 <CompassMenu()+0x21e>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:27 (discriminator 1)
    4074:	20 e0       	ldi	r18, 0x00	; 0
    4076:	30 e0       	ldi	r19, 0x00	; 0
    4078:	48 ec       	ldi	r20, 0xC8	; 200
    407a:	52 e4       	ldi	r21, 0x42	; 66
    407c:	c7 01       	movw	r24, r14
    407e:	b6 01       	movw	r22, r12
    4080:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    4084:	87 ff       	sbrs	r24, 7
    4086:	0c c0       	rjmp	.+24     	; 0x40a0 <CompassMenu()+0x21e>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4088:	88 e6       	ldi	r24, 0x68	; 104
    408a:	90 e0       	ldi	r25, 0x00	; 0
    408c:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    4090:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4094:	87 e2       	ldi	r24, 0x27	; 39
    4096:	90 e0       	ldi	r25, 0x00	; 0
    4098:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    409c:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:29
                display.setCursor(104, 39);
        if (compass_var.heading > 100) /* 3 Chars */
    40a0:	20 e0       	ldi	r18, 0x00	; 0
    40a2:	30 e0       	ldi	r19, 0x00	; 0
    40a4:	48 ec       	ldi	r20, 0xC8	; 200
    40a6:	52 e4       	ldi	r21, 0x42	; 66
    40a8:	c7 01       	movw	r24, r14
    40aa:	b6 01       	movw	r22, r12
    40ac:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    40b0:	18 16       	cp	r1, r24
    40b2:	64 f4       	brge	.+24     	; 0x40cc <CompassMenu()+0x24a>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    40b4:	8c e5       	ldi	r24, 0x5C	; 92
    40b6:	90 e0       	ldi	r25, 0x00	; 0
    40b8:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    40bc:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    40c0:	87 e2       	ldi	r24, 0x27	; 39
    40c2:	90 e0       	ldi	r25, 0x00	; 0
    40c4:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    40c8:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:31
                display.setCursor(92, 39);
        display.print(int(compass_var.heading));
    40cc:	c7 01       	movw	r24, r14
    40ce:	b6 01       	movw	r22, r12
    40d0:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    40d4:	4a e0       	ldi	r20, 0x0A	; 10
    40d6:	50 e0       	ldi	r21, 0x00	; 0
    40d8:	8d ee       	ldi	r24, 0xED	; 237
    40da:	98 e0       	ldi	r25, 0x08	; 8
    40dc:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:34

        /* Cardinal Indicator */
        if (strlen(gps.cardinal(compass_var.heading)) == 1) /* 1 Chars */
    40e0:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    40e4:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    40e8:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    40ec:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    40f0:	0e 94 b6 64 	call	0xc96c	; 0xc96c <TinyGPSPlus::cardinal(double)>
    40f4:	fc 01       	movw	r30, r24
    40f6:	01 90       	ld	r0, Z+
    40f8:	00 20       	and	r0, r0
    40fa:	e9 f7       	brne	.-6      	; 0x40f6 <CompassMenu()+0x274>
    40fc:	9f 01       	movw	r18, r30
    40fe:	22 50       	subi	r18, 0x02	; 2
    4100:	31 09       	sbc	r19, r1
    4102:	28 17       	cp	r18, r24
    4104:	39 07       	cpc	r19, r25
    4106:	61 f4       	brne	.+24     	; 0x4120 <__stack+0x21>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4108:	84 e7       	ldi	r24, 0x74	; 116
    410a:	90 e0       	ldi	r25, 0x00	; 0
    410c:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    4110:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4114:	84 e1       	ldi	r24, 0x14	; 20
    4116:	90 e0       	ldi	r25, 0x00	; 0
    4118:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    411c:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:36
                display.setCursor(116, 20);
        if (strlen(gps.cardinal(compass_var.heading)) == 2) /* 2 Chars */
    4120:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    4124:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    4128:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    412c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    4130:	0e 94 b6 64 	call	0xc96c	; 0xc96c <TinyGPSPlus::cardinal(double)>
    4134:	fc 01       	movw	r30, r24
    4136:	01 90       	ld	r0, Z+
    4138:	00 20       	and	r0, r0
    413a:	e9 f7       	brne	.-6      	; 0x4136 <__stack+0x37>
    413c:	9f 01       	movw	r18, r30
    413e:	23 50       	subi	r18, 0x03	; 3
    4140:	31 09       	sbc	r19, r1
    4142:	28 17       	cp	r18, r24
    4144:	39 07       	cpc	r19, r25
    4146:	61 f4       	brne	.+24     	; 0x4160 <__stack+0x61>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4148:	88 e6       	ldi	r24, 0x68	; 104
    414a:	90 e0       	ldi	r25, 0x00	; 0
    414c:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    4150:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4154:	84 e1       	ldi	r24, 0x14	; 20
    4156:	90 e0       	ldi	r25, 0x00	; 0
    4158:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    415c:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:38
                display.setCursor(104, 20);
        if (strlen(gps.cardinal(compass_var.heading)) == 3) /* 3 Chars */
    4160:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    4164:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    4168:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    416c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    4170:	0e 94 b6 64 	call	0xc96c	; 0xc96c <TinyGPSPlus::cardinal(double)>
    4174:	fc 01       	movw	r30, r24
    4176:	01 90       	ld	r0, Z+
    4178:	00 20       	and	r0, r0
    417a:	e9 f7       	brne	.-6      	; 0x4176 <__stack+0x77>
    417c:	9f 01       	movw	r18, r30
    417e:	24 50       	subi	r18, 0x04	; 4
    4180:	31 09       	sbc	r19, r1
    4182:	28 17       	cp	r18, r24
    4184:	39 07       	cpc	r19, r25
    4186:	61 f4       	brne	.+24     	; 0x41a0 <__stack+0xa1>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4188:	8c e5       	ldi	r24, 0x5C	; 92
    418a:	90 e0       	ldi	r25, 0x00	; 0
    418c:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    4190:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4194:	84 e1       	ldi	r24, 0x14	; 20
    4196:	90 e0       	ldi	r25, 0x00	; 0
    4198:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    419c:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:40
                display.setCursor(92, 20);
        display.print(gps.cardinal(compass_var.heading));
    41a0:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    41a4:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    41a8:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    41ac:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    41b0:	0e 94 b6 64 	call	0xc96c	; 0xc96c <TinyGPSPlus::cardinal(double)>
    41b4:	bc 01       	movw	r22, r24
    41b6:	8d ee       	ldi	r24, 0xED	; 237
    41b8:	98 e0       	ldi	r25, 0x08	; 8
    41ba:	0e 94 1e 6c 	call	0xd83c	; 0xd83c <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:43

        /* Compass Indicator */
        display.setTextSize(1);
    41be:	61 e0       	ldi	r22, 0x01	; 1
    41c0:	8d ee       	ldi	r24, 0xED	; 237
    41c2:	98 e0       	ldi	r25, 0x08	; 8
    41c4:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    41c8:	cb e2       	ldi	r28, 0x2B	; 43
    41ca:	d0 e0       	ldi	r29, 0x00	; 0
    41cc:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    41d0:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    41d4:	8d e0       	ldi	r24, 0x0D	; 13
    41d6:	90 e0       	ldi	r25, 0x00	; 0
    41d8:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    41dc:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:45
        display.setCursor(43, 13);
        display.print('N');
    41e0:	6e e4       	ldi	r22, 0x4E	; 78
    41e2:	8d ee       	ldi	r24, 0xED	; 237
    41e4:	98 e0       	ldi	r25, 0x08	; 8
    41e6:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    41ea:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    41ee:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    41f2:	86 e3       	ldi	r24, 0x36	; 54
    41f4:	90 e0       	ldi	r25, 0x00	; 0
    41f6:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    41fa:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:47
        display.setCursor(43, 54);
        display.print('S');
    41fe:	63 e5       	ldi	r22, 0x53	; 83
    4200:	8d ee       	ldi	r24, 0xED	; 237
    4202:	98 e0       	ldi	r25, 0x08	; 8
    4204:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4208:	86 e1       	ldi	r24, 0x16	; 22
    420a:	90 e0       	ldi	r25, 0x00	; 0
    420c:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    4210:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4214:	c2 e2       	ldi	r28, 0x22	; 34
    4216:	d0 e0       	ldi	r29, 0x00	; 0
    4218:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    421c:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:49
        display.setCursor(22, 34);
        display.print('W');
    4220:	67 e5       	ldi	r22, 0x57	; 87
    4222:	8d ee       	ldi	r24, 0xED	; 237
    4224:	98 e0       	ldi	r25, 0x08	; 8
    4226:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    422a:	80 e4       	ldi	r24, 0x40	; 64
    422c:	90 e0       	ldi	r25, 0x00	; 0
    422e:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    4232:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4236:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    423a:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:51
        display.setCursor(64, 34);
        display.print('E');
    423e:	65 e4       	ldi	r22, 0x45	; 69
    4240:	8d ee       	ldi	r24, 0xED	; 237
    4242:	98 e0       	ldi	r25, 0x08	; 8
    4244:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:52
        display.drawPixel(45, 37, WHITE);
    4248:	21 e0       	ldi	r18, 0x01	; 1
    424a:	30 e0       	ldi	r19, 0x00	; 0
    424c:	45 e2       	ldi	r20, 0x25	; 37
    424e:	50 e0       	ldi	r21, 0x00	; 0
    4250:	6d e2       	ldi	r22, 0x2D	; 45
    4252:	70 e0       	ldi	r23, 0x00	; 0
    4254:	8d ee       	ldi	r24, 0xED	; 237
    4256:	98 e0       	ldi	r25, 0x08	; 8
    4258:	0e 94 25 4a 	call	0x944a	; 0x944a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:53
        display.drawCircle(45, 37, 26, WHITE);
    425c:	01 e0       	ldi	r16, 0x01	; 1
    425e:	10 e0       	ldi	r17, 0x00	; 0
    4260:	2a e1       	ldi	r18, 0x1A	; 26
    4262:	30 e0       	ldi	r19, 0x00	; 0
    4264:	45 e2       	ldi	r20, 0x25	; 37
    4266:	50 e0       	ldi	r21, 0x00	; 0
    4268:	6d e2       	ldi	r22, 0x2D	; 45
    426a:	70 e0       	ldi	r23, 0x00	; 0
    426c:	8d ee       	ldi	r24, 0xED	; 237
    426e:	98 e0       	ldi	r25, 0x08	; 8
    4270:	0e 94 1b 42 	call	0x8436	; 0x8436 <Adafruit_GFX::drawCircle(int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:59

        /* Draw Compass Line */
        int r = 20;

        /* Indicator */
        display.fillCircle(5, 15, 2, WHITE);
    4274:	22 e0       	ldi	r18, 0x02	; 2
    4276:	30 e0       	ldi	r19, 0x00	; 0
    4278:	4f e0       	ldi	r20, 0x0F	; 15
    427a:	50 e0       	ldi	r21, 0x00	; 0
    427c:	65 e0       	ldi	r22, 0x05	; 5
    427e:	70 e0       	ldi	r23, 0x00	; 0
    4280:	8d ee       	ldi	r24, 0xED	; 237
    4282:	98 e0       	ldi	r25, 0x08	; 8
    4284:	0e 94 44 45 	call	0x8a88	; 0x8a88 <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4288:	83 e0       	ldi	r24, 0x03	; 3
    428a:	90 e0       	ldi	r25, 0x00	; 0
    428c:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    4290:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4294:	84 e1       	ldi	r24, 0x14	; 20
    4296:	90 e0       	ldi	r25, 0x00	; 0
    4298:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    429c:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z11CompassMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:60
        display.setCursor(3, 20); display.print('N');
    42a0:	6e e4       	ldi	r22, 0x4E	; 78
    42a2:	8d ee       	ldi	r24, 0xED	; 237
    42a4:	98 e0       	ldi	r25, 0x08	; 8
    42a6:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:65

        /* Pointing North */
        display.drawLine(45, 37,
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), WHITE);
    42aa:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <compass_var+0x6>
    42ae:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <compass_var+0x7>
    42b2:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <compass_var+0x8>
    42b6:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <compass_var+0x9>
    42ba:	60 e0       	ldi	r22, 0x00	; 0
    42bc:	70 e0       	ldi	r23, 0x00	; 0
    42be:	84 eb       	ldi	r24, 0xB4	; 180
    42c0:	93 e4       	ldi	r25, 0x43	; 67
    42c2:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    42c6:	20 e0       	ldi	r18, 0x00	; 0
    42c8:	30 e0       	ldi	r19, 0x00	; 0
    42ca:	44 eb       	ldi	r20, 0xB4	; 180
    42cc:	52 e4       	ldi	r21, 0x42	; 66
    42ce:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    42d2:	2b ed       	ldi	r18, 0xDB	; 219
    42d4:	3f e0       	ldi	r19, 0x0F	; 15
    42d6:	49 e4       	ldi	r20, 0x49	; 73
    42d8:	50 e4       	ldi	r21, 0x40	; 64
    42da:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    42de:	20 e0       	ldi	r18, 0x00	; 0
    42e0:	30 e0       	ldi	r19, 0x00	; 0
    42e2:	44 e3       	ldi	r20, 0x34	; 52
    42e4:	53 e4       	ldi	r21, 0x43	; 67
    42e6:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    42ea:	6b 01       	movw	r12, r22
    42ec:	7c 01       	movw	r14, r24
    42ee:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    42f2:	4b 01       	movw	r8, r22
    42f4:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:64
        display.fillCircle(5, 15, 2, WHITE);
        display.setCursor(3, 20); display.print('N');

        /* Pointing North */
        display.drawLine(45, 37,
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
    42f6:	c7 01       	movw	r24, r14
    42f8:	b6 01       	movw	r22, r12
    42fa:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    42fe:	6b 01       	movw	r12, r22
    4300:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:65
                         37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), WHITE);
    4302:	20 e0       	ldi	r18, 0x00	; 0
    4304:	30 e0       	ldi	r19, 0x00	; 0
    4306:	40 ea       	ldi	r20, 0xA0	; 160
    4308:	51 e4       	ldi	r21, 0x41	; 65
    430a:	c5 01       	movw	r24, r10
    430c:	b4 01       	movw	r22, r8
    430e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    4312:	20 e0       	ldi	r18, 0x00	; 0
    4314:	30 e0       	ldi	r19, 0x00	; 0
    4316:	44 e1       	ldi	r20, 0x14	; 20
    4318:	52 e4       	ldi	r21, 0x42	; 66
    431a:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:63
        /* Indicator */
        display.fillCircle(5, 15, 2, WHITE);
        display.setCursor(3, 20); display.print('N');

        /* Pointing North */
        display.drawLine(45, 37,
    431e:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    4322:	4b 01       	movw	r8, r22
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:64
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
    4324:	20 e0       	ldi	r18, 0x00	; 0
    4326:	30 e0       	ldi	r19, 0x00	; 0
    4328:	40 ea       	ldi	r20, 0xA0	; 160
    432a:	51 e4       	ldi	r21, 0x41	; 65
    432c:	c7 01       	movw	r24, r14
    432e:	b6 01       	movw	r22, r12
    4330:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    4334:	20 e0       	ldi	r18, 0x00	; 0
    4336:	30 e0       	ldi	r19, 0x00	; 0
    4338:	44 e3       	ldi	r20, 0x34	; 52
    433a:	52 e4       	ldi	r21, 0x42	; 66
    433c:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:63
        /* Indicator */
        display.fillCircle(5, 15, 2, WHITE);
        display.setCursor(3, 20); display.print('N');

        /* Pointing North */
        display.drawLine(45, 37,
    4340:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    4344:	ee 24       	eor	r14, r14
    4346:	e3 94       	inc	r14
    4348:	f1 2c       	mov	r15, r1
    434a:	84 01       	movw	r16, r8
    434c:	9b 01       	movw	r18, r22
    434e:	45 e2       	ldi	r20, 0x25	; 37
    4350:	50 e0       	ldi	r21, 0x00	; 0
    4352:	6d e2       	ldi	r22, 0x2D	; 45
    4354:	70 e0       	ldi	r23, 0x00	; 0
    4356:	8d ee       	ldi	r24, 0xED	; 237
    4358:	98 e0       	ldi	r25, 0x08	; 8
    435a:	0e 94 6c 41 	call	0x82d8	; 0x82d8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:68
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), WHITE);
        /* Dot North */
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);
    435e:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <compass_var+0x6>
    4362:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <compass_var+0x7>
    4366:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <compass_var+0x8>
    436a:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <compass_var+0x9>
    436e:	60 e0       	ldi	r22, 0x00	; 0
    4370:	70 e0       	ldi	r23, 0x00	; 0
    4372:	84 eb       	ldi	r24, 0xB4	; 180
    4374:	93 e4       	ldi	r25, 0x43	; 67
    4376:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    437a:	20 e0       	ldi	r18, 0x00	; 0
    437c:	30 e0       	ldi	r19, 0x00	; 0
    437e:	44 eb       	ldi	r20, 0xB4	; 180
    4380:	52 e4       	ldi	r21, 0x42	; 66
    4382:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    4386:	2b ed       	ldi	r18, 0xDB	; 219
    4388:	3f e0       	ldi	r19, 0x0F	; 15
    438a:	49 e4       	ldi	r20, 0x49	; 73
    438c:	50 e4       	ldi	r21, 0x40	; 64
    438e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    4392:	20 e0       	ldi	r18, 0x00	; 0
    4394:	30 e0       	ldi	r19, 0x00	; 0
    4396:	44 e3       	ldi	r20, 0x34	; 52
    4398:	53 e4       	ldi	r21, 0x43	; 67
    439a:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    439e:	6b 01       	movw	r12, r22
    43a0:	7c 01       	movw	r14, r24
    43a2:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    43a6:	2b 01       	movw	r4, r22
    43a8:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:67
        /* Pointing North */
        display.drawLine(45, 37,
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), WHITE);
        /* Dot North */
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
    43aa:	c7 01       	movw	r24, r14
    43ac:	b6 01       	movw	r22, r12
    43ae:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    43b2:	4b 01       	movw	r8, r22
    43b4:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:68
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);
    43b6:	20 e0       	ldi	r18, 0x00	; 0
    43b8:	30 e0       	ldi	r19, 0x00	; 0
    43ba:	40 ea       	ldi	r20, 0xA0	; 160
    43bc:	51 e4       	ldi	r21, 0x41	; 65
    43be:	c3 01       	movw	r24, r6
    43c0:	b2 01       	movw	r22, r4
    43c2:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    43c6:	20 e0       	ldi	r18, 0x00	; 0
    43c8:	30 e0       	ldi	r19, 0x00	; 0
    43ca:	44 e1       	ldi	r20, 0x14	; 20
    43cc:	52 e4       	ldi	r21, 0x42	; 66
    43ce:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:67
        /* Pointing North */
        display.drawLine(45, 37,
                         45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), WHITE);
        /* Dot North */
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
    43d2:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    43d6:	6b 01       	movw	r12, r22
    43d8:	20 e0       	ldi	r18, 0x00	; 0
    43da:	30 e0       	ldi	r19, 0x00	; 0
    43dc:	40 ea       	ldi	r20, 0xA0	; 160
    43de:	51 e4       	ldi	r21, 0x41	; 65
    43e0:	c5 01       	movw	r24, r10
    43e2:	b4 01       	movw	r22, r8
    43e4:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    43e8:	20 e0       	ldi	r18, 0x00	; 0
    43ea:	30 e0       	ldi	r19, 0x00	; 0
    43ec:	44 e3       	ldi	r20, 0x34	; 52
    43ee:	52 e4       	ldi	r21, 0x42	; 66
    43f0:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    43f4:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    43f8:	01 e0       	ldi	r16, 0x01	; 1
    43fa:	10 e0       	ldi	r17, 0x00	; 0
    43fc:	22 e0       	ldi	r18, 0x02	; 2
    43fe:	30 e0       	ldi	r19, 0x00	; 0
    4400:	a6 01       	movw	r20, r12
    4402:	8d ee       	ldi	r24, 0xED	; 237
    4404:	98 e0       	ldi	r25, 0x08	; 8
    4406:	0e 94 44 45 	call	0x8a88	; 0x8a88 <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:73
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);

        /* Heading */
        display.drawLine(45, 37,
                         45 + r * cos((compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((compass_var.heading - 90)*M_PI / 180), WHITE);
    440a:	20 e0       	ldi	r18, 0x00	; 0
    440c:	30 e0       	ldi	r19, 0x00	; 0
    440e:	44 eb       	ldi	r20, 0xB4	; 180
    4410:	52 e4       	ldi	r21, 0x42	; 66
    4412:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    4416:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    441a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    441e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    4422:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    4426:	2b ed       	ldi	r18, 0xDB	; 219
    4428:	3f e0       	ldi	r19, 0x0F	; 15
    442a:	49 e4       	ldi	r20, 0x49	; 73
    442c:	50 e4       	ldi	r21, 0x40	; 64
    442e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    4432:	20 e0       	ldi	r18, 0x00	; 0
    4434:	30 e0       	ldi	r19, 0x00	; 0
    4436:	44 e3       	ldi	r20, 0x34	; 52
    4438:	53 e4       	ldi	r21, 0x43	; 67
    443a:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    443e:	6b 01       	movw	r12, r22
    4440:	7c 01       	movw	r14, r24
    4442:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    4446:	4b 01       	movw	r8, r22
    4448:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:72
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);

        /* Heading */
        display.drawLine(45, 37,
                         45 + r * cos((compass_var.heading - 90)*M_PI / 180),
    444a:	c7 01       	movw	r24, r14
    444c:	b6 01       	movw	r22, r12
    444e:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    4452:	6b 01       	movw	r12, r22
    4454:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:73
                         37 + r * sin((compass_var.heading - 90)*M_PI / 180), WHITE);
    4456:	20 e0       	ldi	r18, 0x00	; 0
    4458:	30 e0       	ldi	r19, 0x00	; 0
    445a:	40 ea       	ldi	r20, 0xA0	; 160
    445c:	51 e4       	ldi	r21, 0x41	; 65
    445e:	c5 01       	movw	r24, r10
    4460:	b4 01       	movw	r22, r8
    4462:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    4466:	20 e0       	ldi	r18, 0x00	; 0
    4468:	30 e0       	ldi	r19, 0x00	; 0
    446a:	44 e1       	ldi	r20, 0x14	; 20
    446c:	52 e4       	ldi	r21, 0x42	; 66
    446e:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:71
        /* Dot North */
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);

        /* Heading */
        display.drawLine(45, 37,
    4472:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    4476:	4b 01       	movw	r8, r22
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:72
                         45 + r * cos((compass_var.heading - 90)*M_PI / 180),
    4478:	20 e0       	ldi	r18, 0x00	; 0
    447a:	30 e0       	ldi	r19, 0x00	; 0
    447c:	40 ea       	ldi	r20, 0xA0	; 160
    447e:	51 e4       	ldi	r21, 0x41	; 65
    4480:	c7 01       	movw	r24, r14
    4482:	b6 01       	movw	r22, r12
    4484:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    4488:	20 e0       	ldi	r18, 0x00	; 0
    448a:	30 e0       	ldi	r19, 0x00	; 0
    448c:	44 e3       	ldi	r20, 0x34	; 52
    448e:	52 e4       	ldi	r21, 0x42	; 66
    4490:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:71
        /* Dot North */
        display.fillCircle(45 + r * cos((360 - compass_var.heading - 90)*M_PI / 180),
                           37 + r * sin((360 -compass_var.heading - 90)*M_PI / 180), 2, WHITE);

        /* Heading */
        display.drawLine(45, 37,
    4494:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    4498:	ee 24       	eor	r14, r14
    449a:	e3 94       	inc	r14
    449c:	f1 2c       	mov	r15, r1
    449e:	84 01       	movw	r16, r8
    44a0:	9b 01       	movw	r18, r22
    44a2:	45 e2       	ldi	r20, 0x25	; 37
    44a4:	50 e0       	ldi	r21, 0x00	; 0
    44a6:	6d e2       	ldi	r22, 0x2D	; 45
    44a8:	70 e0       	ldi	r23, 0x00	; 0
    44aa:	8d ee       	ldi	r24, 0xED	; 237
    44ac:	98 e0       	ldi	r25, 0x08	; 8
    44ae:	0e 94 6c 41 	call	0x82d8	; 0x82d8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:76
                         45 + r * cos((compass_var.heading - 90)*M_PI / 180),
                         37 + r * sin((compass_var.heading - 90)*M_PI / 180), WHITE);

        /* NEWS Indicator */
        if ((int(compass_var.heading) == 0)   || (int(compass_var.heading) == 90) ||
    44b2:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <compass_var+0x6>
    44b6:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <compass_var+0x7>
    44ba:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <compass_var+0x8>
    44be:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <compass_var+0x9>
    44c2:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    44c6:	61 15       	cp	r22, r1
    44c8:	71 05       	cpc	r23, r1
    44ca:	49 f0       	breq	.+18     	; 0x44de <__stack+0x3df>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:76 (discriminator 1)
    44cc:	6a 35       	cpi	r22, 0x5A	; 90
    44ce:	71 05       	cpc	r23, r1
    44d0:	31 f0       	breq	.+12     	; 0x44de <__stack+0x3df>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:76 (discriminator 2)
    44d2:	64 3b       	cpi	r22, 0xB4	; 180
    44d4:	71 05       	cpc	r23, r1
    44d6:	19 f0       	breq	.+6      	; 0x44de <__stack+0x3df>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:77
            (int(compass_var.heading) == 180) || (int(compass_var.heading) == 270))
    44d8:	6e 30       	cpi	r22, 0x0E	; 14
    44da:	71 40       	sbci	r23, 0x01	; 1
    44dc:	49 f5       	brne	.+82     	; 0x4530 <__stack+0x431>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:78
                digitalWrite(USR_LED_0, LOW);
    44de:	60 e0       	ldi	r22, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:80
        else
                digitalWrite(USR_LED_0, HIGH);
    44e0:	85 e1       	ldi	r24, 0x15	; 21
    44e2:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:82

        display.display();
    44e6:	8d ee       	ldi	r24, 0xED	; 237
    44e8:	98 e0       	ldi	r25, 0x08	; 8
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:83
}
    44ea:	df 91       	pop	r29
    44ec:	cf 91       	pop	r28
    44ee:	1f 91       	pop	r17
    44f0:	0f 91       	pop	r16
    44f2:	ff 90       	pop	r15
    44f4:	ef 90       	pop	r14
    44f6:	df 90       	pop	r13
    44f8:	cf 90       	pop	r12
    44fa:	bf 90       	pop	r11
    44fc:	af 90       	pop	r10
    44fe:	9f 90       	pop	r9
    4500:	8f 90       	pop	r8
    4502:	7f 90       	pop	r7
    4504:	6f 90       	pop	r6
    4506:	5f 90       	pop	r5
    4508:	4f 90       	pop	r4
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:82
            (int(compass_var.heading) == 180) || (int(compass_var.heading) == 270))
                digitalWrite(USR_LED_0, LOW);
        else
                digitalWrite(USR_LED_0, HIGH);

        display.display();
    450a:	0c 94 24 50 	jmp	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:5
void CompassMenu(void) {
        compass.read();
        compass_var.heading = atan2(compass.m.y, compass.m.x) * 180 / PI;
        if (compass_var.heading < 0)
                compass_var.heading = 360 + compass_var.heading;
    450e:	20 e0       	ldi	r18, 0x00	; 0
    4510:	30 e0       	ldi	r19, 0x00	; 0
    4512:	44 eb       	ldi	r20, 0xB4	; 180
    4514:	53 e4       	ldi	r21, 0x43	; 67
    4516:	c7 01       	movw	r24, r14
    4518:	b6 01       	movw	r22, r12
    451a:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    451e:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <compass_var+0x6>
    4522:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <compass_var+0x7>
    4526:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <compass_var+0x8>
    452a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <compass_var+0x9>
    452e:	f4 cc       	rjmp	.-1560   	; 0x3f18 <CompassMenu()+0x96>
C:\Users\nyvir\Documents\GitHub\GPSKit/CompassMenu.ino:80
        /* NEWS Indicator */
        if ((int(compass_var.heading) == 0)   || (int(compass_var.heading) == 90) ||
            (int(compass_var.heading) == 180) || (int(compass_var.heading) == 270))
                digitalWrite(USR_LED_0, LOW);
        else
                digitalWrite(USR_LED_0, HIGH);
    4530:	61 e0       	ldi	r22, 0x01	; 1
    4532:	d6 cf       	rjmp	.-84     	; 0x44e0 <__stack+0x3e1>

00004534 <SatelliteTracker()>:
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:1
void SatelliteTracker(void) {
    4534:	6f 92       	push	r6
    4536:	7f 92       	push	r7
    4538:	8f 92       	push	r8
    453a:	9f 92       	push	r9
    453c:	af 92       	push	r10
    453e:	bf 92       	push	r11
    4540:	cf 92       	push	r12
    4542:	df 92       	push	r13
    4544:	ef 92       	push	r14
    4546:	ff 92       	push	r15
    4548:	0f 93       	push	r16
    454a:	1f 93       	push	r17
    454c:	cf 93       	push	r28
    454e:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:3
  /* Dispatch Incoming Characters */
  if (ss.available() > 0) {
    4550:	83 ef       	ldi	r24, 0xF3	; 243
    4552:	97 e0       	ldi	r25, 0x07	; 7
    4554:	0e 94 ab 5f 	call	0xbf56	; 0xbf56 <SoftwareSerial::available()>
    4558:	18 16       	cp	r1, r24
    455a:	19 06       	cpc	r1, r25
    455c:	0c f0       	brlt	.+2      	; 0x4560 <SatelliteTracker()+0x2c>
    455e:	3d c4       	rjmp	.+2170   	; 0x4dda <SatelliteTracker()+0x8a6>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:4
    gps.encode(ss.read());
    4560:	83 ef       	ldi	r24, 0xF3	; 243
    4562:	97 e0       	ldi	r25, 0x07	; 7
    4564:	0e 94 15 5f 	call	0xbe2a	; 0xbe2a <SoftwareSerial::read()>
    4568:	68 2f       	mov	r22, r24
    456a:	82 e1       	ldi	r24, 0x12	; 18
    456c:	98 e0       	ldi	r25, 0x08	; 8
    456e:	0e 94 33 68 	call	0xd066	; 0xd066 <TinyGPSPlus::encode(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:5
    if (totalGPGSVMessages.isUpdated()) {
    4572:	80 91 cb 07 	lds	r24, 0x07CB	; 0x8007cb <totalGPGSVMessages+0x25>
    4576:	88 23       	and	r24, r24
    4578:	09 f4       	brne	.+2      	; 0x457c <SatelliteTracker()+0x48>
    457a:	2f c4       	rjmp	.+2142   	; 0x4dda <SatelliteTracker()+0x8a6>
    457c:	8e ea       	ldi	r24, 0xAE	; 174
    457e:	88 2e       	mov	r8, r24
    4580:	86 e0       	ldi	r24, 0x06	; 6
    4582:	98 2e       	mov	r9, r24
    4584:	c5 e2       	ldi	r28, 0x25	; 37
    4586:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:9
      for (int i = 0; i < 4; ++i) {
        int no = atoi(satNumber[i].value());
        if (no >= 1 && no <= MAX_SATELLITES) {
          sats[no - 1].elevation = atoi(elevation[i].value());
    4588:	97 e0       	ldi	r25, 0x07	; 7
    458a:	f9 2e       	mov	r15, r25
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:12
          sats[no - 1].azimuth = atoi(azimuth[i].value());
          sats[no - 1].snr = atoi(snr[i].value());
          sats[no - 1].active = true;
    458c:	ee 24       	eor	r14, r14
    458e:	e3 94       	inc	r14
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
   void begin(TinyGPSPlus &gps, const char *_sentenceName, int _termNumber);

   bool isUpdated() const  { return updated; }
   bool isValid() const    { return valid; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   const char *value()     { updated = false; return buffer; }
    4590:	d4 01       	movw	r26, r8
    4592:	55 96       	adiw	r26, 0x15	; 21
    4594:	1c 92       	st	X, r1
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:7
  /* Dispatch Incoming Characters */
  if (ss.available() > 0) {
    gps.encode(ss.read());
    if (totalGPGSVMessages.isUpdated()) {
      for (int i = 0; i < 4; ++i) {
        int no = atoi(satNumber[i].value());
    4596:	c4 01       	movw	r24, r8
    4598:	0e 94 53 74 	call	0xe8a6	; 0xe8a6 <atoi>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:8
        if (no >= 1 && no <= MAX_SATELLITES) {
    459c:	01 97       	sbiw	r24, 0x01	; 1
    459e:	3c 01       	movw	r6, r24
    45a0:	88 97       	sbiw	r24, 0x28	; 40
    45a2:	70 f5       	brcc	.+92     	; 0x4600 <SatelliteTracker()+0xcc>
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
    45a4:	fe 01       	movw	r30, r28
    45a6:	e2 51       	subi	r30, 0x12	; 18
    45a8:	fa 4f       	sbci	r31, 0xFA	; 250
    45aa:	10 82       	st	Z, r1
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:9
          sats[no - 1].elevation = atoi(elevation[i].value());
    45ac:	ce 01       	movw	r24, r28
    45ae:	87 52       	subi	r24, 0x27	; 39
    45b0:	9a 4f       	sbci	r25, 0xFA	; 250
    45b2:	0e 94 53 74 	call	0xe8a6	; 0xe8a6 <atoi>
    45b6:	f6 9c       	mul	r15, r6
    45b8:	80 01       	movw	r16, r0
    45ba:	f7 9c       	mul	r15, r7
    45bc:	10 0d       	add	r17, r0
    45be:	11 24       	eor	r1, r1
    45c0:	0a 58       	subi	r16, 0x8A	; 138
    45c2:	1c 4f       	sbci	r17, 0xFC	; 252
    45c4:	f8 01       	movw	r30, r16
    45c6:	92 83       	std	Z+2, r25	; 0x02
    45c8:	81 83       	std	Z+1, r24	; 0x01
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
    45ca:	fe 01       	movw	r30, r28
    45cc:	e2 5c       	subi	r30, 0xC2	; 194
    45ce:	fa 4f       	sbci	r31, 0xFA	; 250
    45d0:	10 82       	st	Z, r1
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:10
          sats[no - 1].azimuth = atoi(azimuth[i].value());
    45d2:	ce 01       	movw	r24, r28
    45d4:	87 5d       	subi	r24, 0xD7	; 215
    45d6:	9a 4f       	sbci	r25, 0xFA	; 250
    45d8:	0e 94 53 74 	call	0xe8a6	; 0xe8a6 <atoi>
    45dc:	d8 01       	movw	r26, r16
    45de:	14 96       	adiw	r26, 0x04	; 4
    45e0:	9c 93       	st	X, r25
    45e2:	8e 93       	st	-X, r24
    45e4:	13 97       	sbiw	r26, 0x03	; 3
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
    45e6:	fe 01       	movw	r30, r28
    45e8:	e2 57       	subi	r30, 0x72	; 114
    45ea:	fb 4f       	sbci	r31, 0xFB	; 251
    45ec:	10 82       	st	Z, r1
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:11
          sats[no - 1].snr = atoi(snr[i].value());
    45ee:	ce 01       	movw	r24, r28
    45f0:	87 58       	subi	r24, 0x87	; 135
    45f2:	9b 4f       	sbci	r25, 0xFB	; 251
    45f4:	0e 94 53 74 	call	0xe8a6	; 0xe8a6 <atoi>
    45f8:	f8 01       	movw	r30, r16
    45fa:	96 83       	std	Z+6, r25	; 0x06
    45fc:	85 83       	std	Z+5, r24	; 0x05
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:12
          sats[no - 1].active = true;
    45fe:	e0 82       	st	Z, r14
    4600:	fc e2       	ldi	r31, 0x2C	; 44
    4602:	8f 0e       	add	r8, r31
    4604:	91 1c       	adc	r9, r1
    4606:	ac 96       	adiw	r28, 0x2c	; 44
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:6
void SatelliteTracker(void) {
  /* Dispatch Incoming Characters */
  if (ss.available() > 0) {
    gps.encode(ss.read());
    if (totalGPGSVMessages.isUpdated()) {
      for (int i = 0; i < 4; ++i) {
    4608:	c5 3d       	cpi	r28, 0xD5	; 213
    460a:	d1 05       	cpc	r29, r1
    460c:	09 f6       	brne	.-126    	; 0x4590 <SatelliteTracker()+0x5c>
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
    460e:	10 92 cb 07 	sts	0x07CB, r1	; 0x8007cb <totalGPGSVMessages+0x25>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:16
          sats[no - 1].snr = atoi(snr[i].value());
          sats[no - 1].active = true;
        }
      }

      int totalMessages = atoi(totalGPGSVMessages.value());
    4612:	86 eb       	ldi	r24, 0xB6	; 182
    4614:	97 e0       	ldi	r25, 0x07	; 7
    4616:	0e 94 53 74 	call	0xe8a6	; 0xe8a6 <atoi>
    461a:	ec 01       	movw	r28, r24
_ZN13TinyGPSCustom5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:203
    461c:	10 92 9f 07 	sts	0x079F, r1	; 0x80079f <messageNumber+0x25>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:17
      int currentMessage = atoi(messageNumber.value());
    4620:	8a e8       	ldi	r24, 0x8A	; 138
    4622:	97 e0       	ldi	r25, 0x07	; 7
    4624:	0e 94 53 74 	call	0xe8a6	; 0xe8a6 <atoi>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:19

      if (totalMessages == currentMessage) {
    4628:	c8 17       	cp	r28, r24
    462a:	d9 07       	cpc	r29, r25
    462c:	09 f0       	breq	.+2      	; 0x4630 <SatelliteTracker()+0xfc>
    462e:	d5 c3       	rjmp	.+1962   	; 0x4dda <SatelliteTracker()+0x8a6>
    4630:	20 91 02 03 	lds	r18, 0x0302	; 0x800302 <SatelliteTracker()::j>
    4634:	30 91 03 03 	lds	r19, 0x0303	; 0x800303 <SatelliteTracker()::j+0x1>
    4638:	06 e7       	ldi	r16, 0x76	; 118
    463a:	60 2e       	mov	r6, r16
    463c:	03 e0       	ldi	r16, 0x03	; 3
    463e:	70 2e       	mov	r7, r16
    4640:	f3 01       	movw	r30, r6
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:23
        static int snr[12], satellite_id[12], j = 0;

        /* Get Satellite ID */
        for (int i = 0; i < MAX_SATELLITES; ++i)
    4642:	90 e0       	ldi	r25, 0x00	; 0
    4644:	80 e0       	ldi	r24, 0x00	; 0
    4646:	01 96       	adiw	r24, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:24
          if (sats[i].active) {
    4648:	40 81       	ld	r20, Z
    464a:	44 23       	and	r20, r20
    464c:	49 f0       	breq	.+18     	; 0x4660 <SatelliteTracker()+0x12c>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:25
            satellite_id[j] = i + 1;
    464e:	d9 01       	movw	r26, r18
    4650:	aa 0f       	add	r26, r26
    4652:	bb 1f       	adc	r27, r27
    4654:	ac 5f       	subi	r26, 0xFC	; 252
    4656:	bc 4f       	sbci	r27, 0xFC	; 252
    4658:	8d 93       	st	X+, r24
    465a:	9c 93       	st	X, r25
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:26
            j++;
    465c:	2f 5f       	subi	r18, 0xFF	; 255
    465e:	3f 4f       	sbci	r19, 0xFF	; 255
    4660:	37 96       	adiw	r30, 0x07	; 7
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:23

      if (totalMessages == currentMessage) {
        static int snr[12], satellite_id[12], j = 0;

        /* Get Satellite ID */
        for (int i = 0; i < MAX_SATELLITES; ++i)
    4662:	88 32       	cpi	r24, 0x28	; 40
    4664:	91 05       	cpc	r25, r1
    4666:	79 f7       	brne	.-34     	; 0x4646 <SatelliteTracker()+0x112>
    4668:	2e e8       	ldi	r18, 0x8E	; 142
    466a:	34 e0       	ldi	r19, 0x04	; 4
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:27
          if (sats[i].active) {
            satellite_id[j] = i + 1;
            j++;
          } j = 0;
    466c:	d6 e7       	ldi	r29, 0x76	; 118
    466e:	8d 2e       	mov	r8, r29
    4670:	d3 e0       	ldi	r29, 0x03	; 3
    4672:	9d 2e       	mov	r9, r29
    4674:	90 e0       	ldi	r25, 0x00	; 0
    4676:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:31

        /* Max Satellite Reception on Clear Day */
        for (int i = 0; i < MAX_SATELLITES; ++i)
          if (sats[i].active) {
    4678:	d4 01       	movw	r26, r8
    467a:	4c 91       	ld	r20, X
    467c:	44 23       	and	r20, r20
    467e:	59 f0       	breq	.+22     	; 0x4696 <SatelliteTracker()+0x162>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:32
            snr[j] = sats[i].snr;
    4680:	fc 01       	movw	r30, r24
    4682:	ee 0f       	add	r30, r30
    4684:	ff 1f       	adc	r31, r31
    4686:	e4 5e       	subi	r30, 0xE4	; 228
    4688:	fc 4f       	sbci	r31, 0xFC	; 252
    468a:	15 96       	adiw	r26, 0x05	; 5
    468c:	4d 91       	ld	r20, X+
    468e:	5c 91       	ld	r21, X
    4690:	51 83       	std	Z+1, r21	; 0x01
    4692:	40 83       	st	Z, r20
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:33
            j++;
    4694:	01 96       	adiw	r24, 0x01	; 1
    4696:	b7 e0       	ldi	r27, 0x07	; 7
    4698:	8b 0e       	add	r8, r27
    469a:	91 1c       	adc	r9, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:30
            satellite_id[j] = i + 1;
            j++;
          } j = 0;

        /* Max Satellite Reception on Clear Day */
        for (int i = 0; i < MAX_SATELLITES; ++i)
    469c:	28 15       	cp	r18, r8
    469e:	39 05       	cpc	r19, r9
    46a0:	59 f7       	brne	.-42     	; 0x4678 <SatelliteTracker()+0x144>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:34
          if (sats[i].active) {
            snr[j] = sats[i].snr;
            j++;
          } j = 0;
    46a2:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <SatelliteTracker()::j+0x1>
    46a6:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <SatelliteTracker()::j>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:37

        /* Setup GUI Header */
        display.fillRect(0, 0, 128, 9, WHITE);
    46aa:	ee 24       	eor	r14, r14
    46ac:	e3 94       	inc	r14
    46ae:	f1 2c       	mov	r15, r1
    46b0:	09 e0       	ldi	r16, 0x09	; 9
    46b2:	10 e0       	ldi	r17, 0x00	; 0
    46b4:	20 e8       	ldi	r18, 0x80	; 128
    46b6:	30 e0       	ldi	r19, 0x00	; 0
    46b8:	50 e0       	ldi	r21, 0x00	; 0
    46ba:	40 e0       	ldi	r20, 0x00	; 0
    46bc:	70 e0       	ldi	r23, 0x00	; 0
    46be:	60 e0       	ldi	r22, 0x00	; 0
    46c0:	8d ee       	ldi	r24, 0xED	; 237
    46c2:	98 e0       	ldi	r25, 0x08	; 8
    46c4:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:38
        display.setTextSize(1);
    46c8:	61 e0       	ldi	r22, 0x01	; 1
    46ca:	8d ee       	ldi	r24, 0xED	; 237
    46cc:	98 e0       	ldi	r25, 0x08	; 8
    46ce:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    46d2:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    46d6:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    46da:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    46de:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    46e2:	8d e0       	ldi	r24, 0x0D	; 13
    46e4:	90 e0       	ldi	r25, 0x00	; 0
    46e6:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    46ea:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    46ee:	c1 e0       	ldi	r28, 0x01	; 1
    46f0:	d0 e0       	ldi	r29, 0x00	; 0
    46f2:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    46f6:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:40
        display.setTextColor(BLACK);
        display.setCursor(13, 1);   display.print("SATELLITE TRACKER");
    46fa:	6b ee       	ldi	r22, 0xEB	; 235
    46fc:	71 e0       	ldi	r23, 0x01	; 1
    46fe:	8d ee       	ldi	r24, 0xED	; 237
    4700:	98 e0       	ldi	r25, 0x08	; 8
    4702:	0e 94 1e 6c 	call	0xd83c	; 0xd83c <Print::print(char const*)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    4706:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    470a:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    470e:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    4712:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4716:	c0 e5       	ldi	r28, 0x50	; 80
    4718:	d0 e0       	ldi	r29, 0x00	; 0
    471a:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    471e:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4722:	8b e0       	ldi	r24, 0x0B	; 11
    4724:	90 e0       	ldi	r25, 0x00	; 0
    4726:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    472a:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:44

        /* Display Satellite Number */
        display.setTextColor(WHITE);
        display.setCursor(80, 11);  display.print(satellite_id[0]);
    472e:	60 91 04 03 	lds	r22, 0x0304	; 0x800304 <SatelliteTracker()::satellite_id>
    4732:	70 91 05 03 	lds	r23, 0x0305	; 0x800305 <SatelliteTracker()::satellite_id+0x1>
    4736:	4a e0       	ldi	r20, 0x0A	; 10
    4738:	50 e0       	ldi	r21, 0x00	; 0
    473a:	8d ee       	ldi	r24, 0xED	; 237
    473c:	98 e0       	ldi	r25, 0x08	; 8
    473e:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:45
        display.print(',');         display.print(satellite_id[1]);
    4742:	6c e2       	ldi	r22, 0x2C	; 44
    4744:	8d ee       	ldi	r24, 0xED	; 237
    4746:	98 e0       	ldi	r25, 0x08	; 8
    4748:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    474c:	60 91 06 03 	lds	r22, 0x0306	; 0x800306 <SatelliteTracker()::satellite_id+0x2>
    4750:	70 91 07 03 	lds	r23, 0x0307	; 0x800307 <SatelliteTracker()::satellite_id+0x3>
    4754:	4a e0       	ldi	r20, 0x0A	; 10
    4756:	50 e0       	ldi	r21, 0x00	; 0
    4758:	8d ee       	ldi	r24, 0xED	; 237
    475a:	98 e0       	ldi	r25, 0x08	; 8
    475c:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:46
        display.print(',');         display.print(satellite_id[2]);
    4760:	6c e2       	ldi	r22, 0x2C	; 44
    4762:	8d ee       	ldi	r24, 0xED	; 237
    4764:	98 e0       	ldi	r25, 0x08	; 8
    4766:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    476a:	60 91 08 03 	lds	r22, 0x0308	; 0x800308 <SatelliteTracker()::satellite_id+0x4>
    476e:	70 91 09 03 	lds	r23, 0x0309	; 0x800309 <SatelliteTracker()::satellite_id+0x5>
    4772:	4a e0       	ldi	r20, 0x0A	; 10
    4774:	50 e0       	ldi	r21, 0x00	; 0
    4776:	8d ee       	ldi	r24, 0xED	; 237
    4778:	98 e0       	ldi	r25, 0x08	; 8
    477a:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    477e:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    4782:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4786:	85 e1       	ldi	r24, 0x15	; 21
    4788:	90 e0       	ldi	r25, 0x00	; 0
    478a:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    478e:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:48

        display.setCursor(80, 21);  display.print(satellite_id[3]);
    4792:	60 91 0a 03 	lds	r22, 0x030A	; 0x80030a <SatelliteTracker()::satellite_id+0x6>
    4796:	70 91 0b 03 	lds	r23, 0x030B	; 0x80030b <SatelliteTracker()::satellite_id+0x7>
    479a:	4a e0       	ldi	r20, 0x0A	; 10
    479c:	50 e0       	ldi	r21, 0x00	; 0
    479e:	8d ee       	ldi	r24, 0xED	; 237
    47a0:	98 e0       	ldi	r25, 0x08	; 8
    47a2:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:49
        display.print(',');         display.print(satellite_id[4]);
    47a6:	6c e2       	ldi	r22, 0x2C	; 44
    47a8:	8d ee       	ldi	r24, 0xED	; 237
    47aa:	98 e0       	ldi	r25, 0x08	; 8
    47ac:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    47b0:	60 91 0c 03 	lds	r22, 0x030C	; 0x80030c <SatelliteTracker()::satellite_id+0x8>
    47b4:	70 91 0d 03 	lds	r23, 0x030D	; 0x80030d <SatelliteTracker()::satellite_id+0x9>
    47b8:	4a e0       	ldi	r20, 0x0A	; 10
    47ba:	50 e0       	ldi	r21, 0x00	; 0
    47bc:	8d ee       	ldi	r24, 0xED	; 237
    47be:	98 e0       	ldi	r25, 0x08	; 8
    47c0:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:50
        display.print(',');         display.print(satellite_id[5]);
    47c4:	6c e2       	ldi	r22, 0x2C	; 44
    47c6:	8d ee       	ldi	r24, 0xED	; 237
    47c8:	98 e0       	ldi	r25, 0x08	; 8
    47ca:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    47ce:	60 91 0e 03 	lds	r22, 0x030E	; 0x80030e <SatelliteTracker()::satellite_id+0xa>
    47d2:	70 91 0f 03 	lds	r23, 0x030F	; 0x80030f <SatelliteTracker()::satellite_id+0xb>
    47d6:	4a e0       	ldi	r20, 0x0A	; 10
    47d8:	50 e0       	ldi	r21, 0x00	; 0
    47da:	8d ee       	ldi	r24, 0xED	; 237
    47dc:	98 e0       	ldi	r25, 0x08	; 8
    47de:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    47e2:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    47e6:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    47ea:	8f e1       	ldi	r24, 0x1F	; 31
    47ec:	90 e0       	ldi	r25, 0x00	; 0
    47ee:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    47f2:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:52

        display.setCursor(80, 31);  display.print(satellite_id[6]);
    47f6:	60 91 10 03 	lds	r22, 0x0310	; 0x800310 <SatelliteTracker()::satellite_id+0xc>
    47fa:	70 91 11 03 	lds	r23, 0x0311	; 0x800311 <SatelliteTracker()::satellite_id+0xd>
    47fe:	4a e0       	ldi	r20, 0x0A	; 10
    4800:	50 e0       	ldi	r21, 0x00	; 0
    4802:	8d ee       	ldi	r24, 0xED	; 237
    4804:	98 e0       	ldi	r25, 0x08	; 8
    4806:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:53
        display.print(',');         display.print(satellite_id[7]);
    480a:	6c e2       	ldi	r22, 0x2C	; 44
    480c:	8d ee       	ldi	r24, 0xED	; 237
    480e:	98 e0       	ldi	r25, 0x08	; 8
    4810:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    4814:	60 91 12 03 	lds	r22, 0x0312	; 0x800312 <SatelliteTracker()::satellite_id+0xe>
    4818:	70 91 13 03 	lds	r23, 0x0313	; 0x800313 <SatelliteTracker()::satellite_id+0xf>
    481c:	4a e0       	ldi	r20, 0x0A	; 10
    481e:	50 e0       	ldi	r21, 0x00	; 0
    4820:	8d ee       	ldi	r24, 0xED	; 237
    4822:	98 e0       	ldi	r25, 0x08	; 8
    4824:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:54
        display.print(',');         display.print(satellite_id[8]);
    4828:	6c e2       	ldi	r22, 0x2C	; 44
    482a:	8d ee       	ldi	r24, 0xED	; 237
    482c:	98 e0       	ldi	r25, 0x08	; 8
    482e:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    4832:	60 91 14 03 	lds	r22, 0x0314	; 0x800314 <SatelliteTracker()::satellite_id+0x10>
    4836:	70 91 15 03 	lds	r23, 0x0315	; 0x800315 <SatelliteTracker()::satellite_id+0x11>
    483a:	4a e0       	ldi	r20, 0x0A	; 10
    483c:	50 e0       	ldi	r21, 0x00	; 0
    483e:	8d ee       	ldi	r24, 0xED	; 237
    4840:	98 e0       	ldi	r25, 0x08	; 8
    4842:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4846:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    484a:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    484e:	89 e2       	ldi	r24, 0x29	; 41
    4850:	90 e0       	ldi	r25, 0x00	; 0
    4852:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    4856:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:56

        display.setCursor(80, 41);  display.print(satellite_id[9]);
    485a:	60 91 16 03 	lds	r22, 0x0316	; 0x800316 <SatelliteTracker()::satellite_id+0x12>
    485e:	70 91 17 03 	lds	r23, 0x0317	; 0x800317 <SatelliteTracker()::satellite_id+0x13>
    4862:	4a e0       	ldi	r20, 0x0A	; 10
    4864:	50 e0       	ldi	r21, 0x00	; 0
    4866:	8d ee       	ldi	r24, 0xED	; 237
    4868:	98 e0       	ldi	r25, 0x08	; 8
    486a:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:57
        display.print(',');         display.print(satellite_id[10]);
    486e:	6c e2       	ldi	r22, 0x2C	; 44
    4870:	8d ee       	ldi	r24, 0xED	; 237
    4872:	98 e0       	ldi	r25, 0x08	; 8
    4874:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    4878:	60 91 18 03 	lds	r22, 0x0318	; 0x800318 <SatelliteTracker()::satellite_id+0x14>
    487c:	70 91 19 03 	lds	r23, 0x0319	; 0x800319 <SatelliteTracker()::satellite_id+0x15>
    4880:	4a e0       	ldi	r20, 0x0A	; 10
    4882:	50 e0       	ldi	r21, 0x00	; 0
    4884:	8d ee       	ldi	r24, 0xED	; 237
    4886:	98 e0       	ldi	r25, 0x08	; 8
    4888:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:58
        display.print(',');         display.print(satellite_id[11]);
    488c:	6c e2       	ldi	r22, 0x2C	; 44
    488e:	8d ee       	ldi	r24, 0xED	; 237
    4890:	98 e0       	ldi	r25, 0x08	; 8
    4892:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    4896:	60 91 1a 03 	lds	r22, 0x031A	; 0x80031a <SatelliteTracker()::satellite_id+0x16>
    489a:	70 91 1b 03 	lds	r23, 0x031B	; 0x80031b <SatelliteTracker()::satellite_id+0x17>
    489e:	4a e0       	ldi	r20, 0x0A	; 10
    48a0:	50 e0       	ldi	r21, 0x00	; 0
    48a2:	8d ee       	ldi	r24, 0xED	; 237
    48a4:	98 e0       	ldi	r25, 0x08	; 8
    48a6:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:60

        display.drawLine(78, 51, 128, 51, WHITE);
    48aa:	03 e3       	ldi	r16, 0x33	; 51
    48ac:	10 e0       	ldi	r17, 0x00	; 0
    48ae:	20 e8       	ldi	r18, 0x80	; 128
    48b0:	30 e0       	ldi	r19, 0x00	; 0
    48b2:	43 e3       	ldi	r20, 0x33	; 51
    48b4:	50 e0       	ldi	r21, 0x00	; 0
    48b6:	6e e4       	ldi	r22, 0x4E	; 78
    48b8:	70 e0       	ldi	r23, 0x00	; 0
    48ba:	8d ee       	ldi	r24, 0xED	; 237
    48bc:	98 e0       	ldi	r25, 0x08	; 8
    48be:	0e 94 6c 41 	call	0x82d8	; 0x82d8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    48c2:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    48c6:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    48ca:	87 e3       	ldi	r24, 0x37	; 55
    48cc:	90 e0       	ldi	r25, 0x00	; 0
    48ce:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    48d2:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:62
        display.setCursor(80, 55);
        display.print(F("SAT: "));  display.print(gps.satellites.value());
    48d6:	6c e4       	ldi	r22, 0x4C	; 76
    48d8:	72 e0       	ldi	r23, 0x02	; 2
    48da:	8d ee       	ldi	r24, 0xED	; 237
    48dc:	98 e0       	ldi	r25, 0x08	; 8
    48de:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   uint32_t value()        { updated = false; return val; }
    48e2:	10 92 7b 08 	sts	0x087B, r1	; 0x80087b <gps+0x69>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:62
    48e6:	40 91 80 08 	lds	r20, 0x0880	; 0x800880 <gps+0x6e>
    48ea:	50 91 81 08 	lds	r21, 0x0881	; 0x800881 <gps+0x6f>
    48ee:	60 91 82 08 	lds	r22, 0x0882	; 0x800882 <gps+0x70>
    48f2:	70 91 83 08 	lds	r23, 0x0883	; 0x800883 <gps+0x71>
    48f6:	2a e0       	ldi	r18, 0x0A	; 10
    48f8:	30 e0       	ldi	r19, 0x00	; 0
    48fa:	8d ee       	ldi	r24, 0xED	; 237
    48fc:	98 e0       	ldi	r25, 0x08	; 8
    48fe:	0e 94 c8 6c 	call	0xd990	; 0xd990 <Print::print(unsigned long, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:65

        /* Display SNR Bar graph */
        for (int i = 10; i < 64; i++) {  /* 25% */
    4902:	ca e0       	ldi	r28, 0x0A	; 10
    4904:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:67
          display.drawPixel(19, i, logic.lastState);
          logic.lastState = !logic.lastState;
    4906:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:66
        display.setCursor(80, 55);
        display.print(F("SAT: "));  display.print(gps.satellites.value());

        /* Display SNR Bar graph */
        for (int i = 10; i < 64; i++) {  /* 25% */
          display.drawPixel(19, i, logic.lastState);
    4908:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    490c:	30 e0       	ldi	r19, 0x00	; 0
    490e:	ae 01       	movw	r20, r28
    4910:	63 e1       	ldi	r22, 0x13	; 19
    4912:	70 e0       	ldi	r23, 0x00	; 0
    4914:	8d ee       	ldi	r24, 0xED	; 237
    4916:	98 e0       	ldi	r25, 0x08	; 8
    4918:	0e 94 25 4a 	call	0x944a	; 0x944a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:67
          logic.lastState = !logic.lastState;
    491c:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    4920:	81 27       	eor	r24, r17
    4922:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:65
        display.drawLine(78, 51, 128, 51, WHITE);
        display.setCursor(80, 55);
        display.print(F("SAT: "));  display.print(gps.satellites.value());

        /* Display SNR Bar graph */
        for (int i = 10; i < 64; i++) {  /* 25% */
    4926:	21 96       	adiw	r28, 0x01	; 1
    4928:	c0 34       	cpi	r28, 0x40	; 64
    492a:	d1 05       	cpc	r29, r1
    492c:	69 f7       	brne	.-38     	; 0x4908 <SatelliteTracker()+0x3d4>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:69
          display.drawPixel(19, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 50% */
    492e:	ca e0       	ldi	r28, 0x0A	; 10
    4930:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:71
          display.drawPixel(38, i, logic.lastState);
          logic.lastState = !logic.lastState;
    4932:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:70
        for (int i = 10; i < 64; i++) {  /* 25% */
          display.drawPixel(19, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 50% */
          display.drawPixel(38, i, logic.lastState);
    4934:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    4938:	30 e0       	ldi	r19, 0x00	; 0
    493a:	ae 01       	movw	r20, r28
    493c:	66 e2       	ldi	r22, 0x26	; 38
    493e:	70 e0       	ldi	r23, 0x00	; 0
    4940:	8d ee       	ldi	r24, 0xED	; 237
    4942:	98 e0       	ldi	r25, 0x08	; 8
    4944:	0e 94 25 4a 	call	0x944a	; 0x944a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:71
          logic.lastState = !logic.lastState;
    4948:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    494c:	81 27       	eor	r24, r17
    494e:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:69
        /* Display SNR Bar graph */
        for (int i = 10; i < 64; i++) {  /* 25% */
          display.drawPixel(19, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 50% */
    4952:	21 96       	adiw	r28, 0x01	; 1
    4954:	c0 34       	cpi	r28, 0x40	; 64
    4956:	d1 05       	cpc	r29, r1
    4958:	69 f7       	brne	.-38     	; 0x4934 <SatelliteTracker()+0x400>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:73
          display.drawPixel(38, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 75% */
    495a:	ca e0       	ldi	r28, 0x0A	; 10
    495c:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:75
          display.drawPixel(57, i, logic.lastState);
          logic.lastState = !logic.lastState;
    495e:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:74
        for (int i = 10; i < 64; i++) {  /* 50% */
          display.drawPixel(38, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 75% */
          display.drawPixel(57, i, logic.lastState);
    4960:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    4964:	30 e0       	ldi	r19, 0x00	; 0
    4966:	ae 01       	movw	r20, r28
    4968:	69 e3       	ldi	r22, 0x39	; 57
    496a:	70 e0       	ldi	r23, 0x00	; 0
    496c:	8d ee       	ldi	r24, 0xED	; 237
    496e:	98 e0       	ldi	r25, 0x08	; 8
    4970:	0e 94 25 4a 	call	0x944a	; 0x944a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:75
          logic.lastState = !logic.lastState;
    4974:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    4978:	81 27       	eor	r24, r17
    497a:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:73
        }
        for (int i = 10; i < 64; i++) {  /* 50% */
          display.drawPixel(38, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        for (int i = 10; i < 64; i++) {  /* 75% */
    497e:	21 96       	adiw	r28, 0x01	; 1
    4980:	c0 34       	cpi	r28, 0x40	; 64
    4982:	d1 05       	cpc	r29, r1
    4984:	69 f7       	brne	.-38     	; 0x4960 <SatelliteTracker()+0x42c>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:77
          display.drawPixel(57, i, logic.lastState);
          logic.lastState = !logic.lastState;
        }
        display.drawLine(77, 10, 77, 63, WHITE); /* 100% Reception Signal Line */
    4986:	ee 24       	eor	r14, r14
    4988:	e3 94       	inc	r14
    498a:	f1 2c       	mov	r15, r1
    498c:	0f e3       	ldi	r16, 0x3F	; 63
    498e:	10 e0       	ldi	r17, 0x00	; 0
    4990:	2d e4       	ldi	r18, 0x4D	; 77
    4992:	30 e0       	ldi	r19, 0x00	; 0
    4994:	4a e0       	ldi	r20, 0x0A	; 10
    4996:	50 e0       	ldi	r21, 0x00	; 0
    4998:	6d e4       	ldi	r22, 0x4D	; 77
    499a:	70 e0       	ldi	r23, 0x00	; 0
    499c:	8d ee       	ldi	r24, 0xED	; 237
    499e:	98 e0       	ldi	r25, 0x08	; 8
    49a0:	0e 94 6c 41 	call	0x82d8	; 0x82d8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:78
        display.fillRect(0, 13, map(snr[0], 0, 99, 1, 75), 3, WHITE);
    49a4:	60 91 1c 03 	lds	r22, 0x031C	; 0x80031c <SatelliteTracker()::snr>
    49a8:	70 91 1d 03 	lds	r23, 0x031D	; 0x80031d <SatelliteTracker()::snr+0x1>
    49ac:	07 2e       	mov	r0, r23
    49ae:	00 0c       	add	r0, r0
    49b0:	88 0b       	sbc	r24, r24
    49b2:	99 0b       	sbc	r25, r25
    49b4:	1f 92       	push	r1
    49b6:	1f 92       	push	r1
    49b8:	1f 92       	push	r1
    49ba:	cb e4       	ldi	r28, 0x4B	; 75
    49bc:	cf 93       	push	r28
    49be:	a1 2c       	mov	r10, r1
    49c0:	b1 2c       	mov	r11, r1
    49c2:	65 01       	movw	r12, r10
    49c4:	a3 94       	inc	r10
    49c6:	13 e6       	ldi	r17, 0x63	; 99
    49c8:	e1 2e       	mov	r14, r17
    49ca:	f1 2c       	mov	r15, r1
    49cc:	00 e0       	ldi	r16, 0x00	; 0
    49ce:	10 e0       	ldi	r17, 0x00	; 0
    49d0:	20 e0       	ldi	r18, 0x00	; 0
    49d2:	30 e0       	ldi	r19, 0x00	; 0
    49d4:	a9 01       	movw	r20, r18
    49d6:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    49da:	ee 24       	eor	r14, r14
    49dc:	e3 94       	inc	r14
    49de:	f1 2c       	mov	r15, r1
    49e0:	03 e0       	ldi	r16, 0x03	; 3
    49e2:	10 e0       	ldi	r17, 0x00	; 0
    49e4:	9b 01       	movw	r18, r22
    49e6:	4d e0       	ldi	r20, 0x0D	; 13
    49e8:	50 e0       	ldi	r21, 0x00	; 0
    49ea:	70 e0       	ldi	r23, 0x00	; 0
    49ec:	60 e0       	ldi	r22, 0x00	; 0
    49ee:	8d ee       	ldi	r24, 0xED	; 237
    49f0:	98 e0       	ldi	r25, 0x08	; 8
    49f2:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:79
        display.fillRect(0, 17, map(snr[1], 0, 99, 1, 75), 3, WHITE);
    49f6:	60 91 1e 03 	lds	r22, 0x031E	; 0x80031e <SatelliteTracker()::snr+0x2>
    49fa:	70 91 1f 03 	lds	r23, 0x031F	; 0x80031f <SatelliteTracker()::snr+0x3>
    49fe:	07 2e       	mov	r0, r23
    4a00:	00 0c       	add	r0, r0
    4a02:	88 0b       	sbc	r24, r24
    4a04:	99 0b       	sbc	r25, r25
    4a06:	1f 92       	push	r1
    4a08:	1f 92       	push	r1
    4a0a:	1f 92       	push	r1
    4a0c:	cf 93       	push	r28
    4a0e:	13 e6       	ldi	r17, 0x63	; 99
    4a10:	e1 2e       	mov	r14, r17
    4a12:	f1 2c       	mov	r15, r1
    4a14:	00 e0       	ldi	r16, 0x00	; 0
    4a16:	10 e0       	ldi	r17, 0x00	; 0
    4a18:	20 e0       	ldi	r18, 0x00	; 0
    4a1a:	30 e0       	ldi	r19, 0x00	; 0
    4a1c:	a9 01       	movw	r20, r18
    4a1e:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4a22:	ee 24       	eor	r14, r14
    4a24:	e3 94       	inc	r14
    4a26:	f1 2c       	mov	r15, r1
    4a28:	03 e0       	ldi	r16, 0x03	; 3
    4a2a:	10 e0       	ldi	r17, 0x00	; 0
    4a2c:	9b 01       	movw	r18, r22
    4a2e:	41 e1       	ldi	r20, 0x11	; 17
    4a30:	50 e0       	ldi	r21, 0x00	; 0
    4a32:	70 e0       	ldi	r23, 0x00	; 0
    4a34:	60 e0       	ldi	r22, 0x00	; 0
    4a36:	8d ee       	ldi	r24, 0xED	; 237
    4a38:	98 e0       	ldi	r25, 0x08	; 8
    4a3a:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:80
        display.fillRect(0, 21, map(snr[2], 0, 99, 1, 75), 3, WHITE);
    4a3e:	60 91 20 03 	lds	r22, 0x0320	; 0x800320 <SatelliteTracker()::snr+0x4>
    4a42:	70 91 21 03 	lds	r23, 0x0321	; 0x800321 <SatelliteTracker()::snr+0x5>
    4a46:	07 2e       	mov	r0, r23
    4a48:	00 0c       	add	r0, r0
    4a4a:	88 0b       	sbc	r24, r24
    4a4c:	99 0b       	sbc	r25, r25
    4a4e:	1f 92       	push	r1
    4a50:	1f 92       	push	r1
    4a52:	1f 92       	push	r1
    4a54:	cf 93       	push	r28
    4a56:	13 e6       	ldi	r17, 0x63	; 99
    4a58:	e1 2e       	mov	r14, r17
    4a5a:	f1 2c       	mov	r15, r1
    4a5c:	00 e0       	ldi	r16, 0x00	; 0
    4a5e:	10 e0       	ldi	r17, 0x00	; 0
    4a60:	20 e0       	ldi	r18, 0x00	; 0
    4a62:	30 e0       	ldi	r19, 0x00	; 0
    4a64:	a9 01       	movw	r20, r18
    4a66:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4a6a:	ee 24       	eor	r14, r14
    4a6c:	e3 94       	inc	r14
    4a6e:	f1 2c       	mov	r15, r1
    4a70:	03 e0       	ldi	r16, 0x03	; 3
    4a72:	10 e0       	ldi	r17, 0x00	; 0
    4a74:	9b 01       	movw	r18, r22
    4a76:	45 e1       	ldi	r20, 0x15	; 21
    4a78:	50 e0       	ldi	r21, 0x00	; 0
    4a7a:	70 e0       	ldi	r23, 0x00	; 0
    4a7c:	60 e0       	ldi	r22, 0x00	; 0
    4a7e:	8d ee       	ldi	r24, 0xED	; 237
    4a80:	98 e0       	ldi	r25, 0x08	; 8
    4a82:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:81
        display.fillRect(0, 25, map(snr[3], 0, 99, 1, 75), 3, WHITE);
    4a86:	60 91 22 03 	lds	r22, 0x0322	; 0x800322 <SatelliteTracker()::snr+0x6>
    4a8a:	70 91 23 03 	lds	r23, 0x0323	; 0x800323 <SatelliteTracker()::snr+0x7>
    4a8e:	07 2e       	mov	r0, r23
    4a90:	00 0c       	add	r0, r0
    4a92:	88 0b       	sbc	r24, r24
    4a94:	99 0b       	sbc	r25, r25
    4a96:	1f 92       	push	r1
    4a98:	1f 92       	push	r1
    4a9a:	1f 92       	push	r1
    4a9c:	cf 93       	push	r28
    4a9e:	13 e6       	ldi	r17, 0x63	; 99
    4aa0:	e1 2e       	mov	r14, r17
    4aa2:	f1 2c       	mov	r15, r1
    4aa4:	00 e0       	ldi	r16, 0x00	; 0
    4aa6:	10 e0       	ldi	r17, 0x00	; 0
    4aa8:	20 e0       	ldi	r18, 0x00	; 0
    4aaa:	30 e0       	ldi	r19, 0x00	; 0
    4aac:	a9 01       	movw	r20, r18
    4aae:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4ab2:	ee 24       	eor	r14, r14
    4ab4:	e3 94       	inc	r14
    4ab6:	f1 2c       	mov	r15, r1
    4ab8:	03 e0       	ldi	r16, 0x03	; 3
    4aba:	10 e0       	ldi	r17, 0x00	; 0
    4abc:	9b 01       	movw	r18, r22
    4abe:	49 e1       	ldi	r20, 0x19	; 25
    4ac0:	50 e0       	ldi	r21, 0x00	; 0
    4ac2:	70 e0       	ldi	r23, 0x00	; 0
    4ac4:	60 e0       	ldi	r22, 0x00	; 0
    4ac6:	8d ee       	ldi	r24, 0xED	; 237
    4ac8:	98 e0       	ldi	r25, 0x08	; 8
    4aca:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:82
        display.fillRect(0, 29, map(snr[4], 0, 99, 1, 75), 3, WHITE);
    4ace:	60 91 24 03 	lds	r22, 0x0324	; 0x800324 <SatelliteTracker()::snr+0x8>
    4ad2:	70 91 25 03 	lds	r23, 0x0325	; 0x800325 <SatelliteTracker()::snr+0x9>
    4ad6:	07 2e       	mov	r0, r23
    4ad8:	00 0c       	add	r0, r0
    4ada:	88 0b       	sbc	r24, r24
    4adc:	99 0b       	sbc	r25, r25
    4ade:	1f 92       	push	r1
    4ae0:	1f 92       	push	r1
    4ae2:	1f 92       	push	r1
    4ae4:	cf 93       	push	r28
    4ae6:	13 e6       	ldi	r17, 0x63	; 99
    4ae8:	e1 2e       	mov	r14, r17
    4aea:	f1 2c       	mov	r15, r1
    4aec:	00 e0       	ldi	r16, 0x00	; 0
    4aee:	10 e0       	ldi	r17, 0x00	; 0
    4af0:	20 e0       	ldi	r18, 0x00	; 0
    4af2:	30 e0       	ldi	r19, 0x00	; 0
    4af4:	a9 01       	movw	r20, r18
    4af6:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4afa:	ee 24       	eor	r14, r14
    4afc:	e3 94       	inc	r14
    4afe:	f1 2c       	mov	r15, r1
    4b00:	03 e0       	ldi	r16, 0x03	; 3
    4b02:	10 e0       	ldi	r17, 0x00	; 0
    4b04:	9b 01       	movw	r18, r22
    4b06:	4d e1       	ldi	r20, 0x1D	; 29
    4b08:	50 e0       	ldi	r21, 0x00	; 0
    4b0a:	70 e0       	ldi	r23, 0x00	; 0
    4b0c:	60 e0       	ldi	r22, 0x00	; 0
    4b0e:	8d ee       	ldi	r24, 0xED	; 237
    4b10:	98 e0       	ldi	r25, 0x08	; 8
    4b12:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:83
        display.fillRect(0, 33, map(snr[5], 0, 99, 1, 75), 3, WHITE);
    4b16:	60 91 26 03 	lds	r22, 0x0326	; 0x800326 <SatelliteTracker()::snr+0xa>
    4b1a:	70 91 27 03 	lds	r23, 0x0327	; 0x800327 <SatelliteTracker()::snr+0xb>
    4b1e:	07 2e       	mov	r0, r23
    4b20:	00 0c       	add	r0, r0
    4b22:	88 0b       	sbc	r24, r24
    4b24:	99 0b       	sbc	r25, r25
    4b26:	1f 92       	push	r1
    4b28:	1f 92       	push	r1
    4b2a:	1f 92       	push	r1
    4b2c:	cf 93       	push	r28
    4b2e:	13 e6       	ldi	r17, 0x63	; 99
    4b30:	e1 2e       	mov	r14, r17
    4b32:	f1 2c       	mov	r15, r1
    4b34:	00 e0       	ldi	r16, 0x00	; 0
    4b36:	10 e0       	ldi	r17, 0x00	; 0
    4b38:	20 e0       	ldi	r18, 0x00	; 0
    4b3a:	30 e0       	ldi	r19, 0x00	; 0
    4b3c:	a9 01       	movw	r20, r18
    4b3e:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4b42:	ee 24       	eor	r14, r14
    4b44:	e3 94       	inc	r14
    4b46:	f1 2c       	mov	r15, r1
    4b48:	03 e0       	ldi	r16, 0x03	; 3
    4b4a:	10 e0       	ldi	r17, 0x00	; 0
    4b4c:	9b 01       	movw	r18, r22
    4b4e:	41 e2       	ldi	r20, 0x21	; 33
    4b50:	50 e0       	ldi	r21, 0x00	; 0
    4b52:	70 e0       	ldi	r23, 0x00	; 0
    4b54:	60 e0       	ldi	r22, 0x00	; 0
    4b56:	8d ee       	ldi	r24, 0xED	; 237
    4b58:	98 e0       	ldi	r25, 0x08	; 8
    4b5a:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:84
        display.fillRect(0, 37, map(snr[6], 0, 99, 1, 75), 3, WHITE);
    4b5e:	60 91 28 03 	lds	r22, 0x0328	; 0x800328 <SatelliteTracker()::snr+0xc>
    4b62:	70 91 29 03 	lds	r23, 0x0329	; 0x800329 <SatelliteTracker()::snr+0xd>
    4b66:	07 2e       	mov	r0, r23
    4b68:	00 0c       	add	r0, r0
    4b6a:	88 0b       	sbc	r24, r24
    4b6c:	99 0b       	sbc	r25, r25
    4b6e:	1f 92       	push	r1
    4b70:	1f 92       	push	r1
    4b72:	1f 92       	push	r1
    4b74:	cf 93       	push	r28
    4b76:	13 e6       	ldi	r17, 0x63	; 99
    4b78:	e1 2e       	mov	r14, r17
    4b7a:	f1 2c       	mov	r15, r1
    4b7c:	00 e0       	ldi	r16, 0x00	; 0
    4b7e:	10 e0       	ldi	r17, 0x00	; 0
    4b80:	20 e0       	ldi	r18, 0x00	; 0
    4b82:	30 e0       	ldi	r19, 0x00	; 0
    4b84:	a9 01       	movw	r20, r18
    4b86:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4b8a:	ee 24       	eor	r14, r14
    4b8c:	e3 94       	inc	r14
    4b8e:	f1 2c       	mov	r15, r1
    4b90:	03 e0       	ldi	r16, 0x03	; 3
    4b92:	10 e0       	ldi	r17, 0x00	; 0
    4b94:	9b 01       	movw	r18, r22
    4b96:	45 e2       	ldi	r20, 0x25	; 37
    4b98:	50 e0       	ldi	r21, 0x00	; 0
    4b9a:	70 e0       	ldi	r23, 0x00	; 0
    4b9c:	60 e0       	ldi	r22, 0x00	; 0
    4b9e:	8d ee       	ldi	r24, 0xED	; 237
    4ba0:	98 e0       	ldi	r25, 0x08	; 8
    4ba2:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:85
        display.fillRect(0, 41, map(snr[7], 0, 99, 1, 75), 3, WHITE);
    4ba6:	60 91 2a 03 	lds	r22, 0x032A	; 0x80032a <SatelliteTracker()::snr+0xe>
    4baa:	70 91 2b 03 	lds	r23, 0x032B	; 0x80032b <SatelliteTracker()::snr+0xf>
    4bae:	07 2e       	mov	r0, r23
    4bb0:	00 0c       	add	r0, r0
    4bb2:	88 0b       	sbc	r24, r24
    4bb4:	99 0b       	sbc	r25, r25
    4bb6:	1f 92       	push	r1
    4bb8:	1f 92       	push	r1
    4bba:	1f 92       	push	r1
    4bbc:	cf 93       	push	r28
    4bbe:	13 e6       	ldi	r17, 0x63	; 99
    4bc0:	e1 2e       	mov	r14, r17
    4bc2:	f1 2c       	mov	r15, r1
    4bc4:	00 e0       	ldi	r16, 0x00	; 0
    4bc6:	10 e0       	ldi	r17, 0x00	; 0
    4bc8:	20 e0       	ldi	r18, 0x00	; 0
    4bca:	30 e0       	ldi	r19, 0x00	; 0
    4bcc:	a9 01       	movw	r20, r18
    4bce:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4bd2:	ed b7       	in	r30, 0x3d	; 61
    4bd4:	fe b7       	in	r31, 0x3e	; 62
    4bd6:	b0 96       	adiw	r30, 0x20	; 32
    4bd8:	0f b6       	in	r0, 0x3f	; 63
    4bda:	f8 94       	cli
    4bdc:	fe bf       	out	0x3e, r31	; 62
    4bde:	0f be       	out	0x3f, r0	; 63
    4be0:	ed bf       	out	0x3d, r30	; 61
    4be2:	ee 24       	eor	r14, r14
    4be4:	e3 94       	inc	r14
    4be6:	f1 2c       	mov	r15, r1
    4be8:	03 e0       	ldi	r16, 0x03	; 3
    4bea:	10 e0       	ldi	r17, 0x00	; 0
    4bec:	9b 01       	movw	r18, r22
    4bee:	49 e2       	ldi	r20, 0x29	; 41
    4bf0:	50 e0       	ldi	r21, 0x00	; 0
    4bf2:	70 e0       	ldi	r23, 0x00	; 0
    4bf4:	60 e0       	ldi	r22, 0x00	; 0
    4bf6:	8d ee       	ldi	r24, 0xED	; 237
    4bf8:	98 e0       	ldi	r25, 0x08	; 8
    4bfa:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:86
        display.fillRect(0, 45, map(snr[8], 0, 99, 1, 75), 3, WHITE);
    4bfe:	60 91 2c 03 	lds	r22, 0x032C	; 0x80032c <SatelliteTracker()::snr+0x10>
    4c02:	70 91 2d 03 	lds	r23, 0x032D	; 0x80032d <SatelliteTracker()::snr+0x11>
    4c06:	07 2e       	mov	r0, r23
    4c08:	00 0c       	add	r0, r0
    4c0a:	88 0b       	sbc	r24, r24
    4c0c:	99 0b       	sbc	r25, r25
    4c0e:	1f 92       	push	r1
    4c10:	1f 92       	push	r1
    4c12:	1f 92       	push	r1
    4c14:	cf 93       	push	r28
    4c16:	13 e6       	ldi	r17, 0x63	; 99
    4c18:	e1 2e       	mov	r14, r17
    4c1a:	f1 2c       	mov	r15, r1
    4c1c:	00 e0       	ldi	r16, 0x00	; 0
    4c1e:	10 e0       	ldi	r17, 0x00	; 0
    4c20:	20 e0       	ldi	r18, 0x00	; 0
    4c22:	30 e0       	ldi	r19, 0x00	; 0
    4c24:	a9 01       	movw	r20, r18
    4c26:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4c2a:	ee 24       	eor	r14, r14
    4c2c:	e3 94       	inc	r14
    4c2e:	f1 2c       	mov	r15, r1
    4c30:	03 e0       	ldi	r16, 0x03	; 3
    4c32:	10 e0       	ldi	r17, 0x00	; 0
    4c34:	9b 01       	movw	r18, r22
    4c36:	4d e2       	ldi	r20, 0x2D	; 45
    4c38:	50 e0       	ldi	r21, 0x00	; 0
    4c3a:	70 e0       	ldi	r23, 0x00	; 0
    4c3c:	60 e0       	ldi	r22, 0x00	; 0
    4c3e:	8d ee       	ldi	r24, 0xED	; 237
    4c40:	98 e0       	ldi	r25, 0x08	; 8
    4c42:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:87
        display.fillRect(0, 49, map(snr[9], 0, 99, 1, 75), 3, WHITE);
    4c46:	60 91 2e 03 	lds	r22, 0x032E	; 0x80032e <SatelliteTracker()::snr+0x12>
    4c4a:	70 91 2f 03 	lds	r23, 0x032F	; 0x80032f <SatelliteTracker()::snr+0x13>
    4c4e:	07 2e       	mov	r0, r23
    4c50:	00 0c       	add	r0, r0
    4c52:	88 0b       	sbc	r24, r24
    4c54:	99 0b       	sbc	r25, r25
    4c56:	1f 92       	push	r1
    4c58:	1f 92       	push	r1
    4c5a:	1f 92       	push	r1
    4c5c:	cf 93       	push	r28
    4c5e:	13 e6       	ldi	r17, 0x63	; 99
    4c60:	e1 2e       	mov	r14, r17
    4c62:	f1 2c       	mov	r15, r1
    4c64:	00 e0       	ldi	r16, 0x00	; 0
    4c66:	10 e0       	ldi	r17, 0x00	; 0
    4c68:	20 e0       	ldi	r18, 0x00	; 0
    4c6a:	30 e0       	ldi	r19, 0x00	; 0
    4c6c:	a9 01       	movw	r20, r18
    4c6e:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4c72:	ee 24       	eor	r14, r14
    4c74:	e3 94       	inc	r14
    4c76:	f1 2c       	mov	r15, r1
    4c78:	03 e0       	ldi	r16, 0x03	; 3
    4c7a:	10 e0       	ldi	r17, 0x00	; 0
    4c7c:	9b 01       	movw	r18, r22
    4c7e:	41 e3       	ldi	r20, 0x31	; 49
    4c80:	50 e0       	ldi	r21, 0x00	; 0
    4c82:	70 e0       	ldi	r23, 0x00	; 0
    4c84:	60 e0       	ldi	r22, 0x00	; 0
    4c86:	8d ee       	ldi	r24, 0xED	; 237
    4c88:	98 e0       	ldi	r25, 0x08	; 8
    4c8a:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:88
        display.fillRect(0, 53, map(snr[10], 0, 99, 1, 75), 3, WHITE);
    4c8e:	60 91 30 03 	lds	r22, 0x0330	; 0x800330 <SatelliteTracker()::snr+0x14>
    4c92:	70 91 31 03 	lds	r23, 0x0331	; 0x800331 <SatelliteTracker()::snr+0x15>
    4c96:	07 2e       	mov	r0, r23
    4c98:	00 0c       	add	r0, r0
    4c9a:	88 0b       	sbc	r24, r24
    4c9c:	99 0b       	sbc	r25, r25
    4c9e:	1f 92       	push	r1
    4ca0:	1f 92       	push	r1
    4ca2:	1f 92       	push	r1
    4ca4:	cf 93       	push	r28
    4ca6:	13 e6       	ldi	r17, 0x63	; 99
    4ca8:	e1 2e       	mov	r14, r17
    4caa:	f1 2c       	mov	r15, r1
    4cac:	00 e0       	ldi	r16, 0x00	; 0
    4cae:	10 e0       	ldi	r17, 0x00	; 0
    4cb0:	20 e0       	ldi	r18, 0x00	; 0
    4cb2:	30 e0       	ldi	r19, 0x00	; 0
    4cb4:	a9 01       	movw	r20, r18
    4cb6:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4cba:	ee 24       	eor	r14, r14
    4cbc:	e3 94       	inc	r14
    4cbe:	f1 2c       	mov	r15, r1
    4cc0:	03 e0       	ldi	r16, 0x03	; 3
    4cc2:	10 e0       	ldi	r17, 0x00	; 0
    4cc4:	9b 01       	movw	r18, r22
    4cc6:	45 e3       	ldi	r20, 0x35	; 53
    4cc8:	50 e0       	ldi	r21, 0x00	; 0
    4cca:	70 e0       	ldi	r23, 0x00	; 0
    4ccc:	60 e0       	ldi	r22, 0x00	; 0
    4cce:	8d ee       	ldi	r24, 0xED	; 237
    4cd0:	98 e0       	ldi	r25, 0x08	; 8
    4cd2:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:89
        display.fillRect(0, 57, map(snr[11], 0, 99, 1, 75), 3, WHITE);
    4cd6:	60 91 32 03 	lds	r22, 0x0332	; 0x800332 <SatelliteTracker()::snr+0x16>
    4cda:	70 91 33 03 	lds	r23, 0x0333	; 0x800333 <SatelliteTracker()::snr+0x17>
    4cde:	07 2e       	mov	r0, r23
    4ce0:	00 0c       	add	r0, r0
    4ce2:	88 0b       	sbc	r24, r24
    4ce4:	99 0b       	sbc	r25, r25
    4ce6:	1f 92       	push	r1
    4ce8:	1f 92       	push	r1
    4cea:	1f 92       	push	r1
    4cec:	cf 93       	push	r28
    4cee:	13 e6       	ldi	r17, 0x63	; 99
    4cf0:	e1 2e       	mov	r14, r17
    4cf2:	f1 2c       	mov	r15, r1
    4cf4:	00 e0       	ldi	r16, 0x00	; 0
    4cf6:	10 e0       	ldi	r17, 0x00	; 0
    4cf8:	20 e0       	ldi	r18, 0x00	; 0
    4cfa:	30 e0       	ldi	r19, 0x00	; 0
    4cfc:	a9 01       	movw	r20, r18
    4cfe:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    4d02:	ee 24       	eor	r14, r14
    4d04:	e3 94       	inc	r14
    4d06:	f1 2c       	mov	r15, r1
    4d08:	03 e0       	ldi	r16, 0x03	; 3
    4d0a:	10 e0       	ldi	r17, 0x00	; 0
    4d0c:	9b 01       	movw	r18, r22
    4d0e:	49 e3       	ldi	r20, 0x39	; 57
    4d10:	50 e0       	ldi	r21, 0x00	; 0
    4d12:	70 e0       	ldi	r23, 0x00	; 0
    4d14:	60 e0       	ldi	r22, 0x00	; 0
    4d16:	8d ee       	ldi	r24, 0xED	; 237
    4d18:	98 e0       	ldi	r25, 0x08	; 8
    4d1a:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
    4d1e:	2d b7       	in	r18, 0x3d	; 61
    4d20:	3e b7       	in	r19, 0x3e	; 62
    4d22:	20 5f       	subi	r18, 0xF0	; 240
    4d24:	3f 4f       	sbci	r19, 0xFF	; 255
    4d26:	0f b6       	in	r0, 0x3f	; 63
    4d28:	f8 94       	cli
    4d2a:	3e bf       	out	0x3e, r19	; 62
    4d2c:	0f be       	out	0x3f, r0	; 63
    4d2e:	2d bf       	out	0x3d, r18	; 61
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:93

        /* Reset All Active Satellite Reception State */
        for (int i = 0; i < MAX_SATELLITES; ++i)
          sats[i].active = false;
    4d30:	d3 01       	movw	r26, r6
    4d32:	1c 92       	st	X, r1
    4d34:	b7 e0       	ldi	r27, 0x07	; 7
    4d36:	6b 0e       	add	r6, r27
    4d38:	71 1c       	adc	r7, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:92
        display.fillRect(0, 49, map(snr[9], 0, 99, 1, 75), 3, WHITE);
        display.fillRect(0, 53, map(snr[10], 0, 99, 1, 75), 3, WHITE);
        display.fillRect(0, 57, map(snr[11], 0, 99, 1, 75), 3, WHITE);

        /* Reset All Active Satellite Reception State */
        for (int i = 0; i < MAX_SATELLITES; ++i)
    4d3a:	68 14       	cp	r6, r8
    4d3c:	79 04       	cpc	r7, r9
    4d3e:	c1 f7       	brne	.-16     	; 0x4d30 <SatelliteTracker()+0x7fc>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
    4d40:	10 92 7b 08 	sts	0x087B, r1	; 0x80087b <gps+0x69>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:95
          sats[i].active = false;

        if (gps.satellites.value() == 0) {
    4d44:	80 91 80 08 	lds	r24, 0x0880	; 0x800880 <gps+0x6e>
    4d48:	90 91 81 08 	lds	r25, 0x0881	; 0x800881 <gps+0x6f>
    4d4c:	a0 91 82 08 	lds	r26, 0x0882	; 0x800882 <gps+0x70>
    4d50:	b0 91 83 08 	lds	r27, 0x0883	; 0x800883 <gps+0x71>
    4d54:	89 2b       	or	r24, r25
    4d56:	8a 2b       	or	r24, r26
    4d58:	8b 2b       	or	r24, r27
    4d5a:	49 f5       	brne	.+82     	; 0x4dae <SatelliteTracker()+0x87a>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    4d5c:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    4d60:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    4d64:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    4d68:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:97
          display.setTextColor(BLACK);
          display.fillRect(2, 31, 73, 9, WHITE);
    4d6c:	ee 24       	eor	r14, r14
    4d6e:	e3 94       	inc	r14
    4d70:	f1 2c       	mov	r15, r1
    4d72:	09 e0       	ldi	r16, 0x09	; 9
    4d74:	10 e0       	ldi	r17, 0x00	; 0
    4d76:	29 e4       	ldi	r18, 0x49	; 73
    4d78:	30 e0       	ldi	r19, 0x00	; 0
    4d7a:	4f e1       	ldi	r20, 0x1F	; 31
    4d7c:	50 e0       	ldi	r21, 0x00	; 0
    4d7e:	62 e0       	ldi	r22, 0x02	; 2
    4d80:	70 e0       	ldi	r23, 0x00	; 0
    4d82:	8d ee       	ldi	r24, 0xED	; 237
    4d84:	98 e0       	ldi	r25, 0x08	; 8
    4d86:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4d8a:	83 e0       	ldi	r24, 0x03	; 3
    4d8c:	90 e0       	ldi	r25, 0x00	; 0
    4d8e:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    4d92:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4d96:	80 e2       	ldi	r24, 0x20	; 32
    4d98:	90 e0       	ldi	r25, 0x00	; 0
    4d9a:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    4d9e:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z16SatelliteTrackerv():
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:99
          display.setCursor(3, 32);
          display.print(F("ACQUIRING..."));
    4da2:	6f e3       	ldi	r22, 0x3F	; 63
    4da4:	72 e0       	ldi	r23, 0x02	; 2
    4da6:	8d ee       	ldi	r24, 0xED	; 237
    4da8:	98 e0       	ldi	r25, 0x08	; 8
    4daa:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:102
        }

        display.display();
    4dae:	8d ee       	ldi	r24, 0xED	; 237
    4db0:	98 e0       	ldi	r25, 0x08	; 8
    4db2:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:103
        display.clearDisplay();
    4db6:	8d ee       	ldi	r24, 0xED	; 237
    4db8:	98 e0       	ldi	r25, 0x08	; 8
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:107
      }
    }
  }
}
    4dba:	df 91       	pop	r29
    4dbc:	cf 91       	pop	r28
    4dbe:	1f 91       	pop	r17
    4dc0:	0f 91       	pop	r16
    4dc2:	ff 90       	pop	r15
    4dc4:	ef 90       	pop	r14
    4dc6:	df 90       	pop	r13
    4dc8:	cf 90       	pop	r12
    4dca:	bf 90       	pop	r11
    4dcc:	af 90       	pop	r10
    4dce:	9f 90       	pop	r9
    4dd0:	8f 90       	pop	r8
    4dd2:	7f 90       	pop	r7
    4dd4:	6f 90       	pop	r6
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:103
          display.setCursor(3, 32);
          display.print(F("ACQUIRING..."));
        }

        display.display();
        display.clearDisplay();
    4dd6:	0c 94 8f 4c 	jmp	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/SatelliteTracker.ino:107
      }
    }
  }
}
    4dda:	df 91       	pop	r29
    4ddc:	cf 91       	pop	r28
    4dde:	1f 91       	pop	r17
    4de0:	0f 91       	pop	r16
    4de2:	ff 90       	pop	r15
    4de4:	ef 90       	pop	r14
    4de6:	df 90       	pop	r13
    4de8:	cf 90       	pop	r12
    4dea:	bf 90       	pop	r11
    4dec:	af 90       	pop	r10
    4dee:	9f 90       	pop	r9
    4df0:	8f 90       	pop	r8
    4df2:	7f 90       	pop	r7
    4df4:	6f 90       	pop	r6
    4df6:	08 95       	ret

00004df8 <decodeGPSNMEA(unsigned long) [clone .constprop.6]>:
_ZL13decodeGPSNMEAm.constprop.6():
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:122
                                    + eeprom.lng_fract[0] * 1e-2
                                    + eeprom.lng_fract[1] * 1e-4
                                    + eeprom.lng_fract[2] * 1e-6;
}

static void decodeGPSNMEA(unsigned long ms) {
    4df8:	cf 92       	push	r12
    4dfa:	df 92       	push	r13
    4dfc:	ef 92       	push	r14
    4dfe:	ff 92       	push	r15
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:123
        unsigned long start = millis();
    4e00:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    4e04:	6b 01       	movw	r12, r22
    4e06:	7c 01       	movw	r14, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:125
        do {
                while (ss.available()) gps.encode(ss.read());
    4e08:	83 ef       	ldi	r24, 0xF3	; 243
    4e0a:	97 e0       	ldi	r25, 0x07	; 7
    4e0c:	0e 94 ab 5f 	call	0xbf56	; 0xbf56 <SoftwareSerial::available()>
    4e10:	89 2b       	or	r24, r25
    4e12:	51 f0       	breq	.+20     	; 0x4e28 <decodeGPSNMEA(unsigned long) [clone .constprop.6]+0x30>
    4e14:	83 ef       	ldi	r24, 0xF3	; 243
    4e16:	97 e0       	ldi	r25, 0x07	; 7
    4e18:	0e 94 15 5f 	call	0xbe2a	; 0xbe2a <SoftwareSerial::read()>
    4e1c:	68 2f       	mov	r22, r24
    4e1e:	82 e1       	ldi	r24, 0x12	; 18
    4e20:	98 e0       	ldi	r25, 0x08	; 8
    4e22:	0e 94 33 68 	call	0xd066	; 0xd066 <TinyGPSPlus::encode(char)>
    4e26:	f0 cf       	rjmp	.-32     	; 0x4e08 <decodeGPSNMEA(unsigned long) [clone .constprop.6]+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:126
        } while (millis() - start < ms);
    4e28:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    4e2c:	6c 19       	sub	r22, r12
    4e2e:	7d 09       	sbc	r23, r13
    4e30:	8e 09       	sbc	r24, r14
    4e32:	9f 09       	sbc	r25, r15
    4e34:	68 3e       	cpi	r22, 0xE8	; 232
    4e36:	73 40       	sbci	r23, 0x03	; 3
    4e38:	81 05       	cpc	r24, r1
    4e3a:	91 05       	cpc	r25, r1
    4e3c:	28 f3       	brcs	.-54     	; 0x4e08 <decodeGPSNMEA(unsigned long) [clone .constprop.6]+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UsrFnc.ino:127
}
    4e3e:	ff 90       	pop	r15
    4e40:	ef 90       	pop	r14
    4e42:	df 90       	pop	r13
    4e44:	cf 90       	pop	r12
    4e46:	08 95       	ret

00004e48 <WaypointMenu()>:
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:2
void WaypointMenu(void)
{
    4e48:	8f 92       	push	r8
    4e4a:	9f 92       	push	r9
    4e4c:	af 92       	push	r10
    4e4e:	bf 92       	push	r11
    4e50:	cf 92       	push	r12
    4e52:	df 92       	push	r13
    4e54:	ef 92       	push	r14
    4e56:	ff 92       	push	r15
    4e58:	0f 93       	push	r16
    4e5a:	1f 93       	push	r17
    4e5c:	cf 93       	push	r28
    4e5e:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:9
            Latitude Min/Max: -90 -> 90
            Longitude Min/Max: -180 -> 180
         */

        /* Get Waypoint From EEPROM */
        if(waypoint.isStartUp) {
    4e60:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <waypoint+0x10>
    4e64:	88 23       	and	r24, r24
    4e66:	09 f4       	brne	.+2      	; 0x4e6a <WaypointMenu()+0x22>
    4e68:	58 c1       	rjmp	.+688    	; 0x511a <WaypointMenu()+0x2d2>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    4e6a:	ad e1       	ldi	r26, 0x1D	; 29
    4e6c:	ca 2e       	mov	r12, r26
    4e6e:	d1 2c       	mov	r13, r1
    4e70:	b8 e3       	ldi	r27, 0x38	; 56
    4e72:	ab 2e       	mov	r10, r27
    4e74:	b1 2c       	mov	r11, r1
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:11
                while(true) {
                        display.clearDisplay();
    4e76:	8d ee       	ldi	r24, 0xED	; 237
    4e78:	98 e0       	ldi	r25, 0x08	; 8
    4e7a:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:12
                        display.setTextSize(1);
    4e7e:	61 e0       	ldi	r22, 0x01	; 1
    4e80:	8d ee       	ldi	r24, 0xED	; 237
    4e82:	98 e0       	ldi	r25, 0x08	; 8
    4e84:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    4e88:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    4e8c:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    4e90:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    4e94:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:14
                        display.setTextColor(BLACK);
                        display.fillRect(0, 0, 128, 9, WHITE);
    4e98:	ee 24       	eor	r14, r14
    4e9a:	e3 94       	inc	r14
    4e9c:	f1 2c       	mov	r15, r1
    4e9e:	09 e0       	ldi	r16, 0x09	; 9
    4ea0:	10 e0       	ldi	r17, 0x00	; 0
    4ea2:	20 e8       	ldi	r18, 0x80	; 128
    4ea4:	30 e0       	ldi	r19, 0x00	; 0
    4ea6:	50 e0       	ldi	r21, 0x00	; 0
    4ea8:	40 e0       	ldi	r20, 0x00	; 0
    4eaa:	70 e0       	ldi	r23, 0x00	; 0
    4eac:	60 e0       	ldi	r22, 0x00	; 0
    4eae:	8d ee       	ldi	r24, 0xED	; 237
    4eb0:	98 e0       	ldi	r25, 0x08	; 8
    4eb2:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4eb6:	c1 e0       	ldi	r28, 0x01	; 1
    4eb8:	d0 e0       	ldi	r29, 0x00	; 0
    4eba:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    4ebe:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4ec2:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    4ec6:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:16
                        display.setCursor(1, 1);
                        display.print(F("SELECT WAYPOINT"));
    4eca:	6a e7       	ldi	r22, 0x7A	; 122
    4ecc:	71 e0       	ldi	r23, 0x01	; 1
    4ece:	8d ee       	ldi	r24, 0xED	; 237
    4ed0:	98 e0       	ldi	r25, 0x08	; 8
    4ed2:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    4ed6:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    4eda:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    4ede:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    4ee2:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4ee6:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    4eea:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4eee:	d0 92 fc 08 	sts	0x08FC, r13	; 0x8008fc <display+0xf>
    4ef2:	c0 92 fb 08 	sts	0x08FB, r12	; 0x8008fb <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:20

                        display.setTextColor(WHITE);
                        display.setCursor(1, 29);
                        display.print(F("WAYPOINT: "));
    4ef6:	6f e6       	ldi	r22, 0x6F	; 111
    4ef8:	71 e0       	ldi	r23, 0x01	; 1
    4efa:	8d ee       	ldi	r24, 0xED	; 237
    4efc:	98 e0       	ldi	r25, 0x08	; 8
    4efe:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:21
                        display.print(waypoint.waypoint_select);
    4f02:	60 91 70 01 	lds	r22, 0x0170	; 0x800170 <waypoint+0xe>
    4f06:	70 91 71 01 	lds	r23, 0x0171	; 0x800171 <waypoint+0xf>
    4f0a:	4a e0       	ldi	r20, 0x0A	; 10
    4f0c:	50 e0       	ldi	r21, 0x00	; 0
    4f0e:	8d ee       	ldi	r24, 0xED	; 237
    4f10:	98 e0       	ldi	r25, 0x08	; 8
    4f12:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    4f16:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    4f1a:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    4f1e:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    4f22:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:23
                        display.setCursor(1, 56);
                        display.print(F("PRESS (B) TO SELECT"));
    4f26:	6b e5       	ldi	r22, 0x5B	; 91
    4f28:	71 e0       	ldi	r23, 0x01	; 1
    4f2a:	8d ee       	ldi	r24, 0xED	; 237
    4f2c:	98 e0       	ldi	r25, 0x08	; 8
    4f2e:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:24
                        display.display();
    4f32:	8d ee       	ldi	r24, 0xED	; 237
    4f34:	98 e0       	ldi	r25, 0x08	; 8
    4f36:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:26

                        if (waypoint.waypoint_select > 5) waypoint.waypoint_select = 0;
    4f3a:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <waypoint+0xe>
    4f3e:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <waypoint+0xf>
    4f42:	06 97       	sbiw	r24, 0x06	; 6
    4f44:	24 f0       	brlt	.+8      	; 0x4f4e <WaypointMenu()+0x106>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:26 (discriminator 1)
    4f46:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <waypoint+0xf>
    4f4a:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <waypoint+0xe>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:30

                        /* Get Waypoint ID */
                        static unsigned long last_interrupt_time = 0;
                        if (!digitalRead(C_Pin)) {
    4f4e:	80 e0       	ldi	r24, 0x00	; 0
    4f50:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    4f54:	89 2b       	or	r24, r25
    4f56:	31 f5       	brne	.+76     	; 0x4fa4 <WaypointMenu()+0x15c>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:31
                                if (millis() - last_interrupt_time > 200) {
    4f58:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    4f5c:	00 91 fe 02 	lds	r16, 0x02FE	; 0x8002fe <WaypointMenu()::last_interrupt_time>
    4f60:	10 91 ff 02 	lds	r17, 0x02FF	; 0x8002ff <WaypointMenu()::last_interrupt_time+0x1>
    4f64:	20 91 00 03 	lds	r18, 0x0300	; 0x800300 <WaypointMenu()::last_interrupt_time+0x2>
    4f68:	30 91 01 03 	lds	r19, 0x0301	; 0x800301 <WaypointMenu()::last_interrupt_time+0x3>
    4f6c:	60 1b       	sub	r22, r16
    4f6e:	71 0b       	sbc	r23, r17
    4f70:	82 0b       	sbc	r24, r18
    4f72:	93 0b       	sbc	r25, r19
    4f74:	69 3c       	cpi	r22, 0xC9	; 201
    4f76:	71 05       	cpc	r23, r1
    4f78:	81 05       	cpc	r24, r1
    4f7a:	91 05       	cpc	r25, r1
    4f7c:	48 f0       	brcs	.+18     	; 0x4f90 <WaypointMenu()+0x148>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:32
                                        waypoint.waypoint_select++;
    4f7e:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <waypoint+0xe>
    4f82:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <waypoint+0xf>
    4f86:	01 96       	adiw	r24, 0x01	; 1
    4f88:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <waypoint+0xf>
    4f8c:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <waypoint+0xe>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:34
                                }
                                last_interrupt_time = millis(); /* Update Interrupt Time */
    4f90:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    4f94:	60 93 fe 02 	sts	0x02FE, r22	; 0x8002fe <WaypointMenu()::last_interrupt_time>
    4f98:	70 93 ff 02 	sts	0x02FF, r23	; 0x8002ff <WaypointMenu()::last_interrupt_time+0x1>
    4f9c:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <WaypointMenu()::last_interrupt_time+0x2>
    4fa0:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <WaypointMenu()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:38
                        }

                        /* Get Coordinate From EERPROM */
                        if(!digitalRead(B_Pin)) {
    4fa4:	81 e0       	ldi	r24, 0x01	; 1
    4fa6:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    4faa:	89 2b       	or	r24, r25
    4fac:	09 f0       	breq	.+2      	; 0x4fb0 <WaypointMenu()+0x168>
    4fae:	63 cf       	rjmp	.-314    	; 0x4e76 <WaypointMenu()+0x2e>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:39
                                if (millis() - last_interrupt_time > 200) {
    4fb0:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    4fb4:	00 91 fe 02 	lds	r16, 0x02FE	; 0x8002fe <WaypointMenu()::last_interrupt_time>
    4fb8:	10 91 ff 02 	lds	r17, 0x02FF	; 0x8002ff <WaypointMenu()::last_interrupt_time+0x1>
    4fbc:	20 91 00 03 	lds	r18, 0x0300	; 0x800300 <WaypointMenu()::last_interrupt_time+0x2>
    4fc0:	30 91 01 03 	lds	r19, 0x0301	; 0x800301 <WaypointMenu()::last_interrupt_time+0x3>
    4fc4:	60 1b       	sub	r22, r16
    4fc6:	71 0b       	sbc	r23, r17
    4fc8:	82 0b       	sbc	r24, r18
    4fca:	93 0b       	sbc	r25, r19
    4fcc:	69 3c       	cpi	r22, 0xC9	; 201
    4fce:	71 05       	cpc	r23, r1
    4fd0:	81 05       	cpc	r24, r1
    4fd2:	91 05       	cpc	r25, r1
    4fd4:	08 f4       	brcc	.+2      	; 0x4fd8 <WaypointMenu()+0x190>
    4fd6:	4f cf       	rjmp	.-354    	; 0x4e76 <WaypointMenu()+0x2e>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:40
                                        last_interrupt_time = millis(); /* Update Interrupt Time */
    4fd8:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    4fdc:	60 93 fe 02 	sts	0x02FE, r22	; 0x8002fe <WaypointMenu()::last_interrupt_time>
    4fe0:	70 93 ff 02 	sts	0x02FF, r23	; 0x8002ff <WaypointMenu()::last_interrupt_time+0x1>
    4fe4:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <WaypointMenu()::last_interrupt_time+0x2>
    4fe8:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <WaypointMenu()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:42
                                        /* Read Latitude */
                                        waypoint.x_goto_lat = decodeFromEEPROM(
    4fec:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <waypoint+0xe>
    4ff0:	f0 91 71 01 	lds	r31, 0x0171	; 0x800171 <waypoint+0xf>
    4ff4:	ee 0f       	add	r30, r30
    4ff6:	ff 1f       	adc	r31, r31
    4ff8:	ec 59       	subi	r30, 0x9C	; 156
    4ffa:	fe 4f       	sbci	r31, 0xFE	; 254
    4ffc:	80 81       	ld	r24, Z
    4ffe:	91 81       	ldd	r25, Z+1	; 0x01
    5000:	0e 94 2f 12 	call	0x245e	; 0x245e <decodeFromEEPROM(int)>
    5004:	60 93 7b 01 	sts	0x017B, r22	; 0x80017b <waypoint+0x19>
    5008:	70 93 7c 01 	sts	0x017C, r23	; 0x80017c <waypoint+0x1a>
    500c:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <waypoint+0x1b>
    5010:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <waypoint+0x1c>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:46
                                                waypoint.waypoint_memory_address[waypoint.waypoint_select]);
                                        /* Read Longitude */
                                        waypoint.y_goto_lng = decodeFromEEPROM(
                                                waypoint.waypoint_memory_address[waypoint.waypoint_select] + 6
    5014:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <waypoint+0xe>
    5018:	f0 91 71 01 	lds	r31, 0x0171	; 0x800171 <waypoint+0xf>
    501c:	ee 0f       	add	r30, r30
    501e:	ff 1f       	adc	r31, r31
    5020:	ec 59       	subi	r30, 0x9C	; 156
    5022:	fe 4f       	sbci	r31, 0xFE	; 254
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:45
                                        last_interrupt_time = millis(); /* Update Interrupt Time */
                                        /* Read Latitude */
                                        waypoint.x_goto_lat = decodeFromEEPROM(
                                                waypoint.waypoint_memory_address[waypoint.waypoint_select]);
                                        /* Read Longitude */
                                        waypoint.y_goto_lng = decodeFromEEPROM(
    5024:	80 81       	ld	r24, Z
    5026:	91 81       	ldd	r25, Z+1	; 0x01
    5028:	06 96       	adiw	r24, 0x06	; 6
    502a:	0e 94 2f 12 	call	0x245e	; 0x245e <decodeFromEEPROM(int)>
    502e:	60 93 7f 01 	sts	0x017F, r22	; 0x80017f <waypoint+0x1d>
    5032:	70 93 80 01 	sts	0x0180, r23	; 0x800180 <waypoint+0x1e>
    5036:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <waypoint+0x1f>
    503a:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <waypoint+0x20>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:49
                                                waypoint.waypoint_memory_address[waypoint.waypoint_select] + 6
                                                );

                                        display.clearDisplay();
    503e:	8d ee       	ldi	r24, 0xED	; 237
    5040:	98 e0       	ldi	r25, 0x08	; 8
    5042:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:50
                                        display.fillRect(0, 0, 128, 9, WHITE);
    5046:	ee 24       	eor	r14, r14
    5048:	e3 94       	inc	r14
    504a:	f1 2c       	mov	r15, r1
    504c:	09 e0       	ldi	r16, 0x09	; 9
    504e:	10 e0       	ldi	r17, 0x00	; 0
    5050:	20 e8       	ldi	r18, 0x80	; 128
    5052:	30 e0       	ldi	r19, 0x00	; 0
    5054:	50 e0       	ldi	r21, 0x00	; 0
    5056:	40 e0       	ldi	r20, 0x00	; 0
    5058:	70 e0       	ldi	r23, 0x00	; 0
    505a:	60 e0       	ldi	r22, 0x00	; 0
    505c:	8d ee       	ldi	r24, 0xED	; 237
    505e:	98 e0       	ldi	r25, 0x08	; 8
    5060:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    5064:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    5068:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    506c:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    5070:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5074:	c1 e0       	ldi	r28, 0x01	; 1
    5076:	d0 e0       	ldi	r29, 0x00	; 0
    5078:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    507c:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5080:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    5084:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:53
                                        display.setTextColor(BLACK);
                                        display.setCursor(1, 1);
                                        display.print(F("SELECTED WAYPOINT: "));
    5088:	67 e4       	ldi	r22, 0x47	; 71
    508a:	71 e0       	ldi	r23, 0x01	; 1
    508c:	8d ee       	ldi	r24, 0xED	; 237
    508e:	98 e0       	ldi	r25, 0x08	; 8
    5090:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:54
                                        display.print(waypoint.waypoint_select);
    5094:	60 91 70 01 	lds	r22, 0x0170	; 0x800170 <waypoint+0xe>
    5098:	70 91 71 01 	lds	r23, 0x0171	; 0x800171 <waypoint+0xf>
    509c:	4a e0       	ldi	r20, 0x0A	; 10
    509e:	50 e0       	ldi	r21, 0x00	; 0
    50a0:	8d ee       	ldi	r24, 0xED	; 237
    50a2:	98 e0       	ldi	r25, 0x08	; 8
    50a4:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    50a8:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    50ac:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    50b0:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    50b4:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    50b8:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    50bc:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    50c0:	8d e1       	ldi	r24, 0x1D	; 29
    50c2:	90 e0       	ldi	r25, 0x00	; 0
    50c4:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    50c8:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:58
                                        display.setTextColor(WHITE);

                                        display.setCursor(1, 29);
                                        display.print(waypoint.x_goto_lat, 6);
    50cc:	40 91 7b 01 	lds	r20, 0x017B	; 0x80017b <waypoint+0x19>
    50d0:	50 91 7c 01 	lds	r21, 0x017C	; 0x80017c <waypoint+0x1a>
    50d4:	60 91 7d 01 	lds	r22, 0x017D	; 0x80017d <waypoint+0x1b>
    50d8:	70 91 7e 01 	lds	r23, 0x017E	; 0x80017e <waypoint+0x1c>
    50dc:	26 e0       	ldi	r18, 0x06	; 6
    50de:	30 e0       	ldi	r19, 0x00	; 0
    50e0:	8d ee       	ldi	r24, 0xED	; 237
    50e2:	98 e0       	ldi	r25, 0x08	; 8
    50e4:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:59
                                        display.print(',');
    50e8:	6c e2       	ldi	r22, 0x2C	; 44
    50ea:	8d ee       	ldi	r24, 0xED	; 237
    50ec:	98 e0       	ldi	r25, 0x08	; 8
    50ee:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:60
                                        display.print(waypoint.y_goto_lng, 6);
    50f2:	40 91 7f 01 	lds	r20, 0x017F	; 0x80017f <waypoint+0x1d>
    50f6:	50 91 80 01 	lds	r21, 0x0180	; 0x800180 <waypoint+0x1e>
    50fa:	60 91 81 01 	lds	r22, 0x0181	; 0x800181 <waypoint+0x1f>
    50fe:	70 91 82 01 	lds	r23, 0x0182	; 0x800182 <waypoint+0x20>
    5102:	26 e0       	ldi	r18, 0x06	; 6
    5104:	30 e0       	ldi	r19, 0x00	; 0
    5106:	8d ee       	ldi	r24, 0xED	; 237
    5108:	98 e0       	ldi	r25, 0x08	; 8
    510a:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:61
                                        display.display();
    510e:	8d ee       	ldi	r24, 0xED	; 237
    5110:	98 e0       	ldi	r25, 0x08	; 8
    5112:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:64

                                        /* End Select Waypoint */
                                        waypoint.isStartUp = false;
    5116:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <waypoint+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:73
                                }
                        }
                }
        }

        decodeGPSNMEA(1000);
    511a:	0e 94 fc 26 	call	0x4df8	; 0x4df8 <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:76

        /* Read Button to Adjust Scale */
        if(!digitalRead(B_Pin)) {
    511e:	81 e0       	ldi	r24, 0x01	; 1
    5120:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    5124:	89 2b       	or	r24, r25
    5126:	e1 f5       	brne	.+120    	; 0x51a0 <WaypointMenu()+0x358>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:78
                static unsigned long last_interrupt_time = 0;
                if (millis() - last_interrupt_time > 200) {
    5128:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    512c:	00 91 fa 02 	lds	r16, 0x02FA	; 0x8002fa <WaypointMenu()::last_interrupt_time>
    5130:	10 91 fb 02 	lds	r17, 0x02FB	; 0x8002fb <WaypointMenu()::last_interrupt_time+0x1>
    5134:	20 91 fc 02 	lds	r18, 0x02FC	; 0x8002fc <WaypointMenu()::last_interrupt_time+0x2>
    5138:	30 91 fd 02 	lds	r19, 0x02FD	; 0x8002fd <WaypointMenu()::last_interrupt_time+0x3>
    513c:	60 1b       	sub	r22, r16
    513e:	71 0b       	sbc	r23, r17
    5140:	82 0b       	sbc	r24, r18
    5142:	93 0b       	sbc	r25, r19
    5144:	69 3c       	cpi	r22, 0xC9	; 201
    5146:	71 05       	cpc	r23, r1
    5148:	81 05       	cpc	r24, r1
    514a:	91 05       	cpc	r25, r1
    514c:	f8 f0       	brcs	.+62     	; 0x518c <WaypointMenu()+0x344>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:79
                        waypoint.scale *= 1e-1;
    514e:	2d ec       	ldi	r18, 0xCD	; 205
    5150:	3c ec       	ldi	r19, 0xCC	; 204
    5152:	4c ec       	ldi	r20, 0xCC	; 204
    5154:	5d e3       	ldi	r21, 0x3D	; 61
    5156:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <waypoint+0x31>
    515a:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <waypoint+0x32>
    515e:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <waypoint+0x33>
    5162:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <waypoint+0x34>
    5166:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    516a:	60 93 93 01 	sts	0x0193, r22	; 0x800193 <waypoint+0x31>
    516e:	70 93 94 01 	sts	0x0194, r23	; 0x800194 <waypoint+0x32>
    5172:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <waypoint+0x33>
    5176:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <waypoint+0x34>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:80
                        waypoint.decimal_point++;
    517a:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <waypoint>
    517e:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <waypoint+0x1>
    5182:	01 96       	adiw	r24, 0x01	; 1
    5184:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <waypoint+0x1>
    5188:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <waypoint>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:82
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
    518c:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    5190:	60 93 fa 02 	sts	0x02FA, r22	; 0x8002fa <WaypointMenu()::last_interrupt_time>
    5194:	70 93 fb 02 	sts	0x02FB, r23	; 0x8002fb <WaypointMenu()::last_interrupt_time+0x1>
    5198:	80 93 fc 02 	sts	0x02FC, r24	; 0x8002fc <WaypointMenu()::last_interrupt_time+0x2>
    519c:	90 93 fd 02 	sts	0x02FD, r25	; 0x8002fd <WaypointMenu()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:84
        }
        if(!digitalRead(C_Pin)) {
    51a0:	80 e0       	ldi	r24, 0x00	; 0
    51a2:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    51a6:	89 2b       	or	r24, r25
    51a8:	b9 f5       	brne	.+110    	; 0x5218 <WaypointMenu()+0x3d0>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:86
                static unsigned long last_interrupt_time = 0;
                if (millis() - last_interrupt_time > 200) {
    51aa:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    51ae:	00 91 f6 02 	lds	r16, 0x02F6	; 0x8002f6 <__data_end>
    51b2:	10 91 f7 02 	lds	r17, 0x02F7	; 0x8002f7 <__data_end+0x1>
    51b6:	20 91 f8 02 	lds	r18, 0x02F8	; 0x8002f8 <__data_end+0x2>
    51ba:	30 91 f9 02 	lds	r19, 0x02F9	; 0x8002f9 <__data_end+0x3>
    51be:	60 1b       	sub	r22, r16
    51c0:	71 0b       	sbc	r23, r17
    51c2:	82 0b       	sbc	r24, r18
    51c4:	93 0b       	sbc	r25, r19
    51c6:	69 3c       	cpi	r22, 0xC9	; 201
    51c8:	71 05       	cpc	r23, r1
    51ca:	81 05       	cpc	r24, r1
    51cc:	91 05       	cpc	r25, r1
    51ce:	d0 f0       	brcs	.+52     	; 0x5204 <WaypointMenu()+0x3bc>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:87
                        waypoint.scale++;
    51d0:	20 e0       	ldi	r18, 0x00	; 0
    51d2:	30 e0       	ldi	r19, 0x00	; 0
    51d4:	40 e8       	ldi	r20, 0x80	; 128
    51d6:	5f e3       	ldi	r21, 0x3F	; 63
    51d8:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <waypoint+0x31>
    51dc:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <waypoint+0x32>
    51e0:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <waypoint+0x33>
    51e4:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <waypoint+0x34>
    51e8:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    51ec:	60 93 93 01 	sts	0x0193, r22	; 0x800193 <waypoint+0x31>
    51f0:	70 93 94 01 	sts	0x0194, r23	; 0x800194 <waypoint+0x32>
    51f4:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <waypoint+0x33>
    51f8:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <waypoint+0x34>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:88
                        waypoint.decimal_point = 0;
    51fc:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <waypoint+0x1>
    5200:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <waypoint>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:90
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
    5204:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    5208:	60 93 f6 02 	sts	0x02F6, r22	; 0x8002f6 <__data_end>
    520c:	70 93 f7 02 	sts	0x02F7, r23	; 0x8002f7 <__data_end+0x1>
    5210:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <__data_end+0x2>
    5214:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <__data_end+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:94
        }

        /* Limit Value */
        if(waypoint.decimal_point > 10) waypoint.decimal_point = 0;
    5218:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <waypoint>
    521c:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <waypoint+0x1>
    5220:	0b 97       	sbiw	r24, 0x0b	; 11
    5222:	24 f0       	brlt	.+8      	; 0x522c <WaypointMenu()+0x3e4>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:94 (discriminator 1)
    5224:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <waypoint+0x1>
    5228:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <waypoint>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:95
        if(waypoint.scale > 10) waypoint.scale = 10;
    522c:	20 e0       	ldi	r18, 0x00	; 0
    522e:	30 e0       	ldi	r19, 0x00	; 0
    5230:	40 e2       	ldi	r20, 0x20	; 32
    5232:	51 e4       	ldi	r21, 0x41	; 65
    5234:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <waypoint+0x31>
    5238:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <waypoint+0x32>
    523c:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <waypoint+0x33>
    5240:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <waypoint+0x34>
    5244:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    5248:	18 16       	cp	r1, r24
    524a:	64 f4       	brge	.+24     	; 0x5264 <WaypointMenu()+0x41c>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:95 (discriminator 1)
    524c:	80 e0       	ldi	r24, 0x00	; 0
    524e:	90 e0       	ldi	r25, 0x00	; 0
    5250:	a0 e2       	ldi	r26, 0x20	; 32
    5252:	b1 e4       	ldi	r27, 0x41	; 65
    5254:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <waypoint+0x31>
    5258:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <waypoint+0x32>
    525c:	a0 93 95 01 	sts	0x0195, r26	; 0x800195 <waypoint+0x33>
    5260:	b0 93 96 01 	sts	0x0196, r27	; 0x800196 <waypoint+0x34>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:96
        if(waypoint.scale < 0.0000000001) waypoint.scale = 0.0000000001;
    5264:	2f ef       	ldi	r18, 0xFF	; 255
    5266:	36 ee       	ldi	r19, 0xE6	; 230
    5268:	4b ed       	ldi	r20, 0xDB	; 219
    526a:	5e e2       	ldi	r21, 0x2E	; 46
    526c:	60 91 93 01 	lds	r22, 0x0193	; 0x800193 <waypoint+0x31>
    5270:	70 91 94 01 	lds	r23, 0x0194	; 0x800194 <waypoint+0x32>
    5274:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <waypoint+0x33>
    5278:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <waypoint+0x34>
    527c:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    5280:	87 ff       	sbrs	r24, 7
    5282:	0c c0       	rjmp	.+24     	; 0x529c <WaypointMenu()+0x454>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:96 (discriminator 1)
    5284:	8f ef       	ldi	r24, 0xFF	; 255
    5286:	96 ee       	ldi	r25, 0xE6	; 230
    5288:	ab ed       	ldi	r26, 0xDB	; 219
    528a:	be e2       	ldi	r27, 0x2E	; 46
    528c:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <waypoint+0x31>
    5290:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <waypoint+0x32>
    5294:	a0 93 95 01 	sts	0x0195, r26	; 0x800195 <waypoint+0x33>
    5298:	b0 93 96 01 	sts	0x0196, r27	; 0x800196 <waypoint+0x34>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
    529c:	10 92 7b 08 	sts	0x087B, r1	; 0x80087b <gps+0x69>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:98

        if (gps.satellites.value() == 0) {
    52a0:	80 91 80 08 	lds	r24, 0x0880	; 0x800880 <gps+0x6e>
    52a4:	90 91 81 08 	lds	r25, 0x0881	; 0x800881 <gps+0x6f>
    52a8:	a0 91 82 08 	lds	r26, 0x0882	; 0x800882 <gps+0x70>
    52ac:	b0 91 83 08 	lds	r27, 0x0883	; 0x800883 <gps+0x71>
    52b0:	89 2b       	or	r24, r25
    52b2:	8a 2b       	or	r24, r26
    52b4:	8b 2b       	or	r24, r27
    52b6:	49 f5       	brne	.+82     	; 0x530a <WaypointMenu()+0x4c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:99
                display.fillRect(42, 28, 43, 9, WHITE);
    52b8:	ee 24       	eor	r14, r14
    52ba:	e3 94       	inc	r14
    52bc:	f1 2c       	mov	r15, r1
    52be:	09 e0       	ldi	r16, 0x09	; 9
    52c0:	10 e0       	ldi	r17, 0x00	; 0
    52c2:	2b e2       	ldi	r18, 0x2B	; 43
    52c4:	30 e0       	ldi	r19, 0x00	; 0
    52c6:	4c e1       	ldi	r20, 0x1C	; 28
    52c8:	50 e0       	ldi	r21, 0x00	; 0
    52ca:	6a e2       	ldi	r22, 0x2A	; 42
    52cc:	70 e0       	ldi	r23, 0x00	; 0
    52ce:	8d ee       	ldi	r24, 0xED	; 237
    52d0:	98 e0       	ldi	r25, 0x08	; 8
    52d2:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    52d6:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    52da:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    52de:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    52e2:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    52e6:	8b e2       	ldi	r24, 0x2B	; 43
    52e8:	90 e0       	ldi	r25, 0x00	; 0
    52ea:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    52ee:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    52f2:	8d e1       	ldi	r24, 0x1D	; 29
    52f4:	90 e0       	ldi	r25, 0x00	; 0
    52f6:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    52fa:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:102
                display.setTextColor(BLACK);
                display.setCursor(43, 29);
                display.print(F("NO DATA"));
    52fe:	6f e3       	ldi	r22, 0x3F	; 63
    5300:	71 e0       	ldi	r23, 0x01	; 1
    5302:	8d ee       	ldi	r24, 0xED	; 237
    5304:	98 e0       	ldi	r25, 0x08	; 8
    5306:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:106
        }

        /* Get Current Coordinate */
        waypoint.x_now = gps.location.lat();
    530a:	82 e1       	ldi	r24, 0x12	; 18
    530c:	98 e0       	ldi	r25, 0x08	; 8
    530e:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
    5312:	60 93 83 01 	sts	0x0183, r22	; 0x800183 <waypoint+0x21>
    5316:	70 93 84 01 	sts	0x0184, r23	; 0x800184 <waypoint+0x22>
    531a:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <waypoint+0x23>
    531e:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <waypoint+0x24>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:107
        waypoint.y_now = gps.location.lng();
    5322:	82 e1       	ldi	r24, 0x12	; 18
    5324:	98 e0       	ldi	r25, 0x08	; 8
    5326:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    532a:	5b 01       	movw	r10, r22
    532c:	6c 01       	movw	r12, r24
    532e:	a0 92 87 01 	sts	0x0187, r10	; 0x800187 <waypoint+0x25>
    5332:	b0 92 88 01 	sts	0x0188, r11	; 0x800188 <waypoint+0x26>
    5336:	c0 92 89 01 	sts	0x0189, r12	; 0x800189 <waypoint+0x27>
    533a:	d0 92 8a 01 	sts	0x018A, r13	; 0x80018a <waypoint+0x28>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:110

        /* Get Distance and Course Between Waypoints */
        waypoint.distance_between_waypoints = gps.distanceBetween(
    533e:	e0 90 83 01 	lds	r14, 0x0183	; 0x800183 <waypoint+0x21>
    5342:	f0 90 84 01 	lds	r15, 0x0184	; 0x800184 <waypoint+0x22>
    5346:	00 91 85 01 	lds	r16, 0x0185	; 0x800185 <waypoint+0x23>
    534a:	10 91 86 01 	lds	r17, 0x0186	; 0x800186 <waypoint+0x24>
    534e:	20 91 7f 01 	lds	r18, 0x017F	; 0x80017f <waypoint+0x1d>
    5352:	30 91 80 01 	lds	r19, 0x0180	; 0x800180 <waypoint+0x1e>
    5356:	40 91 81 01 	lds	r20, 0x0181	; 0x800181 <waypoint+0x1f>
    535a:	50 91 82 01 	lds	r21, 0x0182	; 0x800182 <waypoint+0x20>
    535e:	60 91 7b 01 	lds	r22, 0x017B	; 0x80017b <waypoint+0x19>
    5362:	70 91 7c 01 	lds	r23, 0x017C	; 0x80017c <waypoint+0x1a>
    5366:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <waypoint+0x1b>
    536a:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <waypoint+0x1c>
    536e:	0e 94 fe 62 	call	0xc5fc	; 0xc5fc <TinyGPSPlus::distanceBetween(double, double, double, double)>
    5372:	60 93 8b 01 	sts	0x018B, r22	; 0x80018b <waypoint+0x29>
    5376:	70 93 8c 01 	sts	0x018C, r23	; 0x80018c <waypoint+0x2a>
    537a:	80 93 8d 01 	sts	0x018D, r24	; 0x80018d <waypoint+0x2b>
    537e:	90 93 8e 01 	sts	0x018E, r25	; 0x80018e <waypoint+0x2c>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:114
                waypoint.x_goto_lat, waypoint.y_goto_lng,
                waypoint.x_now, waypoint.y_now
                );
        waypoint.course_to_waypoint = gps.courseTo(
    5382:	a0 90 87 01 	lds	r10, 0x0187	; 0x800187 <waypoint+0x25>
    5386:	b0 90 88 01 	lds	r11, 0x0188	; 0x800188 <waypoint+0x26>
    538a:	c0 90 89 01 	lds	r12, 0x0189	; 0x800189 <waypoint+0x27>
    538e:	d0 90 8a 01 	lds	r13, 0x018A	; 0x80018a <waypoint+0x28>
    5392:	e0 90 83 01 	lds	r14, 0x0183	; 0x800183 <waypoint+0x21>
    5396:	f0 90 84 01 	lds	r15, 0x0184	; 0x800184 <waypoint+0x22>
    539a:	00 91 85 01 	lds	r16, 0x0185	; 0x800185 <waypoint+0x23>
    539e:	10 91 86 01 	lds	r17, 0x0186	; 0x800186 <waypoint+0x24>
    53a2:	20 91 7f 01 	lds	r18, 0x017F	; 0x80017f <waypoint+0x1d>
    53a6:	30 91 80 01 	lds	r19, 0x0180	; 0x800180 <waypoint+0x1e>
    53aa:	40 91 81 01 	lds	r20, 0x0181	; 0x800181 <waypoint+0x1f>
    53ae:	50 91 82 01 	lds	r21, 0x0182	; 0x800182 <waypoint+0x20>
    53b2:	60 91 7b 01 	lds	r22, 0x017B	; 0x80017b <waypoint+0x19>
    53b6:	70 91 7c 01 	lds	r23, 0x017C	; 0x80017c <waypoint+0x1a>
    53ba:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <waypoint+0x1b>
    53be:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <waypoint+0x1c>
    53c2:	0e 94 ee 63 	call	0xc7dc	; 0xc7dc <TinyGPSPlus::courseTo(double, double, double, double)>
    53c6:	4b 01       	movw	r8, r22
    53c8:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:120
                waypoint.x_goto_lat, waypoint.y_goto_lng,
                waypoint.x_now, waypoint.y_now
                );

        /* Reduce Distance Scale */
        waypoint.distance_between_waypoints = waypoint.distance_between_waypoints * waypoint.scale;
    53ca:	20 91 93 01 	lds	r18, 0x0193	; 0x800193 <waypoint+0x31>
    53ce:	30 91 94 01 	lds	r19, 0x0194	; 0x800194 <waypoint+0x32>
    53d2:	40 91 95 01 	lds	r20, 0x0195	; 0x800195 <waypoint+0x33>
    53d6:	50 91 96 01 	lds	r21, 0x0196	; 0x800196 <waypoint+0x34>
    53da:	60 91 8b 01 	lds	r22, 0x018B	; 0x80018b <waypoint+0x29>
    53de:	70 91 8c 01 	lds	r23, 0x018C	; 0x80018c <waypoint+0x2a>
    53e2:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <waypoint+0x2b>
    53e6:	90 91 8e 01 	lds	r25, 0x018E	; 0x80018e <waypoint+0x2c>
    53ea:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    53ee:	6b 01       	movw	r12, r22
    53f0:	7c 01       	movw	r14, r24
    53f2:	c0 92 8b 01 	sts	0x018B, r12	; 0x80018b <waypoint+0x29>
    53f6:	d0 92 8c 01 	sts	0x018C, r13	; 0x80018c <waypoint+0x2a>
    53fa:	e0 92 8d 01 	sts	0x018D, r14	; 0x80018d <waypoint+0x2b>
    53fe:	f0 92 8e 01 	sts	0x018E, r15	; 0x80018e <waypoint+0x2c>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:123

        /* Calculate Endpoint Coordinate on Screen */
        waypoint.course_to_waypoint = waypoint.course_to_waypoint - 90;
    5402:	20 e0       	ldi	r18, 0x00	; 0
    5404:	30 e0       	ldi	r19, 0x00	; 0
    5406:	44 eb       	ldi	r20, 0xB4	; 180
    5408:	52 e4       	ldi	r21, 0x42	; 66
    540a:	c5 01       	movw	r24, r10
    540c:	b4 01       	movw	r22, r8
    540e:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    5412:	60 93 8f 01 	sts	0x018F, r22	; 0x80018f <waypoint+0x2d>
    5416:	70 93 90 01 	sts	0x0190, r23	; 0x800190 <waypoint+0x2e>
    541a:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <waypoint+0x2f>
    541e:	90 93 92 01 	sts	0x0192, r25	; 0x800192 <waypoint+0x30>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:124
        waypoint.screen_x = 64 + waypoint.distance_between_waypoints * cos(waypoint.course_to_waypoint * M_PI / 180);
    5422:	2b ed       	ldi	r18, 0xDB	; 219
    5424:	3f e0       	ldi	r19, 0x0F	; 15
    5426:	49 e4       	ldi	r20, 0x49	; 73
    5428:	50 e4       	ldi	r21, 0x40	; 64
    542a:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    542e:	20 e0       	ldi	r18, 0x00	; 0
    5430:	30 e0       	ldi	r19, 0x00	; 0
    5432:	44 e3       	ldi	r20, 0x34	; 52
    5434:	53 e4       	ldi	r21, 0x43	; 67
    5436:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    543a:	4b 01       	movw	r8, r22
    543c:	5c 01       	movw	r10, r24
    543e:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    5442:	9b 01       	movw	r18, r22
    5444:	ac 01       	movw	r20, r24
    5446:	c7 01       	movw	r24, r14
    5448:	b6 01       	movw	r22, r12
    544a:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    544e:	20 e0       	ldi	r18, 0x00	; 0
    5450:	30 e0       	ldi	r19, 0x00	; 0
    5452:	40 e8       	ldi	r20, 0x80	; 128
    5454:	52 e4       	ldi	r21, 0x42	; 66
    5456:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    545a:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    545e:	60 93 73 01 	sts	0x0173, r22	; 0x800173 <waypoint+0x11>
    5462:	70 93 74 01 	sts	0x0174, r23	; 0x800174 <waypoint+0x12>
    5466:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <waypoint+0x13>
    546a:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <waypoint+0x14>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:125
        waypoint.screen_y = 32 + waypoint.distance_between_waypoints * sin(waypoint.course_to_waypoint * M_PI / 180);
    546e:	c5 01       	movw	r24, r10
    5470:	b4 01       	movw	r22, r8
    5472:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    5476:	9b 01       	movw	r18, r22
    5478:	ac 01       	movw	r20, r24
    547a:	c7 01       	movw	r24, r14
    547c:	b6 01       	movw	r22, r12
    547e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    5482:	20 e0       	ldi	r18, 0x00	; 0
    5484:	30 e0       	ldi	r19, 0x00	; 0
    5486:	40 e0       	ldi	r20, 0x00	; 0
    5488:	52 e4       	ldi	r21, 0x42	; 66
    548a:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    548e:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    5492:	60 93 77 01 	sts	0x0177, r22	; 0x800177 <waypoint+0x15>
    5496:	70 93 78 01 	sts	0x0178, r23	; 0x800178 <waypoint+0x16>
    549a:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <waypoint+0x17>
    549e:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <waypoint+0x18>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:127

        display.clearDisplay();
    54a2:	8d ee       	ldi	r24, 0xED	; 237
    54a4:	98 e0       	ldi	r25, 0x08	; 8
    54a6:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:128
        display.setTextSize(1);
    54aa:	61 e0       	ldi	r22, 0x01	; 1
    54ac:	8d ee       	ldi	r24, 0xED	; 237
    54ae:	98 e0       	ldi	r25, 0x08	; 8
    54b0:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    54b4:	81 e0       	ldi	r24, 0x01	; 1
    54b6:	90 e0       	ldi	r25, 0x00	; 0
    54b8:	90 93 00 09 	sts	0x0900, r25	; 0x800900 <display+0x13>
    54bc:	80 93 ff 08 	sts	0x08FF, r24	; 0x8008ff <display+0x12>
    54c0:	90 93 fe 08 	sts	0x08FE, r25	; 0x8008fe <display+0x11>
    54c4:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    54c8:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    54cc:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    54d0:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    54d4:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:131
        display.setTextColor(WHITE);
        display.setCursor(1, 1);
        display.print('x');
    54d8:	68 e7       	ldi	r22, 0x78	; 120
    54da:	8d ee       	ldi	r24, 0xED	; 237
    54dc:	98 e0       	ldi	r25, 0x08	; 8
    54de:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:134


        if(waypoint.scale < 1)
    54e2:	c0 90 93 01 	lds	r12, 0x0193	; 0x800193 <waypoint+0x31>
    54e6:	d0 90 94 01 	lds	r13, 0x0194	; 0x800194 <waypoint+0x32>
    54ea:	e0 90 95 01 	lds	r14, 0x0195	; 0x800195 <waypoint+0x33>
    54ee:	f0 90 96 01 	lds	r15, 0x0196	; 0x800196 <waypoint+0x34>
    54f2:	20 e0       	ldi	r18, 0x00	; 0
    54f4:	30 e0       	ldi	r19, 0x00	; 0
    54f6:	40 e8       	ldi	r20, 0x80	; 128
    54f8:	5f e3       	ldi	r21, 0x3F	; 63
    54fa:	c7 01       	movw	r24, r14
    54fc:	b6 01       	movw	r22, r12
    54fe:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:135
                display.print(waypoint.scale, waypoint.decimal_point);
    5502:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <waypoint>
    5506:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <waypoint+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:134
        display.setTextColor(WHITE);
        display.setCursor(1, 1);
        display.print('x');


        if(waypoint.scale < 1)
    550a:	87 fd       	sbrc	r24, 7
    550c:	02 c0       	rjmp	.+4      	; 0x5512 <WaypointMenu()+0x6ca>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:137
                display.print(waypoint.scale, waypoint.decimal_point);
        else
                display.print(waypoint.scale);
    550e:	22 e0       	ldi	r18, 0x02	; 2
    5510:	30 e0       	ldi	r19, 0x00	; 0
    5512:	b7 01       	movw	r22, r14
    5514:	a6 01       	movw	r20, r12
    5516:	8d ee       	ldi	r24, 0xED	; 237
    5518:	98 e0       	ldi	r25, 0x08	; 8
    551a:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    551e:	82 e6       	ldi	r24, 0x62	; 98
    5520:	90 e0       	ldi	r25, 0x00	; 0
    5522:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    5526:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    552a:	81 e0       	ldi	r24, 0x01	; 1
    552c:	90 e0       	ldi	r25, 0x00	; 0
    552e:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    5532:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:141

        /* Show Date and Time */
        display.setCursor(98, 1);
        display.print(gps.time.hour() + getTimeZone(gps.location.lng()));
    5536:	82 e4       	ldi	r24, 0x42	; 66
    5538:	98 e0       	ldi	r25, 0x08	; 8
    553a:	0e 94 cf 65 	call	0xcb9e	; 0xcb9e <TinyGPSTime::hour()>
    553e:	c8 2f       	mov	r28, r24
    5540:	82 e1       	ldi	r24, 0x12	; 18
    5542:	98 e0       	ldi	r25, 0x08	; 8
    5544:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    5548:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    554c:	bc 01       	movw	r22, r24
    554e:	6c 0f       	add	r22, r28
    5550:	71 1d       	adc	r23, r1
    5552:	4a e0       	ldi	r20, 0x0A	; 10
    5554:	50 e0       	ldi	r21, 0x00	; 0
    5556:	8d ee       	ldi	r24, 0xED	; 237
    5558:	98 e0       	ldi	r25, 0x08	; 8
    555a:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:142
        display.print(':');
    555e:	6a e3       	ldi	r22, 0x3A	; 58
    5560:	8d ee       	ldi	r24, 0xED	; 237
    5562:	98 e0       	ldi	r25, 0x08	; 8
    5564:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:143
        if (gps.time.minute() < 10) display.print(F("0"));
    5568:	82 e4       	ldi	r24, 0x42	; 66
    556a:	98 e0       	ldi	r25, 0x08	; 8
    556c:	0e 94 dd 65 	call	0xcbba	; 0xcbba <TinyGPSTime::minute()>
    5570:	8a 30       	cpi	r24, 0x0A	; 10
    5572:	30 f4       	brcc	.+12     	; 0x5580 <WaypointMenu()+0x738>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:143 (discriminator 1)
    5574:	6d e3       	ldi	r22, 0x3D	; 61
    5576:	71 e0       	ldi	r23, 0x01	; 1
    5578:	8d ee       	ldi	r24, 0xED	; 237
    557a:	98 e0       	ldi	r25, 0x08	; 8
    557c:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:144
        display.print(gps.time.minute());
    5580:	82 e4       	ldi	r24, 0x42	; 66
    5582:	98 e0       	ldi	r25, 0x08	; 8
    5584:	0e 94 dd 65 	call	0xcbba	; 0xcbba <TinyGPSTime::minute()>
    5588:	4a e0       	ldi	r20, 0x0A	; 10
    558a:	50 e0       	ldi	r21, 0x00	; 0
    558c:	68 2f       	mov	r22, r24
    558e:	8d ee       	ldi	r24, 0xED	; 237
    5590:	98 e0       	ldi	r25, 0x08	; 8
    5592:	0e 94 d5 6c 	call	0xd9aa	; 0xd9aa <Print::print(unsigned char, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5596:	81 e0       	ldi	r24, 0x01	; 1
    5598:	90 e0       	ldi	r25, 0x00	; 0
    559a:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    559e:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    55a2:	88 e3       	ldi	r24, 0x38	; 56
    55a4:	90 e0       	ldi	r25, 0x00	; 0
    55a6:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    55aa:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z12WaypointMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:147

        display.setCursor(1, 56);
        display.print(waypoint.distance_between_waypoints);
    55ae:	40 91 8b 01 	lds	r20, 0x018B	; 0x80018b <waypoint+0x29>
    55b2:	50 91 8c 01 	lds	r21, 0x018C	; 0x80018c <waypoint+0x2a>
    55b6:	60 91 8d 01 	lds	r22, 0x018D	; 0x80018d <waypoint+0x2b>
    55ba:	70 91 8e 01 	lds	r23, 0x018E	; 0x80018e <waypoint+0x2c>
    55be:	22 e0       	ldi	r18, 0x02	; 2
    55c0:	30 e0       	ldi	r19, 0x00	; 0
    55c2:	8d ee       	ldi	r24, 0xED	; 237
    55c4:	98 e0       	ldi	r25, 0x08	; 8
    55c6:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:148
        display.print(F("m "));
    55ca:	6a e3       	ldi	r22, 0x3A	; 58
    55cc:	71 e0       	ldi	r23, 0x01	; 1
    55ce:	8d ee       	ldi	r24, 0xED	; 237
    55d0:	98 e0       	ldi	r25, 0x08	; 8
    55d2:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:149
        display.print(360 - waypoint.course_to_waypoint - 90);
    55d6:	20 91 8f 01 	lds	r18, 0x018F	; 0x80018f <waypoint+0x2d>
    55da:	30 91 90 01 	lds	r19, 0x0190	; 0x800190 <waypoint+0x2e>
    55de:	40 91 91 01 	lds	r20, 0x0191	; 0x800191 <waypoint+0x2f>
    55e2:	50 91 92 01 	lds	r21, 0x0192	; 0x800192 <waypoint+0x30>
    55e6:	60 e0       	ldi	r22, 0x00	; 0
    55e8:	70 e0       	ldi	r23, 0x00	; 0
    55ea:	84 eb       	ldi	r24, 0xB4	; 180
    55ec:	93 e4       	ldi	r25, 0x43	; 67
    55ee:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    55f2:	20 e0       	ldi	r18, 0x00	; 0
    55f4:	30 e0       	ldi	r19, 0x00	; 0
    55f6:	44 eb       	ldi	r20, 0xB4	; 180
    55f8:	52 e4       	ldi	r21, 0x42	; 66
    55fa:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    55fe:	ab 01       	movw	r20, r22
    5600:	bc 01       	movw	r22, r24
    5602:	22 e0       	ldi	r18, 0x02	; 2
    5604:	30 e0       	ldi	r19, 0x00	; 0
    5606:	8d ee       	ldi	r24, 0xED	; 237
    5608:	98 e0       	ldi	r25, 0x08	; 8
    560a:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:150
        display.print(F("DEG"));
    560e:	66 e3       	ldi	r22, 0x36	; 54
    5610:	71 e0       	ldi	r23, 0x01	; 1
    5612:	8d ee       	ldi	r24, 0xED	; 237
    5614:	98 e0       	ldi	r25, 0x08	; 8
    5616:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:153

        /* Draw Current Pos BMP */
        display.drawBitmap(59, 27, navCurrentPos, 10, 10, 1);
    561a:	cc 24       	eor	r12, r12
    561c:	c3 94       	inc	r12
    561e:	d1 2c       	mov	r13, r1
    5620:	9a e0       	ldi	r25, 0x0A	; 10
    5622:	e9 2e       	mov	r14, r25
    5624:	f1 2c       	mov	r15, r1
    5626:	0a e0       	ldi	r16, 0x0A	; 10
    5628:	10 e0       	ldi	r17, 0x00	; 0
    562a:	25 e7       	ldi	r18, 0x75	; 117
    562c:	36 e1       	ldi	r19, 0x16	; 22
    562e:	4b e1       	ldi	r20, 0x1B	; 27
    5630:	50 e0       	ldi	r21, 0x00	; 0
    5632:	6b e3       	ldi	r22, 0x3B	; 59
    5634:	70 e0       	ldi	r23, 0x00	; 0
    5636:	8d ee       	ldi	r24, 0xED	; 237
    5638:	98 e0       	ldi	r25, 0x08	; 8
    563a:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:154
        display.drawBitmap((waypoint.screen_x - 2), (waypoint.screen_y - 11), navFlag, 10, 10, 1);
    563e:	40 91 77 01 	lds	r20, 0x0177	; 0x800177 <waypoint+0x15>
    5642:	50 91 78 01 	lds	r21, 0x0178	; 0x800178 <waypoint+0x16>
    5646:	4b 50       	subi	r20, 0x0B	; 11
    5648:	51 09       	sbc	r21, r1
    564a:	60 91 73 01 	lds	r22, 0x0173	; 0x800173 <waypoint+0x11>
    564e:	70 91 74 01 	lds	r23, 0x0174	; 0x800174 <waypoint+0x12>
    5652:	62 50       	subi	r22, 0x02	; 2
    5654:	71 09       	sbc	r23, r1
    5656:	21 e6       	ldi	r18, 0x61	; 97
    5658:	36 e1       	ldi	r19, 0x16	; 22
    565a:	8d ee       	ldi	r24, 0xED	; 237
    565c:	98 e0       	ldi	r25, 0x08	; 8
    565e:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:157

        /* Draw Line from current point to Way point */
        display.drawLine(64, 32, waypoint.screen_x, waypoint.screen_y, WHITE);
    5662:	00 91 77 01 	lds	r16, 0x0177	; 0x800177 <waypoint+0x15>
    5666:	10 91 78 01 	lds	r17, 0x0178	; 0x800178 <waypoint+0x16>
    566a:	20 91 73 01 	lds	r18, 0x0173	; 0x800173 <waypoint+0x11>
    566e:	30 91 74 01 	lds	r19, 0x0174	; 0x800174 <waypoint+0x12>
    5672:	ee 24       	eor	r14, r14
    5674:	e3 94       	inc	r14
    5676:	f1 2c       	mov	r15, r1
    5678:	40 e2       	ldi	r20, 0x20	; 32
    567a:	50 e0       	ldi	r21, 0x00	; 0
    567c:	60 e4       	ldi	r22, 0x40	; 64
    567e:	70 e0       	ldi	r23, 0x00	; 0
    5680:	8d ee       	ldi	r24, 0xED	; 237
    5682:	98 e0       	ldi	r25, 0x08	; 8
    5684:	0e 94 6c 41 	call	0x82d8	; 0x82d8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:159

        display.display();
    5688:	8d ee       	ldi	r24, 0xED	; 237
    568a:	98 e0       	ldi	r25, 0x08	; 8
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:160
}
    568c:	df 91       	pop	r29
    568e:	cf 91       	pop	r28
    5690:	1f 91       	pop	r17
    5692:	0f 91       	pop	r16
    5694:	ff 90       	pop	r15
    5696:	ef 90       	pop	r14
    5698:	df 90       	pop	r13
    569a:	cf 90       	pop	r12
    569c:	bf 90       	pop	r11
    569e:	af 90       	pop	r10
    56a0:	9f 90       	pop	r9
    56a2:	8f 90       	pop	r8
C:\Users\nyvir\Documents\GitHub\GPSKit/WaypointMenu.ino:159
        display.drawBitmap((waypoint.screen_x - 2), (waypoint.screen_y - 11), navFlag, 10, 10, 1);

        /* Draw Line from current point to Way point */
        display.drawLine(64, 32, waypoint.screen_x, waypoint.screen_y, WHITE);

        display.display();
    56a4:	0c 94 24 50 	jmp	0xa048	; 0xa048 <Adafruit_SSD1306::display()>

000056a8 <LogMenu()>:
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:1
void LogMenu(void){
    56a8:	cf 92       	push	r12
    56aa:	df 92       	push	r13
    56ac:	ef 92       	push	r14
    56ae:	ff 92       	push	r15
    56b0:	0f 93       	push	r16
    56b2:	1f 93       	push	r17
    56b4:	cf 93       	push	r28
    56b6:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:6
        static float latMem[6], lngMem[6];
        static int index = 0, writeMemoryAddress = 10;

        /* Decode 6 Coordinates from EEPROM */
        if(waypoint.isStartUp) {
    56b8:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <waypoint+0x10>
    56bc:	88 23       	and	r24, r24
    56be:	09 f4       	brne	.+2      	; 0x56c2 <LogMenu()+0x1a>
    56c0:	90 c0       	rjmp	.+288    	; 0x57e2 <LogMenu()+0x13a>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:7
                display.clearDisplay();
    56c2:	8d ee       	ldi	r24, 0xED	; 237
    56c4:	98 e0       	ldi	r25, 0x08	; 8
    56c6:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    56ca:	c1 e0       	ldi	r28, 0x01	; 1
    56cc:	d0 e0       	ldi	r29, 0x00	; 0
    56ce:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    56d2:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    56d6:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    56da:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:9
                display.setCursor(1, 1);
                display.setTextSize(1);
    56de:	61 e0       	ldi	r22, 0x01	; 1
    56e0:	8d ee       	ldi	r24, 0xED	; 237
    56e2:	98 e0       	ldi	r25, 0x08	; 8
    56e4:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    56e8:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    56ec:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    56f0:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    56f4:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:11
                display.setTextColor(WHITE);
                display.print(F("DECODING EEPROM..."));
    56f8:	62 eb       	ldi	r22, 0xB2	; 178
    56fa:	72 e0       	ldi	r23, 0x02	; 2
    56fc:	8d ee       	ldi	r24, 0xED	; 237
    56fe:	98 e0       	ldi	r25, 0x08	; 8
    5700:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:12
                display.display();
    5704:	8d ee       	ldi	r24, 0xED	; 237
    5706:	98 e0       	ldi	r25, 0x08	; 8
    5708:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:14

                writeMemoryAddress = 10;
    570c:	8a e0       	ldi	r24, 0x0A	; 10
    570e:	90 e0       	ldi	r25, 0x00	; 0
    5710:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5714:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:15
                index = 0;
    5718:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <LogMenu()::index+0x1>
    571c:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <LogMenu()::index>
    5720:	06 e0       	ldi	r16, 0x06	; 6
    5722:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:17 (discriminator 2)
                for(int i = 0; i < 6; i++) {
                        latMem[index] = decodeFromEEPROM(writeMemoryAddress);
    5724:	c0 91 38 03 	lds	r28, 0x0338	; 0x800338 <LogMenu()::index>
    5728:	d0 91 39 03 	lds	r29, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    572c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5730:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5734:	0e 94 2f 12 	call	0x245e	; 0x245e <decodeFromEEPROM(int)>
    5738:	cc 0f       	add	r28, r28
    573a:	dd 1f       	adc	r29, r29
    573c:	cc 0f       	add	r28, r28
    573e:	dd 1f       	adc	r29, r29
    5740:	ce 5a       	subi	r28, 0xAE	; 174
    5742:	dc 4f       	sbci	r29, 0xFC	; 252
    5744:	68 83       	st	Y, r22
    5746:	79 83       	std	Y+1, r23	; 0x01
    5748:	8a 83       	std	Y+2, r24	; 0x02
    574a:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:18 (discriminator 2)
                        writeMemoryAddress += 6;
    574c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5750:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5754:	06 96       	adiw	r24, 0x06	; 6
    5756:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    575a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:19 (discriminator 2)
                        delay(10);
    575e:	6a e0       	ldi	r22, 0x0A	; 10
    5760:	70 e0       	ldi	r23, 0x00	; 0
    5762:	80 e0       	ldi	r24, 0x00	; 0
    5764:	90 e0       	ldi	r25, 0x00	; 0
    5766:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:20 (discriminator 2)
                        lngMem[index] = decodeFromEEPROM(writeMemoryAddress);
    576a:	c0 91 38 03 	lds	r28, 0x0338	; 0x800338 <LogMenu()::index>
    576e:	d0 91 39 03 	lds	r29, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    5772:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5776:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    577a:	0e 94 2f 12 	call	0x245e	; 0x245e <decodeFromEEPROM(int)>
    577e:	cc 0f       	add	r28, r28
    5780:	dd 1f       	adc	r29, r29
    5782:	cc 0f       	add	r28, r28
    5784:	dd 1f       	adc	r29, r29
    5786:	c6 5c       	subi	r28, 0xC6	; 198
    5788:	dc 4f       	sbci	r29, 0xFC	; 252
    578a:	68 83       	st	Y, r22
    578c:	79 83       	std	Y+1, r23	; 0x01
    578e:	8a 83       	std	Y+2, r24	; 0x02
    5790:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:21 (discriminator 2)
                        writeMemoryAddress += 6;
    5792:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5796:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    579a:	06 96       	adiw	r24, 0x06	; 6
    579c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    57a0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:22 (discriminator 2)
                        delay(10);
    57a4:	6a e0       	ldi	r22, 0x0A	; 10
    57a6:	70 e0       	ldi	r23, 0x00	; 0
    57a8:	80 e0       	ldi	r24, 0x00	; 0
    57aa:	90 e0       	ldi	r25, 0x00	; 0
    57ac:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:23 (discriminator 2)
                        index++;
    57b0:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <LogMenu()::index>
    57b4:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    57b8:	01 96       	adiw	r24, 0x01	; 1
    57ba:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <LogMenu()::index+0x1>
    57be:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <LogMenu()::index>
    57c2:	01 50       	subi	r16, 0x01	; 1
    57c4:	11 09       	sbc	r17, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:16 (discriminator 2)
                display.print(F("DECODING EEPROM..."));
                display.display();

                writeMemoryAddress = 10;
                index = 0;
                for(int i = 0; i < 6; i++) {
    57c6:	09 f0       	breq	.+2      	; 0x57ca <LogMenu()+0x122>
    57c8:	ad cf       	rjmp	.-166    	; 0x5724 <LogMenu()+0x7c>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:25
                        lngMem[index] = decodeFromEEPROM(writeMemoryAddress);
                        writeMemoryAddress += 6;
                        delay(10);
                        index++;
                }
                waypoint.isStartUp = false;
    57ca:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <waypoint+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:26
                writeMemoryAddress = 10;
    57ce:	8a e0       	ldi	r24, 0x0A	; 10
    57d0:	90 e0       	ldi	r25, 0x00	; 0
    57d2:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    57d6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:27
                index = 0;
    57da:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <LogMenu()::index+0x1>
    57de:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <LogMenu()::index>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:30
        }

        display.clearDisplay();
    57e2:	8d ee       	ldi	r24, 0xED	; 237
    57e4:	98 e0       	ldi	r25, 0x08	; 8
    57e6:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:31
        display.setTextSize(1);
    57ea:	61 e0       	ldi	r22, 0x01	; 1
    57ec:	8d ee       	ldi	r24, 0xED	; 237
    57ee:	98 e0       	ldi	r25, 0x08	; 8
    57f0:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    57f4:	c1 e0       	ldi	r28, 0x01	; 1
    57f6:	d0 e0       	ldi	r29, 0x00	; 0
    57f8:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    57fc:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    5800:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    5804:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5808:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    580c:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5810:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    5814:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:34
        display.setTextColor(WHITE);
        display.setCursor(1, 1);
        display.print(latMem[0], 6); display.print(','); display.print(lngMem[0], 6);
    5818:	40 91 52 03 	lds	r20, 0x0352	; 0x800352 <LogMenu()::latMem>
    581c:	50 91 53 03 	lds	r21, 0x0353	; 0x800353 <LogMenu()::latMem+0x1>
    5820:	60 91 54 03 	lds	r22, 0x0354	; 0x800354 <LogMenu()::latMem+0x2>
    5824:	70 91 55 03 	lds	r23, 0x0355	; 0x800355 <LogMenu()::latMem+0x3>
    5828:	26 e0       	ldi	r18, 0x06	; 6
    582a:	30 e0       	ldi	r19, 0x00	; 0
    582c:	8d ee       	ldi	r24, 0xED	; 237
    582e:	98 e0       	ldi	r25, 0x08	; 8
    5830:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
    5834:	6c e2       	ldi	r22, 0x2C	; 44
    5836:	8d ee       	ldi	r24, 0xED	; 237
    5838:	98 e0       	ldi	r25, 0x08	; 8
    583a:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    583e:	40 91 3a 03 	lds	r20, 0x033A	; 0x80033a <LogMenu()::lngMem>
    5842:	50 91 3b 03 	lds	r21, 0x033B	; 0x80033b <LogMenu()::lngMem+0x1>
    5846:	60 91 3c 03 	lds	r22, 0x033C	; 0x80033c <LogMenu()::lngMem+0x2>
    584a:	70 91 3d 03 	lds	r23, 0x033D	; 0x80033d <LogMenu()::lngMem+0x3>
    584e:	26 e0       	ldi	r18, 0x06	; 6
    5850:	30 e0       	ldi	r19, 0x00	; 0
    5852:	8d ee       	ldi	r24, 0xED	; 237
    5854:	98 e0       	ldi	r25, 0x08	; 8
    5856:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    585a:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    585e:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5862:	8b e0       	ldi	r24, 0x0B	; 11
    5864:	90 e0       	ldi	r25, 0x00	; 0
    5866:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    586a:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:36
        display.setCursor(1, 11);
        display.print(latMem[1], 6); display.print(','); display.print(lngMem[1], 6);
    586e:	40 91 56 03 	lds	r20, 0x0356	; 0x800356 <LogMenu()::latMem+0x4>
    5872:	50 91 57 03 	lds	r21, 0x0357	; 0x800357 <LogMenu()::latMem+0x5>
    5876:	60 91 58 03 	lds	r22, 0x0358	; 0x800358 <LogMenu()::latMem+0x6>
    587a:	70 91 59 03 	lds	r23, 0x0359	; 0x800359 <LogMenu()::latMem+0x7>
    587e:	26 e0       	ldi	r18, 0x06	; 6
    5880:	30 e0       	ldi	r19, 0x00	; 0
    5882:	8d ee       	ldi	r24, 0xED	; 237
    5884:	98 e0       	ldi	r25, 0x08	; 8
    5886:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
    588a:	6c e2       	ldi	r22, 0x2C	; 44
    588c:	8d ee       	ldi	r24, 0xED	; 237
    588e:	98 e0       	ldi	r25, 0x08	; 8
    5890:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    5894:	40 91 3e 03 	lds	r20, 0x033E	; 0x80033e <LogMenu()::lngMem+0x4>
    5898:	50 91 3f 03 	lds	r21, 0x033F	; 0x80033f <LogMenu()::lngMem+0x5>
    589c:	60 91 40 03 	lds	r22, 0x0340	; 0x800340 <LogMenu()::lngMem+0x6>
    58a0:	70 91 41 03 	lds	r23, 0x0341	; 0x800341 <LogMenu()::lngMem+0x7>
    58a4:	26 e0       	ldi	r18, 0x06	; 6
    58a6:	30 e0       	ldi	r19, 0x00	; 0
    58a8:	8d ee       	ldi	r24, 0xED	; 237
    58aa:	98 e0       	ldi	r25, 0x08	; 8
    58ac:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    58b0:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    58b4:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    58b8:	85 e1       	ldi	r24, 0x15	; 21
    58ba:	90 e0       	ldi	r25, 0x00	; 0
    58bc:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    58c0:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:38
        display.setCursor(1, 21);
        display.print(latMem[2], 6); display.print(','); display.print(lngMem[2], 6);
    58c4:	40 91 5a 03 	lds	r20, 0x035A	; 0x80035a <LogMenu()::latMem+0x8>
    58c8:	50 91 5b 03 	lds	r21, 0x035B	; 0x80035b <LogMenu()::latMem+0x9>
    58cc:	60 91 5c 03 	lds	r22, 0x035C	; 0x80035c <LogMenu()::latMem+0xa>
    58d0:	70 91 5d 03 	lds	r23, 0x035D	; 0x80035d <LogMenu()::latMem+0xb>
    58d4:	26 e0       	ldi	r18, 0x06	; 6
    58d6:	30 e0       	ldi	r19, 0x00	; 0
    58d8:	8d ee       	ldi	r24, 0xED	; 237
    58da:	98 e0       	ldi	r25, 0x08	; 8
    58dc:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
    58e0:	6c e2       	ldi	r22, 0x2C	; 44
    58e2:	8d ee       	ldi	r24, 0xED	; 237
    58e4:	98 e0       	ldi	r25, 0x08	; 8
    58e6:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    58ea:	40 91 42 03 	lds	r20, 0x0342	; 0x800342 <LogMenu()::lngMem+0x8>
    58ee:	50 91 43 03 	lds	r21, 0x0343	; 0x800343 <LogMenu()::lngMem+0x9>
    58f2:	60 91 44 03 	lds	r22, 0x0344	; 0x800344 <LogMenu()::lngMem+0xa>
    58f6:	70 91 45 03 	lds	r23, 0x0345	; 0x800345 <LogMenu()::lngMem+0xb>
    58fa:	26 e0       	ldi	r18, 0x06	; 6
    58fc:	30 e0       	ldi	r19, 0x00	; 0
    58fe:	8d ee       	ldi	r24, 0xED	; 237
    5900:	98 e0       	ldi	r25, 0x08	; 8
    5902:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5906:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    590a:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    590e:	8f e1       	ldi	r24, 0x1F	; 31
    5910:	90 e0       	ldi	r25, 0x00	; 0
    5912:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    5916:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:40
        display.setCursor(1, 31);
        display.print(latMem[3], 6); display.print(','); display.print(lngMem[3], 6);
    591a:	40 91 5e 03 	lds	r20, 0x035E	; 0x80035e <LogMenu()::latMem+0xc>
    591e:	50 91 5f 03 	lds	r21, 0x035F	; 0x80035f <LogMenu()::latMem+0xd>
    5922:	60 91 60 03 	lds	r22, 0x0360	; 0x800360 <LogMenu()::latMem+0xe>
    5926:	70 91 61 03 	lds	r23, 0x0361	; 0x800361 <LogMenu()::latMem+0xf>
    592a:	26 e0       	ldi	r18, 0x06	; 6
    592c:	30 e0       	ldi	r19, 0x00	; 0
    592e:	8d ee       	ldi	r24, 0xED	; 237
    5930:	98 e0       	ldi	r25, 0x08	; 8
    5932:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
    5936:	6c e2       	ldi	r22, 0x2C	; 44
    5938:	8d ee       	ldi	r24, 0xED	; 237
    593a:	98 e0       	ldi	r25, 0x08	; 8
    593c:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    5940:	40 91 46 03 	lds	r20, 0x0346	; 0x800346 <LogMenu()::lngMem+0xc>
    5944:	50 91 47 03 	lds	r21, 0x0347	; 0x800347 <LogMenu()::lngMem+0xd>
    5948:	60 91 48 03 	lds	r22, 0x0348	; 0x800348 <LogMenu()::lngMem+0xe>
    594c:	70 91 49 03 	lds	r23, 0x0349	; 0x800349 <LogMenu()::lngMem+0xf>
    5950:	26 e0       	ldi	r18, 0x06	; 6
    5952:	30 e0       	ldi	r19, 0x00	; 0
    5954:	8d ee       	ldi	r24, 0xED	; 237
    5956:	98 e0       	ldi	r25, 0x08	; 8
    5958:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    595c:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    5960:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5964:	89 e2       	ldi	r24, 0x29	; 41
    5966:	90 e0       	ldi	r25, 0x00	; 0
    5968:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    596c:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:42
        display.setCursor(1, 41);
        display.print(latMem[4], 6); display.print(','); display.print(lngMem[4], 6);
    5970:	40 91 62 03 	lds	r20, 0x0362	; 0x800362 <LogMenu()::latMem+0x10>
    5974:	50 91 63 03 	lds	r21, 0x0363	; 0x800363 <LogMenu()::latMem+0x11>
    5978:	60 91 64 03 	lds	r22, 0x0364	; 0x800364 <LogMenu()::latMem+0x12>
    597c:	70 91 65 03 	lds	r23, 0x0365	; 0x800365 <LogMenu()::latMem+0x13>
    5980:	26 e0       	ldi	r18, 0x06	; 6
    5982:	30 e0       	ldi	r19, 0x00	; 0
    5984:	8d ee       	ldi	r24, 0xED	; 237
    5986:	98 e0       	ldi	r25, 0x08	; 8
    5988:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
    598c:	6c e2       	ldi	r22, 0x2C	; 44
    598e:	8d ee       	ldi	r24, 0xED	; 237
    5990:	98 e0       	ldi	r25, 0x08	; 8
    5992:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    5996:	40 91 4a 03 	lds	r20, 0x034A	; 0x80034a <LogMenu()::lngMem+0x10>
    599a:	50 91 4b 03 	lds	r21, 0x034B	; 0x80034b <LogMenu()::lngMem+0x11>
    599e:	60 91 4c 03 	lds	r22, 0x034C	; 0x80034c <LogMenu()::lngMem+0x12>
    59a2:	70 91 4d 03 	lds	r23, 0x034D	; 0x80034d <LogMenu()::lngMem+0x13>
    59a6:	26 e0       	ldi	r18, 0x06	; 6
    59a8:	30 e0       	ldi	r19, 0x00	; 0
    59aa:	8d ee       	ldi	r24, 0xED	; 237
    59ac:	98 e0       	ldi	r25, 0x08	; 8
    59ae:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    59b2:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    59b6:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    59ba:	83 e3       	ldi	r24, 0x33	; 51
    59bc:	90 e0       	ldi	r25, 0x00	; 0
    59be:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    59c2:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:44
        display.setCursor(1, 51);
        display.print(latMem[5], 6); display.print(','); display.print(lngMem[5], 6);
    59c6:	40 91 66 03 	lds	r20, 0x0366	; 0x800366 <LogMenu()::latMem+0x14>
    59ca:	50 91 67 03 	lds	r21, 0x0367	; 0x800367 <LogMenu()::latMem+0x15>
    59ce:	60 91 68 03 	lds	r22, 0x0368	; 0x800368 <LogMenu()::latMem+0x16>
    59d2:	70 91 69 03 	lds	r23, 0x0369	; 0x800369 <LogMenu()::latMem+0x17>
    59d6:	26 e0       	ldi	r18, 0x06	; 6
    59d8:	30 e0       	ldi	r19, 0x00	; 0
    59da:	8d ee       	ldi	r24, 0xED	; 237
    59dc:	98 e0       	ldi	r25, 0x08	; 8
    59de:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
    59e2:	6c e2       	ldi	r22, 0x2C	; 44
    59e4:	8d ee       	ldi	r24, 0xED	; 237
    59e6:	98 e0       	ldi	r25, 0x08	; 8
    59e8:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    59ec:	40 91 4e 03 	lds	r20, 0x034E	; 0x80034e <LogMenu()::lngMem+0x14>
    59f0:	50 91 4f 03 	lds	r21, 0x034F	; 0x80034f <LogMenu()::lngMem+0x15>
    59f4:	60 91 50 03 	lds	r22, 0x0350	; 0x800350 <LogMenu()::lngMem+0x16>
    59f8:	70 91 51 03 	lds	r23, 0x0351	; 0x800351 <LogMenu()::lngMem+0x17>
    59fc:	26 e0       	ldi	r18, 0x06	; 6
    59fe:	30 e0       	ldi	r19, 0x00	; 0
    5a00:	8d ee       	ldi	r24, 0xED	; 237
    5a02:	98 e0       	ldi	r25, 0x08	; 8
    5a04:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:45
        display.display();
    5a08:	8d ee       	ldi	r24, 0xED	; 237
    5a0a:	98 e0       	ldi	r25, 0x08	; 8
    5a0c:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:48

        /* Max Array Index */
        if(index > 5)
    5a10:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <LogMenu()::index>
    5a14:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    5a18:	06 97       	sbiw	r24, 0x06	; 6
    5a1a:	24 f0       	brlt	.+8      	; 0x5a24 <LogMenu()+0x37c>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:49
                index = 0;
    5a1c:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <LogMenu()::index+0x1>
    5a20:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <LogMenu()::index>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:51
        /* Max Write EEPROM Address for 6 Coordinates */
        if (writeMemoryAddress > 76)
    5a24:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5a28:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5a2c:	8d 34       	cpi	r24, 0x4D	; 77
    5a2e:	91 05       	cpc	r25, r1
    5a30:	34 f0       	brlt	.+12     	; 0x5a3e <LogMenu()+0x396>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:52
                writeMemoryAddress = 10;
    5a32:	8a e0       	ldi	r24, 0x0A	; 10
    5a34:	90 e0       	ldi	r25, 0x00	; 0
    5a36:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5a3a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:55

        /* Write Current Location to EEPROM */
        if(!digitalRead(C_Pin)) {
    5a3e:	80 e0       	ldi	r24, 0x00	; 0
    5a40:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    5a44:	89 2b       	or	r24, r25
    5a46:	09 f0       	breq	.+2      	; 0x5a4a <LogMenu()+0x3a2>
    5a48:	a8 c0       	rjmp	.+336    	; 0x5b9a <LogMenu()+0x4f2>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:56
                display.setTextSize(1);
    5a4a:	61 e0       	ldi	r22, 0x01	; 1
    5a4c:	8d ee       	ldi	r24, 0xED	; 237
    5a4e:	98 e0       	ldi	r25, 0x08	; 8
    5a50:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    5a54:	c1 e0       	ldi	r28, 0x01	; 1
    5a56:	d0 e0       	ldi	r29, 0x00	; 0
    5a58:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    5a5c:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    5a60:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    5a64:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:59
                display.setTextColor(WHITE);
                static unsigned long last_interrupt_time = 0;
                if (millis() - last_interrupt_time > 200) {
    5a68:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    5a6c:	00 91 34 03 	lds	r16, 0x0334	; 0x800334 <LogMenu()::last_interrupt_time>
    5a70:	10 91 35 03 	lds	r17, 0x0335	; 0x800335 <LogMenu()::last_interrupt_time+0x1>
    5a74:	20 91 36 03 	lds	r18, 0x0336	; 0x800336 <LogMenu()::last_interrupt_time+0x2>
    5a78:	30 91 37 03 	lds	r19, 0x0337	; 0x800337 <LogMenu()::last_interrupt_time+0x3>
    5a7c:	60 1b       	sub	r22, r16
    5a7e:	71 0b       	sbc	r23, r17
    5a80:	82 0b       	sbc	r24, r18
    5a82:	93 0b       	sbc	r25, r19
    5a84:	69 3c       	cpi	r22, 0xC9	; 201
    5a86:	71 05       	cpc	r23, r1
    5a88:	81 05       	cpc	r24, r1
    5a8a:	91 05       	cpc	r25, r1
    5a8c:	08 f4       	brcc	.+2      	; 0x5a90 <LogMenu()+0x3e8>
    5a8e:	7b c0       	rjmp	.+246    	; 0x5b86 <LogMenu()+0x4de>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:60
                        switch (index) {
    5a90:	c0 90 38 03 	lds	r12, 0x0338	; 0x800338 <LogMenu()::index>
    5a94:	d0 90 39 03 	lds	r13, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    5a98:	82 e0       	ldi	r24, 0x02	; 2
    5a9a:	c8 16       	cp	r12, r24
    5a9c:	d1 04       	cpc	r13, r1
    5a9e:	09 f4       	brne	.+2      	; 0x5aa2 <LogMenu()+0x3fa>
    5aa0:	20 c1       	rjmp	.+576    	; 0x5ce2 <LogMenu()+0x63a>
    5aa2:	0c f0       	brlt	.+2      	; 0x5aa6 <LogMenu()+0x3fe>
    5aa4:	b5 c0       	rjmp	.+362    	; 0x5c10 <LogMenu()+0x568>
    5aa6:	c1 14       	cp	r12, r1
    5aa8:	d1 04       	cpc	r13, r1
    5aaa:	09 f4       	brne	.+2      	; 0x5aae <LogMenu()+0x406>
    5aac:	d8 c0       	rjmp	.+432    	; 0x5c5e <LogMenu()+0x5b6>
    5aae:	81 e0       	ldi	r24, 0x01	; 1
    5ab0:	c8 16       	cp	r12, r24
    5ab2:	d1 04       	cpc	r13, r1
    5ab4:	09 f4       	brne	.+2      	; 0x5ab8 <LogMenu()+0x410>
    5ab6:	fa c0       	rjmp	.+500    	; 0x5cac <LogMenu()+0x604>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:98
                            display.setCursor(1, 51);
                            display.print(F("WRITING...  "));
                            display.print(index);
                            break;
                        }
                        display.display();
    5ab8:	8d ee       	ldi	r24, 0xED	; 237
    5aba:	98 e0       	ldi	r25, 0x08	; 8
    5abc:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:99
                        latMem[index] = gps.location.lat();
    5ac0:	c0 91 38 03 	lds	r28, 0x0338	; 0x800338 <LogMenu()::index>
    5ac4:	d0 91 39 03 	lds	r29, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    5ac8:	82 e1       	ldi	r24, 0x12	; 18
    5aca:	98 e0       	ldi	r25, 0x08	; 8
    5acc:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
    5ad0:	cc 0f       	add	r28, r28
    5ad2:	dd 1f       	adc	r29, r29
    5ad4:	cc 0f       	add	r28, r28
    5ad6:	dd 1f       	adc	r29, r29
    5ad8:	ce 5a       	subi	r28, 0xAE	; 174
    5ada:	dc 4f       	sbci	r29, 0xFC	; 252
    5adc:	68 83       	st	Y, r22
    5ade:	79 83       	std	Y+1, r23	; 0x01
    5ae0:	8a 83       	std	Y+2, r24	; 0x02
    5ae2:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:100
                        lngMem[index] = gps.location.lng();
    5ae4:	c0 91 38 03 	lds	r28, 0x0338	; 0x800338 <LogMenu()::index>
    5ae8:	d0 91 39 03 	lds	r29, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    5aec:	82 e1       	ldi	r24, 0x12	; 18
    5aee:	98 e0       	ldi	r25, 0x08	; 8
    5af0:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    5af4:	cc 0f       	add	r28, r28
    5af6:	dd 1f       	adc	r29, r29
    5af8:	cc 0f       	add	r28, r28
    5afa:	dd 1f       	adc	r29, r29
    5afc:	c6 5c       	subi	r28, 0xC6	; 198
    5afe:	dc 4f       	sbci	r29, 0xFC	; 252
    5b00:	68 83       	st	Y, r22
    5b02:	79 83       	std	Y+1, r23	; 0x01
    5b04:	8a 83       	std	Y+2, r24	; 0x02
    5b06:	9b 83       	std	Y+3, r25	; 0x03
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:101
                        writeToEEPROM(writeMemoryAddress, latMem[index]);
    5b08:	e0 91 38 03 	lds	r30, 0x0338	; 0x800338 <LogMenu()::index>
    5b0c:	f0 91 39 03 	lds	r31, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    5b10:	ee 0f       	add	r30, r30
    5b12:	ff 1f       	adc	r31, r31
    5b14:	ee 0f       	add	r30, r30
    5b16:	ff 1f       	adc	r31, r31
    5b18:	ee 5a       	subi	r30, 0xAE	; 174
    5b1a:	fc 4f       	sbci	r31, 0xFC	; 252
    5b1c:	40 81       	ld	r20, Z
    5b1e:	51 81       	ldd	r21, Z+1	; 0x01
    5b20:	62 81       	ldd	r22, Z+2	; 0x02
    5b22:	73 81       	ldd	r23, Z+3	; 0x03
    5b24:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5b28:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5b2c:	0e 94 75 11 	call	0x22ea	; 0x22ea <writeToEEPROM(int, double)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:102
                        writeMemoryAddress += 6;
    5b30:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5b34:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5b38:	06 96       	adiw	r24, 0x06	; 6
    5b3a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5b3e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:103
                        writeToEEPROM(writeMemoryAddress, lngMem[index]);
    5b42:	e0 91 38 03 	lds	r30, 0x0338	; 0x800338 <LogMenu()::index>
    5b46:	f0 91 39 03 	lds	r31, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    5b4a:	ee 0f       	add	r30, r30
    5b4c:	ff 1f       	adc	r31, r31
    5b4e:	ee 0f       	add	r30, r30
    5b50:	ff 1f       	adc	r31, r31
    5b52:	e6 5c       	subi	r30, 0xC6	; 198
    5b54:	fc 4f       	sbci	r31, 0xFC	; 252
    5b56:	40 81       	ld	r20, Z
    5b58:	51 81       	ldd	r21, Z+1	; 0x01
    5b5a:	62 81       	ldd	r22, Z+2	; 0x02
    5b5c:	73 81       	ldd	r23, Z+3	; 0x03
    5b5e:	0e 94 75 11 	call	0x22ea	; 0x22ea <writeToEEPROM(int, double)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:104
                        writeMemoryAddress += 6;
    5b62:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5b66:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5b6a:	06 96       	adiw	r24, 0x06	; 6
    5b6c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5b70:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:105
                        index++;
    5b74:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <LogMenu()::index>
    5b78:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    5b7c:	01 96       	adiw	r24, 0x01	; 1
    5b7e:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <LogMenu()::index+0x1>
    5b82:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <LogMenu()::index>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:107
                }
                last_interrupt_time = millis(); /* Update Interrupt Time */
    5b86:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    5b8a:	60 93 34 03 	sts	0x0334, r22	; 0x800334 <LogMenu()::last_interrupt_time>
    5b8e:	70 93 35 03 	sts	0x0335, r23	; 0x800335 <LogMenu()::last_interrupt_time+0x1>
    5b92:	80 93 36 03 	sts	0x0336, r24	; 0x800336 <LogMenu()::last_interrupt_time+0x2>
    5b96:	90 93 37 03 	sts	0x0337, r25	; 0x800337 <LogMenu()::last_interrupt_time+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:111
        }

        /* Clear Locations in EEPROM */
        while(!digitalRead(B_Pin)) {
    5b9a:	81 e0       	ldi	r24, 0x01	; 1
    5b9c:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    5ba0:	89 2b       	or	r24, r25
    5ba2:	09 f0       	breq	.+2      	; 0x5ba6 <LogMenu()+0x4fe>
    5ba4:	0d c1       	rjmp	.+538    	; 0x5dc0 <LogMenu()+0x718>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:112
                display.clearDisplay();
    5ba6:	8d ee       	ldi	r24, 0xED	; 237
    5ba8:	98 e0       	ldi	r25, 0x08	; 8
    5baa:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5bae:	81 e0       	ldi	r24, 0x01	; 1
    5bb0:	90 e0       	ldi	r25, 0x00	; 0
    5bb2:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    5bb6:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5bba:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    5bbe:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:114
                display.setCursor(1, 1);
                display.print(F("ERASING EEPROM..."));
    5bc2:	62 e5       	ldi	r22, 0x52	; 82
    5bc4:	72 e0       	ldi	r23, 0x02	; 2
    5bc6:	8d ee       	ldi	r24, 0xED	; 237
    5bc8:	98 e0       	ldi	r25, 0x08	; 8
    5bca:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:115
                display.display();
    5bce:	8d ee       	ldi	r24, 0xED	; 237
    5bd0:	98 e0       	ldi	r25, 0x08	; 8
    5bd2:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:118

                /* Erase all waypoint memory from EEPROM */
                for(writeMemoryAddress = 10; writeMemoryAddress < 77; writeMemoryAddress++) {
    5bd6:	8a e0       	ldi	r24, 0x0A	; 10
    5bd8:	90 e0       	ldi	r25, 0x00	; 0
    5bda:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5bde:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
    5be2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5be6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5bea:	8d 34       	cpi	r24, 0x4D	; 77
    5bec:	91 05       	cpc	r25, r1
    5bee:	0c f0       	brlt	.+2      	; 0x5bf2 <LogMenu()+0x54a>
    5bf0:	c9 c0       	rjmp	.+402    	; 0x5d84 <LogMenu()+0x6dc>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:119 (discriminator 2)
                        EEPROM.write(writeMemoryAddress, 0);
    5bf2:	60 e0       	ldi	r22, 0x00	; 0
    5bf4:	0e 94 ca 10 	call	0x2194	; 0x2194 <EEPROMClass::write(int, unsigned char) [clone .isra.1]>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:120 (discriminator 2)
                        delay(10);
    5bf8:	6a e0       	ldi	r22, 0x0A	; 10
    5bfa:	70 e0       	ldi	r23, 0x00	; 0
    5bfc:	80 e0       	ldi	r24, 0x00	; 0
    5bfe:	90 e0       	ldi	r25, 0x00	; 0
    5c00:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:118 (discriminator 2)
                display.setCursor(1, 1);
                display.print(F("ERASING EEPROM..."));
                display.display();

                /* Erase all waypoint memory from EEPROM */
                for(writeMemoryAddress = 10; writeMemoryAddress < 77; writeMemoryAddress++) {
    5c04:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LogMenu()::writeMemoryAddress>
    5c08:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5c0c:	01 96       	adiw	r24, 0x01	; 1
    5c0e:	e5 cf       	rjmp	.-54     	; 0x5bda <LogMenu()+0x532>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:60
        if(!digitalRead(C_Pin)) {
                display.setTextSize(1);
                display.setTextColor(WHITE);
                static unsigned long last_interrupt_time = 0;
                if (millis() - last_interrupt_time > 200) {
                        switch (index) {
    5c10:	84 e0       	ldi	r24, 0x04	; 4
    5c12:	c8 16       	cp	r12, r24
    5c14:	d1 04       	cpc	r13, r1
    5c16:	09 f4       	brne	.+2      	; 0x5c1a <LogMenu()+0x572>
    5c18:	9a c0       	rjmp	.+308    	; 0x5d4e <LogMenu()+0x6a6>
    5c1a:	0c f4       	brge	.+2      	; 0x5c1e <LogMenu()+0x576>
    5c1c:	7d c0       	rjmp	.+250    	; 0x5d18 <LogMenu()+0x670>
    5c1e:	85 e0       	ldi	r24, 0x05	; 5
    5c20:	c8 16       	cp	r12, r24
    5c22:	d1 04       	cpc	r13, r1
    5c24:	09 f0       	breq	.+2      	; 0x5c28 <LogMenu()+0x580>
    5c26:	48 cf       	rjmp	.-368    	; 0x5ab8 <LogMenu()+0x410>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:92
                            display.setCursor(1, 41);
                            display.print(F("WRITING...  "));
                            display.print(index);
                            break;
                          case 5:
                            display.fillRect(1, 51, 128, 9, BLACK);
    5c28:	f1 2c       	mov	r15, r1
    5c2a:	e1 2c       	mov	r14, r1
    5c2c:	09 e0       	ldi	r16, 0x09	; 9
    5c2e:	10 e0       	ldi	r17, 0x00	; 0
    5c30:	20 e8       	ldi	r18, 0x80	; 128
    5c32:	30 e0       	ldi	r19, 0x00	; 0
    5c34:	43 e3       	ldi	r20, 0x33	; 51
    5c36:	50 e0       	ldi	r21, 0x00	; 0
    5c38:	61 e0       	ldi	r22, 0x01	; 1
    5c3a:	70 e0       	ldi	r23, 0x00	; 0
    5c3c:	8d ee       	ldi	r24, 0xED	; 237
    5c3e:	98 e0       	ldi	r25, 0x08	; 8
    5c40:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5c44:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    5c48:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5c4c:	83 e3       	ldi	r24, 0x33	; 51
    5c4e:	90 e0       	ldi	r25, 0x00	; 0
    5c50:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    5c54:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:94
                            display.setCursor(1, 51);
                            display.print(F("WRITING...  "));
    5c58:	64 e6       	ldi	r22, 0x64	; 100
    5c5a:	72 e0       	ldi	r23, 0x02	; 2
    5c5c:	18 c0       	rjmp	.+48     	; 0x5c8e <LogMenu()+0x5e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:62
                display.setTextColor(WHITE);
                static unsigned long last_interrupt_time = 0;
                if (millis() - last_interrupt_time > 200) {
                        switch (index) {
                          case 0:
                            display.fillRect(1, 1, 128, 9, BLACK);
    5c5e:	f1 2c       	mov	r15, r1
    5c60:	e1 2c       	mov	r14, r1
    5c62:	09 e0       	ldi	r16, 0x09	; 9
    5c64:	10 e0       	ldi	r17, 0x00	; 0
    5c66:	20 e8       	ldi	r18, 0x80	; 128
    5c68:	30 e0       	ldi	r19, 0x00	; 0
    5c6a:	41 e0       	ldi	r20, 0x01	; 1
    5c6c:	50 e0       	ldi	r21, 0x00	; 0
    5c6e:	61 e0       	ldi	r22, 0x01	; 1
    5c70:	70 e0       	ldi	r23, 0x00	; 0
    5c72:	8d ee       	ldi	r24, 0xED	; 237
    5c74:	98 e0       	ldi	r25, 0x08	; 8
    5c76:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5c7a:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    5c7e:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5c82:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    5c86:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:64
                            display.setCursor(1, 1);
                            display.print(F("WRITING...  "));
    5c8a:	65 ea       	ldi	r22, 0xA5	; 165
    5c8c:	72 e0       	ldi	r23, 0x02	; 2
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:94
                            display.print(index);
                            break;
                          case 5:
                            display.fillRect(1, 51, 128, 9, BLACK);
                            display.setCursor(1, 51);
                            display.print(F("WRITING...  "));
    5c8e:	8d ee       	ldi	r24, 0xED	; 237
    5c90:	98 e0       	ldi	r25, 0x08	; 8
    5c92:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:95
                            display.print(index);
    5c96:	60 91 38 03 	lds	r22, 0x0338	; 0x800338 <LogMenu()::index>
    5c9a:	70 91 39 03 	lds	r23, 0x0339	; 0x800339 <LogMenu()::index+0x1>
    5c9e:	4a e0       	ldi	r20, 0x0A	; 10
    5ca0:	50 e0       	ldi	r21, 0x00	; 0
    5ca2:	8d ee       	ldi	r24, 0xED	; 237
    5ca4:	98 e0       	ldi	r25, 0x08	; 8
    5ca6:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:96
                            break;
    5caa:	06 cf       	rjmp	.-500    	; 0x5ab8 <LogMenu()+0x410>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:68
                            display.setCursor(1, 1);
                            display.print(F("WRITING...  "));
                            display.print(index);
                            break;
                          case 1:
                            display.fillRect(1, 11, 128, 9, BLACK);
    5cac:	f1 2c       	mov	r15, r1
    5cae:	e1 2c       	mov	r14, r1
    5cb0:	09 e0       	ldi	r16, 0x09	; 9
    5cb2:	10 e0       	ldi	r17, 0x00	; 0
    5cb4:	20 e8       	ldi	r18, 0x80	; 128
    5cb6:	30 e0       	ldi	r19, 0x00	; 0
    5cb8:	4b e0       	ldi	r20, 0x0B	; 11
    5cba:	50 e0       	ldi	r21, 0x00	; 0
    5cbc:	61 e0       	ldi	r22, 0x01	; 1
    5cbe:	70 e0       	ldi	r23, 0x00	; 0
    5cc0:	8d ee       	ldi	r24, 0xED	; 237
    5cc2:	98 e0       	ldi	r25, 0x08	; 8
    5cc4:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5cc8:	d0 92 fa 08 	sts	0x08FA, r13	; 0x8008fa <display+0xd>
    5ccc:	c0 92 f9 08 	sts	0x08F9, r12	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5cd0:	8b e0       	ldi	r24, 0x0B	; 11
    5cd2:	90 e0       	ldi	r25, 0x00	; 0
    5cd4:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    5cd8:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:70
                            display.setCursor(1, 11);
                            display.print(F("WRITING...  "));
    5cdc:	68 e9       	ldi	r22, 0x98	; 152
    5cde:	72 e0       	ldi	r23, 0x02	; 2
    5ce0:	d6 cf       	rjmp	.-84     	; 0x5c8e <LogMenu()+0x5e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:74
                            display.print(index);
                            break;
                          case 2:
                            display.fillRect(1, 21, 128, 9, BLACK);
    5ce2:	f1 2c       	mov	r15, r1
    5ce4:	e1 2c       	mov	r14, r1
    5ce6:	09 e0       	ldi	r16, 0x09	; 9
    5ce8:	10 e0       	ldi	r17, 0x00	; 0
    5cea:	20 e8       	ldi	r18, 0x80	; 128
    5cec:	30 e0       	ldi	r19, 0x00	; 0
    5cee:	45 e1       	ldi	r20, 0x15	; 21
    5cf0:	50 e0       	ldi	r21, 0x00	; 0
    5cf2:	61 e0       	ldi	r22, 0x01	; 1
    5cf4:	70 e0       	ldi	r23, 0x00	; 0
    5cf6:	8d ee       	ldi	r24, 0xED	; 237
    5cf8:	98 e0       	ldi	r25, 0x08	; 8
    5cfa:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5cfe:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    5d02:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5d06:	85 e1       	ldi	r24, 0x15	; 21
    5d08:	90 e0       	ldi	r25, 0x00	; 0
    5d0a:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    5d0e:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:76
                            display.setCursor(1, 21);
                            display.print(F("WRITING...  "));
    5d12:	6b e8       	ldi	r22, 0x8B	; 139
    5d14:	72 e0       	ldi	r23, 0x02	; 2
    5d16:	bb cf       	rjmp	.-138    	; 0x5c8e <LogMenu()+0x5e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:80
                            display.print(index);
                            break;
                          case 3:
                            display.fillRect(1, 31, 128, 9, BLACK);
    5d18:	f1 2c       	mov	r15, r1
    5d1a:	e1 2c       	mov	r14, r1
    5d1c:	09 e0       	ldi	r16, 0x09	; 9
    5d1e:	10 e0       	ldi	r17, 0x00	; 0
    5d20:	20 e8       	ldi	r18, 0x80	; 128
    5d22:	30 e0       	ldi	r19, 0x00	; 0
    5d24:	4f e1       	ldi	r20, 0x1F	; 31
    5d26:	50 e0       	ldi	r21, 0x00	; 0
    5d28:	61 e0       	ldi	r22, 0x01	; 1
    5d2a:	70 e0       	ldi	r23, 0x00	; 0
    5d2c:	8d ee       	ldi	r24, 0xED	; 237
    5d2e:	98 e0       	ldi	r25, 0x08	; 8
    5d30:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5d34:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    5d38:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5d3c:	8f e1       	ldi	r24, 0x1F	; 31
    5d3e:	90 e0       	ldi	r25, 0x00	; 0
    5d40:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    5d44:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:82
                            display.setCursor(1, 31);
                            display.print(F("WRITING...  "));
    5d48:	6e e7       	ldi	r22, 0x7E	; 126
    5d4a:	72 e0       	ldi	r23, 0x02	; 2
    5d4c:	a0 cf       	rjmp	.-192    	; 0x5c8e <LogMenu()+0x5e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:86
                            display.print(index);
                            break;
                          case 4:
                            display.fillRect(1, 41, 128, 9, BLACK);
    5d4e:	f1 2c       	mov	r15, r1
    5d50:	e1 2c       	mov	r14, r1
    5d52:	09 e0       	ldi	r16, 0x09	; 9
    5d54:	10 e0       	ldi	r17, 0x00	; 0
    5d56:	20 e8       	ldi	r18, 0x80	; 128
    5d58:	30 e0       	ldi	r19, 0x00	; 0
    5d5a:	49 e2       	ldi	r20, 0x29	; 41
    5d5c:	50 e0       	ldi	r21, 0x00	; 0
    5d5e:	61 e0       	ldi	r22, 0x01	; 1
    5d60:	70 e0       	ldi	r23, 0x00	; 0
    5d62:	8d ee       	ldi	r24, 0xED	; 237
    5d64:	98 e0       	ldi	r25, 0x08	; 8
    5d66:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5d6a:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    5d6e:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5d72:	89 e2       	ldi	r24, 0x29	; 41
    5d74:	90 e0       	ldi	r25, 0x00	; 0
    5d76:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    5d7a:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7LogMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:88
                            display.setCursor(1, 41);
                            display.print(F("WRITING...  "));
    5d7e:	61 e7       	ldi	r22, 0x71	; 113
    5d80:	72 e0       	ldi	r23, 0x02	; 2
    5d82:	85 cf       	rjmp	.-246    	; 0x5c8e <LogMenu()+0x5e6>
    5d84:	e2 e5       	ldi	r30, 0x52	; 82
    5d86:	f3 e0       	ldi	r31, 0x03	; 3
    5d88:	aa e3       	ldi	r26, 0x3A	; 58
    5d8a:	b3 e0       	ldi	r27, 0x03	; 3
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:125 (discriminator 2)
                        delay(10);
                }

                /* Clear Coordinates Array */
                for(int i = 0; i < 6; i++) {
                        latMem[i] = 0;
    5d8c:	11 92       	st	Z+, r1
    5d8e:	11 92       	st	Z+, r1
    5d90:	11 92       	st	Z+, r1
    5d92:	11 92       	st	Z+, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:126 (discriminator 2)
                        lngMem[i] = 0;
    5d94:	1d 92       	st	X+, r1
    5d96:	1d 92       	st	X+, r1
    5d98:	1d 92       	st	X+, r1
    5d9a:	1d 92       	st	X+, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:124 (discriminator 2)
                        EEPROM.write(writeMemoryAddress, 0);
                        delay(10);
                }

                /* Clear Coordinates Array */
                for(int i = 0; i < 6; i++) {
    5d9c:	83 e0       	ldi	r24, 0x03	; 3
    5d9e:	ea 36       	cpi	r30, 0x6A	; 106
    5da0:	f8 07       	cpc	r31, r24
    5da2:	a1 f7       	brne	.-24     	; 0x5d8c <LogMenu()+0x6e4>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:128
                        latMem[i] = 0;
                        lngMem[i] = 0;
                }
                display.clearDisplay();
    5da4:	8d ee       	ldi	r24, 0xED	; 237
    5da6:	98 e0       	ldi	r25, 0x08	; 8
    5da8:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:129
                index = 0;
    5dac:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <LogMenu()::index+0x1>
    5db0:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <LogMenu()::index>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:130
                writeMemoryAddress = 10;
    5db4:	8a e0       	ldi	r24, 0x0A	; 10
    5db6:	90 e0       	ldi	r25, 0x00	; 0
    5db8:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LogMenu()::writeMemoryAddress+0x1>
    5dbc:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LogMenu()::writeMemoryAddress>
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:134
                break;
        }
        decodeGPSNMEA(1000);
}
    5dc0:	df 91       	pop	r29
    5dc2:	cf 91       	pop	r28
    5dc4:	1f 91       	pop	r17
    5dc6:	0f 91       	pop	r16
    5dc8:	ff 90       	pop	r15
    5dca:	ef 90       	pop	r14
    5dcc:	df 90       	pop	r13
    5dce:	cf 90       	pop	r12
C:\Users\nyvir\Documents\GitHub\GPSKit/LogMenu.ino:133
                display.clearDisplay();
                index = 0;
                writeMemoryAddress = 10;
                break;
        }
        decodeGPSNMEA(1000);
    5dd0:	0c 94 fc 26 	jmp	0x4df8	; 0x4df8 <decodeGPSNMEA(unsigned long) [clone .constprop.6]>

00005dd4 <InfoMenu()>:
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:1
void InfoMenu(void) {
    5dd4:	4f 92       	push	r4
    5dd6:	5f 92       	push	r5
    5dd8:	6f 92       	push	r6
    5dda:	7f 92       	push	r7
    5ddc:	8f 92       	push	r8
    5dde:	9f 92       	push	r9
    5de0:	af 92       	push	r10
    5de2:	bf 92       	push	r11
    5de4:	cf 92       	push	r12
    5de6:	df 92       	push	r13
    5de8:	ef 92       	push	r14
    5dea:	ff 92       	push	r15
    5dec:	0f 93       	push	r16
    5dee:	1f 93       	push	r17
    5df0:	cf 93       	push	r28
    5df2:	df 93       	push	r29
    5df4:	cd b7       	in	r28, 0x3d	; 61
    5df6:	de b7       	in	r29, 0x3e	; 62
    5df8:	66 97       	sbiw	r28, 0x16	; 22
    5dfa:	0f b6       	in	r0, 0x3f	; 63
    5dfc:	f8 94       	cli
    5dfe:	de bf       	out	0x3e, r29	; 62
    5e00:	0f be       	out	0x3f, r0	; 63
    5e02:	cd bf       	out	0x3d, r28	; 61
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:3
  /* Calculate GMT using Longitude */
  int timeZone = getTimeZone(gps.location.lng());
    5e04:	82 e1       	ldi	r24, 0x12	; 18
    5e06:	98 e0       	ldi	r25, 0x08	; 8
    5e08:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    5e0c:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    5e10:	8c 01       	movw	r16, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:6

  /* Show GMT */
  display.setTextSize(1);
    5e12:	61 e0       	ldi	r22, 0x01	; 1
    5e14:	8d ee       	ldi	r24, 0xED	; 237
    5e16:	98 e0       	ldi	r25, 0x08	; 8
    5e18:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    5e1c:	aa 24       	eor	r10, r10
    5e1e:	a3 94       	inc	r10
    5e20:	b1 2c       	mov	r11, r1
    5e22:	b0 92 00 09 	sts	0x0900, r11	; 0x800900 <display+0x13>
    5e26:	a0 92 ff 08 	sts	0x08FF, r10	; 0x8008ff <display+0x12>
    5e2a:	b0 92 fe 08 	sts	0x08FE, r11	; 0x8008fe <display+0x11>
    5e2e:	a0 92 fd 08 	sts	0x08FD, r10	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5e32:	b0 92 fa 08 	sts	0x08FA, r11	; 0x8008fa <display+0xd>
    5e36:	a0 92 f9 08 	sts	0x08F9, r10	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5e3a:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    5e3e:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:9
  display.setTextColor(WHITE);
  display.setCursor(1, 1);
  display.print("TIME ZONE");
    5e42:	6d ef       	ldi	r22, 0xFD	; 253
    5e44:	71 e0       	ldi	r23, 0x01	; 1
    5e46:	8d ee       	ldi	r24, 0xED	; 237
    5e48:	98 e0       	ldi	r25, 0x08	; 8
    5e4a:	0e 94 1e 6c 	call	0xd83c	; 0xd83c <Print::print(char const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5e4e:	81 e4       	ldi	r24, 0x41	; 65
    5e50:	90 e0       	ldi	r25, 0x00	; 0
    5e52:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    5e56:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5e5a:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    5e5e:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:13
  display.setCursor(65, 1);

  /* UTC is not TimeZone, GMT is */
  if (timeZone == 0)
    5e62:	01 15       	cp	r16, r1
    5e64:	11 05       	cpc	r17, r1
    5e66:	09 f0       	breq	.+2      	; 0x5e6a <InfoMenu()+0x96>
    5e68:	61 c1       	rjmp	.+706    	; 0x612c <InfoMenu()+0x358>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:14
    display.print("UTC");
    5e6a:	67 e0       	ldi	r22, 0x07	; 7
    5e6c:	72 e0       	ldi	r23, 0x02	; 2
    5e6e:	8d ee       	ldi	r24, 0xED	; 237
    5e70:	98 e0       	ldi	r25, 0x08	; 8
    5e72:	0e 94 1e 6c 	call	0xd83c	; 0xd83c <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:23
  if (timeZone > 0) {
    display.print('+');
    display.print(timeZone);
  }
  else
    display.print(timeZone);
    5e76:	4a e0       	ldi	r20, 0x0A	; 10
    5e78:	50 e0       	ldi	r21, 0x00	; 0
    5e7a:	b8 01       	movw	r22, r16
    5e7c:	8d ee       	ldi	r24, 0xED	; 237
    5e7e:	98 e0       	ldi	r25, 0x08	; 8
    5e80:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:26

  /* Calculate Sunrise and Sunset Time */
  Dusk2Dawn currentCoordinate(gps.location.lat(), gps.location.lng(), timeZone);
    5e84:	82 e1       	ldi	r24, 0x12	; 18
    5e86:	98 e0       	ldi	r25, 0x08	; 8
    5e88:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    5e8c:	2b 01       	movw	r4, r22
    5e8e:	3c 01       	movw	r6, r24
    5e90:	82 e1       	ldi	r24, 0x12	; 18
    5e92:	98 e0       	ldi	r25, 0x08	; 8
    5e94:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
    5e98:	4b 01       	movw	r8, r22
    5e9a:	5c 01       	movw	r10, r24
    5e9c:	b8 01       	movw	r22, r16
    5e9e:	11 0f       	add	r17, r17
    5ea0:	88 0b       	sbc	r24, r24
    5ea2:	99 0b       	sbc	r25, r25
    5ea4:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    5ea8:	6b 01       	movw	r12, r22
    5eaa:	7c 01       	movw	r14, r24
    5eac:	93 01       	movw	r18, r6
    5eae:	82 01       	movw	r16, r4
    5eb0:	b5 01       	movw	r22, r10
    5eb2:	a4 01       	movw	r20, r8
    5eb4:	ce 01       	movw	r24, r28
    5eb6:	01 96       	adiw	r24, 0x01	; 1
    5eb8:	0e 94 ed 54 	call	0xa9da	; 0xa9da <Dusk2Dawn::Dusk2Dawn(float, float, float)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:27
  int sunRise = currentCoordinate.sunrise(gps.date.year(), gps.date.month(), gps.date.day(), false); /* No DST */
    5ebc:	84 e3       	ldi	r24, 0x34	; 52
    5ebe:	98 e0       	ldi	r25, 0x08	; 8
    5ec0:	0e 94 c1 65 	call	0xcb82	; 0xcb82 <TinyGPSDate::day()>
    5ec4:	08 2f       	mov	r16, r24
    5ec6:	84 e3       	ldi	r24, 0x34	; 52
    5ec8:	98 e0       	ldi	r25, 0x08	; 8
    5eca:	0e 94 a2 65 	call	0xcb44	; 0xcb44 <TinyGPSDate::month()>
    5ece:	18 2f       	mov	r17, r24
    5ed0:	84 e3       	ldi	r24, 0x34	; 52
    5ed2:	98 e0       	ldi	r25, 0x08	; 8
    5ed4:	0e 94 92 65 	call	0xcb24	; 0xcb24 <TinyGPSDate::year()>
    5ed8:	20 2f       	mov	r18, r16
    5eda:	30 e0       	ldi	r19, 0x00	; 0
    5edc:	41 2f       	mov	r20, r17
    5ede:	50 e0       	ldi	r21, 0x00	; 0
    5ee0:	00 e0       	ldi	r16, 0x00	; 0
    5ee2:	bc 01       	movw	r22, r24
    5ee4:	ce 01       	movw	r24, r28
    5ee6:	01 96       	adiw	r24, 0x01	; 1
    5ee8:	0e 94 34 5b 	call	0xb668	; 0xb668 <Dusk2Dawn::sunrise(int, int, int, bool)>
    5eec:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:28
  int sunSet = currentCoordinate.sunset(gps.date.year(), gps.date.month(), gps.date.day(), false); /* No DST */
    5eee:	84 e3       	ldi	r24, 0x34	; 52
    5ef0:	98 e0       	ldi	r25, 0x08	; 8
    5ef2:	0e 94 c1 65 	call	0xcb82	; 0xcb82 <TinyGPSDate::day()>
    5ef6:	08 2f       	mov	r16, r24
    5ef8:	84 e3       	ldi	r24, 0x34	; 52
    5efa:	98 e0       	ldi	r25, 0x08	; 8
    5efc:	0e 94 a2 65 	call	0xcb44	; 0xcb44 <TinyGPSDate::month()>
    5f00:	18 2f       	mov	r17, r24
    5f02:	84 e3       	ldi	r24, 0x34	; 52
    5f04:	98 e0       	ldi	r25, 0x08	; 8
    5f06:	0e 94 92 65 	call	0xcb24	; 0xcb24 <TinyGPSDate::year()>
    5f0a:	20 2f       	mov	r18, r16
    5f0c:	30 e0       	ldi	r19, 0x00	; 0
    5f0e:	41 2f       	mov	r20, r17
    5f10:	50 e0       	ldi	r21, 0x00	; 0
    5f12:	00 e0       	ldi	r16, 0x00	; 0
    5f14:	bc 01       	movw	r22, r24
    5f16:	ce 01       	movw	r24, r28
    5f18:	01 96       	adiw	r24, 0x01	; 1
    5f1a:	0e 94 42 5b 	call	0xb684	; 0xb684 <Dusk2Dawn::sunset(int, int, int, bool)>
    5f1e:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:32

  /* Sun Rise Time */
  char sunRiseTime[6];
  Dusk2Dawn::min2str(sunRiseTime, sunRise);
    5f20:	b5 01       	movw	r22, r10
    5f22:	ce 01       	movw	r24, r28
    5f24:	41 96       	adiw	r24, 0x11	; 17
    5f26:	0e 94 73 5b 	call	0xb6e6	; 0xb6e6 <Dusk2Dawn::min2str(char*, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5f2a:	88 24       	eor	r8, r8
    5f2c:	83 94       	inc	r8
    5f2e:	91 2c       	mov	r9, r1
    5f30:	90 92 fa 08 	sts	0x08FA, r9	; 0x8008fa <display+0xd>
    5f34:	80 92 f9 08 	sts	0x08F9, r8	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5f38:	0a e0       	ldi	r16, 0x0A	; 10
    5f3a:	10 e0       	ldi	r17, 0x00	; 0
    5f3c:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    5f40:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:33
  display.setCursor(1, 10);  display.print(F("SUNRISE"));
    5f44:	6d ef       	ldi	r22, 0xFD	; 253
    5f46:	72 e0       	ldi	r23, 0x02	; 2
    5f48:	8d ee       	ldi	r24, 0xED	; 237
    5f4a:	98 e0       	ldi	r25, 0x08	; 8
    5f4c:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5f50:	90 e4       	ldi	r25, 0x40	; 64
    5f52:	a9 2e       	mov	r10, r25
    5f54:	b1 2c       	mov	r11, r1
    5f56:	b0 92 fa 08 	sts	0x08FA, r11	; 0x8008fa <display+0xd>
    5f5a:	a0 92 f9 08 	sts	0x08F9, r10	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5f5e:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    5f62:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:34
  display.setCursor(64, 10); display.print(sunRiseTime);
    5f66:	be 01       	movw	r22, r28
    5f68:	6f 5e       	subi	r22, 0xEF	; 239
    5f6a:	7f 4f       	sbci	r23, 0xFF	; 255
    5f6c:	8d ee       	ldi	r24, 0xED	; 237
    5f6e:	98 e0       	ldi	r25, 0x08	; 8
    5f70:	0e 94 1e 6c 	call	0xd83c	; 0xd83c <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:38

  /* Sunset Time */
  char sunSetTime[6];
  Dusk2Dawn::min2str(sunSetTime, sunSet);
    5f74:	b3 01       	movw	r22, r6
    5f76:	ce 01       	movw	r24, r28
    5f78:	0b 96       	adiw	r24, 0x0b	; 11
    5f7a:	0e 94 73 5b 	call	0xb6e6	; 0xb6e6 <Dusk2Dawn::min2str(char*, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5f7e:	90 92 fa 08 	sts	0x08FA, r9	; 0x8008fa <display+0xd>
    5f82:	80 92 f9 08 	sts	0x08F9, r8	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5f86:	04 e1       	ldi	r16, 0x14	; 20
    5f88:	10 e0       	ldi	r17, 0x00	; 0
    5f8a:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    5f8e:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:39
  display.setCursor(1, 20);  display.print(F("SUNSET"));
    5f92:	66 ef       	ldi	r22, 0xF6	; 246
    5f94:	72 e0       	ldi	r23, 0x02	; 2
    5f96:	8d ee       	ldi	r24, 0xED	; 237
    5f98:	98 e0       	ldi	r25, 0x08	; 8
    5f9a:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5f9e:	b0 92 fa 08 	sts	0x08FA, r11	; 0x8008fa <display+0xd>
    5fa2:	a0 92 f9 08 	sts	0x08F9, r10	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    5fa6:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    5faa:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:40
  display.setCursor(64, 20); display.print(sunSetTime);
    5fae:	be 01       	movw	r22, r28
    5fb0:	65 5f       	subi	r22, 0xF5	; 245
    5fb2:	7f 4f       	sbci	r23, 0xFF	; 255
    5fb4:	8d ee       	ldi	r24, 0xED	; 237
    5fb6:	98 e0       	ldi	r25, 0x08	; 8
    5fb8:	0e 94 1e 6c 	call	0xd83c	; 0xd83c <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:42

  display.drawBitmap(108, 12, sunrise_sunset_icon, 20, 13, 1); /* Draw Sunrise Sunset Icon */
    5fbc:	cc 24       	eor	r12, r12
    5fbe:	c3 94       	inc	r12
    5fc0:	d1 2c       	mov	r13, r1
    5fc2:	3d e0       	ldi	r19, 0x0D	; 13
    5fc4:	e3 2e       	mov	r14, r19
    5fc6:	f1 2c       	mov	r15, r1
    5fc8:	2a ef       	ldi	r18, 0xFA	; 250
    5fca:	33 e1       	ldi	r19, 0x13	; 19
    5fcc:	4c e0       	ldi	r20, 0x0C	; 12
    5fce:	50 e0       	ldi	r21, 0x00	; 0
    5fd0:	6c e6       	ldi	r22, 0x6C	; 108
    5fd2:	70 e0       	ldi	r23, 0x00	; 0
    5fd4:	8d ee       	ldi	r24, 0xED	; 237
    5fd6:	98 e0       	ldi	r25, 0x08	; 8
    5fd8:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:45

  /* Hardware Info */
  display.drawLine(61, 1, 61, 63, WHITE);
    5fdc:	ee 24       	eor	r14, r14
    5fde:	e3 94       	inc	r14
    5fe0:	f1 2c       	mov	r15, r1
    5fe2:	0f e3       	ldi	r16, 0x3F	; 63
    5fe4:	10 e0       	ldi	r17, 0x00	; 0
    5fe6:	2d e3       	ldi	r18, 0x3D	; 61
    5fe8:	30 e0       	ldi	r19, 0x00	; 0
    5fea:	41 e0       	ldi	r20, 0x01	; 1
    5fec:	50 e0       	ldi	r21, 0x00	; 0
    5fee:	6d e3       	ldi	r22, 0x3D	; 61
    5ff0:	70 e0       	ldi	r23, 0x00	; 0
    5ff2:	8d ee       	ldi	r24, 0xED	; 237
    5ff4:	98 e0       	ldi	r25, 0x08	; 8
    5ff6:	0e 94 6c 41 	call	0x82d8	; 0x82d8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    5ffa:	90 92 fa 08 	sts	0x08FA, r9	; 0x8008fa <display+0xd>
    5ffe:	80 92 f9 08 	sts	0x08F9, r8	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6002:	0d e1       	ldi	r16, 0x1D	; 29
    6004:	10 e0       	ldi	r17, 0x00	; 0
    6006:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    600a:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:46
  display.setCursor(1, 29);  display.print(F("FLASH"));
    600e:	60 ef       	ldi	r22, 0xF0	; 240
    6010:	72 e0       	ldi	r23, 0x02	; 2
    6012:	8d ee       	ldi	r24, 0xED	; 237
    6014:	98 e0       	ldi	r25, 0x08	; 8
    6016:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    601a:	b0 92 fa 08 	sts	0x08FA, r11	; 0x8008fa <display+0xd>
    601e:	a0 92 f9 08 	sts	0x08F9, r10	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6022:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    6026:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:47
  display.setCursor(64, 29); display.print(F("46%"));
    602a:	6c ee       	ldi	r22, 0xEC	; 236
    602c:	72 e0       	ldi	r23, 0x02	; 2
    602e:	8d ee       	ldi	r24, 0xED	; 237
    6030:	98 e0       	ldi	r25, 0x08	; 8
    6032:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6036:	90 92 fa 08 	sts	0x08FA, r9	; 0x8008fa <display+0xd>
    603a:	80 92 f9 08 	sts	0x08F9, r8	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    603e:	06 e2       	ldi	r16, 0x26	; 38
    6040:	10 e0       	ldi	r17, 0x00	; 0
    6042:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    6046:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:48
  display.setCursor(1, 38);  display.print(F("RAM"));
    604a:	68 ee       	ldi	r22, 0xE8	; 232
    604c:	72 e0       	ldi	r23, 0x02	; 2
    604e:	8d ee       	ldi	r24, 0xED	; 237
    6050:	98 e0       	ldi	r25, 0x08	; 8
    6052:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6056:	b0 92 fa 08 	sts	0x08FA, r11	; 0x8008fa <display+0xd>
    605a:	a0 92 f9 08 	sts	0x08F9, r10	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    605e:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    6062:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:49
  display.setCursor(64, 38); display.print(F("15%"));
    6066:	64 ee       	ldi	r22, 0xE4	; 228
    6068:	72 e0       	ldi	r23, 0x02	; 2
    606a:	8d ee       	ldi	r24, 0xED	; 237
    606c:	98 e0       	ldi	r25, 0x08	; 8
    606e:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6072:	90 92 fa 08 	sts	0x08FA, r9	; 0x8008fa <display+0xd>
    6076:	80 92 f9 08 	sts	0x08F9, r8	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    607a:	0f e2       	ldi	r16, 0x2F	; 47
    607c:	10 e0       	ldi	r17, 0x00	; 0
    607e:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    6082:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:50
  display.setCursor(1, 47);  display.print(F("EEPROM"));
    6086:	6d ed       	ldi	r22, 0xDD	; 221
    6088:	72 e0       	ldi	r23, 0x02	; 2
    608a:	8d ee       	ldi	r24, 0xED	; 237
    608c:	98 e0       	ldi	r25, 0x08	; 8
    608e:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6092:	b0 92 fa 08 	sts	0x08FA, r11	; 0x8008fa <display+0xd>
    6096:	a0 92 f9 08 	sts	0x08F9, r10	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    609a:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    609e:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:51
  display.setCursor(64, 47); display.print(F("1.70%"));
    60a2:	67 ed       	ldi	r22, 0xD7	; 215
    60a4:	72 e0       	ldi	r23, 0x02	; 2
    60a6:	8d ee       	ldi	r24, 0xED	; 237
    60a8:	98 e0       	ldi	r25, 0x08	; 8
    60aa:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    60ae:	90 92 fa 08 	sts	0x08FA, r9	; 0x8008fa <display+0xd>
    60b2:	80 92 f9 08 	sts	0x08F9, r8	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    60b6:	08 e3       	ldi	r16, 0x38	; 56
    60b8:	10 e0       	ldi	r17, 0x00	; 0
    60ba:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    60be:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:52
  display.setCursor(1, 56);  display.print(F("VERSION"));
    60c2:	6f ec       	ldi	r22, 0xCF	; 207
    60c4:	72 e0       	ldi	r23, 0x02	; 2
    60c6:	8d ee       	ldi	r24, 0xED	; 237
    60c8:	98 e0       	ldi	r25, 0x08	; 8
    60ca:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    60ce:	b0 92 fa 08 	sts	0x08FA, r11	; 0x8008fa <display+0xd>
    60d2:	a0 92 f9 08 	sts	0x08F9, r10	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    60d6:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    60da:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z8InfoMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:53
  display.setCursor(64, 56); display.print(F("24.112021"));
    60de:	65 ec       	ldi	r22, 0xC5	; 197
    60e0:	72 e0       	ldi	r23, 0x02	; 2
    60e2:	8d ee       	ldi	r24, 0xED	; 237
    60e4:	98 e0       	ldi	r25, 0x08	; 8
    60e6:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:54
  display.display();
    60ea:	8d ee       	ldi	r24, 0xED	; 237
    60ec:	98 e0       	ldi	r25, 0x08	; 8
    60ee:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:55
  display.clearDisplay();
    60f2:	8d ee       	ldi	r24, 0xED	; 237
    60f4:	98 e0       	ldi	r25, 0x08	; 8
    60f6:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:58

  // Read and Decode GPS Data
  decodeGPSNMEA(1000);
    60fa:	0e 94 fc 26 	call	0x4df8	; 0x4df8 <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:59
}
    60fe:	66 96       	adiw	r28, 0x16	; 22
    6100:	0f b6       	in	r0, 0x3f	; 63
    6102:	f8 94       	cli
    6104:	de bf       	out	0x3e, r29	; 62
    6106:	0f be       	out	0x3f, r0	; 63
    6108:	cd bf       	out	0x3d, r28	; 61
    610a:	df 91       	pop	r29
    610c:	cf 91       	pop	r28
    610e:	1f 91       	pop	r17
    6110:	0f 91       	pop	r16
    6112:	ff 90       	pop	r15
    6114:	ef 90       	pop	r14
    6116:	df 90       	pop	r13
    6118:	cf 90       	pop	r12
    611a:	bf 90       	pop	r11
    611c:	af 90       	pop	r10
    611e:	9f 90       	pop	r9
    6120:	8f 90       	pop	r8
    6122:	7f 90       	pop	r7
    6124:	6f 90       	pop	r6
    6126:	5f 90       	pop	r5
    6128:	4f 90       	pop	r4
    612a:	08 95       	ret
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:16

  /* UTC is not TimeZone, GMT is */
  if (timeZone == 0)
    display.print("UTC");
  else
    display.print("GMT");
    612c:	6b e0       	ldi	r22, 0x0B	; 11
    612e:	72 e0       	ldi	r23, 0x02	; 2
    6130:	8d ee       	ldi	r24, 0xED	; 237
    6132:	98 e0       	ldi	r25, 0x08	; 8
    6134:	0e 94 1e 6c 	call	0xd83c	; 0xd83c <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:18

  if (timeZone > 0) {
    6138:	10 16       	cp	r1, r16
    613a:	11 06       	cpc	r1, r17
    613c:	0c f0       	brlt	.+2      	; 0x6140 <InfoMenu()+0x36c>
    613e:	9b ce       	rjmp	.-714    	; 0x5e76 <InfoMenu()+0xa2>
C:\Users\nyvir\Documents\GitHub\GPSKit/InfoMenu.ino:19
    display.print('+');
    6140:	6b e2       	ldi	r22, 0x2B	; 43
    6142:	8d ee       	ldi	r24, 0xED	; 237
    6144:	98 e0       	ldi	r25, 0x08	; 8
    6146:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    614a:	95 ce       	rjmp	.-726    	; 0x5e76 <InfoMenu()+0xa2>

0000614c <receptionSignalGraphMenu()>:
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:196
                while(!digitalRead(B_Pin))
                        receptionSignalGraphMenu();
        }
}

void receptionSignalGraphMenu(void) {
    614c:	af 92       	push	r10
    614e:	bf 92       	push	r11
    6150:	cf 92       	push	r12
    6152:	df 92       	push	r13
    6154:	ef 92       	push	r14
    6156:	ff 92       	push	r15
    6158:	0f 93       	push	r16
    615a:	1f 93       	push	r17
    615c:	cf 93       	push	r28
    615e:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:198
        /* Show Icon once when press and hold */
        if (!digitalRead(A_Pin)) logic.newState = true;
    6160:	82 e0       	ldi	r24, 0x02	; 2
    6162:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    6166:	89 2b       	or	r24, r25
    6168:	19 f4       	brne	.+6      	; 0x6170 <receptionSignalGraphMenu()+0x24>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:198 (discriminator 1)
    616a:	81 e0       	ldi	r24, 0x01	; 1
    616c:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <logic+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:199
        if (logic.newState == logic.lastState) menu.newTabFlag = true;
    6170:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <logic+0x1>
    6174:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    6178:	98 13       	cpse	r25, r24
    617a:	03 c0       	rjmp	.+6      	; 0x6182 <receptionSignalGraphMenu()+0x36>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:199 (discriminator 1)
    617c:	81 e0       	ldi	r24, 0x01	; 1
    617e:	80 93 39 09 	sts	0x0939, r24	; 0x800939 <menu+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:201

        if (menu.newTabFlag) {
    6182:	80 91 39 09 	lds	r24, 0x0939	; 0x800939 <menu+0x7>
    6186:	88 23       	and	r24, r24
    6188:	09 f4       	brne	.+2      	; 0x618c <receptionSignalGraphMenu()+0x40>
    618a:	49 c0       	rjmp	.+146    	; 0x621e <receptionSignalGraphMenu()+0xd2>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:202
                display.setTextSize(1);
    618c:	61 e0       	ldi	r22, 0x01	; 1
    618e:	8d ee       	ldi	r24, 0xED	; 237
    6190:	98 e0       	ldi	r25, 0x08	; 8
    6192:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6196:	81 e0       	ldi	r24, 0x01	; 1
    6198:	90 e0       	ldi	r25, 0x00	; 0
    619a:	90 93 00 09 	sts	0x0900, r25	; 0x800900 <display+0x13>
    619e:	80 93 ff 08 	sts	0x08FF, r24	; 0x8008ff <display+0x12>
    61a2:	90 93 fe 08 	sts	0x08FE, r25	; 0x8008fe <display+0x11>
    61a6:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <display+0x10>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:204
                display.setTextColor(WHITE);
                display.clearDisplay();
    61aa:	8d ee       	ldi	r24, 0xED	; 237
    61ac:	98 e0       	ldi	r25, 0x08	; 8
    61ae:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:205
                display.drawBitmap(40, 0, reception_signal_icon, 54, 54, 1);
    61b2:	cc 24       	eor	r12, r12
    61b4:	c3 94       	inc	r12
    61b6:	d1 2c       	mov	r13, r1
    61b8:	76 e3       	ldi	r23, 0x36	; 54
    61ba:	e7 2e       	mov	r14, r23
    61bc:	f1 2c       	mov	r15, r1
    61be:	06 e3       	ldi	r16, 0x36	; 54
    61c0:	10 e0       	ldi	r17, 0x00	; 0
    61c2:	28 ea       	ldi	r18, 0xA8	; 168
    61c4:	3f e0       	ldi	r19, 0x0F	; 15
    61c6:	50 e0       	ldi	r21, 0x00	; 0
    61c8:	40 e0       	ldi	r20, 0x00	; 0
    61ca:	68 e2       	ldi	r22, 0x28	; 40
    61cc:	70 e0       	ldi	r23, 0x00	; 0
    61ce:	8d ee       	ldi	r24, 0xED	; 237
    61d0:	98 e0       	ldi	r25, 0x08	; 8
    61d2:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    61d6:	80 e1       	ldi	r24, 0x10	; 16
    61d8:	90 e0       	ldi	r25, 0x00	; 0
    61da:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    61de:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    61e2:	89 e3       	ldi	r24, 0x39	; 57
    61e4:	90 e0       	ldi	r25, 0x00	; 0
    61e6:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    61ea:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:207
                display.setCursor(16, 57);
                display.print(F("RECEPTION SIGNAL"));
    61ee:	62 e4       	ldi	r22, 0x42	; 66
    61f0:	73 e0       	ldi	r23, 0x03	; 3
    61f2:	8d ee       	ldi	r24, 0xED	; 237
    61f4:	98 e0       	ldi	r25, 0x08	; 8
    61f6:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:208
                display.display();
    61fa:	8d ee       	ldi	r24, 0xED	; 237
    61fc:	98 e0       	ldi	r25, 0x08	; 8
    61fe:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:209
                delay(1000);
    6202:	68 ee       	ldi	r22, 0xE8	; 232
    6204:	73 e0       	ldi	r23, 0x03	; 3
    6206:	80 e0       	ldi	r24, 0x00	; 0
    6208:	90 e0       	ldi	r25, 0x00	; 0
    620a:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:210
                display.clearDisplay();
    620e:	8d ee       	ldi	r24, 0xED	; 237
    6210:	98 e0       	ldi	r25, 0x08	; 8
    6212:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:211
                menu.newTabFlag = false;
    6216:	10 92 39 09 	sts	0x0939, r1	; 0x800939 <menu+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:212
                logic.lastState = false;
    621a:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:215
        }

        display.clearDisplay();
    621e:	8d ee       	ldi	r24, 0xED	; 237
    6220:	98 e0       	ldi	r25, 0x08	; 8
    6222:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:216
        display.fillRect(0, 0, 128, 9, WHITE);
    6226:	ee 24       	eor	r14, r14
    6228:	e3 94       	inc	r14
    622a:	f1 2c       	mov	r15, r1
    622c:	09 e0       	ldi	r16, 0x09	; 9
    622e:	10 e0       	ldi	r17, 0x00	; 0
    6230:	20 e8       	ldi	r18, 0x80	; 128
    6232:	30 e0       	ldi	r19, 0x00	; 0
    6234:	50 e0       	ldi	r21, 0x00	; 0
    6236:	40 e0       	ldi	r20, 0x00	; 0
    6238:	70 e0       	ldi	r23, 0x00	; 0
    623a:	60 e0       	ldi	r22, 0x00	; 0
    623c:	8d ee       	ldi	r24, 0xED	; 237
    623e:	98 e0       	ldi	r25, 0x08	; 8
    6240:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:218

        display.setTextSize(1);
    6244:	61 e0       	ldi	r22, 0x01	; 1
    6246:	8d ee       	ldi	r24, 0xED	; 237
    6248:	98 e0       	ldi	r25, 0x08	; 8
    624a:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    624e:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    6252:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    6256:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    625a:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    625e:	83 e1       	ldi	r24, 0x13	; 19
    6260:	90 e0       	ldi	r25, 0x00	; 0
    6262:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    6266:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    626a:	c1 e0       	ldi	r28, 0x01	; 1
    626c:	d0 e0       	ldi	r29, 0x00	; 0
    626e:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    6272:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:221
        display.setTextColor(BLACK);
        display.setCursor(19, 1);
        display.print(F("CONNECTION INFO"));
    6276:	62 e3       	ldi	r22, 0x32	; 50
    6278:	73 e0       	ldi	r23, 0x03	; 3
    627a:	8d ee       	ldi	r24, 0xED	; 237
    627c:	98 e0       	ldi	r25, 0x08	; 8
    627e:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6282:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    6286:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    628a:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    628e:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_ZNK15TinyGPSLocation3ageEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:59
{
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
    6292:	80 91 12 08 	lds	r24, 0x0812	; 0x800812 <gps>
    6296:	88 23       	and	r24, r24
    6298:	09 f4       	brne	.+2      	; 0x629c <receptionSignalGraphMenu()+0x150>
    629a:	2f c1       	rjmp	.+606    	; 0x64fa <receptionSignalGraphMenu()+0x3ae>
    629c:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    62a0:	00 91 30 08 	lds	r16, 0x0830	; 0x800830 <gps+0x1e>
    62a4:	10 91 31 08 	lds	r17, 0x0831	; 0x800831 <gps+0x1f>
    62a8:	20 91 32 08 	lds	r18, 0x0832	; 0x800832 <gps+0x20>
    62ac:	30 91 33 08 	lds	r19, 0x0833	; 0x800833 <gps+0x21>
    62b0:	60 1b       	sub	r22, r16
    62b2:	71 0b       	sbc	r23, r17
    62b4:	82 0b       	sbc	r24, r18
    62b6:	93 0b       	sbc	r25, r19
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:226

        display.setTextColor(WHITE);

        /* Do the Signal Reception Update Interval Calculation */
        gps_var.reception_signal_amplitude = map(gps.location.age(), 0, 1000, 1, 127);
    62b8:	1f 92       	push	r1
    62ba:	1f 92       	push	r1
    62bc:	1f 92       	push	r1
    62be:	cf e7       	ldi	r28, 0x7F	; 127
    62c0:	cf 93       	push	r28
    62c2:	a1 2c       	mov	r10, r1
    62c4:	b1 2c       	mov	r11, r1
    62c6:	65 01       	movw	r12, r10
    62c8:	a3 94       	inc	r10
    62ca:	18 ee       	ldi	r17, 0xE8	; 232
    62cc:	e1 2e       	mov	r14, r17
    62ce:	13 e0       	ldi	r17, 0x03	; 3
    62d0:	f1 2e       	mov	r15, r17
    62d2:	00 e0       	ldi	r16, 0x00	; 0
    62d4:	10 e0       	ldi	r17, 0x00	; 0
    62d6:	20 e0       	ldi	r18, 0x00	; 0
    62d8:	30 e0       	ldi	r19, 0x00	; 0
    62da:	a9 01       	movw	r20, r18
    62dc:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    62e0:	70 93 35 01 	sts	0x0135, r23	; 0x800135 <gps_var+0x17>
    62e4:	60 93 34 01 	sts	0x0134, r22	; 0x800134 <gps_var+0x16>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    62e8:	10 92 89 08 	sts	0x0889, r1	; 0x800889 <gps+0x77>
_ZN11TinyGPSHDOP4hdopEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:189
   double feet()         { return _GPS_FEET_PER_METER * value() / 100.0; }
};

struct TinyGPSHDOP : TinyGPSDecimal
{
   double hdop() { return value() / 100.0; }
    62ec:	60 91 8e 08 	lds	r22, 0x088E	; 0x80088e <gps+0x7c>
    62f0:	70 91 8f 08 	lds	r23, 0x088F	; 0x80088f <gps+0x7d>
    62f4:	80 91 90 08 	lds	r24, 0x0890	; 0x800890 <gps+0x7e>
    62f8:	90 91 91 08 	lds	r25, 0x0891	; 0x800891 <gps+0x7f>
    62fc:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    6300:	20 e0       	ldi	r18, 0x00	; 0
    6302:	30 e0       	ldi	r19, 0x00	; 0
    6304:	48 ec       	ldi	r20, 0xC8	; 200
    6306:	52 e4       	ldi	r21, 0x42	; 66
    6308:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:228
        /* Do the HDOP Calculation */
        gps_var.hdop_value = map(gps.hdop.hdop(), 0, 100, 1, 127);
    630c:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    6310:	1f 92       	push	r1
    6312:	1f 92       	push	r1
    6314:	1f 92       	push	r1
    6316:	cf 93       	push	r28
    6318:	14 e6       	ldi	r17, 0x64	; 100
    631a:	e1 2e       	mov	r14, r17
    631c:	f1 2c       	mov	r15, r1
    631e:	00 e0       	ldi	r16, 0x00	; 0
    6320:	10 e0       	ldi	r17, 0x00	; 0
    6322:	20 e0       	ldi	r18, 0x00	; 0
    6324:	30 e0       	ldi	r19, 0x00	; 0
    6326:	a9 01       	movw	r20, r18
    6328:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    632c:	70 93 37 01 	sts	0x0137, r23	; 0x800137 <gps_var+0x19>
    6330:	60 93 36 01 	sts	0x0136, r22	; 0x800136 <gps_var+0x18>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6334:	81 e0       	ldi	r24, 0x01	; 1
    6336:	90 e0       	ldi	r25, 0x00	; 0
    6338:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    633c:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6340:	8f e0       	ldi	r24, 0x0F	; 15
    6342:	90 e0       	ldi	r25, 0x00	; 0
    6344:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    6348:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:232

        /* Reception Signal Update */
        display.setCursor(1, 15);
        display.print(F("UPD INTERVAL: "));
    634c:	63 e2       	ldi	r22, 0x23	; 35
    634e:	73 e0       	ldi	r23, 0x03	; 3
    6350:	8d ee       	ldi	r24, 0xED	; 237
    6352:	98 e0       	ldi	r25, 0x08	; 8
    6354:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZNK15TinyGPSLocation3ageEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:59
{
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
    6358:	8d b7       	in	r24, 0x3d	; 61
    635a:	9e b7       	in	r25, 0x3e	; 62
    635c:	08 96       	adiw	r24, 0x08	; 8
    635e:	0f b6       	in	r0, 0x3f	; 63
    6360:	f8 94       	cli
    6362:	9e bf       	out	0x3e, r25	; 62
    6364:	0f be       	out	0x3f, r0	; 63
    6366:	8d bf       	out	0x3d, r24	; 61
    6368:	80 91 12 08 	lds	r24, 0x0812	; 0x800812 <gps>
    636c:	4f ef       	ldi	r20, 0xFF	; 255
    636e:	5f ef       	ldi	r21, 0xFF	; 255
    6370:	ba 01       	movw	r22, r20
    6372:	88 23       	and	r24, r24
    6374:	81 f0       	breq	.+32     	; 0x6396 <receptionSignalGraphMenu()+0x24a>
    6376:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    637a:	00 91 30 08 	lds	r16, 0x0830	; 0x800830 <gps+0x1e>
    637e:	10 91 31 08 	lds	r17, 0x0831	; 0x800831 <gps+0x1f>
    6382:	20 91 32 08 	lds	r18, 0x0832	; 0x800832 <gps+0x20>
    6386:	30 91 33 08 	lds	r19, 0x0833	; 0x800833 <gps+0x21>
    638a:	ab 01       	movw	r20, r22
    638c:	bc 01       	movw	r22, r24
    638e:	40 1b       	sub	r20, r16
    6390:	51 0b       	sbc	r21, r17
    6392:	62 0b       	sbc	r22, r18
    6394:	73 0b       	sbc	r23, r19
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:233
        display.print(gps.location.age());
    6396:	2a e0       	ldi	r18, 0x0A	; 10
    6398:	30 e0       	ldi	r19, 0x00	; 0
    639a:	8d ee       	ldi	r24, 0xED	; 237
    639c:	98 e0       	ldi	r25, 0x08	; 8
    639e:	0e 94 c8 6c 	call	0xd990	; 0xd990 <Print::print(unsigned long, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:234
        display.print(F("ms"));
    63a2:	60 e2       	ldi	r22, 0x20	; 32
    63a4:	73 e0       	ldi	r23, 0x03	; 3
    63a6:	8d ee       	ldi	r24, 0xED	; 237
    63a8:	98 e0       	ldi	r25, 0x08	; 8
    63aa:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:235
        display.fillRect(0, 25, gps_var.reception_signal_amplitude, 5, WHITE);
    63ae:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <gps_var+0x16>
    63b2:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <gps_var+0x17>
    63b6:	ee 24       	eor	r14, r14
    63b8:	e3 94       	inc	r14
    63ba:	f1 2c       	mov	r15, r1
    63bc:	05 e0       	ldi	r16, 0x05	; 5
    63be:	10 e0       	ldi	r17, 0x00	; 0
    63c0:	49 e1       	ldi	r20, 0x19	; 25
    63c2:	50 e0       	ldi	r21, 0x00	; 0
    63c4:	70 e0       	ldi	r23, 0x00	; 0
    63c6:	60 e0       	ldi	r22, 0x00	; 0
    63c8:	8d ee       	ldi	r24, 0xED	; 237
    63ca:	98 e0       	ldi	r25, 0x08	; 8
    63cc:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    63d0:	c1 e0       	ldi	r28, 0x01	; 1
    63d2:	d0 e0       	ldi	r29, 0x00	; 0
    63d4:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    63d8:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    63dc:	83 e2       	ldi	r24, 0x23	; 35
    63de:	90 e0       	ldi	r25, 0x00	; 0
    63e0:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    63e4:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:238

        display.setCursor(1, 35);
        display.print(F("HDOP VALUE: "));
    63e8:	63 e1       	ldi	r22, 0x13	; 19
    63ea:	73 e0       	ldi	r23, 0x03	; 3
    63ec:	8d ee       	ldi	r24, 0xED	; 237
    63ee:	98 e0       	ldi	r25, 0x08	; 8
    63f0:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    63f4:	10 92 89 08 	sts	0x0889, r1	; 0x800889 <gps+0x77>
_ZN11TinyGPSHDOP4hdopEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:189
   double feet()         { return _GPS_FEET_PER_METER * value() / 100.0; }
};

struct TinyGPSHDOP : TinyGPSDecimal
{
   double hdop() { return value() / 100.0; }
    63f8:	60 91 8e 08 	lds	r22, 0x088E	; 0x80088e <gps+0x7c>
    63fc:	70 91 8f 08 	lds	r23, 0x088F	; 0x80088f <gps+0x7d>
    6400:	80 91 90 08 	lds	r24, 0x0890	; 0x800890 <gps+0x7e>
    6404:	90 91 91 08 	lds	r25, 0x0891	; 0x800891 <gps+0x7f>
    6408:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    640c:	20 e0       	ldi	r18, 0x00	; 0
    640e:	30 e0       	ldi	r19, 0x00	; 0
    6410:	48 ec       	ldi	r20, 0xC8	; 200
    6412:	52 e4       	ldi	r21, 0x42	; 66
    6414:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    6418:	ab 01       	movw	r20, r22
    641a:	bc 01       	movw	r22, r24
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:239
        display.print(gps.hdop.hdop());
    641c:	22 e0       	ldi	r18, 0x02	; 2
    641e:	30 e0       	ldi	r19, 0x00	; 0
    6420:	8d ee       	ldi	r24, 0xED	; 237
    6422:	98 e0       	ldi	r25, 0x08	; 8
    6424:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:240
        display.fillRect(0, 45, gps_var.hdop_value, 5, WHITE);
    6428:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <gps_var+0x18>
    642c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <gps_var+0x19>
    6430:	4d e2       	ldi	r20, 0x2D	; 45
    6432:	50 e0       	ldi	r21, 0x00	; 0
    6434:	70 e0       	ldi	r23, 0x00	; 0
    6436:	60 e0       	ldi	r22, 0x00	; 0
    6438:	8d ee       	ldi	r24, 0xED	; 237
    643a:	98 e0       	ldi	r25, 0x08	; 8
    643c:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6440:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    6444:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6448:	85 e3       	ldi	r24, 0x35	; 53
    644a:	90 e0       	ldi	r25, 0x00	; 0
    644c:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    6450:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z24receptionSignalGraphMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:243

        display.setCursor(1, 53);
        display.print(F("GPS STARTUP: "));
    6454:	65 e0       	ldi	r22, 0x05	; 5
    6456:	73 e0       	ldi	r23, 0x03	; 3
    6458:	8d ee       	ldi	r24, 0xED	; 237
    645a:	98 e0       	ldi	r25, 0x08	; 8
    645c:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:245
        /* Convert ms -> s, Minus 7500ms Delay on Startup */
        if (gps_var.satellite_start_up_time == 0)
    6460:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <gps_var>
    6464:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <gps_var+0x1>
    6468:	a0 91 20 01 	lds	r26, 0x0120	; 0x800120 <gps_var+0x2>
    646c:	b0 91 21 01 	lds	r27, 0x0121	; 0x800121 <gps_var+0x3>
    6470:	89 2b       	or	r24, r25
    6472:	8a 2b       	or	r24, r26
    6474:	8b 2b       	or	r24, r27
    6476:	61 f4       	brne	.+24     	; 0x6490 <receptionSignalGraphMenu()+0x344>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:246
                gps_var.satellite_start_up_time = 7500;
    6478:	8c e4       	ldi	r24, 0x4C	; 76
    647a:	9d e1       	ldi	r25, 0x1D	; 29
    647c:	a0 e0       	ldi	r26, 0x00	; 0
    647e:	b0 e0       	ldi	r27, 0x00	; 0
    6480:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <gps_var>
    6484:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <gps_var+0x1>
    6488:	a0 93 20 01 	sts	0x0120, r26	; 0x800120 <gps_var+0x2>
    648c:	b0 93 21 01 	sts	0x0121, r27	; 0x800121 <gps_var+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:247
        display.print(((gps_var.satellite_start_up_time - 7500) / 1000.0F), 2);
    6490:	60 91 1e 01 	lds	r22, 0x011E	; 0x80011e <gps_var>
    6494:	70 91 1f 01 	lds	r23, 0x011F	; 0x80011f <gps_var+0x1>
    6498:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <gps_var+0x2>
    649c:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <gps_var+0x3>
    64a0:	6c 54       	subi	r22, 0x4C	; 76
    64a2:	7d 41       	sbci	r23, 0x1D	; 29
    64a4:	81 09       	sbc	r24, r1
    64a6:	91 09       	sbc	r25, r1
    64a8:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    64ac:	20 e0       	ldi	r18, 0x00	; 0
    64ae:	30 e0       	ldi	r19, 0x00	; 0
    64b0:	4a e7       	ldi	r20, 0x7A	; 122
    64b2:	54 e4       	ldi	r21, 0x44	; 68
    64b4:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    64b8:	ab 01       	movw	r20, r22
    64ba:	bc 01       	movw	r22, r24
    64bc:	22 e0       	ldi	r18, 0x02	; 2
    64be:	30 e0       	ldi	r19, 0x00	; 0
    64c0:	8d ee       	ldi	r24, 0xED	; 237
    64c2:	98 e0       	ldi	r25, 0x08	; 8
    64c4:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:248
        display.print('s');
    64c8:	63 e7       	ldi	r22, 0x73	; 115
    64ca:	8d ee       	ldi	r24, 0xED	; 237
    64cc:	98 e0       	ldi	r25, 0x08	; 8
    64ce:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:251

        /* Read & Decode GPS Data */
        decodeGPSNMEA(1000);
    64d2:	0e 94 fc 26 	call	0x4df8	; 0x4df8 <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:253

        display.display();
    64d6:	8d ee       	ldi	r24, 0xED	; 237
    64d8:	98 e0       	ldi	r25, 0x08	; 8
    64da:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:254
        display.clearDisplay();
    64de:	8d ee       	ldi	r24, 0xED	; 237
    64e0:	98 e0       	ldi	r25, 0x08	; 8
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:255
}
    64e2:	df 91       	pop	r29
    64e4:	cf 91       	pop	r28
    64e6:	1f 91       	pop	r17
    64e8:	0f 91       	pop	r16
    64ea:	ff 90       	pop	r15
    64ec:	ef 90       	pop	r14
    64ee:	df 90       	pop	r13
    64f0:	cf 90       	pop	r12
    64f2:	bf 90       	pop	r11
    64f4:	af 90       	pop	r10
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:254

        /* Read & Decode GPS Data */
        decodeGPSNMEA(1000);

        display.display();
        display.clearDisplay();
    64f6:	0c 94 8f 4c 	jmp	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
_ZNK15TinyGPSLocation3ageEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:59
{
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
    64fa:	6f ef       	ldi	r22, 0xFF	; 255
    64fc:	7f ef       	ldi	r23, 0xFF	; 255
    64fe:	cb 01       	movw	r24, r22
    6500:	db ce       	rjmp	.-586    	; 0x62b8 <receptionSignalGraphMenu()+0x16c>

00006502 <noReceptionSignal()>:
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:1
void noReceptionSignal(void) {
    6502:	2f 92       	push	r2
    6504:	3f 92       	push	r3
    6506:	4f 92       	push	r4
    6508:	5f 92       	push	r5
    650a:	6f 92       	push	r6
    650c:	7f 92       	push	r7
    650e:	8f 92       	push	r8
    6510:	9f 92       	push	r9
    6512:	af 92       	push	r10
    6514:	bf 92       	push	r11
    6516:	cf 92       	push	r12
    6518:	df 92       	push	r13
    651a:	ef 92       	push	r14
    651c:	ff 92       	push	r15
    651e:	0f 93       	push	r16
    6520:	1f 93       	push	r17
    6522:	cf 93       	push	r28
    6524:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:3
        /* Show tip if reception time took too long */
        gps_var.satellite_acquiring_time = millis();
    6526:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    652a:	60 93 30 01 	sts	0x0130, r22	; 0x800130 <gps_var+0x12>
    652e:	70 93 31 01 	sts	0x0131, r23	; 0x800131 <gps_var+0x13>
    6532:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <gps_var+0x14>
    6536:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <gps_var+0x15>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:4
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0)
    653a:	82 e1       	ldi	r24, 0x12	; 18
    653c:	98 e0       	ldi	r25, 0x08	; 8
    653e:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:5
            && (gps_var.satellite_acquiring_time > 180000)) {
    6542:	20 e0       	ldi	r18, 0x00	; 0
    6544:	30 e0       	ldi	r19, 0x00	; 0
    6546:	a9 01       	movw	r20, r18
    6548:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    654c:	81 11       	cpse	r24, r1
    654e:	26 c1       	rjmp	.+588    	; 0x679c <noReceptionSignal()+0x29a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:4
void noReceptionSignal(void) {
        /* Show tip if reception time took too long */
        gps_var.satellite_acquiring_time = millis();
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0)
    6550:	82 e1       	ldi	r24, 0x12	; 18
    6552:	98 e0       	ldi	r25, 0x08	; 8
    6554:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    6558:	20 e0       	ldi	r18, 0x00	; 0
    655a:	30 e0       	ldi	r19, 0x00	; 0
    655c:	a9 01       	movw	r20, r18
    655e:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    6562:	81 11       	cpse	r24, r1
    6564:	1b c1       	rjmp	.+566    	; 0x679c <noReceptionSignal()+0x29a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:5 (discriminator 3)
            && (gps_var.satellite_acquiring_time > 180000)) {
    6566:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <gps_var+0x12>
    656a:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <gps_var+0x13>
    656e:	a0 91 32 01 	lds	r26, 0x0132	; 0x800132 <gps_var+0x14>
    6572:	b0 91 33 01 	lds	r27, 0x0133	; 0x800133 <gps_var+0x15>
    6576:	81 32       	cpi	r24, 0x21	; 33
    6578:	9f 4b       	sbci	r25, 0xBF	; 191
    657a:	a2 40       	sbci	r26, 0x02	; 2
    657c:	b1 05       	cpc	r27, r1
    657e:	08 f4       	brcc	.+2      	; 0x6582 <noReceptionSignal()+0x80>
    6580:	0d c1       	rjmp	.+538    	; 0x679c <noReceptionSignal()+0x29a>
    6582:	93 e0       	ldi	r25, 0x03	; 3
    6584:	c9 2e       	mov	r12, r25
    6586:	d1 2c       	mov	r13, r1
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6588:	c1 e0       	ldi	r28, 0x01	; 1
    658a:	d0 e0       	ldi	r29, 0x00	; 0
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    658c:	28 e2       	ldi	r18, 0x28	; 40
    658e:	22 2e       	mov	r2, r18
    6590:	31 2c       	mov	r3, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6592:	32 e3       	ldi	r19, 0x32	; 50
    6594:	63 2e       	mov	r6, r19
    6596:	71 2c       	mov	r7, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6598:	4c e3       	ldi	r20, 0x3C	; 60
    659a:	44 2e       	mov	r4, r20
    659c:	51 2c       	mov	r5, r1
    659e:	53 e1       	ldi	r21, 0x13	; 19
    65a0:	a5 2e       	mov	r10, r21
    65a2:	b1 2c       	mov	r11, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    65a4:	69 e1       	ldi	r22, 0x19	; 25
    65a6:	86 2e       	mov	r8, r22
    65a8:	91 2c       	mov	r9, r1
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:7
                for (int step = 0; step < 3; step++) {
                        logic.lastState = true;
    65aa:	81 e0       	ldi	r24, 0x01	; 1
    65ac:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:8
                        display.clearDisplay();
    65b0:	8d ee       	ldi	r24, 0xED	; 237
    65b2:	98 e0       	ldi	r25, 0x08	; 8
    65b4:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    65b8:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    65bc:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    65c0:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    65c4:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    65c8:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    65cc:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    65d0:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    65d4:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:10
                        display.setTextColor(WHITE);
                        display.setCursor(1, 1);    display.print(F("SIGNAL RECEPTION TOOK"));
    65d8:	6f ef       	ldi	r22, 0xFF	; 255
    65da:	73 e0       	ldi	r23, 0x03	; 3
    65dc:	8d ee       	ldi	r24, 0xED	; 237
    65de:	98 e0       	ldi	r25, 0x08	; 8
    65e0:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    65e4:	30 92 fa 08 	sts	0x08FA, r3	; 0x8008fa <display+0xd>
    65e8:	20 92 f9 08 	sts	0x08F9, r2	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    65ec:	8b e0       	ldi	r24, 0x0B	; 11
    65ee:	90 e0       	ldi	r25, 0x00	; 0
    65f0:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    65f4:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:11
                        display.setCursor(40, 11);  display.print(F("TOO LONG"));
    65f8:	66 ef       	ldi	r22, 0xF6	; 246
    65fa:	73 e0       	ldi	r23, 0x03	; 3
    65fc:	8d ee       	ldi	r24, 0xED	; 237
    65fe:	98 e0       	ldi	r25, 0x08	; 8
    6600:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6604:	8d e0       	ldi	r24, 0x0D	; 13
    6606:	90 e0       	ldi	r25, 0x00	; 0
    6608:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    660c:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6610:	87 e2       	ldi	r24, 0x27	; 39
    6612:	90 e0       	ldi	r25, 0x00	; 0
    6614:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    6618:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:12
                        display.setCursor(13, 39);  display.print(F("CHECK THE ANTENNA"));
    661c:	64 ee       	ldi	r22, 0xE4	; 228
    661e:	73 e0       	ldi	r23, 0x03	; 3
    6620:	8d ee       	ldi	r24, 0xED	; 237
    6622:	98 e0       	ldi	r25, 0x08	; 8
    6624:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6628:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    662c:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6630:	70 92 fc 08 	sts	0x08FC, r7	; 0x8008fc <display+0xf>
    6634:	60 92 fb 08 	sts	0x08FB, r6	; 0x8008fb <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:16

                        /* Show Date and Time */
                        display.setCursor(1, 50);
                        display.print(gps.time.hour() + getTimeZone(gps.location.lng()));
    6638:	82 e4       	ldi	r24, 0x42	; 66
    663a:	98 e0       	ldi	r25, 0x08	; 8
    663c:	0e 94 cf 65 	call	0xcb9e	; 0xcb9e <TinyGPSTime::hour()>
    6640:	18 2f       	mov	r17, r24
    6642:	82 e1       	ldi	r24, 0x12	; 18
    6644:	98 e0       	ldi	r25, 0x08	; 8
    6646:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    664a:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    664e:	bc 01       	movw	r22, r24
    6650:	61 0f       	add	r22, r17
    6652:	71 1d       	adc	r23, r1
    6654:	4a e0       	ldi	r20, 0x0A	; 10
    6656:	50 e0       	ldi	r21, 0x00	; 0
    6658:	8d ee       	ldi	r24, 0xED	; 237
    665a:	98 e0       	ldi	r25, 0x08	; 8
    665c:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:17
                        display.print(':');
    6660:	6a e3       	ldi	r22, 0x3A	; 58
    6662:	8d ee       	ldi	r24, 0xED	; 237
    6664:	98 e0       	ldi	r25, 0x08	; 8
    6666:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:18
                        if (gps.time.minute() < 10) display.print(F("0"));
    666a:	82 e4       	ldi	r24, 0x42	; 66
    666c:	98 e0       	ldi	r25, 0x08	; 8
    666e:	0e 94 dd 65 	call	0xcbba	; 0xcbba <TinyGPSTime::minute()>
    6672:	8a 30       	cpi	r24, 0x0A	; 10
    6674:	30 f4       	brcc	.+12     	; 0x6682 <noReceptionSignal()+0x180>
    6676:	62 ee       	ldi	r22, 0xE2	; 226
    6678:	73 e0       	ldi	r23, 0x03	; 3
    667a:	8d ee       	ldi	r24, 0xED	; 237
    667c:	98 e0       	ldi	r25, 0x08	; 8
    667e:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:19
                        display.print(gps.time.minute());
    6682:	82 e4       	ldi	r24, 0x42	; 66
    6684:	98 e0       	ldi	r25, 0x08	; 8
    6686:	0e 94 dd 65 	call	0xcbba	; 0xcbba <TinyGPSTime::minute()>
    668a:	4a e0       	ldi	r20, 0x0A	; 10
    668c:	50 e0       	ldi	r21, 0x00	; 0
    668e:	68 2f       	mov	r22, r24
    6690:	8d ee       	ldi	r24, 0xED	; 237
    6692:	98 e0       	ldi	r25, 0x08	; 8
    6694:	0e 94 d5 6c 	call	0xd9aa	; 0xd9aa <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:20
                        display.print(F(" UTC"));
    6698:	6d ed       	ldi	r22, 0xDD	; 221
    669a:	73 e0       	ldi	r23, 0x03	; 3
    669c:	8d ee       	ldi	r24, 0xED	; 237
    669e:	98 e0       	ldi	r25, 0x08	; 8
    66a0:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    66a4:	50 92 fa 08 	sts	0x08FA, r5	; 0x8008fa <display+0xd>
    66a8:	40 92 f9 08 	sts	0x08F9, r4	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    66ac:	70 92 fc 08 	sts	0x08FC, r7	; 0x8008fc <display+0xf>
    66b0:	60 92 fb 08 	sts	0x08FB, r6	; 0x8008fb <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:22
                        display.setCursor(60, 50);
                        if (gps.date.day() < 10) display.print('0');
    66b4:	84 e3       	ldi	r24, 0x34	; 52
    66b6:	98 e0       	ldi	r25, 0x08	; 8
    66b8:	0e 94 c1 65 	call	0xcb82	; 0xcb82 <TinyGPSDate::day()>
    66bc:	8a 30       	cpi	r24, 0x0A	; 10
    66be:	28 f4       	brcc	.+10     	; 0x66ca <noReceptionSignal()+0x1c8>
    66c0:	60 e3       	ldi	r22, 0x30	; 48
    66c2:	8d ee       	ldi	r24, 0xED	; 237
    66c4:	98 e0       	ldi	r25, 0x08	; 8
    66c6:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:23
                        display.print(gps.date.day());
    66ca:	84 e3       	ldi	r24, 0x34	; 52
    66cc:	98 e0       	ldi	r25, 0x08	; 8
    66ce:	0e 94 c1 65 	call	0xcb82	; 0xcb82 <TinyGPSDate::day()>
    66d2:	4a e0       	ldi	r20, 0x0A	; 10
    66d4:	50 e0       	ldi	r21, 0x00	; 0
    66d6:	68 2f       	mov	r22, r24
    66d8:	8d ee       	ldi	r24, 0xED	; 237
    66da:	98 e0       	ldi	r25, 0x08	; 8
    66dc:	0e 94 d5 6c 	call	0xd9aa	; 0xd9aa <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:24
                        display.print('/');
    66e0:	6f e2       	ldi	r22, 0x2F	; 47
    66e2:	8d ee       	ldi	r24, 0xED	; 237
    66e4:	98 e0       	ldi	r25, 0x08	; 8
    66e6:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:25
                        display.print(menu.month[gps.date.month()]);
    66ea:	84 e3       	ldi	r24, 0x34	; 52
    66ec:	98 e0       	ldi	r25, 0x08	; 8
    66ee:	0e 94 a2 65 	call	0xcb44	; 0xcb44 <TinyGPSDate::month()>
    66f2:	94 e0       	ldi	r25, 0x04	; 4
    66f4:	89 9f       	mul	r24, r25
    66f6:	b0 01       	movw	r22, r0
    66f8:	11 24       	eor	r1, r1
    66fa:	6d 5b       	subi	r22, 0xBD	; 189
    66fc:	76 4f       	sbci	r23, 0xF6	; 246
    66fe:	8d ee       	ldi	r24, 0xED	; 237
    6700:	98 e0       	ldi	r25, 0x08	; 8
    6702:	0e 94 1e 6c 	call	0xd83c	; 0xd83c <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:26
                        display.print('/');
    6706:	6f e2       	ldi	r22, 0x2F	; 47
    6708:	8d ee       	ldi	r24, 0xED	; 237
    670a:	98 e0       	ldi	r25, 0x08	; 8
    670c:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:27
                        display.print(gps.date.year());
    6710:	84 e3       	ldi	r24, 0x34	; 52
    6712:	98 e0       	ldi	r25, 0x08	; 8
    6714:	0e 94 92 65 	call	0xcb24	; 0xcb24 <TinyGPSDate::year()>
    6718:	4a e0       	ldi	r20, 0x0A	; 10
    671a:	50 e0       	ldi	r21, 0x00	; 0
    671c:	bc 01       	movw	r22, r24
    671e:	8d ee       	ldi	r24, 0xED	; 237
    6720:	98 e0       	ldi	r25, 0x08	; 8
    6722:	0e 94 dc 6c 	call	0xd9b8	; 0xd9b8 <Print::print(unsigned int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:28
                        gps_var.show_question_mark = !gps_var.show_question_mark;
    6726:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    672a:	21 e0       	ldi	r18, 0x01	; 1
    672c:	82 27       	eor	r24, r18
    672e:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:31

                        /* Text Flash Info */
                        if (gps_var.show_question_mark) {
    6732:	88 23       	and	r24, r24
    6734:	09 f4       	brne	.+2      	; 0x6738 <noReceptionSignal()+0x236>
    6736:	45 c0       	rjmp	.+138    	; 0x67c2 <noReceptionSignal()+0x2c0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:32
                                display.fillRect(0, 24, 128, 9, WHITE);
    6738:	ee 24       	eor	r14, r14
    673a:	e3 94       	inc	r14
    673c:	f1 2c       	mov	r15, r1
    673e:	09 e0       	ldi	r16, 0x09	; 9
    6740:	10 e0       	ldi	r17, 0x00	; 0
    6742:	20 e8       	ldi	r18, 0x80	; 128
    6744:	30 e0       	ldi	r19, 0x00	; 0
    6746:	48 e1       	ldi	r20, 0x18	; 24
    6748:	50 e0       	ldi	r21, 0x00	; 0
    674a:	70 e0       	ldi	r23, 0x00	; 0
    674c:	60 e0       	ldi	r22, 0x00	; 0
    674e:	8d ee       	ldi	r24, 0xED	; 237
    6750:	98 e0       	ldi	r25, 0x08	; 8
    6752:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6756:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    675a:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    675e:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    6762:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6766:	b0 92 fa 08 	sts	0x08FA, r11	; 0x8008fa <display+0xd>
    676a:	a0 92 f9 08 	sts	0x08F9, r10	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    676e:	90 92 fc 08 	sts	0x08FC, r9	; 0x8008fc <display+0xf>
    6772:	80 92 fb 08 	sts	0x08FB, r8	; 0x8008fb <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:34
                                display.setTextColor(BLACK);
                                display.setCursor(19, 25);  display.print(F("ARE YOU INDOOR?"));
    6776:	6d ec       	ldi	r22, 0xCD	; 205
    6778:	73 e0       	ldi	r23, 0x03	; 3
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:38
                        } else {
                                display.fillRect(0, 24, 128, 9, BLACK);
                                display.setTextColor(WHITE);
                                display.setCursor(19, 25);  display.print(F("ARE YOU INDOOR?"));
    677a:	8d ee       	ldi	r24, 0xED	; 237
    677c:	98 e0       	ldi	r25, 0x08	; 8
    677e:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:40
                        }
                        display.display();
    6782:	8d ee       	ldi	r24, 0xED	; 237
    6784:	98 e0       	ldi	r25, 0x08	; 8
    6786:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:43

                        /* Switch to Other Menu */
                        ButtonIO();
    678a:	0e 94 9b 1e 	call	0x3d36	; 0x3d36 <ButtonIO()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:44
                        decodeGPSNMEA(1000);
    678e:	0e 94 fc 26 	call	0x4df8	; 0x4df8 <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
    6792:	81 e0       	ldi	r24, 0x01	; 1
    6794:	c8 1a       	sub	r12, r24
    6796:	d1 08       	sbc	r13, r1
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:6
void noReceptionSignal(void) {
        /* Show tip if reception time took too long */
        gps_var.satellite_acquiring_time = millis();
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0)
            && (gps_var.satellite_acquiring_time > 180000)) {
                for (int step = 0; step < 3; step++) {
    6798:	09 f0       	breq	.+2      	; 0x679c <noReceptionSignal()+0x29a>
    679a:	07 cf       	rjmp	.-498    	; 0x65aa <noReceptionSignal()+0xa8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:47
                        /* Switch to Other Menu */
                        ButtonIO();
                        decodeGPSNMEA(1000);
                }
        }
}
    679c:	df 91       	pop	r29
    679e:	cf 91       	pop	r28
    67a0:	1f 91       	pop	r17
    67a2:	0f 91       	pop	r16
    67a4:	ff 90       	pop	r15
    67a6:	ef 90       	pop	r14
    67a8:	df 90       	pop	r13
    67aa:	cf 90       	pop	r12
    67ac:	bf 90       	pop	r11
    67ae:	af 90       	pop	r10
    67b0:	9f 90       	pop	r9
    67b2:	8f 90       	pop	r8
    67b4:	7f 90       	pop	r7
    67b6:	6f 90       	pop	r6
    67b8:	5f 90       	pop	r5
    67ba:	4f 90       	pop	r4
    67bc:	3f 90       	pop	r3
    67be:	2f 90       	pop	r2
    67c0:	08 95       	ret
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:36
                        if (gps_var.show_question_mark) {
                                display.fillRect(0, 24, 128, 9, WHITE);
                                display.setTextColor(BLACK);
                                display.setCursor(19, 25);  display.print(F("ARE YOU INDOOR?"));
                        } else {
                                display.fillRect(0, 24, 128, 9, BLACK);
    67c2:	f1 2c       	mov	r15, r1
    67c4:	e1 2c       	mov	r14, r1
    67c6:	09 e0       	ldi	r16, 0x09	; 9
    67c8:	10 e0       	ldi	r17, 0x00	; 0
    67ca:	20 e8       	ldi	r18, 0x80	; 128
    67cc:	30 e0       	ldi	r19, 0x00	; 0
    67ce:	48 e1       	ldi	r20, 0x18	; 24
    67d0:	50 e0       	ldi	r21, 0x00	; 0
    67d2:	70 e0       	ldi	r23, 0x00	; 0
    67d4:	60 e0       	ldi	r22, 0x00	; 0
    67d6:	8d ee       	ldi	r24, 0xED	; 237
    67d8:	98 e0       	ldi	r25, 0x08	; 8
    67da:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    67de:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    67e2:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    67e6:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    67ea:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    67ee:	b0 92 fa 08 	sts	0x08FA, r11	; 0x8008fa <display+0xd>
    67f2:	a0 92 f9 08 	sts	0x08F9, r10	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    67f6:	90 92 fc 08 	sts	0x08FC, r9	; 0x8008fc <display+0xf>
    67fa:	80 92 fb 08 	sts	0x08FB, r8	; 0x8008fb <display+0xe>
_Z17noReceptionSignalv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:38
                                display.setTextColor(WHITE);
                                display.setCursor(19, 25);  display.print(F("ARE YOU INDOOR?"));
    67fe:	6d eb       	ldi	r22, 0xBD	; 189
    6800:	73 e0       	ldi	r23, 0x03	; 3
    6802:	bb cf       	rjmp	.-138    	; 0x677a <noReceptionSignal()+0x278>

00006804 <GPSMenu()>:
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:49
                        decodeGPSNMEA(1000);
                }
        }
}

void GPSMenu(void) {
    6804:	7f 92       	push	r7
    6806:	8f 92       	push	r8
    6808:	9f 92       	push	r9
    680a:	af 92       	push	r10
    680c:	bf 92       	push	r11
    680e:	cf 92       	push	r12
    6810:	df 92       	push	r13
    6812:	ef 92       	push	r14
    6814:	ff 92       	push	r15
    6816:	0f 93       	push	r16
    6818:	1f 93       	push	r17
    681a:	cf 93       	push	r28
    681c:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:51
        /* Read and Decode GPS Data */
        decodeGPSNMEA(1000);
    681e:	0e 94 fc 26 	call	0x4df8	; 0x4df8 <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:54

        /* Check if time is not yet getting from the satellites */
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0) &&
    6822:	82 e1       	ldi	r24, 0x12	; 18
    6824:	98 e0       	ldi	r25, 0x08	; 8
    6826:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:55
            (gps.time.hour() == 0) && (gps.time.minute() == 0)) {
    682a:	20 e0       	ldi	r18, 0x00	; 0
    682c:	30 e0       	ldi	r19, 0x00	; 0
    682e:	a9 01       	movw	r20, r18
    6830:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    6834:	81 11       	cpse	r24, r1
    6836:	93 c0       	rjmp	.+294    	; 0x695e <GPSMenu()+0x15a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:54
void GPSMenu(void) {
        /* Read and Decode GPS Data */
        decodeGPSNMEA(1000);

        /* Check if time is not yet getting from the satellites */
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0) &&
    6838:	82 e1       	ldi	r24, 0x12	; 18
    683a:	98 e0       	ldi	r25, 0x08	; 8
    683c:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    6840:	20 e0       	ldi	r18, 0x00	; 0
    6842:	30 e0       	ldi	r19, 0x00	; 0
    6844:	a9 01       	movw	r20, r18
    6846:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    684a:	81 11       	cpse	r24, r1
    684c:	88 c0       	rjmp	.+272    	; 0x695e <GPSMenu()+0x15a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:55 (discriminator 1)
            (gps.time.hour() == 0) && (gps.time.minute() == 0)) {
    684e:	82 e4       	ldi	r24, 0x42	; 66
    6850:	98 e0       	ldi	r25, 0x08	; 8
    6852:	0e 94 cf 65 	call	0xcb9e	; 0xcb9e <TinyGPSTime::hour()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:54 (discriminator 1)
void GPSMenu(void) {
        /* Read and Decode GPS Data */
        decodeGPSNMEA(1000);

        /* Check if time is not yet getting from the satellites */
        if ((gps.location.lat() == 0) && (gps.location.lng() == 0) &&
    6856:	81 11       	cpse	r24, r1
    6858:	82 c0       	rjmp	.+260    	; 0x695e <GPSMenu()+0x15a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:55 (discriminator 3)
            (gps.time.hour() == 0) && (gps.time.minute() == 0)) {
    685a:	82 e4       	ldi	r24, 0x42	; 66
    685c:	98 e0       	ldi	r25, 0x08	; 8
    685e:	0e 94 dd 65 	call	0xcbba	; 0xcbba <TinyGPSTime::minute()>
    6862:	81 11       	cpse	r24, r1
    6864:	7c c0       	rjmp	.+248    	; 0x695e <GPSMenu()+0x15a>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:56
                gps_var.satellite_start_up_time = millis();
    6866:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    686a:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <gps_var>
    686e:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <gps_var+0x1>
    6872:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <gps_var+0x2>
    6876:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <gps_var+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:58

                display.clearDisplay();
    687a:	8d ee       	ldi	r24, 0xED	; 237
    687c:	98 e0       	ldi	r25, 0x08	; 8
    687e:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:59
                display.setTextSize(1);
    6882:	61 e0       	ldi	r22, 0x01	; 1
    6884:	8d ee       	ldi	r24, 0xED	; 237
    6886:	98 e0       	ldi	r25, 0x08	; 8
    6888:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    688c:	81 e0       	ldi	r24, 0x01	; 1
    688e:	90 e0       	ldi	r25, 0x00	; 0
    6890:	90 93 00 09 	sts	0x0900, r25	; 0x800900 <display+0x13>
    6894:	80 93 ff 08 	sts	0x08FF, r24	; 0x8008ff <display+0x12>
    6898:	90 93 fe 08 	sts	0x08FE, r25	; 0x8008fe <display+0x11>
    689c:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <display+0x10>
    68a0:	c5 e0       	ldi	r28, 0x05	; 5
    68a2:	d0 e0       	ldi	r29, 0x00	; 0
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:63
                display.setTextColor(WHITE);

                for (int step = 0; step < 5; step++) {
                        gps_var.show_question_mark = !gps_var.show_question_mark;
    68a4:	77 24       	eor	r7, r7
    68a6:	73 94       	inc	r7
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    68a8:	04 e0       	ldi	r16, 0x04	; 4
    68aa:	80 2e       	mov	r8, r16
    68ac:	91 2c       	mov	r9, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    68ae:	aa 24       	eor	r10, r10
    68b0:	a3 94       	inc	r10
    68b2:	b1 2c       	mov	r11, r1
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:63
    68b4:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    68b8:	87 25       	eor	r24, r7
    68ba:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    68be:	90 92 fa 08 	sts	0x08FA, r9	; 0x8008fa <display+0xd>
    68c2:	80 92 f9 08 	sts	0x08F9, r8	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    68c6:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    68ca:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:66

                        display.setCursor(4, 1);
                        if (gps_var.show_question_mark) {
    68ce:	88 23       	and	r24, r24
    68d0:	09 f4       	brne	.+2      	; 0x68d4 <GPSMenu()+0xd0>
    68d2:	d7 c2       	rjmp	.+1454   	; 0x6e82 <GPSMenu()+0x67e>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:67
                                display.fillRect(0, 0, 128, 9, WHITE);
    68d4:	ee 24       	eor	r14, r14
    68d6:	e3 94       	inc	r14
    68d8:	f1 2c       	mov	r15, r1
    68da:	09 e0       	ldi	r16, 0x09	; 9
    68dc:	10 e0       	ldi	r17, 0x00	; 0
    68de:	20 e8       	ldi	r18, 0x80	; 128
    68e0:	30 e0       	ldi	r19, 0x00	; 0
    68e2:	50 e0       	ldi	r21, 0x00	; 0
    68e4:	40 e0       	ldi	r20, 0x00	; 0
    68e6:	70 e0       	ldi	r23, 0x00	; 0
    68e8:	60 e0       	ldi	r22, 0x00	; 0
    68ea:	8d ee       	ldi	r24, 0xED	; 237
    68ec:	98 e0       	ldi	r25, 0x08	; 8
    68ee:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    68f2:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    68f6:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    68fa:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    68fe:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:69
                                display.setTextColor(BLACK);
                                display.print(F("ACQUIRING SATELLITES"));
    6902:	68 ea       	ldi	r22, 0xA8	; 168
    6904:	73 e0       	ldi	r23, 0x03	; 3
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:73
                        } else {
                                display.fillRect(0, 0, 128, 9, BLACK);
                                display.setTextColor(WHITE);
                                display.print(F("ACQUIRING SATELLITES"));
    6906:	8d ee       	ldi	r24, 0xED	; 237
    6908:	98 e0       	ldi	r25, 0x08	; 8
    690a:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:75
                        }
                        display.drawBitmap(37, 10, connecting_icon, 54, 54, WHITE);
    690e:	cc 24       	eor	r12, r12
    6910:	c3 94       	inc	r12
    6912:	d1 2c       	mov	r13, r1
    6914:	b6 e3       	ldi	r27, 0x36	; 54
    6916:	eb 2e       	mov	r14, r27
    6918:	f1 2c       	mov	r15, r1
    691a:	06 e3       	ldi	r16, 0x36	; 54
    691c:	10 e0       	ldi	r17, 0x00	; 0
    691e:	20 ec       	ldi	r18, 0xC0	; 192
    6920:	37 e0       	ldi	r19, 0x07	; 7
    6922:	4a e0       	ldi	r20, 0x0A	; 10
    6924:	50 e0       	ldi	r21, 0x00	; 0
    6926:	65 e2       	ldi	r22, 0x25	; 37
    6928:	70 e0       	ldi	r23, 0x00	; 0
    692a:	8d ee       	ldi	r24, 0xED	; 237
    692c:	98 e0       	ldi	r25, 0x08	; 8
    692e:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
    6932:	21 97       	sbiw	r28, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:62

                display.clearDisplay();
                display.setTextSize(1);
                display.setTextColor(WHITE);

                for (int step = 0; step < 5; step++) {
    6934:	09 f0       	breq	.+2      	; 0x6938 <GPSMenu()+0x134>
    6936:	be cf       	rjmp	.-132    	; 0x68b4 <GPSMenu()+0xb0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:79
                        }
                        display.drawBitmap(37, 10, connecting_icon, 54, 54, WHITE);
                }

                /* If reception took too long show tips */
                noReceptionSignal();
    6938:	0e 94 81 32 	call	0x6502	; 0x6502 <noReceptionSignal()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:80
                display.display();
    693c:	8d ee       	ldi	r24, 0xED	; 237
    693e:	98 e0       	ldi	r25, 0x08	; 8
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:194

                /* Show Update Interval Menu */
                while(!digitalRead(B_Pin))
                        receptionSignalGraphMenu();
        }
}
    6940:	df 91       	pop	r29
    6942:	cf 91       	pop	r28
    6944:	1f 91       	pop	r17
    6946:	0f 91       	pop	r16
    6948:	ff 90       	pop	r15
    694a:	ef 90       	pop	r14
    694c:	df 90       	pop	r13
    694e:	cf 90       	pop	r12
    6950:	bf 90       	pop	r11
    6952:	af 90       	pop	r10
    6954:	9f 90       	pop	r9
    6956:	8f 90       	pop	r8
    6958:	7f 90       	pop	r7
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:80
                        display.drawBitmap(37, 10, connecting_icon, 54, 54, WHITE);
                }

                /* If reception took too long show tips */
                noReceptionSignal();
                display.display();
    695a:	0c 94 24 50 	jmp	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:85
        } else {
                /* Menu After Satellite is Connected */
                /* Start Saving Startup Location */
                if ((!gps_var.log_start_point) && (gps.location.lat() > 0)
                    && (gps.location.lng() > 0)) {
    695e:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <gps_var+0x4>
    6962:	81 11       	cpse	r24, r1
    6964:	33 c0       	rjmp	.+102    	; 0x69cc <GPSMenu()+0x1c8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:84
                noReceptionSignal();
                display.display();
        } else {
                /* Menu After Satellite is Connected */
                /* Start Saving Startup Location */
                if ((!gps_var.log_start_point) && (gps.location.lat() > 0)
    6966:	82 e1       	ldi	r24, 0x12	; 18
    6968:	98 e0       	ldi	r25, 0x08	; 8
    696a:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
    696e:	20 e0       	ldi	r18, 0x00	; 0
    6970:	30 e0       	ldi	r19, 0x00	; 0
    6972:	a9 01       	movw	r20, r18
    6974:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    6978:	18 16       	cp	r1, r24
    697a:	44 f5       	brge	.+80     	; 0x69cc <GPSMenu()+0x1c8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:85 (discriminator 3)
                    && (gps.location.lng() > 0)) {
    697c:	82 e1       	ldi	r24, 0x12	; 18
    697e:	98 e0       	ldi	r25, 0x08	; 8
    6980:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    6984:	20 e0       	ldi	r18, 0x00	; 0
    6986:	30 e0       	ldi	r19, 0x00	; 0
    6988:	a9 01       	movw	r20, r18
    698a:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    698e:	18 16       	cp	r1, r24
    6990:	ec f4       	brge	.+58     	; 0x69cc <GPSMenu()+0x1c8>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:88

                        /* Get start point Coordinate */
                        gps_var.start_latitude = gps.location.lat();
    6992:	82 e1       	ldi	r24, 0x12	; 18
    6994:	98 e0       	ldi	r25, 0x08	; 8
    6996:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
    699a:	60 93 24 01 	sts	0x0124, r22	; 0x800124 <gps_var+0x6>
    699e:	70 93 25 01 	sts	0x0125, r23	; 0x800125 <gps_var+0x7>
    69a2:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <gps_var+0x8>
    69a6:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <gps_var+0x9>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:89
                        gps_var.start_longitude = gps.location.lng();
    69aa:	82 e1       	ldi	r24, 0x12	; 18
    69ac:	98 e0       	ldi	r25, 0x08	; 8
    69ae:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    69b2:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <gps_var+0xa>
    69b6:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <gps_var+0xb>
    69ba:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <gps_var+0xc>
    69be:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <gps_var+0xd>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:96
                        /* Save Coordinate for later use */
                        static_start_latitude = gps_var.start_latitude;
                        static_start_logitude = gps_var.start_longitude;

                        /* Save Location to EEPROM */
                        saveLocationToEEPROM();
    69c2:	0e 94 5b 15 	call	0x2ab6	; 0x2ab6 <saveLocationToEEPROM()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:99

                        /* Set Logging Startup Location to Stop */
                        gps_var.log_start_point = true;
    69c6:	81 e0       	ldi	r24, 0x01	; 1
    69c8:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <gps_var+0x4>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:103
                }
                /* End Saving Startup Location */

                display.clearDisplay();
    69cc:	8d ee       	ldi	r24, 0xED	; 237
    69ce:	98 e0       	ldi	r25, 0x08	; 8
    69d0:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:105

                display.fillRect(0, 0, 128, 9, WHITE);
    69d4:	ee 24       	eor	r14, r14
    69d6:	e3 94       	inc	r14
    69d8:	f1 2c       	mov	r15, r1
    69da:	09 e0       	ldi	r16, 0x09	; 9
    69dc:	10 e0       	ldi	r17, 0x00	; 0
    69de:	20 e8       	ldi	r18, 0x80	; 128
    69e0:	30 e0       	ldi	r19, 0x00	; 0
    69e2:	50 e0       	ldi	r21, 0x00	; 0
    69e4:	40 e0       	ldi	r20, 0x00	; 0
    69e6:	70 e0       	ldi	r23, 0x00	; 0
    69e8:	60 e0       	ldi	r22, 0x00	; 0
    69ea:	8d ee       	ldi	r24, 0xED	; 237
    69ec:	98 e0       	ldi	r25, 0x08	; 8
    69ee:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:106
                display.setTextSize(1);
    69f2:	61 e0       	ldi	r22, 0x01	; 1
    69f4:	8d ee       	ldi	r24, 0xED	; 237
    69f6:	98 e0       	ldi	r25, 0x08	; 8
    69f8:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    69fc:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    6a00:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    6a04:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    6a08:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6a0c:	81 e0       	ldi	r24, 0x01	; 1
    6a0e:	90 e0       	ldi	r25, 0x00	; 0
    6a10:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    6a14:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6a18:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    6a1c:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:110
                display.setTextColor(BLACK);

                display.setCursor(1, 1);
                display.print(gps.time.hour() + 7);
    6a20:	82 e4       	ldi	r24, 0x42	; 66
    6a22:	98 e0       	ldi	r25, 0x08	; 8
    6a24:	0e 94 cf 65 	call	0xcb9e	; 0xcb9e <TinyGPSTime::hour()>
    6a28:	68 2f       	mov	r22, r24
    6a2a:	70 e0       	ldi	r23, 0x00	; 0
    6a2c:	69 5f       	subi	r22, 0xF9	; 249
    6a2e:	7f 4f       	sbci	r23, 0xFF	; 255
    6a30:	4a e0       	ldi	r20, 0x0A	; 10
    6a32:	50 e0       	ldi	r21, 0x00	; 0
    6a34:	8d ee       	ldi	r24, 0xED	; 237
    6a36:	98 e0       	ldi	r25, 0x08	; 8
    6a38:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:111
                display.print(':');
    6a3c:	6a e3       	ldi	r22, 0x3A	; 58
    6a3e:	8d ee       	ldi	r24, 0xED	; 237
    6a40:	98 e0       	ldi	r25, 0x08	; 8
    6a42:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:112
                if (gps.time.minute() < 10) display.print('0');
    6a46:	82 e4       	ldi	r24, 0x42	; 66
    6a48:	98 e0       	ldi	r25, 0x08	; 8
    6a4a:	0e 94 dd 65 	call	0xcbba	; 0xcbba <TinyGPSTime::minute()>
    6a4e:	8a 30       	cpi	r24, 0x0A	; 10
    6a50:	28 f4       	brcc	.+10     	; 0x6a5c <GPSMenu()+0x258>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:112 (discriminator 1)
    6a52:	60 e3       	ldi	r22, 0x30	; 48
    6a54:	8d ee       	ldi	r24, 0xED	; 237
    6a56:	98 e0       	ldi	r25, 0x08	; 8
    6a58:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:113
                display.print(gps.time.minute());
    6a5c:	82 e4       	ldi	r24, 0x42	; 66
    6a5e:	98 e0       	ldi	r25, 0x08	; 8
    6a60:	0e 94 dd 65 	call	0xcbba	; 0xcbba <TinyGPSTime::minute()>
    6a64:	4a e0       	ldi	r20, 0x0A	; 10
    6a66:	50 e0       	ldi	r21, 0x00	; 0
    6a68:	68 2f       	mov	r22, r24
    6a6a:	8d ee       	ldi	r24, 0xED	; 237
    6a6c:	98 e0       	ldi	r25, 0x08	; 8
    6a6e:	0e 94 d5 6c 	call	0xd9aa	; 0xd9aa <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:115

                display.print(':');
    6a72:	6a e3       	ldi	r22, 0x3A	; 58
    6a74:	8d ee       	ldi	r24, 0xED	; 237
    6a76:	98 e0       	ldi	r25, 0x08	; 8
    6a78:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:116
                if (gps.time.second() < 10) display.print('0');
    6a7c:	82 e4       	ldi	r24, 0x42	; 66
    6a7e:	98 e0       	ldi	r25, 0x08	; 8
    6a80:	0e 94 f3 65 	call	0xcbe6	; 0xcbe6 <TinyGPSTime::second()>
    6a84:	8a 30       	cpi	r24, 0x0A	; 10
    6a86:	28 f4       	brcc	.+10     	; 0x6a92 <GPSMenu()+0x28e>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:116 (discriminator 1)
    6a88:	60 e3       	ldi	r22, 0x30	; 48
    6a8a:	8d ee       	ldi	r24, 0xED	; 237
    6a8c:	98 e0       	ldi	r25, 0x08	; 8
    6a8e:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:117
                display.print(gps.time.second());
    6a92:	82 e4       	ldi	r24, 0x42	; 66
    6a94:	98 e0       	ldi	r25, 0x08	; 8
    6a96:	0e 94 f3 65 	call	0xcbe6	; 0xcbe6 <TinyGPSTime::second()>
    6a9a:	4a e0       	ldi	r20, 0x0A	; 10
    6a9c:	50 e0       	ldi	r21, 0x00	; 0
    6a9e:	68 2f       	mov	r22, r24
    6aa0:	8d ee       	ldi	r24, 0xED	; 237
    6aa2:	98 e0       	ldi	r25, 0x08	; 8
    6aa4:	0e 94 d5 6c 	call	0xd9aa	; 0xd9aa <Print::print(unsigned char, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6aa8:	8e e3       	ldi	r24, 0x3E	; 62
    6aaa:	90 e0       	ldi	r25, 0x00	; 0
    6aac:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    6ab0:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6ab4:	81 e0       	ldi	r24, 0x01	; 1
    6ab6:	90 e0       	ldi	r25, 0x00	; 0
    6ab8:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    6abc:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:120

                display.setCursor(62, 1);
                if (gps.date.day() < 10) display.print('0');
    6ac0:	84 e3       	ldi	r24, 0x34	; 52
    6ac2:	98 e0       	ldi	r25, 0x08	; 8
    6ac4:	0e 94 c1 65 	call	0xcb82	; 0xcb82 <TinyGPSDate::day()>
    6ac8:	8a 30       	cpi	r24, 0x0A	; 10
    6aca:	28 f4       	brcc	.+10     	; 0x6ad6 <GPSMenu()+0x2d2>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:120 (discriminator 1)
    6acc:	60 e3       	ldi	r22, 0x30	; 48
    6ace:	8d ee       	ldi	r24, 0xED	; 237
    6ad0:	98 e0       	ldi	r25, 0x08	; 8
    6ad2:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:121
                display.print(gps.date.day());
    6ad6:	84 e3       	ldi	r24, 0x34	; 52
    6ad8:	98 e0       	ldi	r25, 0x08	; 8
    6ada:	0e 94 c1 65 	call	0xcb82	; 0xcb82 <TinyGPSDate::day()>
    6ade:	4a e0       	ldi	r20, 0x0A	; 10
    6ae0:	50 e0       	ldi	r21, 0x00	; 0
    6ae2:	68 2f       	mov	r22, r24
    6ae4:	8d ee       	ldi	r24, 0xED	; 237
    6ae6:	98 e0       	ldi	r25, 0x08	; 8
    6ae8:	0e 94 d5 6c 	call	0xd9aa	; 0xd9aa <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:123

                display.print('/');
    6aec:	6f e2       	ldi	r22, 0x2F	; 47
    6aee:	8d ee       	ldi	r24, 0xED	; 237
    6af0:	98 e0       	ldi	r25, 0x08	; 8
    6af2:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:124
                display.print(menu.month[gps.date.month()]);
    6af6:	84 e3       	ldi	r24, 0x34	; 52
    6af8:	98 e0       	ldi	r25, 0x08	; 8
    6afa:	0e 94 a2 65 	call	0xcb44	; 0xcb44 <TinyGPSDate::month()>
    6afe:	94 e0       	ldi	r25, 0x04	; 4
    6b00:	89 9f       	mul	r24, r25
    6b02:	b0 01       	movw	r22, r0
    6b04:	11 24       	eor	r1, r1
    6b06:	6d 5b       	subi	r22, 0xBD	; 189
    6b08:	76 4f       	sbci	r23, 0xF6	; 246
    6b0a:	8d ee       	ldi	r24, 0xED	; 237
    6b0c:	98 e0       	ldi	r25, 0x08	; 8
    6b0e:	0e 94 1e 6c 	call	0xd83c	; 0xd83c <Print::print(char const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:126

                display.print('/');
    6b12:	6f e2       	ldi	r22, 0x2F	; 47
    6b14:	8d ee       	ldi	r24, 0xED	; 237
    6b16:	98 e0       	ldi	r25, 0x08	; 8
    6b18:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:127
                display.print(gps.date.year());
    6b1c:	84 e3       	ldi	r24, 0x34	; 52
    6b1e:	98 e0       	ldi	r25, 0x08	; 8
    6b20:	0e 94 92 65 	call	0xcb24	; 0xcb24 <TinyGPSDate::year()>
    6b24:	4a e0       	ldi	r20, 0x0A	; 10
    6b26:	50 e0       	ldi	r21, 0x00	; 0
    6b28:	bc 01       	movw	r22, r24
    6b2a:	8d ee       	ldi	r24, 0xED	; 237
    6b2c:	98 e0       	ldi	r25, 0x08	; 8
    6b2e:	0e 94 dc 6c 	call	0xd9b8	; 0xd9b8 <Print::print(unsigned int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:130

                /* Draw Split Verticle Line */
                display.drawLine(59, 10, 59, 64, WHITE);
    6b32:	ee 24       	eor	r14, r14
    6b34:	e3 94       	inc	r14
    6b36:	f1 2c       	mov	r15, r1
    6b38:	00 e4       	ldi	r16, 0x40	; 64
    6b3a:	10 e0       	ldi	r17, 0x00	; 0
    6b3c:	2b e3       	ldi	r18, 0x3B	; 59
    6b3e:	30 e0       	ldi	r19, 0x00	; 0
    6b40:	4a e0       	ldi	r20, 0x0A	; 10
    6b42:	50 e0       	ldi	r21, 0x00	; 0
    6b44:	6b e3       	ldi	r22, 0x3B	; 59
    6b46:	70 e0       	ldi	r23, 0x00	; 0
    6b48:	8d ee       	ldi	r24, 0xED	; 237
    6b4a:	98 e0       	ldi	r25, 0x08	; 8
    6b4c:	0e 94 6c 41 	call	0x82d8	; 0x82d8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6b50:	c1 e0       	ldi	r28, 0x01	; 1
    6b52:	d0 e0       	ldi	r29, 0x00	; 0
    6b54:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    6b58:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6b5c:	5b e0       	ldi	r21, 0x0B	; 11
    6b5e:	a5 2e       	mov	r10, r21
    6b60:	b1 2c       	mov	r11, r1
    6b62:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    6b66:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6b6a:	d0 93 00 09 	sts	0x0900, r29	; 0x800900 <display+0x13>
    6b6e:	c0 93 ff 08 	sts	0x08FF, r28	; 0x8008ff <display+0x12>
    6b72:	d0 93 fe 08 	sts	0x08FE, r29	; 0x8008fe <display+0x11>
    6b76:	c0 93 fd 08 	sts	0x08FD, r28	; 0x8008fd <display+0x10>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:134

                display.setCursor(1, 11);
                display.setTextColor(WHITE);
                display.print(F("LATITUDE"));
    6b7a:	6a e8       	ldi	r22, 0x8A	; 138
    6b7c:	73 e0       	ldi	r23, 0x03	; 3
    6b7e:	8d ee       	ldi	r24, 0xED	; 237
    6b80:	98 e0       	ldi	r25, 0x08	; 8
    6b82:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6b86:	01 e4       	ldi	r16, 0x41	; 65
    6b88:	10 e0       	ldi	r17, 0x00	; 0
    6b8a:	10 93 fa 08 	sts	0x08FA, r17	; 0x8008fa <display+0xd>
    6b8e:	00 93 f9 08 	sts	0x08F9, r16	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6b92:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    6b96:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:136
                display.setCursor(65, 11);
                display.print(gps.location.lat(), 6);
    6b9a:	82 e1       	ldi	r24, 0x12	; 18
    6b9c:	98 e0       	ldi	r25, 0x08	; 8
    6b9e:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
    6ba2:	ab 01       	movw	r20, r22
    6ba4:	bc 01       	movw	r22, r24
    6ba6:	26 e0       	ldi	r18, 0x06	; 6
    6ba8:	30 e0       	ldi	r19, 0x00	; 0
    6baa:	8d ee       	ldi	r24, 0xED	; 237
    6bac:	98 e0       	ldi	r25, 0x08	; 8
    6bae:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6bb2:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    6bb6:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6bba:	64 e1       	ldi	r22, 0x14	; 20
    6bbc:	a6 2e       	mov	r10, r22
    6bbe:	b1 2c       	mov	r11, r1
    6bc0:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    6bc4:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:139

                display.setCursor(1, 20);
                display.print(F("LONGITUDE "));
    6bc8:	6f e7       	ldi	r22, 0x7F	; 127
    6bca:	73 e0       	ldi	r23, 0x03	; 3
    6bcc:	8d ee       	ldi	r24, 0xED	; 237
    6bce:	98 e0       	ldi	r25, 0x08	; 8
    6bd0:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6bd4:	10 93 fa 08 	sts	0x08FA, r17	; 0x8008fa <display+0xd>
    6bd8:	00 93 f9 08 	sts	0x08F9, r16	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6bdc:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    6be0:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:141
                display.setCursor(65, 20);
                display.print(gps.location.lng(), 6);
    6be4:	82 e1       	ldi	r24, 0x12	; 18
    6be6:	98 e0       	ldi	r25, 0x08	; 8
    6be8:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    6bec:	ab 01       	movw	r20, r22
    6bee:	bc 01       	movw	r22, r24
    6bf0:	26 e0       	ldi	r18, 0x06	; 6
    6bf2:	30 e0       	ldi	r19, 0x00	; 0
    6bf4:	8d ee       	ldi	r24, 0xED	; 237
    6bf6:	98 e0       	ldi	r25, 0x08	; 8
    6bf8:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6bfc:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    6c00:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6c04:	7d e1       	ldi	r23, 0x1D	; 29
    6c06:	a7 2e       	mov	r10, r23
    6c08:	b1 2c       	mov	r11, r1
    6c0a:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    6c0e:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:144

                display.setCursor(1, 29);
                display.print(F("ALTITUDE"));
    6c12:	66 e7       	ldi	r22, 0x76	; 118
    6c14:	73 e0       	ldi	r23, 0x03	; 3
    6c16:	8d ee       	ldi	r24, 0xED	; 237
    6c18:	98 e0       	ldi	r25, 0x08	; 8
    6c1a:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6c1e:	10 93 fa 08 	sts	0x08FA, r17	; 0x8008fa <display+0xd>
    6c22:	00 93 f9 08 	sts	0x08F9, r16	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6c26:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    6c2a:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    6c2e:	10 92 6d 08 	sts	0x086D, r1	; 0x80086d <gps+0x5b>
_ZN15TinyGPSAltitude6metersEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:181
   double deg()      { return value() / 100.0; }
};

struct TinyGPSAltitude : TinyGPSDecimal
{
   double meters()       { return value() / 100.0; }
    6c32:	60 91 72 08 	lds	r22, 0x0872	; 0x800872 <gps+0x60>
    6c36:	70 91 73 08 	lds	r23, 0x0873	; 0x800873 <gps+0x61>
    6c3a:	80 91 74 08 	lds	r24, 0x0874	; 0x800874 <gps+0x62>
    6c3e:	90 91 75 08 	lds	r25, 0x0875	; 0x800875 <gps+0x63>
    6c42:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    6c46:	20 e0       	ldi	r18, 0x00	; 0
    6c48:	30 e0       	ldi	r19, 0x00	; 0
    6c4a:	48 ec       	ldi	r20, 0xC8	; 200
    6c4c:	52 e4       	ldi	r21, 0x42	; 66
    6c4e:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    6c52:	ab 01       	movw	r20, r22
    6c54:	bc 01       	movw	r22, r24
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:147

                display.setCursor(65, 29);
                display.print(gps.altitude.meters());
    6c56:	22 e0       	ldi	r18, 0x02	; 2
    6c58:	30 e0       	ldi	r19, 0x00	; 0
    6c5a:	8d ee       	ldi	r24, 0xED	; 237
    6c5c:	98 e0       	ldi	r25, 0x08	; 8
    6c5e:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:148
                display.print(F(" m"));
    6c62:	63 e7       	ldi	r22, 0x73	; 115
    6c64:	73 e0       	ldi	r23, 0x03	; 3
    6c66:	8d ee       	ldi	r24, 0xED	; 237
    6c68:	98 e0       	ldi	r25, 0x08	; 8
    6c6a:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6c6e:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    6c72:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6c76:	e6 e2       	ldi	r30, 0x26	; 38
    6c78:	ae 2e       	mov	r10, r30
    6c7a:	b1 2c       	mov	r11, r1
    6c7c:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    6c80:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:151

                display.setCursor(1, 38);
                display.print(F("SPEED"));
    6c84:	6d e6       	ldi	r22, 0x6D	; 109
    6c86:	73 e0       	ldi	r23, 0x03	; 3
    6c88:	8d ee       	ldi	r24, 0xED	; 237
    6c8a:	98 e0       	ldi	r25, 0x08	; 8
    6c8c:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6c90:	10 93 fa 08 	sts	0x08FA, r17	; 0x8008fa <display+0xd>
    6c94:	00 93 f9 08 	sts	0x08F9, r16	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6c98:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    6c9c:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    6ca0:	10 92 51 08 	sts	0x0851, r1	; 0x800851 <gps+0x3f>
_ZN12TinyGPSSpeed4kmphEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:171
struct TinyGPSSpeed : TinyGPSDecimal
{
   double knots()    { return value() / 100.0; }
   double mph()      { return _GPS_MPH_PER_KNOT * value() / 100.0; }
   double mps()      { return _GPS_MPS_PER_KNOT * value() / 100.0; }
   double kmph()     { return _GPS_KMPH_PER_KNOT * value() / 100.0; }
    6ca4:	60 91 56 08 	lds	r22, 0x0856	; 0x800856 <gps+0x44>
    6ca8:	70 91 57 08 	lds	r23, 0x0857	; 0x800857 <gps+0x45>
    6cac:	80 91 58 08 	lds	r24, 0x0858	; 0x800858 <gps+0x46>
    6cb0:	90 91 59 08 	lds	r25, 0x0859	; 0x800859 <gps+0x47>
    6cb4:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    6cb8:	26 e5       	ldi	r18, 0x56	; 86
    6cba:	3e e0       	ldi	r19, 0x0E	; 14
    6cbc:	4d ee       	ldi	r20, 0xED	; 237
    6cbe:	5f e3       	ldi	r21, 0x3F	; 63
    6cc0:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    6cc4:	20 e0       	ldi	r18, 0x00	; 0
    6cc6:	30 e0       	ldi	r19, 0x00	; 0
    6cc8:	48 ec       	ldi	r20, 0xC8	; 200
    6cca:	52 e4       	ldi	r21, 0x42	; 66
    6ccc:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    6cd0:	ab 01       	movw	r20, r22
    6cd2:	bc 01       	movw	r22, r24
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:153
                display.setCursor(65, 38);
                display.print(gps.speed.kmph());
    6cd4:	22 e0       	ldi	r18, 0x02	; 2
    6cd6:	30 e0       	ldi	r19, 0x00	; 0
    6cd8:	8d ee       	ldi	r24, 0xED	; 237
    6cda:	98 e0       	ldi	r25, 0x08	; 8
    6cdc:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:154
                display.print(F(" Km/h"));
    6ce0:	67 e6       	ldi	r22, 0x67	; 103
    6ce2:	73 e0       	ldi	r23, 0x03	; 3
    6ce4:	8d ee       	ldi	r24, 0xED	; 237
    6ce6:	98 e0       	ldi	r25, 0x08	; 8
    6ce8:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6cec:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    6cf0:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6cf4:	cf e2       	ldi	r28, 0x2F	; 47
    6cf6:	d0 e0       	ldi	r29, 0x00	; 0
    6cf8:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    6cfc:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:157

                display.setCursor(1, 47);
                display.print(F("SATELLITE"));
    6d00:	6d e5       	ldi	r22, 0x5D	; 93
    6d02:	73 e0       	ldi	r23, 0x03	; 3
    6d04:	8d ee       	ldi	r24, 0xED	; 237
    6d06:	98 e0       	ldi	r25, 0x08	; 8
    6d08:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6d0c:	10 93 fa 08 	sts	0x08FA, r17	; 0x8008fa <display+0xd>
    6d10:	00 93 f9 08 	sts	0x08F9, r16	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6d14:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    6d18:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   uint32_t value()        { updated = false; return val; }
    6d1c:	10 92 7b 08 	sts	0x087B, r1	; 0x80087b <gps+0x69>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:160

                display.setCursor(65, 47);
                display.print(gps.satellites.value());
    6d20:	40 91 80 08 	lds	r20, 0x0880	; 0x800880 <gps+0x6e>
    6d24:	50 91 81 08 	lds	r21, 0x0881	; 0x800881 <gps+0x6f>
    6d28:	60 91 82 08 	lds	r22, 0x0882	; 0x800882 <gps+0x70>
    6d2c:	70 91 83 08 	lds	r23, 0x0883	; 0x800883 <gps+0x71>
    6d30:	2a e0       	ldi	r18, 0x0A	; 10
    6d32:	30 e0       	ldi	r19, 0x00	; 0
    6d34:	8d ee       	ldi	r24, 0xED	; 237
    6d36:	98 e0       	ldi	r25, 0x08	; 8
    6d38:	0e 94 c8 6c 	call	0xd990	; 0xd990 <Print::print(unsigned long, int)>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
    6d3c:	10 92 7b 08 	sts	0x087B, r1	; 0x80087b <gps+0x69>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:162

                if (gps.satellites.value() <= 4) {
    6d40:	80 91 80 08 	lds	r24, 0x0880	; 0x800880 <gps+0x6e>
    6d44:	90 91 81 08 	lds	r25, 0x0881	; 0x800881 <gps+0x6f>
    6d48:	a0 91 82 08 	lds	r26, 0x0882	; 0x800882 <gps+0x70>
    6d4c:	b0 91 83 08 	lds	r27, 0x0883	; 0x800883 <gps+0x71>
    6d50:	05 97       	sbiw	r24, 0x05	; 5
    6d52:	a1 05       	cpc	r26, r1
    6d54:	b1 05       	cpc	r27, r1
    6d56:	08 f0       	brcs	.+2      	; 0x6d5a <GPSMenu()+0x556>
    6d58:	b3 c0       	rjmp	.+358    	; 0x6ec0 <GPSMenu()+0x6bc>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:163
                        if (gps_var.show_question_mark)
    6d5a:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    6d5e:	88 23       	and	r24, r24
    6d60:	09 f4       	brne	.+2      	; 0x6d64 <GPSMenu()+0x560>
    6d62:	a8 c0       	rjmp	.+336    	; 0x6eb4 <GPSMenu()+0x6b0>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:164
                                display.drawBitmap(80, 47, mini_satellite_icon,
    6d64:	cc 24       	eor	r12, r12
    6d66:	c3 94       	inc	r12
    6d68:	d1 2c       	mov	r13, r1
    6d6a:	37 e0       	ldi	r19, 0x07	; 7
    6d6c:	e3 2e       	mov	r14, r19
    6d6e:	f1 2c       	mov	r15, r1
    6d70:	0d e0       	ldi	r16, 0x0D	; 13
    6d72:	10 e0       	ldi	r17, 0x00	; 0
    6d74:	22 eb       	ldi	r18, 0xB2	; 178
    6d76:	37 e0       	ldi	r19, 0x07	; 7
    6d78:	4f e2       	ldi	r20, 0x2F	; 47
    6d7a:	50 e0       	ldi	r21, 0x00	; 0
    6d7c:	60 e5       	ldi	r22, 0x50	; 80
    6d7e:	70 e0       	ldi	r23, 0x00	; 0
    6d80:	8d ee       	ldi	r24, 0xED	; 237
    6d82:	98 e0       	ldi	r25, 0x08	; 8
    6d84:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:168
                                                   13, 7, 1);
                        else
                                display.print(' ');
                        gps_var.show_question_mark = !gps_var.show_question_mark;
    6d88:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    6d8c:	91 e0       	ldi	r25, 0x01	; 1
    6d8e:	89 27       	eor	r24, r25
    6d90:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6d94:	81 e0       	ldi	r24, 0x01	; 1
    6d96:	90 e0       	ldi	r25, 0x00	; 0
    6d98:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    6d9c:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6da0:	c8 e3       	ldi	r28, 0x38	; 56
    6da2:	d0 e0       	ldi	r29, 0x00	; 0
    6da4:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    6da8:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    6dac:	10 92 5f 08 	sts	0x085F, r1	; 0x80085f <gps+0x4d>
_ZN13TinyGPSCourse3degEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:176
   double kmph()     { return _GPS_KMPH_PER_KNOT * value() / 100.0; }
};

struct TinyGPSCourse : public TinyGPSDecimal
{
   double deg()      { return value() / 100.0; }
    6db0:	60 91 64 08 	lds	r22, 0x0864	; 0x800864 <gps+0x52>
    6db4:	70 91 65 08 	lds	r23, 0x0865	; 0x800865 <gps+0x53>
    6db8:	80 91 66 08 	lds	r24, 0x0866	; 0x800866 <gps+0x54>
    6dbc:	90 91 67 08 	lds	r25, 0x0867	; 0x800867 <gps+0x55>
    6dc0:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    6dc4:	20 e0       	ldi	r18, 0x00	; 0
    6dc6:	30 e0       	ldi	r19, 0x00	; 0
    6dc8:	48 ec       	ldi	r20, 0xC8	; 200
    6dca:	52 e4       	ldi	r21, 0x42	; 66
    6dcc:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    6dd0:	ab 01       	movw	r20, r22
    6dd2:	bc 01       	movw	r22, r24
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:174
                }
                else
                        display.drawBitmap(80, 47, mini_satellite_icon, 13, 7, 1); /* Draw Mini Satellite */

                display.setCursor(1, 56);
                display.print(gps.course.deg());
    6dd4:	22 e0       	ldi	r18, 0x02	; 2
    6dd6:	30 e0       	ldi	r19, 0x00	; 0
    6dd8:	8d ee       	ldi	r24, 0xED	; 237
    6dda:	98 e0       	ldi	r25, 0x08	; 8
    6ddc:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:175
                display.print(F("deg"));
    6de0:	69 e5       	ldi	r22, 0x59	; 89
    6de2:	73 e0       	ldi	r23, 0x03	; 3
    6de4:	8d ee       	ldi	r24, 0xED	; 237
    6de6:	98 e0       	ldi	r25, 0x08	; 8
    6de8:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6dec:	81 e4       	ldi	r24, 0x41	; 65
    6dee:	90 e0       	ldi	r25, 0x00	; 0
    6df0:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    6df4:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6df8:	d0 93 fc 08 	sts	0x08FC, r29	; 0x8008fc <display+0xf>
    6dfc:	c0 93 fb 08 	sts	0x08FB, r28	; 0x8008fb <display+0xe>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:177
                display.setCursor(65, 56);
                display.print(F("HDOP "));
    6e00:	63 e5       	ldi	r22, 0x53	; 83
    6e02:	73 e0       	ldi	r23, 0x03	; 3
    6e04:	8d ee       	ldi	r24, 0xED	; 237
    6e06:	98 e0       	ldi	r25, 0x08	; 8
    6e08:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    6e0c:	10 92 89 08 	sts	0x0889, r1	; 0x800889 <gps+0x77>
_ZN11TinyGPSHDOP4hdopEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:189
   double feet()         { return _GPS_FEET_PER_METER * value() / 100.0; }
};

struct TinyGPSHDOP : TinyGPSDecimal
{
   double hdop() { return value() / 100.0; }
    6e10:	60 91 8e 08 	lds	r22, 0x088E	; 0x80088e <gps+0x7c>
    6e14:	70 91 8f 08 	lds	r23, 0x088F	; 0x80088f <gps+0x7d>
    6e18:	80 91 90 08 	lds	r24, 0x0890	; 0x800890 <gps+0x7e>
    6e1c:	90 91 91 08 	lds	r25, 0x0891	; 0x800891 <gps+0x7f>
    6e20:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    6e24:	20 e0       	ldi	r18, 0x00	; 0
    6e26:	30 e0       	ldi	r19, 0x00	; 0
    6e28:	48 ec       	ldi	r20, 0xC8	; 200
    6e2a:	52 e4       	ldi	r21, 0x42	; 66
    6e2c:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    6e30:	ab 01       	movw	r20, r22
    6e32:	bc 01       	movw	r22, r24
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:178
                display.print(gps.hdop.hdop());
    6e34:	22 e0       	ldi	r18, 0x02	; 2
    6e36:	30 e0       	ldi	r19, 0x00	; 0
    6e38:	8d ee       	ldi	r24, 0xED	; 237
    6e3a:	98 e0       	ldi	r25, 0x08	; 8
    6e3c:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:181

                /* Show Tip When Acquiring Satellite Took Too Long */
                noReceptionSignal();
    6e40:	0e 94 81 32 	call	0x6502	; 0x6502 <noReceptionSignal()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:183

                display.display();
    6e44:	8d ee       	ldi	r24, 0xED	; 237
    6e46:	98 e0       	ldi	r25, 0x08	; 8
    6e48:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   uint32_t value()        { updated = false; return val; }
    6e4c:	10 92 7b 08 	sts	0x087B, r1	; 0x80087b <gps+0x69>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:185

                if (gps.satellites.value() == 0)
    6e50:	80 91 80 08 	lds	r24, 0x0880	; 0x800880 <gps+0x6e>
    6e54:	90 91 81 08 	lds	r25, 0x0881	; 0x800881 <gps+0x6f>
    6e58:	a0 91 82 08 	lds	r26, 0x0882	; 0x800882 <gps+0x70>
    6e5c:	b0 91 83 08 	lds	r27, 0x0883	; 0x800883 <gps+0x71>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:186
                        digitalWrite(USR_LED_1, HIGH);
    6e60:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:185
                /* Show Tip When Acquiring Satellite Took Too Long */
                noReceptionSignal();

                display.display();

                if (gps.satellites.value() == 0)
    6e62:	89 2b       	or	r24, r25
    6e64:	8a 2b       	or	r24, r26
    6e66:	8b 2b       	or	r24, r27
    6e68:	09 f0       	breq	.+2      	; 0x6e6c <GPSMenu()+0x668>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:188
                        digitalWrite(USR_LED_1, HIGH);
                else
                        digitalWrite(USR_LED_1, LOW);
    6e6a:	60 e0       	ldi	r22, 0x00	; 0
    6e6c:	86 e1       	ldi	r24, 0x16	; 22
    6e6e:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:191

                /* Show Update Interval Menu */
                while(!digitalRead(B_Pin))
    6e72:	81 e0       	ldi	r24, 0x01	; 1
    6e74:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    6e78:	89 2b       	or	r24, r25
    6e7a:	a9 f5       	brne	.+106    	; 0x6ee6 <GPSMenu()+0x6e2>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:192
                        receptionSignalGraphMenu();
    6e7c:	0e 94 a6 30 	call	0x614c	; 0x614c <receptionSignalGraphMenu()>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:191
                        digitalWrite(USR_LED_1, HIGH);
                else
                        digitalWrite(USR_LED_1, LOW);

                /* Show Update Interval Menu */
                while(!digitalRead(B_Pin))
    6e80:	f8 cf       	rjmp	.-16     	; 0x6e72 <GPSMenu()+0x66e>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:71
                        if (gps_var.show_question_mark) {
                                display.fillRect(0, 0, 128, 9, WHITE);
                                display.setTextColor(BLACK);
                                display.print(F("ACQUIRING SATELLITES"));
                        } else {
                                display.fillRect(0, 0, 128, 9, BLACK);
    6e82:	f1 2c       	mov	r15, r1
    6e84:	e1 2c       	mov	r14, r1
    6e86:	09 e0       	ldi	r16, 0x09	; 9
    6e88:	10 e0       	ldi	r17, 0x00	; 0
    6e8a:	20 e8       	ldi	r18, 0x80	; 128
    6e8c:	30 e0       	ldi	r19, 0x00	; 0
    6e8e:	50 e0       	ldi	r21, 0x00	; 0
    6e90:	40 e0       	ldi	r20, 0x00	; 0
    6e92:	70 e0       	ldi	r23, 0x00	; 0
    6e94:	60 e0       	ldi	r22, 0x00	; 0
    6e96:	8d ee       	ldi	r24, 0xED	; 237
    6e98:	98 e0       	ldi	r25, 0x08	; 8
    6e9a:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    6e9e:	b0 92 00 09 	sts	0x0900, r11	; 0x800900 <display+0x13>
    6ea2:	a0 92 ff 08 	sts	0x08FF, r10	; 0x8008ff <display+0x12>
    6ea6:	b0 92 fe 08 	sts	0x08FE, r11	; 0x8008fe <display+0x11>
    6eaa:	a0 92 fd 08 	sts	0x08FD, r10	; 0x8008fd <display+0x10>
_Z7GPSMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:73
                                display.setTextColor(WHITE);
                                display.print(F("ACQUIRING SATELLITES"));
    6eae:	63 e9       	ldi	r22, 0x93	; 147
    6eb0:	73 e0       	ldi	r23, 0x03	; 3
    6eb2:	29 cd       	rjmp	.-1454   	; 0x6906 <GPSMenu()+0x102>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:167
                if (gps.satellites.value() <= 4) {
                        if (gps_var.show_question_mark)
                                display.drawBitmap(80, 47, mini_satellite_icon,
                                                   13, 7, 1);
                        else
                                display.print(' ');
    6eb4:	60 e2       	ldi	r22, 0x20	; 32
    6eb6:	8d ee       	ldi	r24, 0xED	; 237
    6eb8:	98 e0       	ldi	r25, 0x08	; 8
    6eba:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    6ebe:	64 cf       	rjmp	.-312    	; 0x6d88 <GPSMenu()+0x584>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:171
                        gps_var.show_question_mark = !gps_var.show_question_mark;
                }
                else
                        display.drawBitmap(80, 47, mini_satellite_icon, 13, 7, 1); /* Draw Mini Satellite */
    6ec0:	cc 24       	eor	r12, r12
    6ec2:	c3 94       	inc	r12
    6ec4:	d1 2c       	mov	r13, r1
    6ec6:	97 e0       	ldi	r25, 0x07	; 7
    6ec8:	e9 2e       	mov	r14, r25
    6eca:	f1 2c       	mov	r15, r1
    6ecc:	0d e0       	ldi	r16, 0x0D	; 13
    6ece:	10 e0       	ldi	r17, 0x00	; 0
    6ed0:	22 eb       	ldi	r18, 0xB2	; 178
    6ed2:	37 e0       	ldi	r19, 0x07	; 7
    6ed4:	4f e2       	ldi	r20, 0x2F	; 47
    6ed6:	50 e0       	ldi	r21, 0x00	; 0
    6ed8:	60 e5       	ldi	r22, 0x50	; 80
    6eda:	70 e0       	ldi	r23, 0x00	; 0
    6edc:	8d ee       	ldi	r24, 0xED	; 237
    6ede:	98 e0       	ldi	r25, 0x08	; 8
    6ee0:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
    6ee4:	57 cf       	rjmp	.-338    	; 0x6d94 <GPSMenu()+0x590>
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSMenu.ino:194

                /* Show Update Interval Menu */
                while(!digitalRead(B_Pin))
                        receptionSignalGraphMenu();
        }
}
    6ee6:	df 91       	pop	r29
    6ee8:	cf 91       	pop	r28
    6eea:	1f 91       	pop	r17
    6eec:	0f 91       	pop	r16
    6eee:	ff 90       	pop	r15
    6ef0:	ef 90       	pop	r14
    6ef2:	df 90       	pop	r13
    6ef4:	cf 90       	pop	r12
    6ef6:	bf 90       	pop	r11
    6ef8:	af 90       	pop	r10
    6efa:	9f 90       	pop	r9
    6efc:	8f 90       	pop	r8
    6efe:	7f 90       	pop	r7
    6f00:	08 95       	ret

00006f02 <DeviationMap()>:
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:1
void DeviationMap(void) {
    6f02:	4f 92       	push	r4
    6f04:	5f 92       	push	r5
    6f06:	6f 92       	push	r6
    6f08:	7f 92       	push	r7
    6f0a:	af 92       	push	r10
    6f0c:	bf 92       	push	r11
    6f0e:	cf 92       	push	r12
    6f10:	df 92       	push	r13
    6f12:	ef 92       	push	r14
    6f14:	ff 92       	push	r15
    6f16:	0f 93       	push	r16
    6f18:	1f 93       	push	r17
    6f1a:	cf 93       	push	r28
    6f1c:	df 93       	push	r29
    6f1e:	00 d0       	rcall	.+0      	; 0x6f20 <DeviationMap()+0x1e>
    6f20:	00 d0       	rcall	.+0      	; 0x6f22 <DeviationMap()+0x20>
    6f22:	cd b7       	in	r28, 0x3d	; 61
    6f24:	de b7       	in	r29, 0x3e	; 62
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:3
        /* Draw NEWS */
        display.setTextSize(1);
    6f26:	61 e0       	ldi	r22, 0x01	; 1
    6f28:	8d ee       	ldi	r24, 0xED	; 237
    6f2a:	98 e0       	ldi	r25, 0x08	; 8
    6f2c:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    6f30:	81 e0       	ldi	r24, 0x01	; 1
    6f32:	90 e0       	ldi	r25, 0x00	; 0
    6f34:	90 93 00 09 	sts	0x0900, r25	; 0x800900 <display+0x13>
    6f38:	80 93 ff 08 	sts	0x08FF, r24	; 0x8008ff <display+0x12>
    6f3c:	90 93 fe 08 	sts	0x08FE, r25	; 0x8008fe <display+0x11>
    6f40:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6f44:	0e e3       	ldi	r16, 0x3E	; 62
    6f46:	10 e0       	ldi	r17, 0x00	; 0
    6f48:	10 93 fa 08 	sts	0x08FA, r17	; 0x8008fa <display+0xd>
    6f4c:	00 93 f9 08 	sts	0x08F9, r16	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6f50:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    6f54:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:5
        display.setTextColor(WHITE);
        display.setCursor(62, 1); display.print('^');
    6f58:	6e e5       	ldi	r22, 0x5E	; 94
    6f5a:	8d ee       	ldi	r24, 0xED	; 237
    6f5c:	98 e0       	ldi	r25, 0x08	; 8
    6f5e:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6f62:	89 e7       	ldi	r24, 0x79	; 121
    6f64:	90 e0       	ldi	r25, 0x00	; 0
    6f66:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    6f6a:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6f6e:	3d e1       	ldi	r19, 0x1D	; 29
    6f70:	e3 2e       	mov	r14, r19
    6f72:	f1 2c       	mov	r15, r1
    6f74:	f0 92 fc 08 	sts	0x08FC, r15	; 0x8008fc <display+0xf>
    6f78:	e0 92 fb 08 	sts	0x08FB, r14	; 0x8008fb <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:6
        display.setCursor(121, 29); display.print('>');
    6f7c:	6e e3       	ldi	r22, 0x3E	; 62
    6f7e:	8d ee       	ldi	r24, 0xED	; 237
    6f80:	98 e0       	ldi	r25, 0x08	; 8
    6f82:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6f86:	81 e0       	ldi	r24, 0x01	; 1
    6f88:	90 e0       	ldi	r25, 0x00	; 0
    6f8a:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    6f8e:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6f92:	f0 92 fc 08 	sts	0x08FC, r15	; 0x8008fc <display+0xf>
    6f96:	e0 92 fb 08 	sts	0x08FB, r14	; 0x8008fb <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:7
        display.setCursor(1, 29); display.print('<');
    6f9a:	6c e3       	ldi	r22, 0x3C	; 60
    6f9c:	8d ee       	ldi	r24, 0xED	; 237
    6f9e:	98 e0       	ldi	r25, 0x08	; 8
    6fa0:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    6fa4:	10 93 fa 08 	sts	0x08FA, r17	; 0x8008fa <display+0xd>
    6fa8:	00 93 f9 08 	sts	0x08F9, r16	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    6fac:	89 e3       	ldi	r24, 0x39	; 57
    6fae:	90 e0       	ldi	r25, 0x00	; 0
    6fb0:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    6fb4:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:8
        display.setCursor(62, 57); display.print('_');
    6fb8:	6f e5       	ldi	r22, 0x5F	; 95
    6fba:	8d ee       	ldi	r24, 0xED	; 237
    6fbc:	98 e0       	ldi	r25, 0x08	; 8
    6fbe:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:11

        /* Show Update Satellite Icon */
        display.fillRect(115, 0, 60, 7, BLACK);
    6fc2:	f1 2c       	mov	r15, r1
    6fc4:	e1 2c       	mov	r14, r1
    6fc6:	07 e0       	ldi	r16, 0x07	; 7
    6fc8:	10 e0       	ldi	r17, 0x00	; 0
    6fca:	2c e3       	ldi	r18, 0x3C	; 60
    6fcc:	30 e0       	ldi	r19, 0x00	; 0
    6fce:	50 e0       	ldi	r21, 0x00	; 0
    6fd0:	40 e0       	ldi	r20, 0x00	; 0
    6fd2:	63 e7       	ldi	r22, 0x73	; 115
    6fd4:	70 e0       	ldi	r23, 0x00	; 0
    6fd6:	8d ee       	ldi	r24, 0xED	; 237
    6fd8:	98 e0       	ldi	r25, 0x08	; 8
    6fda:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:12
        if (gps_var.show_question_mark)
    6fde:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    6fe2:	88 23       	and	r24, r24
    6fe4:	09 f4       	brne	.+2      	; 0x6fe8 <DeviationMap()+0xe6>
    6fe6:	67 c1       	rjmp	.+718    	; 0x72b6 <DeviationMap()+0x3b4>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:13
                display.drawBitmap(115, 0, mini_satellite_icon, 13, 7, 1);
    6fe8:	cc 24       	eor	r12, r12
    6fea:	c3 94       	inc	r12
    6fec:	d1 2c       	mov	r13, r1
    6fee:	27 e0       	ldi	r18, 0x07	; 7
    6ff0:	e2 2e       	mov	r14, r18
    6ff2:	f1 2c       	mov	r15, r1
    6ff4:	0d e0       	ldi	r16, 0x0D	; 13
    6ff6:	10 e0       	ldi	r17, 0x00	; 0
    6ff8:	22 eb       	ldi	r18, 0xB2	; 178
    6ffa:	37 e0       	ldi	r19, 0x07	; 7
    6ffc:	50 e0       	ldi	r21, 0x00	; 0
    6ffe:	40 e0       	ldi	r20, 0x00	; 0
    7000:	63 e7       	ldi	r22, 0x73	; 115
    7002:	70 e0       	ldi	r23, 0x00	; 0
    7004:	8d ee       	ldi	r24, 0xED	; 237
    7006:	98 e0       	ldi	r25, 0x08	; 8
    7008:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:16
        else
                display.print(' ');
        gps_var.show_question_mark = !gps_var.show_question_mark;
    700c:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    7010:	91 e0       	ldi	r25, 0x01	; 1
    7012:	89 27       	eor	r24, r25
    7014:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:19

        /* Get Startup Coordinate for Start Point */
        if (deviMap.deviationMapStartPointFlag) {
    7018:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <deviMap+0x18>
    701c:	88 23       	and	r24, r24
    701e:	31 f1       	breq	.+76     	; 0x706c <DeviationMap()+0x16a>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:20
                deviMap.old_latitude = gps.location.lat() * 1e6;
    7020:	82 e1       	ldi	r24, 0x12	; 18
    7022:	98 e0       	ldi	r25, 0x08	; 8
    7024:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
    7028:	20 e0       	ldi	r18, 0x00	; 0
    702a:	34 e2       	ldi	r19, 0x24	; 36
    702c:	44 e7       	ldi	r20, 0x74	; 116
    702e:	59 e4       	ldi	r21, 0x49	; 73
    7030:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    7034:	60 93 49 01 	sts	0x0149, r22	; 0x800149 <deviMap>
    7038:	70 93 4a 01 	sts	0x014A, r23	; 0x80014a <deviMap+0x1>
    703c:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <deviMap+0x2>
    7040:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <deviMap+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:21
                deviMap.old_longitude = gps.location.lng() * 1e6;
    7044:	82 e1       	ldi	r24, 0x12	; 18
    7046:	98 e0       	ldi	r25, 0x08	; 8
    7048:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    704c:	20 e0       	ldi	r18, 0x00	; 0
    704e:	34 e2       	ldi	r19, 0x24	; 36
    7050:	44 e7       	ldi	r20, 0x74	; 116
    7052:	59 e4       	ldi	r21, 0x49	; 73
    7054:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    7058:	60 93 4d 01 	sts	0x014D, r22	; 0x80014d <deviMap+0x4>
    705c:	70 93 4e 01 	sts	0x014E, r23	; 0x80014e <deviMap+0x5>
    7060:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <deviMap+0x6>
    7064:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <deviMap+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:22
                deviMap.deviationMapStartPointFlag = false;
    7068:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <deviMap+0x18>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:26
        }

        /* Get Current Location Coordinate */
        deviMap.new_latitude = gps.location.lat() * 1e6;
    706c:	82 e1       	ldi	r24, 0x12	; 18
    706e:	98 e0       	ldi	r25, 0x08	; 8
    7070:	0e 94 f2 64 	call	0xc9e4	; 0xc9e4 <TinyGPSLocation::lat()>
    7074:	20 e0       	ldi	r18, 0x00	; 0
    7076:	34 e2       	ldi	r19, 0x24	; 36
    7078:	44 e7       	ldi	r20, 0x74	; 116
    707a:	59 e4       	ldi	r21, 0x49	; 73
    707c:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    7080:	60 93 51 01 	sts	0x0151, r22	; 0x800151 <deviMap+0x8>
    7084:	70 93 52 01 	sts	0x0152, r23	; 0x800152 <deviMap+0x9>
    7088:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <deviMap+0xa>
    708c:	90 93 54 01 	sts	0x0154, r25	; 0x800154 <deviMap+0xb>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:27
        deviMap.new_longitude = gps.location.lng() * 1e6;
    7090:	82 e1       	ldi	r24, 0x12	; 18
    7092:	98 e0       	ldi	r25, 0x08	; 8
    7094:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    7098:	20 e0       	ldi	r18, 0x00	; 0
    709a:	34 e2       	ldi	r19, 0x24	; 36
    709c:	44 e7       	ldi	r20, 0x74	; 116
    709e:	59 e4       	ldi	r21, 0x49	; 73
    70a0:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    70a4:	60 93 55 01 	sts	0x0155, r22	; 0x800155 <deviMap+0xc>
    70a8:	70 93 56 01 	sts	0x0156, r23	; 0x800156 <deviMap+0xd>
    70ac:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <deviMap+0xe>
    70b0:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <deviMap+0xf>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    70b4:	81 e0       	ldi	r24, 0x01	; 1
    70b6:	90 e0       	ldi	r25, 0x00	; 0
    70b8:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    70bc:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    70c0:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    70c4:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:31

        /* Calculate Distance Between Old and New Coordinate */
        display.setCursor(1, 1);
        display.fillRect(0, 0, 30, 9, BLACK);
    70c8:	f1 2c       	mov	r15, r1
    70ca:	e1 2c       	mov	r14, r1
    70cc:	09 e0       	ldi	r16, 0x09	; 9
    70ce:	10 e0       	ldi	r17, 0x00	; 0
    70d0:	2e e1       	ldi	r18, 0x1E	; 30
    70d2:	30 e0       	ldi	r19, 0x00	; 0
    70d4:	50 e0       	ldi	r21, 0x00	; 0
    70d6:	40 e0       	ldi	r20, 0x00	; 0
    70d8:	70 e0       	ldi	r23, 0x00	; 0
    70da:	60 e0       	ldi	r22, 0x00	; 0
    70dc:	8d ee       	ldi	r24, 0xED	; 237
    70de:	98 e0       	ldi	r25, 0x08	; 8
    70e0:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:32
        display.print(gps.distanceBetween(deviMap.old_latitude / 1e6,
    70e4:	20 e0       	ldi	r18, 0x00	; 0
    70e6:	34 e2       	ldi	r19, 0x24	; 36
    70e8:	44 e7       	ldi	r20, 0x74	; 116
    70ea:	59 e4       	ldi	r21, 0x49	; 73
    70ec:	60 91 55 01 	lds	r22, 0x0155	; 0x800155 <deviMap+0xc>
    70f0:	70 91 56 01 	lds	r23, 0x0156	; 0x800156 <deviMap+0xd>
    70f4:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <deviMap+0xe>
    70f8:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <deviMap+0xf>
    70fc:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    7100:	5b 01       	movw	r10, r22
    7102:	6c 01       	movw	r12, r24
    7104:	20 e0       	ldi	r18, 0x00	; 0
    7106:	34 e2       	ldi	r19, 0x24	; 36
    7108:	44 e7       	ldi	r20, 0x74	; 116
    710a:	59 e4       	ldi	r21, 0x49	; 73
    710c:	60 91 51 01 	lds	r22, 0x0151	; 0x800151 <deviMap+0x8>
    7110:	70 91 52 01 	lds	r23, 0x0152	; 0x800152 <deviMap+0x9>
    7114:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <deviMap+0xa>
    7118:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <deviMap+0xb>
    711c:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    7120:	2b 01       	movw	r4, r22
    7122:	3c 01       	movw	r6, r24
    7124:	20 e0       	ldi	r18, 0x00	; 0
    7126:	34 e2       	ldi	r19, 0x24	; 36
    7128:	44 e7       	ldi	r20, 0x74	; 116
    712a:	59 e4       	ldi	r21, 0x49	; 73
    712c:	60 91 4d 01 	lds	r22, 0x014D	; 0x80014d <deviMap+0x4>
    7130:	70 91 4e 01 	lds	r23, 0x014E	; 0x80014e <deviMap+0x5>
    7134:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <deviMap+0x6>
    7138:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <deviMap+0x7>
    713c:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    7140:	69 83       	std	Y+1, r22	; 0x01
    7142:	7a 83       	std	Y+2, r23	; 0x02
    7144:	8b 83       	std	Y+3, r24	; 0x03
    7146:	9c 83       	std	Y+4, r25	; 0x04
    7148:	20 e0       	ldi	r18, 0x00	; 0
    714a:	34 e2       	ldi	r19, 0x24	; 36
    714c:	44 e7       	ldi	r20, 0x74	; 116
    714e:	59 e4       	ldi	r21, 0x49	; 73
    7150:	60 91 49 01 	lds	r22, 0x0149	; 0x800149 <deviMap>
    7154:	70 91 4a 01 	lds	r23, 0x014A	; 0x80014a <deviMap+0x1>
    7158:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <deviMap+0x2>
    715c:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <deviMap+0x3>
    7160:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    7164:	83 01       	movw	r16, r6
    7166:	72 01       	movw	r14, r4
    7168:	29 81       	ldd	r18, Y+1	; 0x01
    716a:	3a 81       	ldd	r19, Y+2	; 0x02
    716c:	4b 81       	ldd	r20, Y+3	; 0x03
    716e:	5c 81       	ldd	r21, Y+4	; 0x04
    7170:	0e 94 fe 62 	call	0xc5fc	; 0xc5fc <TinyGPSPlus::distanceBetween(double, double, double, double)>
    7174:	ab 01       	movw	r20, r22
    7176:	bc 01       	movw	r22, r24
    7178:	22 e0       	ldi	r18, 0x02	; 2
    717a:	30 e0       	ldi	r19, 0x00	; 0
    717c:	8d ee       	ldi	r24, 0xED	; 237
    717e:	98 e0       	ldi	r25, 0x08	; 8
    7180:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:36
                                          deviMap.old_longitude / 1e6,
                                          deviMap.new_latitude / 1e6,
                                          deviMap.new_longitude / 1e6));
        display.print('m');
    7184:	6d e6       	ldi	r22, 0x6D	; 109
    7186:	8d ee       	ldi	r24, 0xED	; 237
    7188:	98 e0       	ldi	r25, 0x08	; 8
    718a:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
_ZN14TinyGPSInteger5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:153
    718e:	10 92 7b 08 	sts	0x087B, r1	; 0x80087b <gps+0x69>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:39

        /* In case no GPS connected */
        if (gps.satellites.value() == 0) {
    7192:	80 91 80 08 	lds	r24, 0x0880	; 0x800880 <gps+0x6e>
    7196:	90 91 81 08 	lds	r25, 0x0881	; 0x800881 <gps+0x6f>
    719a:	a0 91 82 08 	lds	r26, 0x0882	; 0x800882 <gps+0x70>
    719e:	b0 91 83 08 	lds	r27, 0x0883	; 0x800883 <gps+0x71>
    71a2:	89 2b       	or	r24, r25
    71a4:	8a 2b       	or	r24, r26
    71a6:	8b 2b       	or	r24, r27
    71a8:	09 f0       	breq	.+2      	; 0x71ac <DeviationMap()+0x2aa>
    71aa:	8b c0       	rjmp	.+278    	; 0x72c2 <DeviationMap()+0x3c0>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:40
                display.fillRect(42, 28, 43, 9, WHITE);
    71ac:	ee 24       	eor	r14, r14
    71ae:	e3 94       	inc	r14
    71b0:	f1 2c       	mov	r15, r1
    71b2:	09 e0       	ldi	r16, 0x09	; 9
    71b4:	10 e0       	ldi	r17, 0x00	; 0
    71b6:	2b e2       	ldi	r18, 0x2B	; 43
    71b8:	30 e0       	ldi	r19, 0x00	; 0
    71ba:	4c e1       	ldi	r20, 0x1C	; 28
    71bc:	50 e0       	ldi	r21, 0x00	; 0
    71be:	6a e2       	ldi	r22, 0x2A	; 42
    71c0:	70 e0       	ldi	r23, 0x00	; 0
    71c2:	8d ee       	ldi	r24, 0xED	; 237
    71c4:	98 e0       	ldi	r25, 0x08	; 8
    71c6:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    71ca:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    71ce:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    71d2:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    71d6:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    71da:	8b e2       	ldi	r24, 0x2B	; 43
    71dc:	90 e0       	ldi	r25, 0x00	; 0
    71de:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    71e2:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    71e6:	8d e1       	ldi	r24, 0x1D	; 29
    71e8:	90 e0       	ldi	r25, 0x00	; 0
    71ea:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    71ee:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z12DeviationMapv():
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:43
                display.setTextColor(BLACK);
                display.setCursor(43, 29);
                display.print(F("NO DATA"));
    71f2:	65 e1       	ldi	r22, 0x15	; 21
    71f4:	74 e0       	ldi	r23, 0x04	; 4
    71f6:	8d ee       	ldi	r24, 0xED	; 237
    71f8:	98 e0       	ldi	r25, 0x08	; 8
    71fa:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:68
                                   deviMap.y_point + deviMap.y_change, 1, WHITE);
                delay(10); display.display();
        }

        /* Calculate Screen Point from Updating Coordinate */
        deviMap.x_change = deviMap.new_latitude - deviMap.old_latitude;
    71fe:	c0 90 51 01 	lds	r12, 0x0151	; 0x800151 <deviMap+0x8>
    7202:	d0 90 52 01 	lds	r13, 0x0152	; 0x800152 <deviMap+0x9>
    7206:	e0 90 53 01 	lds	r14, 0x0153	; 0x800153 <deviMap+0xa>
    720a:	f0 90 54 01 	lds	r15, 0x0154	; 0x800154 <deviMap+0xb>
    720e:	20 91 49 01 	lds	r18, 0x0149	; 0x800149 <deviMap>
    7212:	30 91 4a 01 	lds	r19, 0x014A	; 0x80014a <deviMap+0x1>
    7216:	40 91 4b 01 	lds	r20, 0x014B	; 0x80014b <deviMap+0x2>
    721a:	50 91 4c 01 	lds	r21, 0x014C	; 0x80014c <deviMap+0x3>
    721e:	c7 01       	movw	r24, r14
    7220:	b6 01       	movw	r22, r12
    7222:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    7226:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    722a:	70 93 5e 01 	sts	0x015E, r23	; 0x80015e <deviMap+0x15>
    722e:	60 93 5d 01 	sts	0x015D, r22	; 0x80015d <deviMap+0x14>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:69
        deviMap.y_change = deviMap.new_longitude - deviMap.old_longitude;
    7232:	40 90 55 01 	lds	r4, 0x0155	; 0x800155 <deviMap+0xc>
    7236:	50 90 56 01 	lds	r5, 0x0156	; 0x800156 <deviMap+0xd>
    723a:	60 90 57 01 	lds	r6, 0x0157	; 0x800157 <deviMap+0xe>
    723e:	70 90 58 01 	lds	r7, 0x0158	; 0x800158 <deviMap+0xf>
    7242:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <deviMap+0x4>
    7246:	30 91 4e 01 	lds	r19, 0x014E	; 0x80014e <deviMap+0x5>
    724a:	40 91 4f 01 	lds	r20, 0x014F	; 0x80014f <deviMap+0x6>
    724e:	50 91 50 01 	lds	r21, 0x0150	; 0x800150 <deviMap+0x7>
    7252:	c3 01       	movw	r24, r6
    7254:	b2 01       	movw	r22, r4
    7256:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    725a:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    725e:	70 93 60 01 	sts	0x0160, r23	; 0x800160 <deviMap+0x17>
    7262:	60 93 5f 01 	sts	0x015F, r22	; 0x80015f <deviMap+0x16>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:72

        /* Update Old Coordinate with New Coordinate */
        deviMap.old_latitude = deviMap.new_latitude;
    7266:	c0 92 49 01 	sts	0x0149, r12	; 0x800149 <deviMap>
    726a:	d0 92 4a 01 	sts	0x014A, r13	; 0x80014a <deviMap+0x1>
    726e:	e0 92 4b 01 	sts	0x014B, r14	; 0x80014b <deviMap+0x2>
    7272:	f0 92 4c 01 	sts	0x014C, r15	; 0x80014c <deviMap+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:73
        deviMap.old_longitude = deviMap.new_longitude;
    7276:	40 92 4d 01 	sts	0x014D, r4	; 0x80014d <deviMap+0x4>
    727a:	50 92 4e 01 	sts	0x014E, r5	; 0x80014e <deviMap+0x5>
    727e:	60 92 4f 01 	sts	0x014F, r6	; 0x80014f <deviMap+0x6>
    7282:	70 92 50 01 	sts	0x0150, r7	; 0x800150 <deviMap+0x7>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:75

        display.display();
    7286:	8d ee       	ldi	r24, 0xED	; 237
    7288:	98 e0       	ldi	r25, 0x08	; 8
    728a:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:77
        decodeGPSNMEA(1000); /* Decode GPS Data */
}
    728e:	0f 90       	pop	r0
    7290:	0f 90       	pop	r0
    7292:	0f 90       	pop	r0
    7294:	0f 90       	pop	r0
    7296:	df 91       	pop	r29
    7298:	cf 91       	pop	r28
    729a:	1f 91       	pop	r17
    729c:	0f 91       	pop	r16
    729e:	ff 90       	pop	r15
    72a0:	ef 90       	pop	r14
    72a2:	df 90       	pop	r13
    72a4:	cf 90       	pop	r12
    72a6:	bf 90       	pop	r11
    72a8:	af 90       	pop	r10
    72aa:	7f 90       	pop	r7
    72ac:	6f 90       	pop	r6
    72ae:	5f 90       	pop	r5
    72b0:	4f 90       	pop	r4
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:76
        /* Update Old Coordinate with New Coordinate */
        deviMap.old_latitude = deviMap.new_latitude;
        deviMap.old_longitude = deviMap.new_longitude;

        display.display();
        decodeGPSNMEA(1000); /* Decode GPS Data */
    72b2:	0c 94 fc 26 	jmp	0x4df8	; 0x4df8 <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:15
        /* Show Update Satellite Icon */
        display.fillRect(115, 0, 60, 7, BLACK);
        if (gps_var.show_question_mark)
                display.drawBitmap(115, 0, mini_satellite_icon, 13, 7, 1);
        else
                display.print(' ');
    72b6:	60 e2       	ldi	r22, 0x20	; 32
    72b8:	8d ee       	ldi	r24, 0xED	; 237
    72ba:	98 e0       	ldi	r25, 0x08	; 8
    72bc:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    72c0:	a5 ce       	rjmp	.-694    	; 0x700c <DeviationMap()+0x10a>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:46
                display.setTextColor(BLACK);
                display.setCursor(43, 29);
                display.print(F("NO DATA"));
        }else{
                /* Draw Grid */
                for (int x = 7; x <= 121; x++) {
    72c2:	87 e0       	ldi	r24, 0x07	; 7
    72c4:	90 e0       	ldi	r25, 0x00	; 0
    72c6:	9a 83       	std	Y+2, r25	; 0x02
    72c8:	89 83       	std	Y+1, r24	; 0x01
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:48
                        display.drawPixel(x, 32, logic.lastState);
                        logic.lastState = !logic.lastState;
    72ca:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:47 (discriminator 2)
                display.setCursor(43, 29);
                display.print(F("NO DATA"));
        }else{
                /* Draw Grid */
                for (int x = 7; x <= 121; x++) {
                        display.drawPixel(x, 32, logic.lastState);
    72cc:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    72d0:	30 e0       	ldi	r19, 0x00	; 0
    72d2:	40 e2       	ldi	r20, 0x20	; 32
    72d4:	50 e0       	ldi	r21, 0x00	; 0
    72d6:	69 81       	ldd	r22, Y+1	; 0x01
    72d8:	7a 81       	ldd	r23, Y+2	; 0x02
    72da:	8d ee       	ldi	r24, 0xED	; 237
    72dc:	98 e0       	ldi	r25, 0x08	; 8
    72de:	0e 94 25 4a 	call	0x944a	; 0x944a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:48 (discriminator 2)
                        logic.lastState = !logic.lastState;
    72e2:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    72e6:	81 27       	eor	r24, r17
    72e8:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:46 (discriminator 2)
                display.setTextColor(BLACK);
                display.setCursor(43, 29);
                display.print(F("NO DATA"));
        }else{
                /* Draw Grid */
                for (int x = 7; x <= 121; x++) {
    72ec:	89 81       	ldd	r24, Y+1	; 0x01
    72ee:	9a 81       	ldd	r25, Y+2	; 0x02
    72f0:	01 96       	adiw	r24, 0x01	; 1
    72f2:	9a 83       	std	Y+2, r25	; 0x02
    72f4:	89 83       	std	Y+1, r24	; 0x01
    72f6:	8a 37       	cpi	r24, 0x7A	; 122
    72f8:	91 05       	cpc	r25, r1
    72fa:	41 f7       	brne	.-48     	; 0x72cc <DeviationMap()+0x3ca>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:50
                        display.drawPixel(x, 32, logic.lastState);
                        logic.lastState = !logic.lastState;
                }
                for (int y = 7; y <= 56; y++) {
    72fc:	87 e0       	ldi	r24, 0x07	; 7
    72fe:	90 e0       	ldi	r25, 0x00	; 0
    7300:	9a 83       	std	Y+2, r25	; 0x02
    7302:	89 83       	std	Y+1, r24	; 0x01
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:52
                        display.drawPixel(64, y, logic.lastState);
                        logic.lastState = !logic.lastState;
    7304:	11 e0       	ldi	r17, 0x01	; 1
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:51 (discriminator 2)
                for (int x = 7; x <= 121; x++) {
                        display.drawPixel(x, 32, logic.lastState);
                        logic.lastState = !logic.lastState;
                }
                for (int y = 7; y <= 56; y++) {
                        display.drawPixel(64, y, logic.lastState);
    7306:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    730a:	30 e0       	ldi	r19, 0x00	; 0
    730c:	49 81       	ldd	r20, Y+1	; 0x01
    730e:	5a 81       	ldd	r21, Y+2	; 0x02
    7310:	60 e4       	ldi	r22, 0x40	; 64
    7312:	70 e0       	ldi	r23, 0x00	; 0
    7314:	8d ee       	ldi	r24, 0xED	; 237
    7316:	98 e0       	ldi	r25, 0x08	; 8
    7318:	0e 94 25 4a 	call	0x944a	; 0x944a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:52 (discriminator 2)
                        logic.lastState = !logic.lastState;
    731c:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    7320:	81 27       	eor	r24, r17
    7322:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:50 (discriminator 2)
                /* Draw Grid */
                for (int x = 7; x <= 121; x++) {
                        display.drawPixel(x, 32, logic.lastState);
                        logic.lastState = !logic.lastState;
                }
                for (int y = 7; y <= 56; y++) {
    7326:	89 81       	ldd	r24, Y+1	; 0x01
    7328:	9a 81       	ldd	r25, Y+2	; 0x02
    732a:	01 96       	adiw	r24, 0x01	; 1
    732c:	9a 83       	std	Y+2, r25	; 0x02
    732e:	89 83       	std	Y+1, r24	; 0x01
    7330:	c9 97       	sbiw	r24, 0x39	; 57
    7332:	49 f7       	brne	.-46     	; 0x7306 <DeviationMap()+0x404>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:56
                        display.drawPixel(64, y, logic.lastState);
                        logic.lastState = !logic.lastState;
                }

                /* Draw Point Respond to Update Coordinate */
                display.fillCircle(deviMap.x_point + deviMap.x_change,
    7334:	40 91 5b 01 	lds	r20, 0x015B	; 0x80015b <deviMap+0x12>
    7338:	50 91 5c 01 	lds	r21, 0x015C	; 0x80015c <deviMap+0x13>
    733c:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <deviMap+0x16>
    7340:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <deviMap+0x17>
    7344:	48 0f       	add	r20, r24
    7346:	59 1f       	adc	r21, r25
    7348:	60 91 59 01 	lds	r22, 0x0159	; 0x800159 <deviMap+0x10>
    734c:	70 91 5a 01 	lds	r23, 0x015A	; 0x80015a <deviMap+0x11>
    7350:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <deviMap+0x14>
    7354:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <deviMap+0x15>
    7358:	68 0f       	add	r22, r24
    735a:	79 1f       	adc	r23, r25
    735c:	01 e0       	ldi	r16, 0x01	; 1
    735e:	10 e0       	ldi	r17, 0x00	; 0
    7360:	21 e0       	ldi	r18, 0x01	; 1
    7362:	30 e0       	ldi	r19, 0x00	; 0
    7364:	8d ee       	ldi	r24, 0xED	; 237
    7366:	98 e0       	ldi	r25, 0x08	; 8
    7368:	0e 94 44 45 	call	0x8a88	; 0x8a88 <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:58
                                   deviMap.y_point + deviMap.y_change, 1, WHITE);
                delay(10); display.display();
    736c:	6a e0       	ldi	r22, 0x0A	; 10
    736e:	70 e0       	ldi	r23, 0x00	; 0
    7370:	80 e0       	ldi	r24, 0x00	; 0
    7372:	90 e0       	ldi	r25, 0x00	; 0
    7374:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
    7378:	8d ee       	ldi	r24, 0xED	; 237
    737a:	98 e0       	ldi	r25, 0x08	; 8
    737c:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:59
                display.fillCircle(deviMap.x_point + deviMap.x_change,
    7380:	40 91 5b 01 	lds	r20, 0x015B	; 0x80015b <deviMap+0x12>
    7384:	50 91 5c 01 	lds	r21, 0x015C	; 0x80015c <deviMap+0x13>
    7388:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <deviMap+0x16>
    738c:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <deviMap+0x17>
    7390:	48 0f       	add	r20, r24
    7392:	59 1f       	adc	r21, r25
    7394:	60 91 59 01 	lds	r22, 0x0159	; 0x800159 <deviMap+0x10>
    7398:	70 91 5a 01 	lds	r23, 0x015A	; 0x80015a <deviMap+0x11>
    739c:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <deviMap+0x14>
    73a0:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <deviMap+0x15>
    73a4:	68 0f       	add	r22, r24
    73a6:	79 1f       	adc	r23, r25
    73a8:	10 e0       	ldi	r17, 0x00	; 0
    73aa:	00 e0       	ldi	r16, 0x00	; 0
    73ac:	21 e0       	ldi	r18, 0x01	; 1
    73ae:	30 e0       	ldi	r19, 0x00	; 0
    73b0:	8d ee       	ldi	r24, 0xED	; 237
    73b2:	98 e0       	ldi	r25, 0x08	; 8
    73b4:	0e 94 44 45 	call	0x8a88	; 0x8a88 <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:61
                                   deviMap.y_point + deviMap.y_change, 1, BLACK);
                delay(10); display.display();
    73b8:	6a e0       	ldi	r22, 0x0A	; 10
    73ba:	70 e0       	ldi	r23, 0x00	; 0
    73bc:	80 e0       	ldi	r24, 0x00	; 0
    73be:	90 e0       	ldi	r25, 0x00	; 0
    73c0:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
    73c4:	8d ee       	ldi	r24, 0xED	; 237
    73c6:	98 e0       	ldi	r25, 0x08	; 8
    73c8:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:62
                display.fillCircle(deviMap.x_point + deviMap.x_change,
    73cc:	40 91 5b 01 	lds	r20, 0x015B	; 0x80015b <deviMap+0x12>
    73d0:	50 91 5c 01 	lds	r21, 0x015C	; 0x80015c <deviMap+0x13>
    73d4:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <deviMap+0x16>
    73d8:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <deviMap+0x17>
    73dc:	48 0f       	add	r20, r24
    73de:	59 1f       	adc	r21, r25
    73e0:	60 91 59 01 	lds	r22, 0x0159	; 0x800159 <deviMap+0x10>
    73e4:	70 91 5a 01 	lds	r23, 0x015A	; 0x80015a <deviMap+0x11>
    73e8:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <deviMap+0x14>
    73ec:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <deviMap+0x15>
    73f0:	68 0f       	add	r22, r24
    73f2:	79 1f       	adc	r23, r25
    73f4:	01 e0       	ldi	r16, 0x01	; 1
    73f6:	10 e0       	ldi	r17, 0x00	; 0
    73f8:	21 e0       	ldi	r18, 0x01	; 1
    73fa:	30 e0       	ldi	r19, 0x00	; 0
    73fc:	8d ee       	ldi	r24, 0xED	; 237
    73fe:	98 e0       	ldi	r25, 0x08	; 8
    7400:	0e 94 44 45 	call	0x8a88	; 0x8a88 <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/DeviationMap.ino:64
                                   deviMap.y_point + deviMap.y_change, 1, WHITE);
                delay(10); display.display();
    7404:	6a e0       	ldi	r22, 0x0A	; 10
    7406:	70 e0       	ldi	r23, 0x00	; 0
    7408:	80 e0       	ldi	r24, 0x00	; 0
    740a:	90 e0       	ldi	r25, 0x00	; 0
    740c:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
    7410:	8d ee       	ldi	r24, 0xED	; 237
    7412:	98 e0       	ldi	r25, 0x08	; 8
    7414:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
    7418:	f2 ce       	rjmp	.-540    	; 0x71fe <DeviationMap()+0x2fc>

0000741a <AltitudeMenu()>:
_Z12AltitudeMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:1
void AltitudeMenu(void) {
    741a:	af 92       	push	r10
    741c:	bf 92       	push	r11
    741e:	cf 92       	push	r12
    7420:	df 92       	push	r13
    7422:	ef 92       	push	r14
    7424:	ff 92       	push	r15
    7426:	0f 93       	push	r16
    7428:	1f 93       	push	r17
    742a:	cf 93       	push	r28
    742c:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:3
  /* Reset Graph */
  if (altitude_graph.x_increment > 128) {
    742e:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <altitude_graph+0x2>
    7432:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <altitude_graph+0x3>
    7436:	81 38       	cpi	r24, 0x81	; 129
    7438:	91 05       	cpc	r25, r1
    743a:	5c f0       	brlt	.+22     	; 0x7452 <AltitudeMenu()+0x38>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:4
    altitude_graph.x_increment = 0;
    743c:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <altitude_graph+0x3>
    7440:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <altitude_graph+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:5
    altitude_graph.drawMesh = true;
    7444:	81 e0       	ldi	r24, 0x01	; 1
    7446:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <altitude_graph+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:6
    display.clearDisplay();
    744a:	8d ee       	ldi	r24, 0xED	; 237
    744c:	98 e0       	ldi	r25, 0x08	; 8
    744e:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:8
  }
  display.fillRect(0, 0, 128, 9, WHITE);
    7452:	ee 24       	eor	r14, r14
    7454:	e3 94       	inc	r14
    7456:	f1 2c       	mov	r15, r1
    7458:	09 e0       	ldi	r16, 0x09	; 9
    745a:	10 e0       	ldi	r17, 0x00	; 0
    745c:	20 e8       	ldi	r18, 0x80	; 128
    745e:	30 e0       	ldi	r19, 0x00	; 0
    7460:	50 e0       	ldi	r21, 0x00	; 0
    7462:	40 e0       	ldi	r20, 0x00	; 0
    7464:	70 e0       	ldi	r23, 0x00	; 0
    7466:	60 e0       	ldi	r22, 0x00	; 0
    7468:	8d ee       	ldi	r24, 0xED	; 237
    746a:	98 e0       	ldi	r25, 0x08	; 8
    746c:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:9
  display.setTextSize(1);
    7470:	61 e0       	ldi	r22, 0x01	; 1
    7472:	8d ee       	ldi	r24, 0xED	; 237
    7474:	98 e0       	ldi	r25, 0x08	; 8
    7476:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    747a:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <display+0x13>
    747e:	10 92 ff 08 	sts	0x08FF, r1	; 0x8008ff <display+0x12>
    7482:	10 92 fe 08 	sts	0x08FE, r1	; 0x8008fe <display+0x11>
    7486:	10 92 fd 08 	sts	0x08FD, r1	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    748a:	85 e1       	ldi	r24, 0x15	; 21
    748c:	90 e0       	ldi	r25, 0x00	; 0
    748e:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    7492:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7496:	81 e0       	ldi	r24, 0x01	; 1
    7498:	90 e0       	ldi	r25, 0x00	; 0
    749a:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    749e:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_Z12AltitudeMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:11
  display.setTextColor(BLACK);
  display.setCursor(21, 1); display.print(F("ALTITUDE GRAPH"));
    74a2:	6b e5       	ldi	r22, 0x5B	; 91
    74a4:	74 e0       	ldi	r23, 0x04	; 4
    74a6:	8d ee       	ldi	r24, 0xED	; 237
    74a8:	98 e0       	ldi	r25, 0x08	; 8
    74aa:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    74ae:	10 92 6d 08 	sts	0x086D, r1	; 0x80086d <gps+0x5b>
_ZN15TinyGPSAltitude6metersEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:181
   double deg()      { return value() / 100.0; }
};

struct TinyGPSAltitude : TinyGPSDecimal
{
   double meters()       { return value() / 100.0; }
    74b2:	60 91 72 08 	lds	r22, 0x0872	; 0x800872 <gps+0x60>
    74b6:	70 91 73 08 	lds	r23, 0x0873	; 0x800873 <gps+0x61>
    74ba:	80 91 74 08 	lds	r24, 0x0874	; 0x800874 <gps+0x62>
    74be:	90 91 75 08 	lds	r25, 0x0875	; 0x800875 <gps+0x63>
    74c2:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    74c6:	20 e0       	ldi	r18, 0x00	; 0
    74c8:	30 e0       	ldi	r19, 0x00	; 0
    74ca:	48 ec       	ldi	r20, 0xC8	; 200
    74cc:	52 e4       	ldi	r21, 0x42	; 66
    74ce:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
_Z12AltitudeMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:14

  /* Get Altitude Value from GPS Data */
  altitude_graph.altitude_indicator_new = gps.altitude.meters();
    74d2:	60 93 42 01 	sts	0x0142, r22	; 0x800142 <altitude_graph+0xa>
    74d6:	70 93 43 01 	sts	0x0143, r23	; 0x800143 <altitude_graph+0xb>
    74da:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <altitude_graph+0xc>
    74de:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <altitude_graph+0xd>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:15
  altitude_graph.y_altitude = altitude_graph.altitude_indicator_new;
    74e2:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    74e6:	70 93 3d 01 	sts	0x013D, r23	; 0x80013d <altitude_graph+0x5>
    74ea:	60 93 3c 01 	sts	0x013C, r22	; 0x80013c <altitude_graph+0x4>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:18

  /* Draw Altitude Indicator */
  display.fillRect(118, 11, 10, 5, BLACK);
    74ee:	f1 2c       	mov	r15, r1
    74f0:	e1 2c       	mov	r14, r1
    74f2:	05 e0       	ldi	r16, 0x05	; 5
    74f4:	10 e0       	ldi	r17, 0x00	; 0
    74f6:	2a e0       	ldi	r18, 0x0A	; 10
    74f8:	30 e0       	ldi	r19, 0x00	; 0
    74fa:	4b e0       	ldi	r20, 0x0B	; 11
    74fc:	50 e0       	ldi	r21, 0x00	; 0
    74fe:	66 e7       	ldi	r22, 0x76	; 118
    7500:	70 e0       	ldi	r23, 0x00	; 0
    7502:	8d ee       	ldi	r24, 0xED	; 237
    7504:	98 e0       	ldi	r25, 0x08	; 8
    7506:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:19
  if (altitude_graph.altitude_indicator_new > altitude_graph.altitude_indicator_old)
    750a:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <altitude_graph+0x6>
    750e:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <altitude_graph+0x7>
    7512:	40 91 40 01 	lds	r20, 0x0140	; 0x800140 <altitude_graph+0x8>
    7516:	50 91 41 01 	lds	r21, 0x0141	; 0x800141 <altitude_graph+0x9>
    751a:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <altitude_graph+0xa>
    751e:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <altitude_graph+0xb>
    7522:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <altitude_graph+0xc>
    7526:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <altitude_graph+0xd>
    752a:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    752e:	18 16       	cp	r1, r24
    7530:	94 f4       	brge	.+36     	; 0x7556 <AltitudeMenu()+0x13c>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:20
    display.drawBitmap(118, 11, rising_icon, 10, 5, 1);
    7532:	cc 24       	eor	r12, r12
    7534:	c3 94       	inc	r12
    7536:	d1 2c       	mov	r13, r1
    7538:	15 e0       	ldi	r17, 0x05	; 5
    753a:	e1 2e       	mov	r14, r17
    753c:	f1 2c       	mov	r15, r1
    753e:	0a e0       	ldi	r16, 0x0A	; 10
    7540:	10 e0       	ldi	r17, 0x00	; 0
    7542:	28 ea       	ldi	r18, 0xA8	; 168
    7544:	37 e0       	ldi	r19, 0x07	; 7
    7546:	4b e0       	ldi	r20, 0x0B	; 11
    7548:	50 e0       	ldi	r21, 0x00	; 0
    754a:	66 e7       	ldi	r22, 0x76	; 118
    754c:	70 e0       	ldi	r23, 0x00	; 0
    754e:	8d ee       	ldi	r24, 0xED	; 237
    7550:	98 e0       	ldi	r25, 0x08	; 8
    7552:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:21
  if (altitude_graph.altitude_indicator_new < altitude_graph.altitude_indicator_old)
    7556:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <altitude_graph+0x6>
    755a:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <altitude_graph+0x7>
    755e:	40 91 40 01 	lds	r20, 0x0140	; 0x800140 <altitude_graph+0x8>
    7562:	50 91 41 01 	lds	r21, 0x0141	; 0x800141 <altitude_graph+0x9>
    7566:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <altitude_graph+0xa>
    756a:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <altitude_graph+0xb>
    756e:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <altitude_graph+0xc>
    7572:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <altitude_graph+0xd>
    7576:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    757a:	87 ff       	sbrs	r24, 7
    757c:	12 c0       	rjmp	.+36     	; 0x75a2 <AltitudeMenu()+0x188>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:22
    display.drawBitmap(118, 11, falling_icon, 10, 5, 1);
    757e:	cc 24       	eor	r12, r12
    7580:	c3 94       	inc	r12
    7582:	d1 2c       	mov	r13, r1
    7584:	c5 e0       	ldi	r28, 0x05	; 5
    7586:	ec 2e       	mov	r14, r28
    7588:	f1 2c       	mov	r15, r1
    758a:	0a e0       	ldi	r16, 0x0A	; 10
    758c:	10 e0       	ldi	r17, 0x00	; 0
    758e:	24 e9       	ldi	r18, 0x94	; 148
    7590:	37 e0       	ldi	r19, 0x07	; 7
    7592:	4b e0       	ldi	r20, 0x0B	; 11
    7594:	50 e0       	ldi	r21, 0x00	; 0
    7596:	66 e7       	ldi	r22, 0x76	; 118
    7598:	70 e0       	ldi	r23, 0x00	; 0
    759a:	8d ee       	ldi	r24, 0xED	; 237
    759c:	98 e0       	ldi	r25, 0x08	; 8
    759e:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:23
  if (altitude_graph.altitude_indicator_new == altitude_graph.altitude_indicator_old)
    75a2:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <altitude_graph+0x6>
    75a6:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <altitude_graph+0x7>
    75aa:	40 91 40 01 	lds	r20, 0x0140	; 0x800140 <altitude_graph+0x8>
    75ae:	50 91 41 01 	lds	r21, 0x0141	; 0x800141 <altitude_graph+0x9>
    75b2:	60 91 42 01 	lds	r22, 0x0142	; 0x800142 <altitude_graph+0xa>
    75b6:	70 91 43 01 	lds	r23, 0x0143	; 0x800143 <altitude_graph+0xb>
    75ba:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <altitude_graph+0xc>
    75be:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <altitude_graph+0xd>
    75c2:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    75c6:	81 11       	cpse	r24, r1
    75c8:	12 c0       	rjmp	.+36     	; 0x75ee <AltitudeMenu()+0x1d4>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:24
    display.drawBitmap(118, 11, no_changing_icon, 10, 5, 1);
    75ca:	cc 24       	eor	r12, r12
    75cc:	c3 94       	inc	r12
    75ce:	d1 2c       	mov	r13, r1
    75d0:	a5 e0       	ldi	r26, 0x05	; 5
    75d2:	ea 2e       	mov	r14, r26
    75d4:	f1 2c       	mov	r15, r1
    75d6:	0a e0       	ldi	r16, 0x0A	; 10
    75d8:	10 e0       	ldi	r17, 0x00	; 0
    75da:	2e e9       	ldi	r18, 0x9E	; 158
    75dc:	37 e0       	ldi	r19, 0x07	; 7
    75de:	4b e0       	ldi	r20, 0x0B	; 11
    75e0:	50 e0       	ldi	r21, 0x00	; 0
    75e2:	66 e7       	ldi	r22, 0x76	; 118
    75e4:	70 e0       	ldi	r23, 0x00	; 0
    75e6:	8d ee       	ldi	r24, 0xED	; 237
    75e8:	98 e0       	ldi	r25, 0x08	; 8
    75ea:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:27

  /* Erase old altitude text */
  display.fillRect(1, 11, 118, 7, BLACK);
    75ee:	f1 2c       	mov	r15, r1
    75f0:	e1 2c       	mov	r14, r1
    75f2:	07 e0       	ldi	r16, 0x07	; 7
    75f4:	10 e0       	ldi	r17, 0x00	; 0
    75f6:	26 e7       	ldi	r18, 0x76	; 118
    75f8:	30 e0       	ldi	r19, 0x00	; 0
    75fa:	4b e0       	ldi	r20, 0x0B	; 11
    75fc:	50 e0       	ldi	r21, 0x00	; 0
    75fe:	61 e0       	ldi	r22, 0x01	; 1
    7600:	70 e0       	ldi	r23, 0x00	; 0
    7602:	8d ee       	ldi	r24, 0xED	; 237
    7604:	98 e0       	ldi	r25, 0x08	; 8
    7606:	0e 94 aa 40 	call	0x8154	; 0x8154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    760a:	81 e0       	ldi	r24, 0x01	; 1
    760c:	90 e0       	ldi	r25, 0x00	; 0
    760e:	90 93 00 09 	sts	0x0900, r25	; 0x800900 <display+0x13>
    7612:	80 93 ff 08 	sts	0x08FF, r24	; 0x8008ff <display+0x12>
    7616:	90 93 fe 08 	sts	0x08FE, r25	; 0x8008fe <display+0x11>
    761a:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    761e:	90 93 fa 08 	sts	0x08FA, r25	; 0x8008fa <display+0xd>
    7622:	80 93 f9 08 	sts	0x08F9, r24	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7626:	8b e0       	ldi	r24, 0x0B	; 11
    7628:	90 e0       	ldi	r25, 0x00	; 0
    762a:	90 93 fc 08 	sts	0x08FC, r25	; 0x8008fc <display+0xf>
    762e:	80 93 fb 08 	sts	0x08FB, r24	; 0x8008fb <display+0xe>
_ZN14TinyGPSDecimal5valueEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:133
   friend class TinyGPSPlus;
public:
   bool isValid() const    { return valid; }
   bool isUpdated() const  { return updated; }
   uint32_t age() const    { return valid ? millis() - lastCommitTime : (uint32_t)ULONG_MAX; }
   int32_t value()         { updated = false; return val; }
    7632:	10 92 6d 08 	sts	0x086D, r1	; 0x80086d <gps+0x5b>
_ZN15TinyGPSAltitude6metersEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.h:181
   double deg()      { return value() / 100.0; }
};

struct TinyGPSAltitude : TinyGPSDecimal
{
   double meters()       { return value() / 100.0; }
    7636:	60 91 72 08 	lds	r22, 0x0872	; 0x800872 <gps+0x60>
    763a:	70 91 73 08 	lds	r23, 0x0873	; 0x800873 <gps+0x61>
    763e:	80 91 74 08 	lds	r24, 0x0874	; 0x800874 <gps+0x62>
    7642:	90 91 75 08 	lds	r25, 0x0875	; 0x800875 <gps+0x63>
    7646:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    764a:	20 e0       	ldi	r18, 0x00	; 0
    764c:	30 e0       	ldi	r19, 0x00	; 0
    764e:	48 ec       	ldi	r20, 0xC8	; 200
    7650:	52 e4       	ldi	r21, 0x42	; 66
    7652:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    7656:	6b 01       	movw	r12, r22
    7658:	7c 01       	movw	r14, r24
_Z12AltitudeMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:30
  display.setTextColor(WHITE);
  display.setCursor(1, 11);
  if (gps.altitude.meters() > 0) {
    765a:	20 e0       	ldi	r18, 0x00	; 0
    765c:	30 e0       	ldi	r19, 0x00	; 0
    765e:	a9 01       	movw	r20, r18
    7660:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    7664:	18 16       	cp	r1, r24
    7666:	0c f0       	brlt	.+2      	; 0x766a <AltitudeMenu()+0x250>
    7668:	5c c1       	rjmp	.+696    	; 0x7922 <AltitudeMenu()+0x508>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:31
    display.print(gps.altitude.meters());
    766a:	22 e0       	ldi	r18, 0x02	; 2
    766c:	30 e0       	ldi	r19, 0x00	; 0
    766e:	b7 01       	movw	r22, r14
    7670:	a6 01       	movw	r20, r12
    7672:	8d ee       	ldi	r24, 0xED	; 237
    7674:	98 e0       	ldi	r25, 0x08	; 8
    7676:	0e 94 c6 6d 	call	0xdb8c	; 0xdb8c <Print::print(double, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:32
    display.print('m');
    767a:	6d e6       	ldi	r22, 0x6D	; 109
    767c:	8d ee       	ldi	r24, 0xED	; 237
    767e:	98 e0       	ldi	r25, 0x08	; 8
    7680:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:41
    else
      display.print(' ');
    gps_var.show_question_mark = !gps_var.show_question_mark;
  }

  altitude_graph.y_altitude = int(altitude_graph.y_altitude);
    7684:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <altitude_graph+0x4>
    7688:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <altitude_graph+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:44

  /* Convert Altitude to Appropriate Screen Size */
  if ((altitude_graph.y_altitude > 0) && (altitude_graph.y_altitude <= 100))
    768c:	cb 01       	movw	r24, r22
    768e:	01 97       	sbiw	r24, 0x01	; 1
    7690:	84 36       	cpi	r24, 0x64	; 100
    7692:	91 05       	cpc	r25, r1
    7694:	18 f5       	brcc	.+70     	; 0x76dc <AltitudeMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:45
    altitude_graph.y_altitude = 64 - map(altitude_graph.y_altitude,
    7696:	07 2e       	mov	r0, r23
    7698:	00 0c       	add	r0, r0
    769a:	88 0b       	sbc	r24, r24
    769c:	99 0b       	sbc	r25, r25
    769e:	1f 92       	push	r1
    76a0:	1f 92       	push	r1
    76a2:	1f 92       	push	r1
    76a4:	2c e2       	ldi	r18, 0x2C	; 44
    76a6:	2f 93       	push	r18
    76a8:	a1 2c       	mov	r10, r1
    76aa:	b1 2c       	mov	r11, r1
    76ac:	65 01       	movw	r12, r10
    76ae:	14 e6       	ldi	r17, 0x64	; 100
    76b0:	e1 2e       	mov	r14, r17
    76b2:	f1 2c       	mov	r15, r1
    76b4:	00 e0       	ldi	r16, 0x00	; 0
    76b6:	10 e0       	ldi	r17, 0x00	; 0
    76b8:	20 e0       	ldi	r18, 0x00	; 0
    76ba:	30 e0       	ldi	r19, 0x00	; 0
    76bc:	a9 01       	movw	r20, r18
    76be:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    76c2:	20 e4       	ldi	r18, 0x40	; 64
    76c4:	30 e0       	ldi	r19, 0x00	; 0
    76c6:	c9 01       	movw	r24, r18
    76c8:	86 1b       	sub	r24, r22
    76ca:	97 0b       	sbc	r25, r23
    76cc:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    76d0:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
    76d4:	0f 90       	pop	r0
    76d6:	0f 90       	pop	r0
    76d8:	0f 90       	pop	r0
    76da:	0f 90       	pop	r0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:48
                                         0, 100, 0, 44);

  if ((altitude_graph.y_altitude > 100) && (altitude_graph.y_altitude <= 500))
    76dc:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <altitude_graph+0x4>
    76e0:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <altitude_graph+0x5>
    76e4:	cb 01       	movw	r24, r22
    76e6:	85 56       	subi	r24, 0x65	; 101
    76e8:	91 09       	sbc	r25, r1
    76ea:	80 39       	cpi	r24, 0x90	; 144
    76ec:	91 40       	sbci	r25, 0x01	; 1
    76ee:	20 f5       	brcc	.+72     	; 0x7738 <AltitudeMenu()+0x31e>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:49
    altitude_graph.y_altitude = 64 - map(altitude_graph.y_altitude,
    76f0:	07 2e       	mov	r0, r23
    76f2:	00 0c       	add	r0, r0
    76f4:	88 0b       	sbc	r24, r24
    76f6:	99 0b       	sbc	r25, r25
    76f8:	1f 92       	push	r1
    76fa:	1f 92       	push	r1
    76fc:	1f 92       	push	r1
    76fe:	2c e2       	ldi	r18, 0x2C	; 44
    7700:	2f 93       	push	r18
    7702:	a1 2c       	mov	r10, r1
    7704:	b1 2c       	mov	r11, r1
    7706:	65 01       	movw	r12, r10
    7708:	14 ef       	ldi	r17, 0xF4	; 244
    770a:	e1 2e       	mov	r14, r17
    770c:	ff 24       	eor	r15, r15
    770e:	f3 94       	inc	r15
    7710:	00 e0       	ldi	r16, 0x00	; 0
    7712:	10 e0       	ldi	r17, 0x00	; 0
    7714:	20 e0       	ldi	r18, 0x00	; 0
    7716:	30 e0       	ldi	r19, 0x00	; 0
    7718:	a9 01       	movw	r20, r18
    771a:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    771e:	20 e4       	ldi	r18, 0x40	; 64
    7720:	30 e0       	ldi	r19, 0x00	; 0
    7722:	c9 01       	movw	r24, r18
    7724:	86 1b       	sub	r24, r22
    7726:	97 0b       	sbc	r25, r23
    7728:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    772c:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
    7730:	0f 90       	pop	r0
    7732:	0f 90       	pop	r0
    7734:	0f 90       	pop	r0
    7736:	0f 90       	pop	r0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:52
                                         0, 500, 0, 44);

  if ((altitude_graph.y_altitude > 500) && (altitude_graph.y_altitude <= 1000))
    7738:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <altitude_graph+0x4>
    773c:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <altitude_graph+0x5>
    7740:	cb 01       	movw	r24, r22
    7742:	85 5f       	subi	r24, 0xF5	; 245
    7744:	91 40       	sbci	r25, 0x01	; 1
    7746:	84 3f       	cpi	r24, 0xF4	; 244
    7748:	91 40       	sbci	r25, 0x01	; 1
    774a:	20 f5       	brcc	.+72     	; 0x7794 <AltitudeMenu()+0x37a>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:53
    altitude_graph.y_altitude = 64 - map(altitude_graph.y_altitude,
    774c:	07 2e       	mov	r0, r23
    774e:	00 0c       	add	r0, r0
    7750:	88 0b       	sbc	r24, r24
    7752:	99 0b       	sbc	r25, r25
    7754:	1f 92       	push	r1
    7756:	1f 92       	push	r1
    7758:	1f 92       	push	r1
    775a:	2c e2       	ldi	r18, 0x2C	; 44
    775c:	2f 93       	push	r18
    775e:	a1 2c       	mov	r10, r1
    7760:	b1 2c       	mov	r11, r1
    7762:	65 01       	movw	r12, r10
    7764:	18 ee       	ldi	r17, 0xE8	; 232
    7766:	e1 2e       	mov	r14, r17
    7768:	13 e0       	ldi	r17, 0x03	; 3
    776a:	f1 2e       	mov	r15, r17
    776c:	00 e0       	ldi	r16, 0x00	; 0
    776e:	10 e0       	ldi	r17, 0x00	; 0
    7770:	20 e0       	ldi	r18, 0x00	; 0
    7772:	30 e0       	ldi	r19, 0x00	; 0
    7774:	a9 01       	movw	r20, r18
    7776:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    777a:	20 e4       	ldi	r18, 0x40	; 64
    777c:	30 e0       	ldi	r19, 0x00	; 0
    777e:	c9 01       	movw	r24, r18
    7780:	86 1b       	sub	r24, r22
    7782:	97 0b       	sbc	r25, r23
    7784:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    7788:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
    778c:	0f 90       	pop	r0
    778e:	0f 90       	pop	r0
    7790:	0f 90       	pop	r0
    7792:	0f 90       	pop	r0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:56
                                         0, 1000, 0, 44);

  if ((altitude_graph.y_altitude > 1000) && (altitude_graph.y_altitude <= 5000))
    7794:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <altitude_graph+0x4>
    7798:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <altitude_graph+0x5>
    779c:	cb 01       	movw	r24, r22
    779e:	89 5e       	subi	r24, 0xE9	; 233
    77a0:	93 40       	sbci	r25, 0x03	; 3
    77a2:	80 3a       	cpi	r24, 0xA0	; 160
    77a4:	9f 40       	sbci	r25, 0x0F	; 15
    77a6:	20 f5       	brcc	.+72     	; 0x77f0 <AltitudeMenu()+0x3d6>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:57
    altitude_graph.y_altitude = 64 - map(altitude_graph.y_altitude,
    77a8:	07 2e       	mov	r0, r23
    77aa:	00 0c       	add	r0, r0
    77ac:	88 0b       	sbc	r24, r24
    77ae:	99 0b       	sbc	r25, r25
    77b0:	1f 92       	push	r1
    77b2:	1f 92       	push	r1
    77b4:	1f 92       	push	r1
    77b6:	2c e2       	ldi	r18, 0x2C	; 44
    77b8:	2f 93       	push	r18
    77ba:	a1 2c       	mov	r10, r1
    77bc:	b1 2c       	mov	r11, r1
    77be:	65 01       	movw	r12, r10
    77c0:	18 e8       	ldi	r17, 0x88	; 136
    77c2:	e1 2e       	mov	r14, r17
    77c4:	13 e1       	ldi	r17, 0x13	; 19
    77c6:	f1 2e       	mov	r15, r17
    77c8:	00 e0       	ldi	r16, 0x00	; 0
    77ca:	10 e0       	ldi	r17, 0x00	; 0
    77cc:	20 e0       	ldi	r18, 0x00	; 0
    77ce:	30 e0       	ldi	r19, 0x00	; 0
    77d0:	a9 01       	movw	r20, r18
    77d2:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    77d6:	20 e4       	ldi	r18, 0x40	; 64
    77d8:	30 e0       	ldi	r19, 0x00	; 0
    77da:	c9 01       	movw	r24, r18
    77dc:	86 1b       	sub	r24, r22
    77de:	97 0b       	sbc	r25, r23
    77e0:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    77e4:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
    77e8:	0f 90       	pop	r0
    77ea:	0f 90       	pop	r0
    77ec:	0f 90       	pop	r0
    77ee:	0f 90       	pop	r0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:60
                                         0, 5000, 0, 44);

  if ((altitude_graph.y_altitude > 5000) && (altitude_graph.y_altitude <= 10000))
    77f0:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <altitude_graph+0x4>
    77f4:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <altitude_graph+0x5>
    77f8:	cb 01       	movw	r24, r22
    77fa:	89 58       	subi	r24, 0x89	; 137
    77fc:	93 41       	sbci	r25, 0x13	; 19
    77fe:	88 38       	cpi	r24, 0x88	; 136
    7800:	93 41       	sbci	r25, 0x13	; 19
    7802:	20 f5       	brcc	.+72     	; 0x784c <AltitudeMenu()+0x432>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:61
    altitude_graph.y_altitude = 64 - map(altitude_graph.y_altitude,
    7804:	07 2e       	mov	r0, r23
    7806:	00 0c       	add	r0, r0
    7808:	88 0b       	sbc	r24, r24
    780a:	99 0b       	sbc	r25, r25
    780c:	1f 92       	push	r1
    780e:	1f 92       	push	r1
    7810:	1f 92       	push	r1
    7812:	2c e2       	ldi	r18, 0x2C	; 44
    7814:	2f 93       	push	r18
    7816:	a1 2c       	mov	r10, r1
    7818:	b1 2c       	mov	r11, r1
    781a:	65 01       	movw	r12, r10
    781c:	10 e1       	ldi	r17, 0x10	; 16
    781e:	e1 2e       	mov	r14, r17
    7820:	17 e2       	ldi	r17, 0x27	; 39
    7822:	f1 2e       	mov	r15, r17
    7824:	00 e0       	ldi	r16, 0x00	; 0
    7826:	10 e0       	ldi	r17, 0x00	; 0
    7828:	20 e0       	ldi	r18, 0x00	; 0
    782a:	30 e0       	ldi	r19, 0x00	; 0
    782c:	a9 01       	movw	r20, r18
    782e:	0e 94 c8 6d 	call	0xdb90	; 0xdb90 <map(long, long, long, long, long)>
    7832:	20 e4       	ldi	r18, 0x40	; 64
    7834:	30 e0       	ldi	r19, 0x00	; 0
    7836:	c9 01       	movw	r24, r18
    7838:	86 1b       	sub	r24, r22
    783a:	97 0b       	sbc	r25, r23
    783c:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    7840:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
    7844:	0f 90       	pop	r0
    7846:	0f 90       	pop	r0
    7848:	0f 90       	pop	r0
    784a:	0f 90       	pop	r0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:65
                                         0, 10000, 0, 44);

  /* Limit to 0, We never go under sea level */
  if (altitude_graph.y_altitude <= 0) altitude_graph.y_altitude = 63;
    784c:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <altitude_graph+0x4>
    7850:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <altitude_graph+0x5>
    7854:	18 16       	cp	r1, r24
    7856:	19 06       	cpc	r1, r25
    7858:	34 f0       	brlt	.+12     	; 0x7866 <AltitudeMenu()+0x44c>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:65 (discriminator 1)
    785a:	8f e3       	ldi	r24, 0x3F	; 63
    785c:	90 e0       	ldi	r25, 0x00	; 0
    785e:	90 93 3d 01 	sts	0x013D, r25	; 0x80013d <altitude_graph+0x5>
    7862:	80 93 3c 01 	sts	0x013C, r24	; 0x80013c <altitude_graph+0x4>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:68

  /* Draw Mesh */
  if (altitude_graph.drawMesh) {
    7866:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <altitude_graph+0x1>
    786a:	88 23       	and	r24, r24
    786c:	f9 f0       	breq	.+62     	; 0x78ac <AltitudeMenu()+0x492>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:69
    for (int y = 20; y <= 64; y += 6)
    786e:	c4 e1       	ldi	r28, 0x14	; 20
    7870:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:72
      for (int x = 0; x <= 128; x++) {
        display.drawPixel(x, y, logic.lastState);
        logic.lastState = !logic.lastState;
    7872:	ff 24       	eor	r15, r15
    7874:	f3 94       	inc	r15
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:70
  if (altitude_graph.y_altitude <= 0) altitude_graph.y_altitude = 63;

  /* Draw Mesh */
  if (altitude_graph.drawMesh) {
    for (int y = 20; y <= 64; y += 6)
      for (int x = 0; x <= 128; x++) {
    7876:	10 e0       	ldi	r17, 0x00	; 0
    7878:	00 e0       	ldi	r16, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:71 (discriminator 2)
        display.drawPixel(x, y, logic.lastState);
    787a:	20 91 47 01 	lds	r18, 0x0147	; 0x800147 <logic>
    787e:	30 e0       	ldi	r19, 0x00	; 0
    7880:	ae 01       	movw	r20, r28
    7882:	b8 01       	movw	r22, r16
    7884:	8d ee       	ldi	r24, 0xED	; 237
    7886:	98 e0       	ldi	r25, 0x08	; 8
    7888:	0e 94 25 4a 	call	0x944a	; 0x944a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:72 (discriminator 2)
        logic.lastState = !logic.lastState;
    788c:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <logic>
    7890:	8f 25       	eor	r24, r15
    7892:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <logic>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:70 (discriminator 2)
  if (altitude_graph.y_altitude <= 0) altitude_graph.y_altitude = 63;

  /* Draw Mesh */
  if (altitude_graph.drawMesh) {
    for (int y = 20; y <= 64; y += 6)
      for (int x = 0; x <= 128; x++) {
    7896:	0f 5f       	subi	r16, 0xFF	; 255
    7898:	1f 4f       	sbci	r17, 0xFF	; 255
    789a:	01 38       	cpi	r16, 0x81	; 129
    789c:	11 05       	cpc	r17, r1
    789e:	69 f7       	brne	.-38     	; 0x787a <AltitudeMenu()+0x460>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:69 (discriminator 2)
  /* Limit to 0, We never go under sea level */
  if (altitude_graph.y_altitude <= 0) altitude_graph.y_altitude = 63;

  /* Draw Mesh */
  if (altitude_graph.drawMesh) {
    for (int y = 20; y <= 64; y += 6)
    78a0:	26 96       	adiw	r28, 0x06	; 6
    78a2:	c4 34       	cpi	r28, 0x44	; 68
    78a4:	d1 05       	cpc	r29, r1
    78a6:	39 f7       	brne	.-50     	; 0x7876 <AltitudeMenu()+0x45c>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:74
      for (int x = 0; x <= 128; x++) {
        display.drawPixel(x, y, logic.lastState);
        logic.lastState = !logic.lastState;
      }
    altitude_graph.drawMesh = false;
    78a8:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <altitude_graph+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:78
  }

  /* Draw Altitude Line */
  display.drawLine(altitude_graph.x_increment, 64,
    78ac:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <altitude_graph+0x2>
    78b0:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <altitude_graph+0x3>
    78b4:	00 91 3c 01 	lds	r16, 0x013C	; 0x80013c <altitude_graph+0x4>
    78b8:	10 91 3d 01 	lds	r17, 0x013D	; 0x80013d <altitude_graph+0x5>
    78bc:	ee 24       	eor	r14, r14
    78be:	e3 94       	inc	r14
    78c0:	f1 2c       	mov	r15, r1
    78c2:	9b 01       	movw	r18, r22
    78c4:	40 e4       	ldi	r20, 0x40	; 64
    78c6:	50 e0       	ldi	r21, 0x00	; 0
    78c8:	8d ee       	ldi	r24, 0xED	; 237
    78ca:	98 e0       	ldi	r25, 0x08	; 8
    78cc:	0e 94 6c 41 	call	0x82d8	; 0x82d8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:81
                   altitude_graph.x_increment, altitude_graph.y_altitude,
                   WHITE);
  altitude_graph.x_increment++;
    78d0:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <altitude_graph+0x2>
    78d4:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <altitude_graph+0x3>
    78d8:	01 96       	adiw	r24, 0x01	; 1
    78da:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <altitude_graph+0x3>
    78de:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <altitude_graph+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:82
  altitude_graph.altitude_indicator_old = altitude_graph.altitude_indicator_new;
    78e2:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <altitude_graph+0xa>
    78e6:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <altitude_graph+0xb>
    78ea:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <altitude_graph+0xc>
    78ee:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <altitude_graph+0xd>
    78f2:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <altitude_graph+0x6>
    78f6:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <altitude_graph+0x7>
    78fa:	a0 93 40 01 	sts	0x0140, r26	; 0x800140 <altitude_graph+0x8>
    78fe:	b0 93 41 01 	sts	0x0141, r27	; 0x800141 <altitude_graph+0x9>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:84

  display.display();
    7902:	8d ee       	ldi	r24, 0xED	; 237
    7904:	98 e0       	ldi	r25, 0x08	; 8
    7906:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:86
  decodeGPSNMEA(1000);
}
    790a:	df 91       	pop	r29
    790c:	cf 91       	pop	r28
    790e:	1f 91       	pop	r17
    7910:	0f 91       	pop	r16
    7912:	ff 90       	pop	r15
    7914:	ef 90       	pop	r14
    7916:	df 90       	pop	r13
    7918:	cf 90       	pop	r12
    791a:	bf 90       	pop	r11
    791c:	af 90       	pop	r10
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:85
                   WHITE);
  altitude_graph.x_increment++;
  altitude_graph.altitude_indicator_old = altitude_graph.altitude_indicator_new;

  display.display();
  decodeGPSNMEA(1000);
    791e:	0c 94 fc 26 	jmp	0x4df8	; 0x4df8 <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:34
  display.setCursor(1, 11);
  if (gps.altitude.meters() > 0) {
    display.print(gps.altitude.meters());
    display.print('m');
  } else {
    if (gps_var.show_question_mark)
    7922:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    7926:	88 23       	and	r24, r24
    7928:	69 f0       	breq	.+26     	; 0x7944 <AltitudeMenu()+0x52a>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:35
      display.print(F("NO DATA..."));
    792a:	60 e5       	ldi	r22, 0x50	; 80
    792c:	74 e0       	ldi	r23, 0x04	; 4
    792e:	8d ee       	ldi	r24, 0xED	; 237
    7930:	98 e0       	ldi	r25, 0x08	; 8
    7932:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:38
    else
      display.print(' ');
    gps_var.show_question_mark = !gps_var.show_question_mark;
    7936:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <gps_var+0x5>
    793a:	91 e0       	ldi	r25, 0x01	; 1
    793c:	89 27       	eor	r24, r25
    793e:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <gps_var+0x5>
    7942:	a0 ce       	rjmp	.-704    	; 0x7684 <AltitudeMenu()+0x26a>
C:\Users\nyvir\Documents\GitHub\GPSKit/AltitudeMenu.ino:37
    display.print('m');
  } else {
    if (gps_var.show_question_mark)
      display.print(F("NO DATA..."));
    else
      display.print(' ');
    7944:	60 e2       	ldi	r22, 0x20	; 32
    7946:	8d ee       	ldi	r24, 0xED	; 237
    7948:	98 e0       	ldi	r25, 0x08	; 8
    794a:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    794e:	f3 cf       	rjmp	.-26     	; 0x7936 <AltitudeMenu()+0x51c>

00007950 <UIMenu()>:
_Z6UIMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:1
void UIMenu(void){
    7950:	9f 92       	push	r9
    7952:	af 92       	push	r10
    7954:	bf 92       	push	r11
    7956:	cf 92       	push	r12
    7958:	df 92       	push	r13
    795a:	ef 92       	push	r14
    795c:	ff 92       	push	r15
    795e:	0f 93       	push	r16
    7960:	1f 93       	push	r17
    7962:	cf 93       	push	r28
    7964:	df 93       	push	r29
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:2
        BButtonISR(); /* Get B Button Input */
    7966:	0e 94 cc 10 	call	0x2198	; 0x2198 <BButtonISR()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:3
        CButton(); /* Get C Button Input */
    796a:	0e 94 1f 11 	call	0x223e	; 0x223e <CButton()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:5

        if((menu.iconX > 96) && (menu.iconY == 32)) {
    796e:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <menu+0x3>
    7972:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <menu+0x4>
    7976:	81 36       	cpi	r24, 0x61	; 97
    7978:	91 05       	cpc	r25, r1
    797a:	74 f0       	brlt	.+28     	; 0x7998 <UIMenu()+0x48>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:5 (discriminator 1)
    797c:	80 91 37 09 	lds	r24, 0x0937	; 0x800937 <menu+0x5>
    7980:	90 91 38 09 	lds	r25, 0x0938	; 0x800938 <menu+0x6>
    7984:	80 97       	sbiw	r24, 0x20	; 32
    7986:	41 f4       	brne	.+16     	; 0x7998 <UIMenu()+0x48>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:7
                /* Move Icon Cursor to Home */
                menu.iconX = 0;
    7988:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <menu+0x4>
    798c:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <menu+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:8
                menu.iconY = 0;
    7990:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <menu+0x6>
    7994:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <menu+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:11
        }

        if((menu.iconX < 0) && (menu.iconY == 0)) {
    7998:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <menu+0x3>
    799c:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <menu+0x4>
    79a0:	97 ff       	sbrs	r25, 7
    79a2:	12 c0       	rjmp	.+36     	; 0x79c8 <UIMenu()+0x78>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:11 (discriminator 1)
    79a4:	80 91 37 09 	lds	r24, 0x0937	; 0x800937 <menu+0x5>
    79a8:	90 91 38 09 	lds	r25, 0x0938	; 0x800938 <menu+0x6>
    79ac:	89 2b       	or	r24, r25
    79ae:	61 f4       	brne	.+24     	; 0x79c8 <UIMenu()+0x78>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:13
                /* Move Icon Cursor to END */
                menu.iconX = 96;
    79b0:	80 e6       	ldi	r24, 0x60	; 96
    79b2:	90 e0       	ldi	r25, 0x00	; 0
    79b4:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <menu+0x4>
    79b8:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <menu+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:14
                menu.iconY = 32;
    79bc:	80 e2       	ldi	r24, 0x20	; 32
    79be:	90 e0       	ldi	r25, 0x00	; 0
    79c0:	90 93 38 09 	sts	0x0938, r25	; 0x800938 <menu+0x6>
    79c4:	80 93 37 09 	sts	0x0937, r24	; 0x800937 <menu+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:17
        }

        if((menu.iconX > 96) && (menu.iconY == 0)) {
    79c8:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <menu+0x3>
    79cc:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <menu+0x4>
    79d0:	81 36       	cpi	r24, 0x61	; 97
    79d2:	91 05       	cpc	r25, r1
    79d4:	84 f0       	brlt	.+32     	; 0x79f6 <UIMenu()+0xa6>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:17 (discriminator 1)
    79d6:	80 91 37 09 	lds	r24, 0x0937	; 0x800937 <menu+0x5>
    79da:	90 91 38 09 	lds	r25, 0x0938	; 0x800938 <menu+0x6>
    79de:	89 2b       	or	r24, r25
    79e0:	51 f4       	brne	.+20     	; 0x79f6 <UIMenu()+0xa6>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:19
                /* Move to Second Line */
                menu.iconX = 0;
    79e2:	10 92 36 09 	sts	0x0936, r1	; 0x800936 <menu+0x4>
    79e6:	10 92 35 09 	sts	0x0935, r1	; 0x800935 <menu+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:20
                menu.iconY = 32;
    79ea:	80 e2       	ldi	r24, 0x20	; 32
    79ec:	90 e0       	ldi	r25, 0x00	; 0
    79ee:	90 93 38 09 	sts	0x0938, r25	; 0x800938 <menu+0x6>
    79f2:	80 93 37 09 	sts	0x0937, r24	; 0x800937 <menu+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:23
        }

        if((menu.iconX < 0) && (menu.iconY == 32)) {
    79f6:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <menu+0x3>
    79fa:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <menu+0x4>
    79fe:	97 ff       	sbrs	r25, 7
    7a00:	10 c0       	rjmp	.+32     	; 0x7a22 <UIMenu()+0xd2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:23 (discriminator 1)
    7a02:	80 91 37 09 	lds	r24, 0x0937	; 0x800937 <menu+0x5>
    7a06:	90 91 38 09 	lds	r25, 0x0938	; 0x800938 <menu+0x6>
    7a0a:	80 97       	sbiw	r24, 0x20	; 32
    7a0c:	51 f4       	brne	.+20     	; 0x7a22 <UIMenu()+0xd2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:25
                /* Move to First Line */
                menu.iconX = 96;
    7a0e:	80 e6       	ldi	r24, 0x60	; 96
    7a10:	90 e0       	ldi	r25, 0x00	; 0
    7a12:	90 93 36 09 	sts	0x0936, r25	; 0x800936 <menu+0x4>
    7a16:	80 93 35 09 	sts	0x0935, r24	; 0x800935 <menu+0x3>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:26
                menu.iconY = 0;
    7a1a:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <menu+0x6>
    7a1e:	10 92 37 09 	sts	0x0937, r1	; 0x800937 <menu+0x5>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:30
        }

        /* Get Tab ID on First Line */
        if ((menu.iconY == 0) && (menu.switchMenu == false)) {
    7a22:	80 91 37 09 	lds	r24, 0x0937	; 0x800937 <menu+0x5>
    7a26:	90 91 38 09 	lds	r25, 0x0938	; 0x800938 <menu+0x6>
    7a2a:	00 97       	sbiw	r24, 0x00	; 0
    7a2c:	09 f0       	breq	.+2      	; 0x7a30 <UIMenu()+0xe0>
    7a2e:	03 c1       	rjmp	.+518    	; 0x7c36 <UIMenu()+0x2e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:30 (discriminator 1)
    7a30:	80 91 34 09 	lds	r24, 0x0934	; 0x800934 <menu+0x2>
    7a34:	81 11       	cpse	r24, r1
    7a36:	0b c0       	rjmp	.+22     	; 0x7a4e <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:31
                if(menu.iconX == 0)
    7a38:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <menu+0x3>
    7a3c:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <menu+0x4>
    7a40:	00 97       	sbiw	r24, 0x00	; 0
    7a42:	09 f0       	breq	.+2      	; 0x7a46 <UIMenu()+0xf6>
    7a44:	e1 c0       	rjmp	.+450    	; 0x7c08 <UIMenu()+0x2b8>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:32
                        menu.tab = 0;
    7a46:	10 92 33 09 	sts	0x0933, r1	; 0x800933 <menu+0x1>
    7a4a:	10 92 32 09 	sts	0x0932, r1	; 0x800932 <menu>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:57
                        menu.tab = 7;
                }
        }

        /* Show Clock On Standby */
        menu.tick = millis();
    7a4e:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    7a52:	60 93 3b 09 	sts	0x093B, r22	; 0x80093b <menu+0x9>
    7a56:	70 93 3c 09 	sts	0x093C, r23	; 0x80093c <menu+0xa>
    7a5a:	80 93 3d 09 	sts	0x093D, r24	; 0x80093d <menu+0xb>
    7a5e:	90 93 3e 09 	sts	0x093E, r25	; 0x80093e <menu+0xc>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:58
        if(menu.tick - menu.lastTick >= 60000) /* Wait for 1 minute to Standby */
    7a62:	00 91 3f 09 	lds	r16, 0x093F	; 0x80093f <menu+0xd>
    7a66:	10 91 40 09 	lds	r17, 0x0940	; 0x800940 <menu+0xe>
    7a6a:	20 91 41 09 	lds	r18, 0x0941	; 0x800941 <menu+0xf>
    7a6e:	30 91 42 09 	lds	r19, 0x0942	; 0x800942 <menu+0x10>
    7a72:	60 1b       	sub	r22, r16
    7a74:	71 0b       	sbc	r23, r17
    7a76:	82 0b       	sbc	r24, r18
    7a78:	93 0b       	sbc	r25, r19
    7a7a:	60 36       	cpi	r22, 0x60	; 96
    7a7c:	7a 4e       	sbci	r23, 0xEA	; 234
    7a7e:	81 05       	cpc	r24, r1
    7a80:	91 05       	cpc	r25, r1
    7a82:	08 f4       	brcc	.+2      	; 0x7a86 <UIMenu()+0x136>
    7a84:	2b c1       	rjmp	.+598    	; 0x7cdc <UIMenu()+0x38c>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:60
        {
                display.setTextSize(2);
    7a86:	62 e0       	ldi	r22, 0x02	; 2
    7a88:	8d ee       	ldi	r24, 0xED	; 237
    7a8a:	98 e0       	ldi	r25, 0x08	; 8
    7a8c:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX12setTextColorEj():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:141
    @param   c   16-bit 5-6-5 Color to draw text with
    @note    For 'transparent' background, background and foreground
             are set to same color rather than using a separate flag.
  */
  /**********************************************************************/
  void setTextColor(uint16_t c) { textcolor = textbgcolor = c; }
    7a90:	81 e0       	ldi	r24, 0x01	; 1
    7a92:	90 e0       	ldi	r25, 0x00	; 0
    7a94:	90 93 00 09 	sts	0x0900, r25	; 0x800900 <display+0x13>
    7a98:	80 93 ff 08 	sts	0x08FF, r24	; 0x8008ff <display+0x12>
    7a9c:	90 93 fe 08 	sts	0x08FE, r25	; 0x8008fe <display+0x11>
    7aa0:	80 93 fd 08 	sts	0x08FD, r24	; 0x8008fd <display+0x10>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7aa4:	3f e1       	ldi	r19, 0x1F	; 31
    7aa6:	e3 2e       	mov	r14, r19
    7aa8:	f1 2c       	mov	r15, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7aaa:	4a e1       	ldi	r20, 0x1A	; 26
    7aac:	c4 2e       	mov	r12, r20
    7aae:	d1 2c       	mov	r13, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7ab0:	ce e5       	ldi	r28, 0x5E	; 94
    7ab2:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7ab4:	59 e1       	ldi	r21, 0x19	; 25
    7ab6:	a5 2e       	mov	r10, r21
    7ab8:	b1 2c       	mov	r11, r1
    7aba:	02 e2       	ldi	r16, 0x22	; 34
    7abc:	10 e0       	ldi	r17, 0x00	; 0
_Z6UIMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:63
                display.setTextColor(WHITE);
                while (true) {
                        menu.lastTick = millis();
    7abe:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    7ac2:	60 93 3f 09 	sts	0x093F, r22	; 0x80093f <menu+0xd>
    7ac6:	70 93 40 09 	sts	0x0940, r23	; 0x800940 <menu+0xe>
    7aca:	80 93 41 09 	sts	0x0941, r24	; 0x800941 <menu+0xf>
    7ace:	90 93 42 09 	sts	0x0942, r25	; 0x800942 <menu+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:65

                        if(!digitalRead(C_Pin)) {
    7ad2:	80 e0       	ldi	r24, 0x00	; 0
    7ad4:	0e 94 95 6b 	call	0xd72a	; 0xd72a <digitalRead>
    7ad8:	89 2b       	or	r24, r25
    7ada:	09 f4       	brne	.+2      	; 0x7ade <UIMenu()+0x18e>
    7adc:	fb c0       	rjmp	.+502    	; 0x7cd4 <UIMenu()+0x384>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:68
                                break;
                        }
                        decodeGPSNMEA(1000);
    7ade:	0e 94 fc 26 	call	0x4df8	; 0x4df8 <decodeGPSNMEA(unsigned long) [clone .constprop.6]>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:69
                        display.clearDisplay();
    7ae2:	8d ee       	ldi	r24, 0xED	; 237
    7ae4:	98 e0       	ldi	r25, 0x08	; 8
    7ae6:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7aea:	f0 92 fa 08 	sts	0x08FA, r15	; 0x8008fa <display+0xd>
    7aee:	e0 92 f9 08 	sts	0x08F9, r14	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7af2:	d0 92 fc 08 	sts	0x08FC, r13	; 0x8008fc <display+0xf>
    7af6:	c0 92 fb 08 	sts	0x08FB, r12	; 0x8008fb <display+0xe>
_Z6UIMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:71
                        display.setCursor(31, 26);
                        display.setTextSize(2);
    7afa:	62 e0       	ldi	r22, 0x02	; 2
    7afc:	8d ee       	ldi	r24, 0xED	; 237
    7afe:	98 e0       	ldi	r25, 0x08	; 8
    7b00:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:72
                        if((gps.time.hour() + getTimeZone(gps.location.lng())) < 10)
    7b04:	82 e4       	ldi	r24, 0x42	; 66
    7b06:	98 e0       	ldi	r25, 0x08	; 8
    7b08:	0e 94 cf 65 	call	0xcb9e	; 0xcb9e <TinyGPSTime::hour()>
    7b0c:	98 2e       	mov	r9, r24
    7b0e:	82 e1       	ldi	r24, 0x12	; 18
    7b10:	98 e0       	ldi	r25, 0x08	; 8
    7b12:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    7b16:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    7b1a:	89 0d       	add	r24, r9
    7b1c:	91 1d       	adc	r25, r1
    7b1e:	0a 97       	sbiw	r24, 0x0a	; 10
    7b20:	2c f4       	brge	.+10     	; 0x7b2c <UIMenu()+0x1dc>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:73
                                display.print(' ');
    7b22:	60 e2       	ldi	r22, 0x20	; 32
    7b24:	8d ee       	ldi	r24, 0xED	; 237
    7b26:	98 e0       	ldi	r25, 0x08	; 8
    7b28:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:74
                        display.print(gps.time.hour() + getTimeZone(gps.location.lng()));
    7b2c:	82 e4       	ldi	r24, 0x42	; 66
    7b2e:	98 e0       	ldi	r25, 0x08	; 8
    7b30:	0e 94 cf 65 	call	0xcb9e	; 0xcb9e <TinyGPSTime::hour()>
    7b34:	98 2e       	mov	r9, r24
    7b36:	82 e1       	ldi	r24, 0x12	; 18
    7b38:	98 e0       	ldi	r25, 0x08	; 8
    7b3a:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    7b3e:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    7b42:	bc 01       	movw	r22, r24
    7b44:	69 0d       	add	r22, r9
    7b46:	71 1d       	adc	r23, r1
    7b48:	4a e0       	ldi	r20, 0x0A	; 10
    7b4a:	50 e0       	ldi	r21, 0x00	; 0
    7b4c:	8d ee       	ldi	r24, 0xED	; 237
    7b4e:	98 e0       	ldi	r25, 0x08	; 8
    7b50:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:75
                        display.print(':');
    7b54:	6a e3       	ldi	r22, 0x3A	; 58
    7b56:	8d ee       	ldi	r24, 0xED	; 237
    7b58:	98 e0       	ldi	r25, 0x08	; 8
    7b5a:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:76
                        if(gps.time.minute() < 10)
    7b5e:	82 e4       	ldi	r24, 0x42	; 66
    7b60:	98 e0       	ldi	r25, 0x08	; 8
    7b62:	0e 94 dd 65 	call	0xcbba	; 0xcbba <TinyGPSTime::minute()>
    7b66:	8a 30       	cpi	r24, 0x0A	; 10
    7b68:	28 f4       	brcc	.+10     	; 0x7b74 <UIMenu()+0x224>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:77
                                display.print('0');
    7b6a:	60 e3       	ldi	r22, 0x30	; 48
    7b6c:	8d ee       	ldi	r24, 0xED	; 237
    7b6e:	98 e0       	ldi	r25, 0x08	; 8
    7b70:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:78
                        display.print(gps.time.minute());
    7b74:	82 e4       	ldi	r24, 0x42	; 66
    7b76:	98 e0       	ldi	r25, 0x08	; 8
    7b78:	0e 94 dd 65 	call	0xcbba	; 0xcbba <TinyGPSTime::minute()>
    7b7c:	4a e0       	ldi	r20, 0x0A	; 10
    7b7e:	50 e0       	ldi	r21, 0x00	; 0
    7b80:	68 2f       	mov	r22, r24
    7b82:	8d ee       	ldi	r24, 0xED	; 237
    7b84:	98 e0       	ldi	r25, 0x08	; 8
    7b86:	0e 94 d5 6c 	call	0xd9aa	; 0xd9aa <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:80

                        display.setTextSize(1);
    7b8a:	61 e0       	ldi	r22, 0x01	; 1
    7b8c:	8d ee       	ldi	r24, 0xED	; 237
    7b8e:	98 e0       	ldi	r25, 0x08	; 8
    7b90:	0e 94 11 4a 	call	0x9422	; 0x9422 <Adafruit_GFX::setTextSize(unsigned char)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7b94:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    7b98:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7b9c:	b0 92 fc 08 	sts	0x08FC, r11	; 0x8008fc <display+0xf>
    7ba0:	a0 92 fb 08 	sts	0x08FB, r10	; 0x8008fb <display+0xe>
_Z6UIMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:82
                        display.setCursor(94, 25);
                        if(gps.time.second() < 10)
    7ba4:	82 e4       	ldi	r24, 0x42	; 66
    7ba6:	98 e0       	ldi	r25, 0x08	; 8
    7ba8:	0e 94 f3 65 	call	0xcbe6	; 0xcbe6 <TinyGPSTime::second()>
    7bac:	8a 30       	cpi	r24, 0x0A	; 10
    7bae:	28 f4       	brcc	.+10     	; 0x7bba <UIMenu()+0x26a>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:83
                                display.print('0');
    7bb0:	60 e3       	ldi	r22, 0x30	; 48
    7bb2:	8d ee       	ldi	r24, 0xED	; 237
    7bb4:	98 e0       	ldi	r25, 0x08	; 8
    7bb6:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:84
                        display.print(gps.time.second());
    7bba:	82 e4       	ldi	r24, 0x42	; 66
    7bbc:	98 e0       	ldi	r25, 0x08	; 8
    7bbe:	0e 94 f3 65 	call	0xcbe6	; 0xcbe6 <TinyGPSTime::second()>
    7bc2:	4a e0       	ldi	r20, 0x0A	; 10
    7bc4:	50 e0       	ldi	r21, 0x00	; 0
    7bc6:	68 2f       	mov	r22, r24
    7bc8:	8d ee       	ldi	r24, 0xED	; 237
    7bca:	98 e0       	ldi	r25, 0x08	; 8
    7bcc:	0e 94 d5 6c 	call	0xd9aa	; 0xd9aa <Print::print(unsigned char, int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:87

                        /* Show Time Zone */
                        if(getTimeZone(gps.location.lng()) == 0)
    7bd0:	82 e1       	ldi	r24, 0x12	; 18
    7bd2:	98 e0       	ldi	r25, 0x08	; 8
    7bd4:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    7bd8:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
_ZN12Adafruit_GFX9setCursorEii():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:129
    @param  x    X coordinate in pixels
    @param  y    Y coordinate in pixels
  */
  /**********************************************************************/
  void setCursor(int16_t x, int16_t y) {
    cursor_x = x;
    7bdc:	d0 93 fa 08 	sts	0x08FA, r29	; 0x8008fa <display+0xd>
    7be0:	c0 93 f9 08 	sts	0x08F9, r28	; 0x8008f9 <display+0xc>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.h:130
    cursor_y = y;
    7be4:	10 93 fc 08 	sts	0x08FC, r17	; 0x8008fc <display+0xf>
    7be8:	00 93 fb 08 	sts	0x08FB, r16	; 0x8008fb <display+0xe>
_Z6UIMenuv():
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:87
    7bec:	89 2b       	or	r24, r25
    7bee:	09 f0       	breq	.+2      	; 0x7bf2 <UIMenu()+0x2a2>
    7bf0:	4f c0       	rjmp	.+158    	; 0x7c90 <UIMenu()+0x340>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:90
                        {
                          display.setCursor(94, 34);
                          display.print(F("UTC"));
    7bf2:	64 ef       	ldi	r22, 0xF4	; 244
    7bf4:	71 e0       	ldi	r23, 0x01	; 1
    7bf6:	8d ee       	ldi	r24, 0xED	; 237
    7bf8:	98 e0       	ldi	r25, 0x08	; 8
    7bfa:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:99
                          if(getTimeZone(gps.location.lng()) > 0)
                              display.print('+');
                          display.print(getTimeZone(gps.location.lng()));
                        }

                        display.display();
    7bfe:	8d ee       	ldi	r24, 0xED	; 237
    7c00:	98 e0       	ldi	r25, 0x08	; 8
    7c02:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:100
                }
    7c06:	5b cf       	rjmp	.-330    	; 0x7abe <UIMenu()+0x16e>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:33

        /* Get Tab ID on First Line */
        if ((menu.iconY == 0) && (menu.switchMenu == false)) {
                if(menu.iconX == 0)
                        menu.tab = 0;
                if(menu.iconX == 32)
    7c08:	80 32       	cpi	r24, 0x20	; 32
    7c0a:	91 05       	cpc	r25, r1
    7c0c:	39 f4       	brne	.+14     	; 0x7c1c <UIMenu()+0x2cc>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:34
                        menu.tab = 1;
    7c0e:	81 e0       	ldi	r24, 0x01	; 1
    7c10:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:52
                        menu.tab = 5;
                if(menu.iconX == 64)
                        menu.tab = 6;
                if(menu.iconX == 96) {
                        waypoint.isStartUp = true;
                        menu.tab = 7;
    7c12:	90 93 33 09 	sts	0x0933, r25	; 0x800933 <menu+0x1>
    7c16:	80 93 32 09 	sts	0x0932, r24	; 0x800932 <menu>
    7c1a:	19 cf       	rjmp	.-462    	; 0x7a4e <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:35
        if ((menu.iconY == 0) && (menu.switchMenu == false)) {
                if(menu.iconX == 0)
                        menu.tab = 0;
                if(menu.iconX == 32)
                        menu.tab = 1;
                if(menu.iconX == 64)
    7c1c:	80 34       	cpi	r24, 0x40	; 64
    7c1e:	91 05       	cpc	r25, r1
    7c20:	19 f4       	brne	.+6      	; 0x7c28 <UIMenu()+0x2d8>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:36
                        menu.tab = 2;
    7c22:	82 e0       	ldi	r24, 0x02	; 2
    7c24:	90 e0       	ldi	r25, 0x00	; 0
    7c26:	f5 cf       	rjmp	.-22     	; 0x7c12 <UIMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:37
                if(menu.iconX == 96)
    7c28:	80 36       	cpi	r24, 0x60	; 96
    7c2a:	91 05       	cpc	r25, r1
    7c2c:	09 f0       	breq	.+2      	; 0x7c30 <UIMenu()+0x2e0>
    7c2e:	0f cf       	rjmp	.-482    	; 0x7a4e <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:38
                        menu.tab = 3;
    7c30:	83 e0       	ldi	r24, 0x03	; 3
    7c32:	90 e0       	ldi	r25, 0x00	; 0
    7c34:	ee cf       	rjmp	.-36     	; 0x7c12 <UIMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:41
        }
        /* Get Tab ID on Second Line */
        if((menu.iconY == 32) && (menu.switchMenu == false)) {
    7c36:	80 97       	sbiw	r24, 0x20	; 32
    7c38:	09 f0       	breq	.+2      	; 0x7c3c <UIMenu()+0x2ec>
    7c3a:	09 cf       	rjmp	.-494    	; 0x7a4e <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:41 (discriminator 1)
    7c3c:	80 91 34 09 	lds	r24, 0x0934	; 0x800934 <menu+0x2>
    7c40:	81 11       	cpse	r24, r1
    7c42:	05 cf       	rjmp	.-502    	; 0x7a4e <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:42
                if(menu.iconX == 0) {
    7c44:	80 91 35 09 	lds	r24, 0x0935	; 0x800935 <menu+0x3>
    7c48:	90 91 36 09 	lds	r25, 0x0936	; 0x800936 <menu+0x4>
    7c4c:	00 97       	sbiw	r24, 0x00	; 0
    7c4e:	51 f4       	brne	.+20     	; 0x7c64 <UIMenu()+0x314>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:43
                        menu.tab = 4;
    7c50:	84 e0       	ldi	r24, 0x04	; 4
    7c52:	90 e0       	ldi	r25, 0x00	; 0
    7c54:	90 93 33 09 	sts	0x0933, r25	; 0x800933 <menu+0x1>
    7c58:	80 93 32 09 	sts	0x0932, r24	; 0x800932 <menu>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:44
                        altitude_graph.drawMesh = true;
    7c5c:	81 e0       	ldi	r24, 0x01	; 1
    7c5e:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <altitude_graph+0x1>
    7c62:	f5 ce       	rjmp	.-534    	; 0x7a4e <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:46
                }
                if(menu.iconX == 32)
    7c64:	80 32       	cpi	r24, 0x20	; 32
    7c66:	91 05       	cpc	r25, r1
    7c68:	19 f4       	brne	.+6      	; 0x7c70 <UIMenu()+0x320>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:47
                        menu.tab = 5;
    7c6a:	85 e0       	ldi	r24, 0x05	; 5
    7c6c:	90 e0       	ldi	r25, 0x00	; 0
    7c6e:	d1 cf       	rjmp	.-94     	; 0x7c12 <UIMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:48
                if(menu.iconX == 64)
    7c70:	80 34       	cpi	r24, 0x40	; 64
    7c72:	91 05       	cpc	r25, r1
    7c74:	19 f4       	brne	.+6      	; 0x7c7c <UIMenu()+0x32c>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:49
                        menu.tab = 6;
    7c76:	86 e0       	ldi	r24, 0x06	; 6
    7c78:	90 e0       	ldi	r25, 0x00	; 0
    7c7a:	cb cf       	rjmp	.-106    	; 0x7c12 <UIMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:50
                if(menu.iconX == 96) {
    7c7c:	80 36       	cpi	r24, 0x60	; 96
    7c7e:	91 05       	cpc	r25, r1
    7c80:	09 f0       	breq	.+2      	; 0x7c84 <UIMenu()+0x334>
    7c82:	e5 ce       	rjmp	.-566    	; 0x7a4e <UIMenu()+0xfe>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:51
                        waypoint.isStartUp = true;
    7c84:	81 e0       	ldi	r24, 0x01	; 1
    7c86:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <waypoint+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:52
                        menu.tab = 7;
    7c8a:	87 e0       	ldi	r24, 0x07	; 7
    7c8c:	90 e0       	ldi	r25, 0x00	; 0
    7c8e:	c1 cf       	rjmp	.-126    	; 0x7c12 <UIMenu()+0x2c2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:93
                        {
                          display.setCursor(94, 34);
                          display.print(F("UTC"));
                        }else{
                          display.setCursor(94, 34);
                          display.print(F("GMT"));
    7c90:	60 ef       	ldi	r22, 0xF0	; 240
    7c92:	71 e0       	ldi	r23, 0x01	; 1
    7c94:	8d ee       	ldi	r24, 0xED	; 237
    7c96:	98 e0       	ldi	r25, 0x08	; 8
    7c98:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <Print::print(__FlashStringHelper const*)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:94
                          if(getTimeZone(gps.location.lng()) > 0)
    7c9c:	82 e1       	ldi	r24, 0x12	; 18
    7c9e:	98 e0       	ldi	r25, 0x08	; 8
    7ca0:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    7ca4:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    7ca8:	18 16       	cp	r1, r24
    7caa:	19 06       	cpc	r1, r25
    7cac:	2c f4       	brge	.+10     	; 0x7cb8 <UIMenu()+0x368>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:95
                              display.print('+');
    7cae:	6b e2       	ldi	r22, 0x2B	; 43
    7cb0:	8d ee       	ldi	r24, 0xED	; 237
    7cb2:	98 e0       	ldi	r25, 0x08	; 8
    7cb4:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:96
                          display.print(getTimeZone(gps.location.lng()));
    7cb8:	82 e1       	ldi	r24, 0x12	; 18
    7cba:	98 e0       	ldi	r25, 0x08	; 8
    7cbc:	0e 94 1e 65 	call	0xca3c	; 0xca3c <TinyGPSLocation::lng()>
    7cc0:	0e 94 1c 13 	call	0x2638	; 0x2638 <getTimeZone(double)>
    7cc4:	4a e0       	ldi	r20, 0x0A	; 10
    7cc6:	50 e0       	ldi	r21, 0x00	; 0
    7cc8:	bc 01       	movw	r22, r24
    7cca:	8d ee       	ldi	r24, 0xED	; 237
    7ccc:	98 e0       	ldi	r25, 0x08	; 8
    7cce:	0e 94 c1 6c 	call	0xd982	; 0xd982 <Print::print(int, int)>
    7cd2:	95 cf       	rjmp	.-214    	; 0x7bfe <UIMenu()+0x2ae>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:101
                        }

                        display.display();
                }
                display.clearDisplay();
    7cd4:	8d ee       	ldi	r24, 0xED	; 237
    7cd6:	98 e0       	ldi	r25, 0x08	; 8
    7cd8:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:107
        }

        /* End Show Clock On Standby */

        /* Draw Menu Icons */
        display.drawBitmap(4, 4, menuGPS, 24, 24, 1);
    7cdc:	cc 24       	eor	r12, r12
    7cde:	c3 94       	inc	r12
    7ce0:	d1 2c       	mov	r13, r1
    7ce2:	98 e1       	ldi	r25, 0x18	; 24
    7ce4:	e9 2e       	mov	r14, r25
    7ce6:	f1 2c       	mov	r15, r1
    7ce8:	08 e1       	ldi	r16, 0x18	; 24
    7cea:	10 e0       	ldi	r17, 0x00	; 0
    7cec:	21 e2       	ldi	r18, 0x21	; 33
    7cee:	34 e1       	ldi	r19, 0x14	; 20
    7cf0:	44 e0       	ldi	r20, 0x04	; 4
    7cf2:	50 e0       	ldi	r21, 0x00	; 0
    7cf4:	64 e0       	ldi	r22, 0x04	; 4
    7cf6:	70 e0       	ldi	r23, 0x00	; 0
    7cf8:	8d ee       	ldi	r24, 0xED	; 237
    7cfa:	98 e0       	ldi	r25, 0x08	; 8
    7cfc:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:108
        display.drawBitmap(36, 4, menuSatellite, 24, 24, 1);
    7d00:	29 e6       	ldi	r18, 0x69	; 105
    7d02:	34 e1       	ldi	r19, 0x14	; 20
    7d04:	44 e0       	ldi	r20, 0x04	; 4
    7d06:	50 e0       	ldi	r21, 0x00	; 0
    7d08:	64 e2       	ldi	r22, 0x24	; 36
    7d0a:	70 e0       	ldi	r23, 0x00	; 0
    7d0c:	8d ee       	ldi	r24, 0xED	; 237
    7d0e:	98 e0       	ldi	r25, 0x08	; 8
    7d10:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:109
        display.drawBitmap(68, 4, menuRadar, 24, 24, 1);
    7d14:	21 eb       	ldi	r18, 0xB1	; 177
    7d16:	34 e1       	ldi	r19, 0x14	; 20
    7d18:	44 e0       	ldi	r20, 0x04	; 4
    7d1a:	50 e0       	ldi	r21, 0x00	; 0
    7d1c:	64 e4       	ldi	r22, 0x44	; 68
    7d1e:	70 e0       	ldi	r23, 0x00	; 0
    7d20:	8d ee       	ldi	r24, 0xED	; 237
    7d22:	98 e0       	ldi	r25, 0x08	; 8
    7d24:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:110
        display.drawBitmap(100, 4, menuCompass, 24, 24, 1);
    7d28:	29 ef       	ldi	r18, 0xF9	; 249
    7d2a:	34 e1       	ldi	r19, 0x14	; 20
    7d2c:	44 e0       	ldi	r20, 0x04	; 4
    7d2e:	50 e0       	ldi	r21, 0x00	; 0
    7d30:	64 e6       	ldi	r22, 0x64	; 100
    7d32:	70 e0       	ldi	r23, 0x00	; 0
    7d34:	8d ee       	ldi	r24, 0xED	; 237
    7d36:	98 e0       	ldi	r25, 0x08	; 8
    7d38:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:111
        display.drawBitmap(4, 36, menuAltimeter, 24, 24, 1);
    7d3c:	21 e4       	ldi	r18, 0x41	; 65
    7d3e:	35 e1       	ldi	r19, 0x15	; 21
    7d40:	44 e2       	ldi	r20, 0x24	; 36
    7d42:	50 e0       	ldi	r21, 0x00	; 0
    7d44:	64 e0       	ldi	r22, 0x04	; 4
    7d46:	70 e0       	ldi	r23, 0x00	; 0
    7d48:	8d ee       	ldi	r24, 0xED	; 237
    7d4a:	98 e0       	ldi	r25, 0x08	; 8
    7d4c:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:112
        display.drawBitmap(36, 36, menuHardware, 24, 24, 1);
    7d50:	29 e8       	ldi	r18, 0x89	; 137
    7d52:	35 e1       	ldi	r19, 0x15	; 21
    7d54:	44 e2       	ldi	r20, 0x24	; 36
    7d56:	50 e0       	ldi	r21, 0x00	; 0
    7d58:	64 e2       	ldi	r22, 0x24	; 36
    7d5a:	70 e0       	ldi	r23, 0x00	; 0
    7d5c:	8d ee       	ldi	r24, 0xED	; 237
    7d5e:	98 e0       	ldi	r25, 0x08	; 8
    7d60:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:113
        display.drawBitmap(68, 36, menuLog, 24, 24, 1);
    7d64:	21 ed       	ldi	r18, 0xD1	; 209
    7d66:	35 e1       	ldi	r19, 0x15	; 21
    7d68:	44 e2       	ldi	r20, 0x24	; 36
    7d6a:	50 e0       	ldi	r21, 0x00	; 0
    7d6c:	64 e4       	ldi	r22, 0x44	; 68
    7d6e:	70 e0       	ldi	r23, 0x00	; 0
    7d70:	8d ee       	ldi	r24, 0xED	; 237
    7d72:	98 e0       	ldi	r25, 0x08	; 8
    7d74:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:114
        display.drawBitmap(100, 36, menuNavigation, 24, 24, 1);
    7d78:	29 e1       	ldi	r18, 0x19	; 25
    7d7a:	36 e1       	ldi	r19, 0x16	; 22
    7d7c:	44 e2       	ldi	r20, 0x24	; 36
    7d7e:	50 e0       	ldi	r21, 0x00	; 0
    7d80:	64 e6       	ldi	r22, 0x64	; 100
    7d82:	70 e0       	ldi	r23, 0x00	; 0
    7d84:	8d ee       	ldi	r24, 0xED	; 237
    7d86:	98 e0       	ldi	r25, 0x08	; 8
    7d88:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:116

        display.drawRoundRect(menu.iconX, menu.iconY, 32, 32, 3, WHITE);
    7d8c:	40 91 37 09 	lds	r20, 0x0937	; 0x800937 <menu+0x5>
    7d90:	50 91 38 09 	lds	r21, 0x0938	; 0x800938 <menu+0x6>
    7d94:	60 91 35 09 	lds	r22, 0x0935	; 0x800935 <menu+0x3>
    7d98:	70 91 36 09 	lds	r23, 0x0936	; 0x800936 <menu+0x4>
    7d9c:	23 e0       	ldi	r18, 0x03	; 3
    7d9e:	e2 2e       	mov	r14, r18
    7da0:	f1 2c       	mov	r15, r1
    7da2:	00 e2       	ldi	r16, 0x20	; 32
    7da4:	10 e0       	ldi	r17, 0x00	; 0
    7da6:	20 e2       	ldi	r18, 0x20	; 32
    7da8:	30 e0       	ldi	r19, 0x00	; 0
    7daa:	8d ee       	ldi	r24, 0xED	; 237
    7dac:	98 e0       	ldi	r25, 0x08	; 8
    7dae:	0e 94 8b 45 	call	0x8b16	; 0x8b16 <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:117
        display.display();
    7db2:	8d ee       	ldi	r24, 0xED	; 237
    7db4:	98 e0       	ldi	r25, 0x08	; 8
    7db6:	0e 94 24 50 	call	0xa048	; 0xa048 <Adafruit_SSD1306::display()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:119

        while (menu.switchMenu) {
    7dba:	80 91 34 09 	lds	r24, 0x0934	; 0x800934 <menu+0x2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:120
                switch (menu.tab) {
    7dbe:	e0 91 32 09 	lds	r30, 0x0932	; 0x800932 <menu>
    7dc2:	f0 91 33 09 	lds	r31, 0x0933	; 0x800933 <menu+0x1>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:119
        display.drawBitmap(100, 36, menuNavigation, 24, 24, 1);

        display.drawRoundRect(menu.iconX, menu.iconY, 32, 32, 3, WHITE);
        display.display();

        while (menu.switchMenu) {
    7dc6:	88 23       	and	r24, r24
    7dc8:	09 f4       	brne	.+2      	; 0x7dcc <UIMenu()+0x47c>
    7dca:	63 c0       	rjmp	.+198    	; 0x7e92 <UIMenu()+0x542>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:120
                switch (menu.tab) {
    7dcc:	e8 30       	cpi	r30, 0x08	; 8
    7dce:	f1 05       	cpc	r31, r1
    7dd0:	d0 f7       	brcc	.-12     	; 0x7dc6 <UIMenu()+0x476>
    7dd2:	e3 51       	subi	r30, 0x13	; 19
    7dd4:	f1 4c       	sbci	r31, 0xC1	; 193
    7dd6:	0c 94 ea 72 	jmp	0xe5d4	; 0xe5d4 <__tablejump2__>
    7dda:	f5 3e       	cpi	r31, 0xE5	; 229
    7ddc:	00 3f       	cpi	r16, 0xF0	; 240
    7dde:	13 3f       	cpi	r17, 0xF3	; 243
    7de0:	1e 3f       	cpi	r17, 0xFE	; 254
    7de2:	35 3f       	cpi	r19, 0xF5	; 245
    7de4:	3c 3f       	cpi	r19, 0xFC	; 252
    7de6:	43 3f       	cpi	r20, 0xF3	; 243
    7de8:	46 3f       	cpi	r20, 0xF6	; 246
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:122
                case 0:
                        ShowMenuIcon(GPS_ICON);
    7dea:	84 e0       	ldi	r24, 0x04	; 4
    7dec:	90 e0       	ldi	r25, 0x00	; 0
    7dee:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:123
                        GPSMenu();
    7df2:	0e 94 02 34 	call	0x6804	; 0x6804 <GPSMenu()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:124
                        ButtonIO();
    7df6:	0e 94 9b 1e 	call	0x3d36	; 0x3d36 <ButtonIO()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:177
                        menu.lastTick = millis();
                        break;

                case 7:
                        WaypointMenu();
                        dataSensIndicator();
    7dfa:	0e 94 4d 15 	call	0x2a9a	; 0x2a9a <dataSensIndicator()>
    7dfe:	26 c0       	rjmp	.+76     	; 0x7e4c <UIMenu()+0x4fc>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:131
                        menu.lastTick = millis();
                        display.clearDisplay();
                        break;

                case 1:
                        ShowMenuIcon(SATELLITE_ICON);
    7e00:	86 e0       	ldi	r24, 0x06	; 6
    7e02:	90 e0       	ldi	r25, 0x00	; 0
    7e04:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:132
                        SatelliteTracker();
    7e08:	0e 94 9a 22 	call	0x4534	; 0x4534 <SatelliteTracker()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:133
                        ButtonIO();
    7e0c:	0e 94 9b 1e 	call	0x3d36	; 0x3d36 <ButtonIO()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:172
                        break;

                case 6:
                        LogMenu();
                        dataSensIndicator();
                        menu.lastTick = millis();
    7e10:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    7e14:	60 93 3f 09 	sts	0x093F, r22	; 0x80093f <menu+0xd>
    7e18:	70 93 40 09 	sts	0x0940, r23	; 0x800940 <menu+0xe>
    7e1c:	80 93 41 09 	sts	0x0941, r24	; 0x800941 <menu+0xf>
    7e20:	90 93 42 09 	sts	0x0942, r25	; 0x800942 <menu+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:173
                        break;
    7e24:	ca cf       	rjmp	.-108    	; 0x7dba <UIMenu()+0x46a>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:138
                        ButtonIO();
                        menu.lastTick = millis();
                        break;

                case 2:
                        ShowMenuIcon(DEVIATION_MAP_ICON);
    7e26:	85 e0       	ldi	r24, 0x05	; 5
    7e28:	90 e0       	ldi	r25, 0x00	; 0
    7e2a:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:139
                        DeviationMap();
    7e2e:	0e 94 81 37 	call	0x6f02	; 0x6f02 <DeviationMap()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:164
                        break;

                case 5:
                        ShowMenuIcon(HARDWARE_ICON);
                        InfoMenu();
                        ButtonIO();
    7e32:	0e 94 9b 1e 	call	0x3d36	; 0x3d36 <ButtonIO()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:171
                        menu.lastTick = millis();
                        break;

                case 6:
                        LogMenu();
                        dataSensIndicator();
    7e36:	0e 94 4d 15 	call	0x2a9a	; 0x2a9a <dataSensIndicator()>
    7e3a:	ea cf       	rjmp	.-44     	; 0x7e10 <UIMenu()+0x4c0>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:146
                        dataSensIndicator();
                        menu.lastTick = millis();
                        break;

                case 3:
                        ShowMenuIcon(COMPASS_ICON);
    7e3c:	81 e0       	ldi	r24, 0x01	; 1
    7e3e:	90 e0       	ldi	r25, 0x00	; 0
    7e40:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:147
                        CompassMenu();
    7e44:	0e 94 41 1f 	call	0x3e82	; 0x3e82 <CompassMenu()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:148
                        ButtonIO();
    7e48:	0e 94 9b 1e 	call	0x3d36	; 0x3d36 <ButtonIO()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:178
                        break;

                case 7:
                        WaypointMenu();
                        dataSensIndicator();
                        menu.lastTick = millis();
    7e4c:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    7e50:	60 93 3f 09 	sts	0x093F, r22	; 0x80093f <menu+0xd>
    7e54:	70 93 40 09 	sts	0x0940, r23	; 0x800940 <menu+0xe>
    7e58:	80 93 41 09 	sts	0x0941, r24	; 0x800941 <menu+0xf>
    7e5c:	90 93 42 09 	sts	0x0942, r25	; 0x800942 <menu+0x10>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:179
                        display.clearDisplay();
    7e60:	8d ee       	ldi	r24, 0xED	; 237
    7e62:	98 e0       	ldi	r25, 0x08	; 8
    7e64:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:180
                        break;
    7e68:	a8 cf       	rjmp	.-176    	; 0x7dba <UIMenu()+0x46a>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:154
                        menu.lastTick = millis();
                        display.clearDisplay();
                        break;

                case 4:
                        ShowMenuIcon(ALTIMETER_ICON);
    7e6a:	82 e0       	ldi	r24, 0x02	; 2
    7e6c:	90 e0       	ldi	r25, 0x00	; 0
    7e6e:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:155
                        AltitudeMenu();
    7e72:	0e 94 0d 3a 	call	0x741a	; 0x741a <AltitudeMenu()>
    7e76:	dd cf       	rjmp	.-70     	; 0x7e32 <UIMenu()+0x4e2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:162
                        dataSensIndicator();
                        menu.lastTick = millis();
                        break;

                case 5:
                        ShowMenuIcon(HARDWARE_ICON);
    7e78:	83 e0       	ldi	r24, 0x03	; 3
    7e7a:	90 e0       	ldi	r25, 0x00	; 0
    7e7c:	0e 94 52 1a 	call	0x34a4	; 0x34a4 <ShowMenuIcon(int)>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:163
                        InfoMenu();
    7e80:	0e 94 ea 2e 	call	0x5dd4	; 0x5dd4 <InfoMenu()>
    7e84:	d6 cf       	rjmp	.-84     	; 0x7e32 <UIMenu()+0x4e2>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:170
                        dataSensIndicator();
                        menu.lastTick = millis();
                        break;

                case 6:
                        LogMenu();
    7e86:	0e 94 54 2b 	call	0x56a8	; 0x56a8 <LogMenu()>
    7e8a:	d5 cf       	rjmp	.-86     	; 0x7e36 <UIMenu()+0x4e6>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:176
                        dataSensIndicator();
                        menu.lastTick = millis();
                        break;

                case 7:
                        WaypointMenu();
    7e8c:	0e 94 24 27 	call	0x4e48	; 0x4e48 <WaypointMenu()>
    7e90:	b4 cf       	rjmp	.-152    	; 0x7dfa <UIMenu()+0x4aa>
C:\Users\nyvir\Documents\GitHub\GPSKit/UIMenu.ino:183
                        menu.lastTick = millis();
                        display.clearDisplay();
                        break;
                }
        }
}
    7e92:	df 91       	pop	r29
    7e94:	cf 91       	pop	r28
    7e96:	1f 91       	pop	r17
    7e98:	0f 91       	pop	r16
    7e9a:	ff 90       	pop	r15
    7e9c:	ef 90       	pop	r14
    7e9e:	df 90       	pop	r13
    7ea0:	cf 90       	pop	r12
    7ea2:	bf 90       	pop	r11
    7ea4:	af 90       	pop	r10
    7ea6:	9f 90       	pop	r9
    7ea8:	08 95       	ret

00007eaa <loop>:
loop():
C:\Users\nyvir\Documents\GitHub\GPSKit/GPSKit.ino:146
}

void loop() {
        UIMenu();
    7eaa:	0c 94 a8 3c 	jmp	0x7950	; 0x7950 <UIMenu()>

00007eae <Print::availableForWrite()>:
_ZN5Print17availableForWriteEv():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1118
*/
/**************************************************************************/
void Adafruit_GFX::drawChar(int16_t x, int16_t y, unsigned char c,
                            uint16_t color, uint16_t bg, uint8_t size) {
  drawChar(x, y, c, color, bg, size, size);
}
    7eae:	90 e0       	ldi	r25, 0x00	; 0
    7eb0:	80 e0       	ldi	r24, 0x00	; 0
    7eb2:	08 95       	ret

00007eb4 <Print::flush()>:
_ZN5Print5flushEv():
    7eb4:	08 95       	ret

00007eb6 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX9writeLineEiiiij():
    7eb6:	2f 92       	push	r2
    7eb8:	3f 92       	push	r3
    7eba:	4f 92       	push	r4
    7ebc:	5f 92       	push	r5
    7ebe:	6f 92       	push	r6
    7ec0:	7f 92       	push	r7
    7ec2:	8f 92       	push	r8
    7ec4:	9f 92       	push	r9
    7ec6:	af 92       	push	r10
    7ec8:	bf 92       	push	r11
    7eca:	cf 92       	push	r12
    7ecc:	df 92       	push	r13
    7ece:	ef 92       	push	r14
    7ed0:	ff 92       	push	r15
    7ed2:	0f 93       	push	r16
    7ed4:	1f 93       	push	r17
    7ed6:	cf 93       	push	r28
    7ed8:	df 93       	push	r29
    7eda:	00 d0       	rcall	.+0      	; 0x7edc <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x26>
    7edc:	00 d0       	rcall	.+0      	; 0x7ede <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x28>
    7ede:	00 d0       	rcall	.+0      	; 0x7ee0 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x2a>
    7ee0:	cd b7       	in	r28, 0x3d	; 61
    7ee2:	de b7       	in	r29, 0x3e	; 62
    7ee4:	3c 01       	movw	r6, r24
    7ee6:	6a 01       	movw	r12, r20
    7ee8:	3e 83       	std	Y+6, r19	; 0x06
    7eea:	2d 83       	std	Y+5, r18	; 0x05
    7eec:	fc 82       	std	Y+4, r15	; 0x04
    7eee:	eb 82       	std	Y+3, r14	; 0x03
    7ef0:	58 01       	movw	r10, r16
    7ef2:	a4 1a       	sub	r10, r20
    7ef4:	b5 0a       	sbc	r11, r21
    7ef6:	b7 fe       	sbrs	r11, 7
    7ef8:	03 c0       	rjmp	.+6      	; 0x7f00 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x4a>
    7efa:	b1 94       	neg	r11
    7efc:	a1 94       	neg	r10
    7efe:	b1 08       	sbc	r11, r1
    7f00:	8d 80       	ldd	r8, Y+5	; 0x05
    7f02:	9e 80       	ldd	r9, Y+6	; 0x06
    7f04:	86 1a       	sub	r8, r22
    7f06:	97 0a       	sbc	r9, r23
    7f08:	97 fe       	sbrs	r9, 7
    7f0a:	03 c0       	rjmp	.+6      	; 0x7f12 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x5c>
    7f0c:	91 94       	neg	r9
    7f0e:	81 94       	neg	r8
    7f10:	91 08       	sbc	r9, r1
    7f12:	8a 14       	cp	r8, r10
    7f14:	9b 04       	cpc	r9, r11
    7f16:	5c f0       	brlt	.+22     	; 0x7f2e <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x78>
    7f18:	90 2f       	mov	r25, r16
    7f1a:	81 2f       	mov	r24, r17
    7f1c:	0d 81       	ldd	r16, Y+5	; 0x05
    7f1e:	1e 81       	ldd	r17, Y+6	; 0x06
    7f20:	9d 83       	std	Y+5, r25	; 0x05
    7f22:	8e 83       	std	Y+6, r24	; 0x06
    7f24:	9c 2d       	mov	r25, r12
    7f26:	8d 2d       	mov	r24, r13
    7f28:	6b 01       	movw	r12, r22
    7f2a:	69 2f       	mov	r22, r25
    7f2c:	78 2f       	mov	r23, r24
    7f2e:	0c 15       	cp	r16, r12
    7f30:	1d 05       	cpc	r17, r13
    7f32:	5c f0       	brlt	.+22     	; 0x7f4a <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x94>
    7f34:	9d 81       	ldd	r25, Y+5	; 0x05
    7f36:	8e 81       	ldd	r24, Y+6	; 0x06
    7f38:	7e 83       	std	Y+6, r23	; 0x06
    7f3a:	6d 83       	std	Y+5, r22	; 0x05
    7f3c:	69 2f       	mov	r22, r25
    7f3e:	78 2f       	mov	r23, r24
    7f40:	90 2f       	mov	r25, r16
    7f42:	81 2f       	mov	r24, r17
    7f44:	86 01       	movw	r16, r12
    7f46:	c9 2e       	mov	r12, r25
    7f48:	d8 2e       	mov	r13, r24
    7f4a:	16 01       	movw	r2, r12
    7f4c:	20 1a       	sub	r2, r16
    7f4e:	31 0a       	sbc	r3, r17
    7f50:	2b 01       	movw	r4, r22
    7f52:	2d 81       	ldd	r18, Y+5	; 0x05
    7f54:	3e 81       	ldd	r19, Y+6	; 0x06
    7f56:	42 1a       	sub	r4, r18
    7f58:	53 0a       	sbc	r5, r19
    7f5a:	57 fe       	sbrs	r5, 7
    7f5c:	03 c0       	rjmp	.+6      	; 0x7f64 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xae>
    7f5e:	51 94       	neg	r5
    7f60:	41 94       	neg	r4
    7f62:	51 08       	sbc	r5, r1
    7f64:	71 01       	movw	r14, r2
    7f66:	37 fe       	sbrs	r3, 7
    7f68:	03 c0       	rjmp	.+6      	; 0x7f70 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xba>
    7f6a:	3f ef       	ldi	r19, 0xFF	; 255
    7f6c:	e3 1a       	sub	r14, r19
    7f6e:	f3 0a       	sbc	r15, r19
    7f70:	f5 94       	asr	r15
    7f72:	e7 94       	ror	r14
    7f74:	8d 81       	ldd	r24, Y+5	; 0x05
    7f76:	9e 81       	ldd	r25, Y+6	; 0x06
    7f78:	86 17       	cp	r24, r22
    7f7a:	97 07       	cpc	r25, r23
    7f7c:	5c f5       	brge	.+86     	; 0x7fd4 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x11e>
    7f7e:	a1 e0       	ldi	r26, 0x01	; 1
    7f80:	b0 e0       	ldi	r27, 0x00	; 0
    7f82:	ba 83       	std	Y+2, r27	; 0x02
    7f84:	a9 83       	std	Y+1, r26	; 0x01
    7f86:	c0 16       	cp	r12, r16
    7f88:	d1 06       	cpc	r13, r17
    7f8a:	4c f1       	brlt	.+82     	; 0x7fde <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x128>
    7f8c:	d3 01       	movw	r26, r6
    7f8e:	ed 91       	ld	r30, X+
    7f90:	fc 91       	ld	r31, X
    7f92:	04 84       	ldd	r0, Z+12	; 0x0c
    7f94:	f5 85       	ldd	r31, Z+13	; 0x0d
    7f96:	e0 2d       	mov	r30, r0
    7f98:	2b 81       	ldd	r18, Y+3	; 0x03
    7f9a:	3c 81       	ldd	r19, Y+4	; 0x04
    7f9c:	a8 01       	movw	r20, r16
    7f9e:	6d 81       	ldd	r22, Y+5	; 0x05
    7fa0:	7e 81       	ldd	r23, Y+6	; 0x06
    7fa2:	8a 14       	cp	r8, r10
    7fa4:	9b 04       	cpc	r9, r11
    7fa6:	1c f0       	brlt	.+6      	; 0x7fae <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xf8>
    7fa8:	4d 81       	ldd	r20, Y+5	; 0x05
    7faa:	5e 81       	ldd	r21, Y+6	; 0x06
    7fac:	b8 01       	movw	r22, r16
    7fae:	c3 01       	movw	r24, r6
    7fb0:	09 95       	icall
    7fb2:	e4 18       	sub	r14, r4
    7fb4:	f5 08       	sbc	r15, r5
    7fb6:	f7 fe       	sbrs	r15, 7
    7fb8:	0a c0       	rjmp	.+20     	; 0x7fce <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0x118>
    7fba:	2d 81       	ldd	r18, Y+5	; 0x05
    7fbc:	3e 81       	ldd	r19, Y+6	; 0x06
    7fbe:	89 81       	ldd	r24, Y+1	; 0x01
    7fc0:	9a 81       	ldd	r25, Y+2	; 0x02
    7fc2:	28 0f       	add	r18, r24
    7fc4:	39 1f       	adc	r19, r25
    7fc6:	3e 83       	std	Y+6, r19	; 0x06
    7fc8:	2d 83       	std	Y+5, r18	; 0x05
    7fca:	e2 0c       	add	r14, r2
    7fcc:	f3 1c       	adc	r15, r3
    7fce:	0f 5f       	subi	r16, 0xFF	; 255
    7fd0:	1f 4f       	sbci	r17, 0xFF	; 255
    7fd2:	d9 cf       	rjmp	.-78     	; 0x7f86 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xd0>
    7fd4:	2f ef       	ldi	r18, 0xFF	; 255
    7fd6:	3f ef       	ldi	r19, 0xFF	; 255
    7fd8:	3a 83       	std	Y+2, r19	; 0x02
    7fda:	29 83       	std	Y+1, r18	; 0x01
    7fdc:	d4 cf       	rjmp	.-88     	; 0x7f86 <Adafruit_GFX::writeLine(int, int, int, int, unsigned int)+0xd0>
    7fde:	26 96       	adiw	r28, 0x06	; 6
    7fe0:	0f b6       	in	r0, 0x3f	; 63
    7fe2:	f8 94       	cli
    7fe4:	de bf       	out	0x3e, r29	; 62
    7fe6:	0f be       	out	0x3f, r0	; 63
    7fe8:	cd bf       	out	0x3d, r28	; 61
    7fea:	df 91       	pop	r29
    7fec:	cf 91       	pop	r28
    7fee:	1f 91       	pop	r17
    7ff0:	0f 91       	pop	r16
    7ff2:	ff 90       	pop	r15
    7ff4:	ef 90       	pop	r14
    7ff6:	df 90       	pop	r13
    7ff8:	cf 90       	pop	r12
    7ffa:	bf 90       	pop	r11
    7ffc:	af 90       	pop	r10
    7ffe:	9f 90       	pop	r9
    8000:	8f 90       	pop	r8
    8002:	7f 90       	pop	r7
    8004:	6f 90       	pop	r6
    8006:	5f 90       	pop	r5
    8008:	4f 90       	pop	r4
    800a:	3f 90       	pop	r3
    800c:	2f 90       	pop	r2
    800e:	08 95       	ret

00008010 <Adafruit_GFX::startWrite()>:
_ZN12Adafruit_GFX10startWriteEv():
    8010:	08 95       	ret

00008012 <Adafruit_GFX::writePixel(int, int, unsigned int)>:
_ZN12Adafruit_GFX10writePixelEiij():
    8012:	dc 01       	movw	r26, r24
    8014:	ed 91       	ld	r30, X+
    8016:	fc 91       	ld	r31, X
    8018:	00 84       	ldd	r0, Z+8	; 0x08
    801a:	f1 85       	ldd	r31, Z+9	; 0x09
    801c:	e0 2d       	mov	r30, r0
    801e:	09 94       	ijmp

00008020 <Adafruit_GFX::writeFastVLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX14writeFastVLineEiiij():
    8020:	0f 93       	push	r16
    8022:	1f 93       	push	r17
    8024:	dc 01       	movw	r26, r24
    8026:	ed 91       	ld	r30, X+
    8028:	fc 91       	ld	r31, X
    802a:	04 8c       	ldd	r0, Z+28	; 0x1c
    802c:	f5 8d       	ldd	r31, Z+29	; 0x1d
    802e:	e0 2d       	mov	r30, r0
    8030:	09 95       	icall
    8032:	1f 91       	pop	r17
    8034:	0f 91       	pop	r16
    8036:	08 95       	ret

00008038 <Adafruit_GFX::writeFastHLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX14writeFastHLineEiiij():
    8038:	0f 93       	push	r16
    803a:	1f 93       	push	r17
    803c:	dc 01       	movw	r26, r24
    803e:	ed 91       	ld	r30, X+
    8040:	fc 91       	ld	r31, X
    8042:	06 8c       	ldd	r0, Z+30	; 0x1e
    8044:	f7 8d       	ldd	r31, Z+31	; 0x1f
    8046:	e0 2d       	mov	r30, r0
    8048:	09 95       	icall
    804a:	1f 91       	pop	r17
    804c:	0f 91       	pop	r16
    804e:	08 95       	ret

00008050 <Adafruit_GFX::writeFillRect(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13writeFillRectEiiiij():
    8050:	ef 92       	push	r14
    8052:	ff 92       	push	r15
    8054:	0f 93       	push	r16
    8056:	1f 93       	push	r17
    8058:	dc 01       	movw	r26, r24
    805a:	ed 91       	ld	r30, X+
    805c:	fc 91       	ld	r31, X
    805e:	00 a0       	ldd	r0, Z+32	; 0x20
    8060:	f1 a1       	ldd	r31, Z+33	; 0x21
    8062:	e0 2d       	mov	r30, r0
    8064:	09 95       	icall
    8066:	1f 91       	pop	r17
    8068:	0f 91       	pop	r16
    806a:	ff 90       	pop	r15
    806c:	ef 90       	pop	r14
    806e:	08 95       	ret

00008070 <Adafruit_GFX::drawFastVLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13drawFastVLineEiiij():
    8070:	8f 92       	push	r8
    8072:	9f 92       	push	r9
    8074:	af 92       	push	r10
    8076:	bf 92       	push	r11
    8078:	cf 92       	push	r12
    807a:	df 92       	push	r13
    807c:	ef 92       	push	r14
    807e:	ff 92       	push	r15
    8080:	0f 93       	push	r16
    8082:	1f 93       	push	r17
    8084:	cf 93       	push	r28
    8086:	df 93       	push	r29
    8088:	ec 01       	movw	r28, r24
    808a:	5b 01       	movw	r10, r22
    808c:	4a 01       	movw	r8, r20
    808e:	69 01       	movw	r12, r18
    8090:	78 01       	movw	r14, r16
    8092:	e8 81       	ld	r30, Y
    8094:	f9 81       	ldd	r31, Y+1	; 0x01
    8096:	02 84       	ldd	r0, Z+10	; 0x0a
    8098:	f3 85       	ldd	r31, Z+11	; 0x0b
    809a:	e0 2d       	mov	r30, r0
    809c:	09 95       	icall
    809e:	c8 0c       	add	r12, r8
    80a0:	d9 1c       	adc	r13, r9
    80a2:	86 01       	movw	r16, r12
    80a4:	01 50       	subi	r16, 0x01	; 1
    80a6:	11 09       	sbc	r17, r1
    80a8:	e8 81       	ld	r30, Y
    80aa:	f9 81       	ldd	r31, Y+1	; 0x01
    80ac:	04 88       	ldd	r0, Z+20	; 0x14
    80ae:	f5 89       	ldd	r31, Z+21	; 0x15
    80b0:	e0 2d       	mov	r30, r0
    80b2:	95 01       	movw	r18, r10
    80b4:	a4 01       	movw	r20, r8
    80b6:	b5 01       	movw	r22, r10
    80b8:	ce 01       	movw	r24, r28
    80ba:	09 95       	icall
    80bc:	e8 81       	ld	r30, Y
    80be:	f9 81       	ldd	r31, Y+1	; 0x01
    80c0:	06 88       	ldd	r0, Z+22	; 0x16
    80c2:	f7 89       	ldd	r31, Z+23	; 0x17
    80c4:	e0 2d       	mov	r30, r0
    80c6:	ce 01       	movw	r24, r28
    80c8:	df 91       	pop	r29
    80ca:	cf 91       	pop	r28
    80cc:	1f 91       	pop	r17
    80ce:	0f 91       	pop	r16
    80d0:	ff 90       	pop	r15
    80d2:	ef 90       	pop	r14
    80d4:	df 90       	pop	r13
    80d6:	cf 90       	pop	r12
    80d8:	bf 90       	pop	r11
    80da:	af 90       	pop	r10
    80dc:	9f 90       	pop	r9
    80de:	8f 90       	pop	r8
    80e0:	09 94       	ijmp

000080e2 <Adafruit_GFX::drawFastHLine(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13drawFastHLineEiiij():
    80e2:	8f 92       	push	r8
    80e4:	9f 92       	push	r9
    80e6:	af 92       	push	r10
    80e8:	bf 92       	push	r11
    80ea:	cf 92       	push	r12
    80ec:	df 92       	push	r13
    80ee:	ef 92       	push	r14
    80f0:	ff 92       	push	r15
    80f2:	0f 93       	push	r16
    80f4:	1f 93       	push	r17
    80f6:	cf 93       	push	r28
    80f8:	df 93       	push	r29
    80fa:	ec 01       	movw	r28, r24
    80fc:	5b 01       	movw	r10, r22
    80fe:	4a 01       	movw	r8, r20
    8100:	69 01       	movw	r12, r18
    8102:	e8 81       	ld	r30, Y
    8104:	f9 81       	ldd	r31, Y+1	; 0x01
    8106:	02 84       	ldd	r0, Z+10	; 0x0a
    8108:	f3 85       	ldd	r31, Z+11	; 0x0b
    810a:	e0 2d       	mov	r30, r0
    810c:	09 95       	icall
    810e:	95 01       	movw	r18, r10
    8110:	2c 0d       	add	r18, r12
    8112:	3d 1d       	adc	r19, r13
    8114:	21 50       	subi	r18, 0x01	; 1
    8116:	31 09       	sbc	r19, r1
    8118:	e8 81       	ld	r30, Y
    811a:	f9 81       	ldd	r31, Y+1	; 0x01
    811c:	04 88       	ldd	r0, Z+20	; 0x14
    811e:	f5 89       	ldd	r31, Z+21	; 0x15
    8120:	e0 2d       	mov	r30, r0
    8122:	78 01       	movw	r14, r16
    8124:	84 01       	movw	r16, r8
    8126:	a4 01       	movw	r20, r8
    8128:	b5 01       	movw	r22, r10
    812a:	ce 01       	movw	r24, r28
    812c:	09 95       	icall
    812e:	e8 81       	ld	r30, Y
    8130:	f9 81       	ldd	r31, Y+1	; 0x01
    8132:	06 88       	ldd	r0, Z+22	; 0x16
    8134:	f7 89       	ldd	r31, Z+23	; 0x17
    8136:	e0 2d       	mov	r30, r0
    8138:	ce 01       	movw	r24, r28
    813a:	df 91       	pop	r29
    813c:	cf 91       	pop	r28
    813e:	1f 91       	pop	r17
    8140:	0f 91       	pop	r16
    8142:	ff 90       	pop	r15
    8144:	ef 90       	pop	r14
    8146:	df 90       	pop	r13
    8148:	cf 90       	pop	r12
    814a:	bf 90       	pop	r11
    814c:	af 90       	pop	r10
    814e:	9f 90       	pop	r9
    8150:	8f 90       	pop	r8
    8152:	09 94       	ijmp

00008154 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX8fillRectEiiiij():
    8154:	4f 92       	push	r4
    8156:	5f 92       	push	r5
    8158:	6f 92       	push	r6
    815a:	7f 92       	push	r7
    815c:	8f 92       	push	r8
    815e:	9f 92       	push	r9
    8160:	af 92       	push	r10
    8162:	bf 92       	push	r11
    8164:	cf 92       	push	r12
    8166:	df 92       	push	r13
    8168:	ef 92       	push	r14
    816a:	ff 92       	push	r15
    816c:	0f 93       	push	r16
    816e:	1f 93       	push	r17
    8170:	cf 93       	push	r28
    8172:	df 93       	push	r29
    8174:	6c 01       	movw	r12, r24
    8176:	2b 01       	movw	r4, r22
    8178:	5a 01       	movw	r10, r20
    817a:	39 01       	movw	r6, r18
    817c:	48 01       	movw	r8, r16
    817e:	dc 01       	movw	r26, r24
    8180:	ed 91       	ld	r30, X+
    8182:	fc 91       	ld	r31, X
    8184:	02 84       	ldd	r0, Z+10	; 0x0a
    8186:	f3 85       	ldd	r31, Z+11	; 0x0b
    8188:	e0 2d       	mov	r30, r0
    818a:	09 95       	icall
    818c:	e2 01       	movw	r28, r4
    818e:	64 0c       	add	r6, r4
    8190:	75 1c       	adc	r7, r5
    8192:	d6 01       	movw	r26, r12
    8194:	ed 91       	ld	r30, X+
    8196:	fc 91       	ld	r31, X
    8198:	c6 15       	cp	r28, r6
    819a:	d7 05       	cpc	r29, r7
    819c:	5c f4       	brge	.+22     	; 0x81b4 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)+0x60>
    819e:	00 88       	ldd	r0, Z+16	; 0x10
    81a0:	f1 89       	ldd	r31, Z+17	; 0x11
    81a2:	e0 2d       	mov	r30, r0
    81a4:	87 01       	movw	r16, r14
    81a6:	94 01       	movw	r18, r8
    81a8:	a5 01       	movw	r20, r10
    81aa:	be 01       	movw	r22, r28
    81ac:	c6 01       	movw	r24, r12
    81ae:	09 95       	icall
    81b0:	21 96       	adiw	r28, 0x01	; 1
    81b2:	ef cf       	rjmp	.-34     	; 0x8192 <Adafruit_GFX::fillRect(int, int, int, int, unsigned int)+0x3e>
    81b4:	06 88       	ldd	r0, Z+22	; 0x16
    81b6:	f7 89       	ldd	r31, Z+23	; 0x17
    81b8:	e0 2d       	mov	r30, r0
    81ba:	c6 01       	movw	r24, r12
    81bc:	df 91       	pop	r29
    81be:	cf 91       	pop	r28
    81c0:	1f 91       	pop	r17
    81c2:	0f 91       	pop	r16
    81c4:	ff 90       	pop	r15
    81c6:	ef 90       	pop	r14
    81c8:	df 90       	pop	r13
    81ca:	cf 90       	pop	r12
    81cc:	bf 90       	pop	r11
    81ce:	af 90       	pop	r10
    81d0:	9f 90       	pop	r9
    81d2:	8f 90       	pop	r8
    81d4:	7f 90       	pop	r7
    81d6:	6f 90       	pop	r6
    81d8:	5f 90       	pop	r5
    81da:	4f 90       	pop	r4
    81dc:	09 94       	ijmp

000081de <Adafruit_GFX::fillScreen(unsigned int)>:
_ZN12Adafruit_GFX10fillScreenEj():
    81de:	ef 92       	push	r14
    81e0:	ff 92       	push	r15
    81e2:	0f 93       	push	r16
    81e4:	1f 93       	push	r17
    81e6:	dc 01       	movw	r26, r24
    81e8:	1a 96       	adiw	r26, 0x0a	; 10
    81ea:	0d 91       	ld	r16, X+
    81ec:	1c 91       	ld	r17, X
    81ee:	1b 97       	sbiw	r26, 0x0b	; 11
    81f0:	18 96       	adiw	r26, 0x08	; 8
    81f2:	2d 91       	ld	r18, X+
    81f4:	3c 91       	ld	r19, X
    81f6:	19 97       	sbiw	r26, 0x09	; 9
    81f8:	ed 91       	ld	r30, X+
    81fa:	fc 91       	ld	r31, X
    81fc:	00 a0       	ldd	r0, Z+32	; 0x20
    81fe:	f1 a1       	ldd	r31, Z+33	; 0x21
    8200:	e0 2d       	mov	r30, r0
    8202:	7b 01       	movw	r14, r22
    8204:	50 e0       	ldi	r21, 0x00	; 0
    8206:	40 e0       	ldi	r20, 0x00	; 0
    8208:	70 e0       	ldi	r23, 0x00	; 0
    820a:	60 e0       	ldi	r22, 0x00	; 0
    820c:	09 95       	icall
    820e:	1f 91       	pop	r17
    8210:	0f 91       	pop	r16
    8212:	ff 90       	pop	r15
    8214:	ef 90       	pop	r14
    8216:	08 95       	ret

00008218 <Adafruit_GFX::drawRect(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX8drawRectEiiiij():
    8218:	6f 92       	push	r6
    821a:	7f 92       	push	r7
    821c:	8f 92       	push	r8
    821e:	9f 92       	push	r9
    8220:	af 92       	push	r10
    8222:	bf 92       	push	r11
    8224:	cf 92       	push	r12
    8226:	df 92       	push	r13
    8228:	ef 92       	push	r14
    822a:	ff 92       	push	r15
    822c:	0f 93       	push	r16
    822e:	1f 93       	push	r17
    8230:	cf 93       	push	r28
    8232:	df 93       	push	r29
    8234:	ec 01       	movw	r28, r24
    8236:	6b 01       	movw	r12, r22
    8238:	5a 01       	movw	r10, r20
    823a:	39 01       	movw	r6, r18
    823c:	48 01       	movw	r8, r16
    823e:	e8 81       	ld	r30, Y
    8240:	f9 81       	ldd	r31, Y+1	; 0x01
    8242:	02 84       	ldd	r0, Z+10	; 0x0a
    8244:	f3 85       	ldd	r31, Z+11	; 0x0b
    8246:	e0 2d       	mov	r30, r0
    8248:	09 95       	icall
    824a:	e8 81       	ld	r30, Y
    824c:	f9 81       	ldd	r31, Y+1	; 0x01
    824e:	02 88       	ldd	r0, Z+18	; 0x12
    8250:	f3 89       	ldd	r31, Z+19	; 0x13
    8252:	e0 2d       	mov	r30, r0
    8254:	87 01       	movw	r16, r14
    8256:	93 01       	movw	r18, r6
    8258:	a5 01       	movw	r20, r10
    825a:	b6 01       	movw	r22, r12
    825c:	ce 01       	movw	r24, r28
    825e:	09 95       	icall
    8260:	a5 01       	movw	r20, r10
    8262:	48 0d       	add	r20, r8
    8264:	59 1d       	adc	r21, r9
    8266:	41 50       	subi	r20, 0x01	; 1
    8268:	51 09       	sbc	r21, r1
    826a:	e8 81       	ld	r30, Y
    826c:	f9 81       	ldd	r31, Y+1	; 0x01
    826e:	02 88       	ldd	r0, Z+18	; 0x12
    8270:	f3 89       	ldd	r31, Z+19	; 0x13
    8272:	e0 2d       	mov	r30, r0
    8274:	93 01       	movw	r18, r6
    8276:	b6 01       	movw	r22, r12
    8278:	ce 01       	movw	r24, r28
    827a:	09 95       	icall
    827c:	e8 81       	ld	r30, Y
    827e:	f9 81       	ldd	r31, Y+1	; 0x01
    8280:	00 88       	ldd	r0, Z+16	; 0x10
    8282:	f1 89       	ldd	r31, Z+17	; 0x11
    8284:	e0 2d       	mov	r30, r0
    8286:	94 01       	movw	r18, r8
    8288:	a5 01       	movw	r20, r10
    828a:	b6 01       	movw	r22, r12
    828c:	ce 01       	movw	r24, r28
    828e:	09 95       	icall
    8290:	c6 0c       	add	r12, r6
    8292:	d7 1c       	adc	r13, r7
    8294:	b6 01       	movw	r22, r12
    8296:	61 50       	subi	r22, 0x01	; 1
    8298:	71 09       	sbc	r23, r1
    829a:	e8 81       	ld	r30, Y
    829c:	f9 81       	ldd	r31, Y+1	; 0x01
    829e:	00 88       	ldd	r0, Z+16	; 0x10
    82a0:	f1 89       	ldd	r31, Z+17	; 0x11
    82a2:	e0 2d       	mov	r30, r0
    82a4:	94 01       	movw	r18, r8
    82a6:	a5 01       	movw	r20, r10
    82a8:	ce 01       	movw	r24, r28
    82aa:	09 95       	icall
    82ac:	e8 81       	ld	r30, Y
    82ae:	f9 81       	ldd	r31, Y+1	; 0x01
    82b0:	06 88       	ldd	r0, Z+22	; 0x16
    82b2:	f7 89       	ldd	r31, Z+23	; 0x17
    82b4:	e0 2d       	mov	r30, r0
    82b6:	ce 01       	movw	r24, r28
    82b8:	df 91       	pop	r29
    82ba:	cf 91       	pop	r28
    82bc:	1f 91       	pop	r17
    82be:	0f 91       	pop	r16
    82c0:	ff 90       	pop	r15
    82c2:	ef 90       	pop	r14
    82c4:	df 90       	pop	r13
    82c6:	cf 90       	pop	r12
    82c8:	bf 90       	pop	r11
    82ca:	af 90       	pop	r10
    82cc:	9f 90       	pop	r9
    82ce:	8f 90       	pop	r8
    82d0:	7f 90       	pop	r7
    82d2:	6f 90       	pop	r6
    82d4:	09 94       	ijmp

000082d6 <Adafruit_GFX::invertDisplay(bool)>:
_ZN12Adafruit_GFX13invertDisplayEb():
    82d6:	08 95       	ret

000082d8 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX8drawLineEiiiij():
    82d8:	6f 92       	push	r6
    82da:	7f 92       	push	r7
    82dc:	8f 92       	push	r8
    82de:	9f 92       	push	r9
    82e0:	af 92       	push	r10
    82e2:	bf 92       	push	r11
    82e4:	cf 92       	push	r12
    82e6:	df 92       	push	r13
    82e8:	ef 92       	push	r14
    82ea:	ff 92       	push	r15
    82ec:	0f 93       	push	r16
    82ee:	1f 93       	push	r17
    82f0:	cf 93       	push	r28
    82f2:	df 93       	push	r29
    82f4:	5c 01       	movw	r10, r24
    82f6:	eb 01       	movw	r28, r22
    82f8:	6a 01       	movw	r12, r20
    82fa:	49 01       	movw	r8, r18
    82fc:	38 01       	movw	r6, r16
    82fe:	87 01       	movw	r16, r14
    8300:	dc 01       	movw	r26, r24
    8302:	ed 91       	ld	r30, X+
    8304:	fc 91       	ld	r31, X
    8306:	62 17       	cp	r22, r18
    8308:	73 07       	cpc	r23, r19
    830a:	19 f5       	brne	.+70     	; 0x8352 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x7a>
    830c:	64 16       	cp	r6, r20
    830e:	75 06       	cpc	r7, r21
    8310:	2c f0       	brlt	.+10     	; 0x831c <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x44>
    8312:	96 2d       	mov	r25, r6
    8314:	87 2d       	mov	r24, r7
    8316:	3a 01       	movw	r6, r20
    8318:	c9 2e       	mov	r12, r25
    831a:	d8 2e       	mov	r13, r24
    831c:	96 01       	movw	r18, r12
    831e:	26 19       	sub	r18, r6
    8320:	37 09       	sbc	r19, r7
    8322:	2f 5f       	subi	r18, 0xFF	; 255
    8324:	3f 4f       	sbci	r19, 0xFF	; 255
    8326:	04 8c       	ldd	r0, Z+28	; 0x1c
    8328:	f5 8d       	ldd	r31, Z+29	; 0x1d
    832a:	e0 2d       	mov	r30, r0
    832c:	a3 01       	movw	r20, r6
    832e:	be 01       	movw	r22, r28
    8330:	c5 01       	movw	r24, r10
    8332:	09 95       	icall
    8334:	df 91       	pop	r29
    8336:	cf 91       	pop	r28
    8338:	1f 91       	pop	r17
    833a:	0f 91       	pop	r16
    833c:	ff 90       	pop	r15
    833e:	ef 90       	pop	r14
    8340:	df 90       	pop	r13
    8342:	cf 90       	pop	r12
    8344:	bf 90       	pop	r11
    8346:	af 90       	pop	r10
    8348:	9f 90       	pop	r9
    834a:	8f 90       	pop	r8
    834c:	7f 90       	pop	r7
    834e:	6f 90       	pop	r6
    8350:	08 95       	ret
    8352:	46 15       	cp	r20, r6
    8354:	57 05       	cpc	r21, r7
    8356:	91 f4       	brne	.+36     	; 0x837c <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0xa4>
    8358:	26 17       	cp	r18, r22
    835a:	37 07       	cpc	r19, r23
    835c:	24 f0       	brlt	.+8      	; 0x8366 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x8e>
    835e:	89 2d       	mov	r24, r9
    8360:	4b 01       	movw	r8, r22
    8362:	c2 2f       	mov	r28, r18
    8364:	d8 2f       	mov	r29, r24
    8366:	9e 01       	movw	r18, r28
    8368:	28 19       	sub	r18, r8
    836a:	39 09       	sbc	r19, r9
    836c:	2f 5f       	subi	r18, 0xFF	; 255
    836e:	3f 4f       	sbci	r19, 0xFF	; 255
    8370:	06 8c       	ldd	r0, Z+30	; 0x1e
    8372:	f7 8d       	ldd	r31, Z+31	; 0x1f
    8374:	e0 2d       	mov	r30, r0
    8376:	a6 01       	movw	r20, r12
    8378:	b4 01       	movw	r22, r8
    837a:	da cf       	rjmp	.-76     	; 0x8330 <Adafruit_GFX::drawLine(int, int, int, int, unsigned int)+0x58>
    837c:	02 84       	ldd	r0, Z+10	; 0x0a
    837e:	f3 85       	ldd	r31, Z+11	; 0x0b
    8380:	e0 2d       	mov	r30, r0
    8382:	09 95       	icall
    8384:	d5 01       	movw	r26, r10
    8386:	ed 91       	ld	r30, X+
    8388:	fc 91       	ld	r31, X
    838a:	04 88       	ldd	r0, Z+20	; 0x14
    838c:	f5 89       	ldd	r31, Z+21	; 0x15
    838e:	e0 2d       	mov	r30, r0
    8390:	83 01       	movw	r16, r6
    8392:	94 01       	movw	r18, r8
    8394:	a6 01       	movw	r20, r12
    8396:	be 01       	movw	r22, r28
    8398:	c5 01       	movw	r24, r10
    839a:	09 95       	icall
    839c:	d5 01       	movw	r26, r10
    839e:	ed 91       	ld	r30, X+
    83a0:	fc 91       	ld	r31, X
    83a2:	06 88       	ldd	r0, Z+22	; 0x16
    83a4:	f7 89       	ldd	r31, Z+23	; 0x17
    83a6:	e0 2d       	mov	r30, r0
    83a8:	c5 01       	movw	r24, r10
    83aa:	df 91       	pop	r29
    83ac:	cf 91       	pop	r28
    83ae:	1f 91       	pop	r17
    83b0:	0f 91       	pop	r16
    83b2:	ff 90       	pop	r15
    83b4:	ef 90       	pop	r14
    83b6:	df 90       	pop	r13
    83b8:	cf 90       	pop	r12
    83ba:	bf 90       	pop	r11
    83bc:	af 90       	pop	r10
    83be:	9f 90       	pop	r9
    83c0:	8f 90       	pop	r8
    83c2:	7f 90       	pop	r7
    83c4:	6f 90       	pop	r6
    83c6:	09 94       	ijmp

000083c8 <Adafruit_GFX::setRotation(unsigned char)>:
_ZN12Adafruit_GFX11setRotationEh():
    83c8:	fc 01       	movw	r30, r24
    83ca:	63 70       	andi	r22, 0x03	; 3
    83cc:	66 8b       	std	Z+22, r22	; 0x16
    83ce:	84 81       	ldd	r24, Z+4	; 0x04
    83d0:	95 81       	ldd	r25, Z+5	; 0x05
    83d2:	26 81       	ldd	r18, Z+6	; 0x06
    83d4:	37 81       	ldd	r19, Z+7	; 0x07
    83d6:	61 30       	cpi	r22, 0x01	; 1
    83d8:	39 f0       	breq	.+14     	; 0x83e8 <Adafruit_GFX::setRotation(unsigned char)+0x20>
    83da:	63 30       	cpi	r22, 0x03	; 3
    83dc:	29 f0       	breq	.+10     	; 0x83e8 <Adafruit_GFX::setRotation(unsigned char)+0x20>
    83de:	91 87       	std	Z+9, r25	; 0x09
    83e0:	80 87       	std	Z+8, r24	; 0x08
    83e2:	33 87       	std	Z+11, r19	; 0x0b
    83e4:	22 87       	std	Z+10, r18	; 0x0a
    83e6:	08 95       	ret
    83e8:	31 87       	std	Z+9, r19	; 0x09
    83ea:	20 87       	std	Z+8, r18	; 0x08
    83ec:	93 87       	std	Z+11, r25	; 0x0b
    83ee:	82 87       	std	Z+10, r24	; 0x0a
    83f0:	08 95       	ret

000083f2 <Adafruit_GFX::Adafruit_GFX(int, int)>:
_ZN12Adafruit_GFXC2Eii():
    83f2:	fc 01       	movw	r30, r24
_ZN5PrintC4Ev():
    83f4:	13 82       	std	Z+3, r1	; 0x03
    83f6:	12 82       	std	Z+2, r1	; 0x02
_ZN12Adafruit_GFXC2Eii():
    83f8:	83 e1       	ldi	r24, 0x13	; 19
    83fa:	92 e0       	ldi	r25, 0x02	; 2
    83fc:	91 83       	std	Z+1, r25	; 0x01
    83fe:	80 83       	st	Z, r24
    8400:	75 83       	std	Z+5, r23	; 0x05
    8402:	64 83       	std	Z+4, r22	; 0x04
    8404:	57 83       	std	Z+7, r21	; 0x07
    8406:	46 83       	std	Z+6, r20	; 0x06
    8408:	71 87       	std	Z+9, r23	; 0x09
    840a:	60 87       	std	Z+8, r22	; 0x08
    840c:	53 87       	std	Z+11, r21	; 0x0b
    840e:	42 87       	std	Z+10, r20	; 0x0a
    8410:	16 8a       	std	Z+22, r1	; 0x16
    8412:	15 86       	std	Z+13, r1	; 0x0d
    8414:	14 86       	std	Z+12, r1	; 0x0c
    8416:	17 86       	std	Z+15, r1	; 0x0f
    8418:	16 86       	std	Z+14, r1	; 0x0e
    841a:	81 e0       	ldi	r24, 0x01	; 1
    841c:	85 8b       	std	Z+21, r24	; 0x15
    841e:	84 8b       	std	Z+20, r24	; 0x14
    8420:	2f ef       	ldi	r18, 0xFF	; 255
    8422:	3f ef       	ldi	r19, 0xFF	; 255
    8424:	33 8b       	std	Z+19, r19	; 0x13
    8426:	22 8b       	std	Z+18, r18	; 0x12
    8428:	31 8b       	std	Z+17, r19	; 0x11
    842a:	20 8b       	std	Z+16, r18	; 0x10
    842c:	87 8b       	std	Z+23, r24	; 0x17
    842e:	10 8e       	std	Z+24, r1	; 0x18
    8430:	12 8e       	std	Z+26, r1	; 0x1a
    8432:	11 8e       	std	Z+25, r1	; 0x19
    8434:	08 95       	ret

00008436 <Adafruit_GFX::drawCircle(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX10drawCircleEiiij():
    8436:	2f 92       	push	r2
    8438:	3f 92       	push	r3
    843a:	4f 92       	push	r4
    843c:	5f 92       	push	r5
    843e:	6f 92       	push	r6
    8440:	7f 92       	push	r7
    8442:	8f 92       	push	r8
    8444:	9f 92       	push	r9
    8446:	af 92       	push	r10
    8448:	bf 92       	push	r11
    844a:	cf 92       	push	r12
    844c:	df 92       	push	r13
    844e:	ef 92       	push	r14
    8450:	ff 92       	push	r15
    8452:	0f 93       	push	r16
    8454:	1f 93       	push	r17
    8456:	cf 93       	push	r28
    8458:	df 93       	push	r29
    845a:	cd b7       	in	r28, 0x3d	; 61
    845c:	de b7       	in	r29, 0x3e	; 62
    845e:	28 97       	sbiw	r28, 0x08	; 8
    8460:	0f b6       	in	r0, 0x3f	; 63
    8462:	f8 94       	cli
    8464:	de bf       	out	0x3e, r29	; 62
    8466:	0f be       	out	0x3f, r0	; 63
    8468:	cd bf       	out	0x3d, r28	; 61
    846a:	98 87       	std	Y+8, r25	; 0x08
    846c:	8f 83       	std	Y+7, r24	; 0x07
    846e:	3b 01       	movw	r6, r22
    8470:	2a 01       	movw	r4, r20
    8472:	79 01       	movw	r14, r18
    8474:	81 e0       	ldi	r24, 0x01	; 1
    8476:	90 e0       	ldi	r25, 0x00	; 0
    8478:	9c 01       	movw	r18, r24
    847a:	2e 19       	sub	r18, r14
    847c:	3f 09       	sbc	r19, r15
    847e:	3a 83       	std	Y+2, r19	; 0x02
    8480:	29 83       	std	Y+1, r18	; 0x01
    8482:	88 27       	eor	r24, r24
    8484:	99 27       	eor	r25, r25
    8486:	8e 19       	sub	r24, r14
    8488:	9f 09       	sbc	r25, r15
    848a:	dc 01       	movw	r26, r24
    848c:	aa 0f       	add	r26, r26
    848e:	bb 1f       	adc	r27, r27
    8490:	be 83       	std	Y+6, r27	; 0x06
    8492:	ad 83       	std	Y+5, r26	; 0x05
    8494:	af 81       	ldd	r26, Y+7	; 0x07
    8496:	b8 85       	ldd	r27, Y+8	; 0x08
    8498:	ed 91       	ld	r30, X+
    849a:	fc 91       	ld	r31, X
    849c:	11 97       	sbiw	r26, 0x01	; 1
    849e:	02 84       	ldd	r0, Z+10	; 0x0a
    84a0:	f3 85       	ldd	r31, Z+11	; 0x0b
    84a2:	e0 2d       	mov	r30, r0
    84a4:	cd 01       	movw	r24, r26
    84a6:	09 95       	icall
    84a8:	a7 01       	movw	r20, r14
    84aa:	44 0d       	add	r20, r4
    84ac:	55 1d       	adc	r21, r5
    84ae:	af 81       	ldd	r26, Y+7	; 0x07
    84b0:	b8 85       	ldd	r27, Y+8	; 0x08
    84b2:	ed 91       	ld	r30, X+
    84b4:	fc 91       	ld	r31, X
    84b6:	11 97       	sbiw	r26, 0x01	; 1
    84b8:	04 84       	ldd	r0, Z+12	; 0x0c
    84ba:	f5 85       	ldd	r31, Z+13	; 0x0d
    84bc:	e0 2d       	mov	r30, r0
    84be:	98 01       	movw	r18, r16
    84c0:	b3 01       	movw	r22, r6
    84c2:	cd 01       	movw	r24, r26
    84c4:	09 95       	icall
    84c6:	a2 01       	movw	r20, r4
    84c8:	4e 19       	sub	r20, r14
    84ca:	5f 09       	sbc	r21, r15
    84cc:	af 81       	ldd	r26, Y+7	; 0x07
    84ce:	b8 85       	ldd	r27, Y+8	; 0x08
    84d0:	ed 91       	ld	r30, X+
    84d2:	fc 91       	ld	r31, X
    84d4:	11 97       	sbiw	r26, 0x01	; 1
    84d6:	04 84       	ldd	r0, Z+12	; 0x0c
    84d8:	f5 85       	ldd	r31, Z+13	; 0x0d
    84da:	e0 2d       	mov	r30, r0
    84dc:	98 01       	movw	r18, r16
    84de:	b3 01       	movw	r22, r6
    84e0:	cd 01       	movw	r24, r26
    84e2:	09 95       	icall
    84e4:	b7 01       	movw	r22, r14
    84e6:	66 0d       	add	r22, r6
    84e8:	77 1d       	adc	r23, r7
    84ea:	af 81       	ldd	r26, Y+7	; 0x07
    84ec:	b8 85       	ldd	r27, Y+8	; 0x08
    84ee:	ed 91       	ld	r30, X+
    84f0:	fc 91       	ld	r31, X
    84f2:	11 97       	sbiw	r26, 0x01	; 1
    84f4:	04 84       	ldd	r0, Z+12	; 0x0c
    84f6:	f5 85       	ldd	r31, Z+13	; 0x0d
    84f8:	e0 2d       	mov	r30, r0
    84fa:	98 01       	movw	r18, r16
    84fc:	a2 01       	movw	r20, r4
    84fe:	cd 01       	movw	r24, r26
    8500:	09 95       	icall
    8502:	b3 01       	movw	r22, r6
    8504:	6e 19       	sub	r22, r14
    8506:	7f 09       	sbc	r23, r15
    8508:	af 81       	ldd	r26, Y+7	; 0x07
    850a:	b8 85       	ldd	r27, Y+8	; 0x08
    850c:	ed 91       	ld	r30, X+
    850e:	fc 91       	ld	r31, X
    8510:	11 97       	sbiw	r26, 0x01	; 1
    8512:	04 84       	ldd	r0, Z+12	; 0x0c
    8514:	f5 85       	ldd	r31, Z+13	; 0x0d
    8516:	e0 2d       	mov	r30, r0
    8518:	98 01       	movw	r18, r16
    851a:	a2 01       	movw	r20, r4
    851c:	cd 01       	movw	r24, r26
    851e:	09 95       	icall
    8520:	31 2c       	mov	r3, r1
    8522:	21 2c       	mov	r2, r1
    8524:	21 e0       	ldi	r18, 0x01	; 1
    8526:	30 e0       	ldi	r19, 0x00	; 0
    8528:	3c 83       	std	Y+4, r19	; 0x04
    852a:	2b 83       	std	Y+3, r18	; 0x03
    852c:	af 81       	ldd	r26, Y+7	; 0x07
    852e:	b8 85       	ldd	r27, Y+8	; 0x08
    8530:	ed 91       	ld	r30, X+
    8532:	fc 91       	ld	r31, X
    8534:	2e 14       	cp	r2, r14
    8536:	3f 04       	cpc	r3, r15
    8538:	0c f0       	brlt	.+2      	; 0x853c <Adafruit_GFX::drawCircle(int, int, int, unsigned int)+0x106>
    853a:	9e c0       	rjmp	.+316    	; 0x8678 <Adafruit_GFX::drawCircle(int, int, int, unsigned int)+0x242>
    853c:	29 81       	ldd	r18, Y+1	; 0x01
    853e:	3a 81       	ldd	r19, Y+2	; 0x02
    8540:	37 fd       	sbrc	r19, 7
    8542:	0e c0       	rjmp	.+28     	; 0x8560 <Adafruit_GFX::drawCircle(int, int, int, unsigned int)+0x12a>
    8544:	31 e0       	ldi	r19, 0x01	; 1
    8546:	e3 1a       	sub	r14, r19
    8548:	f1 08       	sbc	r15, r1
    854a:	8d 81       	ldd	r24, Y+5	; 0x05
    854c:	9e 81       	ldd	r25, Y+6	; 0x06
    854e:	02 96       	adiw	r24, 0x02	; 2
    8550:	9e 83       	std	Y+6, r25	; 0x06
    8552:	8d 83       	std	Y+5, r24	; 0x05
    8554:	a9 81       	ldd	r26, Y+1	; 0x01
    8556:	ba 81       	ldd	r27, Y+2	; 0x02
    8558:	a8 0f       	add	r26, r24
    855a:	b9 1f       	adc	r27, r25
    855c:	ba 83       	std	Y+2, r27	; 0x02
    855e:	a9 83       	std	Y+1, r26	; 0x01
    8560:	bf ef       	ldi	r27, 0xFF	; 255
    8562:	2b 1a       	sub	r2, r27
    8564:	3b 0a       	sbc	r3, r27
    8566:	2b 81       	ldd	r18, Y+3	; 0x03
    8568:	3c 81       	ldd	r19, Y+4	; 0x04
    856a:	2e 5f       	subi	r18, 0xFE	; 254
    856c:	3f 4f       	sbci	r19, 0xFF	; 255
    856e:	3c 83       	std	Y+4, r19	; 0x04
    8570:	2b 83       	std	Y+3, r18	; 0x03
    8572:	89 81       	ldd	r24, Y+1	; 0x01
    8574:	9a 81       	ldd	r25, Y+2	; 0x02
    8576:	82 0f       	add	r24, r18
    8578:	93 1f       	adc	r25, r19
    857a:	9a 83       	std	Y+2, r25	; 0x02
    857c:	89 83       	std	Y+1, r24	; 0x01
    857e:	41 01       	movw	r8, r2
    8580:	86 0c       	add	r8, r6
    8582:	97 1c       	adc	r9, r7
    8584:	04 84       	ldd	r0, Z+12	; 0x0c
    8586:	f5 85       	ldd	r31, Z+13	; 0x0d
    8588:	e0 2d       	mov	r30, r0
    858a:	98 01       	movw	r18, r16
    858c:	67 01       	movw	r12, r14
    858e:	c4 0c       	add	r12, r4
    8590:	d5 1c       	adc	r13, r5
    8592:	a6 01       	movw	r20, r12
    8594:	b4 01       	movw	r22, r8
    8596:	8f 81       	ldd	r24, Y+7	; 0x07
    8598:	98 85       	ldd	r25, Y+8	; 0x08
    859a:	09 95       	icall
    859c:	53 01       	movw	r10, r6
    859e:	a2 18       	sub	r10, r2
    85a0:	b3 08       	sbc	r11, r3
    85a2:	af 81       	ldd	r26, Y+7	; 0x07
    85a4:	b8 85       	ldd	r27, Y+8	; 0x08
    85a6:	ed 91       	ld	r30, X+
    85a8:	fc 91       	ld	r31, X
    85aa:	11 97       	sbiw	r26, 0x01	; 1
    85ac:	04 84       	ldd	r0, Z+12	; 0x0c
    85ae:	f5 85       	ldd	r31, Z+13	; 0x0d
    85b0:	e0 2d       	mov	r30, r0
    85b2:	98 01       	movw	r18, r16
    85b4:	a6 01       	movw	r20, r12
    85b6:	b5 01       	movw	r22, r10
    85b8:	cd 01       	movw	r24, r26
    85ba:	09 95       	icall
    85bc:	af 81       	ldd	r26, Y+7	; 0x07
    85be:	b8 85       	ldd	r27, Y+8	; 0x08
    85c0:	ed 91       	ld	r30, X+
    85c2:	fc 91       	ld	r31, X
    85c4:	11 97       	sbiw	r26, 0x01	; 1
    85c6:	04 84       	ldd	r0, Z+12	; 0x0c
    85c8:	f5 85       	ldd	r31, Z+13	; 0x0d
    85ca:	e0 2d       	mov	r30, r0
    85cc:	98 01       	movw	r18, r16
    85ce:	62 01       	movw	r12, r4
    85d0:	ce 18       	sub	r12, r14
    85d2:	df 08       	sbc	r13, r15
    85d4:	a6 01       	movw	r20, r12
    85d6:	b4 01       	movw	r22, r8
    85d8:	cd 01       	movw	r24, r26
    85da:	09 95       	icall
    85dc:	af 81       	ldd	r26, Y+7	; 0x07
    85de:	b8 85       	ldd	r27, Y+8	; 0x08
    85e0:	ed 91       	ld	r30, X+
    85e2:	fc 91       	ld	r31, X
    85e4:	11 97       	sbiw	r26, 0x01	; 1
    85e6:	04 84       	ldd	r0, Z+12	; 0x0c
    85e8:	f5 85       	ldd	r31, Z+13	; 0x0d
    85ea:	e0 2d       	mov	r30, r0
    85ec:	98 01       	movw	r18, r16
    85ee:	a6 01       	movw	r20, r12
    85f0:	b5 01       	movw	r22, r10
    85f2:	cd 01       	movw	r24, r26
    85f4:	09 95       	icall
    85f6:	61 01       	movw	r12, r2
    85f8:	c4 0c       	add	r12, r4
    85fa:	d5 1c       	adc	r13, r5
    85fc:	af 81       	ldd	r26, Y+7	; 0x07
    85fe:	b8 85       	ldd	r27, Y+8	; 0x08
    8600:	ed 91       	ld	r30, X+
    8602:	fc 91       	ld	r31, X
    8604:	11 97       	sbiw	r26, 0x01	; 1
    8606:	04 84       	ldd	r0, Z+12	; 0x0c
    8608:	f5 85       	ldd	r31, Z+13	; 0x0d
    860a:	e0 2d       	mov	r30, r0
    860c:	98 01       	movw	r18, r16
    860e:	a6 01       	movw	r20, r12
    8610:	57 01       	movw	r10, r14
    8612:	a6 0c       	add	r10, r6
    8614:	b7 1c       	adc	r11, r7
    8616:	b5 01       	movw	r22, r10
    8618:	cd 01       	movw	r24, r26
    861a:	09 95       	icall
    861c:	af 81       	ldd	r26, Y+7	; 0x07
    861e:	b8 85       	ldd	r27, Y+8	; 0x08
    8620:	ed 91       	ld	r30, X+
    8622:	fc 91       	ld	r31, X
    8624:	11 97       	sbiw	r26, 0x01	; 1
    8626:	04 84       	ldd	r0, Z+12	; 0x0c
    8628:	f5 85       	ldd	r31, Z+13	; 0x0d
    862a:	e0 2d       	mov	r30, r0
    862c:	98 01       	movw	r18, r16
    862e:	a6 01       	movw	r20, r12
    8630:	63 01       	movw	r12, r6
    8632:	ce 18       	sub	r12, r14
    8634:	df 08       	sbc	r13, r15
    8636:	b6 01       	movw	r22, r12
    8638:	cd 01       	movw	r24, r26
    863a:	09 95       	icall
    863c:	42 01       	movw	r8, r4
    863e:	82 18       	sub	r8, r2
    8640:	93 08       	sbc	r9, r3
    8642:	af 81       	ldd	r26, Y+7	; 0x07
    8644:	b8 85       	ldd	r27, Y+8	; 0x08
    8646:	ed 91       	ld	r30, X+
    8648:	fc 91       	ld	r31, X
    864a:	11 97       	sbiw	r26, 0x01	; 1
    864c:	04 84       	ldd	r0, Z+12	; 0x0c
    864e:	f5 85       	ldd	r31, Z+13	; 0x0d
    8650:	e0 2d       	mov	r30, r0
    8652:	98 01       	movw	r18, r16
    8654:	a4 01       	movw	r20, r8
    8656:	b5 01       	movw	r22, r10
    8658:	cd 01       	movw	r24, r26
    865a:	09 95       	icall
    865c:	af 81       	ldd	r26, Y+7	; 0x07
    865e:	b8 85       	ldd	r27, Y+8	; 0x08
    8660:	ed 91       	ld	r30, X+
    8662:	fc 91       	ld	r31, X
    8664:	11 97       	sbiw	r26, 0x01	; 1
    8666:	04 84       	ldd	r0, Z+12	; 0x0c
    8668:	f5 85       	ldd	r31, Z+13	; 0x0d
    866a:	e0 2d       	mov	r30, r0
    866c:	98 01       	movw	r18, r16
    866e:	a4 01       	movw	r20, r8
    8670:	b6 01       	movw	r22, r12
    8672:	cd 01       	movw	r24, r26
    8674:	09 95       	icall
    8676:	5a cf       	rjmp	.-332    	; 0x852c <Adafruit_GFX::drawCircle(int, int, int, unsigned int)+0xf6>
    8678:	06 88       	ldd	r0, Z+22	; 0x16
    867a:	f7 89       	ldd	r31, Z+23	; 0x17
    867c:	e0 2d       	mov	r30, r0
    867e:	8f 81       	ldd	r24, Y+7	; 0x07
    8680:	98 85       	ldd	r25, Y+8	; 0x08
    8682:	28 96       	adiw	r28, 0x08	; 8
    8684:	0f b6       	in	r0, 0x3f	; 63
    8686:	f8 94       	cli
    8688:	de bf       	out	0x3e, r29	; 62
    868a:	0f be       	out	0x3f, r0	; 63
    868c:	cd bf       	out	0x3d, r28	; 61
    868e:	df 91       	pop	r29
    8690:	cf 91       	pop	r28
    8692:	1f 91       	pop	r17
    8694:	0f 91       	pop	r16
    8696:	ff 90       	pop	r15
    8698:	ef 90       	pop	r14
    869a:	df 90       	pop	r13
    869c:	cf 90       	pop	r12
    869e:	bf 90       	pop	r11
    86a0:	af 90       	pop	r10
    86a2:	9f 90       	pop	r9
    86a4:	8f 90       	pop	r8
    86a6:	7f 90       	pop	r7
    86a8:	6f 90       	pop	r6
    86aa:	5f 90       	pop	r5
    86ac:	4f 90       	pop	r4
    86ae:	3f 90       	pop	r3
    86b0:	2f 90       	pop	r2
    86b2:	09 94       	ijmp

000086b4 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)>:
_ZN12Adafruit_GFX16drawCircleHelperEiiihj():
    86b4:	2f 92       	push	r2
    86b6:	3f 92       	push	r3
    86b8:	4f 92       	push	r4
    86ba:	5f 92       	push	r5
    86bc:	6f 92       	push	r6
    86be:	7f 92       	push	r7
    86c0:	8f 92       	push	r8
    86c2:	9f 92       	push	r9
    86c4:	af 92       	push	r10
    86c6:	bf 92       	push	r11
    86c8:	cf 92       	push	r12
    86ca:	df 92       	push	r13
    86cc:	ef 92       	push	r14
    86ce:	ff 92       	push	r15
    86d0:	0f 93       	push	r16
    86d2:	1f 93       	push	r17
    86d4:	cf 93       	push	r28
    86d6:	df 93       	push	r29
    86d8:	00 d0       	rcall	.+0      	; 0x86da <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x26>
    86da:	00 d0       	rcall	.+0      	; 0x86dc <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x28>
    86dc:	00 d0       	rcall	.+0      	; 0x86de <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x2a>
    86de:	cd b7       	in	r28, 0x3d	; 61
    86e0:	de b7       	in	r29, 0x3e	; 62
    86e2:	9e 83       	std	Y+6, r25	; 0x06
    86e4:	8d 83       	std	Y+5, r24	; 0x05
    86e6:	4b 01       	movw	r8, r22
    86e8:	3a 01       	movw	r6, r20
    86ea:	69 01       	movw	r12, r18
    86ec:	80 2f       	mov	r24, r16
    86ee:	21 e0       	ldi	r18, 0x01	; 1
    86f0:	30 e0       	ldi	r19, 0x00	; 0
    86f2:	29 01       	movw	r4, r18
    86f4:	4c 18       	sub	r4, r12
    86f6:	5d 08       	sbc	r5, r13
    86f8:	22 24       	eor	r2, r2
    86fa:	33 24       	eor	r3, r3
    86fc:	2c 18       	sub	r2, r12
    86fe:	3d 08       	sbc	r3, r13
    8700:	22 0c       	add	r2, r2
    8702:	33 1c       	adc	r3, r3
    8704:	b1 2c       	mov	r11, r1
    8706:	a1 2c       	mov	r10, r1
    8708:	01 e0       	ldi	r16, 0x01	; 1
    870a:	10 e0       	ldi	r17, 0x00	; 0
    870c:	98 2f       	mov	r25, r24
    870e:	94 70       	andi	r25, 0x04	; 4
    8710:	99 83       	std	Y+1, r25	; 0x01
    8712:	a8 2f       	mov	r26, r24
    8714:	a2 70       	andi	r26, 0x02	; 2
    8716:	aa 83       	std	Y+2, r26	; 0x02
    8718:	b8 2f       	mov	r27, r24
    871a:	b8 70       	andi	r27, 0x08	; 8
    871c:	bb 83       	std	Y+3, r27	; 0x03
    871e:	81 70       	andi	r24, 0x01	; 1
    8720:	8c 83       	std	Y+4, r24	; 0x04
    8722:	ac 14       	cp	r10, r12
    8724:	bd 04       	cpc	r11, r13
    8726:	0c f0       	brlt	.+2      	; 0x872a <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x76>
    8728:	a7 c0       	rjmp	.+334    	; 0x8878 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x1c4>
    872a:	57 fc       	sbrc	r5, 7
    872c:	08 c0       	rjmp	.+16     	; 0x873e <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x8a>
    872e:	81 e0       	ldi	r24, 0x01	; 1
    8730:	c8 1a       	sub	r12, r24
    8732:	d1 08       	sbc	r13, r1
    8734:	92 e0       	ldi	r25, 0x02	; 2
    8736:	29 0e       	add	r2, r25
    8738:	31 1c       	adc	r3, r1
    873a:	42 0c       	add	r4, r2
    873c:	53 1c       	adc	r5, r3
    873e:	af ef       	ldi	r26, 0xFF	; 255
    8740:	aa 1a       	sub	r10, r26
    8742:	ba 0a       	sbc	r11, r26
    8744:	0e 5f       	subi	r16, 0xFE	; 254
    8746:	1f 4f       	sbci	r17, 0xFF	; 255
    8748:	40 0e       	add	r4, r16
    874a:	51 1e       	adc	r5, r17
    874c:	b9 81       	ldd	r27, Y+1	; 0x01
    874e:	bb 23       	and	r27, r27
    8750:	11 f1       	breq	.+68     	; 0x8796 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0xe2>
    8752:	ad 81       	ldd	r26, Y+5	; 0x05
    8754:	be 81       	ldd	r27, Y+6	; 0x06
    8756:	ed 91       	ld	r30, X+
    8758:	fc 91       	ld	r31, X
    875a:	11 97       	sbiw	r26, 0x01	; 1
    875c:	04 84       	ldd	r0, Z+12	; 0x0c
    875e:	f5 85       	ldd	r31, Z+13	; 0x0d
    8760:	e0 2d       	mov	r30, r0
    8762:	97 01       	movw	r18, r14
    8764:	a6 01       	movw	r20, r12
    8766:	46 0d       	add	r20, r6
    8768:	57 1d       	adc	r21, r7
    876a:	b4 01       	movw	r22, r8
    876c:	6a 0d       	add	r22, r10
    876e:	7b 1d       	adc	r23, r11
    8770:	cd 01       	movw	r24, r26
    8772:	09 95       	icall
    8774:	ad 81       	ldd	r26, Y+5	; 0x05
    8776:	be 81       	ldd	r27, Y+6	; 0x06
    8778:	ed 91       	ld	r30, X+
    877a:	fc 91       	ld	r31, X
    877c:	11 97       	sbiw	r26, 0x01	; 1
    877e:	04 84       	ldd	r0, Z+12	; 0x0c
    8780:	f5 85       	ldd	r31, Z+13	; 0x0d
    8782:	e0 2d       	mov	r30, r0
    8784:	97 01       	movw	r18, r14
    8786:	a3 01       	movw	r20, r6
    8788:	4a 0d       	add	r20, r10
    878a:	5b 1d       	adc	r21, r11
    878c:	b6 01       	movw	r22, r12
    878e:	68 0d       	add	r22, r8
    8790:	79 1d       	adc	r23, r9
    8792:	cd 01       	movw	r24, r26
    8794:	09 95       	icall
    8796:	ba 81       	ldd	r27, Y+2	; 0x02
    8798:	bb 23       	and	r27, r27
    879a:	11 f1       	breq	.+68     	; 0x87e0 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x12c>
    879c:	ad 81       	ldd	r26, Y+5	; 0x05
    879e:	be 81       	ldd	r27, Y+6	; 0x06
    87a0:	ed 91       	ld	r30, X+
    87a2:	fc 91       	ld	r31, X
    87a4:	11 97       	sbiw	r26, 0x01	; 1
    87a6:	04 84       	ldd	r0, Z+12	; 0x0c
    87a8:	f5 85       	ldd	r31, Z+13	; 0x0d
    87aa:	e0 2d       	mov	r30, r0
    87ac:	97 01       	movw	r18, r14
    87ae:	a3 01       	movw	r20, r6
    87b0:	4c 19       	sub	r20, r12
    87b2:	5d 09       	sbc	r21, r13
    87b4:	b4 01       	movw	r22, r8
    87b6:	6a 0d       	add	r22, r10
    87b8:	7b 1d       	adc	r23, r11
    87ba:	cd 01       	movw	r24, r26
    87bc:	09 95       	icall
    87be:	ad 81       	ldd	r26, Y+5	; 0x05
    87c0:	be 81       	ldd	r27, Y+6	; 0x06
    87c2:	ed 91       	ld	r30, X+
    87c4:	fc 91       	ld	r31, X
    87c6:	11 97       	sbiw	r26, 0x01	; 1
    87c8:	04 84       	ldd	r0, Z+12	; 0x0c
    87ca:	f5 85       	ldd	r31, Z+13	; 0x0d
    87cc:	e0 2d       	mov	r30, r0
    87ce:	97 01       	movw	r18, r14
    87d0:	a3 01       	movw	r20, r6
    87d2:	4a 19       	sub	r20, r10
    87d4:	5b 09       	sbc	r21, r11
    87d6:	b6 01       	movw	r22, r12
    87d8:	68 0d       	add	r22, r8
    87da:	79 1d       	adc	r23, r9
    87dc:	cd 01       	movw	r24, r26
    87de:	09 95       	icall
    87e0:	bb 81       	ldd	r27, Y+3	; 0x03
    87e2:	bb 23       	and	r27, r27
    87e4:	11 f1       	breq	.+68     	; 0x882a <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x176>
    87e6:	ad 81       	ldd	r26, Y+5	; 0x05
    87e8:	be 81       	ldd	r27, Y+6	; 0x06
    87ea:	ed 91       	ld	r30, X+
    87ec:	fc 91       	ld	r31, X
    87ee:	11 97       	sbiw	r26, 0x01	; 1
    87f0:	04 84       	ldd	r0, Z+12	; 0x0c
    87f2:	f5 85       	ldd	r31, Z+13	; 0x0d
    87f4:	e0 2d       	mov	r30, r0
    87f6:	97 01       	movw	r18, r14
    87f8:	a3 01       	movw	r20, r6
    87fa:	4a 0d       	add	r20, r10
    87fc:	5b 1d       	adc	r21, r11
    87fe:	b4 01       	movw	r22, r8
    8800:	6c 19       	sub	r22, r12
    8802:	7d 09       	sbc	r23, r13
    8804:	cd 01       	movw	r24, r26
    8806:	09 95       	icall
    8808:	ad 81       	ldd	r26, Y+5	; 0x05
    880a:	be 81       	ldd	r27, Y+6	; 0x06
    880c:	ed 91       	ld	r30, X+
    880e:	fc 91       	ld	r31, X
    8810:	11 97       	sbiw	r26, 0x01	; 1
    8812:	04 84       	ldd	r0, Z+12	; 0x0c
    8814:	f5 85       	ldd	r31, Z+13	; 0x0d
    8816:	e0 2d       	mov	r30, r0
    8818:	97 01       	movw	r18, r14
    881a:	a6 01       	movw	r20, r12
    881c:	46 0d       	add	r20, r6
    881e:	57 1d       	adc	r21, r7
    8820:	b4 01       	movw	r22, r8
    8822:	6a 19       	sub	r22, r10
    8824:	7b 09       	sbc	r23, r11
    8826:	cd 01       	movw	r24, r26
    8828:	09 95       	icall
    882a:	bc 81       	ldd	r27, Y+4	; 0x04
    882c:	bb 23       	and	r27, r27
    882e:	09 f4       	brne	.+2      	; 0x8832 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x17e>
    8830:	78 cf       	rjmp	.-272    	; 0x8722 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x6e>
    8832:	ad 81       	ldd	r26, Y+5	; 0x05
    8834:	be 81       	ldd	r27, Y+6	; 0x06
    8836:	ed 91       	ld	r30, X+
    8838:	fc 91       	ld	r31, X
    883a:	11 97       	sbiw	r26, 0x01	; 1
    883c:	04 84       	ldd	r0, Z+12	; 0x0c
    883e:	f5 85       	ldd	r31, Z+13	; 0x0d
    8840:	e0 2d       	mov	r30, r0
    8842:	97 01       	movw	r18, r14
    8844:	a3 01       	movw	r20, r6
    8846:	4a 19       	sub	r20, r10
    8848:	5b 09       	sbc	r21, r11
    884a:	b4 01       	movw	r22, r8
    884c:	6c 19       	sub	r22, r12
    884e:	7d 09       	sbc	r23, r13
    8850:	cd 01       	movw	r24, r26
    8852:	09 95       	icall
    8854:	ad 81       	ldd	r26, Y+5	; 0x05
    8856:	be 81       	ldd	r27, Y+6	; 0x06
    8858:	ed 91       	ld	r30, X+
    885a:	fc 91       	ld	r31, X
    885c:	11 97       	sbiw	r26, 0x01	; 1
    885e:	04 84       	ldd	r0, Z+12	; 0x0c
    8860:	f5 85       	ldd	r31, Z+13	; 0x0d
    8862:	e0 2d       	mov	r30, r0
    8864:	97 01       	movw	r18, r14
    8866:	a3 01       	movw	r20, r6
    8868:	4c 19       	sub	r20, r12
    886a:	5d 09       	sbc	r21, r13
    886c:	b4 01       	movw	r22, r8
    886e:	6a 19       	sub	r22, r10
    8870:	7b 09       	sbc	r23, r11
    8872:	cd 01       	movw	r24, r26
    8874:	09 95       	icall
    8876:	55 cf       	rjmp	.-342    	; 0x8722 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)+0x6e>
    8878:	26 96       	adiw	r28, 0x06	; 6
    887a:	0f b6       	in	r0, 0x3f	; 63
    887c:	f8 94       	cli
    887e:	de bf       	out	0x3e, r29	; 62
    8880:	0f be       	out	0x3f, r0	; 63
    8882:	cd bf       	out	0x3d, r28	; 61
    8884:	df 91       	pop	r29
    8886:	cf 91       	pop	r28
    8888:	1f 91       	pop	r17
    888a:	0f 91       	pop	r16
    888c:	ff 90       	pop	r15
    888e:	ef 90       	pop	r14
    8890:	df 90       	pop	r13
    8892:	cf 90       	pop	r12
    8894:	bf 90       	pop	r11
    8896:	af 90       	pop	r10
    8898:	9f 90       	pop	r9
    889a:	8f 90       	pop	r8
    889c:	7f 90       	pop	r7
    889e:	6f 90       	pop	r6
    88a0:	5f 90       	pop	r5
    88a2:	4f 90       	pop	r4
    88a4:	3f 90       	pop	r3
    88a6:	2f 90       	pop	r2
    88a8:	08 95       	ret

000088aa <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)>:
_ZN12Adafruit_GFX16fillCircleHelperEiiihij():
    88aa:	2f 92       	push	r2
    88ac:	3f 92       	push	r3
    88ae:	4f 92       	push	r4
    88b0:	5f 92       	push	r5
    88b2:	6f 92       	push	r6
    88b4:	7f 92       	push	r7
    88b6:	8f 92       	push	r8
    88b8:	9f 92       	push	r9
    88ba:	af 92       	push	r10
    88bc:	bf 92       	push	r11
    88be:	cf 92       	push	r12
    88c0:	df 92       	push	r13
    88c2:	ef 92       	push	r14
    88c4:	ff 92       	push	r15
    88c6:	0f 93       	push	r16
    88c8:	1f 93       	push	r17
    88ca:	cf 93       	push	r28
    88cc:	df 93       	push	r29
    88ce:	cd b7       	in	r28, 0x3d	; 61
    88d0:	de b7       	in	r29, 0x3e	; 62
    88d2:	2e 97       	sbiw	r28, 0x0e	; 14
    88d4:	0f b6       	in	r0, 0x3f	; 63
    88d6:	f8 94       	cli
    88d8:	de bf       	out	0x3e, r29	; 62
    88da:	0f be       	out	0x3f, r0	; 63
    88dc:	cd bf       	out	0x3d, r28	; 61
    88de:	5c 01       	movw	r10, r24
    88e0:	2b 01       	movw	r4, r22
    88e2:	5c 83       	std	Y+4, r21	; 0x04
    88e4:	4b 83       	std	Y+3, r20	; 0x03
    88e6:	3e 87       	std	Y+14, r19	; 0x0e
    88e8:	2d 87       	std	Y+13, r18	; 0x0d
    88ea:	fe 82       	std	Y+6, r15	; 0x06
    88ec:	ed 82       	std	Y+5, r14	; 0x05
    88ee:	16 01       	movw	r2, r12
    88f0:	81 e0       	ldi	r24, 0x01	; 1
    88f2:	90 e0       	ldi	r25, 0x00	; 0
    88f4:	4c 01       	movw	r8, r24
    88f6:	82 1a       	sub	r8, r18
    88f8:	93 0a       	sbc	r9, r19
    88fa:	c9 01       	movw	r24, r18
    88fc:	91 95       	neg	r25
    88fe:	81 95       	neg	r24
    8900:	91 09       	sbc	r25, r1
    8902:	9c 01       	movw	r18, r24
    8904:	22 0f       	add	r18, r18
    8906:	33 1f       	adc	r19, r19
    8908:	3a 83       	std	Y+2, r19	; 0x02
    890a:	29 83       	std	Y+1, r18	; 0x01
    890c:	c7 01       	movw	r24, r14
    890e:	01 96       	adiw	r24, 0x01	; 1
    8910:	98 87       	std	Y+8, r25	; 0x08
    8912:	8f 83       	std	Y+7, r24	; 0x07
    8914:	f1 2c       	mov	r15, r1
    8916:	e1 2c       	mov	r14, r1
    8918:	66 24       	eor	r6, r6
    891a:	63 94       	inc	r6
    891c:	71 2c       	mov	r7, r1
    891e:	90 2f       	mov	r25, r16
    8920:	91 70       	andi	r25, 0x01	; 1
    8922:	99 87       	std	Y+9, r25	; 0x09
    8924:	02 70       	andi	r16, 0x02	; 2
    8926:	0a 87       	std	Y+10, r16	; 0x0a
    8928:	da 01       	movw	r26, r20
    892a:	11 96       	adiw	r26, 0x01	; 1
    892c:	bc 87       	std	Y+12, r27	; 0x0c
    892e:	ab 87       	std	Y+11, r26	; 0x0b
    8930:	2d 85       	ldd	r18, Y+13	; 0x0d
    8932:	3e 85       	ldd	r19, Y+14	; 0x0e
    8934:	e2 16       	cp	r14, r18
    8936:	f3 06       	cpc	r15, r19
    8938:	0c f0       	brlt	.+2      	; 0x893c <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x92>
    893a:	8d c0       	rjmp	.+282    	; 0x8a56 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x1ac>
    893c:	cd 84       	ldd	r12, Y+13	; 0x0d
    893e:	de 84       	ldd	r13, Y+14	; 0x0e
    8940:	97 fc       	sbrc	r9, 7
    8942:	0b c0       	rjmp	.+22     	; 0x895a <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0xb0>
    8944:	69 01       	movw	r12, r18
    8946:	31 e0       	ldi	r19, 0x01	; 1
    8948:	c3 1a       	sub	r12, r19
    894a:	d1 08       	sbc	r13, r1
    894c:	89 81       	ldd	r24, Y+1	; 0x01
    894e:	9a 81       	ldd	r25, Y+2	; 0x02
    8950:	02 96       	adiw	r24, 0x02	; 2
    8952:	9a 83       	std	Y+2, r25	; 0x02
    8954:	89 83       	std	Y+1, r24	; 0x01
    8956:	88 0e       	add	r8, r24
    8958:	99 1e       	adc	r9, r25
    895a:	9f ef       	ldi	r25, 0xFF	; 255
    895c:	e9 1a       	sub	r14, r25
    895e:	f9 0a       	sbc	r15, r25
    8960:	a2 e0       	ldi	r26, 0x02	; 2
    8962:	6a 0e       	add	r6, r26
    8964:	71 1c       	adc	r7, r1
    8966:	86 0c       	add	r8, r6
    8968:	97 1c       	adc	r9, r7
    896a:	ce 14       	cp	r12, r14
    896c:	df 04       	cpc	r13, r15
    896e:	a4 f1       	brlt	.+104    	; 0x89d8 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x12e>
    8970:	b9 85       	ldd	r27, Y+9	; 0x09
    8972:	bb 23       	and	r27, r27
    8974:	b9 f0       	breq	.+46     	; 0x89a4 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0xfa>
    8976:	96 01       	movw	r18, r12
    8978:	22 0f       	add	r18, r18
    897a:	33 1f       	adc	r19, r19
    897c:	8f 81       	ldd	r24, Y+7	; 0x07
    897e:	98 85       	ldd	r25, Y+8	; 0x08
    8980:	28 0f       	add	r18, r24
    8982:	39 1f       	adc	r19, r25
    8984:	d5 01       	movw	r26, r10
    8986:	ed 91       	ld	r30, X+
    8988:	fc 91       	ld	r31, X
    898a:	00 88       	ldd	r0, Z+16	; 0x10
    898c:	f1 89       	ldd	r31, Z+17	; 0x11
    898e:	e0 2d       	mov	r30, r0
    8990:	81 01       	movw	r16, r2
    8992:	4b 81       	ldd	r20, Y+3	; 0x03
    8994:	5c 81       	ldd	r21, Y+4	; 0x04
    8996:	4c 19       	sub	r20, r12
    8998:	5d 09       	sbc	r21, r13
    899a:	b2 01       	movw	r22, r4
    899c:	6e 0d       	add	r22, r14
    899e:	7f 1d       	adc	r23, r15
    89a0:	c5 01       	movw	r24, r10
    89a2:	09 95       	icall
    89a4:	ba 85       	ldd	r27, Y+10	; 0x0a
    89a6:	bb 23       	and	r27, r27
    89a8:	b9 f0       	breq	.+46     	; 0x89d8 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x12e>
    89aa:	96 01       	movw	r18, r12
    89ac:	22 0f       	add	r18, r18
    89ae:	33 1f       	adc	r19, r19
    89b0:	8f 81       	ldd	r24, Y+7	; 0x07
    89b2:	98 85       	ldd	r25, Y+8	; 0x08
    89b4:	28 0f       	add	r18, r24
    89b6:	39 1f       	adc	r19, r25
    89b8:	d5 01       	movw	r26, r10
    89ba:	ed 91       	ld	r30, X+
    89bc:	fc 91       	ld	r31, X
    89be:	00 88       	ldd	r0, Z+16	; 0x10
    89c0:	f1 89       	ldd	r31, Z+17	; 0x11
    89c2:	e0 2d       	mov	r30, r0
    89c4:	81 01       	movw	r16, r2
    89c6:	4b 81       	ldd	r20, Y+3	; 0x03
    89c8:	5c 81       	ldd	r21, Y+4	; 0x04
    89ca:	4c 19       	sub	r20, r12
    89cc:	5d 09       	sbc	r21, r13
    89ce:	b2 01       	movw	r22, r4
    89d0:	6e 19       	sub	r22, r14
    89d2:	7f 09       	sbc	r23, r15
    89d4:	c5 01       	movw	r24, r10
    89d6:	09 95       	icall
    89d8:	2d 85       	ldd	r18, Y+13	; 0x0d
    89da:	3e 85       	ldd	r19, Y+14	; 0x0e
    89dc:	2c 15       	cp	r18, r12
    89de:	3d 05       	cpc	r19, r13
    89e0:	b9 f1       	breq	.+110    	; 0x8a50 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x1a6>
    89e2:	39 85       	ldd	r19, Y+9	; 0x09
    89e4:	33 23       	and	r19, r19
    89e6:	c1 f0       	breq	.+48     	; 0x8a18 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x16e>
    89e8:	93 01       	movw	r18, r6
    89ea:	22 50       	subi	r18, 0x02	; 2
    89ec:	31 09       	sbc	r19, r1
    89ee:	8d 81       	ldd	r24, Y+5	; 0x05
    89f0:	9e 81       	ldd	r25, Y+6	; 0x06
    89f2:	28 0f       	add	r18, r24
    89f4:	39 1f       	adc	r19, r25
    89f6:	d5 01       	movw	r26, r10
    89f8:	ed 91       	ld	r30, X+
    89fa:	fc 91       	ld	r31, X
    89fc:	00 88       	ldd	r0, Z+16	; 0x10
    89fe:	f1 89       	ldd	r31, Z+17	; 0x11
    8a00:	e0 2d       	mov	r30, r0
    8a02:	81 01       	movw	r16, r2
    8a04:	4b 85       	ldd	r20, Y+11	; 0x0b
    8a06:	5c 85       	ldd	r21, Y+12	; 0x0c
    8a08:	4e 19       	sub	r20, r14
    8a0a:	5f 09       	sbc	r21, r15
    8a0c:	6d 85       	ldd	r22, Y+13	; 0x0d
    8a0e:	7e 85       	ldd	r23, Y+14	; 0x0e
    8a10:	64 0d       	add	r22, r4
    8a12:	75 1d       	adc	r23, r5
    8a14:	c5 01       	movw	r24, r10
    8a16:	09 95       	icall
    8a18:	ba 85       	ldd	r27, Y+10	; 0x0a
    8a1a:	bb 23       	and	r27, r27
    8a1c:	c9 f0       	breq	.+50     	; 0x8a50 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x1a6>
    8a1e:	93 01       	movw	r18, r6
    8a20:	22 50       	subi	r18, 0x02	; 2
    8a22:	31 09       	sbc	r19, r1
    8a24:	8d 81       	ldd	r24, Y+5	; 0x05
    8a26:	9e 81       	ldd	r25, Y+6	; 0x06
    8a28:	28 0f       	add	r18, r24
    8a2a:	39 1f       	adc	r19, r25
    8a2c:	b2 01       	movw	r22, r4
    8a2e:	ad 85       	ldd	r26, Y+13	; 0x0d
    8a30:	be 85       	ldd	r27, Y+14	; 0x0e
    8a32:	6a 1b       	sub	r22, r26
    8a34:	7b 0b       	sbc	r23, r27
    8a36:	d5 01       	movw	r26, r10
    8a38:	ed 91       	ld	r30, X+
    8a3a:	fc 91       	ld	r31, X
    8a3c:	00 88       	ldd	r0, Z+16	; 0x10
    8a3e:	f1 89       	ldd	r31, Z+17	; 0x11
    8a40:	e0 2d       	mov	r30, r0
    8a42:	81 01       	movw	r16, r2
    8a44:	4b 85       	ldd	r20, Y+11	; 0x0b
    8a46:	5c 85       	ldd	r21, Y+12	; 0x0c
    8a48:	4e 19       	sub	r20, r14
    8a4a:	5f 09       	sbc	r21, r15
    8a4c:	c5 01       	movw	r24, r10
    8a4e:	09 95       	icall
    8a50:	de 86       	std	Y+14, r13	; 0x0e
    8a52:	cd 86       	std	Y+13, r12	; 0x0d
    8a54:	6d cf       	rjmp	.-294    	; 0x8930 <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)+0x86>
    8a56:	2e 96       	adiw	r28, 0x0e	; 14
    8a58:	0f b6       	in	r0, 0x3f	; 63
    8a5a:	f8 94       	cli
    8a5c:	de bf       	out	0x3e, r29	; 62
    8a5e:	0f be       	out	0x3f, r0	; 63
    8a60:	cd bf       	out	0x3d, r28	; 61
    8a62:	df 91       	pop	r29
    8a64:	cf 91       	pop	r28
    8a66:	1f 91       	pop	r17
    8a68:	0f 91       	pop	r16
    8a6a:	ff 90       	pop	r15
    8a6c:	ef 90       	pop	r14
    8a6e:	df 90       	pop	r13
    8a70:	cf 90       	pop	r12
    8a72:	bf 90       	pop	r11
    8a74:	af 90       	pop	r10
    8a76:	9f 90       	pop	r9
    8a78:	8f 90       	pop	r8
    8a7a:	7f 90       	pop	r7
    8a7c:	6f 90       	pop	r6
    8a7e:	5f 90       	pop	r5
    8a80:	4f 90       	pop	r4
    8a82:	3f 90       	pop	r3
    8a84:	2f 90       	pop	r2
    8a86:	08 95       	ret

00008a88 <Adafruit_GFX::fillCircle(int, int, int, unsigned int)>:
_ZN12Adafruit_GFX10fillCircleEiiij():
    8a88:	6f 92       	push	r6
    8a8a:	7f 92       	push	r7
    8a8c:	8f 92       	push	r8
    8a8e:	9f 92       	push	r9
    8a90:	af 92       	push	r10
    8a92:	bf 92       	push	r11
    8a94:	cf 92       	push	r12
    8a96:	df 92       	push	r13
    8a98:	ef 92       	push	r14
    8a9a:	ff 92       	push	r15
    8a9c:	0f 93       	push	r16
    8a9e:	1f 93       	push	r17
    8aa0:	cf 93       	push	r28
    8aa2:	df 93       	push	r29
    8aa4:	ec 01       	movw	r28, r24
    8aa6:	4b 01       	movw	r8, r22
    8aa8:	3a 01       	movw	r6, r20
    8aaa:	59 01       	movw	r10, r18
    8aac:	68 01       	movw	r12, r16
    8aae:	e8 81       	ld	r30, Y
    8ab0:	f9 81       	ldd	r31, Y+1	; 0x01
    8ab2:	02 84       	ldd	r0, Z+10	; 0x0a
    8ab4:	f3 85       	ldd	r31, Z+11	; 0x0b
    8ab6:	e0 2d       	mov	r30, r0
    8ab8:	09 95       	icall
    8aba:	95 01       	movw	r18, r10
    8abc:	22 0f       	add	r18, r18
    8abe:	33 1f       	adc	r19, r19
    8ac0:	2f 5f       	subi	r18, 0xFF	; 255
    8ac2:	3f 4f       	sbci	r19, 0xFF	; 255
    8ac4:	a3 01       	movw	r20, r6
    8ac6:	4a 19       	sub	r20, r10
    8ac8:	5b 09       	sbc	r21, r11
    8aca:	e8 81       	ld	r30, Y
    8acc:	f9 81       	ldd	r31, Y+1	; 0x01
    8ace:	00 88       	ldd	r0, Z+16	; 0x10
    8ad0:	f1 89       	ldd	r31, Z+17	; 0x11
    8ad2:	e0 2d       	mov	r30, r0
    8ad4:	b4 01       	movw	r22, r8
    8ad6:	ce 01       	movw	r24, r28
    8ad8:	09 95       	icall
    8ada:	f1 2c       	mov	r15, r1
    8adc:	e1 2c       	mov	r14, r1
    8ade:	03 e0       	ldi	r16, 0x03	; 3
    8ae0:	95 01       	movw	r18, r10
    8ae2:	a3 01       	movw	r20, r6
    8ae4:	b4 01       	movw	r22, r8
    8ae6:	ce 01       	movw	r24, r28
    8ae8:	0e 94 55 44 	call	0x88aa	; 0x88aa <Adafruit_GFX::fillCircleHelper(int, int, int, unsigned char, int, unsigned int)>
    8aec:	e8 81       	ld	r30, Y
    8aee:	f9 81       	ldd	r31, Y+1	; 0x01
    8af0:	06 88       	ldd	r0, Z+22	; 0x16
    8af2:	f7 89       	ldd	r31, Z+23	; 0x17
    8af4:	e0 2d       	mov	r30, r0
    8af6:	ce 01       	movw	r24, r28
    8af8:	df 91       	pop	r29
    8afa:	cf 91       	pop	r28
    8afc:	1f 91       	pop	r17
    8afe:	0f 91       	pop	r16
    8b00:	ff 90       	pop	r15
    8b02:	ef 90       	pop	r14
    8b04:	df 90       	pop	r13
    8b06:	cf 90       	pop	r12
    8b08:	bf 90       	pop	r11
    8b0a:	af 90       	pop	r10
    8b0c:	9f 90       	pop	r9
    8b0e:	8f 90       	pop	r8
    8b10:	7f 90       	pop	r7
    8b12:	6f 90       	pop	r6
    8b14:	09 94       	ijmp

00008b16 <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)>:
_ZN12Adafruit_GFX13drawRoundRectEiiiiij():
    8b16:	2f 92       	push	r2
    8b18:	3f 92       	push	r3
    8b1a:	4f 92       	push	r4
    8b1c:	5f 92       	push	r5
    8b1e:	6f 92       	push	r6
    8b20:	7f 92       	push	r7
    8b22:	8f 92       	push	r8
    8b24:	9f 92       	push	r9
    8b26:	af 92       	push	r10
    8b28:	bf 92       	push	r11
    8b2a:	cf 92       	push	r12
    8b2c:	df 92       	push	r13
    8b2e:	ef 92       	push	r14
    8b30:	ff 92       	push	r15
    8b32:	0f 93       	push	r16
    8b34:	1f 93       	push	r17
    8b36:	cf 93       	push	r28
    8b38:	df 93       	push	r29
    8b3a:	cd b7       	in	r28, 0x3d	; 61
    8b3c:	de b7       	in	r29, 0x3e	; 62
    8b3e:	28 97       	sbiw	r28, 0x08	; 8
    8b40:	0f b6       	in	r0, 0x3f	; 63
    8b42:	f8 94       	cli
    8b44:	de bf       	out	0x3e, r29	; 62
    8b46:	0f be       	out	0x3f, r0	; 63
    8b48:	cd bf       	out	0x3d, r28	; 61
    8b4a:	5c 01       	movw	r10, r24
    8b4c:	7a 83       	std	Y+2, r23	; 0x02
    8b4e:	69 83       	std	Y+1, r22	; 0x01
    8b50:	2a 01       	movw	r4, r20
    8b52:	49 01       	movw	r8, r18
    8b54:	38 01       	movw	r6, r16
    8b56:	20 17       	cp	r18, r16
    8b58:	31 07       	cpc	r19, r17
    8b5a:	0c f0       	brlt	.+2      	; 0x8b5e <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x48>
    8b5c:	bf c0       	rjmp	.+382    	; 0x8cdc <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x1c6>
    8b5e:	3c 83       	std	Y+4, r19	; 0x04
    8b60:	2b 83       	std	Y+3, r18	; 0x03
    8b62:	c9 01       	movw	r24, r18
    8b64:	37 fd       	sbrc	r19, 7
    8b66:	bf c0       	rjmp	.+382    	; 0x8ce6 <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x1d0>
    8b68:	ab 81       	ldd	r26, Y+3	; 0x03
    8b6a:	bc 81       	ldd	r27, Y+4	; 0x04
    8b6c:	b5 95       	asr	r27
    8b6e:	a7 95       	ror	r26
    8b70:	bc 83       	std	Y+4, r27	; 0x04
    8b72:	ab 83       	std	Y+3, r26	; 0x03
    8b74:	8b 81       	ldd	r24, Y+3	; 0x03
    8b76:	9c 81       	ldd	r25, Y+4	; 0x04
    8b78:	98 87       	std	Y+8, r25	; 0x08
    8b7a:	8f 83       	std	Y+7, r24	; 0x07
    8b7c:	e8 16       	cp	r14, r24
    8b7e:	f9 06       	cpc	r15, r25
    8b80:	14 f4       	brge	.+4      	; 0x8b86 <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x70>
    8b82:	f8 86       	std	Y+8, r15	; 0x08
    8b84:	ef 82       	std	Y+7, r14	; 0x07
    8b86:	d5 01       	movw	r26, r10
    8b88:	ed 91       	ld	r30, X+
    8b8a:	fc 91       	ld	r31, X
    8b8c:	02 84       	ldd	r0, Z+10	; 0x0a
    8b8e:	f3 85       	ldd	r31, Z+11	; 0x0b
    8b90:	e0 2d       	mov	r30, r0
    8b92:	c5 01       	movw	r24, r10
    8b94:	09 95       	icall
    8b96:	8f 81       	ldd	r24, Y+7	; 0x07
    8b98:	98 85       	ldd	r25, Y+8	; 0x08
    8b9a:	88 0f       	add	r24, r24
    8b9c:	99 1f       	adc	r25, r25
    8b9e:	9c 83       	std	Y+4, r25	; 0x04
    8ba0:	8b 83       	std	Y+3, r24	; 0x03
    8ba2:	74 01       	movw	r14, r8
    8ba4:	e8 1a       	sub	r14, r24
    8ba6:	f9 0a       	sbc	r15, r25
    8ba8:	29 80       	ldd	r2, Y+1	; 0x01
    8baa:	3a 80       	ldd	r3, Y+2	; 0x02
    8bac:	af 81       	ldd	r26, Y+7	; 0x07
    8bae:	b8 85       	ldd	r27, Y+8	; 0x08
    8bb0:	2a 0e       	add	r2, r26
    8bb2:	3b 1e       	adc	r3, r27
    8bb4:	d5 01       	movw	r26, r10
    8bb6:	ed 91       	ld	r30, X+
    8bb8:	fc 91       	ld	r31, X
    8bba:	02 88       	ldd	r0, Z+18	; 0x12
    8bbc:	f3 89       	ldd	r31, Z+19	; 0x13
    8bbe:	e0 2d       	mov	r30, r0
    8bc0:	86 01       	movw	r16, r12
    8bc2:	97 01       	movw	r18, r14
    8bc4:	a2 01       	movw	r20, r4
    8bc6:	b1 01       	movw	r22, r2
    8bc8:	c5 01       	movw	r24, r10
    8bca:	09 95       	icall
    8bcc:	c3 01       	movw	r24, r6
    8bce:	84 0d       	add	r24, r4
    8bd0:	95 1d       	adc	r25, r5
    8bd2:	9e 83       	std	Y+6, r25	; 0x06
    8bd4:	8d 83       	std	Y+5, r24	; 0x05
    8bd6:	ac 01       	movw	r20, r24
    8bd8:	41 50       	subi	r20, 0x01	; 1
    8bda:	51 09       	sbc	r21, r1
    8bdc:	d5 01       	movw	r26, r10
    8bde:	ed 91       	ld	r30, X+
    8be0:	fc 91       	ld	r31, X
    8be2:	02 88       	ldd	r0, Z+18	; 0x12
    8be4:	f3 89       	ldd	r31, Z+19	; 0x13
    8be6:	e0 2d       	mov	r30, r0
    8be8:	97 01       	movw	r18, r14
    8bea:	b1 01       	movw	r22, r2
    8bec:	c5 01       	movw	r24, r10
    8bee:	09 95       	icall
    8bf0:	8b 81       	ldd	r24, Y+3	; 0x03
    8bf2:	9c 81       	ldd	r25, Y+4	; 0x04
    8bf4:	68 1a       	sub	r6, r24
    8bf6:	79 0a       	sbc	r7, r25
    8bf8:	af 81       	ldd	r26, Y+7	; 0x07
    8bfa:	b8 85       	ldd	r27, Y+8	; 0x08
    8bfc:	4a 0e       	add	r4, r26
    8bfe:	5b 1e       	adc	r5, r27
    8c00:	d5 01       	movw	r26, r10
    8c02:	ed 91       	ld	r30, X+
    8c04:	fc 91       	ld	r31, X
    8c06:	00 88       	ldd	r0, Z+16	; 0x10
    8c08:	f1 89       	ldd	r31, Z+17	; 0x11
    8c0a:	e0 2d       	mov	r30, r0
    8c0c:	93 01       	movw	r18, r6
    8c0e:	a2 01       	movw	r20, r4
    8c10:	69 81       	ldd	r22, Y+1	; 0x01
    8c12:	7a 81       	ldd	r23, Y+2	; 0x02
    8c14:	c5 01       	movw	r24, r10
    8c16:	09 95       	icall
    8c18:	89 81       	ldd	r24, Y+1	; 0x01
    8c1a:	9a 81       	ldd	r25, Y+2	; 0x02
    8c1c:	88 0e       	add	r8, r24
    8c1e:	99 1e       	adc	r9, r25
    8c20:	b4 01       	movw	r22, r8
    8c22:	61 50       	subi	r22, 0x01	; 1
    8c24:	71 09       	sbc	r23, r1
    8c26:	d5 01       	movw	r26, r10
    8c28:	ed 91       	ld	r30, X+
    8c2a:	fc 91       	ld	r31, X
    8c2c:	00 88       	ldd	r0, Z+16	; 0x10
    8c2e:	f1 89       	ldd	r31, Z+17	; 0x11
    8c30:	e0 2d       	mov	r30, r0
    8c32:	93 01       	movw	r18, r6
    8c34:	a2 01       	movw	r20, r4
    8c36:	c5 01       	movw	r24, r10
    8c38:	09 95       	icall
    8c3a:	76 01       	movw	r14, r12
    8c3c:	01 e0       	ldi	r16, 0x01	; 1
    8c3e:	2f 81       	ldd	r18, Y+7	; 0x07
    8c40:	38 85       	ldd	r19, Y+8	; 0x08
    8c42:	a2 01       	movw	r20, r4
    8c44:	b1 01       	movw	r22, r2
    8c46:	c5 01       	movw	r24, r10
    8c48:	0e 94 5a 43 	call	0x86b4	; 0x86b4 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)>
    8c4c:	8f 81       	ldd	r24, Y+7	; 0x07
    8c4e:	98 85       	ldd	r25, Y+8	; 0x08
    8c50:	88 1a       	sub	r8, r24
    8c52:	99 0a       	sbc	r9, r25
    8c54:	91 e0       	ldi	r25, 0x01	; 1
    8c56:	89 1a       	sub	r8, r25
    8c58:	91 08       	sbc	r9, r1
    8c5a:	02 e0       	ldi	r16, 0x02	; 2
    8c5c:	2f 81       	ldd	r18, Y+7	; 0x07
    8c5e:	38 85       	ldd	r19, Y+8	; 0x08
    8c60:	a2 01       	movw	r20, r4
    8c62:	b4 01       	movw	r22, r8
    8c64:	c5 01       	movw	r24, r10
    8c66:	0e 94 5a 43 	call	0x86b4	; 0x86b4 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)>
    8c6a:	6d 80       	ldd	r6, Y+5	; 0x05
    8c6c:	7e 80       	ldd	r7, Y+6	; 0x06
    8c6e:	af 81       	ldd	r26, Y+7	; 0x07
    8c70:	b8 85       	ldd	r27, Y+8	; 0x08
    8c72:	6a 1a       	sub	r6, r26
    8c74:	7b 0a       	sbc	r7, r27
    8c76:	b1 e0       	ldi	r27, 0x01	; 1
    8c78:	6b 1a       	sub	r6, r27
    8c7a:	71 08       	sbc	r7, r1
    8c7c:	04 e0       	ldi	r16, 0x04	; 4
    8c7e:	2f 81       	ldd	r18, Y+7	; 0x07
    8c80:	38 85       	ldd	r19, Y+8	; 0x08
    8c82:	a3 01       	movw	r20, r6
    8c84:	b4 01       	movw	r22, r8
    8c86:	c5 01       	movw	r24, r10
    8c88:	0e 94 5a 43 	call	0x86b4	; 0x86b4 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)>
    8c8c:	08 e0       	ldi	r16, 0x08	; 8
    8c8e:	2f 81       	ldd	r18, Y+7	; 0x07
    8c90:	38 85       	ldd	r19, Y+8	; 0x08
    8c92:	a3 01       	movw	r20, r6
    8c94:	b1 01       	movw	r22, r2
    8c96:	c5 01       	movw	r24, r10
    8c98:	0e 94 5a 43 	call	0x86b4	; 0x86b4 <Adafruit_GFX::drawCircleHelper(int, int, int, unsigned char, unsigned int)>
    8c9c:	d5 01       	movw	r26, r10
    8c9e:	ed 91       	ld	r30, X+
    8ca0:	fc 91       	ld	r31, X
    8ca2:	06 88       	ldd	r0, Z+22	; 0x16
    8ca4:	f7 89       	ldd	r31, Z+23	; 0x17
    8ca6:	e0 2d       	mov	r30, r0
    8ca8:	c5 01       	movw	r24, r10
    8caa:	28 96       	adiw	r28, 0x08	; 8
    8cac:	0f b6       	in	r0, 0x3f	; 63
    8cae:	f8 94       	cli
    8cb0:	de bf       	out	0x3e, r29	; 62
    8cb2:	0f be       	out	0x3f, r0	; 63
    8cb4:	cd bf       	out	0x3d, r28	; 61
    8cb6:	df 91       	pop	r29
    8cb8:	cf 91       	pop	r28
    8cba:	1f 91       	pop	r17
    8cbc:	0f 91       	pop	r16
    8cbe:	ff 90       	pop	r15
    8cc0:	ef 90       	pop	r14
    8cc2:	df 90       	pop	r13
    8cc4:	cf 90       	pop	r12
    8cc6:	bf 90       	pop	r11
    8cc8:	af 90       	pop	r10
    8cca:	9f 90       	pop	r9
    8ccc:	8f 90       	pop	r8
    8cce:	7f 90       	pop	r7
    8cd0:	6f 90       	pop	r6
    8cd2:	5f 90       	pop	r5
    8cd4:	4f 90       	pop	r4
    8cd6:	3f 90       	pop	r3
    8cd8:	2f 90       	pop	r2
    8cda:	09 94       	ijmp
    8cdc:	1c 83       	std	Y+4, r17	; 0x04
    8cde:	0b 83       	std	Y+3, r16	; 0x03
    8ce0:	17 ff       	sbrs	r17, 7
    8ce2:	42 cf       	rjmp	.-380    	; 0x8b68 <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x52>
    8ce4:	c8 01       	movw	r24, r16
    8ce6:	01 96       	adiw	r24, 0x01	; 1
    8ce8:	9c 83       	std	Y+4, r25	; 0x04
    8cea:	8b 83       	std	Y+3, r24	; 0x03
    8cec:	3d cf       	rjmp	.-390    	; 0x8b68 <Adafruit_GFX::drawRoundRect(int, int, int, int, int, unsigned int)+0x52>

00008cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>:
_ZN12Adafruit_GFX10drawBitmapEiiPKhiij():
    8cee:	3f 92       	push	r3
    8cf0:	4f 92       	push	r4
    8cf2:	5f 92       	push	r5
    8cf4:	6f 92       	push	r6
    8cf6:	7f 92       	push	r7
    8cf8:	8f 92       	push	r8
    8cfa:	9f 92       	push	r9
    8cfc:	af 92       	push	r10
    8cfe:	bf 92       	push	r11
    8d00:	cf 92       	push	r12
    8d02:	df 92       	push	r13
    8d04:	ef 92       	push	r14
    8d06:	ff 92       	push	r15
    8d08:	0f 93       	push	r16
    8d0a:	1f 93       	push	r17
    8d0c:	cf 93       	push	r28
    8d0e:	df 93       	push	r29
    8d10:	cd b7       	in	r28, 0x3d	; 61
    8d12:	de b7       	in	r29, 0x3e	; 62
    8d14:	2a 97       	sbiw	r28, 0x0a	; 10
    8d16:	0f b6       	in	r0, 0x3f	; 63
    8d18:	f8 94       	cli
    8d1a:	de bf       	out	0x3e, r29	; 62
    8d1c:	0f be       	out	0x3f, r0	; 63
    8d1e:	cd bf       	out	0x3d, r28	; 61
    8d20:	9a 87       	std	Y+10, r25	; 0x0a
    8d22:	89 87       	std	Y+9, r24	; 0x09
    8d24:	7e 83       	std	Y+6, r23	; 0x06
    8d26:	6d 83       	std	Y+5, r22	; 0x05
    8d28:	58 87       	std	Y+8, r21	; 0x08
    8d2a:	4f 83       	std	Y+7, r20	; 0x07
    8d2c:	29 01       	movw	r4, r18
    8d2e:	37 01       	movw	r6, r14
    8d30:	dc 01       	movw	r26, r24
    8d32:	ed 91       	ld	r30, X+
    8d34:	fc 91       	ld	r31, X
    8d36:	02 84       	ldd	r0, Z+10	; 0x0a
    8d38:	f3 85       	ldd	r31, Z+11	; 0x0b
    8d3a:	e0 2d       	mov	r30, r0
    8d3c:	09 95       	icall
    8d3e:	c8 01       	movw	r24, r16
    8d40:	07 96       	adiw	r24, 0x07	; 7
    8d42:	97 fd       	sbrc	r25, 7
    8d44:	07 96       	adiw	r24, 0x07	; 7
    8d46:	9c 01       	movw	r18, r24
    8d48:	93 e0       	ldi	r25, 0x03	; 3
    8d4a:	35 95       	asr	r19
    8d4c:	27 95       	ror	r18
    8d4e:	9a 95       	dec	r25
    8d50:	e1 f7       	brne	.-8      	; 0x8d4a <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0x5c>
    8d52:	3a 83       	std	Y+2, r19	; 0x02
    8d54:	29 83       	std	Y+1, r18	; 0x01
    8d56:	91 2c       	mov	r9, r1
    8d58:	81 2c       	mov	r8, r1
    8d5a:	b1 2c       	mov	r11, r1
    8d5c:	a1 2c       	mov	r10, r1
    8d5e:	31 2c       	mov	r3, r1
    8d60:	8f 81       	ldd	r24, Y+7	; 0x07
    8d62:	98 85       	ldd	r25, Y+8	; 0x08
    8d64:	8a 0d       	add	r24, r10
    8d66:	9b 1d       	adc	r25, r11
    8d68:	9c 83       	std	Y+4, r25	; 0x04
    8d6a:	8b 83       	std	Y+3, r24	; 0x03
    8d6c:	a6 14       	cp	r10, r6
    8d6e:	b7 04       	cpc	r11, r7
    8d70:	ac f5       	brge	.+106    	; 0x8ddc <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0xee>
    8d72:	f1 2c       	mov	r15, r1
    8d74:	e1 2c       	mov	r14, r1
    8d76:	e0 16       	cp	r14, r16
    8d78:	f1 06       	cpc	r15, r17
    8d7a:	44 f5       	brge	.+80     	; 0x8dcc <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0xde>
    8d7c:	c7 01       	movw	r24, r14
    8d7e:	87 70       	andi	r24, 0x07	; 7
    8d80:	99 27       	eor	r25, r25
    8d82:	33 0c       	add	r3, r3
    8d84:	89 2b       	or	r24, r25
    8d86:	59 f4       	brne	.+22     	; 0x8d9e <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0xb0>
    8d88:	f7 01       	movw	r30, r14
    8d8a:	83 e0       	ldi	r24, 0x03	; 3
    8d8c:	f5 95       	asr	r31
    8d8e:	e7 95       	ror	r30
    8d90:	8a 95       	dec	r24
    8d92:	e1 f7       	brne	.-8      	; 0x8d8c <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0x9e>
    8d94:	e8 0d       	add	r30, r8
    8d96:	f9 1d       	adc	r31, r9
    8d98:	e4 0d       	add	r30, r4
    8d9a:	f5 1d       	adc	r31, r5
    8d9c:	34 90       	lpm	r3, Z
    8d9e:	37 fe       	sbrs	r3, 7
    8da0:	11 c0       	rjmp	.+34     	; 0x8dc4 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0xd6>
    8da2:	a9 85       	ldd	r26, Y+9	; 0x09
    8da4:	ba 85       	ldd	r27, Y+10	; 0x0a
    8da6:	ed 91       	ld	r30, X+
    8da8:	fc 91       	ld	r31, X
    8daa:	11 97       	sbiw	r26, 0x01	; 1
    8dac:	04 84       	ldd	r0, Z+12	; 0x0c
    8dae:	f5 85       	ldd	r31, Z+13	; 0x0d
    8db0:	e0 2d       	mov	r30, r0
    8db2:	96 01       	movw	r18, r12
    8db4:	4b 81       	ldd	r20, Y+3	; 0x03
    8db6:	5c 81       	ldd	r21, Y+4	; 0x04
    8db8:	6d 81       	ldd	r22, Y+5	; 0x05
    8dba:	7e 81       	ldd	r23, Y+6	; 0x06
    8dbc:	6e 0d       	add	r22, r14
    8dbe:	7f 1d       	adc	r23, r15
    8dc0:	cd 01       	movw	r24, r26
    8dc2:	09 95       	icall
    8dc4:	bf ef       	ldi	r27, 0xFF	; 255
    8dc6:	eb 1a       	sub	r14, r27
    8dc8:	fb 0a       	sbc	r15, r27
    8dca:	d5 cf       	rjmp	.-86     	; 0x8d76 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0x88>
    8dcc:	2f ef       	ldi	r18, 0xFF	; 255
    8dce:	a2 1a       	sub	r10, r18
    8dd0:	b2 0a       	sbc	r11, r18
    8dd2:	89 81       	ldd	r24, Y+1	; 0x01
    8dd4:	9a 81       	ldd	r25, Y+2	; 0x02
    8dd6:	88 0e       	add	r8, r24
    8dd8:	99 1e       	adc	r9, r25
    8dda:	c2 cf       	rjmp	.-124    	; 0x8d60 <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)+0x72>
    8ddc:	a9 85       	ldd	r26, Y+9	; 0x09
    8dde:	ba 85       	ldd	r27, Y+10	; 0x0a
    8de0:	ed 91       	ld	r30, X+
    8de2:	fc 91       	ld	r31, X
    8de4:	11 97       	sbiw	r26, 0x01	; 1
    8de6:	06 88       	ldd	r0, Z+22	; 0x16
    8de8:	f7 89       	ldd	r31, Z+23	; 0x17
    8dea:	e0 2d       	mov	r30, r0
    8dec:	cd 01       	movw	r24, r26
    8dee:	2a 96       	adiw	r28, 0x0a	; 10
    8df0:	0f b6       	in	r0, 0x3f	; 63
    8df2:	f8 94       	cli
    8df4:	de bf       	out	0x3e, r29	; 62
    8df6:	0f be       	out	0x3f, r0	; 63
    8df8:	cd bf       	out	0x3d, r28	; 61
    8dfa:	df 91       	pop	r29
    8dfc:	cf 91       	pop	r28
    8dfe:	1f 91       	pop	r17
    8e00:	0f 91       	pop	r16
    8e02:	ff 90       	pop	r15
    8e04:	ef 90       	pop	r14
    8e06:	df 90       	pop	r13
    8e08:	cf 90       	pop	r12
    8e0a:	bf 90       	pop	r11
    8e0c:	af 90       	pop	r10
    8e0e:	9f 90       	pop	r9
    8e10:	8f 90       	pop	r8
    8e12:	7f 90       	pop	r7
    8e14:	6f 90       	pop	r6
    8e16:	5f 90       	pop	r5
    8e18:	4f 90       	pop	r4
    8e1a:	3f 90       	pop	r3
    8e1c:	09 94       	ijmp

00008e1e <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)>:
_ZN12Adafruit_GFX8drawCharEiihjjhh():
    8e1e:	2f 92       	push	r2
    8e20:	3f 92       	push	r3
    8e22:	4f 92       	push	r4
    8e24:	5f 92       	push	r5
    8e26:	6f 92       	push	r6
    8e28:	7f 92       	push	r7
    8e2a:	8f 92       	push	r8
    8e2c:	9f 92       	push	r9
    8e2e:	af 92       	push	r10
    8e30:	bf 92       	push	r11
    8e32:	cf 92       	push	r12
    8e34:	df 92       	push	r13
    8e36:	ef 92       	push	r14
    8e38:	ff 92       	push	r15
    8e3a:	0f 93       	push	r16
    8e3c:	1f 93       	push	r17
    8e3e:	cf 93       	push	r28
    8e40:	df 93       	push	r29
    8e42:	cd b7       	in	r28, 0x3d	; 61
    8e44:	de b7       	in	r29, 0x3e	; 62
    8e46:	6a 97       	sbiw	r28, 0x1a	; 26
    8e48:	0f b6       	in	r0, 0x3f	; 63
    8e4a:	f8 94       	cli
    8e4c:	de bf       	out	0x3e, r29	; 62
    8e4e:	0f be       	out	0x3f, r0	; 63
    8e50:	cd bf       	out	0x3d, r28	; 61
    8e52:	9a 8f       	std	Y+26, r25	; 0x1a
    8e54:	89 8f       	std	Y+25, r24	; 0x19
    8e56:	7a 83       	std	Y+2, r23	; 0x02
    8e58:	69 83       	std	Y+1, r22	; 0x01
    8e5a:	4a 01       	movw	r8, r20
    8e5c:	d2 2e       	mov	r13, r18
    8e5e:	18 87       	std	Y+8, r17	; 0x08
    8e60:	0f 83       	std	Y+7, r16	; 0x07
    8e62:	37 01       	movw	r6, r14
    8e64:	bc 2c       	mov	r11, r12
    8e66:	dc 01       	movw	r26, r24
    8e68:	59 96       	adiw	r26, 0x19	; 25
    8e6a:	2d 91       	ld	r18, X+
    8e6c:	3c 91       	ld	r19, X
    8e6e:	5a 97       	sbiw	r26, 0x1a	; 26
    8e70:	21 15       	cp	r18, r1
    8e72:	31 05       	cpc	r19, r1
    8e74:	09 f0       	breq	.+2      	; 0x8e78 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x5a>
    8e76:	15 c1       	rjmp	.+554    	; 0x90a2 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x284>
    8e78:	18 96       	adiw	r26, 0x08	; 8
    8e7a:	8d 91       	ld	r24, X+
    8e7c:	9c 91       	ld	r25, X
    8e7e:	19 97       	sbiw	r26, 0x09	; 9
    8e80:	68 17       	cp	r22, r24
    8e82:	79 07       	cpc	r23, r25
    8e84:	0c f0       	brlt	.+2      	; 0x8e88 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x6a>
    8e86:	d7 c1       	rjmp	.+942    	; 0x9236 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    8e88:	1a 96       	adiw	r26, 0x0a	; 10
    8e8a:	8d 91       	ld	r24, X+
    8e8c:	9c 91       	ld	r25, X
    8e8e:	48 17       	cp	r20, r24
    8e90:	59 07       	cpc	r21, r25
    8e92:	0c f0       	brlt	.+2      	; 0x8e96 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x78>
    8e94:	d0 c1       	rjmp	.+928    	; 0x9236 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    8e96:	4c 2c       	mov	r4, r12
    8e98:	51 2c       	mov	r5, r1
    8e9a:	b6 e0       	ldi	r27, 0x06	; 6
    8e9c:	cb 9e       	mul	r12, r27
    8e9e:	60 0d       	add	r22, r0
    8ea0:	71 1d       	adc	r23, r1
    8ea2:	11 24       	eor	r1, r1
    8ea4:	7c 87       	std	Y+12, r23	; 0x0c
    8ea6:	6b 87       	std	Y+11, r22	; 0x0b
    8ea8:	16 16       	cp	r1, r22
    8eaa:	17 06       	cpc	r1, r23
    8eac:	0c f0       	brlt	.+2      	; 0x8eb0 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x92>
    8eae:	c3 c1       	rjmp	.+902    	; 0x9236 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    8eb0:	ea 2d       	mov	r30, r10
    8eb2:	f0 e0       	ldi	r31, 0x00	; 0
    8eb4:	fa 87       	std	Y+10, r31	; 0x0a
    8eb6:	e9 87       	std	Y+9, r30	; 0x09
    8eb8:	93 e0       	ldi	r25, 0x03	; 3
    8eba:	ee 0f       	add	r30, r30
    8ebc:	ff 1f       	adc	r31, r31
    8ebe:	9a 95       	dec	r25
    8ec0:	e1 f7       	brne	.-8      	; 0x8eba <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x9c>
    8ec2:	f8 8b       	std	Y+16, r31	; 0x10
    8ec4:	ef 87       	std	Y+15, r30	; 0x0f
    8ec6:	cf 01       	movw	r24, r30
    8ec8:	84 0f       	add	r24, r20
    8eca:	95 1f       	adc	r25, r21
    8ecc:	18 16       	cp	r1, r24
    8ece:	19 06       	cpc	r1, r25
    8ed0:	0c f0       	brlt	.+2      	; 0x8ed4 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0xb6>
    8ed2:	b1 c1       	rjmp	.+866    	; 0x9236 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x418>
    8ed4:	a9 8d       	ldd	r26, Y+25	; 0x19
    8ed6:	ba 8d       	ldd	r27, Y+26	; 0x1a
    8ed8:	58 96       	adiw	r26, 0x18	; 24
    8eda:	8c 91       	ld	r24, X
    8edc:	81 11       	cpse	r24, r1
    8ede:	04 c0       	rjmp	.+8      	; 0x8ee8 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0xca>
    8ee0:	bf ea       	ldi	r27, 0xAF	; 175
    8ee2:	bd 15       	cp	r27, r13
    8ee4:	08 f4       	brcc	.+2      	; 0x8ee8 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0xca>
    8ee6:	d3 94       	inc	r13
    8ee8:	a9 8d       	ldd	r26, Y+25	; 0x19
    8eea:	ba 8d       	ldd	r27, Y+26	; 0x1a
    8eec:	ed 91       	ld	r30, X+
    8eee:	fc 91       	ld	r31, X
    8ef0:	11 97       	sbiw	r26, 0x01	; 1
    8ef2:	02 84       	ldd	r0, Z+10	; 0x0a
    8ef4:	f3 85       	ldd	r31, Z+11	; 0x0b
    8ef6:	e0 2d       	mov	r30, r0
    8ef8:	cd 01       	movw	r24, r26
    8efa:	09 95       	icall
    8efc:	b5 e0       	ldi	r27, 0x05	; 5
    8efe:	db 9e       	mul	r13, r27
    8f00:	c0 01       	movw	r24, r0
    8f02:	11 24       	eor	r1, r1
    8f04:	e9 81       	ldd	r30, Y+1	; 0x01
    8f06:	fa 81       	ldd	r31, Y+2	; 0x02
    8f08:	fc 83       	std	Y+4, r31	; 0x04
    8f0a:	eb 83       	std	Y+3, r30	; 0x03
    8f0c:	31 2c       	mov	r3, r1
    8f0e:	21 2c       	mov	r2, r1
    8f10:	9c 01       	movw	r18, r24
    8f12:	27 57       	subi	r18, 0x77	; 119
    8f14:	39 4e       	sbci	r19, 0xE9	; 233
    8f16:	38 8f       	std	Y+24, r19	; 0x18
    8f18:	2f 8b       	std	Y+23, r18	; 0x17
    8f1a:	4a 2d       	mov	r20, r10
    8f1c:	50 e0       	ldi	r21, 0x00	; 0
    8f1e:	5e 8b       	std	Y+22, r21	; 0x16
    8f20:	4d 8b       	std	Y+21, r20	; 0x15
    8f22:	ef 89       	ldd	r30, Y+23	; 0x17
    8f24:	f8 8d       	ldd	r31, Y+24	; 0x18
    8f26:	e2 0d       	add	r30, r2
    8f28:	f3 1d       	adc	r31, r3
    8f2a:	44 91       	lpm	r20, Z
    8f2c:	9e 82       	std	Y+6, r9	; 0x06
    8f2e:	8d 82       	std	Y+5, r8	; 0x05
    8f30:	d1 2c       	mov	r13, r1
    8f32:	c1 2c       	mov	r12, r1
    8f34:	69 81       	ldd	r22, Y+1	; 0x01
    8f36:	7a 81       	ldd	r23, Y+2	; 0x02
    8f38:	62 0d       	add	r22, r2
    8f3a:	73 1d       	adc	r23, r3
    8f3c:	7a 8b       	std	Y+18, r23	; 0x12
    8f3e:	69 8b       	std	Y+17, r22	; 0x11
    8f40:	84 2f       	mov	r24, r20
    8f42:	90 e0       	ldi	r25, 0x00	; 0
    8f44:	9c 8b       	std	Y+20, r25	; 0x14
    8f46:	8b 8b       	std	Y+19, r24	; 0x13
    8f48:	e9 8d       	ldd	r30, Y+25	; 0x19
    8f4a:	fa 8d       	ldd	r31, Y+26	; 0x1a
    8f4c:	a0 81       	ld	r26, Z
    8f4e:	b1 81       	ldd	r27, Z+1	; 0x01
    8f50:	40 ff       	sbrs	r20, 0
    8f52:	82 c0       	rjmp	.+260    	; 0x9058 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x23a>
    8f54:	f1 e0       	ldi	r31, 0x01	; 1
    8f56:	bf 12       	cpse	r11, r31
    8f58:	6f c0       	rjmp	.+222    	; 0x9038 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x21a>
    8f5a:	af 12       	cpse	r10, r31
    8f5c:	6d c0       	rjmp	.+218    	; 0x9038 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x21a>
    8f5e:	1c 96       	adiw	r26, 0x0c	; 12
    8f60:	ed 91       	ld	r30, X+
    8f62:	fc 91       	ld	r31, X
    8f64:	2f 81       	ldd	r18, Y+7	; 0x07
    8f66:	38 85       	ldd	r19, Y+8	; 0x08
    8f68:	a4 01       	movw	r20, r8
    8f6a:	4c 0d       	add	r20, r12
    8f6c:	5d 1d       	adc	r21, r13
    8f6e:	69 89       	ldd	r22, Y+17	; 0x11
    8f70:	7a 89       	ldd	r23, Y+18	; 0x12
    8f72:	89 8d       	ldd	r24, Y+25	; 0x19
    8f74:	9a 8d       	ldd	r25, Y+26	; 0x1a
    8f76:	09 95       	icall
    8f78:	eb 89       	ldd	r30, Y+19	; 0x13
    8f7a:	fc 89       	ldd	r31, Y+20	; 0x14
    8f7c:	f5 95       	asr	r31
    8f7e:	e7 95       	ror	r30
    8f80:	4e 2f       	mov	r20, r30
    8f82:	5f ef       	ldi	r21, 0xFF	; 255
    8f84:	c5 1a       	sub	r12, r21
    8f86:	d5 0a       	sbc	r13, r21
    8f88:	6d 81       	ldd	r22, Y+5	; 0x05
    8f8a:	7e 81       	ldd	r23, Y+6	; 0x06
    8f8c:	8d 89       	ldd	r24, Y+21	; 0x15
    8f8e:	9e 89       	ldd	r25, Y+22	; 0x16
    8f90:	68 0f       	add	r22, r24
    8f92:	79 1f       	adc	r23, r25
    8f94:	7e 83       	std	Y+6, r23	; 0x06
    8f96:	6d 83       	std	Y+5, r22	; 0x05
    8f98:	98 e0       	ldi	r25, 0x08	; 8
    8f9a:	c9 16       	cp	r12, r25
    8f9c:	d1 04       	cpc	r13, r1
    8f9e:	81 f6       	brne	.-96     	; 0x8f40 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x122>
    8fa0:	af ef       	ldi	r26, 0xFF	; 255
    8fa2:	2a 1a       	sub	r2, r26
    8fa4:	3a 0a       	sbc	r3, r26
    8fa6:	eb 81       	ldd	r30, Y+3	; 0x03
    8fa8:	fc 81       	ldd	r31, Y+4	; 0x04
    8faa:	e4 0d       	add	r30, r4
    8fac:	f5 1d       	adc	r31, r5
    8fae:	fc 83       	std	Y+4, r31	; 0x04
    8fb0:	eb 83       	std	Y+3, r30	; 0x03
    8fb2:	f5 e0       	ldi	r31, 0x05	; 5
    8fb4:	2f 16       	cp	r2, r31
    8fb6:	31 04       	cpc	r3, r1
    8fb8:	09 f0       	breq	.+2      	; 0x8fbc <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x19e>
    8fba:	b3 cf       	rjmp	.-154    	; 0x8f22 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x104>
    8fbc:	2f 81       	ldd	r18, Y+7	; 0x07
    8fbe:	38 85       	ldd	r19, Y+8	; 0x08
    8fc0:	26 15       	cp	r18, r6
    8fc2:	37 05       	cpc	r19, r7
    8fc4:	b9 f0       	breq	.+46     	; 0x8ff4 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x1d6>
    8fc6:	a9 8d       	ldd	r26, Y+25	; 0x19
    8fc8:	ba 8d       	ldd	r27, Y+26	; 0x1a
    8fca:	ed 91       	ld	r30, X+
    8fcc:	fc 91       	ld	r31, X
    8fce:	b1 e0       	ldi	r27, 0x01	; 1
    8fd0:	bb 12       	cpse	r11, r27
    8fd2:	57 c0       	rjmp	.+174    	; 0x9082 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x264>
    8fd4:	ab 12       	cpse	r10, r27
    8fd6:	55 c0       	rjmp	.+170    	; 0x9082 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x264>
    8fd8:	69 81       	ldd	r22, Y+1	; 0x01
    8fda:	7a 81       	ldd	r23, Y+2	; 0x02
    8fdc:	6b 5f       	subi	r22, 0xFB	; 251
    8fde:	7f 4f       	sbci	r23, 0xFF	; 255
    8fe0:	00 88       	ldd	r0, Z+16	; 0x10
    8fe2:	f1 89       	ldd	r31, Z+17	; 0x11
    8fe4:	e0 2d       	mov	r30, r0
    8fe6:	83 01       	movw	r16, r6
    8fe8:	28 e0       	ldi	r18, 0x08	; 8
    8fea:	30 e0       	ldi	r19, 0x00	; 0
    8fec:	a4 01       	movw	r20, r8
    8fee:	89 8d       	ldd	r24, Y+25	; 0x19
    8ff0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    8ff2:	09 95       	icall
    8ff4:	a9 8d       	ldd	r26, Y+25	; 0x19
    8ff6:	ba 8d       	ldd	r27, Y+26	; 0x1a
    8ff8:	ed 91       	ld	r30, X+
    8ffa:	fc 91       	ld	r31, X
    8ffc:	11 97       	sbiw	r26, 0x01	; 1
    8ffe:	06 88       	ldd	r0, Z+22	; 0x16
    9000:	f7 89       	ldd	r31, Z+23	; 0x17
    9002:	e0 2d       	mov	r30, r0
    9004:	cd 01       	movw	r24, r26
    9006:	6a 96       	adiw	r28, 0x1a	; 26
    9008:	0f b6       	in	r0, 0x3f	; 63
    900a:	f8 94       	cli
    900c:	de bf       	out	0x3e, r29	; 62
    900e:	0f be       	out	0x3f, r0	; 63
    9010:	cd bf       	out	0x3d, r28	; 61
    9012:	df 91       	pop	r29
    9014:	cf 91       	pop	r28
    9016:	1f 91       	pop	r17
    9018:	0f 91       	pop	r16
    901a:	ff 90       	pop	r15
    901c:	ef 90       	pop	r14
    901e:	df 90       	pop	r13
    9020:	cf 90       	pop	r12
    9022:	bf 90       	pop	r11
    9024:	af 90       	pop	r10
    9026:	9f 90       	pop	r9
    9028:	8f 90       	pop	r8
    902a:	7f 90       	pop	r7
    902c:	6f 90       	pop	r6
    902e:	5f 90       	pop	r5
    9030:	4f 90       	pop	r4
    9032:	3f 90       	pop	r3
    9034:	2f 90       	pop	r2
    9036:	09 94       	ijmp
    9038:	1e 96       	adiw	r26, 0x0e	; 14
    903a:	ed 91       	ld	r30, X+
    903c:	fc 91       	ld	r31, X
    903e:	ef 80       	ldd	r14, Y+7	; 0x07
    9040:	f8 84       	ldd	r15, Y+8	; 0x08
    9042:	09 85       	ldd	r16, Y+9	; 0x09
    9044:	1a 85       	ldd	r17, Y+10	; 0x0a
    9046:	92 01       	movw	r18, r4
    9048:	4d 81       	ldd	r20, Y+5	; 0x05
    904a:	5e 81       	ldd	r21, Y+6	; 0x06
    904c:	6b 81       	ldd	r22, Y+3	; 0x03
    904e:	7c 81       	ldd	r23, Y+4	; 0x04
    9050:	89 8d       	ldd	r24, Y+25	; 0x19
    9052:	9a 8d       	ldd	r25, Y+26	; 0x1a
    9054:	09 95       	icall
    9056:	90 cf       	rjmp	.-224    	; 0x8f78 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x15a>
    9058:	2f 81       	ldd	r18, Y+7	; 0x07
    905a:	38 85       	ldd	r19, Y+8	; 0x08
    905c:	26 15       	cp	r18, r6
    905e:	37 05       	cpc	r19, r7
    9060:	09 f4       	brne	.+2      	; 0x9064 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x246>
    9062:	8a cf       	rjmp	.-236    	; 0x8f78 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x15a>
    9064:	31 e0       	ldi	r19, 0x01	; 1
    9066:	b3 12       	cpse	r11, r19
    9068:	07 c0       	rjmp	.+14     	; 0x9078 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x25a>
    906a:	a3 12       	cpse	r10, r19
    906c:	05 c0       	rjmp	.+10     	; 0x9078 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x25a>
    906e:	1c 96       	adiw	r26, 0x0c	; 12
    9070:	ed 91       	ld	r30, X+
    9072:	fc 91       	ld	r31, X
    9074:	93 01       	movw	r18, r6
    9076:	78 cf       	rjmp	.-272    	; 0x8f68 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x14a>
    9078:	1e 96       	adiw	r26, 0x0e	; 14
    907a:	ed 91       	ld	r30, X+
    907c:	fc 91       	ld	r31, X
    907e:	73 01       	movw	r14, r6
    9080:	e0 cf       	rjmp	.-64     	; 0x9042 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x224>
    9082:	6b 85       	ldd	r22, Y+11	; 0x0b
    9084:	7c 85       	ldd	r23, Y+12	; 0x0c
    9086:	64 19       	sub	r22, r4
    9088:	75 09       	sbc	r23, r5
    908a:	06 84       	ldd	r0, Z+14	; 0x0e
    908c:	f7 85       	ldd	r31, Z+15	; 0x0f
    908e:	e0 2d       	mov	r30, r0
    9090:	73 01       	movw	r14, r6
    9092:	0f 85       	ldd	r16, Y+15	; 0x0f
    9094:	18 89       	ldd	r17, Y+16	; 0x10
    9096:	92 01       	movw	r18, r4
    9098:	a4 01       	movw	r20, r8
    909a:	89 8d       	ldd	r24, Y+25	; 0x19
    909c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    909e:	09 95       	icall
    90a0:	a9 cf       	rjmp	.-174    	; 0x8ff4 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x1d6>
    90a2:	f9 01       	movw	r30, r18
    90a4:	34 96       	adiw	r30, 0x04	; 4
    90a6:	94 91       	lpm	r25, Z
_Z18pgm_read_glyph_ptrPK7GFXfonth():
    90a8:	32 97       	sbiw	r30, 0x02	; 2
    90aa:	45 91       	lpm	r20, Z+
    90ac:	54 91       	lpm	r21, Z
_ZN12Adafruit_GFX8drawCharEiihjjhh():
    90ae:	d9 1a       	sub	r13, r25
_Z18pgm_read_glyph_ptrPK7GFXfonth():
    90b0:	b7 e0       	ldi	r27, 0x07	; 7
    90b2:	db 9e       	mul	r13, r27
    90b4:	40 0d       	add	r20, r0
    90b6:	51 1d       	adc	r21, r1
    90b8:	11 24       	eor	r1, r1
_Z19pgm_read_bitmap_ptrPK7GFXfont():
    90ba:	f9 01       	movw	r30, r18
    90bc:	25 91       	lpm	r18, Z+
    90be:	34 91       	lpm	r19, Z
    90c0:	3c 8b       	std	Y+20, r19	; 0x14
    90c2:	2b 8b       	std	Y+19, r18	; 0x13
_ZN12Adafruit_GFX8drawCharEiihjjhh():
    90c4:	fa 01       	movw	r30, r20
    90c6:	25 90       	lpm	r2, Z+
    90c8:	34 90       	lpm	r3, Z
    90ca:	fa 01       	movw	r30, r20
    90cc:	32 96       	adiw	r30, 0x02	; 2
    90ce:	74 90       	lpm	r7, Z
    90d0:	31 96       	adiw	r30, 0x01	; 1
    90d2:	34 91       	lpm	r19, Z
    90d4:	39 8b       	std	Y+17, r19	; 0x11
    90d6:	32 96       	adiw	r30, 0x02	; 2
    90d8:	64 90       	lpm	r6, Z
    90da:	31 96       	adiw	r30, 0x01	; 1
    90dc:	44 90       	lpm	r4, Z
    90de:	41 e0       	ldi	r20, 0x01	; 1
    90e0:	4c 15       	cp	r20, r12
    90e2:	18 f0       	brcs	.+6      	; 0x90ea <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x2cc>
    90e4:	4a 15       	cp	r20, r10
    90e6:	08 f0       	brcs	.+2      	; 0x90ea <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x2cc>
    90e8:	7f c0       	rjmp	.+254    	; 0x91e8 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3ca>
    90ea:	66 2d       	mov	r22, r6
    90ec:	06 2c       	mov	r0, r6
    90ee:	00 0c       	add	r0, r0
    90f0:	77 0b       	sbc	r23, r23
    90f2:	7c 83       	std	Y+4, r23	; 0x04
    90f4:	6b 83       	std	Y+3, r22	; 0x03
    90f6:	84 2d       	mov	r24, r4
    90f8:	04 2c       	mov	r0, r4
    90fa:	00 0c       	add	r0, r0
    90fc:	99 0b       	sbc	r25, r25
    90fe:	9e 83       	std	Y+6, r25	; 0x06
    9100:	8d 83       	std	Y+5, r24	; 0x05
    9102:	a9 8d       	ldd	r26, Y+25	; 0x19
    9104:	ba 8d       	ldd	r27, Y+26	; 0x1a
    9106:	ed 91       	ld	r30, X+
    9108:	fc 91       	ld	r31, X
    910a:	11 97       	sbiw	r26, 0x01	; 1
    910c:	02 84       	ldd	r0, Z+10	; 0x0a
    910e:	f3 85       	ldd	r31, Z+11	; 0x0b
    9110:	e0 2d       	mov	r30, r0
    9112:	cd 01       	movw	r24, r26
    9114:	09 95       	icall
    9116:	51 2c       	mov	r5, r1
    9118:	d1 2c       	mov	r13, r1
    911a:	c1 2c       	mov	r12, r1
    911c:	ea 2d       	mov	r30, r10
    911e:	f0 e0       	ldi	r31, 0x00	; 0
    9120:	fa 87       	std	Y+10, r31	; 0x0a
    9122:	e9 87       	std	Y+9, r30	; 0x09
    9124:	2b 2d       	mov	r18, r11
    9126:	30 e0       	ldi	r19, 0x00	; 0
    9128:	3c 87       	std	Y+12, r19	; 0x0c
    912a:	2b 87       	std	Y+11, r18	; 0x0b
    912c:	a4 01       	movw	r20, r8
    912e:	44 0d       	add	r20, r4
    9130:	51 1d       	adc	r21, r1
    9132:	47 fc       	sbrc	r4, 7
    9134:	5a 95       	dec	r21
    9136:	58 8f       	std	Y+24, r21	; 0x18
    9138:	4f 8b       	std	Y+23, r20	; 0x17
    913a:	69 81       	ldd	r22, Y+1	; 0x01
    913c:	7a 81       	ldd	r23, Y+2	; 0x02
    913e:	66 0d       	add	r22, r6
    9140:	71 1d       	adc	r23, r1
    9142:	67 fc       	sbrc	r6, 7
    9144:	7a 95       	dec	r23
    9146:	7e 87       	std	Y+14, r23	; 0x0e
    9148:	6d 87       	std	Y+13, r22	; 0x0d
    914a:	79 89       	ldd	r23, Y+17	; 0x11
    914c:	c7 16       	cp	r12, r23
    914e:	08 f0       	brcs	.+2      	; 0x9152 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x334>
    9150:	51 cf       	rjmp	.-350    	; 0x8ff4 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x1d6>
    9152:	2c 2d       	mov	r18, r12
    9154:	30 e0       	ldi	r19, 0x00	; 0
    9156:	4d 81       	ldd	r20, Y+5	; 0x05
    9158:	5e 81       	ldd	r21, Y+6	; 0x06
    915a:	42 0f       	add	r20, r18
    915c:	53 1f       	adc	r21, r19
    915e:	a9 85       	ldd	r26, Y+9	; 0x09
    9160:	ba 85       	ldd	r27, Y+10	; 0x0a
    9162:	4a 9f       	mul	r20, r26
    9164:	c0 01       	movw	r24, r0
    9166:	4b 9f       	mul	r20, r27
    9168:	90 0d       	add	r25, r0
    916a:	5a 9f       	mul	r21, r26
    916c:	90 0d       	add	r25, r0
    916e:	11 24       	eor	r1, r1
    9170:	fc 01       	movw	r30, r24
    9172:	e8 0d       	add	r30, r8
    9174:	f9 1d       	adc	r31, r9
    9176:	f8 8b       	std	Y+16, r31	; 0x10
    9178:	ef 87       	std	Y+15, r30	; 0x0f
    917a:	85 2d       	mov	r24, r5
    917c:	61 2c       	mov	r6, r1
    917e:	4f 89       	ldd	r20, Y+23	; 0x17
    9180:	58 8d       	ldd	r21, Y+24	; 0x18
    9182:	42 0f       	add	r20, r18
    9184:	53 1f       	adc	r21, r19
    9186:	5e 8b       	std	Y+22, r21	; 0x16
    9188:	4d 8b       	std	Y+21, r20	; 0x15
    918a:	67 14       	cp	r6, r7
    918c:	08 f0       	brcs	.+2      	; 0x9190 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x372>
    918e:	50 c0       	rjmp	.+160    	; 0x9230 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x412>
    9190:	44 24       	eor	r4, r4
    9192:	43 94       	inc	r4
    9194:	48 0e       	add	r4, r24
    9196:	87 70       	andi	r24, 0x07	; 7
    9198:	41 f4       	brne	.+16     	; 0x91aa <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x38c>
    919a:	c1 01       	movw	r24, r2
    919c:	01 96       	adiw	r24, 0x01	; 1
    919e:	eb 89       	ldd	r30, Y+19	; 0x13
    91a0:	fc 89       	ldd	r31, Y+20	; 0x14
    91a2:	e2 0d       	add	r30, r2
    91a4:	f3 1d       	adc	r31, r3
    91a6:	d4 90       	lpm	r13, Z
    91a8:	1c 01       	movw	r2, r24
    91aa:	d7 fe       	sbrs	r13, 7
    91ac:	19 c0       	rjmp	.+50     	; 0x91e0 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3c2>
    91ae:	a9 8d       	ldd	r26, Y+25	; 0x19
    91b0:	ba 8d       	ldd	r27, Y+26	; 0x1a
    91b2:	ed 91       	ld	r30, X+
    91b4:	fc 91       	ld	r31, X
    91b6:	66 2d       	mov	r22, r6
    91b8:	70 e0       	ldi	r23, 0x00	; 0
    91ba:	b1 e0       	ldi	r27, 0x01	; 1
    91bc:	bb 12       	cpse	r11, r27
    91be:	19 c0       	rjmp	.+50     	; 0x91f2 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3d4>
    91c0:	ab 12       	cpse	r10, r27
    91c2:	17 c0       	rjmp	.+46     	; 0x91f2 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3d4>
    91c4:	2d 85       	ldd	r18, Y+13	; 0x0d
    91c6:	3e 85       	ldd	r19, Y+14	; 0x0e
    91c8:	62 0f       	add	r22, r18
    91ca:	73 1f       	adc	r23, r19
    91cc:	04 84       	ldd	r0, Z+12	; 0x0c
    91ce:	f5 85       	ldd	r31, Z+13	; 0x0d
    91d0:	e0 2d       	mov	r30, r0
    91d2:	2f 81       	ldd	r18, Y+7	; 0x07
    91d4:	38 85       	ldd	r19, Y+8	; 0x08
    91d6:	4d 89       	ldd	r20, Y+21	; 0x15
    91d8:	5e 89       	ldd	r21, Y+22	; 0x16
    91da:	89 8d       	ldd	r24, Y+25	; 0x19
    91dc:	9a 8d       	ldd	r25, Y+26	; 0x1a
    91de:	09 95       	icall
    91e0:	dd 0c       	add	r13, r13
    91e2:	63 94       	inc	r6
    91e4:	84 2d       	mov	r24, r4
    91e6:	d1 cf       	rjmp	.-94     	; 0x918a <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x36c>
    91e8:	1e 82       	std	Y+6, r1	; 0x06
    91ea:	1d 82       	std	Y+5, r1	; 0x05
    91ec:	1c 82       	std	Y+4, r1	; 0x04
    91ee:	1b 82       	std	Y+3, r1	; 0x03
    91f0:	88 cf       	rjmp	.-240    	; 0x9102 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x2e4>
    91f2:	4b 81       	ldd	r20, Y+3	; 0x03
    91f4:	5c 81       	ldd	r21, Y+4	; 0x04
    91f6:	64 0f       	add	r22, r20
    91f8:	75 1f       	adc	r23, r21
    91fa:	ab 85       	ldd	r26, Y+11	; 0x0b
    91fc:	bc 85       	ldd	r27, Y+12	; 0x0c
    91fe:	6a 9f       	mul	r22, r26
    9200:	c0 01       	movw	r24, r0
    9202:	6b 9f       	mul	r22, r27
    9204:	90 0d       	add	r25, r0
    9206:	7a 9f       	mul	r23, r26
    9208:	90 0d       	add	r25, r0
    920a:	11 24       	eor	r1, r1
    920c:	69 81       	ldd	r22, Y+1	; 0x01
    920e:	7a 81       	ldd	r23, Y+2	; 0x02
    9210:	68 0f       	add	r22, r24
    9212:	79 1f       	adc	r23, r25
    9214:	06 84       	ldd	r0, Z+14	; 0x0e
    9216:	f7 85       	ldd	r31, Z+15	; 0x0f
    9218:	e0 2d       	mov	r30, r0
    921a:	ef 80       	ldd	r14, Y+7	; 0x07
    921c:	f8 84       	ldd	r15, Y+8	; 0x08
    921e:	09 85       	ldd	r16, Y+9	; 0x09
    9220:	1a 85       	ldd	r17, Y+10	; 0x0a
    9222:	9d 01       	movw	r18, r26
    9224:	4f 85       	ldd	r20, Y+15	; 0x0f
    9226:	58 89       	ldd	r21, Y+16	; 0x10
    9228:	89 8d       	ldd	r24, Y+25	; 0x19
    922a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    922c:	09 95       	icall
    922e:	d8 cf       	rjmp	.-80     	; 0x91e0 <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x3c2>
    9230:	57 0c       	add	r5, r7
    9232:	c3 94       	inc	r12
    9234:	8a cf       	rjmp	.-236    	; 0x914a <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)+0x32c>
    9236:	6a 96       	adiw	r28, 0x1a	; 26
    9238:	0f b6       	in	r0, 0x3f	; 63
    923a:	f8 94       	cli
    923c:	de bf       	out	0x3e, r29	; 62
    923e:	0f be       	out	0x3f, r0	; 63
    9240:	cd bf       	out	0x3d, r28	; 61
    9242:	df 91       	pop	r29
    9244:	cf 91       	pop	r28
    9246:	1f 91       	pop	r17
    9248:	0f 91       	pop	r16
    924a:	ff 90       	pop	r15
    924c:	ef 90       	pop	r14
    924e:	df 90       	pop	r13
    9250:	cf 90       	pop	r12
    9252:	bf 90       	pop	r11
    9254:	af 90       	pop	r10
    9256:	9f 90       	pop	r9
    9258:	8f 90       	pop	r8
    925a:	7f 90       	pop	r7
    925c:	6f 90       	pop	r6
    925e:	5f 90       	pop	r5
    9260:	4f 90       	pop	r4
    9262:	3f 90       	pop	r3
    9264:	2f 90       	pop	r2
    9266:	08 95       	ret

00009268 <Adafruit_GFX::write(unsigned char)>:
_ZN12Adafruit_GFX5writeEh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1242
/*!
    @brief  Print one byte/character of data, used to support print()
    @param  c  The 8-bit ascii character to write
*/
/**************************************************************************/
size_t Adafruit_GFX::write(uint8_t c) {
    9268:	8f 92       	push	r8
    926a:	9f 92       	push	r9
    926c:	af 92       	push	r10
    926e:	cf 92       	push	r12
    9270:	ef 92       	push	r14
    9272:	ff 92       	push	r15
    9274:	0f 93       	push	r16
    9276:	1f 93       	push	r17
    9278:	cf 93       	push	r28
    927a:	df 93       	push	r29
    927c:	ec 01       	movw	r28, r24
    927e:	26 2f       	mov	r18, r22
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1243
  if (!gfxFont) { // 'Classic' built-in font
    9280:	89 8d       	ldd	r24, Y+25	; 0x19
    9282:	9a 8d       	ldd	r25, Y+26	; 0x1a
    9284:	00 97       	sbiw	r24, 0x00	; 0
    9286:	09 f0       	breq	.+2      	; 0x928a <Adafruit_GFX::write(unsigned char)+0x22>
    9288:	51 c0       	rjmp	.+162    	; 0x932c <Adafruit_GFX::write(unsigned char)+0xc4>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1245

    if (c == '\n') {              // Newline?
    928a:	6a 30       	cpi	r22, 0x0A	; 10
    928c:	d1 f4       	brne	.+52     	; 0x92c2 <Adafruit_GFX::write(unsigned char)+0x5a>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1246
      cursor_x = 0;               // Reset x to zero,
    928e:	1d 86       	std	Y+13, r1	; 0x0d
    9290:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1247
      cursor_y += textsize_y * 8; // advance y one line
    9292:	8d 89       	ldd	r24, Y+21	; 0x15
    9294:	48 e0       	ldi	r20, 0x08	; 8
    9296:	84 9f       	mul	r24, r20
    9298:	90 01       	movw	r18, r0
    929a:	11 24       	eor	r1, r1
    929c:	8e 85       	ldd	r24, Y+14	; 0x0e
    929e:	9f 85       	ldd	r25, Y+15	; 0x0f
    92a0:	82 0f       	add	r24, r18
    92a2:	93 1f       	adc	r25, r19
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1262

  } else { // Custom font

    if (c == '\n') {
      cursor_x = 0;
      cursor_y +=
    92a4:	9f 87       	std	Y+15, r25	; 0x0f
    92a6:	8e 87       	std	Y+14, r24	; 0x0e
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1286
            (uint8_t)pgm_read_byte(&glyph->xAdvance) * (int16_t)textsize_x;
      }
    }
  }
  return 1;
}
    92a8:	81 e0       	ldi	r24, 0x01	; 1
    92aa:	90 e0       	ldi	r25, 0x00	; 0
    92ac:	df 91       	pop	r29
    92ae:	cf 91       	pop	r28
    92b0:	1f 91       	pop	r17
    92b2:	0f 91       	pop	r16
    92b4:	ff 90       	pop	r15
    92b6:	ef 90       	pop	r14
    92b8:	cf 90       	pop	r12
    92ba:	af 90       	pop	r10
    92bc:	9f 90       	pop	r9
    92be:	8f 90       	pop	r8
    92c0:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1248
  if (!gfxFont) { // 'Classic' built-in font

    if (c == '\n') {              // Newline?
      cursor_x = 0;               // Reset x to zero,
      cursor_y += textsize_y * 8; // advance y one line
    } else if (c != '\r') {       // Ignore carriage returns
    92c2:	6d 30       	cpi	r22, 0x0D	; 13
    92c4:	89 f3       	breq	.-30     	; 0x92a8 <Adafruit_GFX::write(unsigned char)+0x40>
    92c6:	cc 88       	ldd	r12, Y+20	; 0x14
    92c8:	ad 88       	ldd	r10, Y+21	; 0x15
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1249
      if (wrap && ((cursor_x + textsize_x * 6) > _width)) { // Off right?
    92ca:	8f 89       	ldd	r24, Y+23	; 0x17
    92cc:	88 23       	and	r24, r24
    92ce:	c1 f0       	breq	.+48     	; 0x9300 <Adafruit_GFX::write(unsigned char)+0x98>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1249 (discriminator 1)
    92d0:	8c 85       	ldd	r24, Y+12	; 0x0c
    92d2:	9d 85       	ldd	r25, Y+13	; 0x0d
    92d4:	36 e0       	ldi	r19, 0x06	; 6
    92d6:	c3 9e       	mul	r12, r19
    92d8:	80 0d       	add	r24, r0
    92da:	91 1d       	adc	r25, r1
    92dc:	11 24       	eor	r1, r1
    92de:	48 85       	ldd	r20, Y+8	; 0x08
    92e0:	59 85       	ldd	r21, Y+9	; 0x09
    92e2:	48 17       	cp	r20, r24
    92e4:	59 07       	cpc	r21, r25
    92e6:	64 f4       	brge	.+24     	; 0x9300 <Adafruit_GFX::write(unsigned char)+0x98>
    92e8:	4e 85       	ldd	r20, Y+14	; 0x0e
    92ea:	5f 85       	ldd	r21, Y+15	; 0x0f
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1250
        cursor_x = 0;                                       // Reset x to zero,
    92ec:	1d 86       	std	Y+13, r1	; 0x0d
    92ee:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1251
        cursor_y += textsize_y * 8; // advance y one line
    92f0:	38 e0       	ldi	r19, 0x08	; 8
    92f2:	a3 9e       	mul	r10, r19
    92f4:	c0 01       	movw	r24, r0
    92f6:	11 24       	eor	r1, r1
    92f8:	84 0f       	add	r24, r20
    92fa:	95 1f       	adc	r25, r21
    92fc:	9f 87       	std	Y+15, r25	; 0x0f
    92fe:	8e 87       	std	Y+14, r24	; 0x0e
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1253
      }
      drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
    9300:	ea 88       	ldd	r14, Y+18	; 0x12
    9302:	fb 88       	ldd	r15, Y+19	; 0x13
    9304:	08 89       	ldd	r16, Y+16	; 0x10
    9306:	19 89       	ldd	r17, Y+17	; 0x11
    9308:	4e 85       	ldd	r20, Y+14	; 0x0e
    930a:	5f 85       	ldd	r21, Y+15	; 0x0f
    930c:	6c 85       	ldd	r22, Y+12	; 0x0c
    930e:	7d 85       	ldd	r23, Y+13	; 0x0d
    9310:	ce 01       	movw	r24, r28
    9312:	0e 94 0f 47 	call	0x8e1e	; 0x8e1e <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1255
               textsize_y);
      cursor_x += textsize_x * 6; // Advance x one char
    9316:	2c 89       	ldd	r18, Y+20	; 0x14
    9318:	8c 85       	ldd	r24, Y+12	; 0x0c
    931a:	9d 85       	ldd	r25, Y+13	; 0x0d
    931c:	46 e0       	ldi	r20, 0x06	; 6
    931e:	24 9f       	mul	r18, r20
    9320:	80 0d       	add	r24, r0
    9322:	91 1d       	adc	r25, r1
    9324:	11 24       	eor	r1, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1280
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
          }
          drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
                   textsize_y);
        }
        cursor_x +=
    9326:	9d 87       	std	Y+13, r25	; 0x0d
    9328:	8c 87       	std	Y+12, r24	; 0x0c
    932a:	be cf       	rjmp	.-132    	; 0x92a8 <Adafruit_GFX::write(unsigned char)+0x40>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1260
      cursor_x += textsize_x * 6; // Advance x one char
    }

  } else { // Custom font

    if (c == '\n') {
    932c:	6a 30       	cpi	r22, 0x0A	; 10
    932e:	69 f4       	brne	.+26     	; 0x934a <Adafruit_GFX::write(unsigned char)+0xe2>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1261
      cursor_x = 0;
    9330:	1d 86       	std	Y+13, r1	; 0x0d
    9332:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1263
      cursor_y +=
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    9334:	fc 01       	movw	r30, r24
    9336:	38 96       	adiw	r30, 0x08	; 8
    9338:	e4 91       	lpm	r30, Z
    933a:	2d 89       	ldd	r18, Y+21	; 0x15
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1262

  } else { // Custom font

    if (c == '\n') {
      cursor_x = 0;
      cursor_y +=
    933c:	8e 85       	ldd	r24, Y+14	; 0x0e
    933e:	9f 85       	ldd	r25, Y+15	; 0x0f
    9340:	e2 9f       	mul	r30, r18
    9342:	80 0d       	add	r24, r0
    9344:	91 1d       	adc	r25, r1
    9346:	11 24       	eor	r1, r1
    9348:	ad cf       	rjmp	.-166    	; 0x92a4 <Adafruit_GFX::write(unsigned char)+0x3c>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1264
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    } else if (c != '\r') {
    934a:	6d 30       	cpi	r22, 0x0D	; 13
    934c:	09 f4       	brne	.+2      	; 0x9350 <Adafruit_GFX::write(unsigned char)+0xe8>
    934e:	ac cf       	rjmp	.-168    	; 0x92a8 <Adafruit_GFX::write(unsigned char)+0x40>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1265
      uint8_t first = pgm_read_byte(&gfxFont->first);
    9350:	fc 01       	movw	r30, r24
    9352:	34 96       	adiw	r30, 0x04	; 4
    9354:	34 91       	lpm	r19, Z
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1266
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
    9356:	63 17       	cp	r22, r19
    9358:	08 f4       	brcc	.+2      	; 0x935c <Adafruit_GFX::write(unsigned char)+0xf4>
    935a:	a6 cf       	rjmp	.-180    	; 0x92a8 <Adafruit_GFX::write(unsigned char)+0x40>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1266 (discriminator 1)
    935c:	32 96       	adiw	r30, 0x02	; 2
    935e:	e4 91       	lpm	r30, Z
    9360:	e6 17       	cp	r30, r22
    9362:	08 f4       	brcc	.+2      	; 0x9366 <Adafruit_GFX::write(unsigned char)+0xfe>
    9364:	a1 cf       	rjmp	.-190    	; 0x92a8 <Adafruit_GFX::write(unsigned char)+0x40>
_Z18pgm_read_glyph_ptrPK7GFXfonth():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:67
#define pgm_read_pointer(addr) ((void *)pgm_read_word(addr))
#endif

inline GFXglyph *pgm_read_glyph_ptr(const GFXfont *gfxFont, uint8_t c) {
#ifdef __AVR__
  return &(((GFXglyph *)pgm_read_pointer(&gfxFont->glyph))[c]);
    9366:	fc 01       	movw	r30, r24
    9368:	32 96       	adiw	r30, 0x02	; 2
    936a:	85 90       	lpm	r8, Z+
    936c:	94 90       	lpm	r9, Z
_ZN12Adafruit_GFX5writeEh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1267
      cursor_y +=
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    } else if (c != '\r') {
      uint8_t first = pgm_read_byte(&gfxFont->first);
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
        GFXglyph *glyph = pgm_read_glyph_ptr(gfxFont, c - first);
    936e:	46 2f       	mov	r20, r22
    9370:	43 1b       	sub	r20, r19
    9372:	34 2f       	mov	r19, r20
_Z18pgm_read_glyph_ptrPK7GFXfonth():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:67
#define pgm_read_pointer(addr) ((void *)pgm_read_word(addr))
#endif

inline GFXglyph *pgm_read_glyph_ptr(const GFXfont *gfxFont, uint8_t c) {
#ifdef __AVR__
  return &(((GFXglyph *)pgm_read_pointer(&gfxFont->glyph))[c]);
    9374:	47 e0       	ldi	r20, 0x07	; 7
    9376:	34 9f       	mul	r19, r20
    9378:	80 0c       	add	r8, r0
    937a:	91 1c       	adc	r9, r1
    937c:	11 24       	eor	r1, r1
_ZN12Adafruit_GFX5writeEh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1268
          (int16_t)textsize_y * (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    } else if (c != '\r') {
      uint8_t first = pgm_read_byte(&gfxFont->first);
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
        GFXglyph *glyph = pgm_read_glyph_ptr(gfxFont, c - first);
        uint8_t w = pgm_read_byte(&glyph->width),
    937e:	f4 01       	movw	r30, r8
    9380:	32 96       	adiw	r30, 0x02	; 2
    9382:	34 91       	lpm	r19, Z
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1269
                h = pgm_read_byte(&glyph->height);
    9384:	31 96       	adiw	r30, 0x01	; 1
    9386:	e4 91       	lpm	r30, Z
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1270
        if ((w > 0) && (h > 0)) { // Is there an associated bitmap?
    9388:	33 23       	and	r19, r19
    938a:	a9 f1       	breq	.+106    	; 0x93f6 <Adafruit_GFX::write(unsigned char)+0x18e>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1270 (discriminator 1)
    938c:	ee 23       	and	r30, r30
    938e:	99 f1       	breq	.+102    	; 0x93f6 <Adafruit_GFX::write(unsigned char)+0x18e>
    9390:	cc 88       	ldd	r12, Y+20	; 0x14
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1271
          int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
    9392:	f4 01       	movw	r30, r8
    9394:	35 96       	adiw	r30, 0x05	; 5
    9396:	e4 91       	lpm	r30, Z
    9398:	ad 88       	ldd	r10, Y+21	; 0x15
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1272
          if (wrap && ((cursor_x + textsize_x * (xo + w)) > _width)) {
    939a:	4f 89       	ldd	r20, Y+23	; 0x17
    939c:	44 23       	and	r20, r20
    939e:	01 f1       	breq	.+64     	; 0x93e0 <Adafruit_GFX::write(unsigned char)+0x178>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1271 (discriminator 1)
      if ((c >= first) && (c <= (uint8_t)pgm_read_byte(&gfxFont->last))) {
        GFXglyph *glyph = pgm_read_glyph_ptr(gfxFont, c - first);
        uint8_t w = pgm_read_byte(&glyph->width),
                h = pgm_read_byte(&glyph->height);
        if ((w > 0) && (h > 0)) { // Is there an associated bitmap?
          int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
    93a0:	0e 2e       	mov	r0, r30
    93a2:	00 0c       	add	r0, r0
    93a4:	ff 0b       	sbc	r31, r31
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1272 (discriminator 1)
          if (wrap && ((cursor_x + textsize_x * (xo + w)) > _width)) {
    93a6:	e3 0f       	add	r30, r19
    93a8:	f1 1d       	adc	r31, r1
    93aa:	ce 9e       	mul	r12, r30
    93ac:	a0 01       	movw	r20, r0
    93ae:	cf 9e       	mul	r12, r31
    93b0:	50 0d       	add	r21, r0
    93b2:	11 24       	eor	r1, r1
    93b4:	6c 85       	ldd	r22, Y+12	; 0x0c
    93b6:	7d 85       	ldd	r23, Y+13	; 0x0d
    93b8:	46 0f       	add	r20, r22
    93ba:	57 1f       	adc	r21, r23
    93bc:	68 85       	ldd	r22, Y+8	; 0x08
    93be:	79 85       	ldd	r23, Y+9	; 0x09
    93c0:	64 17       	cp	r22, r20
    93c2:	75 07       	cpc	r23, r21
    93c4:	6c f4       	brge	.+26     	; 0x93e0 <Adafruit_GFX::write(unsigned char)+0x178>
    93c6:	4e 85       	ldd	r20, Y+14	; 0x0e
    93c8:	5f 85       	ldd	r21, Y+15	; 0x0f
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1273
            cursor_x = 0;
    93ca:	1d 86       	std	Y+13, r1	; 0x0d
    93cc:	1c 86       	std	Y+12, r1	; 0x0c
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1275
            cursor_y += (int16_t)textsize_y *
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
    93ce:	fc 01       	movw	r30, r24
    93d0:	38 96       	adiw	r30, 0x08	; 8
    93d2:	e4 91       	lpm	r30, Z
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1274
                h = pgm_read_byte(&glyph->height);
        if ((w > 0) && (h > 0)) { // Is there an associated bitmap?
          int16_t xo = (int8_t)pgm_read_byte(&glyph->xOffset); // sic
          if (wrap && ((cursor_x + textsize_x * (xo + w)) > _width)) {
            cursor_x = 0;
            cursor_y += (int16_t)textsize_y *
    93d4:	ae 9e       	mul	r10, r30
    93d6:	40 0d       	add	r20, r0
    93d8:	51 1d       	adc	r21, r1
    93da:	11 24       	eor	r1, r1
    93dc:	5f 87       	std	Y+15, r21	; 0x0f
    93de:	4e 87       	std	Y+14, r20	; 0x0e
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1277
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
          }
          drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
    93e0:	ea 88       	ldd	r14, Y+18	; 0x12
    93e2:	fb 88       	ldd	r15, Y+19	; 0x13
    93e4:	08 89       	ldd	r16, Y+16	; 0x10
    93e6:	19 89       	ldd	r17, Y+17	; 0x11
    93e8:	4e 85       	ldd	r20, Y+14	; 0x0e
    93ea:	5f 85       	ldd	r21, Y+15	; 0x0f
    93ec:	6c 85       	ldd	r22, Y+12	; 0x0c
    93ee:	7d 85       	ldd	r23, Y+13	; 0x0d
    93f0:	ce 01       	movw	r24, r28
    93f2:	0e 94 0f 47 	call	0x8e1e	; 0x8e1e <Adafruit_GFX::drawChar(int, int, unsigned char, unsigned int, unsigned int, unsigned char, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1281
                   textsize_y);
        }
        cursor_x +=
            (uint8_t)pgm_read_byte(&glyph->xAdvance) * (int16_t)textsize_x;
    93f6:	f4 01       	movw	r30, r8
    93f8:	34 96       	adiw	r30, 0x04	; 4
    93fa:	e4 91       	lpm	r30, Z
    93fc:	2c 89       	ldd	r18, Y+20	; 0x14
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1280
                        (uint8_t)pgm_read_byte(&gfxFont->yAdvance);
          }
          drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor, textsize_x,
                   textsize_y);
        }
        cursor_x +=
    93fe:	8c 85       	ldd	r24, Y+12	; 0x0c
    9400:	9d 85       	ldd	r25, Y+13	; 0x0d
    9402:	e2 9f       	mul	r30, r18
    9404:	80 0d       	add	r24, r0
    9406:	91 1d       	adc	r25, r1
    9408:	11 24       	eor	r1, r1
    940a:	8d cf       	rjmp	.-230    	; 0x9326 <Adafruit_GFX::write(unsigned char)+0xbe>

0000940c <Adafruit_GFX::setTextSize(unsigned char, unsigned char)>:
_ZN12Adafruit_GFX11setTextSizeEhh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1306
    @param  s_x  Desired text width magnification level in X-axis. 1 is default
    @param  s_y  Desired text width magnification level in Y-axis. 1 is default
*/
/**************************************************************************/
void Adafruit_GFX::setTextSize(uint8_t s_x, uint8_t s_y) {
  textsize_x = (s_x > 0) ? s_x : 1;
    940c:	61 11       	cpse	r22, r1
    940e:	01 c0       	rjmp	.+2      	; 0x9412 <Adafruit_GFX::setTextSize(unsigned char, unsigned char)+0x6>
    9410:	61 e0       	ldi	r22, 0x01	; 1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1306 (discriminator 4)
    9412:	fc 01       	movw	r30, r24
    9414:	64 8b       	std	Z+20, r22	; 0x14
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1307 (discriminator 4)
  textsize_y = (s_y > 0) ? s_y : 1;
    9416:	41 11       	cpse	r20, r1
    9418:	01 c0       	rjmp	.+2      	; 0x941c <Adafruit_GFX::setTextSize(unsigned char, unsigned char)+0x10>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1307
    941a:	41 e0       	ldi	r20, 0x01	; 1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1307 (discriminator 4)
    941c:	fc 01       	movw	r30, r24
    941e:	45 8b       	std	Z+21, r20	; 0x15
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1308 (discriminator 4)
}
    9420:	08 95       	ret

00009422 <Adafruit_GFX::setTextSize(unsigned char)>:
_ZN12Adafruit_GFX11setTextSizeEh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_GFX_Library/Adafruit_GFX.cpp:1295
    @brief   Set text 'magnification' size. Each increase in s makes 1 pixel
   that much bigger.
    @param  s  Desired text size. 1 is default 6x8, 2 is 12x16, 3 is 18x24, etc
*/
/**************************************************************************/
void Adafruit_GFX::setTextSize(uint8_t s) { setTextSize(s, s); }
    9422:	46 2f       	mov	r20, r22
    9424:	0c 94 06 4a 	jmp	0x940c	; 0x940c <Adafruit_GFX::setTextSize(unsigned char, unsigned char)>

00009428 <SPIClass::endTransaction()>:
_ZN8SPIClass14endTransactionEv():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:272
      digitalWrite(SPI_TRANSACTION_MISMATCH_LED, HIGH);
    }
    inTransactionFlag = 0;
    #endif

    if (interruptMode > 0) {
    9428:	80 91 a1 09 	lds	r24, 0x09A1	; 0x8009a1 <SPIClass::interruptMode>
    942c:	88 23       	and	r24, r24
    942e:	61 f0       	breq	.+24     	; 0x9448 <SPIClass::endTransaction()+0x20>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:274
      #ifdef SPI_AVR_EIMSK
      uint8_t sreg = SREG;
    9430:	9f b7       	in	r25, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:276
      #endif
      noInterrupts();
    9432:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:278
      #ifdef SPI_AVR_EIMSK
      if (interruptMode == 1) {
    9434:	20 91 a1 09 	lds	r18, 0x09A1	; 0x8009a1 <SPIClass::interruptMode>
    9438:	80 91 9f 09 	lds	r24, 0x099F	; 0x80099f <SPIClass::interruptSave>
    943c:	21 30       	cpi	r18, 0x01	; 1
    943e:	19 f4       	brne	.+6      	; 0x9446 <SPIClass::endTransaction()+0x1e>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:279
        SPI_AVR_EIMSK = interruptSave;
    9440:	8d bb       	out	0x1d, r24	; 29
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:280
        SREG = sreg;
    9442:	9f bf       	out	0x3f, r25	; 63
    9444:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:284
      } else
      #endif
      {
        SREG = interruptSave;
    9446:	8f bf       	out	0x3f, r24	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.h:287
      }
    }
  }
    9448:	08 95       	ret

0000944a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)>:
_ZN16Adafruit_SSD13069drawPixelEiij():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:980
/*!
    @brief  Get base address of display buffer for direct reading or writing.
    @return Pointer to an unsigned 8-bit array, column-major, columns padded
            to full byte boundary if needed.
*/
uint8_t *Adafruit_SSD1306::getBuffer(void) { return buffer; }
    944a:	fc 01       	movw	r30, r24
    944c:	77 fd       	sbrc	r23, 7
    944e:	64 c0       	rjmp	.+200    	; 0x9518 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    9450:	80 85       	ldd	r24, Z+8	; 0x08
    9452:	91 85       	ldd	r25, Z+9	; 0x09
    9454:	68 17       	cp	r22, r24
    9456:	79 07       	cpc	r23, r25
    9458:	0c f0       	brlt	.+2      	; 0x945c <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x12>
    945a:	5e c0       	rjmp	.+188    	; 0x9518 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    945c:	57 fd       	sbrc	r21, 7
    945e:	5c c0       	rjmp	.+184    	; 0x9518 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    9460:	82 85       	ldd	r24, Z+10	; 0x0a
    9462:	93 85       	ldd	r25, Z+11	; 0x0b
    9464:	48 17       	cp	r20, r24
    9466:	59 07       	cpc	r21, r25
    9468:	0c f0       	brlt	.+2      	; 0x946c <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x22>
    946a:	56 c0       	rjmp	.+172    	; 0x9518 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xce>
    946c:	86 89       	ldd	r24, Z+22	; 0x16
    946e:	82 30       	cpi	r24, 0x02	; 2
    9470:	b1 f0       	breq	.+44     	; 0x949e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x54>
    9472:	83 30       	cpi	r24, 0x03	; 3
    9474:	29 f1       	breq	.+74     	; 0x94c0 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x76>
    9476:	81 30       	cpi	r24, 0x01	; 1
    9478:	41 f4       	brne	.+16     	; 0x948a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x40>
    947a:	84 81       	ldd	r24, Z+4	; 0x04
    947c:	95 81       	ldd	r25, Z+5	; 0x05
    947e:	84 1b       	sub	r24, r20
    9480:	95 0b       	sbc	r25, r21
    9482:	ab 01       	movw	r20, r22
    9484:	bc 01       	movw	r22, r24
    9486:	61 50       	subi	r22, 0x01	; 1
    9488:	71 09       	sbc	r23, r1
    948a:	21 30       	cpi	r18, 0x01	; 1
    948c:	31 05       	cpc	r19, r1
    948e:	09 f1       	breq	.+66     	; 0x94d2 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x88>
    9490:	08 f4       	brcc	.+2      	; 0x9494 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x4a>
    9492:	43 c0       	rjmp	.+134    	; 0x951a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xd0>
    9494:	22 30       	cpi	r18, 0x02	; 2
    9496:	31 05       	cpc	r19, r1
    9498:	09 f4       	brne	.+2      	; 0x949c <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x52>
    949a:	63 c0       	rjmp	.+198    	; 0x9562 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x118>
    949c:	08 95       	ret
    949e:	84 81       	ldd	r24, Z+4	; 0x04
    94a0:	95 81       	ldd	r25, Z+5	; 0x05
    94a2:	dc 01       	movw	r26, r24
    94a4:	a6 1b       	sub	r26, r22
    94a6:	b7 0b       	sbc	r27, r23
    94a8:	bd 01       	movw	r22, r26
    94aa:	61 50       	subi	r22, 0x01	; 1
    94ac:	71 09       	sbc	r23, r1
    94ae:	86 81       	ldd	r24, Z+6	; 0x06
    94b0:	97 81       	ldd	r25, Z+7	; 0x07
    94b2:	dc 01       	movw	r26, r24
    94b4:	a4 1b       	sub	r26, r20
    94b6:	b5 0b       	sbc	r27, r21
    94b8:	ad 01       	movw	r20, r26
    94ba:	41 50       	subi	r20, 0x01	; 1
    94bc:	51 09       	sbc	r21, r1
    94be:	e5 cf       	rjmp	.-54     	; 0x948a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x40>
    94c0:	86 81       	ldd	r24, Z+6	; 0x06
    94c2:	97 81       	ldd	r25, Z+7	; 0x07
    94c4:	86 1b       	sub	r24, r22
    94c6:	97 0b       	sbc	r25, r23
    94c8:	ba 01       	movw	r22, r20
    94ca:	ac 01       	movw	r20, r24
    94cc:	41 50       	subi	r20, 0x01	; 1
    94ce:	51 09       	sbc	r21, r1
    94d0:	dc cf       	rjmp	.-72     	; 0x948a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x40>
    94d2:	ca 01       	movw	r24, r20
    94d4:	57 fd       	sbrc	r21, 7
    94d6:	07 96       	adiw	r24, 0x07	; 7
    94d8:	a3 e0       	ldi	r26, 0x03	; 3
    94da:	95 95       	asr	r25
    94dc:	87 95       	ror	r24
    94de:	aa 95       	dec	r26
    94e0:	e1 f7       	brne	.-8      	; 0x94da <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x90>
    94e2:	a4 81       	ldd	r26, Z+4	; 0x04
    94e4:	b5 81       	ldd	r27, Z+5	; 0x05
    94e6:	8a 9f       	mul	r24, r26
    94e8:	90 01       	movw	r18, r0
    94ea:	8b 9f       	mul	r24, r27
    94ec:	30 0d       	add	r19, r0
    94ee:	9a 9f       	mul	r25, r26
    94f0:	30 0d       	add	r19, r0
    94f2:	11 24       	eor	r1, r1
    94f4:	62 0f       	add	r22, r18
    94f6:	73 1f       	adc	r23, r19
    94f8:	07 8c       	ldd	r0, Z+31	; 0x1f
    94fa:	f0 a1       	ldd	r31, Z+32	; 0x20
    94fc:	e0 2d       	mov	r30, r0
    94fe:	e6 0f       	add	r30, r22
    9500:	f7 1f       	adc	r31, r23
    9502:	47 70       	andi	r20, 0x07	; 7
    9504:	55 27       	eor	r21, r21
    9506:	21 e0       	ldi	r18, 0x01	; 1
    9508:	30 e0       	ldi	r19, 0x00	; 0
    950a:	01 c0       	rjmp	.+2      	; 0x950e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xc4>
    950c:	22 0f       	add	r18, r18
    950e:	4a 95       	dec	r20
    9510:	ea f7       	brpl	.-6      	; 0x950c <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xc2>
    9512:	80 81       	ld	r24, Z
    9514:	82 2b       	or	r24, r18
    9516:	80 83       	st	Z, r24
    9518:	08 95       	ret
    951a:	ca 01       	movw	r24, r20
    951c:	57 fd       	sbrc	r21, 7
    951e:	07 96       	adiw	r24, 0x07	; 7
    9520:	33 e0       	ldi	r19, 0x03	; 3
    9522:	95 95       	asr	r25
    9524:	87 95       	ror	r24
    9526:	3a 95       	dec	r19
    9528:	e1 f7       	brne	.-8      	; 0x9522 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xd8>
    952a:	a4 81       	ldd	r26, Z+4	; 0x04
    952c:	b5 81       	ldd	r27, Z+5	; 0x05
    952e:	8a 9f       	mul	r24, r26
    9530:	90 01       	movw	r18, r0
    9532:	8b 9f       	mul	r24, r27
    9534:	30 0d       	add	r19, r0
    9536:	9a 9f       	mul	r25, r26
    9538:	30 0d       	add	r19, r0
    953a:	11 24       	eor	r1, r1
    953c:	62 0f       	add	r22, r18
    953e:	73 1f       	adc	r23, r19
    9540:	07 8c       	ldd	r0, Z+31	; 0x1f
    9542:	f0 a1       	ldd	r31, Z+32	; 0x20
    9544:	e0 2d       	mov	r30, r0
    9546:	e6 0f       	add	r30, r22
    9548:	f7 1f       	adc	r31, r23
    954a:	47 70       	andi	r20, 0x07	; 7
    954c:	55 27       	eor	r21, r21
    954e:	81 e0       	ldi	r24, 0x01	; 1
    9550:	90 e0       	ldi	r25, 0x00	; 0
    9552:	01 c0       	rjmp	.+2      	; 0x9556 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x10c>
    9554:	88 0f       	add	r24, r24
    9556:	4a 95       	dec	r20
    9558:	ea f7       	brpl	.-6      	; 0x9554 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x10a>
    955a:	80 95       	com	r24
    955c:	90 81       	ld	r25, Z
    955e:	89 23       	and	r24, r25
    9560:	da cf       	rjmp	.-76     	; 0x9516 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xcc>
    9562:	ca 01       	movw	r24, r20
    9564:	57 fd       	sbrc	r21, 7
    9566:	07 96       	adiw	r24, 0x07	; 7
    9568:	23 e0       	ldi	r18, 0x03	; 3
    956a:	95 95       	asr	r25
    956c:	87 95       	ror	r24
    956e:	2a 95       	dec	r18
    9570:	e1 f7       	brne	.-8      	; 0x956a <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x120>
    9572:	a4 81       	ldd	r26, Z+4	; 0x04
    9574:	b5 81       	ldd	r27, Z+5	; 0x05
    9576:	8a 9f       	mul	r24, r26
    9578:	90 01       	movw	r18, r0
    957a:	8b 9f       	mul	r24, r27
    957c:	30 0d       	add	r19, r0
    957e:	9a 9f       	mul	r25, r26
    9580:	30 0d       	add	r19, r0
    9582:	11 24       	eor	r1, r1
    9584:	62 0f       	add	r22, r18
    9586:	73 1f       	adc	r23, r19
    9588:	07 8c       	ldd	r0, Z+31	; 0x1f
    958a:	f0 a1       	ldd	r31, Z+32	; 0x20
    958c:	e0 2d       	mov	r30, r0
    958e:	e6 0f       	add	r30, r22
    9590:	f7 1f       	adc	r31, r23
    9592:	47 70       	andi	r20, 0x07	; 7
    9594:	55 27       	eor	r21, r21
    9596:	21 e0       	ldi	r18, 0x01	; 1
    9598:	30 e0       	ldi	r19, 0x00	; 0
    959a:	01 c0       	rjmp	.+2      	; 0x959e <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x154>
    959c:	22 0f       	add	r18, r18
    959e:	4a 95       	dec	r20
    95a0:	ea f7       	brpl	.-6      	; 0x959c <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0x152>
    95a2:	80 81       	ld	r24, Z
    95a4:	82 27       	eor	r24, r18
    95a6:	b7 cf       	rjmp	.-146    	; 0x9516 <Adafruit_SSD1306::drawPixel(int, int, unsigned int)+0xcc>

000095a8 <SPIClass::beginTransaction(SPISettings)>:
_ZN8SPIClass16beginTransactionE11SPISettings():
    95a8:	20 91 a1 09 	lds	r18, 0x09A1	; 0x8009a1 <SPIClass::interruptMode>
    95ac:	22 23       	and	r18, r18
    95ae:	81 f0       	breq	.+32     	; 0x95d0 <SPIClass::beginTransaction(SPISettings)+0x28>
    95b0:	3f b7       	in	r19, 0x3f	; 63
    95b2:	f8 94       	cli
    95b4:	20 91 a1 09 	lds	r18, 0x09A1	; 0x8009a1 <SPIClass::interruptMode>
    95b8:	21 30       	cpi	r18, 0x01	; 1
    95ba:	69 f4       	brne	.+26     	; 0x95d6 <SPIClass::beginTransaction(SPISettings)+0x2e>
    95bc:	2d b3       	in	r18, 0x1d	; 29
    95be:	20 93 9f 09 	sts	0x099F, r18	; 0x80099f <SPIClass::interruptSave>
    95c2:	4d b3       	in	r20, 0x1d	; 29
    95c4:	20 91 a0 09 	lds	r18, 0x09A0	; 0x8009a0 <SPIClass::interruptMask>
    95c8:	20 95       	com	r18
    95ca:	24 23       	and	r18, r20
    95cc:	2d bb       	out	0x1d, r18	; 29
    95ce:	3f bf       	out	0x3f, r19	; 63
    95d0:	8c bd       	out	0x2c, r24	; 44
    95d2:	9d bd       	out	0x2d, r25	; 45
    95d4:	08 95       	ret
    95d6:	30 93 9f 09 	sts	0x099F, r19	; 0x80099f <SPIClass::interruptSave>
    95da:	fa cf       	rjmp	.-12     	; 0x95d0 <SPIClass::beginTransaction(SPISettings)+0x28>

000095dc <SPIClass::transfer(unsigned char)>:
_ZN8SPIClass8transferEh():
    95dc:	8e bd       	out	0x2e, r24	; 46
    95de:	00 00       	nop
    95e0:	0d b4       	in	r0, 0x2d	; 45
    95e2:	07 fe       	sbrs	r0, 7
    95e4:	fd cf       	rjmp	.-6      	; 0x95e0 <SPIClass::transfer(unsigned char)+0x4>
    95e6:	8e b5       	in	r24, 0x2e	; 46
    95e8:	08 95       	ret

000095ea <Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)>:
_ZN16Adafruit_SSD1306C2EhhP7TwoWireamm():
    95ea:	4f 92       	push	r4
    95ec:	5f 92       	push	r5
    95ee:	6f 92       	push	r6
    95f0:	7f 92       	push	r7
    95f2:	8f 92       	push	r8
    95f4:	9f 92       	push	r9
    95f6:	af 92       	push	r10
    95f8:	bf 92       	push	r11
    95fa:	cf 92       	push	r12
    95fc:	df 92       	push	r13
    95fe:	ef 92       	push	r14
    9600:	ff 92       	push	r15
    9602:	0f 93       	push	r16
    9604:	cf 93       	push	r28
    9606:	df 93       	push	r29
    9608:	cd b7       	in	r28, 0x3d	; 61
    960a:	de b7       	in	r29, 0x3e	; 62
    960c:	3c 01       	movw	r6, r24
    960e:	29 01       	movw	r4, r18
    9610:	50 e0       	ldi	r21, 0x00	; 0
    9612:	70 e0       	ldi	r23, 0x00	; 0
    9614:	0e 94 f9 41 	call	0x83f2	; 0x83f2 <Adafruit_GFX::Adafruit_GFX(int, int)>
    9618:	8f e3       	ldi	r24, 0x3F	; 63
    961a:	92 e0       	ldi	r25, 0x02	; 2
    961c:	f3 01       	movw	r30, r6
    961e:	91 83       	std	Z+1, r25	; 0x01
    9620:	80 83       	st	Z, r24
    9622:	14 8e       	std	Z+28, r1	; 0x1c
    9624:	13 8e       	std	Z+27, r1	; 0x1b
    9626:	41 14       	cp	r4, r1
    9628:	51 04       	cpc	r5, r1
    962a:	21 f4       	brne	.+8      	; 0x9634 <Adafruit_SSD1306::Adafruit_SSD1306(unsigned char, unsigned char, TwoWire*, signed char, unsigned long, unsigned long)+0x4a>
    962c:	83 ea       	ldi	r24, 0xA3	; 163
    962e:	48 2e       	mov	r4, r24
    9630:	89 e0       	ldi	r24, 0x09	; 9
    9632:	58 2e       	mov	r5, r24
    9634:	f3 01       	movw	r30, r6
    9636:	56 8e       	std	Z+30, r5	; 0x1e
    9638:	45 8e       	std	Z+29, r4	; 0x1d
    963a:	10 a2       	std	Z+32, r1	; 0x20
    963c:	17 8e       	std	Z+31, r1	; 0x1f
    963e:	8f ef       	ldi	r24, 0xFF	; 255
    9640:	84 a3       	std	Z+36, r24	; 0x24
    9642:	85 a3       	std	Z+37, r24	; 0x25
    9644:	86 a3       	std	Z+38, r24	; 0x26
    9646:	87 a3       	std	Z+39, r24	; 0x27
    9648:	00 a7       	std	Z+40, r16	; 0x28
    964a:	c5 aa       	std	Z+53, r12	; 0x35
    964c:	d6 aa       	std	Z+54, r13	; 0x36
    964e:	e7 aa       	std	Z+55, r14	; 0x37
    9650:	f0 ae       	std	Z+56, r15	; 0x38
    9652:	81 ae       	std	Z+57, r8	; 0x39
    9654:	92 ae       	std	Z+58, r9	; 0x3a
    9656:	a3 ae       	std	Z+59, r10	; 0x3b
    9658:	b4 ae       	std	Z+60, r11	; 0x3c
_ZN11SPISettings17init_AlwaysInlineEmhh():
    965a:	80 e5       	ldi	r24, 0x50	; 80
    965c:	86 af       	std	Z+62, r24	; 0x3e
    965e:	17 ae       	std	Z+63, r1	; 0x3f
_ZN16Adafruit_SSD1306C2EhhP7TwoWireamm():
    9660:	df 91       	pop	r29
    9662:	cf 91       	pop	r28
    9664:	0f 91       	pop	r16
    9666:	ff 90       	pop	r15
    9668:	ef 90       	pop	r14
    966a:	df 90       	pop	r13
    966c:	cf 90       	pop	r12
    966e:	bf 90       	pop	r11
    9670:	af 90       	pop	r10
    9672:	9f 90       	pop	r9
    9674:	8f 90       	pop	r8
    9676:	7f 90       	pop	r7
    9678:	6f 90       	pop	r6
    967a:	5f 90       	pop	r5
    967c:	4f 90       	pop	r4
    967e:	08 95       	ret

00009680 <Adafruit_SSD1306::~Adafruit_SSD1306()>:
_ZN16Adafruit_SSD1306D2Ev():
    9680:	2f e3       	ldi	r18, 0x3F	; 63
    9682:	32 e0       	ldi	r19, 0x02	; 2
    9684:	fc 01       	movw	r30, r24
    9686:	31 83       	std	Z+1, r19	; 0x01
    9688:	20 83       	st	Z, r18
    968a:	87 8d       	ldd	r24, Z+31	; 0x1f
    968c:	90 a1       	ldd	r25, Z+32	; 0x20
    968e:	00 97       	sbiw	r24, 0x00	; 0
    9690:	11 f0       	breq	.+4      	; 0x9696 <Adafruit_SSD1306::~Adafruit_SSD1306()+0x16>
    9692:	0c 94 c5 73 	jmp	0xe78a	; 0xe78a <free>
    9696:	08 95       	ret

00009698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>:
_ZN16Adafruit_SSD130616ssd1306_command1Eh():
    9698:	1f 93       	push	r17
    969a:	cf 93       	push	r28
    969c:	df 93       	push	r29
    969e:	ec 01       	movw	r28, r24
    96a0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    96a2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    96a4:	00 97       	sbiw	r24, 0x00	; 0
    96a6:	11 f1       	breq	.+68     	; 0x96ec <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x54>
    96a8:	16 2f       	mov	r17, r22
    96aa:	69 a1       	ldd	r22, Y+33	; 0x21
    96ac:	06 2e       	mov	r0, r22
    96ae:	00 0c       	add	r0, r0
    96b0:	77 0b       	sbc	r23, r23
    96b2:	0e 94 29 52 	call	0xa452	; 0xa452 <TwoWire::beginTransmission(int)>
    96b6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    96b8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    96ba:	dc 01       	movw	r26, r24
    96bc:	ed 91       	ld	r30, X+
    96be:	fc 91       	ld	r31, X
    96c0:	01 90       	ld	r0, Z+
    96c2:	f0 81       	ld	r31, Z
    96c4:	e0 2d       	mov	r30, r0
    96c6:	60 e0       	ldi	r22, 0x00	; 0
    96c8:	09 95       	icall
    96ca:	8d 8d       	ldd	r24, Y+29	; 0x1d
    96cc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    96ce:	dc 01       	movw	r26, r24
    96d0:	ed 91       	ld	r30, X+
    96d2:	fc 91       	ld	r31, X
    96d4:	01 90       	ld	r0, Z+
    96d6:	f0 81       	ld	r31, Z
    96d8:	e0 2d       	mov	r30, r0
    96da:	61 2f       	mov	r22, r17
    96dc:	09 95       	icall
    96de:	8d 8d       	ldd	r24, Y+29	; 0x1d
    96e0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    96e2:	df 91       	pop	r29
    96e4:	cf 91       	pop	r28
    96e6:	1f 91       	pop	r17
    96e8:	0c 94 a4 52 	jmp	0xa548	; 0xa548 <TwoWire::endTransmission()>
    96ec:	ad a5       	ldd	r26, Y+45	; 0x2d
    96ee:	be a5       	ldd	r27, Y+46	; 0x2e
    96f0:	9c 91       	ld	r25, X
    96f2:	8b a9       	ldd	r24, Y+51	; 0x33
    96f4:	80 95       	com	r24
    96f6:	89 23       	and	r24, r25
    96f8:	8c 93       	st	X, r24
_ZN16Adafruit_SSD13068SPIwriteEh():
    96fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
    96fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    96fe:	89 2b       	or	r24, r25
    9700:	31 f0       	breq	.+12     	; 0x970e <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x76>
    9702:	86 2f       	mov	r24, r22
_ZN16Adafruit_SSD130616ssd1306_command1Eh():
    9704:	df 91       	pop	r29
    9706:	cf 91       	pop	r28
    9708:	1f 91       	pop	r17
_ZN16Adafruit_SSD13068SPIwriteEh():
    970a:	0c 94 ee 4a 	jmp	0x95dc	; 0x95dc <SPIClass::transfer(unsigned char)>
    970e:	28 e0       	ldi	r18, 0x08	; 8
    9710:	30 e0       	ldi	r19, 0x00	; 0
    9712:	80 e8       	ldi	r24, 0x80	; 128
    9714:	a9 a5       	ldd	r26, Y+41	; 0x29
    9716:	ba a5       	ldd	r27, Y+42	; 0x2a
    9718:	99 a9       	ldd	r25, Y+49	; 0x31
    971a:	46 2f       	mov	r20, r22
    971c:	48 23       	and	r20, r24
    971e:	c1 f0       	breq	.+48     	; 0x9750 <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0xb8>
    9720:	4c 91       	ld	r20, X
    9722:	94 2b       	or	r25, r20
    9724:	9c 93       	st	X, r25
    9726:	ab a5       	ldd	r26, Y+43	; 0x2b
    9728:	bc a5       	ldd	r27, Y+44	; 0x2c
    972a:	9c 91       	ld	r25, X
    972c:	4a a9       	ldd	r20, Y+50	; 0x32
    972e:	94 2b       	or	r25, r20
    9730:	9c 93       	st	X, r25
    9732:	ab a5       	ldd	r26, Y+43	; 0x2b
    9734:	bc a5       	ldd	r27, Y+44	; 0x2c
    9736:	4c 91       	ld	r20, X
    9738:	9a a9       	ldd	r25, Y+50	; 0x32
    973a:	90 95       	com	r25
    973c:	94 23       	and	r25, r20
    973e:	9c 93       	st	X, r25
    9740:	86 95       	lsr	r24
    9742:	21 50       	subi	r18, 0x01	; 1
    9744:	31 09       	sbc	r19, r1
    9746:	31 f7       	brne	.-52     	; 0x9714 <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x7c>
_ZN16Adafruit_SSD130616ssd1306_command1Eh():
    9748:	df 91       	pop	r29
    974a:	cf 91       	pop	r28
    974c:	1f 91       	pop	r17
    974e:	08 95       	ret
_ZN16Adafruit_SSD13068SPIwriteEh():
    9750:	4c 91       	ld	r20, X
    9752:	90 95       	com	r25
    9754:	94 23       	and	r25, r20
    9756:	e6 cf       	rjmp	.-52     	; 0x9724 <Adafruit_SSD1306::ssd1306_command1(unsigned char)+0x8c>

00009758 <Adafruit_SSD1306::invertDisplay(bool)>:
_ZN16Adafruit_SSD130613invertDisplayEb():
    9758:	1f 93       	push	r17
    975a:	cf 93       	push	r28
    975c:	df 93       	push	r29
    975e:	ec 01       	movw	r28, r24
    9760:	16 2f       	mov	r17, r22
    9762:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9764:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9766:	00 97       	sbiw	r24, 0x00	; 0
    9768:	c9 f0       	breq	.+50     	; 0x979c <Adafruit_SSD1306::invertDisplay(bool)+0x44>
    976a:	4d a9       	ldd	r20, Y+53	; 0x35
    976c:	5e a9       	ldd	r21, Y+54	; 0x36
    976e:	6f a9       	ldd	r22, Y+55	; 0x37
    9770:	78 ad       	ldd	r23, Y+56	; 0x38
    9772:	0e 94 1b 52 	call	0xa436	; 0xa436 <TwoWire::setClock(unsigned long)>
    9776:	66 ea       	ldi	r22, 0xA6	; 166
    9778:	11 11       	cpse	r17, r1
    977a:	67 ea       	ldi	r22, 0xA7	; 167
    977c:	ce 01       	movw	r24, r28
    977e:	0e 94 4c 4b 	call	0x9698	; 0x9698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9782:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9784:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9786:	00 97       	sbiw	r24, 0x00	; 0
    9788:	c9 f0       	breq	.+50     	; 0x97bc <Adafruit_SSD1306::invertDisplay(bool)+0x64>
    978a:	49 ad       	ldd	r20, Y+57	; 0x39
    978c:	5a ad       	ldd	r21, Y+58	; 0x3a
    978e:	6b ad       	ldd	r22, Y+59	; 0x3b
    9790:	7c ad       	ldd	r23, Y+60	; 0x3c
    9792:	df 91       	pop	r29
    9794:	cf 91       	pop	r28
    9796:	1f 91       	pop	r17
    9798:	0c 94 1b 52 	jmp	0xa436	; 0xa436 <TwoWire::setClock(unsigned long)>
    979c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    979e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    97a0:	89 2b       	or	r24, r25
    97a2:	21 f0       	breq	.+8      	; 0x97ac <Adafruit_SSD1306::invertDisplay(bool)+0x54>
    97a4:	8e ad       	ldd	r24, Y+62	; 0x3e
    97a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    97a8:	0e 94 d4 4a 	call	0x95a8	; 0x95a8 <SPIClass::beginTransaction(SPISettings)>
    97ac:	ef a5       	ldd	r30, Y+47	; 0x2f
    97ae:	f8 a9       	ldd	r31, Y+48	; 0x30
    97b0:	90 81       	ld	r25, Z
    97b2:	8c a9       	ldd	r24, Y+52	; 0x34
    97b4:	80 95       	com	r24
    97b6:	89 23       	and	r24, r25
    97b8:	80 83       	st	Z, r24
    97ba:	dd cf       	rjmp	.-70     	; 0x9776 <Adafruit_SSD1306::invertDisplay(bool)+0x1e>
    97bc:	ef a5       	ldd	r30, Y+47	; 0x2f
    97be:	f8 a9       	ldd	r31, Y+48	; 0x30
    97c0:	80 81       	ld	r24, Z
    97c2:	9c a9       	ldd	r25, Y+52	; 0x34
    97c4:	89 2b       	or	r24, r25
    97c6:	80 83       	st	Z, r24
    97c8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    97ca:	9c 8d       	ldd	r25, Y+28	; 0x1c
    97cc:	89 2b       	or	r24, r25
    97ce:	29 f0       	breq	.+10     	; 0x97da <Adafruit_SSD1306::invertDisplay(bool)+0x82>
    97d0:	df 91       	pop	r29
    97d2:	cf 91       	pop	r28
    97d4:	1f 91       	pop	r17
    97d6:	0c 94 14 4a 	jmp	0x9428	; 0x9428 <SPIClass::endTransaction()>
    97da:	df 91       	pop	r29
    97dc:	cf 91       	pop	r28
    97de:	1f 91       	pop	r17
    97e0:	08 95       	ret

000097e2 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>:
_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh():
    97e2:	cf 92       	push	r12
    97e4:	df 92       	push	r13
    97e6:	ef 92       	push	r14
    97e8:	ff 92       	push	r15
    97ea:	1f 93       	push	r17
    97ec:	cf 93       	push	r28
    97ee:	df 93       	push	r29
    97f0:	ec 01       	movw	r28, r24
    97f2:	6b 01       	movw	r12, r22
    97f4:	14 2f       	mov	r17, r20
    97f6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    97f8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    97fa:	00 97       	sbiw	r24, 0x00	; 0
    97fc:	09 f4       	brne	.+2      	; 0x9800 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0x1e>
    97fe:	4f c0       	rjmp	.+158    	; 0x989e <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xbc>
    9800:	69 a1       	ldd	r22, Y+33	; 0x21
    9802:	06 2e       	mov	r0, r22
    9804:	00 0c       	add	r0, r0
    9806:	77 0b       	sbc	r23, r23
    9808:	0e 94 29 52 	call	0xa452	; 0xa452 <TwoWire::beginTransmission(int)>
    980c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    980e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9810:	dc 01       	movw	r26, r24
    9812:	ed 91       	ld	r30, X+
    9814:	fc 91       	ld	r31, X
    9816:	01 90       	ld	r0, Z+
    9818:	f0 81       	ld	r31, Z
    981a:	e0 2d       	mov	r30, r0
    981c:	60 e0       	ldi	r22, 0x00	; 0
    981e:	09 95       	icall
    9820:	76 01       	movw	r14, r12
    9822:	cc 24       	eor	r12, r12
    9824:	c3 94       	inc	r12
    9826:	d1 2c       	mov	r13, r1
    9828:	11 50       	subi	r17, 0x01	; 1
    982a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    982c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    982e:	1f 3f       	cpi	r17, 0xFF	; 255
    9830:	69 f1       	breq	.+90     	; 0x988c <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xaa>
    9832:	b0 e2       	ldi	r27, 0x20	; 32
    9834:	cb 16       	cp	r12, r27
    9836:	d1 04       	cpc	r13, r1
    9838:	b8 f0       	brcs	.+46     	; 0x9868 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0x86>
    983a:	0e 94 a4 52 	call	0xa548	; 0xa548 <TwoWire::endTransmission()>
    983e:	69 a1       	ldd	r22, Y+33	; 0x21
    9840:	06 2e       	mov	r0, r22
    9842:	00 0c       	add	r0, r0
    9844:	77 0b       	sbc	r23, r23
    9846:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9848:	9e 8d       	ldd	r25, Y+30	; 0x1e
    984a:	0e 94 29 52 	call	0xa452	; 0xa452 <TwoWire::beginTransmission(int)>
    984e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9850:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9852:	dc 01       	movw	r26, r24
    9854:	ed 91       	ld	r30, X+
    9856:	fc 91       	ld	r31, X
    9858:	01 90       	ld	r0, Z+
    985a:	f0 81       	ld	r31, Z
    985c:	e0 2d       	mov	r30, r0
    985e:	60 e0       	ldi	r22, 0x00	; 0
    9860:	09 95       	icall
    9862:	cc 24       	eor	r12, r12
    9864:	c3 94       	inc	r12
    9866:	d1 2c       	mov	r13, r1
    9868:	8d 8d       	ldd	r24, Y+29	; 0x1d
    986a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    986c:	f7 01       	movw	r30, r14
    986e:	64 91       	lpm	r22, Z
    9870:	dc 01       	movw	r26, r24
    9872:	ed 91       	ld	r30, X+
    9874:	fc 91       	ld	r31, X
    9876:	01 90       	ld	r0, Z+
    9878:	f0 81       	ld	r31, Z
    987a:	e0 2d       	mov	r30, r0
    987c:	09 95       	icall
    987e:	bf ef       	ldi	r27, 0xFF	; 255
    9880:	cb 1a       	sub	r12, r27
    9882:	db 0a       	sbc	r13, r27
    9884:	ef ef       	ldi	r30, 0xFF	; 255
    9886:	ee 1a       	sub	r14, r30
    9888:	fe 0a       	sbc	r15, r30
    988a:	ce cf       	rjmp	.-100    	; 0x9828 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0x46>
    988c:	df 91       	pop	r29
    988e:	cf 91       	pop	r28
    9890:	1f 91       	pop	r17
    9892:	ff 90       	pop	r15
    9894:	ef 90       	pop	r14
    9896:	df 90       	pop	r13
    9898:	cf 90       	pop	r12
    989a:	0c 94 a4 52 	jmp	0xa548	; 0xa548 <TwoWire::endTransmission()>
    989e:	ed a5       	ldd	r30, Y+45	; 0x2d
    98a0:	fe a5       	ldd	r31, Y+46	; 0x2e
    98a2:	90 81       	ld	r25, Z
    98a4:	8b a9       	ldd	r24, Y+51	; 0x33
    98a6:	80 95       	com	r24
    98a8:	89 23       	and	r24, r25
    98aa:	80 83       	st	Z, r24
    98ac:	7b 01       	movw	r14, r22
    98ae:	11 50       	subi	r17, 0x01	; 1
    98b0:	70 f1       	brcs	.+92     	; 0x990e <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0x12c>
    98b2:	f7 01       	movw	r30, r14
    98b4:	84 91       	lpm	r24, Z
_ZN16Adafruit_SSD13068SPIwriteEh():
    98b6:	2b 8d       	ldd	r18, Y+27	; 0x1b
    98b8:	3c 8d       	ldd	r19, Y+28	; 0x1c
    98ba:	23 2b       	or	r18, r19
    98bc:	31 f0       	breq	.+12     	; 0x98ca <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xe8>
    98be:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <SPIClass::transfer(unsigned char)>
    98c2:	ff ef       	ldi	r31, 0xFF	; 255
    98c4:	ef 1a       	sub	r14, r31
    98c6:	ff 0a       	sbc	r15, r31
    98c8:	f2 cf       	rjmp	.-28     	; 0x98ae <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xcc>
    98ca:	28 e0       	ldi	r18, 0x08	; 8
    98cc:	30 e0       	ldi	r19, 0x00	; 0
    98ce:	40 e8       	ldi	r20, 0x80	; 128
    98d0:	e9 a5       	ldd	r30, Y+41	; 0x29
    98d2:	fa a5       	ldd	r31, Y+42	; 0x2a
    98d4:	99 a9       	ldd	r25, Y+49	; 0x31
    98d6:	58 2f       	mov	r21, r24
    98d8:	54 23       	and	r21, r20
    98da:	a9 f0       	breq	.+42     	; 0x9906 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0x124>
    98dc:	50 81       	ld	r21, Z
    98de:	95 2b       	or	r25, r21
    98e0:	90 83       	st	Z, r25
    98e2:	eb a5       	ldd	r30, Y+43	; 0x2b
    98e4:	fc a5       	ldd	r31, Y+44	; 0x2c
    98e6:	90 81       	ld	r25, Z
    98e8:	5a a9       	ldd	r21, Y+50	; 0x32
    98ea:	95 2b       	or	r25, r21
    98ec:	90 83       	st	Z, r25
    98ee:	eb a5       	ldd	r30, Y+43	; 0x2b
    98f0:	fc a5       	ldd	r31, Y+44	; 0x2c
    98f2:	50 81       	ld	r21, Z
    98f4:	9a a9       	ldd	r25, Y+50	; 0x32
    98f6:	90 95       	com	r25
    98f8:	95 23       	and	r25, r21
    98fa:	90 83       	st	Z, r25
    98fc:	46 95       	lsr	r20
    98fe:	21 50       	subi	r18, 0x01	; 1
    9900:	31 09       	sbc	r19, r1
    9902:	31 f7       	brne	.-52     	; 0x98d0 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xee>
    9904:	de cf       	rjmp	.-68     	; 0x98c2 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xe0>
    9906:	50 81       	ld	r21, Z
    9908:	90 95       	com	r25
    990a:	95 23       	and	r25, r21
    990c:	e9 cf       	rjmp	.-46     	; 0x98e0 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)+0xfe>
_ZN16Adafruit_SSD130619ssd1306_commandListEPKhh():
    990e:	df 91       	pop	r29
    9910:	cf 91       	pop	r28
    9912:	1f 91       	pop	r17
    9914:	ff 90       	pop	r15
    9916:	ef 90       	pop	r14
    9918:	df 90       	pop	r13
    991a:	cf 90       	pop	r12
    991c:	08 95       	ret

0000991e <Adafruit_SSD1306::clearDisplay()>:
_ZN16Adafruit_SSD130612clearDisplayEv():
    991e:	fc 01       	movw	r30, r24
    9920:	86 81       	ldd	r24, Z+6	; 0x06
    9922:	97 81       	ldd	r25, Z+7	; 0x07
    9924:	9c 01       	movw	r18, r24
    9926:	29 5f       	subi	r18, 0xF9	; 249
    9928:	3f 4f       	sbci	r19, 0xFF	; 255
    992a:	37 ff       	sbrs	r19, 7
    992c:	02 c0       	rjmp	.+4      	; 0x9932 <Adafruit_SSD1306::clearDisplay()+0x14>
    992e:	29 5f       	subi	r18, 0xF9	; 249
    9930:	3f 4f       	sbci	r19, 0xFF	; 255
    9932:	83 e0       	ldi	r24, 0x03	; 3
    9934:	35 95       	asr	r19
    9936:	27 95       	ror	r18
    9938:	8a 95       	dec	r24
    993a:	e1 f7       	brne	.-8      	; 0x9934 <Adafruit_SSD1306::clearDisplay()+0x16>
    993c:	84 81       	ldd	r24, Z+4	; 0x04
    993e:	95 81       	ldd	r25, Z+5	; 0x05
    9940:	28 9f       	mul	r18, r24
    9942:	a0 01       	movw	r20, r0
    9944:	29 9f       	mul	r18, r25
    9946:	50 0d       	add	r21, r0
    9948:	38 9f       	mul	r19, r24
    994a:	50 0d       	add	r21, r0
    994c:	11 24       	eor	r1, r1
    994e:	70 e0       	ldi	r23, 0x00	; 0
    9950:	60 e0       	ldi	r22, 0x00	; 0
    9952:	87 8d       	ldd	r24, Z+31	; 0x1f
    9954:	90 a1       	ldd	r25, Z+32	; 0x20
    9956:	0c 94 98 74 	jmp	0xe930	; 0xe930 <memset>

0000995a <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)>:
_ZN16Adafruit_SSD13065beginEhhbb():
    995a:	8f 92       	push	r8
    995c:	9f 92       	push	r9
    995e:	af 92       	push	r10
    9960:	bf 92       	push	r11
    9962:	cf 92       	push	r12
    9964:	df 92       	push	r13
    9966:	ef 92       	push	r14
    9968:	ff 92       	push	r15
    996a:	0f 93       	push	r16
    996c:	1f 93       	push	r17
    996e:	cf 93       	push	r28
    9970:	df 93       	push	r29
    9972:	ec 01       	movw	r28, r24
    9974:	86 2e       	mov	r8, r22
    9976:	b4 2e       	mov	r11, r20
    9978:	a2 2e       	mov	r10, r18
    997a:	90 2e       	mov	r9, r16
    997c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    997e:	98 a1       	ldd	r25, Y+32	; 0x20
    9980:	89 2b       	or	r24, r25
    9982:	39 f1       	breq	.+78     	; 0x99d2 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x78>
    9984:	ce 01       	movw	r24, r28
    9986:	0e 94 8f 4c 	call	0x991e	; 0x991e <Adafruit_SSD1306::clearDisplay()>
    998a:	8e 81       	ldd	r24, Y+6	; 0x06
    998c:	9f 81       	ldd	r25, Y+7	; 0x07
    998e:	6c 81       	ldd	r22, Y+4	; 0x04
    9990:	7d 81       	ldd	r23, Y+5	; 0x05
    9992:	81 32       	cpi	r24, 0x21	; 33
    9994:	91 05       	cpc	r25, r1
    9996:	0c f0       	brlt	.+2      	; 0x999a <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x40>
    9998:	46 c0       	rjmp	.+140    	; 0x9a26 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0xcc>
    999a:	ac 01       	movw	r20, r24
    999c:	40 52       	subi	r20, 0x20	; 32
    999e:	51 09       	sbc	r21, r1
    99a0:	57 ff       	sbrs	r21, 7
    99a2:	02 c0       	rjmp	.+4      	; 0x99a8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x4e>
    99a4:	4f 5f       	subi	r20, 0xFF	; 255
    99a6:	5f 4f       	sbci	r21, 0xFF	; 255
    99a8:	55 95       	asr	r21
    99aa:	47 95       	ror	r20
    99ac:	63 57       	subi	r22, 0x73	; 115
    99ae:	71 09       	sbc	r23, r1
    99b0:	77 ff       	sbrs	r23, 7
    99b2:	02 c0       	rjmp	.+4      	; 0x99b8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x5e>
    99b4:	6f 5f       	subi	r22, 0xFF	; 255
    99b6:	7f 4f       	sbci	r23, 0xFF	; 255
    99b8:	75 95       	asr	r23
    99ba:	67 95       	ror	r22
    99bc:	cc 24       	eor	r12, r12
    99be:	c3 94       	inc	r12
    99c0:	d1 2c       	mov	r13, r1
    99c2:	a0 e2       	ldi	r26, 0x20	; 32
    99c4:	ea 2e       	mov	r14, r26
    99c6:	f1 2c       	mov	r15, r1
    99c8:	03 e7       	ldi	r16, 0x73	; 115
    99ca:	10 e0       	ldi	r17, 0x00	; 0
    99cc:	20 eb       	ldi	r18, 0xB0	; 176
    99ce:	3b e1       	ldi	r19, 0x1B	; 27
    99d0:	45 c0       	rjmp	.+138    	; 0x9a5c <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x102>
    99d2:	2e 81       	ldd	r18, Y+6	; 0x06
    99d4:	3f 81       	ldd	r19, Y+7	; 0x07
    99d6:	c9 01       	movw	r24, r18
    99d8:	07 96       	adiw	r24, 0x07	; 7
    99da:	97 fd       	sbrc	r25, 7
    99dc:	07 96       	adiw	r24, 0x07	; 7
    99de:	23 e0       	ldi	r18, 0x03	; 3
    99e0:	95 95       	asr	r25
    99e2:	87 95       	ror	r24
    99e4:	2a 95       	dec	r18
    99e6:	e1 f7       	brne	.-8      	; 0x99e0 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x86>
    99e8:	2c 81       	ldd	r18, Y+4	; 0x04
    99ea:	3d 81       	ldd	r19, Y+5	; 0x05
    99ec:	ac 01       	movw	r20, r24
    99ee:	42 9f       	mul	r20, r18
    99f0:	c0 01       	movw	r24, r0
    99f2:	43 9f       	mul	r20, r19
    99f4:	90 0d       	add	r25, r0
    99f6:	52 9f       	mul	r21, r18
    99f8:	90 0d       	add	r25, r0
    99fa:	11 24       	eor	r1, r1
    99fc:	0e 94 29 73 	call	0xe652	; 0xe652 <malloc>
    9a00:	98 a3       	std	Y+32, r25	; 0x20
    9a02:	8f 8f       	std	Y+31, r24	; 0x1f
    9a04:	89 2b       	or	r24, r25
    9a06:	09 f0       	breq	.+2      	; 0x9a0a <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0xb0>
    9a08:	bd cf       	rjmp	.-134    	; 0x9984 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x2a>
    9a0a:	80 e0       	ldi	r24, 0x00	; 0
    9a0c:	df 91       	pop	r29
    9a0e:	cf 91       	pop	r28
    9a10:	1f 91       	pop	r17
    9a12:	0f 91       	pop	r16
    9a14:	ff 90       	pop	r15
    9a16:	ef 90       	pop	r14
    9a18:	df 90       	pop	r13
    9a1a:	cf 90       	pop	r12
    9a1c:	bf 90       	pop	r11
    9a1e:	af 90       	pop	r10
    9a20:	9f 90       	pop	r9
    9a22:	8f 90       	pop	r8
    9a24:	08 95       	ret
    9a26:	ac 01       	movw	r20, r24
    9a28:	40 54       	subi	r20, 0x40	; 64
    9a2a:	51 09       	sbc	r21, r1
    9a2c:	57 ff       	sbrs	r21, 7
    9a2e:	02 c0       	rjmp	.+4      	; 0x9a34 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0xda>
    9a30:	4f 5f       	subi	r20, 0xFF	; 255
    9a32:	5f 4f       	sbci	r21, 0xFF	; 255
    9a34:	55 95       	asr	r21
    9a36:	47 95       	ror	r20
    9a38:	62 55       	subi	r22, 0x52	; 82
    9a3a:	71 09       	sbc	r23, r1
    9a3c:	77 ff       	sbrs	r23, 7
    9a3e:	02 c0       	rjmp	.+4      	; 0x9a44 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0xea>
    9a40:	6f 5f       	subi	r22, 0xFF	; 255
    9a42:	7f 4f       	sbci	r23, 0xFF	; 255
    9a44:	75 95       	asr	r23
    9a46:	67 95       	ror	r22
    9a48:	cc 24       	eor	r12, r12
    9a4a:	c3 94       	inc	r12
    9a4c:	d1 2c       	mov	r13, r1
    9a4e:	80 e4       	ldi	r24, 0x40	; 64
    9a50:	e8 2e       	mov	r14, r24
    9a52:	f1 2c       	mov	r15, r1
    9a54:	02 e5       	ldi	r16, 0x52	; 82
    9a56:	10 e0       	ldi	r17, 0x00	; 0
    9a58:	20 e9       	ldi	r18, 0x90	; 144
    9a5a:	3d e1       	ldi	r19, 0x1D	; 29
    9a5c:	ce 01       	movw	r24, r28
    9a5e:	0e 94 77 46 	call	0x8cee	; 0x8cee <Adafruit_GFX::drawBitmap(int, int, unsigned char const*, int, int, unsigned int)>
    9a62:	8a a2       	std	Y+34, r8	; 0x22
    9a64:	2d 8d       	ldd	r18, Y+29	; 0x1d
    9a66:	3e 8d       	ldd	r19, Y+30	; 0x1e
    9a68:	21 15       	cp	r18, r1
    9a6a:	31 05       	cpc	r19, r1
    9a6c:	09 f4       	brne	.+2      	; 0x9a70 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x116>
    9a6e:	a2 c0       	rjmp	.+324    	; 0x9bb4 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x25a>
    9a70:	9b 2d       	mov	r25, r11
    9a72:	b1 10       	cpse	r11, r1
    9a74:	06 c0       	rjmp	.+12     	; 0x9a82 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x128>
    9a76:	8e 81       	ldd	r24, Y+6	; 0x06
    9a78:	9f 81       	ldd	r25, Y+7	; 0x07
    9a7a:	80 97       	sbiw	r24, 0x20	; 32
    9a7c:	09 f0       	breq	.+2      	; 0x9a80 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x126>
    9a7e:	98 c0       	rjmp	.+304    	; 0x9bb0 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x256>
    9a80:	9c e3       	ldi	r25, 0x3C	; 60
    9a82:	99 a3       	std	Y+33, r25	; 0x21
    9a84:	99 20       	and	r9, r9
    9a86:	09 f4       	brne	.+2      	; 0x9a8a <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x130>
    9a88:	3f c1       	rjmp	.+638    	; 0x9d08 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x3ae>
    9a8a:	c9 01       	movw	r24, r18
    9a8c:	0e 94 09 52 	call	0xa412	; 0xa412 <TwoWire::begin()>
    9a90:	aa 20       	and	r10, r10
    9a92:	f1 f0       	breq	.+60     	; 0x9ad0 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x176>
    9a94:	88 a5       	ldd	r24, Y+40	; 0x28
    9a96:	87 fd       	sbrc	r24, 7
    9a98:	1b c0       	rjmp	.+54     	; 0x9ad0 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x176>
    9a9a:	61 e0       	ldi	r22, 0x01	; 1
    9a9c:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
    9aa0:	61 e0       	ldi	r22, 0x01	; 1
    9aa2:	88 a5       	ldd	r24, Y+40	; 0x28
    9aa4:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
    9aa8:	61 e0       	ldi	r22, 0x01	; 1
    9aaa:	70 e0       	ldi	r23, 0x00	; 0
    9aac:	80 e0       	ldi	r24, 0x00	; 0
    9aae:	90 e0       	ldi	r25, 0x00	; 0
    9ab0:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
    9ab4:	60 e0       	ldi	r22, 0x00	; 0
    9ab6:	88 a5       	ldd	r24, Y+40	; 0x28
    9ab8:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
    9abc:	6a e0       	ldi	r22, 0x0A	; 10
    9abe:	70 e0       	ldi	r23, 0x00	; 0
    9ac0:	80 e0       	ldi	r24, 0x00	; 0
    9ac2:	90 e0       	ldi	r25, 0x00	; 0
    9ac4:	0e 94 88 6a 	call	0xd510	; 0xd510 <delay>
    9ac8:	61 e0       	ldi	r22, 0x01	; 1
    9aca:	88 a5       	ldd	r24, Y+40	; 0x28
    9acc:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
    9ad0:	2d 8d       	ldd	r18, Y+29	; 0x1d
    9ad2:	3e 8d       	ldd	r19, Y+30	; 0x1e
    9ad4:	21 15       	cp	r18, r1
    9ad6:	31 05       	cpc	r19, r1
    9ad8:	09 f4       	brne	.+2      	; 0x9adc <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x182>
    9ada:	e6 c0       	rjmp	.+460    	; 0x9ca8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x34e>
    9adc:	4d a9       	ldd	r20, Y+53	; 0x35
    9ade:	5e a9       	ldd	r21, Y+54	; 0x36
    9ae0:	6f a9       	ldd	r22, Y+55	; 0x37
    9ae2:	78 ad       	ldd	r23, Y+56	; 0x38
    9ae4:	c9 01       	movw	r24, r18
    9ae6:	0e 94 1b 52 	call	0xa436	; 0xa436 <TwoWire::setClock(unsigned long)>
    9aea:	44 e0       	ldi	r20, 0x04	; 4
    9aec:	6c ea       	ldi	r22, 0xAC	; 172
    9aee:	7b e1       	ldi	r23, 0x1B	; 27
    9af0:	ce 01       	movw	r24, r28
    9af2:	0e 94 f1 4b 	call	0x97e2	; 0x97e2 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>
    9af6:	6e 81       	ldd	r22, Y+6	; 0x06
    9af8:	61 50       	subi	r22, 0x01	; 1
    9afa:	ce 01       	movw	r24, r28
    9afc:	0e 94 4c 4b 	call	0x9698	; 0x9698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9b00:	44 e0       	ldi	r20, 0x04	; 4
    9b02:	68 ea       	ldi	r22, 0xA8	; 168
    9b04:	7b e1       	ldi	r23, 0x1B	; 27
    9b06:	ce 01       	movw	r24, r28
    9b08:	0e 94 f1 4b 	call	0x97e2	; 0x97e2 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>
    9b0c:	8a a1       	ldd	r24, Y+34	; 0x22
    9b0e:	60 e1       	ldi	r22, 0x10	; 16
    9b10:	81 30       	cpi	r24, 0x01	; 1
    9b12:	09 f0       	breq	.+2      	; 0x9b16 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1bc>
    9b14:	64 e1       	ldi	r22, 0x14	; 20
    9b16:	ce 01       	movw	r24, r28
    9b18:	0e 94 4c 4b 	call	0x9698	; 0x9698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9b1c:	44 e0       	ldi	r20, 0x04	; 4
    9b1e:	64 ea       	ldi	r22, 0xA4	; 164
    9b20:	7b e1       	ldi	r23, 0x1B	; 27
    9b22:	ce 01       	movw	r24, r28
    9b24:	0e 94 f1 4b 	call	0x97e2	; 0x97e2 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>
    9b28:	8f e8       	ldi	r24, 0x8F	; 143
    9b2a:	8d af       	std	Y+61, r24	; 0x3d
    9b2c:	8c 81       	ldd	r24, Y+4	; 0x04
    9b2e:	9d 81       	ldd	r25, Y+5	; 0x05
    9b30:	80 38       	cpi	r24, 0x80	; 128
    9b32:	91 05       	cpc	r25, r1
    9b34:	09 f0       	breq	.+2      	; 0x9b38 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1de>
    9b36:	ca c0       	rjmp	.+404    	; 0x9ccc <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x372>
    9b38:	8e 81       	ldd	r24, Y+6	; 0x06
    9b3a:	9f 81       	ldd	r25, Y+7	; 0x07
    9b3c:	80 34       	cpi	r24, 0x40	; 64
    9b3e:	91 05       	cpc	r25, r1
    9b40:	09 f0       	breq	.+2      	; 0x9b44 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1ea>
    9b42:	d0 c0       	rjmp	.+416    	; 0x9ce4 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x38a>
    9b44:	8a a1       	ldd	r24, Y+34	; 0x22
    9b46:	81 30       	cpi	r24, 0x01	; 1
    9b48:	09 f0       	breq	.+2      	; 0x9b4c <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1f2>
    9b4a:	be c0       	rjmp	.+380    	; 0x9cc8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x36e>
    9b4c:	8f e9       	ldi	r24, 0x9F	; 159
    9b4e:	8d af       	std	Y+61, r24	; 0x3d
    9b50:	12 e1       	ldi	r17, 0x12	; 18
    9b52:	6a ed       	ldi	r22, 0xDA	; 218
    9b54:	ce 01       	movw	r24, r28
    9b56:	0e 94 4c 4b 	call	0x9698	; 0x9698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9b5a:	61 2f       	mov	r22, r17
    9b5c:	ce 01       	movw	r24, r28
    9b5e:	0e 94 4c 4b 	call	0x9698	; 0x9698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9b62:	61 e8       	ldi	r22, 0x81	; 129
    9b64:	ce 01       	movw	r24, r28
    9b66:	0e 94 4c 4b 	call	0x9698	; 0x9698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9b6a:	6d ad       	ldd	r22, Y+61	; 0x3d
    9b6c:	ce 01       	movw	r24, r28
    9b6e:	0e 94 4c 4b 	call	0x9698	; 0x9698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9b72:	69 ed       	ldi	r22, 0xD9	; 217
    9b74:	ce 01       	movw	r24, r28
    9b76:	0e 94 4c 4b 	call	0x9698	; 0x9698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9b7a:	8a a1       	ldd	r24, Y+34	; 0x22
    9b7c:	62 e2       	ldi	r22, 0x22	; 34
    9b7e:	81 30       	cpi	r24, 0x01	; 1
    9b80:	09 f0       	breq	.+2      	; 0x9b84 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x22a>
    9b82:	61 ef       	ldi	r22, 0xF1	; 241
    9b84:	ce 01       	movw	r24, r28
    9b86:	0e 94 4c 4b 	call	0x9698	; 0x9698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
    9b8a:	46 e0       	ldi	r20, 0x06	; 6
    9b8c:	6e e9       	ldi	r22, 0x9E	; 158
    9b8e:	7b e1       	ldi	r23, 0x1B	; 27
    9b90:	ce 01       	movw	r24, r28
    9b92:	0e 94 f1 4b 	call	0x97e2	; 0x97e2 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>
    9b96:	8d 8d       	ldd	r24, Y+29	; 0x1d
    9b98:	9e 8d       	ldd	r25, Y+30	; 0x1e
    9b9a:	00 97       	sbiw	r24, 0x00	; 0
    9b9c:	09 f4       	brne	.+2      	; 0x9ba0 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x246>
    9b9e:	a6 c0       	rjmp	.+332    	; 0x9cec <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x392>
    9ba0:	49 ad       	ldd	r20, Y+57	; 0x39
    9ba2:	5a ad       	ldd	r21, Y+58	; 0x3a
    9ba4:	6b ad       	ldd	r22, Y+59	; 0x3b
    9ba6:	7c ad       	ldd	r23, Y+60	; 0x3c
    9ba8:	0e 94 1b 52 	call	0xa436	; 0xa436 <TwoWire::setClock(unsigned long)>
    9bac:	81 e0       	ldi	r24, 0x01	; 1
    9bae:	2e cf       	rjmp	.-420    	; 0x9a0c <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0xb2>
    9bb0:	9d e3       	ldi	r25, 0x3D	; 61
    9bb2:	67 cf       	rjmp	.-306    	; 0x9a82 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x128>
    9bb4:	61 e0       	ldi	r22, 0x01	; 1
    9bb6:	8e a1       	ldd	r24, Y+38	; 0x26
    9bb8:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
    9bbc:	61 e0       	ldi	r22, 0x01	; 1
    9bbe:	8f a1       	ldd	r24, Y+39	; 0x27
    9bc0:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
    9bc4:	8e a1       	ldd	r24, Y+38	; 0x26
    9bc6:	08 2e       	mov	r0, r24
    9bc8:	00 0c       	add	r0, r0
    9bca:	99 0b       	sbc	r25, r25
    9bcc:	fc 01       	movw	r30, r24
    9bce:	e0 57       	subi	r30, 0x70	; 112
    9bd0:	ff 4d       	sbci	r31, 0xDF	; 223
    9bd2:	e4 91       	lpm	r30, Z
    9bd4:	f0 e0       	ldi	r31, 0x00	; 0
    9bd6:	ee 0f       	add	r30, r30
    9bd8:	ff 1f       	adc	r31, r31
    9bda:	e6 54       	subi	r30, 0x46	; 70
    9bdc:	ff 4d       	sbci	r31, 0xDF	; 223
    9bde:	25 91       	lpm	r18, Z+
    9be0:	34 91       	lpm	r19, Z
    9be2:	3e a7       	std	Y+46, r19	; 0x2e
    9be4:	2d a7       	std	Y+45, r18	; 0x2d
    9be6:	fc 01       	movw	r30, r24
    9be8:	e0 59       	subi	r30, 0x90	; 144
    9bea:	ff 4d       	sbci	r31, 0xDF	; 223
    9bec:	e4 91       	lpm	r30, Z
    9bee:	eb ab       	std	Y+51, r30	; 0x33
    9bf0:	8f a1       	ldd	r24, Y+39	; 0x27
    9bf2:	08 2e       	mov	r0, r24
    9bf4:	00 0c       	add	r0, r0
    9bf6:	99 0b       	sbc	r25, r25
    9bf8:	fc 01       	movw	r30, r24
    9bfa:	e0 57       	subi	r30, 0x70	; 112
    9bfc:	ff 4d       	sbci	r31, 0xDF	; 223
    9bfe:	e4 91       	lpm	r30, Z
    9c00:	f0 e0       	ldi	r31, 0x00	; 0
    9c02:	ee 0f       	add	r30, r30
    9c04:	ff 1f       	adc	r31, r31
    9c06:	e6 54       	subi	r30, 0x46	; 70
    9c08:	ff 4d       	sbci	r31, 0xDF	; 223
    9c0a:	a5 91       	lpm	r26, Z+
    9c0c:	b4 91       	lpm	r27, Z
    9c0e:	b8 ab       	std	Y+48, r27	; 0x30
    9c10:	af a7       	std	Y+47, r26	; 0x2f
    9c12:	fc 01       	movw	r30, r24
    9c14:	e0 59       	subi	r30, 0x90	; 144
    9c16:	ff 4d       	sbci	r31, 0xDF	; 223
    9c18:	e4 91       	lpm	r30, Z
    9c1a:	ec ab       	std	Y+52, r30	; 0x34
    9c1c:	8c 91       	ld	r24, X
    9c1e:	e8 2b       	or	r30, r24
    9c20:	ec 93       	st	X, r30
    9c22:	8b 8d       	ldd	r24, Y+27	; 0x1b
    9c24:	9c 8d       	ldd	r25, Y+28	; 0x1c
    9c26:	89 2b       	or	r24, r25
    9c28:	31 f0       	breq	.+12     	; 0x9c36 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x2dc>
    9c2a:	99 20       	and	r9, r9
    9c2c:	09 f4       	brne	.+2      	; 0x9c30 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x2d6>
    9c2e:	30 cf       	rjmp	.-416    	; 0x9a90 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x136>
    9c30:	0e 94 17 51 	call	0xa22e	; 0xa22e <SPIClass::begin()>
    9c34:	2d cf       	rjmp	.-422    	; 0x9a90 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x136>
    9c36:	61 e0       	ldi	r22, 0x01	; 1
    9c38:	8c a1       	ldd	r24, Y+36	; 0x24
    9c3a:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
    9c3e:	61 e0       	ldi	r22, 0x01	; 1
    9c40:	8d a1       	ldd	r24, Y+37	; 0x25
    9c42:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
    9c46:	8c a1       	ldd	r24, Y+36	; 0x24
    9c48:	08 2e       	mov	r0, r24
    9c4a:	00 0c       	add	r0, r0
    9c4c:	99 0b       	sbc	r25, r25
    9c4e:	fc 01       	movw	r30, r24
    9c50:	e0 57       	subi	r30, 0x70	; 112
    9c52:	ff 4d       	sbci	r31, 0xDF	; 223
    9c54:	e4 91       	lpm	r30, Z
    9c56:	f0 e0       	ldi	r31, 0x00	; 0
    9c58:	ee 0f       	add	r30, r30
    9c5a:	ff 1f       	adc	r31, r31
    9c5c:	e6 54       	subi	r30, 0x46	; 70
    9c5e:	ff 4d       	sbci	r31, 0xDF	; 223
    9c60:	25 91       	lpm	r18, Z+
    9c62:	34 91       	lpm	r19, Z
    9c64:	3a a7       	std	Y+42, r19	; 0x2a
    9c66:	29 a7       	std	Y+41, r18	; 0x29
    9c68:	fc 01       	movw	r30, r24
    9c6a:	e0 59       	subi	r30, 0x90	; 144
    9c6c:	ff 4d       	sbci	r31, 0xDF	; 223
    9c6e:	e4 91       	lpm	r30, Z
    9c70:	e9 ab       	std	Y+49, r30	; 0x31
    9c72:	8d a1       	ldd	r24, Y+37	; 0x25
    9c74:	08 2e       	mov	r0, r24
    9c76:	00 0c       	add	r0, r0
    9c78:	99 0b       	sbc	r25, r25
    9c7a:	fc 01       	movw	r30, r24
    9c7c:	e0 57       	subi	r30, 0x70	; 112
    9c7e:	ff 4d       	sbci	r31, 0xDF	; 223
    9c80:	e4 91       	lpm	r30, Z
    9c82:	f0 e0       	ldi	r31, 0x00	; 0
    9c84:	ee 0f       	add	r30, r30
    9c86:	ff 1f       	adc	r31, r31
    9c88:	e6 54       	subi	r30, 0x46	; 70
    9c8a:	ff 4d       	sbci	r31, 0xDF	; 223
    9c8c:	a5 91       	lpm	r26, Z+
    9c8e:	b4 91       	lpm	r27, Z
    9c90:	bc a7       	std	Y+44, r27	; 0x2c
    9c92:	ab a7       	std	Y+43, r26	; 0x2b
    9c94:	fc 01       	movw	r30, r24
    9c96:	e0 59       	subi	r30, 0x90	; 144
    9c98:	ff 4d       	sbci	r31, 0xDF	; 223
    9c9a:	e4 91       	lpm	r30, Z
    9c9c:	ea ab       	std	Y+50, r30	; 0x32
    9c9e:	8c 91       	ld	r24, X
    9ca0:	e0 95       	com	r30
    9ca2:	e8 23       	and	r30, r24
    9ca4:	ec 93       	st	X, r30
    9ca6:	f4 ce       	rjmp	.-536    	; 0x9a90 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x136>
    9ca8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    9caa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    9cac:	89 2b       	or	r24, r25
    9cae:	21 f0       	breq	.+8      	; 0x9cb8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x35e>
    9cb0:	8e ad       	ldd	r24, Y+62	; 0x3e
    9cb2:	9f ad       	ldd	r25, Y+63	; 0x3f
    9cb4:	0e 94 d4 4a 	call	0x95a8	; 0x95a8 <SPIClass::beginTransaction(SPISettings)>
    9cb8:	ef a5       	ldd	r30, Y+47	; 0x2f
    9cba:	f8 a9       	ldd	r31, Y+48	; 0x30
    9cbc:	90 81       	ld	r25, Z
    9cbe:	8c a9       	ldd	r24, Y+52	; 0x34
    9cc0:	80 95       	com	r24
    9cc2:	89 23       	and	r24, r25
    9cc4:	80 83       	st	Z, r24
    9cc6:	11 cf       	rjmp	.-478    	; 0x9aea <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x190>
    9cc8:	8f ec       	ldi	r24, 0xCF	; 207
    9cca:	41 cf       	rjmp	.-382    	; 0x9b4e <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1f4>
    9ccc:	80 36       	cpi	r24, 0x60	; 96
    9cce:	91 05       	cpc	r25, r1
    9cd0:	49 f4       	brne	.+18     	; 0x9ce4 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x38a>
    9cd2:	8e 81       	ldd	r24, Y+6	; 0x06
    9cd4:	9f 81       	ldd	r25, Y+7	; 0x07
    9cd6:	40 97       	sbiw	r24, 0x10	; 16
    9cd8:	29 f4       	brne	.+10     	; 0x9ce4 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x38a>
    9cda:	8a a1       	ldd	r24, Y+34	; 0x22
    9cdc:	81 30       	cpi	r24, 0x01	; 1
    9cde:	21 f4       	brne	.+8      	; 0x9ce8 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x38e>
    9ce0:	80 e1       	ldi	r24, 0x10	; 16
    9ce2:	8d af       	std	Y+61, r24	; 0x3d
    9ce4:	12 e0       	ldi	r17, 0x02	; 2
    9ce6:	35 cf       	rjmp	.-406    	; 0x9b52 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x1f8>
    9ce8:	8f ea       	ldi	r24, 0xAF	; 175
    9cea:	fb cf       	rjmp	.-10     	; 0x9ce2 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x388>
    9cec:	ef a5       	ldd	r30, Y+47	; 0x2f
    9cee:	f8 a9       	ldd	r31, Y+48	; 0x30
    9cf0:	80 81       	ld	r24, Z
    9cf2:	9c a9       	ldd	r25, Y+52	; 0x34
    9cf4:	89 2b       	or	r24, r25
    9cf6:	80 83       	st	Z, r24
    9cf8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    9cfa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    9cfc:	89 2b       	or	r24, r25
    9cfe:	09 f4       	brne	.+2      	; 0x9d02 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x3a8>
    9d00:	55 cf       	rjmp	.-342    	; 0x9bac <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x252>
    9d02:	0e 94 14 4a 	call	0x9428	; 0x9428 <SPIClass::endTransaction()>
    9d06:	52 cf       	rjmp	.-348    	; 0x9bac <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x252>
    9d08:	a1 10       	cpse	r10, r1
    9d0a:	c4 ce       	rjmp	.-632    	; 0x9a94 <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x13a>
    9d0c:	e7 ce       	rjmp	.-562    	; 0x9adc <Adafruit_SSD1306::begin(unsigned char, unsigned char, bool, bool)+0x182>

00009d0e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130621drawFastHLineInternalEiiij():
    9d0e:	0f 93       	push	r16
    9d10:	1f 93       	push	r17
    9d12:	cf 93       	push	r28
    9d14:	df 93       	push	r29
    9d16:	dc 01       	movw	r26, r24
    9d18:	57 fd       	sbrc	r21, 7
    9d1a:	46 c0       	rjmp	.+140    	; 0x9da8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    9d1c:	16 96       	adiw	r26, 0x06	; 6
    9d1e:	8d 91       	ld	r24, X+
    9d20:	9c 91       	ld	r25, X
    9d22:	17 97       	sbiw	r26, 0x07	; 7
    9d24:	48 17       	cp	r20, r24
    9d26:	59 07       	cpc	r21, r25
    9d28:	0c f0       	brlt	.+2      	; 0x9d2c <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x1e>
    9d2a:	3e c0       	rjmp	.+124    	; 0x9da8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    9d2c:	77 ff       	sbrs	r23, 7
    9d2e:	04 c0       	rjmp	.+8      	; 0x9d38 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x2a>
    9d30:	26 0f       	add	r18, r22
    9d32:	37 1f       	adc	r19, r23
    9d34:	70 e0       	ldi	r23, 0x00	; 0
    9d36:	60 e0       	ldi	r22, 0x00	; 0
    9d38:	14 96       	adiw	r26, 0x04	; 4
    9d3a:	cd 91       	ld	r28, X+
    9d3c:	dc 91       	ld	r29, X
    9d3e:	15 97       	sbiw	r26, 0x05	; 5
    9d40:	cb 01       	movw	r24, r22
    9d42:	82 0f       	add	r24, r18
    9d44:	93 1f       	adc	r25, r19
    9d46:	c8 17       	cp	r28, r24
    9d48:	d9 07       	cpc	r29, r25
    9d4a:	1c f4       	brge	.+6      	; 0x9d52 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x44>
    9d4c:	9e 01       	movw	r18, r28
    9d4e:	26 1b       	sub	r18, r22
    9d50:	37 0b       	sbc	r19, r23
    9d52:	12 16       	cp	r1, r18
    9d54:	13 06       	cpc	r1, r19
    9d56:	44 f5       	brge	.+80     	; 0x9da8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    9d58:	fa 01       	movw	r30, r20
    9d5a:	57 fd       	sbrc	r21, 7
    9d5c:	37 96       	adiw	r30, 0x07	; 7
    9d5e:	83 e0       	ldi	r24, 0x03	; 3
    9d60:	f5 95       	asr	r31
    9d62:	e7 95       	ror	r30
    9d64:	8a 95       	dec	r24
    9d66:	e1 f7       	brne	.-8      	; 0x9d60 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x52>
    9d68:	ec 9f       	mul	r30, r28
    9d6a:	c0 01       	movw	r24, r0
    9d6c:	ed 9f       	mul	r30, r29
    9d6e:	90 0d       	add	r25, r0
    9d70:	fc 9f       	mul	r31, r28
    9d72:	90 0d       	add	r25, r0
    9d74:	11 24       	eor	r1, r1
    9d76:	68 0f       	add	r22, r24
    9d78:	79 1f       	adc	r23, r25
    9d7a:	5f 96       	adiw	r26, 0x1f	; 31
    9d7c:	ed 91       	ld	r30, X+
    9d7e:	fc 91       	ld	r31, X
    9d80:	e6 0f       	add	r30, r22
    9d82:	f7 1f       	adc	r31, r23
    9d84:	47 70       	andi	r20, 0x07	; 7
    9d86:	55 27       	eor	r21, r21
    9d88:	81 e0       	ldi	r24, 0x01	; 1
    9d8a:	90 e0       	ldi	r25, 0x00	; 0
    9d8c:	01 c0       	rjmp	.+2      	; 0x9d90 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x82>
    9d8e:	88 0f       	add	r24, r24
    9d90:	4a 95       	dec	r20
    9d92:	ea f7       	brpl	.-6      	; 0x9d8e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x80>
    9d94:	48 2f       	mov	r20, r24
    9d96:	01 30       	cpi	r16, 0x01	; 1
    9d98:	11 05       	cpc	r17, r1
    9d9a:	59 f0       	breq	.+22     	; 0x9db2 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xa4>
    9d9c:	a8 f0       	brcs	.+42     	; 0x9dc8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xba>
    9d9e:	2e 0f       	add	r18, r30
    9da0:	3f 1f       	adc	r19, r31
    9da2:	02 30       	cpi	r16, 0x02	; 2
    9da4:	11 05       	cpc	r17, r1
    9da6:	e1 f0       	breq	.+56     	; 0x9de0 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xd2>
    9da8:	df 91       	pop	r29
    9daa:	cf 91       	pop	r28
    9dac:	1f 91       	pop	r17
    9dae:	0f 91       	pop	r16
    9db0:	08 95       	ret
    9db2:	2e 0f       	add	r18, r30
    9db4:	3f 1f       	adc	r19, r31
    9db6:	e2 17       	cp	r30, r18
    9db8:	f3 07       	cpc	r31, r19
    9dba:	b1 f3       	breq	.-20     	; 0x9da8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    9dbc:	81 91       	ld	r24, Z+
    9dbe:	df 01       	movw	r26, r30
    9dc0:	11 97       	sbiw	r26, 0x01	; 1
    9dc2:	84 2b       	or	r24, r20
    9dc4:	8c 93       	st	X, r24
    9dc6:	f7 cf       	rjmp	.-18     	; 0x9db6 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xa8>
    9dc8:	80 95       	com	r24
    9dca:	2e 0f       	add	r18, r30
    9dcc:	3f 1f       	adc	r19, r31
    9dce:	e2 17       	cp	r30, r18
    9dd0:	f3 07       	cpc	r31, r19
    9dd2:	51 f3       	breq	.-44     	; 0x9da8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    9dd4:	91 91       	ld	r25, Z+
    9dd6:	df 01       	movw	r26, r30
    9dd8:	11 97       	sbiw	r26, 0x01	; 1
    9dda:	98 23       	and	r25, r24
    9ddc:	9c 93       	st	X, r25
    9dde:	f7 cf       	rjmp	.-18     	; 0x9dce <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xc0>
    9de0:	e2 17       	cp	r30, r18
    9de2:	f3 07       	cpc	r31, r19
    9de4:	09 f3       	breq	.-62     	; 0x9da8 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0x9a>
    9de6:	81 91       	ld	r24, Z+
    9de8:	df 01       	movw	r26, r30
    9dea:	11 97       	sbiw	r26, 0x01	; 1
    9dec:	84 27       	eor	r24, r20
    9dee:	8c 93       	st	X, r24
    9df0:	f7 cf       	rjmp	.-18     	; 0x9de0 <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)+0xd2>

00009df2 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130621drawFastVLineInternalEiiij():
    9df2:	ef 92       	push	r14
    9df4:	ff 92       	push	r15
    9df6:	0f 93       	push	r16
    9df8:	1f 93       	push	r17
    9dfa:	cf 93       	push	r28
    9dfc:	df 93       	push	r29
    9dfe:	ec 01       	movw	r28, r24
    9e00:	77 fd       	sbrc	r23, 7
    9e02:	76 c0       	rjmp	.+236    	; 0x9ef0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    9e04:	ec 80       	ldd	r14, Y+4	; 0x04
    9e06:	fd 80       	ldd	r15, Y+5	; 0x05
    9e08:	6e 15       	cp	r22, r14
    9e0a:	7f 05       	cpc	r23, r15
    9e0c:	0c f0       	brlt	.+2      	; 0x9e10 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x1e>
    9e0e:	70 c0       	rjmp	.+224    	; 0x9ef0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    9e10:	57 ff       	sbrs	r21, 7
    9e12:	04 c0       	rjmp	.+8      	; 0x9e1c <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x2a>
    9e14:	24 0f       	add	r18, r20
    9e16:	35 1f       	adc	r19, r21
    9e18:	50 e0       	ldi	r21, 0x00	; 0
    9e1a:	40 e0       	ldi	r20, 0x00	; 0
    9e1c:	8e 81       	ldd	r24, Y+6	; 0x06
    9e1e:	9f 81       	ldd	r25, Y+7	; 0x07
    9e20:	fa 01       	movw	r30, r20
    9e22:	e2 0f       	add	r30, r18
    9e24:	f3 1f       	adc	r31, r19
    9e26:	8e 17       	cp	r24, r30
    9e28:	9f 07       	cpc	r25, r31
    9e2a:	1c f4       	brge	.+6      	; 0x9e32 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x40>
    9e2c:	9c 01       	movw	r18, r24
    9e2e:	24 1b       	sub	r18, r20
    9e30:	35 0b       	sbc	r19, r21
    9e32:	12 16       	cp	r1, r18
    9e34:	13 06       	cpc	r1, r19
    9e36:	0c f0       	brlt	.+2      	; 0x9e3a <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x48>
    9e38:	5b c0       	rjmp	.+182    	; 0x9ef0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    9e3a:	92 2f       	mov	r25, r18
    9e3c:	84 2f       	mov	r24, r20
    9e3e:	86 95       	lsr	r24
    9e40:	86 95       	lsr	r24
    9e42:	86 95       	lsr	r24
    9e44:	8e 9d       	mul	r24, r14
    9e46:	d0 01       	movw	r26, r0
    9e48:	8f 9d       	mul	r24, r15
    9e4a:	b0 0d       	add	r27, r0
    9e4c:	11 24       	eor	r1, r1
    9e4e:	6a 0f       	add	r22, r26
    9e50:	7b 1f       	adc	r23, r27
    9e52:	af 8d       	ldd	r26, Y+31	; 0x1f
    9e54:	b8 a1       	ldd	r27, Y+32	; 0x20
    9e56:	a6 0f       	add	r26, r22
    9e58:	b7 1f       	adc	r27, r23
    9e5a:	47 70       	andi	r20, 0x07	; 7
    9e5c:	49 f1       	breq	.+82     	; 0x9eb0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xbe>
    9e5e:	88 e0       	ldi	r24, 0x08	; 8
    9e60:	84 1b       	sub	r24, r20
    9e62:	48 2f       	mov	r20, r24
    9e64:	68 2f       	mov	r22, r24
    9e66:	70 e0       	ldi	r23, 0x00	; 0
    9e68:	fb 01       	movw	r30, r22
    9e6a:	ea 56       	subi	r30, 0x6A	; 106
    9e6c:	f4 4e       	sbci	r31, 0xE4	; 228
    9e6e:	e4 91       	lpm	r30, Z
    9e70:	28 17       	cp	r18, r24
    9e72:	08 f0       	brcs	.+2      	; 0x9e76 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x84>
    9e74:	63 c0       	rjmp	.+198    	; 0x9f3c <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x14a>
    9e76:	62 1b       	sub	r22, r18
    9e78:	71 09       	sbc	r23, r1
    9e7a:	2f ef       	ldi	r18, 0xFF	; 255
    9e7c:	30 e0       	ldi	r19, 0x00	; 0
    9e7e:	02 c0       	rjmp	.+4      	; 0x9e84 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x92>
    9e80:	35 95       	asr	r19
    9e82:	27 95       	ror	r18
    9e84:	6a 95       	dec	r22
    9e86:	e2 f7       	brpl	.-8      	; 0x9e80 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x8e>
    9e88:	e2 23       	and	r30, r18
    9e8a:	01 30       	cpi	r16, 0x01	; 1
    9e8c:	11 05       	cpc	r17, r1
    9e8e:	39 f0       	breq	.+14     	; 0x9e9e <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xac>
    9e90:	b0 f1       	brcs	.+108    	; 0x9efe <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x10c>
    9e92:	02 30       	cpi	r16, 0x02	; 2
    9e94:	11 05       	cpc	r17, r1
    9e96:	61 f5       	brne	.+88     	; 0x9ef0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    9e98:	8c 91       	ld	r24, X
    9e9a:	e8 27       	eor	r30, r24
    9e9c:	02 c0       	rjmp	.+4      	; 0x9ea2 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xb0>
    9e9e:	8c 91       	ld	r24, X
    9ea0:	e8 2b       	or	r30, r24
    9ea2:	ec 93       	st	X, r30
    9ea4:	94 17       	cp	r25, r20
    9ea6:	20 f1       	brcs	.+72     	; 0x9ef0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    9ea8:	2c 81       	ldd	r18, Y+4	; 0x04
    9eaa:	3d 81       	ldd	r19, Y+5	; 0x05
    9eac:	a2 0f       	add	r26, r18
    9eae:	b3 1f       	adc	r27, r19
    9eb0:	e9 2f       	mov	r30, r25
    9eb2:	e4 1b       	sub	r30, r20
    9eb4:	e8 30       	cpi	r30, 0x08	; 8
    9eb6:	78 f0       	brcs	.+30     	; 0x9ed6 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xe4>
    9eb8:	02 30       	cpi	r16, 0x02	; 2
    9eba:	11 05       	cpc	r17, r1
    9ebc:	21 f5       	brne	.+72     	; 0x9f06 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x114>
    9ebe:	8e 2f       	mov	r24, r30
    9ec0:	9c 91       	ld	r25, X
    9ec2:	90 95       	com	r25
    9ec4:	9c 93       	st	X, r25
    9ec6:	2c 81       	ldd	r18, Y+4	; 0x04
    9ec8:	3d 81       	ldd	r19, Y+5	; 0x05
    9eca:	a2 0f       	add	r26, r18
    9ecc:	b3 1f       	adc	r27, r19
    9ece:	88 50       	subi	r24, 0x08	; 8
    9ed0:	88 30       	cpi	r24, 0x08	; 8
    9ed2:	b0 f7       	brcc	.-20     	; 0x9ec0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xce>
    9ed4:	e7 70       	andi	r30, 0x07	; 7
    9ed6:	ee 23       	and	r30, r30
    9ed8:	59 f0       	breq	.+22     	; 0x9ef0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    9eda:	f0 e0       	ldi	r31, 0x00	; 0
    9edc:	e2 57       	subi	r30, 0x72	; 114
    9ede:	f4 4e       	sbci	r31, 0xE4	; 228
    9ee0:	e4 91       	lpm	r30, Z
    9ee2:	01 30       	cpi	r16, 0x01	; 1
    9ee4:	11 05       	cpc	r17, r1
    9ee6:	f9 f0       	breq	.+62     	; 0x9f26 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x134>
    9ee8:	10 f1       	brcs	.+68     	; 0x9f2e <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x13c>
    9eea:	02 30       	cpi	r16, 0x02	; 2
    9eec:	11 05       	cpc	r17, r1
    9eee:	19 f1       	breq	.+70     	; 0x9f36 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x144>
    9ef0:	df 91       	pop	r29
    9ef2:	cf 91       	pop	r28
    9ef4:	1f 91       	pop	r17
    9ef6:	0f 91       	pop	r16
    9ef8:	ff 90       	pop	r15
    9efa:	ef 90       	pop	r14
    9efc:	08 95       	ret
    9efe:	e0 95       	com	r30
    9f00:	8c 91       	ld	r24, X
    9f02:	e8 23       	and	r30, r24
    9f04:	ce cf       	rjmp	.-100    	; 0x9ea2 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xb0>
    9f06:	81 e0       	ldi	r24, 0x01	; 1
    9f08:	01 15       	cp	r16, r1
    9f0a:	11 05       	cpc	r17, r1
    9f0c:	09 f4       	brne	.+2      	; 0x9f10 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x11e>
    9f0e:	80 e0       	ldi	r24, 0x00	; 0
    9f10:	81 95       	neg	r24
    9f12:	9e 2f       	mov	r25, r30
    9f14:	8c 93       	st	X, r24
    9f16:	2c 81       	ldd	r18, Y+4	; 0x04
    9f18:	3d 81       	ldd	r19, Y+5	; 0x05
    9f1a:	a2 0f       	add	r26, r18
    9f1c:	b3 1f       	adc	r27, r19
    9f1e:	98 50       	subi	r25, 0x08	; 8
    9f20:	98 30       	cpi	r25, 0x08	; 8
    9f22:	c0 f7       	brcc	.-16     	; 0x9f14 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x122>
    9f24:	d7 cf       	rjmp	.-82     	; 0x9ed4 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xe2>
    9f26:	8c 91       	ld	r24, X
    9f28:	e8 2b       	or	r30, r24
    9f2a:	ec 93       	st	X, r30
    9f2c:	e1 cf       	rjmp	.-62     	; 0x9ef0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xfe>
    9f2e:	e0 95       	com	r30
    9f30:	8c 91       	ld	r24, X
    9f32:	e8 23       	and	r30, r24
    9f34:	fa cf       	rjmp	.-12     	; 0x9f2a <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x138>
    9f36:	8c 91       	ld	r24, X
    9f38:	e8 27       	eor	r30, r24
    9f3a:	f7 cf       	rjmp	.-18     	; 0x9f2a <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x138>
    9f3c:	01 30       	cpi	r16, 0x01	; 1
    9f3e:	11 05       	cpc	r17, r1
    9f40:	09 f4       	brne	.+2      	; 0x9f44 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x152>
    9f42:	ad cf       	rjmp	.-166    	; 0x9e9e <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xac>
    9f44:	e0 f2       	brcs	.-72     	; 0x9efe <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x10c>
    9f46:	02 30       	cpi	r16, 0x02	; 2
    9f48:	11 05       	cpc	r17, r1
    9f4a:	09 f4       	brne	.+2      	; 0x9f4e <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0x15c>
    9f4c:	a5 cf       	rjmp	.-182    	; 0x9e98 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xa6>
    9f4e:	ae 0d       	add	r26, r14
    9f50:	bf 1d       	adc	r27, r15
    9f52:	ae cf       	rjmp	.-164    	; 0x9eb0 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)+0xbe>

00009f54 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130613drawFastHLineEiiij():
    9f54:	0f 93       	push	r16
    9f56:	1f 93       	push	r17
    9f58:	fa 01       	movw	r30, r20
    9f5a:	dc 01       	movw	r26, r24
    9f5c:	56 96       	adiw	r26, 0x16	; 22
    9f5e:	4c 91       	ld	r20, X
    9f60:	56 97       	sbiw	r26, 0x16	; 22
    9f62:	42 30       	cpi	r20, 0x02	; 2
    9f64:	89 f0       	breq	.+34     	; 0x9f88 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x34>
    9f66:	43 30       	cpi	r20, 0x03	; 3
    9f68:	39 f1       	breq	.+78     	; 0x9fb8 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x64>
    9f6a:	41 30       	cpi	r20, 0x01	; 1
    9f6c:	f9 f4       	brne	.+62     	; 0x9fac <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x58>
    9f6e:	14 96       	adiw	r26, 0x04	; 4
    9f70:	4d 91       	ld	r20, X+
    9f72:	5c 91       	ld	r21, X
    9f74:	da 01       	movw	r26, r20
    9f76:	ae 1b       	sub	r26, r30
    9f78:	bf 0b       	sbc	r27, r31
    9f7a:	fd 01       	movw	r30, r26
    9f7c:	31 97       	sbiw	r30, 0x01	; 1
    9f7e:	ab 01       	movw	r20, r22
    9f80:	bf 01       	movw	r22, r30
    9f82:	0e 94 f9 4e 	call	0x9df2	; 0x9df2 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)>
    9f86:	15 c0       	rjmp	.+42     	; 0x9fb2 <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x5e>
    9f88:	16 96       	adiw	r26, 0x06	; 6
    9f8a:	4d 91       	ld	r20, X+
    9f8c:	5c 91       	ld	r21, X
    9f8e:	da 01       	movw	r26, r20
    9f90:	ae 1b       	sub	r26, r30
    9f92:	bf 0b       	sbc	r27, r31
    9f94:	fd 01       	movw	r30, r26
    9f96:	31 97       	sbiw	r30, 0x01	; 1
    9f98:	dc 01       	movw	r26, r24
    9f9a:	14 96       	adiw	r26, 0x04	; 4
    9f9c:	4d 91       	ld	r20, X+
    9f9e:	5c 91       	ld	r21, X
    9fa0:	da 01       	movw	r26, r20
    9fa2:	a6 1b       	sub	r26, r22
    9fa4:	b7 0b       	sbc	r27, r23
    9fa6:	bd 01       	movw	r22, r26
    9fa8:	62 1b       	sub	r22, r18
    9faa:	73 0b       	sbc	r23, r19
    9fac:	af 01       	movw	r20, r30
    9fae:	0e 94 87 4e 	call	0x9d0e	; 0x9d0e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)>
    9fb2:	1f 91       	pop	r17
    9fb4:	0f 91       	pop	r16
    9fb6:	08 95       	ret
    9fb8:	16 96       	adiw	r26, 0x06	; 6
    9fba:	4d 91       	ld	r20, X+
    9fbc:	5c 91       	ld	r21, X
    9fbe:	da 01       	movw	r26, r20
    9fc0:	a6 1b       	sub	r26, r22
    9fc2:	b7 0b       	sbc	r27, r23
    9fc4:	bd 01       	movw	r22, r26
    9fc6:	62 1b       	sub	r22, r18
    9fc8:	73 0b       	sbc	r23, r19
    9fca:	d9 cf       	rjmp	.-78     	; 0x9f7e <Adafruit_SSD1306::drawFastHLine(int, int, int, unsigned int)+0x2a>

00009fcc <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)>:
_ZN16Adafruit_SSD130613drawFastVLineEiiij():
    9fcc:	0f 93       	push	r16
    9fce:	1f 93       	push	r17
    9fd0:	fa 01       	movw	r30, r20
    9fd2:	dc 01       	movw	r26, r24
    9fd4:	56 96       	adiw	r26, 0x16	; 22
    9fd6:	4c 91       	ld	r20, X
    9fd8:	56 97       	sbiw	r26, 0x16	; 22
    9fda:	42 30       	cpi	r20, 0x02	; 2
    9fdc:	91 f0       	breq	.+36     	; 0xa002 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x36>
    9fde:	43 30       	cpi	r20, 0x03	; 3
    9fe0:	49 f1       	breq	.+82     	; 0xa034 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x68>
    9fe2:	41 30       	cpi	r20, 0x01	; 1
    9fe4:	09 f5       	brne	.+66     	; 0xa028 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x5c>
    9fe6:	14 96       	adiw	r26, 0x04	; 4
    9fe8:	4d 91       	ld	r20, X+
    9fea:	5c 91       	ld	r21, X
    9fec:	da 01       	movw	r26, r20
    9fee:	ae 1b       	sub	r26, r30
    9ff0:	bf 0b       	sbc	r27, r31
    9ff2:	fd 01       	movw	r30, r26
    9ff4:	e2 1b       	sub	r30, r18
    9ff6:	f3 0b       	sbc	r31, r19
    9ff8:	ab 01       	movw	r20, r22
    9ffa:	bf 01       	movw	r22, r30
    9ffc:	0e 94 87 4e 	call	0x9d0e	; 0x9d0e <Adafruit_SSD1306::drawFastHLineInternal(int, int, int, unsigned int)>
    a000:	16 c0       	rjmp	.+44     	; 0xa02e <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x62>
    a002:	14 96       	adiw	r26, 0x04	; 4
    a004:	4d 91       	ld	r20, X+
    a006:	5c 91       	ld	r21, X
    a008:	da 01       	movw	r26, r20
    a00a:	a6 1b       	sub	r26, r22
    a00c:	b7 0b       	sbc	r27, r23
    a00e:	bd 01       	movw	r22, r26
    a010:	61 50       	subi	r22, 0x01	; 1
    a012:	71 09       	sbc	r23, r1
    a014:	dc 01       	movw	r26, r24
    a016:	16 96       	adiw	r26, 0x06	; 6
    a018:	4d 91       	ld	r20, X+
    a01a:	5c 91       	ld	r21, X
    a01c:	da 01       	movw	r26, r20
    a01e:	ae 1b       	sub	r26, r30
    a020:	bf 0b       	sbc	r27, r31
    a022:	fd 01       	movw	r30, r26
    a024:	e2 1b       	sub	r30, r18
    a026:	f3 0b       	sbc	r31, r19
    a028:	af 01       	movw	r20, r30
    a02a:	0e 94 f9 4e 	call	0x9df2	; 0x9df2 <Adafruit_SSD1306::drawFastVLineInternal(int, int, int, unsigned int)>
    a02e:	1f 91       	pop	r17
    a030:	0f 91       	pop	r16
    a032:	08 95       	ret
    a034:	16 96       	adiw	r26, 0x06	; 6
    a036:	4d 91       	ld	r20, X+
    a038:	5c 91       	ld	r21, X
    a03a:	da 01       	movw	r26, r20
    a03c:	a6 1b       	sub	r26, r22
    a03e:	b7 0b       	sbc	r27, r23
    a040:	bd 01       	movw	r22, r26
    a042:	61 50       	subi	r22, 0x01	; 1
    a044:	71 09       	sbc	r23, r1
    a046:	d8 cf       	rjmp	.-80     	; 0x9ff8 <Adafruit_SSD1306::drawFastVLine(int, int, int, unsigned int)+0x2c>

0000a048 <Adafruit_SSD1306::display()>:
_ZN16Adafruit_SSD13067displayEv():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:991
    @return None (void).
    @note   Drawing operations are not visible until this function is
            called. Call after each graphics command, or after a whole set
            of graphics commands, as best needed by one's own application.
*/
void Adafruit_SSD1306::display(void) {
    a048:	cf 92       	push	r12
    a04a:	df 92       	push	r13
    a04c:	ef 92       	push	r14
    a04e:	ff 92       	push	r15
    a050:	0f 93       	push	r16
    a052:	1f 93       	push	r17
    a054:	cf 93       	push	r28
    a056:	df 93       	push	r29
    a058:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:992
  TRANSACTION_START
    a05a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a05c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a05e:	00 97       	sbiw	r24, 0x00	; 0
    a060:	09 f4       	brne	.+2      	; 0xa064 <Adafruit_SSD1306::display()+0x1c>
    a062:	6e c0       	rjmp	.+220    	; 0xa140 <Adafruit_SSD1306::display()+0xf8>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:992 (discriminator 1)
    a064:	4d a9       	ldd	r20, Y+53	; 0x35
    a066:	5e a9       	ldd	r21, Y+54	; 0x36
    a068:	6f a9       	ldd	r22, Y+55	; 0x37
    a06a:	78 ad       	ldd	r23, Y+56	; 0x38
    a06c:	0e 94 1b 52 	call	0xa436	; 0xa436 <TwoWire::setClock(unsigned long)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:998
  static const uint8_t PROGMEM dlist1[] = {
      SSD1306_PAGEADDR,
      0,                      // Page start address
      0xFF,                   // Page end (not really, but works here)
      SSD1306_COLUMNADDR, 0}; // Column start address
  ssd1306_commandList(dlist1, sizeof(dlist1));
    a070:	45 e0       	ldi	r20, 0x05	; 5
    a072:	69 e8       	ldi	r22, 0x89	; 137
    a074:	7b e1       	ldi	r23, 0x1B	; 27
    a076:	ce 01       	movw	r24, r28
    a078:	0e 94 f1 4b 	call	0x97e2	; 0x97e2 <Adafruit_SSD1306::ssd1306_commandList(unsigned char const*, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:999
  ssd1306_command1(WIDTH - 1); // Column end address
    a07c:	6c 81       	ldd	r22, Y+4	; 0x04
    a07e:	61 50       	subi	r22, 0x01	; 1
    a080:	ce 01       	movw	r24, r28
    a082:	0e 94 4c 4b 	call	0x9698	; 0x9698 <Adafruit_SSD1306::ssd1306_command1(unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1010
  // a screen write and one immediately after should cover it.  But if
  // not, if this becomes a problem, yields() might be added in the
  // 32-byte transfer condition below.
  yield();
#endif
  uint16_t count = WIDTH * ((HEIGHT + 7) / 8);
    a086:	2e 81       	ldd	r18, Y+6	; 0x06
    a088:	3f 81       	ldd	r19, Y+7	; 0x07
    a08a:	c9 01       	movw	r24, r18
    a08c:	07 96       	adiw	r24, 0x07	; 7
    a08e:	97 fd       	sbrc	r25, 7
    a090:	07 96       	adiw	r24, 0x07	; 7
    a092:	23 e0       	ldi	r18, 0x03	; 3
    a094:	95 95       	asr	r25
    a096:	87 95       	ror	r24
    a098:	2a 95       	dec	r18
    a09a:	e1 f7       	brne	.-8      	; 0xa094 <Adafruit_SSD1306::display()+0x4c>
    a09c:	2c 81       	ldd	r18, Y+4	; 0x04
    a09e:	3d 81       	ldd	r19, Y+5	; 0x05
    a0a0:	82 9f       	mul	r24, r18
    a0a2:	70 01       	movw	r14, r0
    a0a4:	83 9f       	mul	r24, r19
    a0a6:	f0 0c       	add	r15, r0
    a0a8:	92 9f       	mul	r25, r18
    a0aa:	f0 0c       	add	r15, r0
    a0ac:	11 24       	eor	r1, r1
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1011
  uint8_t *ptr = buffer;
    a0ae:	0f 8d       	ldd	r16, Y+31	; 0x1f
    a0b0:	18 a1       	ldd	r17, Y+32	; 0x20
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1012
  if (wire) { // I2C
    a0b2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a0b4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a0b6:	e0 0e       	add	r14, r16
    a0b8:	f1 1e       	adc	r15, r17
    a0ba:	00 97       	sbiw	r24, 0x00	; 0
    a0bc:	09 f4       	brne	.+2      	; 0xa0c0 <Adafruit_SSD1306::display()+0x78>
    a0be:	65 c0       	rjmp	.+202    	; 0xa18a <Adafruit_SSD1306::display()+0x142>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1013
    wire->beginTransmission(i2caddr);
    a0c0:	69 a1       	ldd	r22, Y+33	; 0x21
    a0c2:	06 2e       	mov	r0, r22
    a0c4:	00 0c       	add	r0, r0
    a0c6:	77 0b       	sbc	r23, r23
    a0c8:	0e 94 29 52 	call	0xa452	; 0xa452 <TwoWire::beginTransmission(int)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1014
    WIRE_WRITE((uint8_t)0x40);
    a0cc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a0ce:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a0d0:	dc 01       	movw	r26, r24
    a0d2:	ed 91       	ld	r30, X+
    a0d4:	fc 91       	ld	r31, X
    a0d6:	01 90       	ld	r0, Z+
    a0d8:	f0 81       	ld	r31, Z
    a0da:	e0 2d       	mov	r30, r0
    a0dc:	60 e4       	ldi	r22, 0x40	; 64
    a0de:	09 95       	icall
    a0e0:	68 01       	movw	r12, r16
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1015
    uint16_t bytesOut = 1;
    a0e2:	01 e0       	ldi	r16, 0x01	; 1
    a0e4:	10 e0       	ldi	r17, 0x00	; 0
    a0e6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a0e8:	9e 8d       	ldd	r25, Y+30	; 0x1e
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1016
    while (count--) {
    a0ea:	ec 14       	cp	r14, r12
    a0ec:	fd 04       	cpc	r15, r13
    a0ee:	c1 f1       	breq	.+112    	; 0xa160 <Adafruit_SSD1306::display()+0x118>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1017
      if (bytesOut >= WIRE_MAX) {
    a0f0:	00 32       	cpi	r16, 0x20	; 32
    a0f2:	11 05       	cpc	r17, r1
    a0f4:	b0 f0       	brcs	.+44     	; 0xa122 <Adafruit_SSD1306::display()+0xda>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1018
        wire->endTransmission();
    a0f6:	0e 94 a4 52 	call	0xa548	; 0xa548 <TwoWire::endTransmission()>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1019
        wire->beginTransmission(i2caddr);
    a0fa:	69 a1       	ldd	r22, Y+33	; 0x21
    a0fc:	06 2e       	mov	r0, r22
    a0fe:	00 0c       	add	r0, r0
    a100:	77 0b       	sbc	r23, r23
    a102:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a104:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a106:	0e 94 29 52 	call	0xa452	; 0xa452 <TwoWire::beginTransmission(int)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1020
        WIRE_WRITE((uint8_t)0x40);
    a10a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a10c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a10e:	dc 01       	movw	r26, r24
    a110:	ed 91       	ld	r30, X+
    a112:	fc 91       	ld	r31, X
    a114:	01 90       	ld	r0, Z+
    a116:	f0 81       	ld	r31, Z
    a118:	e0 2d       	mov	r30, r0
    a11a:	60 e4       	ldi	r22, 0x40	; 64
    a11c:	09 95       	icall
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1021
        bytesOut = 1;
    a11e:	01 e0       	ldi	r16, 0x01	; 1
    a120:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1023
      }
      WIRE_WRITE(*ptr++);
    a122:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a124:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a126:	f6 01       	movw	r30, r12
    a128:	61 91       	ld	r22, Z+
    a12a:	6f 01       	movw	r12, r30
    a12c:	dc 01       	movw	r26, r24
    a12e:	ed 91       	ld	r30, X+
    a130:	fc 91       	ld	r31, X
    a132:	01 90       	ld	r0, Z+
    a134:	f0 81       	ld	r31, Z
    a136:	e0 2d       	mov	r30, r0
    a138:	09 95       	icall
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1024
      bytesOut++;
    a13a:	0f 5f       	subi	r16, 0xFF	; 255
    a13c:	1f 4f       	sbci	r17, 0xFF	; 255
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1016
  uint8_t *ptr = buffer;
  if (wire) { // I2C
    wire->beginTransmission(i2caddr);
    WIRE_WRITE((uint8_t)0x40);
    uint16_t bytesOut = 1;
    while (count--) {
    a13e:	d3 cf       	rjmp	.-90     	; 0xa0e6 <Adafruit_SSD1306::display()+0x9e>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:992 (discriminator 2)
    @note   Drawing operations are not visible until this function is
            called. Call after each graphics command, or after a whole set
            of graphics commands, as best needed by one's own application.
*/
void Adafruit_SSD1306::display(void) {
  TRANSACTION_START
    a140:	8b 8d       	ldd	r24, Y+27	; 0x1b
    a142:	9c 8d       	ldd	r25, Y+28	; 0x1c
    a144:	89 2b       	or	r24, r25
    a146:	21 f0       	breq	.+8      	; 0xa150 <Adafruit_SSD1306::display()+0x108>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:992 (discriminator 3)
    a148:	8e ad       	ldd	r24, Y+62	; 0x3e
    a14a:	9f ad       	ldd	r25, Y+63	; 0x3f
    a14c:	0e 94 d4 4a 	call	0x95a8	; 0x95a8 <SPIClass::beginTransaction(SPISettings)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:992 (discriminator 5)
    a150:	ef a5       	ldd	r30, Y+47	; 0x2f
    a152:	f8 a9       	ldd	r31, Y+48	; 0x30
    a154:	90 81       	ld	r25, Z
    a156:	8c a9       	ldd	r24, Y+52	; 0x34
    a158:	80 95       	com	r24
    a15a:	89 23       	and	r24, r25
    a15c:	80 83       	st	Z, r24
    a15e:	88 cf       	rjmp	.-240    	; 0xa070 <Adafruit_SSD1306::display()+0x28>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1026
        bytesOut = 1;
      }
      WIRE_WRITE(*ptr++);
      bytesOut++;
    }
    wire->endTransmission();
    a160:	0e 94 a4 52 	call	0xa548	; 0xa548 <TwoWire::endTransmission()>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1032
  } else { // SPI
    SSD1306_MODE_DATA
    while (count--)
      SPIwrite(*ptr++);
  }
  TRANSACTION_END
    a164:	8d 8d       	ldd	r24, Y+29	; 0x1d
    a166:	9e 8d       	ldd	r25, Y+30	; 0x1e
    a168:	00 97       	sbiw	r24, 0x00	; 0
    a16a:	09 f4       	brne	.+2      	; 0xa16e <Adafruit_SSD1306::display()+0x126>
    a16c:	43 c0       	rjmp	.+134    	; 0xa1f4 <Adafruit_SSD1306::display()+0x1ac>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1032 (discriminator 1)
    a16e:	49 ad       	ldd	r20, Y+57	; 0x39
    a170:	5a ad       	ldd	r21, Y+58	; 0x3a
    a172:	6b ad       	ldd	r22, Y+59	; 0x3b
    a174:	7c ad       	ldd	r23, Y+60	; 0x3c
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1036 (discriminator 1)
#if defined(ESP8266)
  yield();
#endif
}
    a176:	df 91       	pop	r29
    a178:	cf 91       	pop	r28
    a17a:	1f 91       	pop	r17
    a17c:	0f 91       	pop	r16
    a17e:	ff 90       	pop	r15
    a180:	ef 90       	pop	r14
    a182:	df 90       	pop	r13
    a184:	cf 90       	pop	r12
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1032 (discriminator 1)
  } else { // SPI
    SSD1306_MODE_DATA
    while (count--)
      SPIwrite(*ptr++);
  }
  TRANSACTION_END
    a186:	0c 94 1b 52 	jmp	0xa436	; 0xa436 <TwoWire::setClock(unsigned long)>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1028
      WIRE_WRITE(*ptr++);
      bytesOut++;
    }
    wire->endTransmission();
  } else { // SPI
    SSD1306_MODE_DATA
    a18a:	ed a5       	ldd	r30, Y+45	; 0x2d
    a18c:	fe a5       	ldd	r31, Y+46	; 0x2e
    a18e:	80 81       	ld	r24, Z
    a190:	9b a9       	ldd	r25, Y+51	; 0x33
    a192:	89 2b       	or	r24, r25
    a194:	80 83       	st	Z, r24
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1029
    while (count--)
    a196:	e0 16       	cp	r14, r16
    a198:	f1 06       	cpc	r15, r17
    a19a:	21 f3       	breq	.-56     	; 0xa164 <Adafruit_SSD1306::display()+0x11c>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1030
      SPIwrite(*ptr++);
    a19c:	f8 01       	movw	r30, r16
    a19e:	81 91       	ld	r24, Z+
    a1a0:	8f 01       	movw	r16, r30
_ZN16Adafruit_SSD13068SPIwriteEh():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:359
    @return void
    @note   See HAVE_PORTREG which defines if the method uses a port or bit-bang
   method
*/
inline void Adafruit_SSD1306::SPIwrite(uint8_t d) {
  if (spi) {
    a1a2:	2b 8d       	ldd	r18, Y+27	; 0x1b
    a1a4:	3c 8d       	ldd	r19, Y+28	; 0x1c
    a1a6:	23 2b       	or	r18, r19
    a1a8:	19 f0       	breq	.+6      	; 0xa1b0 <Adafruit_SSD1306::display()+0x168>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:360
    (void)spi->transfer(d);
    a1aa:	0e 94 ee 4a 	call	0x95dc	; 0x95dc <SPIClass::transfer(unsigned char)>
    a1ae:	f3 cf       	rjmp	.-26     	; 0xa196 <Adafruit_SSD1306::display()+0x14e>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:359
    @return void
    @note   See HAVE_PORTREG which defines if the method uses a port or bit-bang
   method
*/
inline void Adafruit_SSD1306::SPIwrite(uint8_t d) {
  if (spi) {
    a1b0:	28 e0       	ldi	r18, 0x08	; 8
    a1b2:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:362
    (void)spi->transfer(d);
  } else {
    for (uint8_t bit = 0x80; bit; bit >>= 1) {
    a1b4:	40 e8       	ldi	r20, 0x80	; 128
    a1b6:	e9 a5       	ldd	r30, Y+41	; 0x29
    a1b8:	fa a5       	ldd	r31, Y+42	; 0x2a
    a1ba:	99 a9       	ldd	r25, Y+49	; 0x31
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:364
#ifdef HAVE_PORTREG
      if (d & bit)
    a1bc:	58 2f       	mov	r21, r24
    a1be:	54 23       	and	r21, r20
    a1c0:	a9 f0       	breq	.+42     	; 0xa1ec <Adafruit_SSD1306::display()+0x1a4>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:365
        *mosiPort |= mosiPinMask;
    a1c2:	50 81       	ld	r21, Z
    a1c4:	95 2b       	or	r25, r21
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:367
      else
        *mosiPort &= ~mosiPinMask;
    a1c6:	90 83       	st	Z, r25
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:368
      *clkPort |= clkPinMask;  // Clock high
    a1c8:	eb a5       	ldd	r30, Y+43	; 0x2b
    a1ca:	fc a5       	ldd	r31, Y+44	; 0x2c
    a1cc:	90 81       	ld	r25, Z
    a1ce:	5a a9       	ldd	r21, Y+50	; 0x32
    a1d0:	95 2b       	or	r25, r21
    a1d2:	90 83       	st	Z, r25
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:369
      *clkPort &= ~clkPinMask; // Clock low
    a1d4:	eb a5       	ldd	r30, Y+43	; 0x2b
    a1d6:	fc a5       	ldd	r31, Y+44	; 0x2c
    a1d8:	50 81       	ld	r21, Z
    a1da:	9a a9       	ldd	r25, Y+50	; 0x32
    a1dc:	90 95       	com	r25
    a1de:	95 23       	and	r25, r21
    a1e0:	90 83       	st	Z, r25
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:362
*/
inline void Adafruit_SSD1306::SPIwrite(uint8_t d) {
  if (spi) {
    (void)spi->transfer(d);
  } else {
    for (uint8_t bit = 0x80; bit; bit >>= 1) {
    a1e2:	46 95       	lsr	r20
    a1e4:	21 50       	subi	r18, 0x01	; 1
    a1e6:	31 09       	sbc	r19, r1
    a1e8:	31 f7       	brne	.-52     	; 0xa1b6 <Adafruit_SSD1306::display()+0x16e>
    a1ea:	d5 cf       	rjmp	.-86     	; 0xa196 <Adafruit_SSD1306::display()+0x14e>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:367
#ifdef HAVE_PORTREG
      if (d & bit)
        *mosiPort |= mosiPinMask;
      else
        *mosiPort &= ~mosiPinMask;
    a1ec:	50 81       	ld	r21, Z
    a1ee:	90 95       	com	r25
    a1f0:	95 23       	and	r25, r21
    a1f2:	e9 cf       	rjmp	.-46     	; 0xa1c6 <Adafruit_SSD1306::display()+0x17e>
_ZN16Adafruit_SSD13067displayEv():
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1032 (discriminator 2)
  } else { // SPI
    SSD1306_MODE_DATA
    while (count--)
      SPIwrite(*ptr++);
  }
  TRANSACTION_END
    a1f4:	ef a5       	ldd	r30, Y+47	; 0x2f
    a1f6:	f8 a9       	ldd	r31, Y+48	; 0x30
    a1f8:	80 81       	ld	r24, Z
    a1fa:	9c a9       	ldd	r25, Y+52	; 0x34
    a1fc:	89 2b       	or	r24, r25
    a1fe:	80 83       	st	Z, r24
    a200:	8b 8d       	ldd	r24, Y+27	; 0x1b
    a202:	9c 8d       	ldd	r25, Y+28	; 0x1c
    a204:	89 2b       	or	r24, r25
    a206:	51 f0       	breq	.+20     	; 0xa21c <Adafruit_SSD1306::display()+0x1d4>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1036 (discriminator 3)
#if defined(ESP8266)
  yield();
#endif
}
    a208:	df 91       	pop	r29
    a20a:	cf 91       	pop	r28
    a20c:	1f 91       	pop	r17
    a20e:	0f 91       	pop	r16
    a210:	ff 90       	pop	r15
    a212:	ef 90       	pop	r14
    a214:	df 90       	pop	r13
    a216:	cf 90       	pop	r12
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1032 (discriminator 3)
  } else { // SPI
    SSD1306_MODE_DATA
    while (count--)
      SPIwrite(*ptr++);
  }
  TRANSACTION_END
    a218:	0c 94 14 4a 	jmp	0x9428	; 0x9428 <SPIClass::endTransaction()>
C:\Users\nyvir\Documents\Arduino\libraries\Adafruit_SSD1306/Adafruit_SSD1306.cpp:1036
#if defined(ESP8266)
  yield();
#endif
}
    a21c:	df 91       	pop	r29
    a21e:	cf 91       	pop	r28
    a220:	1f 91       	pop	r17
    a222:	0f 91       	pop	r16
    a224:	ff 90       	pop	r15
    a226:	ef 90       	pop	r14
    a228:	df 90       	pop	r13
    a22a:	cf 90       	pop	r12
    a22c:	08 95       	ret

0000a22e <SPIClass::begin()>:
_ZN8SPIClass5beginEv():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:27
#ifdef SPI_TRANSACTION_MISMATCH_LED
uint8_t SPIClass::inTransactionFlag = 0;
#endif

void SPIClass::begin()
{
    a22e:	cf 93       	push	r28
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:28
  uint8_t sreg = SREG;
    a230:	cf b7       	in	r28, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:29
  noInterrupts(); // Protect from a scheduler and prevent transactionBegin
    a232:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:30
  if (!initialized) {
    a234:	80 91 a2 09 	lds	r24, 0x09A2	; 0x8009a2 <SPIClass::initialized>
    a238:	81 11       	cpse	r24, r1
    a23a:	27 c0       	rjmp	.+78     	; 0xa28a <SPIClass::begin()+0x5c>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:32
    // Set SS to high so a connected chip will be "deselected" by default
    uint8_t port = digitalPinToPort(SS);
    a23c:	e4 e9       	ldi	r30, 0x94	; 148
    a23e:	f0 e2       	ldi	r31, 0x20	; 32
    a240:	84 91       	lpm	r24, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:33
    uint8_t bit = digitalPinToBitMask(SS);
    a242:	e4 e7       	ldi	r30, 0x74	; 116
    a244:	f0 e2       	ldi	r31, 0x20	; 32
    a246:	94 91       	lpm	r25, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:34
    volatile uint8_t *reg = portModeRegister(port);
    a248:	e8 2f       	mov	r30, r24
    a24a:	f0 e0       	ldi	r31, 0x00	; 0
    a24c:	ee 0f       	add	r30, r30
    a24e:	ff 1f       	adc	r31, r31
    a250:	ec 53       	subi	r30, 0x3C	; 60
    a252:	ff 4d       	sbci	r31, 0xDF	; 223
    a254:	a5 91       	lpm	r26, Z+
    a256:	b4 91       	lpm	r27, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:38

    // if the SS pin is not already configured as an output
    // then set it high (to enable the internal pull-up resistor)
    if(!(*reg & bit)){
    a258:	ec 91       	ld	r30, X
    a25a:	e9 23       	and	r30, r25
    a25c:	21 f4       	brne	.+8      	; 0xa266 <SPIClass::begin()+0x38>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:39
      digitalWrite(SS, HIGH);
    a25e:	61 e0       	ldi	r22, 0x01	; 1
    a260:	84 e0       	ldi	r24, 0x04	; 4
    a262:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:45
    }

    // When the SS pin is set as OUTPUT, it can be used as
    // a general purpose output port (it doesn't influence
    // SPI operations).
    pinMode(SS, OUTPUT);
    a266:	61 e0       	ldi	r22, 0x01	; 1
    a268:	84 e0       	ldi	r24, 0x04	; 4
    a26a:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:50

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUTPUT.
    SPCR |= _BV(MSTR);
    a26e:	8c b5       	in	r24, 0x2c	; 44
    a270:	80 61       	ori	r24, 0x10	; 16
    a272:	8c bd       	out	0x2c, r24	; 44
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:51
    SPCR |= _BV(SPE);
    a274:	8c b5       	in	r24, 0x2c	; 44
    a276:	80 64       	ori	r24, 0x40	; 64
    a278:	8c bd       	out	0x2c, r24	; 44
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:59
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    pinMode(SCK, OUTPUT);
    a27a:	61 e0       	ldi	r22, 0x01	; 1
    a27c:	87 e0       	ldi	r24, 0x07	; 7
    a27e:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:60
    pinMode(MOSI, OUTPUT);
    a282:	61 e0       	ldi	r22, 0x01	; 1
    a284:	85 e0       	ldi	r24, 0x05	; 5
    a286:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:62
  }
  initialized++; // reference count
    a28a:	80 91 a2 09 	lds	r24, 0x09A2	; 0x8009a2 <SPIClass::initialized>
    a28e:	8f 5f       	subi	r24, 0xFF	; 255
    a290:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <SPIClass::initialized>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:63
  SREG = sreg;
    a294:	cf bf       	out	0x3f, r28	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SPI\src/SPI.cpp:64
}
    a296:	cf 91       	pop	r28
    a298:	08 95       	ret

0000a29a <TwoWire::available()>:
_ZN7TwoWire9availableEv():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src/Wire.cpp:329

// sets function called on slave read
void TwoWire::onRequest( void (*function)(void) )
{
  user_onRequest = function;
}
    a29a:	80 91 d7 09 	lds	r24, 0x09D7	; 0x8009d7 <TwoWire::rxBufferLength>
    a29e:	90 91 d8 09 	lds	r25, 0x09D8	; 0x8009d8 <TwoWire::rxBufferIndex>
    a2a2:	89 1b       	sub	r24, r25
    a2a4:	99 0b       	sbc	r25, r25
    a2a6:	08 95       	ret

0000a2a8 <TwoWire::read()>:
_ZN7TwoWire4readEv():
    a2a8:	90 91 d8 09 	lds	r25, 0x09D8	; 0x8009d8 <TwoWire::rxBufferIndex>
    a2ac:	80 91 d7 09 	lds	r24, 0x09D7	; 0x8009d7 <TwoWire::rxBufferLength>
    a2b0:	2f ef       	ldi	r18, 0xFF	; 255
    a2b2:	3f ef       	ldi	r19, 0xFF	; 255
    a2b4:	98 17       	cp	r25, r24
    a2b6:	48 f4       	brcc	.+18     	; 0xa2ca <TwoWire::read()+0x22>
    a2b8:	e9 2f       	mov	r30, r25
    a2ba:	f0 e0       	ldi	r31, 0x00	; 0
    a2bc:	e7 52       	subi	r30, 0x27	; 39
    a2be:	f6 4f       	sbci	r31, 0xF6	; 246
    a2c0:	20 81       	ld	r18, Z
    a2c2:	30 e0       	ldi	r19, 0x00	; 0
    a2c4:	9f 5f       	subi	r25, 0xFF	; 255
    a2c6:	90 93 d8 09 	sts	0x09D8, r25	; 0x8009d8 <TwoWire::rxBufferIndex>
    a2ca:	c9 01       	movw	r24, r18
    a2cc:	08 95       	ret

0000a2ce <TwoWire::peek()>:
_ZN7TwoWire4peekEv():
    a2ce:	e0 91 d8 09 	lds	r30, 0x09D8	; 0x8009d8 <TwoWire::rxBufferIndex>
    a2d2:	80 91 d7 09 	lds	r24, 0x09D7	; 0x8009d7 <TwoWire::rxBufferLength>
    a2d6:	e8 17       	cp	r30, r24
    a2d8:	30 f4       	brcc	.+12     	; 0xa2e6 <TwoWire::peek()+0x18>
    a2da:	f0 e0       	ldi	r31, 0x00	; 0
    a2dc:	e7 52       	subi	r30, 0x27	; 39
    a2de:	f6 4f       	sbci	r31, 0xF6	; 246
    a2e0:	80 81       	ld	r24, Z
    a2e2:	90 e0       	ldi	r25, 0x00	; 0
    a2e4:	08 95       	ret
    a2e6:	8f ef       	ldi	r24, 0xFF	; 255
    a2e8:	9f ef       	ldi	r25, 0xFF	; 255
    a2ea:	08 95       	ret

0000a2ec <TwoWire::flush()>:
_ZN7TwoWire5flushEv():
    a2ec:	08 95       	ret

0000a2ee <TwoWire::onReceiveService(unsigned char*, int)>:
_ZN7TwoWire16onReceiveServiceEPhi():
    a2ee:	cf 93       	push	r28
    a2f0:	df 93       	push	r29
    a2f2:	ec 01       	movw	r28, r24
    a2f4:	e0 91 af 09 	lds	r30, 0x09AF	; 0x8009af <TwoWire::user_onReceive>
    a2f8:	f0 91 b0 09 	lds	r31, 0x09B0	; 0x8009b0 <TwoWire::user_onReceive+0x1>
    a2fc:	30 97       	sbiw	r30, 0x00	; 0
    a2fe:	f1 f0       	breq	.+60     	; 0xa33c <TwoWire::onReceiveService(unsigned char*, int)+0x4e>
    a300:	90 91 d8 09 	lds	r25, 0x09D8	; 0x8009d8 <TwoWire::rxBufferIndex>
    a304:	80 91 d7 09 	lds	r24, 0x09D7	; 0x8009d7 <TwoWire::rxBufferLength>
    a308:	98 17       	cp	r25, r24
    a30a:	c0 f0       	brcs	.+48     	; 0xa33c <TwoWire::onReceiveService(unsigned char*, int)+0x4e>
    a30c:	90 e0       	ldi	r25, 0x00	; 0
    a30e:	29 2f       	mov	r18, r25
    a310:	30 e0       	ldi	r19, 0x00	; 0
    a312:	26 17       	cp	r18, r22
    a314:	37 07       	cpc	r19, r23
    a316:	54 f4       	brge	.+20     	; 0xa32c <TwoWire::onReceiveService(unsigned char*, int)+0x3e>
    a318:	de 01       	movw	r26, r28
    a31a:	a2 0f       	add	r26, r18
    a31c:	b3 1f       	adc	r27, r19
    a31e:	4c 91       	ld	r20, X
    a320:	27 52       	subi	r18, 0x27	; 39
    a322:	36 4f       	sbci	r19, 0xF6	; 246
    a324:	d9 01       	movw	r26, r18
    a326:	4c 93       	st	X, r20
    a328:	9f 5f       	subi	r25, 0xFF	; 255
    a32a:	f1 cf       	rjmp	.-30     	; 0xa30e <TwoWire::onReceiveService(unsigned char*, int)+0x20>
    a32c:	10 92 d8 09 	sts	0x09D8, r1	; 0x8009d8 <TwoWire::rxBufferIndex>
    a330:	60 93 d7 09 	sts	0x09D7, r22	; 0x8009d7 <TwoWire::rxBufferLength>
    a334:	cb 01       	movw	r24, r22
    a336:	df 91       	pop	r29
    a338:	cf 91       	pop	r28
    a33a:	09 94       	ijmp
    a33c:	df 91       	pop	r29
    a33e:	cf 91       	pop	r28
    a340:	08 95       	ret

0000a342 <TwoWire::onRequestService()>:
_ZN7TwoWire16onRequestServiceEv():
    a342:	e0 91 b1 09 	lds	r30, 0x09B1	; 0x8009b1 <TwoWire::user_onRequest>
    a346:	f0 91 b2 09 	lds	r31, 0x09B2	; 0x8009b2 <TwoWire::user_onRequest+0x1>
    a34a:	30 97       	sbiw	r30, 0x00	; 0
    a34c:	29 f0       	breq	.+10     	; 0xa358 <TwoWire::onRequestService()+0x16>
    a34e:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <TwoWire::txBufferIndex>
    a352:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <TwoWire::txBufferLength>
    a356:	09 94       	ijmp
    a358:	08 95       	ret

0000a35a <TwoWire::write(unsigned char)>:
_ZN7TwoWire5writeEh():
    a35a:	cf 93       	push	r28
    a35c:	df 93       	push	r29
    a35e:	1f 92       	push	r1
    a360:	cd b7       	in	r28, 0x3d	; 61
    a362:	de b7       	in	r29, 0x3e	; 62
    a364:	69 83       	std	Y+1, r22	; 0x01
    a366:	20 91 b3 09 	lds	r18, 0x09B3	; 0x8009b3 <TwoWire::transmitting>
    a36a:	22 23       	and	r18, r18
    a36c:	f9 f0       	breq	.+62     	; 0xa3ac <TwoWire::write(unsigned char)+0x52>
    a36e:	20 91 b4 09 	lds	r18, 0x09B4	; 0x8009b4 <TwoWire::txBufferLength>
    a372:	20 32       	cpi	r18, 0x20	; 32
    a374:	58 f0       	brcs	.+22     	; 0xa38c <TwoWire::write(unsigned char)+0x32>
_ZN5Print13setWriteErrorEi():
    a376:	21 e0       	ldi	r18, 0x01	; 1
    a378:	30 e0       	ldi	r19, 0x00	; 0
    a37a:	fc 01       	movw	r30, r24
    a37c:	33 83       	std	Z+3, r19	; 0x03
    a37e:	22 83       	std	Z+2, r18	; 0x02
_ZN7TwoWire5writeEh():
    a380:	90 e0       	ldi	r25, 0x00	; 0
    a382:	80 e0       	ldi	r24, 0x00	; 0
    a384:	0f 90       	pop	r0
    a386:	df 91       	pop	r29
    a388:	cf 91       	pop	r28
    a38a:	08 95       	ret
    a38c:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <TwoWire::txBufferIndex>
    a390:	e8 2f       	mov	r30, r24
    a392:	f0 e0       	ldi	r31, 0x00	; 0
    a394:	ea 54       	subi	r30, 0x4A	; 74
    a396:	f6 4f       	sbci	r31, 0xF6	; 246
    a398:	99 81       	ldd	r25, Y+1	; 0x01
    a39a:	90 83       	st	Z, r25
    a39c:	8f 5f       	subi	r24, 0xFF	; 255
    a39e:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <TwoWire::txBufferIndex>
    a3a2:	80 93 b4 09 	sts	0x09B4, r24	; 0x8009b4 <TwoWire::txBufferLength>
    a3a6:	81 e0       	ldi	r24, 0x01	; 1
    a3a8:	90 e0       	ldi	r25, 0x00	; 0
    a3aa:	ec cf       	rjmp	.-40     	; 0xa384 <TwoWire::write(unsigned char)+0x2a>
    a3ac:	61 e0       	ldi	r22, 0x01	; 1
    a3ae:	ce 01       	movw	r24, r28
    a3b0:	01 96       	adiw	r24, 0x01	; 1
    a3b2:	0e 94 88 53 	call	0xa710	; 0xa710 <twi_transmit>
    a3b6:	f7 cf       	rjmp	.-18     	; 0xa3a6 <TwoWire::write(unsigned char)+0x4c>

0000a3b8 <TwoWire::write(unsigned char const*, unsigned int)>:
_ZN7TwoWire5writeEPKhj():
    a3b8:	cf 92       	push	r12
    a3ba:	df 92       	push	r13
    a3bc:	ef 92       	push	r14
    a3be:	ff 92       	push	r15
    a3c0:	0f 93       	push	r16
    a3c2:	1f 93       	push	r17
    a3c4:	cf 93       	push	r28
    a3c6:	df 93       	push	r29
    a3c8:	7c 01       	movw	r14, r24
    a3ca:	cb 01       	movw	r24, r22
    a3cc:	8a 01       	movw	r16, r20
    a3ce:	20 91 b3 09 	lds	r18, 0x09B3	; 0x8009b3 <TwoWire::transmitting>
    a3d2:	22 23       	and	r18, r18
    a3d4:	89 f0       	breq	.+34     	; 0xa3f8 <TwoWire::write(unsigned char const*, unsigned int)+0x40>
    a3d6:	eb 01       	movw	r28, r22
    a3d8:	6b 01       	movw	r12, r22
    a3da:	c4 0e       	add	r12, r20
    a3dc:	d5 1e       	adc	r13, r21
    a3de:	cc 15       	cp	r28, r12
    a3e0:	dd 05       	cpc	r29, r13
    a3e2:	69 f0       	breq	.+26     	; 0xa3fe <TwoWire::write(unsigned char const*, unsigned int)+0x46>
    a3e4:	69 91       	ld	r22, Y+
    a3e6:	d7 01       	movw	r26, r14
    a3e8:	ed 91       	ld	r30, X+
    a3ea:	fc 91       	ld	r31, X
    a3ec:	01 90       	ld	r0, Z+
    a3ee:	f0 81       	ld	r31, Z
    a3f0:	e0 2d       	mov	r30, r0
    a3f2:	c7 01       	movw	r24, r14
    a3f4:	09 95       	icall
    a3f6:	f3 cf       	rjmp	.-26     	; 0xa3de <TwoWire::write(unsigned char const*, unsigned int)+0x26>
    a3f8:	64 2f       	mov	r22, r20
    a3fa:	0e 94 88 53 	call	0xa710	; 0xa710 <twi_transmit>
    a3fe:	c8 01       	movw	r24, r16
    a400:	df 91       	pop	r29
    a402:	cf 91       	pop	r28
    a404:	1f 91       	pop	r17
    a406:	0f 91       	pop	r16
    a408:	ff 90       	pop	r15
    a40a:	ef 90       	pop	r14
    a40c:	df 90       	pop	r13
    a40e:	cf 90       	pop	r12
    a410:	08 95       	ret

0000a412 <TwoWire::begin()>:
_ZN7TwoWire5beginEv():
    a412:	10 92 d8 09 	sts	0x09D8, r1	; 0x8009d8 <TwoWire::rxBufferIndex>
    a416:	10 92 d7 09 	sts	0x09D7, r1	; 0x8009d7 <TwoWire::rxBufferLength>
    a41a:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <TwoWire::txBufferIndex>
    a41e:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <TwoWire::txBufferLength>
    a422:	0e 94 b8 52 	call	0xa570	; 0xa570 <twi_init>
    a426:	81 ea       	ldi	r24, 0xA1	; 161
    a428:	91 e5       	ldi	r25, 0x51	; 81
    a42a:	0e 94 b4 53 	call	0xa768	; 0xa768 <twi_attachSlaveTxEvent>
    a42e:	87 e7       	ldi	r24, 0x77	; 119
    a430:	91 e5       	ldi	r25, 0x51	; 81
    a432:	0c 94 af 53 	jmp	0xa75e	; 0xa75e <twi_attachSlaveRxEvent>

0000a436 <TwoWire::setClock(unsigned long)>:
_ZN7TwoWire8setClockEm():
    a436:	cb 01       	movw	r24, r22
    a438:	ba 01       	movw	r22, r20
    a43a:	0c 94 d6 52 	jmp	0xa5ac	; 0xa5ac <twi_setFrequency>

0000a43e <TwoWire::beginTransmission(unsigned char)>:
_ZN7TwoWire17beginTransmissionEh():
    a43e:	81 e0       	ldi	r24, 0x01	; 1
    a440:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <TwoWire::transmitting>
    a444:	60 93 d6 09 	sts	0x09D6, r22	; 0x8009d6 <TwoWire::txAddress>
    a448:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <TwoWire::txBufferIndex>
    a44c:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <TwoWire::txBufferLength>
    a450:	08 95       	ret

0000a452 <TwoWire::beginTransmission(int)>:
_ZN7TwoWire17beginTransmissionEi():
    a452:	0c 94 1f 52 	jmp	0xa43e	; 0xa43e <TwoWire::beginTransmission(unsigned char)>

0000a456 <TwoWire::endTransmission(unsigned char)>:
_ZN7TwoWire15endTransmissionEh():
    a456:	0f 93       	push	r16
    a458:	06 2f       	mov	r16, r22
    a45a:	21 e0       	ldi	r18, 0x01	; 1
    a45c:	40 91 b4 09 	lds	r20, 0x09B4	; 0x8009b4 <TwoWire::txBufferLength>
    a460:	66 eb       	ldi	r22, 0xB6	; 182
    a462:	79 e0       	ldi	r23, 0x09	; 9
    a464:	80 91 d6 09 	lds	r24, 0x09D6	; 0x8009d6 <TwoWire::txAddress>
    a468:	0e 94 31 53 	call	0xa662	; 0xa662 <twi_writeTo>
    a46c:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <TwoWire::txBufferIndex>
    a470:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <TwoWire::txBufferLength>
    a474:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <TwoWire::transmitting>
    a478:	0f 91       	pop	r16
    a47a:	08 95       	ret

0000a47c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)>:
_ZN7TwoWire11requestFromEhhmhh():
    a47c:	4f 92       	push	r4
    a47e:	5f 92       	push	r5
    a480:	6f 92       	push	r6
    a482:	7f 92       	push	r7
    a484:	af 92       	push	r10
    a486:	bf 92       	push	r11
    a488:	cf 92       	push	r12
    a48a:	ef 92       	push	r14
    a48c:	ff 92       	push	r15
    a48e:	0f 93       	push	r16
    a490:	1f 93       	push	r17
    a492:	cf 93       	push	r28
    a494:	df 93       	push	r29
    a496:	5c 01       	movw	r10, r24
    a498:	f6 2e       	mov	r15, r22
    a49a:	d4 2f       	mov	r29, r20
    a49c:	28 01       	movw	r4, r16
    a49e:	39 01       	movw	r6, r18
    a4a0:	ee 20       	and	r14, r14
    a4a2:	19 f1       	breq	.+70     	; 0xa4ea <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x6e>
    a4a4:	0e 94 1f 52 	call	0xa43e	; 0xa43e <TwoWire::beginTransmission(unsigned char)>
    a4a8:	ce 2d       	mov	r28, r14
    a4aa:	c4 30       	cpi	r28, 0x04	; 4
    a4ac:	08 f0       	brcs	.+2      	; 0xa4b0 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x34>
    a4ae:	c3 e0       	ldi	r28, 0x03	; 3
    a4b0:	c1 50       	subi	r28, 0x01	; 1
    a4b2:	b8 f0       	brcs	.+46     	; 0xa4e2 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x66>
    a4b4:	28 e0       	ldi	r18, 0x08	; 8
    a4b6:	c2 9f       	mul	r28, r18
    a4b8:	c0 01       	movw	r24, r0
    a4ba:	11 24       	eor	r1, r1
    a4bc:	a3 01       	movw	r20, r6
    a4be:	92 01       	movw	r18, r4
    a4c0:	04 c0       	rjmp	.+8      	; 0xa4ca <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x4e>
    a4c2:	56 95       	lsr	r21
    a4c4:	47 95       	ror	r20
    a4c6:	37 95       	ror	r19
    a4c8:	27 95       	ror	r18
    a4ca:	8a 95       	dec	r24
    a4cc:	d2 f7       	brpl	.-12     	; 0xa4c2 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x46>
    a4ce:	b9 01       	movw	r22, r18
    a4d0:	d5 01       	movw	r26, r10
    a4d2:	ed 91       	ld	r30, X+
    a4d4:	fc 91       	ld	r31, X
    a4d6:	01 90       	ld	r0, Z+
    a4d8:	f0 81       	ld	r31, Z
    a4da:	e0 2d       	mov	r30, r0
    a4dc:	c5 01       	movw	r24, r10
    a4de:	09 95       	icall
    a4e0:	e7 cf       	rjmp	.-50     	; 0xa4b0 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x34>
    a4e2:	60 e0       	ldi	r22, 0x00	; 0
    a4e4:	c5 01       	movw	r24, r10
    a4e6:	0e 94 2b 52 	call	0xa456	; 0xa456 <TwoWire::endTransmission(unsigned char)>
    a4ea:	4d 2f       	mov	r20, r29
    a4ec:	d1 32       	cpi	r29, 0x21	; 33
    a4ee:	08 f0       	brcs	.+2      	; 0xa4f2 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)+0x76>
    a4f0:	40 e2       	ldi	r20, 0x20	; 32
    a4f2:	2c 2d       	mov	r18, r12
    a4f4:	69 ed       	ldi	r22, 0xD9	; 217
    a4f6:	79 e0       	ldi	r23, 0x09	; 9
    a4f8:	8f 2d       	mov	r24, r15
    a4fa:	0e 94 e9 52 	call	0xa5d2	; 0xa5d2 <twi_readFrom>
    a4fe:	10 92 d8 09 	sts	0x09D8, r1	; 0x8009d8 <TwoWire::rxBufferIndex>
    a502:	80 93 d7 09 	sts	0x09D7, r24	; 0x8009d7 <TwoWire::rxBufferLength>
    a506:	df 91       	pop	r29
    a508:	cf 91       	pop	r28
    a50a:	1f 91       	pop	r17
    a50c:	0f 91       	pop	r16
    a50e:	ff 90       	pop	r15
    a510:	ef 90       	pop	r14
    a512:	cf 90       	pop	r12
    a514:	bf 90       	pop	r11
    a516:	af 90       	pop	r10
    a518:	7f 90       	pop	r7
    a51a:	6f 90       	pop	r6
    a51c:	5f 90       	pop	r5
    a51e:	4f 90       	pop	r4
    a520:	08 95       	ret

0000a522 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)>:
_ZN7TwoWire11requestFromEhhh():
    a522:	cf 92       	push	r12
    a524:	ef 92       	push	r14
    a526:	0f 93       	push	r16
    a528:	1f 93       	push	r17
    a52a:	c2 2e       	mov	r12, r18
    a52c:	e1 2c       	mov	r14, r1
    a52e:	00 e0       	ldi	r16, 0x00	; 0
    a530:	10 e0       	ldi	r17, 0x00	; 0
    a532:	98 01       	movw	r18, r16
    a534:	0e 94 3e 52 	call	0xa47c	; 0xa47c <TwoWire::requestFrom(unsigned char, unsigned char, unsigned long, unsigned char, unsigned char)>
    a538:	1f 91       	pop	r17
    a53a:	0f 91       	pop	r16
    a53c:	ef 90       	pop	r14
    a53e:	cf 90       	pop	r12
    a540:	08 95       	ret

0000a542 <TwoWire::requestFrom(unsigned char, unsigned char)>:
_ZN7TwoWire11requestFromEhh():
    a542:	21 e0       	ldi	r18, 0x01	; 1
    a544:	0c 94 91 52 	jmp	0xa522	; 0xa522 <TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)>

0000a548 <TwoWire::endTransmission()>:
_ZN7TwoWire15endTransmissionEv():
    a548:	61 e0       	ldi	r22, 0x01	; 1
    a54a:	0c 94 2b 52 	jmp	0xa456	; 0xa456 <TwoWire::endTransmission(unsigned char)>

0000a54e <_GLOBAL__sub_I__ZN7TwoWire8rxBufferE>:
_ZN5PrintC4Ev():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.h:46
    size_t printNumber(unsigned long, uint8_t);
    size_t printFloat(double, uint8_t);
  protected:
    void setWriteError(int err = 1) { write_error = err; }
  public:
    Print() : write_error(0) {}
    a54e:	e3 ea       	ldi	r30, 0xA3	; 163
    a550:	f9 e0       	ldi	r31, 0x09	; 9
    a552:	13 82       	std	Z+3, r1	; 0x03
    a554:	12 82       	std	Z+2, r1	; 0x02
_ZN6StreamC4Ev():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Stream.h:63
  public:
    virtual int available() = 0;
    virtual int read() = 0;
    virtual int peek() = 0;

    Stream() {_timeout=1000;}
    a556:	88 ee       	ldi	r24, 0xE8	; 232
    a558:	93 e0       	ldi	r25, 0x03	; 3
    a55a:	a0 e0       	ldi	r26, 0x00	; 0
    a55c:	b0 e0       	ldi	r27, 0x00	; 0
    a55e:	84 83       	std	Z+4, r24	; 0x04
    a560:	95 83       	std	Z+5, r25	; 0x05
    a562:	a6 83       	std	Z+6, r26	; 0x06
    a564:	b7 83       	std	Z+7, r27	; 0x07
_ZN7TwoWireC4Ev():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src/Wire.cpp:52
void (*TwoWire::user_onRequest)(void);
void (*TwoWire::user_onReceive)(int);

// Constructors ////////////////////////////////////////////////////////////////

TwoWire::TwoWire()
    a566:	8b e6       	ldi	r24, 0x6B	; 107
    a568:	92 e0       	ldi	r25, 0x02	; 2
    a56a:	91 83       	std	Z+1, r25	; 0x01
    a56c:	80 83       	st	Z, r24
_GLOBAL__sub_I__ZN7TwoWire8rxBufferE():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src/Wire.cpp:333
  user_onRequest = function;
}

// Preinstantiate Objects //////////////////////////////////////////////////////

TwoWire Wire = TwoWire();
    a56e:	08 95       	ret

0000a570 <twi_init>:
twi_init():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:359
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    a570:	10 92 66 0a 	sts	0x0A66, r1	; 0x800a66 <twi_state>
    a574:	81 e0       	ldi	r24, 0x01	; 1
    a576:	80 93 64 0a 	sts	0x0A64, r24	; 0x800a64 <twi_sendStop>
    a57a:	10 92 63 0a 	sts	0x0A63, r1	; 0x800a63 <twi_inRepStart>
    a57e:	61 e0       	ldi	r22, 0x01	; 1
    a580:	81 e1       	ldi	r24, 0x11	; 17
    a582:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
    a586:	61 e0       	ldi	r22, 0x01	; 1
    a588:	80 e1       	ldi	r24, 0x10	; 16
    a58a:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
    a58e:	e9 eb       	ldi	r30, 0xB9	; 185
    a590:	f0 e0       	ldi	r31, 0x00	; 0
    a592:	80 81       	ld	r24, Z
    a594:	8e 7f       	andi	r24, 0xFE	; 254
    a596:	80 83       	st	Z, r24
    a598:	80 81       	ld	r24, Z
    a59a:	8d 7f       	andi	r24, 0xFD	; 253
    a59c:	80 83       	st	Z, r24
    a59e:	88 e4       	ldi	r24, 0x48	; 72
    a5a0:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    a5a4:	85 e4       	ldi	r24, 0x45	; 69
    a5a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    a5aa:	08 95       	ret

0000a5ac <twi_setFrequency>:
twi_setFrequency():
    a5ac:	9b 01       	movw	r18, r22
    a5ae:	ac 01       	movw	r20, r24
    a5b0:	60 e0       	ldi	r22, 0x00	; 0
    a5b2:	74 e2       	ldi	r23, 0x24	; 36
    a5b4:	84 ef       	ldi	r24, 0xF4	; 244
    a5b6:	90 e0       	ldi	r25, 0x00	; 0
    a5b8:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    a5bc:	20 51       	subi	r18, 0x10	; 16
    a5be:	31 09       	sbc	r19, r1
    a5c0:	41 09       	sbc	r20, r1
    a5c2:	51 09       	sbc	r21, r1
    a5c4:	56 95       	lsr	r21
    a5c6:	47 95       	ror	r20
    a5c8:	37 95       	ror	r19
    a5ca:	27 95       	ror	r18
    a5cc:	20 93 b8 00 	sts	0x00B8, r18	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    a5d0:	08 95       	ret

0000a5d2 <twi_readFrom>:
twi_readFrom():
    a5d2:	41 32       	cpi	r20, 0x21	; 33
    a5d4:	08 f0       	brcs	.+2      	; 0xa5d8 <twi_readFrom+0x6>
    a5d6:	43 c0       	rjmp	.+134    	; 0xa65e <twi_readFrom+0x8c>
    a5d8:	90 91 66 0a 	lds	r25, 0x0A66	; 0x800a66 <twi_state>
    a5dc:	91 11       	cpse	r25, r1
    a5de:	fc cf       	rjmp	.-8      	; 0xa5d8 <twi_readFrom+0x6>
    a5e0:	91 e0       	ldi	r25, 0x01	; 1
    a5e2:	90 93 66 0a 	sts	0x0A66, r25	; 0x800a66 <twi_state>
    a5e6:	20 93 64 0a 	sts	0x0A64, r18	; 0x800a64 <twi_sendStop>
    a5ea:	2f ef       	ldi	r18, 0xFF	; 255
    a5ec:	20 93 f9 09 	sts	0x09F9, r18	; 0x8009f9 <twi_error>
    a5f0:	10 92 3e 0a 	sts	0x0A3E, r1	; 0x800a3e <twi_masterBufferIndex>
    a5f4:	24 0f       	add	r18, r20
    a5f6:	20 93 3d 0a 	sts	0x0A3D, r18	; 0x800a3d <twi_masterBufferLength>
    a5fa:	90 93 65 0a 	sts	0x0A65, r25	; 0x800a65 <twi_slarw>
    a5fe:	90 91 65 0a 	lds	r25, 0x0A65	; 0x800a65 <twi_slarw>
    a602:	88 0f       	add	r24, r24
    a604:	89 2b       	or	r24, r25
    a606:	80 93 65 0a 	sts	0x0A65, r24	; 0x800a65 <twi_slarw>
    a60a:	80 91 63 0a 	lds	r24, 0x0A63	; 0x800a63 <twi_inRepStart>
    a60e:	81 30       	cpi	r24, 0x01	; 1
    a610:	09 f5       	brne	.+66     	; 0xa654 <twi_readFrom+0x82>
    a612:	10 92 63 0a 	sts	0x0A63, r1	; 0x800a63 <twi_inRepStart>
    a616:	80 91 65 0a 	lds	r24, 0x0A65	; 0x800a65 <twi_slarw>
    a61a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    a61e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    a622:	83 fd       	sbrc	r24, 3
    a624:	f8 cf       	rjmp	.-16     	; 0xa616 <twi_readFrom+0x44>
    a626:	85 ec       	ldi	r24, 0xC5	; 197
    a628:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    a62c:	80 91 66 0a 	lds	r24, 0x0A66	; 0x800a66 <twi_state>
    a630:	81 30       	cpi	r24, 0x01	; 1
    a632:	e1 f3       	breq	.-8      	; 0xa62c <twi_readFrom+0x5a>
    a634:	80 91 3e 0a 	lds	r24, 0x0A3E	; 0x800a3e <twi_masterBufferIndex>
    a638:	84 17       	cp	r24, r20
    a63a:	10 f4       	brcc	.+4      	; 0xa640 <twi_readFrom+0x6e>
    a63c:	40 91 3e 0a 	lds	r20, 0x0A3E	; 0x800a3e <twi_masterBufferIndex>
    a640:	af e3       	ldi	r26, 0x3F	; 63
    a642:	ba e0       	ldi	r27, 0x0A	; 10
    a644:	96 2f       	mov	r25, r22
    a646:	fb 01       	movw	r30, r22
    a648:	8e 2f       	mov	r24, r30
    a64a:	89 1b       	sub	r24, r25
    a64c:	84 17       	cp	r24, r20
    a64e:	20 f0       	brcs	.+8      	; 0xa658 <twi_readFrom+0x86>
    a650:	84 2f       	mov	r24, r20
    a652:	08 95       	ret
    a654:	85 ee       	ldi	r24, 0xE5	; 229
    a656:	e8 cf       	rjmp	.-48     	; 0xa628 <twi_readFrom+0x56>
    a658:	8d 91       	ld	r24, X+
    a65a:	81 93       	st	Z+, r24
    a65c:	f5 cf       	rjmp	.-22     	; 0xa648 <twi_readFrom+0x76>
    a65e:	40 e0       	ldi	r20, 0x00	; 0
    a660:	f7 cf       	rjmp	.-18     	; 0xa650 <twi_readFrom+0x7e>

0000a662 <twi_writeTo>:
twi_writeTo():
    a662:	0f 93       	push	r16
    a664:	41 32       	cpi	r20, 0x21	; 33
    a666:	08 f0       	brcs	.+2      	; 0xa66a <twi_writeTo+0x8>
    a668:	4b c0       	rjmp	.+150    	; 0xa700 <twi_writeTo+0x9e>
    a66a:	90 91 66 0a 	lds	r25, 0x0A66	; 0x800a66 <twi_state>
    a66e:	91 11       	cpse	r25, r1
    a670:	fc cf       	rjmp	.-8      	; 0xa66a <twi_writeTo+0x8>
    a672:	92 e0       	ldi	r25, 0x02	; 2
    a674:	90 93 66 0a 	sts	0x0A66, r25	; 0x800a66 <twi_state>
    a678:	00 93 64 0a 	sts	0x0A64, r16	; 0x800a64 <twi_sendStop>
    a67c:	9f ef       	ldi	r25, 0xFF	; 255
    a67e:	90 93 f9 09 	sts	0x09F9, r25	; 0x8009f9 <twi_error>
    a682:	10 92 3e 0a 	sts	0x0A3E, r1	; 0x800a3e <twi_masterBufferIndex>
    a686:	40 93 3d 0a 	sts	0x0A3D, r20	; 0x800a3d <twi_masterBufferLength>
    a68a:	36 2f       	mov	r19, r22
    a68c:	af e3       	ldi	r26, 0x3F	; 63
    a68e:	ba e0       	ldi	r27, 0x0A	; 10
    a690:	fb 01       	movw	r30, r22
    a692:	9e 2f       	mov	r25, r30
    a694:	93 1b       	sub	r25, r19
    a696:	94 17       	cp	r25, r20
    a698:	70 f1       	brcs	.+92     	; 0xa6f6 <twi_writeTo+0x94>
    a69a:	10 92 65 0a 	sts	0x0A65, r1	; 0x800a65 <twi_slarw>
    a69e:	90 91 65 0a 	lds	r25, 0x0A65	; 0x800a65 <twi_slarw>
    a6a2:	88 0f       	add	r24, r24
    a6a4:	89 2b       	or	r24, r25
    a6a6:	80 93 65 0a 	sts	0x0A65, r24	; 0x800a65 <twi_slarw>
    a6aa:	80 91 63 0a 	lds	r24, 0x0A63	; 0x800a63 <twi_inRepStart>
    a6ae:	81 30       	cpi	r24, 0x01	; 1
    a6b0:	29 f5       	brne	.+74     	; 0xa6fc <twi_writeTo+0x9a>
    a6b2:	10 92 63 0a 	sts	0x0A63, r1	; 0x800a63 <twi_inRepStart>
    a6b6:	80 91 65 0a 	lds	r24, 0x0A65	; 0x800a65 <twi_slarw>
    a6ba:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    a6be:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    a6c2:	83 fd       	sbrc	r24, 3
    a6c4:	f8 cf       	rjmp	.-16     	; 0xa6b6 <twi_writeTo+0x54>
    a6c6:	85 ec       	ldi	r24, 0xC5	; 197
    a6c8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    a6cc:	22 23       	and	r18, r18
    a6ce:	21 f0       	breq	.+8      	; 0xa6d8 <twi_writeTo+0x76>
    a6d0:	80 91 66 0a 	lds	r24, 0x0A66	; 0x800a66 <twi_state>
    a6d4:	82 30       	cpi	r24, 0x02	; 2
    a6d6:	d1 f3       	breq	.-12     	; 0xa6cc <twi_writeTo+0x6a>
    a6d8:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <twi_error>
    a6dc:	8f 3f       	cpi	r24, 0xFF	; 255
    a6de:	91 f0       	breq	.+36     	; 0xa704 <twi_writeTo+0xa2>
    a6e0:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <twi_error>
    a6e4:	80 32       	cpi	r24, 0x20	; 32
    a6e6:	81 f0       	breq	.+32     	; 0xa708 <twi_writeTo+0xa6>
    a6e8:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <twi_error>
    a6ec:	80 33       	cpi	r24, 0x30	; 48
    a6ee:	71 f0       	breq	.+28     	; 0xa70c <twi_writeTo+0xaa>
    a6f0:	84 e0       	ldi	r24, 0x04	; 4
    a6f2:	0f 91       	pop	r16
    a6f4:	08 95       	ret
    a6f6:	91 91       	ld	r25, Z+
    a6f8:	9d 93       	st	X+, r25
    a6fa:	cb cf       	rjmp	.-106    	; 0xa692 <twi_writeTo+0x30>
    a6fc:	85 ee       	ldi	r24, 0xE5	; 229
    a6fe:	e4 cf       	rjmp	.-56     	; 0xa6c8 <twi_writeTo+0x66>
    a700:	81 e0       	ldi	r24, 0x01	; 1
    a702:	f7 cf       	rjmp	.-18     	; 0xa6f2 <twi_writeTo+0x90>
    a704:	80 e0       	ldi	r24, 0x00	; 0
    a706:	f5 cf       	rjmp	.-22     	; 0xa6f2 <twi_writeTo+0x90>
    a708:	82 e0       	ldi	r24, 0x02	; 2
    a70a:	f3 cf       	rjmp	.-26     	; 0xa6f2 <twi_writeTo+0x90>
    a70c:	83 e0       	ldi	r24, 0x03	; 3
    a70e:	f1 cf       	rjmp	.-30     	; 0xa6f2 <twi_writeTo+0x90>

0000a710 <twi_transmit>:
twi_transmit():
    a710:	20 91 1b 0a 	lds	r18, 0x0A1B	; 0x800a1b <twi_txBufferLength>
    a714:	26 0f       	add	r18, r22
    a716:	33 27       	eor	r19, r19
    a718:	33 1f       	adc	r19, r19
    a71a:	21 32       	cpi	r18, 0x21	; 33
    a71c:	31 05       	cpc	r19, r1
    a71e:	ec f4       	brge	.+58     	; 0xa75a <twi_transmit+0x4a>
    a720:	20 91 66 0a 	lds	r18, 0x0A66	; 0x800a66 <twi_state>
    a724:	fc 01       	movw	r30, r24
    a726:	90 e0       	ldi	r25, 0x00	; 0
    a728:	80 e0       	ldi	r24, 0x00	; 0
    a72a:	24 30       	cpi	r18, 0x04	; 4
    a72c:	69 f0       	breq	.+26     	; 0xa748 <twi_transmit+0x38>
    a72e:	82 e0       	ldi	r24, 0x02	; 2
    a730:	08 95       	ret
    a732:	a0 91 1b 0a 	lds	r26, 0x0A1B	; 0x800a1b <twi_txBufferLength>
    a736:	21 91       	ld	r18, Z+
    a738:	ac 01       	movw	r20, r24
    a73a:	43 5e       	subi	r20, 0xE3	; 227
    a73c:	55 4f       	sbci	r21, 0xF5	; 245
    a73e:	a4 0f       	add	r26, r20
    a740:	b5 2f       	mov	r27, r21
    a742:	b1 1d       	adc	r27, r1
    a744:	2c 93       	st	X, r18
    a746:	01 96       	adiw	r24, 0x01	; 1
    a748:	86 17       	cp	r24, r22
    a74a:	98 f3       	brcs	.-26     	; 0xa732 <twi_transmit+0x22>
    a74c:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <twi_txBufferLength>
    a750:	68 0f       	add	r22, r24
    a752:	60 93 1b 0a 	sts	0x0A1B, r22	; 0x800a1b <twi_txBufferLength>
    a756:	80 e0       	ldi	r24, 0x00	; 0
    a758:	08 95       	ret
    a75a:	81 e0       	ldi	r24, 0x01	; 1
    a75c:	08 95       	ret

0000a75e <twi_attachSlaveRxEvent>:
twi_attachSlaveRxEvent():
    a75e:	90 93 60 0a 	sts	0x0A60, r25	; 0x800a60 <twi_onSlaveReceive+0x1>
    a762:	80 93 5f 0a 	sts	0x0A5F, r24	; 0x800a5f <twi_onSlaveReceive>
    a766:	08 95       	ret

0000a768 <twi_attachSlaveTxEvent>:
twi_attachSlaveTxEvent():
    a768:	90 93 62 0a 	sts	0x0A62, r25	; 0x800a62 <twi_onSlaveTransmit+0x1>
    a76c:	80 93 61 0a 	sts	0x0A61, r24	; 0x800a61 <twi_onSlaveTransmit>
    a770:	08 95       	ret

0000a772 <twi_stop>:
twi_stop():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:372
 * Output   none
 */
void twi_stop(void)
{
  // send stop condition
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT) | _BV(TWSTO);
    a772:	85 ed       	ldi	r24, 0xD5	; 213
    a774:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:376

  // wait for stop condition to be exectued on bus
  // TWINT is not set after a stop condition!
  while(TWCR & _BV(TWSTO)){
    a778:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    a77c:	84 fd       	sbrc	r24, 4
    a77e:	fc cf       	rjmp	.-8      	; 0xa778 <twi_stop+0x6>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:381
    continue;
  }

  // update twi state
  twi_state = TWI_READY;
    a780:	10 92 66 0a 	sts	0x0A66, r1	; 0x800a66 <twi_state>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:382
}
    a784:	08 95       	ret

0000a786 <twi_releaseBus>:
twi_releaseBus():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:393
 * Output   none
 */
void twi_releaseBus(void)
{
  // release bus
  TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWEA) | _BV(TWINT);
    a786:	85 ec       	ldi	r24, 0xC5	; 197
    a788:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:396

  // update twi state
  twi_state = TWI_READY;
    a78c:	10 92 66 0a 	sts	0x0A66, r1	; 0x800a66 <twi_state>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:397
}
    a790:	08 95       	ret

0000a792 <__vector_26>:
__vector_26():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:400

ISR(TWI_vect)
{
    a792:	1f 92       	push	r1
    a794:	0f 92       	push	r0
    a796:	0f b6       	in	r0, 0x3f	; 63
    a798:	0f 92       	push	r0
    a79a:	11 24       	eor	r1, r1
    a79c:	0b b6       	in	r0, 0x3b	; 59
    a79e:	0f 92       	push	r0
    a7a0:	2f 93       	push	r18
    a7a2:	3f 93       	push	r19
    a7a4:	4f 93       	push	r20
    a7a6:	5f 93       	push	r21
    a7a8:	6f 93       	push	r22
    a7aa:	7f 93       	push	r23
    a7ac:	8f 93       	push	r24
    a7ae:	9f 93       	push	r25
    a7b0:	af 93       	push	r26
    a7b2:	bf 93       	push	r27
    a7b4:	ef 93       	push	r30
    a7b6:	ff 93       	push	r31
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  switch(TW_STATUS){
    a7b8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    a7bc:	88 7f       	andi	r24, 0xF8	; 248
    a7be:	80 36       	cpi	r24, 0x60	; 96
    a7c0:	09 f4       	brne	.+2      	; 0xa7c4 <__vector_26+0x32>
    a7c2:	4e c0       	rjmp	.+156    	; 0xa860 <__vector_26+0xce>
    a7c4:	08 f0       	brcs	.+2      	; 0xa7c8 <__vector_26+0x36>
    a7c6:	41 c0       	rjmp	.+130    	; 0xa84a <__vector_26+0xb8>
    a7c8:	88 32       	cpi	r24, 0x28	; 40
    a7ca:	09 f4       	brne	.+2      	; 0xa7ce <__vector_26+0x3c>
    a7cc:	aa c0       	rjmp	.+340    	; 0xa922 <__vector_26+0x190>
    a7ce:	28 f5       	brcc	.+74     	; 0xa81a <__vector_26+0x88>
    a7d0:	80 31       	cpi	r24, 0x10	; 16
    a7d2:	09 f4       	brne	.+2      	; 0xa7d6 <__vector_26+0x44>
    a7d4:	9e c0       	rjmp	.+316    	; 0xa912 <__vector_26+0x180>
    a7d6:	c8 f4       	brcc	.+50     	; 0xa80a <__vector_26+0x78>
    a7d8:	88 23       	and	r24, r24
    a7da:	09 f4       	brne	.+2      	; 0xa7de <__vector_26+0x4c>
    a7dc:	fb c0       	rjmp	.+502    	; 0xa9d4 <__vector_26+0x242>
    a7de:	88 30       	cpi	r24, 0x08	; 8
    a7e0:	09 f4       	brne	.+2      	; 0xa7e4 <__vector_26+0x52>
    a7e2:	97 c0       	rjmp	.+302    	; 0xa912 <__vector_26+0x180>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:562
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
      break;
  }
}
    a7e4:	ff 91       	pop	r31
    a7e6:	ef 91       	pop	r30
    a7e8:	bf 91       	pop	r27
    a7ea:	af 91       	pop	r26
    a7ec:	9f 91       	pop	r25
    a7ee:	8f 91       	pop	r24
    a7f0:	7f 91       	pop	r23
    a7f2:	6f 91       	pop	r22
    a7f4:	5f 91       	pop	r21
    a7f6:	4f 91       	pop	r20
    a7f8:	3f 91       	pop	r19
    a7fa:	2f 91       	pop	r18
    a7fc:	0f 90       	pop	r0
    a7fe:	0b be       	out	0x3b, r0	; 59
    a800:	0f 90       	pop	r0
    a802:	0f be       	out	0x3f, r0	; 63
    a804:	0f 90       	pop	r0
    a806:	1f 90       	pop	r1
    a808:	18 95       	reti
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    a80a:	88 31       	cpi	r24, 0x18	; 24
    a80c:	09 f4       	brne	.+2      	; 0xa810 <__vector_26+0x7e>
    a80e:	89 c0       	rjmp	.+274    	; 0xa922 <__vector_26+0x190>
    a810:	80 32       	cpi	r24, 0x20	; 32
    a812:	41 f7       	brne	.-48     	; 0xa7e4 <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:436
    case TW_MT_SLA_NACK:  // address sent, nack received
      twi_error = TW_MT_SLA_NACK;
      twi_stop();
      break;
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
    a814:	80 93 f9 09 	sts	0x09F9, r24	; 0x8009f9 <twi_error>
    a818:	15 c0       	rjmp	.+42     	; 0xa844 <__vector_26+0xb2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    a81a:	80 34       	cpi	r24, 0x40	; 64
    a81c:	09 f4       	brne	.+2      	; 0xa820 <__vector_26+0x8e>
    a81e:	9e c0       	rjmp	.+316    	; 0xa95c <__vector_26+0x1ca>
    a820:	48 f4       	brcc	.+18     	; 0xa834 <__vector_26+0xa2>
    a822:	80 33       	cpi	r24, 0x30	; 48
    a824:	b9 f3       	breq	.-18     	; 0xa814 <__vector_26+0x82>
    a826:	88 33       	cpi	r24, 0x38	; 56
    a828:	e9 f6       	brne	.-70     	; 0xa7e4 <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:440
    case TW_MT_DATA_NACK: // data sent, nack received
      twi_error = TW_MT_DATA_NACK;
      twi_stop();
      break;
    case TW_MT_ARB_LOST: // lost bus arbitration
      twi_error = TW_MT_ARB_LOST;
    a82a:	80 93 f9 09 	sts	0x09F9, r24	; 0x8009f9 <twi_error>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:441
      twi_releaseBus();
    a82e:	0e 94 c3 53 	call	0xa786	; 0xa786 <twi_releaseBus>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:442
      break;
    a832:	d8 cf       	rjmp	.-80     	; 0xa7e4 <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    a834:	80 35       	cpi	r24, 0x50	; 80
    a836:	09 f4       	brne	.+2      	; 0xa83a <__vector_26+0xa8>
    a838:	85 c0       	rjmp	.+266    	; 0xa944 <__vector_26+0x1b2>
    a83a:	88 35       	cpi	r24, 0x58	; 88
    a83c:	09 f4       	brne	.+2      	; 0xa840 <__vector_26+0xae>
    a83e:	96 c0       	rjmp	.+300    	; 0xa96c <__vector_26+0x1da>
    a840:	88 34       	cpi	r24, 0x48	; 72
    a842:	81 f6       	brne	.-96     	; 0xa7e4 <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:559
    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
      twi_stop();
    a844:	0e 94 b9 53 	call	0xa772	; 0xa772 <twi_stop>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:562
      break;
  }
}
    a848:	cd cf       	rjmp	.-102    	; 0xa7e4 <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    a84a:	88 39       	cpi	r24, 0x98	; 152
    a84c:	09 f4       	brne	.+2      	; 0xa850 <__vector_26+0xbe>
    a84e:	8c c0       	rjmp	.+280    	; 0xa968 <__vector_26+0x1d6>
    a850:	38 f5       	brcc	.+78     	; 0xa8a0 <__vector_26+0x10e>
    a852:	88 37       	cpi	r24, 0x78	; 120
    a854:	29 f0       	breq	.+10     	; 0xa860 <__vector_26+0xce>
    a856:	50 f4       	brcc	.+20     	; 0xa86c <__vector_26+0xda>
    a858:	88 36       	cpi	r24, 0x68	; 104
    a85a:	11 f0       	breq	.+4      	; 0xa860 <__vector_26+0xce>
    a85c:	80 37       	cpi	r24, 0x70	; 112
    a85e:	11 f6       	brne	.-124    	; 0xa7e4 <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:482
    case TW_SR_SLA_ACK:   // addressed, returned ack
    case TW_SR_GCALL_ACK: // addressed generally, returned ack
    case TW_SR_ARB_LOST_SLA_ACK:   // lost arbitration, returned ack
    case TW_SR_ARB_LOST_GCALL_ACK: // lost arbitration, returned ack
      // enter slave receiver mode
      twi_state = TWI_SRX;
    a860:	83 e0       	ldi	r24, 0x03	; 3
    a862:	80 93 66 0a 	sts	0x0A66, r24	; 0x800a66 <twi_state>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:484
      // indicate that rx buffer can be overwritten and ack
      twi_rxBufferIndex = 0;
    a866:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <twi_rxBufferIndex>
    a86a:	57 c0       	rjmp	.+174    	; 0xa91a <__vector_26+0x188>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    a86c:	88 38       	cpi	r24, 0x88	; 136
    a86e:	09 f4       	brne	.+2      	; 0xa872 <__vector_26+0xe0>
    a870:	7b c0       	rjmp	.+246    	; 0xa968 <__vector_26+0x1d6>
    a872:	80 39       	cpi	r24, 0x90	; 144
    a874:	19 f0       	breq	.+6      	; 0xa87c <__vector_26+0xea>
    a876:	80 38       	cpi	r24, 0x80	; 128
    a878:	09 f0       	breq	.+2      	; 0xa87c <__vector_26+0xea>
    a87a:	b4 cf       	rjmp	.-152    	; 0xa7e4 <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:490
      twi_reply(1);
      break;
    case TW_SR_DATA_ACK:       // data received, returned ack
    case TW_SR_GCALL_DATA_ACK: // data received generally, returned ack
      // if there is still room in the rx buffer
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    a87c:	80 91 fa 09 	lds	r24, 0x09FA	; 0x8009fa <twi_rxBufferIndex>
    a880:	80 32       	cpi	r24, 0x20	; 32
    a882:	08 f0       	brcs	.+2      	; 0xa886 <__vector_26+0xf4>
    a884:	71 c0       	rjmp	.+226    	; 0xa968 <__vector_26+0x1d6>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:492
        // put byte in buffer and ack
        twi_rxBuffer[twi_rxBufferIndex++] = TWDR;
    a886:	e0 91 fa 09 	lds	r30, 0x09FA	; 0x8009fa <twi_rxBufferIndex>
    a88a:	81 e0       	ldi	r24, 0x01	; 1
    a88c:	8e 0f       	add	r24, r30
    a88e:	80 93 fa 09 	sts	0x09FA, r24	; 0x8009fa <twi_rxBufferIndex>
    a892:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    a896:	f0 e0       	ldi	r31, 0x00	; 0
    a898:	e5 50       	subi	r30, 0x05	; 5
    a89a:	f6 4f       	sbci	r31, 0xF6	; 246
    a89c:	80 83       	st	Z, r24
    a89e:	3d c0       	rjmp	.+122    	; 0xa91a <__vector_26+0x188>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    a8a0:	80 3b       	cpi	r24, 0xB0	; 176
    a8a2:	39 f0       	breq	.+14     	; 0xa8b2 <__vector_26+0x120>
    a8a4:	e0 f4       	brcc	.+56     	; 0xa8de <__vector_26+0x14c>
    a8a6:	80 3a       	cpi	r24, 0xA0	; 160
    a8a8:	09 f4       	brne	.+2      	; 0xa8ac <__vector_26+0x11a>
    a8aa:	79 c0       	rjmp	.+242    	; 0xa99e <__vector_26+0x20c>
    a8ac:	88 3a       	cpi	r24, 0xA8	; 168
    a8ae:	09 f0       	breq	.+2      	; 0xa8b2 <__vector_26+0x120>
    a8b0:	99 cf       	rjmp	.-206    	; 0xa7e4 <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:521
    
    // Slave Transmitter
    case TW_ST_SLA_ACK:          // addressed, returned ack
    case TW_ST_ARB_LOST_SLA_ACK: // arbitration lost, returned ack
      // enter slave transmitter mode
      twi_state = TWI_STX;
    a8b2:	84 e0       	ldi	r24, 0x04	; 4
    a8b4:	80 93 66 0a 	sts	0x0A66, r24	; 0x800a66 <twi_state>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:523
      // ready the tx buffer index for iteration
      twi_txBufferIndex = 0;
    a8b8:	10 92 1c 0a 	sts	0x0A1C, r1	; 0x800a1c <twi_txBufferIndex>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:525
      // set tx buffer length to be zero, to verify if user changes it
      twi_txBufferLength = 0;
    a8bc:	10 92 1b 0a 	sts	0x0A1B, r1	; 0x800a1b <twi_txBufferLength>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:528
      // request for txBuffer to be filled and length to be set
      // note: user must call twi_transmit(bytes, length) to do this
      twi_onSlaveTransmit();
    a8c0:	e0 91 61 0a 	lds	r30, 0x0A61	; 0x800a61 <twi_onSlaveTransmit>
    a8c4:	f0 91 62 0a 	lds	r31, 0x0A62	; 0x800a62 <twi_onSlaveTransmit+0x1>
    a8c8:	09 95       	icall
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:530
      // if they didn't change buffer & length, initialize it
      if(0 == twi_txBufferLength){
    a8ca:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <twi_txBufferLength>
    a8ce:	81 11       	cpse	r24, r1
    a8d0:	0f c0       	rjmp	.+30     	; 0xa8f0 <__vector_26+0x15e>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:531
        twi_txBufferLength = 1;
    a8d2:	81 e0       	ldi	r24, 0x01	; 1
    a8d4:	80 93 1b 0a 	sts	0x0A1B, r24	; 0x800a1b <twi_txBufferLength>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:532
        twi_txBuffer[0] = 0x00;
    a8d8:	10 92 1d 0a 	sts	0x0A1D, r1	; 0x800a1d <twi_txBuffer>
    a8dc:	09 c0       	rjmp	.+18     	; 0xa8f0 <__vector_26+0x15e>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:401
  twi_state = TWI_READY;
}

ISR(TWI_vect)
{
  switch(TW_STATUS){
    a8de:	80 3c       	cpi	r24, 0xC0	; 192
    a8e0:	09 f4       	brne	.+2      	; 0xa8e4 <__vector_26+0x152>
    a8e2:	76 c0       	rjmp	.+236    	; 0xa9d0 <__vector_26+0x23e>
    a8e4:	88 3c       	cpi	r24, 0xC8	; 200
    a8e6:	09 f4       	brne	.+2      	; 0xa8ea <__vector_26+0x158>
    a8e8:	73 c0       	rjmp	.+230    	; 0xa9d0 <__vector_26+0x23e>
    a8ea:	88 3b       	cpi	r24, 0xB8	; 184
    a8ec:	09 f0       	breq	.+2      	; 0xa8f0 <__vector_26+0x15e>
    a8ee:	7a cf       	rjmp	.-268    	; 0xa7e4 <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:538
      }
      // transmit first byte from buffer, fall
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
    a8f0:	e0 91 1c 0a 	lds	r30, 0x0A1C	; 0x800a1c <twi_txBufferIndex>
    a8f4:	81 e0       	ldi	r24, 0x01	; 1
    a8f6:	8e 0f       	add	r24, r30
    a8f8:	80 93 1c 0a 	sts	0x0A1C, r24	; 0x800a1c <twi_txBufferIndex>
    a8fc:	f0 e0       	ldi	r31, 0x00	; 0
    a8fe:	e3 5e       	subi	r30, 0xE3	; 227
    a900:	f5 4f       	sbci	r31, 0xF5	; 245
    a902:	80 81       	ld	r24, Z
    a904:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:540
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    a908:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <twi_txBufferIndex>
    a90c:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <twi_txBufferLength>
    a910:	29 c0       	rjmp	.+82     	; 0xa964 <__vector_26+0x1d2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:406
  switch(TW_STATUS){
    // All Master
    case TW_START:     // sent start condition
    case TW_REP_START: // sent repeated start condition
      // copy device address and r/w bit to output register and ack
      TWDR = twi_slarw;
    a912:	80 91 65 0a 	lds	r24, 0x0A65	; 0x800a65 <twi_slarw>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:416
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    a916:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
twi_reply():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:357
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    a91a:	85 ec       	ldi	r24, 0xC5	; 197
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:359
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    a91c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    a920:	61 cf       	rjmp	.-318    	; 0xa7e4 <__vector_26+0x52>
__vector_26():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:414

    // Master Transmitter
    case TW_MT_SLA_ACK:  // slave receiver acked address
    case TW_MT_DATA_ACK: // slave receiver acked data
      // if there is data to send, send it, otherwise stop 
      if(twi_masterBufferIndex < twi_masterBufferLength){
    a922:	90 91 3e 0a 	lds	r25, 0x0A3E	; 0x800a3e <twi_masterBufferIndex>
    a926:	80 91 3d 0a 	lds	r24, 0x0A3D	; 0x800a3d <twi_masterBufferLength>
    a92a:	98 17       	cp	r25, r24
    a92c:	58 f5       	brcc	.+86     	; 0xa984 <__vector_26+0x1f2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:416
        // copy data to output register and ack
        TWDR = twi_masterBuffer[twi_masterBufferIndex++];
    a92e:	e0 91 3e 0a 	lds	r30, 0x0A3E	; 0x800a3e <twi_masterBufferIndex>
    a932:	81 e0       	ldi	r24, 0x01	; 1
    a934:	8e 0f       	add	r24, r30
    a936:	80 93 3e 0a 	sts	0x0A3E, r24	; 0x800a3e <twi_masterBufferIndex>
    a93a:	f0 e0       	ldi	r31, 0x00	; 0
    a93c:	e1 5c       	subi	r30, 0xC1	; 193
    a93e:	f5 4f       	sbci	r31, 0xF5	; 245
    a940:	80 81       	ld	r24, Z
    a942:	e9 cf       	rjmp	.-46     	; 0xa916 <__vector_26+0x184>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:447
      break;

    // Master Receiver
    case TW_MR_DATA_ACK: // data received, ack sent
      // put byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    a944:	e0 91 3e 0a 	lds	r30, 0x0A3E	; 0x800a3e <twi_masterBufferIndex>
    a948:	81 e0       	ldi	r24, 0x01	; 1
    a94a:	8e 0f       	add	r24, r30
    a94c:	80 93 3e 0a 	sts	0x0A3E, r24	; 0x800a3e <twi_masterBufferIndex>
    a950:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    a954:	f0 e0       	ldi	r31, 0x00	; 0
    a956:	e1 5c       	subi	r30, 0xC1	; 193
    a958:	f5 4f       	sbci	r31, 0xF5	; 245
    a95a:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:451
      /* fall through */
    case TW_MR_SLA_ACK:  // address sent, ack received
      // ack if more bytes are expected, otherwise nack
      if(twi_masterBufferIndex < twi_masterBufferLength){
    a95c:	90 91 3e 0a 	lds	r25, 0x0A3E	; 0x800a3e <twi_masterBufferIndex>
    a960:	80 91 3d 0a 	lds	r24, 0x0A3D	; 0x800a3d <twi_masterBufferLength>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:540
      /* fall through */
    case TW_ST_DATA_ACK: // byte sent, ack returned
      // copy data to output register
      TWDR = twi_txBuffer[twi_txBufferIndex++];
      // if there is more to send, ack, otherwise nack
      if(twi_txBufferIndex < twi_txBufferLength){
    a964:	98 17       	cp	r25, r24
    a966:	c8 f2       	brcs	.-78     	; 0xa91a <__vector_26+0x188>
twi_reply():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:359
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
  }else{
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT);
    a968:	85 e8       	ldi	r24, 0x85	; 133
    a96a:	d8 cf       	rjmp	.-80     	; 0xa91c <__vector_26+0x18a>
__vector_26():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:459
        twi_reply(0);
      }
      break;
    case TW_MR_DATA_NACK: // data received, nack sent
      // put final byte into buffer
      twi_masterBuffer[twi_masterBufferIndex++] = TWDR;
    a96c:	e0 91 3e 0a 	lds	r30, 0x0A3E	; 0x800a3e <twi_masterBufferIndex>
    a970:	81 e0       	ldi	r24, 0x01	; 1
    a972:	8e 0f       	add	r24, r30
    a974:	80 93 3e 0a 	sts	0x0A3E, r24	; 0x800a3e <twi_masterBufferIndex>
    a978:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    a97c:	f0 e0       	ldi	r31, 0x00	; 0
    a97e:	e1 5c       	subi	r30, 0xC1	; 193
    a980:	f5 4f       	sbci	r31, 0xF5	; 245
    a982:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:460
  if (twi_sendStop)
    a984:	80 91 64 0a 	lds	r24, 0x0A64	; 0x800a64 <twi_sendStop>
    a988:	81 11       	cpse	r24, r1
    a98a:	5c cf       	rjmp	.-328    	; 0xa844 <__vector_26+0xb2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:463
          twi_stop();
  else {
    twi_inRepStart = true;  // we're gonna send the START
    a98c:	81 e0       	ldi	r24, 0x01	; 1
    a98e:	80 93 63 0a 	sts	0x0A63, r24	; 0x800a63 <twi_inRepStart>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:467
    // don't enable the interrupt. We'll generate the start, but we 
    // avoid handling the interrupt until we're in the next transaction,
    // at the point where we would normally issue the start.
    TWCR = _BV(TWINT) | _BV(TWSTA)| _BV(TWEN) ;
    a992:	84 ea       	ldi	r24, 0xA4	; 164
twi_reply():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:357
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    a994:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
__vector_26():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:551
    case TW_ST_DATA_NACK: // received nack, we are done 
    case TW_ST_LAST_DATA: // received ack, but we are done already!
      // ack future responses
      twi_reply(1);
      // leave slave receiver state
      twi_state = TWI_READY;
    a998:	10 92 66 0a 	sts	0x0A66, r1	; 0x800a66 <twi_state>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:552
      break;
    a99c:	23 cf       	rjmp	.-442    	; 0xa7e4 <__vector_26+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:501
        twi_reply(0);
      }
      break;
    case TW_SR_STOP: // stop or repeated start condition received
      // ack future responses and leave slave receiver state
      twi_releaseBus();
    a99e:	0e 94 c3 53 	call	0xa786	; 0xa786 <twi_releaseBus>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:503
      // put a null char after data if there's room
      if(twi_rxBufferIndex < TWI_BUFFER_SIZE){
    a9a2:	80 91 fa 09 	lds	r24, 0x09FA	; 0x8009fa <twi_rxBufferIndex>
    a9a6:	80 32       	cpi	r24, 0x20	; 32
    a9a8:	30 f4       	brcc	.+12     	; 0xa9b6 <__vector_26+0x224>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:504
        twi_rxBuffer[twi_rxBufferIndex] = '\0';
    a9aa:	e0 91 fa 09 	lds	r30, 0x09FA	; 0x8009fa <twi_rxBufferIndex>
    a9ae:	f0 e0       	ldi	r31, 0x00	; 0
    a9b0:	e5 50       	subi	r30, 0x05	; 5
    a9b2:	f6 4f       	sbci	r31, 0xF6	; 246
    a9b4:	10 82       	st	Z, r1
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:507
      }
      // callback to user defined callback
      twi_onSlaveReceive(twi_rxBuffer, twi_rxBufferIndex);
    a9b6:	60 91 fa 09 	lds	r22, 0x09FA	; 0x8009fa <twi_rxBufferIndex>
    a9ba:	70 e0       	ldi	r23, 0x00	; 0
    a9bc:	e0 91 5f 0a 	lds	r30, 0x0A5F	; 0x800a5f <twi_onSlaveReceive>
    a9c0:	f0 91 60 0a 	lds	r31, 0x0A60	; 0x800a60 <twi_onSlaveReceive+0x1>
    a9c4:	8b ef       	ldi	r24, 0xFB	; 251
    a9c6:	99 e0       	ldi	r25, 0x09	; 9
    a9c8:	09 95       	icall
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:509
      // since we submit rx buffer to "wire" library, we can reset it
      twi_rxBufferIndex = 0;
    a9ca:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <twi_rxBufferIndex>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:510
      break;
    a9ce:	0a cf       	rjmp	.-492    	; 0xa7e4 <__vector_26+0x52>
twi_reply():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:357
 */
void twi_reply(uint8_t ack)
{
  // transmit master read ready signal, with or without ack
  if(ack){
    TWCR = _BV(TWEN) | _BV(TWIE) | _BV(TWINT) | _BV(TWEA);
    a9d0:	85 ec       	ldi	r24, 0xC5	; 197
    a9d2:	e0 cf       	rjmp	.-64     	; 0xa994 <__vector_26+0x202>
__vector_26():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src\utility/twi.c:558

    // All
    case TW_NO_INFO:   // no state information
      break;
    case TW_BUS_ERROR: // bus error, illegal stop/start
      twi_error = TW_BUS_ERROR;
    a9d4:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <twi_error>
    a9d8:	35 cf       	rjmp	.-406    	; 0xa844 <__vector_26+0xb2>

0000a9da <Dusk2Dawn::Dusk2Dawn(float, float, float)>:
_ZN9Dusk2DawnC2Efff():
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:286
}


float Dusk2Dawn::degToRad(float deg) {
  return PI * deg / 180;
}
    a9da:	cf 92       	push	r12
    a9dc:	df 92       	push	r13
    a9de:	ef 92       	push	r14
    a9e0:	ff 92       	push	r15
    a9e2:	0f 93       	push	r16
    a9e4:	1f 93       	push	r17
    a9e6:	cf 93       	push	r28
    a9e8:	df 93       	push	r29
    a9ea:	ec 01       	movw	r28, r24
    a9ec:	48 83       	st	Y, r20
    a9ee:	59 83       	std	Y+1, r21	; 0x01
    a9f0:	6a 83       	std	Y+2, r22	; 0x02
    a9f2:	7b 83       	std	Y+3, r23	; 0x03
    a9f4:	0c 83       	std	Y+4, r16	; 0x04
    a9f6:	1d 83       	std	Y+5, r17	; 0x05
    a9f8:	2e 83       	std	Y+6, r18	; 0x06
    a9fa:	3f 83       	std	Y+7, r19	; 0x07
    a9fc:	c7 01       	movw	r24, r14
    a9fe:	b6 01       	movw	r22, r12
    aa00:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    aa04:	79 87       	std	Y+9, r23	; 0x09
    aa06:	68 87       	std	Y+8, r22	; 0x08
    aa08:	df 91       	pop	r29
    aa0a:	cf 91       	pop	r28
    aa0c:	1f 91       	pop	r17
    aa0e:	0f 91       	pop	r16
    aa10:	ff 90       	pop	r15
    aa12:	ef 90       	pop	r14
    aa14:	df 90       	pop	r13
    aa16:	cf 90       	pop	r12
    aa18:	08 95       	ret

0000aa1a <Dusk2Dawn::meanObliquityOfEcliptic(float)>:
_ZN9Dusk2Dawn23meanObliquityOfEclipticEf():
    aa1a:	cf 92       	push	r12
    aa1c:	df 92       	push	r13
    aa1e:	ef 92       	push	r14
    aa20:	ff 92       	push	r15
    aa22:	6a 01       	movw	r12, r20
    aa24:	7b 01       	movw	r14, r22
    aa26:	2f e2       	ldi	r18, 0x2F	; 47
    aa28:	32 ea       	ldi	r19, 0xA2	; 162
    aa2a:	4d ee       	ldi	r20, 0xED	; 237
    aa2c:	5a e3       	ldi	r21, 0x3A	; 58
    aa2e:	cb 01       	movw	r24, r22
    aa30:	b6 01       	movw	r22, r12
    aa32:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    aa36:	9b 01       	movw	r18, r22
    aa38:	ac 01       	movw	r20, r24
    aa3a:	6b e3       	ldi	r22, 0x3B	; 59
    aa3c:	7a ea       	ldi	r23, 0xAA	; 170
    aa3e:	8a e1       	ldi	r24, 0x1A	; 26
    aa40:	9a e3       	ldi	r25, 0x3A	; 58
    aa42:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    aa46:	a7 01       	movw	r20, r14
    aa48:	96 01       	movw	r18, r12
    aa4a:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    aa4e:	2f e8       	ldi	r18, 0x8F	; 143
    aa50:	32 e4       	ldi	r19, 0x42	; 66
    aa52:	4b e3       	ldi	r20, 0x3B	; 59
    aa54:	52 e4       	ldi	r21, 0x42	; 66
    aa56:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    aa5a:	a7 01       	movw	r20, r14
    aa5c:	96 01       	movw	r18, r12
    aa5e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    aa62:	9b 01       	movw	r18, r22
    aa64:	ac 01       	movw	r20, r24
    aa66:	61 e8       	ldi	r22, 0x81	; 129
    aa68:	75 e9       	ldi	r23, 0x95	; 149
    aa6a:	8b ea       	ldi	r24, 0xAB	; 171
    aa6c:	91 e4       	ldi	r25, 0x41	; 65
    aa6e:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    aa72:	20 e0       	ldi	r18, 0x00	; 0
    aa74:	30 e0       	ldi	r19, 0x00	; 0
    aa76:	40 e7       	ldi	r20, 0x70	; 112
    aa78:	52 e4       	ldi	r21, 0x42	; 66
    aa7a:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    aa7e:	20 e0       	ldi	r18, 0x00	; 0
    aa80:	30 e0       	ldi	r19, 0x00	; 0
    aa82:	40 ed       	ldi	r20, 0xD0	; 208
    aa84:	51 e4       	ldi	r21, 0x41	; 65
    aa86:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    aa8a:	20 e0       	ldi	r18, 0x00	; 0
    aa8c:	30 e0       	ldi	r19, 0x00	; 0
    aa8e:	40 e7       	ldi	r20, 0x70	; 112
    aa90:	52 e4       	ldi	r21, 0x42	; 66
    aa92:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    aa96:	20 e0       	ldi	r18, 0x00	; 0
    aa98:	30 e0       	ldi	r19, 0x00	; 0
    aa9a:	48 eb       	ldi	r20, 0xB8	; 184
    aa9c:	51 e4       	ldi	r21, 0x41	; 65
    aa9e:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    aaa2:	ff 90       	pop	r15
    aaa4:	ef 90       	pop	r14
    aaa6:	df 90       	pop	r13
    aaa8:	cf 90       	pop	r12
    aaaa:	08 95       	ret

0000aaac <Dusk2Dawn::sunEqOfCenter(float)>:
_ZN9Dusk2Dawn13sunEqOfCenterEf():
    aaac:	4f 92       	push	r4
    aaae:	5f 92       	push	r5
    aab0:	6f 92       	push	r6
    aab2:	7f 92       	push	r7
    aab4:	8f 92       	push	r8
    aab6:	9f 92       	push	r9
    aab8:	af 92       	push	r10
    aaba:	bf 92       	push	r11
    aabc:	cf 92       	push	r12
    aabe:	df 92       	push	r13
    aac0:	ef 92       	push	r14
    aac2:	ff 92       	push	r15
    aac4:	cf 93       	push	r28
    aac6:	df 93       	push	r29
    aac8:	00 d0       	rcall	.+0      	; 0xaaca <Dusk2Dawn::sunEqOfCenter(float)+0x1e>
    aaca:	00 d0       	rcall	.+0      	; 0xaacc <Dusk2Dawn::sunEqOfCenter(float)+0x20>
    aacc:	cd b7       	in	r28, 0x3d	; 61
    aace:	de b7       	in	r29, 0x3e	; 62
    aad0:	6a 01       	movw	r12, r20
    aad2:	7b 01       	movw	r14, r22
_ZN9Dusk2Dawn18geomMeanAnomalySunEf():
    aad4:	28 e8       	ldi	r18, 0x88	; 136
    aad6:	3a e2       	ldi	r19, 0x2A	; 42
    aad8:	41 e2       	ldi	r20, 0x21	; 33
    aada:	59 e3       	ldi	r21, 0x39	; 57
    aadc:	cb 01       	movw	r24, r22
    aade:	b6 01       	movw	r22, r12
    aae0:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    aae4:	9b 01       	movw	r18, r22
    aae6:	ac 01       	movw	r20, r24
    aae8:	6d e0       	ldi	r22, 0x0D	; 13
    aaea:	7f e9       	ldi	r23, 0x9F	; 159
    aaec:	8c e0       	ldi	r24, 0x0C	; 12
    aaee:	97 e4       	ldi	r25, 0x47	; 71
    aaf0:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    aaf4:	a7 01       	movw	r20, r14
    aaf6:	96 01       	movw	r18, r12
    aaf8:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    aafc:	2a eb       	ldi	r18, 0xBA	; 186
    aafe:	33 ec       	ldi	r19, 0xC3	; 195
    ab00:	42 eb       	ldi	r20, 0xB2	; 178
    ab02:	53 e4       	ldi	r21, 0x43	; 67
    ab04:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
_ZN9Dusk2Dawn8degToRadEf():
    ab08:	2b ed       	ldi	r18, 0xDB	; 219
    ab0a:	3f e0       	ldi	r19, 0x0F	; 15
    ab0c:	49 e4       	ldi	r20, 0x49	; 73
    ab0e:	50 e4       	ldi	r21, 0x40	; 64
    ab10:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ab14:	20 e0       	ldi	r18, 0x00	; 0
    ab16:	30 e0       	ldi	r19, 0x00	; 0
    ab18:	44 e3       	ldi	r20, 0x34	; 52
    ab1a:	53 e4       	ldi	r21, 0x43	; 67
    ab1c:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    ab20:	4b 01       	movw	r8, r22
    ab22:	5c 01       	movw	r10, r24
_ZN9Dusk2Dawn13sunEqOfCenterEf():
    ab24:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    ab28:	2b 01       	movw	r4, r22
    ab2a:	3c 01       	movw	r6, r24
    ab2c:	a5 01       	movw	r20, r10
    ab2e:	94 01       	movw	r18, r8
    ab30:	c5 01       	movw	r24, r10
    ab32:	b4 01       	movw	r22, r8
    ab34:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    ab38:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    ab3c:	69 83       	std	Y+1, r22	; 0x01
    ab3e:	7a 83       	std	Y+2, r23	; 0x02
    ab40:	8b 83       	std	Y+3, r24	; 0x03
    ab42:	9c 83       	std	Y+4, r25	; 0x04
    ab44:	20 e0       	ldi	r18, 0x00	; 0
    ab46:	30 e0       	ldi	r19, 0x00	; 0
    ab48:	40 e4       	ldi	r20, 0x40	; 64
    ab4a:	50 e4       	ldi	r21, 0x40	; 64
    ab4c:	c5 01       	movw	r24, r10
    ab4e:	b4 01       	movw	r22, r8
    ab50:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ab54:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    ab58:	4b 01       	movw	r8, r22
    ab5a:	5c 01       	movw	r10, r24
    ab5c:	2b e8       	ldi	r18, 0x8B	; 139
    ab5e:	31 ee       	ldi	r19, 0xE1	; 225
    ab60:	4a e6       	ldi	r20, 0x6A	; 106
    ab62:	57 e3       	ldi	r21, 0x37	; 55
    ab64:	c7 01       	movw	r24, r14
    ab66:	b6 01       	movw	r22, r12
    ab68:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ab6c:	2d ee       	ldi	r18, 0xED	; 237
    ab6e:	37 ed       	ldi	r19, 0xD7	; 215
    ab70:	4d e9       	ldi	r20, 0x9D	; 157
    ab72:	5b e3       	ldi	r21, 0x3B	; 59
    ab74:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    ab78:	a7 01       	movw	r20, r14
    ab7a:	96 01       	movw	r18, r12
    ab7c:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ab80:	9b 01       	movw	r18, r22
    ab82:	ac 01       	movw	r20, r24
    ab84:	6e ea       	ldi	r22, 0xAE	; 174
    ab86:	71 e1       	ldi	r23, 0x11	; 17
    ab88:	85 ef       	ldi	r24, 0xF5	; 245
    ab8a:	9f e3       	ldi	r25, 0x3F	; 63
    ab8c:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    ab90:	a3 01       	movw	r20, r6
    ab92:	92 01       	movw	r18, r4
    ab94:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ab98:	2b 01       	movw	r4, r22
    ab9a:	3c 01       	movw	r6, r24
    ab9c:	26 ef       	ldi	r18, 0xF6	; 246
    ab9e:	3f ec       	ldi	r19, 0xCF	; 207
    aba0:	43 ed       	ldi	r20, 0xD3	; 211
    aba2:	58 e3       	ldi	r21, 0x38	; 56
    aba4:	c7 01       	movw	r24, r14
    aba6:	b6 01       	movw	r22, r12
    aba8:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    abac:	9b 01       	movw	r18, r22
    abae:	ac 01       	movw	r20, r24
    abb0:	6c e5       	ldi	r22, 0x5C	; 92
    abb2:	78 ec       	ldi	r23, 0xC8	; 200
    abb4:	83 ea       	ldi	r24, 0xA3	; 163
    abb6:	9c e3       	ldi	r25, 0x3C	; 60
    abb8:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    abbc:	29 81       	ldd	r18, Y+1	; 0x01
    abbe:	3a 81       	ldd	r19, Y+2	; 0x02
    abc0:	4b 81       	ldd	r20, Y+3	; 0x03
    abc2:	5c 81       	ldd	r21, Y+4	; 0x04
    abc4:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    abc8:	9b 01       	movw	r18, r22
    abca:	ac 01       	movw	r20, r24
    abcc:	c3 01       	movw	r24, r6
    abce:	b2 01       	movw	r22, r4
    abd0:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    abd4:	6b 01       	movw	r12, r22
    abd6:	7c 01       	movw	r14, r24
    abd8:	2c ee       	ldi	r18, 0xEC	; 236
    abda:	34 e8       	ldi	r19, 0x84	; 132
    abdc:	47 e9       	ldi	r20, 0x97	; 151
    abde:	59 e3       	ldi	r21, 0x39	; 57
    abe0:	c5 01       	movw	r24, r10
    abe2:	b4 01       	movw	r22, r8
    abe4:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    abe8:	9b 01       	movw	r18, r22
    abea:	ac 01       	movw	r20, r24
    abec:	c7 01       	movw	r24, r14
    abee:	b6 01       	movw	r22, r12
    abf0:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    abf4:	0f 90       	pop	r0
    abf6:	0f 90       	pop	r0
    abf8:	0f 90       	pop	r0
    abfa:	0f 90       	pop	r0
    abfc:	df 91       	pop	r29
    abfe:	cf 91       	pop	r28
    ac00:	ff 90       	pop	r15
    ac02:	ef 90       	pop	r14
    ac04:	df 90       	pop	r13
    ac06:	cf 90       	pop	r12
    ac08:	bf 90       	pop	r11
    ac0a:	af 90       	pop	r10
    ac0c:	9f 90       	pop	r9
    ac0e:	8f 90       	pop	r8
    ac10:	7f 90       	pop	r7
    ac12:	6f 90       	pop	r6
    ac14:	5f 90       	pop	r5
    ac16:	4f 90       	pop	r4
    ac18:	08 95       	ret

0000ac1a <Dusk2Dawn::hourAngleSunrise(float, float)>:
_ZN9Dusk2Dawn16hourAngleSunriseEff():
    ac1a:	4f 92       	push	r4
    ac1c:	5f 92       	push	r5
    ac1e:	6f 92       	push	r6
    ac20:	7f 92       	push	r7
    ac22:	8f 92       	push	r8
    ac24:	9f 92       	push	r9
    ac26:	af 92       	push	r10
    ac28:	bf 92       	push	r11
    ac2a:	cf 92       	push	r12
    ac2c:	df 92       	push	r13
    ac2e:	ef 92       	push	r14
    ac30:	ff 92       	push	r15
    ac32:	0f 93       	push	r16
    ac34:	1f 93       	push	r17
    ac36:	cf 93       	push	r28
    ac38:	df 93       	push	r29
    ac3a:	00 d0       	rcall	.+0      	; 0xac3c <Dusk2Dawn::hourAngleSunrise(float, float)+0x22>
    ac3c:	00 d0       	rcall	.+0      	; 0xac3e <Dusk2Dawn::hourAngleSunrise(float, float)+0x24>
    ac3e:	cd b7       	in	r28, 0x3d	; 61
    ac40:	de b7       	in	r29, 0x3e	; 62
    ac42:	cb 01       	movw	r24, r22
    ac44:	ba 01       	movw	r22, r20
    ac46:	79 01       	movw	r14, r18
_ZN9Dusk2Dawn8degToRadEf():
    ac48:	2b ed       	ldi	r18, 0xDB	; 219
    ac4a:	3f e0       	ldi	r19, 0x0F	; 15
    ac4c:	49 e4       	ldi	r20, 0x49	; 73
    ac4e:	50 e4       	ldi	r21, 0x40	; 64
    ac50:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ac54:	20 e0       	ldi	r18, 0x00	; 0
    ac56:	30 e0       	ldi	r19, 0x00	; 0
    ac58:	44 e3       	ldi	r20, 0x34	; 52
    ac5a:	53 e4       	ldi	r21, 0x43	; 67
    ac5c:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    ac60:	4b 01       	movw	r8, r22
    ac62:	5c 01       	movw	r10, r24
    ac64:	2b ed       	ldi	r18, 0xDB	; 219
    ac66:	3f e0       	ldi	r19, 0x0F	; 15
    ac68:	49 e4       	ldi	r20, 0x49	; 73
    ac6a:	50 e4       	ldi	r21, 0x40	; 64
    ac6c:	c7 01       	movw	r24, r14
    ac6e:	b8 01       	movw	r22, r16
    ac70:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ac74:	20 e0       	ldi	r18, 0x00	; 0
    ac76:	30 e0       	ldi	r19, 0x00	; 0
    ac78:	44 e3       	ldi	r20, 0x34	; 52
    ac7a:	53 e4       	ldi	r21, 0x43	; 67
    ac7c:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    ac80:	6b 01       	movw	r12, r22
    ac82:	7c 01       	movw	r14, r24
_ZN9Dusk2Dawn16hourAngleSunriseEff():
    ac84:	c5 01       	movw	r24, r10
    ac86:	b4 01       	movw	r22, r8
    ac88:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    ac8c:	2b 01       	movw	r4, r22
    ac8e:	3c 01       	movw	r6, r24
    ac90:	c7 01       	movw	r24, r14
    ac92:	b6 01       	movw	r22, r12
    ac94:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    ac98:	69 83       	std	Y+1, r22	; 0x01
    ac9a:	7a 83       	std	Y+2, r23	; 0x02
    ac9c:	8b 83       	std	Y+3, r24	; 0x03
    ac9e:	9c 83       	std	Y+4, r25	; 0x04
    aca0:	c5 01       	movw	r24, r10
    aca2:	b4 01       	movw	r22, r8
    aca4:	0e 94 48 72 	call	0xe490	; 0xe490 <tan>
    aca8:	4b 01       	movw	r8, r22
    acaa:	5c 01       	movw	r10, r24
    acac:	c7 01       	movw	r24, r14
    acae:	b6 01       	movw	r22, r12
    acb0:	0e 94 48 72 	call	0xe490	; 0xe490 <tan>
    acb4:	6b 01       	movw	r12, r22
    acb6:	7c 01       	movw	r14, r24
    acb8:	29 81       	ldd	r18, Y+1	; 0x01
    acba:	3a 81       	ldd	r19, Y+2	; 0x02
    acbc:	4b 81       	ldd	r20, Y+3	; 0x03
    acbe:	5c 81       	ldd	r21, Y+4	; 0x04
    acc0:	c3 01       	movw	r24, r6
    acc2:	b2 01       	movw	r22, r4
    acc4:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    acc8:	9b 01       	movw	r18, r22
    acca:	ac 01       	movw	r20, r24
    accc:	69 e0       	ldi	r22, 0x09	; 9
    acce:	71 e3       	ldi	r23, 0x31	; 49
    acd0:	8e e6       	ldi	r24, 0x6E	; 110
    acd2:	9c eb       	ldi	r25, 0xBC	; 188
    acd4:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    acd8:	2b 01       	movw	r4, r22
    acda:	3c 01       	movw	r6, r24
    acdc:	a7 01       	movw	r20, r14
    acde:	96 01       	movw	r18, r12
    ace0:	c5 01       	movw	r24, r10
    ace2:	b4 01       	movw	r22, r8
    ace4:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ace8:	9b 01       	movw	r18, r22
    acea:	ac 01       	movw	r20, r24
    acec:	c3 01       	movw	r24, r6
    acee:	b2 01       	movw	r22, r4
    acf0:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    acf4:	0f 90       	pop	r0
    acf6:	0f 90       	pop	r0
    acf8:	0f 90       	pop	r0
    acfa:	0f 90       	pop	r0
    acfc:	df 91       	pop	r29
    acfe:	cf 91       	pop	r28
    ad00:	1f 91       	pop	r17
    ad02:	0f 91       	pop	r16
    ad04:	ff 90       	pop	r15
    ad06:	ef 90       	pop	r14
    ad08:	df 90       	pop	r13
    ad0a:	cf 90       	pop	r12
    ad0c:	bf 90       	pop	r11
    ad0e:	af 90       	pop	r10
    ad10:	9f 90       	pop	r9
    ad12:	8f 90       	pop	r8
    ad14:	7f 90       	pop	r7
    ad16:	6f 90       	pop	r6
    ad18:	5f 90       	pop	r5
    ad1a:	4f 90       	pop	r4
    ad1c:	0c 94 1b 6e 	jmp	0xdc36	; 0xdc36 <acos>

0000ad20 <Dusk2Dawn::obliquityCorrection(float)>:
_ZN9Dusk2Dawn19obliquityCorrectionEf():
    ad20:	8f 92       	push	r8
    ad22:	9f 92       	push	r9
    ad24:	af 92       	push	r10
    ad26:	bf 92       	push	r11
    ad28:	cf 92       	push	r12
    ad2a:	df 92       	push	r13
    ad2c:	ef 92       	push	r14
    ad2e:	ff 92       	push	r15
    ad30:	6a 01       	movw	r12, r20
    ad32:	7b 01       	movw	r14, r22
    ad34:	0e 94 0d 55 	call	0xaa1a	; 0xaa1a <Dusk2Dawn::meanObliquityOfEcliptic(float)>
    ad38:	4b 01       	movw	r8, r22
    ad3a:	5c 01       	movw	r10, r24
    ad3c:	2a e5       	ldi	r18, 0x5A	; 90
    ad3e:	34 ec       	ldi	r19, 0xC4	; 196
    ad40:	41 ef       	ldi	r20, 0xF1	; 241
    ad42:	54 e4       	ldi	r21, 0x44	; 68
    ad44:	c7 01       	movw	r24, r14
    ad46:	b6 01       	movw	r22, r12
    ad48:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ad4c:	9b 01       	movw	r18, r22
    ad4e:	ac 01       	movw	r20, r24
    ad50:	6b e7       	ldi	r22, 0x7B	; 123
    ad52:	74 e1       	ldi	r23, 0x14	; 20
    ad54:	8a ef       	ldi	r24, 0xFA	; 250
    ad56:	92 e4       	ldi	r25, 0x42	; 66
    ad58:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
_ZN9Dusk2Dawn8degToRadEf():
    ad5c:	2b ed       	ldi	r18, 0xDB	; 219
    ad5e:	3f e0       	ldi	r19, 0x0F	; 15
    ad60:	49 e4       	ldi	r20, 0x49	; 73
    ad62:	50 e4       	ldi	r21, 0x40	; 64
    ad64:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ad68:	20 e0       	ldi	r18, 0x00	; 0
    ad6a:	30 e0       	ldi	r19, 0x00	; 0
    ad6c:	44 e3       	ldi	r20, 0x34	; 52
    ad6e:	53 e4       	ldi	r21, 0x43	; 67
    ad70:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
_ZN9Dusk2Dawn19obliquityCorrectionEf():
    ad74:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    ad78:	2c ea       	ldi	r18, 0xAC	; 172
    ad7a:	35 ec       	ldi	r19, 0xC5	; 197
    ad7c:	47 e2       	ldi	r20, 0x27	; 39
    ad7e:	5b e3       	ldi	r21, 0x3B	; 59
    ad80:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    ad84:	a5 01       	movw	r20, r10
    ad86:	94 01       	movw	r18, r8
    ad88:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    ad8c:	ff 90       	pop	r15
    ad8e:	ef 90       	pop	r14
    ad90:	df 90       	pop	r13
    ad92:	cf 90       	pop	r12
    ad94:	bf 90       	pop	r11
    ad96:	af 90       	pop	r10
    ad98:	9f 90       	pop	r9
    ad9a:	8f 90       	pop	r8
    ad9c:	08 95       	ret

0000ad9e <Dusk2Dawn::geomMeanLongSun(float)>:
_ZN9Dusk2Dawn15geomMeanLongSunEf():
    ad9e:	cf 92       	push	r12
    ada0:	df 92       	push	r13
    ada2:	ef 92       	push	r14
    ada4:	ff 92       	push	r15
    ada6:	6a 01       	movw	r12, r20
    ada8:	7b 01       	movw	r14, r22
    adaa:	21 ed       	ldi	r18, 0xD1	; 209
    adac:	36 ef       	ldi	r19, 0xF6	; 246
    adae:	4e e9       	ldi	r20, 0x9E	; 158
    adb0:	59 e3       	ldi	r21, 0x39	; 57
    adb2:	cb 01       	movw	r24, r22
    adb4:	b6 01       	movw	r22, r12
    adb6:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    adba:	25 ec       	ldi	r18, 0xC5	; 197
    adbc:	30 ea       	ldi	r19, 0xA0	; 160
    adbe:	4c e0       	ldi	r20, 0x0C	; 12
    adc0:	57 e4       	ldi	r21, 0x47	; 71
    adc2:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    adc6:	a7 01       	movw	r20, r14
    adc8:	96 01       	movw	r18, r12
    adca:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    adce:	25 eb       	ldi	r18, 0xB5	; 181
    add0:	3b e3       	ldi	r19, 0x3B	; 59
    add2:	4c e8       	ldi	r20, 0x8C	; 140
    add4:	53 e4       	ldi	r21, 0x43	; 67
    add6:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    adda:	6b 01       	movw	r12, r22
    addc:	7c 01       	movw	r14, r24
    adde:	20 e0       	ldi	r18, 0x00	; 0
    ade0:	30 e0       	ldi	r19, 0x00	; 0
    ade2:	44 eb       	ldi	r20, 0xB4	; 180
    ade4:	53 e4       	ldi	r21, 0x43	; 67
    ade6:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    adea:	18 16       	cp	r1, r24
    adec:	4c f4       	brge	.+18     	; 0xae00 <Dusk2Dawn::geomMeanLongSun(float)+0x62>
    adee:	20 e0       	ldi	r18, 0x00	; 0
    adf0:	30 e0       	ldi	r19, 0x00	; 0
    adf2:	44 eb       	ldi	r20, 0xB4	; 180
    adf4:	53 e4       	ldi	r21, 0x43	; 67
    adf6:	c7 01       	movw	r24, r14
    adf8:	b6 01       	movw	r22, r12
    adfa:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    adfe:	ed cf       	rjmp	.-38     	; 0xadda <Dusk2Dawn::geomMeanLongSun(float)+0x3c>
    ae00:	20 e0       	ldi	r18, 0x00	; 0
    ae02:	30 e0       	ldi	r19, 0x00	; 0
    ae04:	a9 01       	movw	r20, r18
    ae06:	c7 01       	movw	r24, r14
    ae08:	b6 01       	movw	r22, r12
    ae0a:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    ae0e:	87 ff       	sbrs	r24, 7
    ae10:	0b c0       	rjmp	.+22     	; 0xae28 <Dusk2Dawn::geomMeanLongSun(float)+0x8a>
    ae12:	20 e0       	ldi	r18, 0x00	; 0
    ae14:	30 e0       	ldi	r19, 0x00	; 0
    ae16:	44 eb       	ldi	r20, 0xB4	; 180
    ae18:	53 e4       	ldi	r21, 0x43	; 67
    ae1a:	c7 01       	movw	r24, r14
    ae1c:	b6 01       	movw	r22, r12
    ae1e:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    ae22:	6b 01       	movw	r12, r22
    ae24:	7c 01       	movw	r14, r24
    ae26:	ec cf       	rjmp	.-40     	; 0xae00 <Dusk2Dawn::geomMeanLongSun(float)+0x62>
    ae28:	c7 01       	movw	r24, r14
    ae2a:	b6 01       	movw	r22, r12
    ae2c:	ff 90       	pop	r15
    ae2e:	ef 90       	pop	r14
    ae30:	df 90       	pop	r13
    ae32:	cf 90       	pop	r12
    ae34:	08 95       	ret

0000ae36 <Dusk2Dawn::sunTrueLong(float)>:
_ZN9Dusk2Dawn11sunTrueLongEf():
    ae36:	8f 92       	push	r8
    ae38:	9f 92       	push	r9
    ae3a:	af 92       	push	r10
    ae3c:	bf 92       	push	r11
    ae3e:	cf 92       	push	r12
    ae40:	df 92       	push	r13
    ae42:	ef 92       	push	r14
    ae44:	ff 92       	push	r15
    ae46:	cf 93       	push	r28
    ae48:	df 93       	push	r29
    ae4a:	ec 01       	movw	r28, r24
    ae4c:	6a 01       	movw	r12, r20
    ae4e:	7b 01       	movw	r14, r22
    ae50:	0e 94 cf 56 	call	0xad9e	; 0xad9e <Dusk2Dawn::geomMeanLongSun(float)>
    ae54:	4b 01       	movw	r8, r22
    ae56:	5c 01       	movw	r10, r24
    ae58:	b7 01       	movw	r22, r14
    ae5a:	a6 01       	movw	r20, r12
    ae5c:	ce 01       	movw	r24, r28
    ae5e:	0e 94 56 55 	call	0xaaac	; 0xaaac <Dusk2Dawn::sunEqOfCenter(float)>
    ae62:	9b 01       	movw	r18, r22
    ae64:	ac 01       	movw	r20, r24
    ae66:	c5 01       	movw	r24, r10
    ae68:	b4 01       	movw	r22, r8
    ae6a:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    ae6e:	df 91       	pop	r29
    ae70:	cf 91       	pop	r28
    ae72:	ff 90       	pop	r15
    ae74:	ef 90       	pop	r14
    ae76:	df 90       	pop	r13
    ae78:	cf 90       	pop	r12
    ae7a:	bf 90       	pop	r11
    ae7c:	af 90       	pop	r10
    ae7e:	9f 90       	pop	r9
    ae80:	8f 90       	pop	r8
    ae82:	08 95       	ret

0000ae84 <Dusk2Dawn::sunApparentLong(float)>:
_ZN9Dusk2Dawn15sunApparentLongEf():
    ae84:	4f 92       	push	r4
    ae86:	5f 92       	push	r5
    ae88:	6f 92       	push	r6
    ae8a:	7f 92       	push	r7
    ae8c:	8f 92       	push	r8
    ae8e:	9f 92       	push	r9
    ae90:	af 92       	push	r10
    ae92:	bf 92       	push	r11
    ae94:	cf 92       	push	r12
    ae96:	df 92       	push	r13
    ae98:	ef 92       	push	r14
    ae9a:	ff 92       	push	r15
    ae9c:	6a 01       	movw	r12, r20
    ae9e:	7b 01       	movw	r14, r22
    aea0:	0e 94 1b 57 	call	0xae36	; 0xae36 <Dusk2Dawn::sunTrueLong(float)>
    aea4:	2b 01       	movw	r4, r22
    aea6:	3c 01       	movw	r6, r24
    aea8:	2a e5       	ldi	r18, 0x5A	; 90
    aeaa:	34 ec       	ldi	r19, 0xC4	; 196
    aeac:	41 ef       	ldi	r20, 0xF1	; 241
    aeae:	54 e4       	ldi	r21, 0x44	; 68
    aeb0:	c7 01       	movw	r24, r14
    aeb2:	b6 01       	movw	r22, r12
    aeb4:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    aeb8:	9b 01       	movw	r18, r22
    aeba:	ac 01       	movw	r20, r24
    aebc:	6b e7       	ldi	r22, 0x7B	; 123
    aebe:	74 e1       	ldi	r23, 0x14	; 20
    aec0:	8a ef       	ldi	r24, 0xFA	; 250
    aec2:	92 e4       	ldi	r25, 0x42	; 66
    aec4:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
_ZN9Dusk2Dawn8degToRadEf():
    aec8:	2b ed       	ldi	r18, 0xDB	; 219
    aeca:	3f e0       	ldi	r19, 0x0F	; 15
    aecc:	49 e4       	ldi	r20, 0x49	; 73
    aece:	50 e4       	ldi	r21, 0x40	; 64
    aed0:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    aed4:	20 e0       	ldi	r18, 0x00	; 0
    aed6:	30 e0       	ldi	r19, 0x00	; 0
    aed8:	44 e3       	ldi	r20, 0x34	; 52
    aeda:	53 e4       	ldi	r21, 0x43	; 67
    aedc:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
_ZN9Dusk2Dawn15sunApparentLongEf():
    aee0:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    aee4:	4b 01       	movw	r8, r22
    aee6:	5c 01       	movw	r10, r24
    aee8:	2e e2       	ldi	r18, 0x2E	; 46
    aeea:	33 e7       	ldi	r19, 0x73	; 115
    aeec:	4a eb       	ldi	r20, 0xBA	; 186
    aeee:	5b e3       	ldi	r21, 0x3B	; 59
    aef0:	c3 01       	movw	r24, r6
    aef2:	b2 01       	movw	r22, r4
    aef4:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    aef8:	6b 01       	movw	r12, r22
    aefa:	7c 01       	movw	r14, r24
    aefc:	2c e8       	ldi	r18, 0x8C	; 140
    aefe:	31 ea       	ldi	r19, 0xA1	; 161
    af00:	4c e9       	ldi	r20, 0x9C	; 156
    af02:	5b e3       	ldi	r21, 0x3B	; 59
    af04:	c5 01       	movw	r24, r10
    af06:	b4 01       	movw	r22, r8
    af08:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    af0c:	9b 01       	movw	r18, r22
    af0e:	ac 01       	movw	r20, r24
    af10:	c7 01       	movw	r24, r14
    af12:	b6 01       	movw	r22, r12
    af14:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    af18:	ff 90       	pop	r15
    af1a:	ef 90       	pop	r14
    af1c:	df 90       	pop	r13
    af1e:	cf 90       	pop	r12
    af20:	bf 90       	pop	r11
    af22:	af 90       	pop	r10
    af24:	9f 90       	pop	r9
    af26:	8f 90       	pop	r8
    af28:	7f 90       	pop	r7
    af2a:	6f 90       	pop	r6
    af2c:	5f 90       	pop	r5
    af2e:	4f 90       	pop	r4
    af30:	08 95       	ret

0000af32 <Dusk2Dawn::sunDeclination(float)>:
_ZN9Dusk2Dawn14sunDeclinationEf():
    af32:	4f 92       	push	r4
    af34:	5f 92       	push	r5
    af36:	6f 92       	push	r6
    af38:	7f 92       	push	r7
    af3a:	8f 92       	push	r8
    af3c:	9f 92       	push	r9
    af3e:	af 92       	push	r10
    af40:	bf 92       	push	r11
    af42:	cf 92       	push	r12
    af44:	df 92       	push	r13
    af46:	ef 92       	push	r14
    af48:	ff 92       	push	r15
    af4a:	cf 93       	push	r28
    af4c:	df 93       	push	r29
    af4e:	ec 01       	movw	r28, r24
    af50:	6a 01       	movw	r12, r20
    af52:	7b 01       	movw	r14, r22
    af54:	0e 94 90 56 	call	0xad20	; 0xad20 <Dusk2Dawn::obliquityCorrection(float)>
    af58:	2b 01       	movw	r4, r22
    af5a:	3c 01       	movw	r6, r24
    af5c:	b7 01       	movw	r22, r14
    af5e:	a6 01       	movw	r20, r12
    af60:	ce 01       	movw	r24, r28
    af62:	0e 94 42 57 	call	0xae84	; 0xae84 <Dusk2Dawn::sunApparentLong(float)>
    af66:	4b 01       	movw	r8, r22
    af68:	5c 01       	movw	r10, r24
_ZN9Dusk2Dawn8degToRadEf():
    af6a:	2b ed       	ldi	r18, 0xDB	; 219
    af6c:	3f e0       	ldi	r19, 0x0F	; 15
    af6e:	49 e4       	ldi	r20, 0x49	; 73
    af70:	50 e4       	ldi	r21, 0x40	; 64
    af72:	c3 01       	movw	r24, r6
    af74:	b2 01       	movw	r22, r4
    af76:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    af7a:	20 e0       	ldi	r18, 0x00	; 0
    af7c:	30 e0       	ldi	r19, 0x00	; 0
    af7e:	44 e3       	ldi	r20, 0x34	; 52
    af80:	53 e4       	ldi	r21, 0x43	; 67
    af82:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
_ZN9Dusk2Dawn14sunDeclinationEf():
    af86:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    af8a:	6b 01       	movw	r12, r22
    af8c:	7c 01       	movw	r14, r24
_ZN9Dusk2Dawn8degToRadEf():
    af8e:	2b ed       	ldi	r18, 0xDB	; 219
    af90:	3f e0       	ldi	r19, 0x0F	; 15
    af92:	49 e4       	ldi	r20, 0x49	; 73
    af94:	50 e4       	ldi	r21, 0x40	; 64
    af96:	c5 01       	movw	r24, r10
    af98:	b4 01       	movw	r22, r8
    af9a:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    af9e:	20 e0       	ldi	r18, 0x00	; 0
    afa0:	30 e0       	ldi	r19, 0x00	; 0
    afa2:	44 e3       	ldi	r20, 0x34	; 52
    afa4:	53 e4       	ldi	r21, 0x43	; 67
    afa6:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
_ZN9Dusk2Dawn14sunDeclinationEf():
    afaa:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    afae:	9b 01       	movw	r18, r22
    afb0:	ac 01       	movw	r20, r24
    afb2:	c7 01       	movw	r24, r14
    afb4:	b6 01       	movw	r22, r12
    afb6:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    afba:	0e 94 99 6e 	call	0xdd32	; 0xdd32 <asin>
_ZN9Dusk2Dawn8radToDegEf():
    afbe:	20 e0       	ldi	r18, 0x00	; 0
    afc0:	30 e0       	ldi	r19, 0x00	; 0
    afc2:	44 e3       	ldi	r20, 0x34	; 52
    afc4:	53 e4       	ldi	r21, 0x43	; 67
    afc6:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    afca:	2b ed       	ldi	r18, 0xDB	; 219
    afcc:	3f e0       	ldi	r19, 0x0F	; 15
    afce:	49 e4       	ldi	r20, 0x49	; 73
    afd0:	50 e4       	ldi	r21, 0x40	; 64
    afd2:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
_ZN9Dusk2Dawn14sunDeclinationEf():
    afd6:	df 91       	pop	r29
    afd8:	cf 91       	pop	r28
    afda:	ff 90       	pop	r15
    afdc:	ef 90       	pop	r14
    afde:	df 90       	pop	r13
    afe0:	cf 90       	pop	r12
    afe2:	bf 90       	pop	r11
    afe4:	af 90       	pop	r10
    afe6:	9f 90       	pop	r9
    afe8:	8f 90       	pop	r8
    afea:	7f 90       	pop	r7
    afec:	6f 90       	pop	r6
    afee:	5f 90       	pop	r5
    aff0:	4f 90       	pop	r4
    aff2:	08 95       	ret

0000aff4 <Dusk2Dawn::equationOfTime(float)>:
_ZN9Dusk2Dawn14equationOfTimeEf():
    aff4:	4f 92       	push	r4
    aff6:	5f 92       	push	r5
    aff8:	6f 92       	push	r6
    affa:	7f 92       	push	r7
    affc:	8f 92       	push	r8
    affe:	9f 92       	push	r9
    b000:	af 92       	push	r10
    b002:	bf 92       	push	r11
    b004:	cf 92       	push	r12
    b006:	df 92       	push	r13
    b008:	ef 92       	push	r14
    b00a:	ff 92       	push	r15
    b00c:	cf 93       	push	r28
    b00e:	df 93       	push	r29
    b010:	cd b7       	in	r28, 0x3d	; 61
    b012:	de b7       	in	r29, 0x3e	; 62
    b014:	64 97       	sbiw	r28, 0x14	; 20
    b016:	0f b6       	in	r0, 0x3f	; 63
    b018:	f8 94       	cli
    b01a:	de bf       	out	0x3e, r29	; 62
    b01c:	0f be       	out	0x3f, r0	; 63
    b01e:	cd bf       	out	0x3d, r28	; 61
    b020:	5c 01       	movw	r10, r24
    b022:	6a 01       	movw	r12, r20
    b024:	7b 01       	movw	r14, r22
    b026:	0e 94 90 56 	call	0xad20	; 0xad20 <Dusk2Dawn::obliquityCorrection(float)>
    b02a:	2b 01       	movw	r4, r22
    b02c:	3c 01       	movw	r6, r24
    b02e:	b7 01       	movw	r22, r14
    b030:	a6 01       	movw	r20, r12
    b032:	c5 01       	movw	r24, r10
    b034:	0e 94 cf 56 	call	0xad9e	; 0xad9e <Dusk2Dawn::geomMeanLongSun(float)>
    b038:	4b 01       	movw	r8, r22
    b03a:	5c 01       	movw	r10, r24
_ZN9Dusk2Dawn22eccentricityEarthOrbitEf():
    b03c:	28 e0       	ldi	r18, 0x08	; 8
    b03e:	3b e0       	ldi	r19, 0x0B	; 11
    b040:	48 e0       	ldi	r20, 0x08	; 8
    b042:	54 e3       	ldi	r21, 0x34	; 52
    b044:	c7 01       	movw	r24, r14
    b046:	b6 01       	movw	r22, r12
    b048:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b04c:	23 ee       	ldi	r18, 0xE3	; 227
    b04e:	30 e5       	ldi	r19, 0x50	; 80
    b050:	40 e3       	ldi	r20, 0x30	; 48
    b052:	58 e3       	ldi	r21, 0x38	; 56
    b054:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b058:	a7 01       	movw	r20, r14
    b05a:	96 01       	movw	r18, r12
    b05c:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b060:	9b 01       	movw	r18, r22
    b062:	ac 01       	movw	r20, r24
    b064:	6c e8       	ldi	r22, 0x8C	; 140
    b066:	70 ee       	ldi	r23, 0xE0	; 224
    b068:	88 e8       	ldi	r24, 0x88	; 136
    b06a:	9c e3       	ldi	r25, 0x3C	; 60
    b06c:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    b070:	69 83       	std	Y+1, r22	; 0x01
    b072:	7a 83       	std	Y+2, r23	; 0x02
    b074:	8b 83       	std	Y+3, r24	; 0x03
    b076:	9c 83       	std	Y+4, r25	; 0x04
_ZN9Dusk2Dawn8degToRadEf():
    b078:	2b ed       	ldi	r18, 0xDB	; 219
    b07a:	3f e0       	ldi	r19, 0x0F	; 15
    b07c:	49 e4       	ldi	r20, 0x49	; 73
    b07e:	50 e4       	ldi	r21, 0x40	; 64
    b080:	c3 01       	movw	r24, r6
    b082:	b2 01       	movw	r22, r4
    b084:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b088:	20 e0       	ldi	r18, 0x00	; 0
    b08a:	30 e0       	ldi	r19, 0x00	; 0
    b08c:	44 e3       	ldi	r20, 0x34	; 52
    b08e:	53 e4       	ldi	r21, 0x43	; 67
    b090:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
_ZN9Dusk2Dawn14equationOfTimeEf():
    b094:	20 e0       	ldi	r18, 0x00	; 0
    b096:	30 e0       	ldi	r19, 0x00	; 0
    b098:	40 e0       	ldi	r20, 0x00	; 0
    b09a:	5f e3       	ldi	r21, 0x3F	; 63
    b09c:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b0a0:	0e 94 48 72 	call	0xe490	; 0xe490 <tan>
    b0a4:	9b 01       	movw	r18, r22
    b0a6:	ac 01       	movw	r20, r24
    b0a8:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b0ac:	6d 83       	std	Y+5, r22	; 0x05
    b0ae:	7e 83       	std	Y+6, r23	; 0x06
    b0b0:	8f 83       	std	Y+7, r24	; 0x07
    b0b2:	98 87       	std	Y+8, r25	; 0x08
_ZN9Dusk2Dawn8degToRadEf():
    b0b4:	2b ed       	ldi	r18, 0xDB	; 219
    b0b6:	3f e0       	ldi	r19, 0x0F	; 15
    b0b8:	49 e4       	ldi	r20, 0x49	; 73
    b0ba:	50 e4       	ldi	r21, 0x40	; 64
    b0bc:	c5 01       	movw	r24, r10
    b0be:	b4 01       	movw	r22, r8
    b0c0:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b0c4:	20 e0       	ldi	r18, 0x00	; 0
    b0c6:	30 e0       	ldi	r19, 0x00	; 0
    b0c8:	44 e3       	ldi	r20, 0x34	; 52
    b0ca:	53 e4       	ldi	r21, 0x43	; 67
    b0cc:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    b0d0:	4b 01       	movw	r8, r22
    b0d2:	5c 01       	movw	r10, r24
_ZN9Dusk2Dawn14equationOfTimeEf():
    b0d4:	ac 01       	movw	r20, r24
    b0d6:	9b 01       	movw	r18, r22
    b0d8:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b0dc:	2b 01       	movw	r4, r22
    b0de:	3c 01       	movw	r6, r24
    b0e0:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    b0e4:	6d 87       	std	Y+13, r22	; 0x0d
    b0e6:	7e 87       	std	Y+14, r23	; 0x0e
    b0e8:	8f 87       	std	Y+15, r24	; 0x0f
    b0ea:	98 8b       	std	Y+16, r25	; 0x10
_ZN9Dusk2Dawn18geomMeanAnomalySunEf():
    b0ec:	28 e8       	ldi	r18, 0x88	; 136
    b0ee:	3a e2       	ldi	r19, 0x2A	; 42
    b0f0:	41 e2       	ldi	r20, 0x21	; 33
    b0f2:	59 e3       	ldi	r21, 0x39	; 57
    b0f4:	c7 01       	movw	r24, r14
    b0f6:	b6 01       	movw	r22, r12
    b0f8:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b0fc:	9b 01       	movw	r18, r22
    b0fe:	ac 01       	movw	r20, r24
    b100:	6d e0       	ldi	r22, 0x0D	; 13
    b102:	7f e9       	ldi	r23, 0x9F	; 159
    b104:	8c e0       	ldi	r24, 0x0C	; 12
    b106:	97 e4       	ldi	r25, 0x47	; 71
    b108:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    b10c:	a7 01       	movw	r20, r14
    b10e:	96 01       	movw	r18, r12
    b110:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b114:	2a eb       	ldi	r18, 0xBA	; 186
    b116:	33 ec       	ldi	r19, 0xC3	; 195
    b118:	42 eb       	ldi	r20, 0xB2	; 178
    b11a:	53 e4       	ldi	r21, 0x43	; 67
    b11c:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
_ZN9Dusk2Dawn8degToRadEf():
    b120:	2b ed       	ldi	r18, 0xDB	; 219
    b122:	3f e0       	ldi	r19, 0x0F	; 15
    b124:	49 e4       	ldi	r20, 0x49	; 73
    b126:	50 e4       	ldi	r21, 0x40	; 64
    b128:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b12c:	20 e0       	ldi	r18, 0x00	; 0
    b12e:	30 e0       	ldi	r19, 0x00	; 0
    b130:	44 e3       	ldi	r20, 0x34	; 52
    b132:	53 e4       	ldi	r21, 0x43	; 67
    b134:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    b138:	6b 01       	movw	r12, r22
    b13a:	7c 01       	movw	r14, r24
_ZN9Dusk2Dawn14equationOfTimeEf():
    b13c:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    b140:	69 87       	std	Y+9, r22	; 0x09
    b142:	7a 87       	std	Y+10, r23	; 0x0a
    b144:	8b 87       	std	Y+11, r24	; 0x0b
    b146:	9c 87       	std	Y+12, r25	; 0x0c
    b148:	c3 01       	movw	r24, r6
    b14a:	b2 01       	movw	r22, r4
    b14c:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    b150:	69 8b       	std	Y+17, r22	; 0x11
    b152:	7a 8b       	std	Y+18, r23	; 0x12
    b154:	8b 8b       	std	Y+19, r24	; 0x13
    b156:	9c 8b       	std	Y+20, r25	; 0x14
    b158:	20 e0       	ldi	r18, 0x00	; 0
    b15a:	30 e0       	ldi	r19, 0x00	; 0
    b15c:	40 e8       	ldi	r20, 0x80	; 128
    b15e:	50 e4       	ldi	r21, 0x40	; 64
    b160:	c5 01       	movw	r24, r10
    b162:	b4 01       	movw	r22, r8
    b164:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b168:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    b16c:	2b 01       	movw	r4, r22
    b16e:	3c 01       	movw	r6, r24
    b170:	a7 01       	movw	r20, r14
    b172:	96 01       	movw	r18, r12
    b174:	c7 01       	movw	r24, r14
    b176:	b6 01       	movw	r22, r12
    b178:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b17c:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    b180:	4b 01       	movw	r8, r22
    b182:	5c 01       	movw	r10, r24
    b184:	2d 85       	ldd	r18, Y+13	; 0x0d
    b186:	3e 85       	ldd	r19, Y+14	; 0x0e
    b188:	4f 85       	ldd	r20, Y+15	; 0x0f
    b18a:	58 89       	ldd	r21, Y+16	; 0x10
    b18c:	6d 81       	ldd	r22, Y+5	; 0x05
    b18e:	7e 81       	ldd	r23, Y+6	; 0x06
    b190:	8f 81       	ldd	r24, Y+7	; 0x07
    b192:	98 85       	ldd	r25, Y+8	; 0x08
    b194:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b198:	6b 01       	movw	r12, r22
    b19a:	7c 01       	movw	r14, r24
    b19c:	29 81       	ldd	r18, Y+1	; 0x01
    b19e:	3a 81       	ldd	r19, Y+2	; 0x02
    b1a0:	4b 81       	ldd	r20, Y+3	; 0x03
    b1a2:	5c 81       	ldd	r21, Y+4	; 0x04
    b1a4:	ca 01       	movw	r24, r20
    b1a6:	b9 01       	movw	r22, r18
    b1a8:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b1ac:	29 85       	ldd	r18, Y+9	; 0x09
    b1ae:	3a 85       	ldd	r19, Y+10	; 0x0a
    b1b0:	4b 85       	ldd	r20, Y+11	; 0x0b
    b1b2:	5c 85       	ldd	r21, Y+12	; 0x0c
    b1b4:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b1b8:	9b 01       	movw	r18, r22
    b1ba:	ac 01       	movw	r20, r24
    b1bc:	c7 01       	movw	r24, r14
    b1be:	b6 01       	movw	r22, r12
    b1c0:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    b1c4:	6b 01       	movw	r12, r22
    b1c6:	7c 01       	movw	r14, r24
    b1c8:	20 e0       	ldi	r18, 0x00	; 0
    b1ca:	30 e0       	ldi	r19, 0x00	; 0
    b1cc:	40 e8       	ldi	r20, 0x80	; 128
    b1ce:	50 e4       	ldi	r21, 0x40	; 64
    b1d0:	69 81       	ldd	r22, Y+1	; 0x01
    b1d2:	7a 81       	ldd	r23, Y+2	; 0x02
    b1d4:	8b 81       	ldd	r24, Y+3	; 0x03
    b1d6:	9c 81       	ldd	r25, Y+4	; 0x04
    b1d8:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b1dc:	2d 81       	ldd	r18, Y+5	; 0x05
    b1de:	3e 81       	ldd	r19, Y+6	; 0x06
    b1e0:	4f 81       	ldd	r20, Y+7	; 0x07
    b1e2:	58 85       	ldd	r21, Y+8	; 0x08
    b1e4:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b1e8:	29 85       	ldd	r18, Y+9	; 0x09
    b1ea:	3a 85       	ldd	r19, Y+10	; 0x0a
    b1ec:	4b 85       	ldd	r20, Y+11	; 0x0b
    b1ee:	5c 85       	ldd	r21, Y+12	; 0x0c
    b1f0:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b1f4:	29 89       	ldd	r18, Y+17	; 0x11
    b1f6:	3a 89       	ldd	r19, Y+18	; 0x12
    b1f8:	4b 89       	ldd	r20, Y+19	; 0x13
    b1fa:	5c 89       	ldd	r21, Y+20	; 0x14
    b1fc:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b200:	9b 01       	movw	r18, r22
    b202:	ac 01       	movw	r20, r24
    b204:	c7 01       	movw	r24, r14
    b206:	b6 01       	movw	r22, r12
    b208:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b20c:	6b 01       	movw	r12, r22
    b20e:	7c 01       	movw	r14, r24
    b210:	20 e0       	ldi	r18, 0x00	; 0
    b212:	30 e0       	ldi	r19, 0x00	; 0
    b214:	40 e0       	ldi	r20, 0x00	; 0
    b216:	5f e3       	ldi	r21, 0x3F	; 63
    b218:	6d 81       	ldd	r22, Y+5	; 0x05
    b21a:	7e 81       	ldd	r23, Y+6	; 0x06
    b21c:	8f 81       	ldd	r24, Y+7	; 0x07
    b21e:	98 85       	ldd	r25, Y+8	; 0x08
    b220:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b224:	2d 81       	ldd	r18, Y+5	; 0x05
    b226:	3e 81       	ldd	r19, Y+6	; 0x06
    b228:	4f 81       	ldd	r20, Y+7	; 0x07
    b22a:	58 85       	ldd	r21, Y+8	; 0x08
    b22c:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b230:	a3 01       	movw	r20, r6
    b232:	92 01       	movw	r18, r4
    b234:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b238:	9b 01       	movw	r18, r22
    b23a:	ac 01       	movw	r20, r24
    b23c:	c7 01       	movw	r24, r14
    b23e:	b6 01       	movw	r22, r12
    b240:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    b244:	6b 01       	movw	r12, r22
    b246:	7c 01       	movw	r14, r24
    b248:	20 e0       	ldi	r18, 0x00	; 0
    b24a:	30 e0       	ldi	r19, 0x00	; 0
    b24c:	40 ea       	ldi	r20, 0xA0	; 160
    b24e:	5f e3       	ldi	r21, 0x3F	; 63
    b250:	69 81       	ldd	r22, Y+1	; 0x01
    b252:	7a 81       	ldd	r23, Y+2	; 0x02
    b254:	8b 81       	ldd	r24, Y+3	; 0x03
    b256:	9c 81       	ldd	r25, Y+4	; 0x04
    b258:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b25c:	29 81       	ldd	r18, Y+1	; 0x01
    b25e:	3a 81       	ldd	r19, Y+2	; 0x02
    b260:	4b 81       	ldd	r20, Y+3	; 0x03
    b262:	5c 81       	ldd	r21, Y+4	; 0x04
    b264:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b268:	a5 01       	movw	r20, r10
    b26a:	94 01       	movw	r18, r8
    b26c:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b270:	9b 01       	movw	r18, r22
    b272:	ac 01       	movw	r20, r24
    b274:	c7 01       	movw	r24, r14
    b276:	b6 01       	movw	r22, r12
    b278:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
_ZN9Dusk2Dawn8radToDegEf():
    b27c:	20 e0       	ldi	r18, 0x00	; 0
    b27e:	30 e0       	ldi	r19, 0x00	; 0
    b280:	44 e3       	ldi	r20, 0x34	; 52
    b282:	53 e4       	ldi	r21, 0x43	; 67
    b284:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b288:	2b ed       	ldi	r18, 0xDB	; 219
    b28a:	3f e0       	ldi	r19, 0x0F	; 15
    b28c:	49 e4       	ldi	r20, 0x49	; 73
    b28e:	50 e4       	ldi	r21, 0x40	; 64
    b290:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
_ZN9Dusk2Dawn14equationOfTimeEf():
    b294:	20 e0       	ldi	r18, 0x00	; 0
    b296:	30 e0       	ldi	r19, 0x00	; 0
    b298:	40 e8       	ldi	r20, 0x80	; 128
    b29a:	50 e4       	ldi	r21, 0x40	; 64
    b29c:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b2a0:	64 96       	adiw	r28, 0x14	; 20
    b2a2:	0f b6       	in	r0, 0x3f	; 63
    b2a4:	f8 94       	cli
    b2a6:	de bf       	out	0x3e, r29	; 62
    b2a8:	0f be       	out	0x3f, r0	; 63
    b2aa:	cd bf       	out	0x3d, r28	; 61
    b2ac:	df 91       	pop	r29
    b2ae:	cf 91       	pop	r28
    b2b0:	ff 90       	pop	r15
    b2b2:	ef 90       	pop	r14
    b2b4:	df 90       	pop	r13
    b2b6:	cf 90       	pop	r12
    b2b8:	bf 90       	pop	r11
    b2ba:	af 90       	pop	r10
    b2bc:	9f 90       	pop	r9
    b2be:	8f 90       	pop	r8
    b2c0:	7f 90       	pop	r7
    b2c2:	6f 90       	pop	r6
    b2c4:	5f 90       	pop	r5
    b2c6:	4f 90       	pop	r4
    b2c8:	08 95       	ret

0000b2ca <Dusk2Dawn::sunriseSetUTC(bool, float, float, float)>:
_ZN9Dusk2Dawn13sunriseSetUTCEbfff():
    b2ca:	3f 92       	push	r3
    b2cc:	4f 92       	push	r4
    b2ce:	5f 92       	push	r5
    b2d0:	6f 92       	push	r6
    b2d2:	7f 92       	push	r7
    b2d4:	af 92       	push	r10
    b2d6:	bf 92       	push	r11
    b2d8:	cf 92       	push	r12
    b2da:	df 92       	push	r13
    b2dc:	ef 92       	push	r14
    b2de:	ff 92       	push	r15
    b2e0:	0f 93       	push	r16
    b2e2:	1f 93       	push	r17
    b2e4:	cf 93       	push	r28
    b2e6:	df 93       	push	r29
    b2e8:	cd b7       	in	r28, 0x3d	; 61
    b2ea:	de b7       	in	r29, 0x3e	; 62
    b2ec:	2a 97       	sbiw	r28, 0x0a	; 10
    b2ee:	0f b6       	in	r0, 0x3f	; 63
    b2f0:	f8 94       	cli
    b2f2:	de bf       	out	0x3e, r29	; 62
    b2f4:	0f be       	out	0x3f, r0	; 63
    b2f6:	cd bf       	out	0x3d, r28	; 61
    b2f8:	9a 87       	std	Y+10, r25	; 0x0a
    b2fa:	89 87       	std	Y+9, r24	; 0x09
    b2fc:	36 2e       	mov	r3, r22
    b2fe:	ca 01       	movw	r24, r20
    b300:	b9 01       	movw	r22, r18
    b302:	ed 82       	std	Y+5, r14	; 0x05
    b304:	fe 82       	std	Y+6, r15	; 0x06
    b306:	0f 83       	std	Y+7, r16	; 0x07
    b308:	18 87       	std	Y+8, r17	; 0x08
_ZN9Dusk2Dawn17fractionOfCenturyEf():
    b30a:	24 e6       	ldi	r18, 0x64	; 100
    b30c:	31 ea       	ldi	r19, 0xA1	; 161
    b30e:	45 e1       	ldi	r20, 0x15	; 21
    b310:	5a e4       	ldi	r21, 0x4A	; 74
    b312:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    b316:	20 e0       	ldi	r18, 0x00	; 0
    b318:	3d ea       	ldi	r19, 0xAD	; 173
    b31a:	4e e0       	ldi	r20, 0x0E	; 14
    b31c:	57 e4       	ldi	r21, 0x47	; 71
    b31e:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    b322:	2b 01       	movw	r4, r22
    b324:	3c 01       	movw	r6, r24
_ZN9Dusk2Dawn13sunriseSetUTCEbfff():
    b326:	bc 01       	movw	r22, r24
    b328:	a2 01       	movw	r20, r4
    b32a:	89 85       	ldd	r24, Y+9	; 0x09
    b32c:	9a 85       	ldd	r25, Y+10	; 0x0a
    b32e:	0e 94 fa 57 	call	0xaff4	; 0xaff4 <Dusk2Dawn::equationOfTime(float)>
    b332:	69 83       	std	Y+1, r22	; 0x01
    b334:	7a 83       	std	Y+2, r23	; 0x02
    b336:	8b 83       	std	Y+3, r24	; 0x03
    b338:	9c 83       	std	Y+4, r25	; 0x04
    b33a:	b3 01       	movw	r22, r6
    b33c:	a2 01       	movw	r20, r4
    b33e:	89 85       	ldd	r24, Y+9	; 0x09
    b340:	9a 85       	ldd	r25, Y+10	; 0x0a
    b342:	0e 94 99 57 	call	0xaf32	; 0xaf32 <Dusk2Dawn::sunDeclination(float)>
    b346:	8b 01       	movw	r16, r22
    b348:	9c 01       	movw	r18, r24
    b34a:	4d 81       	ldd	r20, Y+5	; 0x05
    b34c:	5e 81       	ldd	r21, Y+6	; 0x06
    b34e:	6f 81       	ldd	r22, Y+7	; 0x07
    b350:	78 85       	ldd	r23, Y+8	; 0x08
    b352:	89 85       	ldd	r24, Y+9	; 0x09
    b354:	9a 85       	ldd	r25, Y+10	; 0x0a
    b356:	0e 94 0d 56 	call	0xac1a	; 0xac1a <Dusk2Dawn::hourAngleSunrise(float, float)>
    b35a:	31 10       	cpse	r3, r1
    b35c:	01 c0       	rjmp	.+2      	; 0xb360 <Dusk2Dawn::sunriseSetUTC(bool, float, float, float)+0x96>
    b35e:	90 58       	subi	r25, 0x80	; 128
_ZN9Dusk2Dawn8radToDegEf():
    b360:	20 e0       	ldi	r18, 0x00	; 0
    b362:	30 e0       	ldi	r19, 0x00	; 0
    b364:	44 e3       	ldi	r20, 0x34	; 52
    b366:	53 e4       	ldi	r21, 0x43	; 67
    b368:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b36c:	2b ed       	ldi	r18, 0xDB	; 219
    b36e:	3f e0       	ldi	r19, 0x0F	; 15
    b370:	49 e4       	ldi	r20, 0x49	; 73
    b372:	50 e4       	ldi	r21, 0x40	; 64
    b374:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
_ZN9Dusk2Dawn13sunriseSetUTCEbfff():
    b378:	a6 01       	movw	r20, r12
    b37a:	95 01       	movw	r18, r10
    b37c:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b380:	20 e0       	ldi	r18, 0x00	; 0
    b382:	30 e0       	ldi	r19, 0x00	; 0
    b384:	40 e8       	ldi	r20, 0x80	; 128
    b386:	50 e4       	ldi	r21, 0x40	; 64
    b388:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b38c:	9b 01       	movw	r18, r22
    b38e:	ac 01       	movw	r20, r24
    b390:	60 e0       	ldi	r22, 0x00	; 0
    b392:	70 e0       	ldi	r23, 0x00	; 0
    b394:	84 e3       	ldi	r24, 0x34	; 52
    b396:	94 e4       	ldi	r25, 0x44	; 68
    b398:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    b39c:	29 81       	ldd	r18, Y+1	; 0x01
    b39e:	3a 81       	ldd	r19, Y+2	; 0x02
    b3a0:	4b 81       	ldd	r20, Y+3	; 0x03
    b3a2:	5c 81       	ldd	r21, Y+4	; 0x04
    b3a4:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    b3a8:	2a 96       	adiw	r28, 0x0a	; 10
    b3aa:	0f b6       	in	r0, 0x3f	; 63
    b3ac:	f8 94       	cli
    b3ae:	de bf       	out	0x3e, r29	; 62
    b3b0:	0f be       	out	0x3f, r0	; 63
    b3b2:	cd bf       	out	0x3d, r28	; 61
    b3b4:	df 91       	pop	r29
    b3b6:	cf 91       	pop	r28
    b3b8:	1f 91       	pop	r17
    b3ba:	0f 91       	pop	r16
    b3bc:	ff 90       	pop	r15
    b3be:	ef 90       	pop	r14
    b3c0:	df 90       	pop	r13
    b3c2:	cf 90       	pop	r12
    b3c4:	bf 90       	pop	r11
    b3c6:	af 90       	pop	r10
    b3c8:	7f 90       	pop	r7
    b3ca:	6f 90       	pop	r6
    b3cc:	5f 90       	pop	r5
    b3ce:	4f 90       	pop	r4
    b3d0:	3f 90       	pop	r3
    b3d2:	08 95       	ret

0000b3d4 <Dusk2Dawn::jDay(int, int, int)>:
_ZN9Dusk2Dawn4jDayEiii():
    b3d4:	4f 92       	push	r4
    b3d6:	5f 92       	push	r5
    b3d8:	6f 92       	push	r6
    b3da:	7f 92       	push	r7
    b3dc:	8f 92       	push	r8
    b3de:	9f 92       	push	r9
    b3e0:	af 92       	push	r10
    b3e2:	bf 92       	push	r11
    b3e4:	cf 92       	push	r12
    b3e6:	df 92       	push	r13
    b3e8:	ef 92       	push	r14
    b3ea:	ff 92       	push	r15
    b3ec:	0f 93       	push	r16
    b3ee:	1f 93       	push	r17
    b3f0:	cf 93       	push	r28
    b3f2:	df 93       	push	r29
    b3f4:	eb 01       	movw	r28, r22
    b3f6:	5a 01       	movw	r10, r20
    b3f8:	89 01       	movw	r16, r18
    b3fa:	43 30       	cpi	r20, 0x03	; 3
    b3fc:	51 05       	cpc	r21, r1
    b3fe:	24 f4       	brge	.+8      	; 0xb408 <Dusk2Dawn::jDay(int, int, int)+0x34>
    b400:	21 97       	sbiw	r28, 0x01	; 1
    b402:	8c e0       	ldi	r24, 0x0C	; 12
    b404:	a8 0e       	add	r10, r24
    b406:	b1 1c       	adc	r11, r1
    b408:	be 01       	movw	r22, r28
    b40a:	64 59       	subi	r22, 0x94	; 148
    b40c:	7d 4e       	sbci	r23, 0xED	; 237
    b40e:	07 2e       	mov	r0, r23
    b410:	00 0c       	add	r0, r0
    b412:	88 0b       	sbc	r24, r24
    b414:	99 0b       	sbc	r25, r25
    b416:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    b41a:	20 e0       	ldi	r18, 0x00	; 0
    b41c:	30 ea       	ldi	r19, 0xA0	; 160
    b41e:	46 eb       	ldi	r20, 0xB6	; 182
    b420:	53 e4       	ldi	r21, 0x43	; 67
    b422:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b426:	0e 94 15 70 	call	0xe02a	; 0xe02a <floor>
    b42a:	6b 01       	movw	r12, r22
    b42c:	7c 01       	movw	r14, r24
    b42e:	b5 01       	movw	r22, r10
    b430:	6f 5f       	subi	r22, 0xFF	; 255
    b432:	7f 4f       	sbci	r23, 0xFF	; 255
    b434:	07 2e       	mov	r0, r23
    b436:	00 0c       	add	r0, r0
    b438:	88 0b       	sbc	r24, r24
    b43a:	99 0b       	sbc	r25, r25
    b43c:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    b440:	21 e0       	ldi	r18, 0x01	; 1
    b442:	3d ec       	ldi	r19, 0xCD	; 205
    b444:	44 ef       	ldi	r20, 0xF4	; 244
    b446:	51 e4       	ldi	r21, 0x41	; 65
    b448:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    b44c:	0e 94 15 70 	call	0xe02a	; 0xe02a <floor>
    b450:	4b 01       	movw	r8, r22
    b452:	5c 01       	movw	r10, r24
    b454:	ce 01       	movw	r24, r28
    b456:	64 e6       	ldi	r22, 0x64	; 100
    b458:	70 e0       	ldi	r23, 0x00	; 0
    b45a:	0e 94 95 72 	call	0xe52a	; 0xe52a <__divmodhi4>
    b45e:	cb 01       	movw	r24, r22
    b460:	62 e0       	ldi	r22, 0x02	; 2
    b462:	70 e0       	ldi	r23, 0x00	; 0
    b464:	68 1b       	sub	r22, r24
    b466:	79 0b       	sbc	r23, r25
    b468:	07 2e       	mov	r0, r23
    b46a:	00 0c       	add	r0, r0
    b46c:	88 0b       	sbc	r24, r24
    b46e:	99 0b       	sbc	r25, r25
    b470:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    b474:	2b 01       	movw	r4, r22
    b476:	3c 01       	movw	r6, r24
    b478:	ce 01       	movw	r24, r28
    b47a:	60 e9       	ldi	r22, 0x90	; 144
    b47c:	71 e0       	ldi	r23, 0x01	; 1
    b47e:	0e 94 95 72 	call	0xe52a	; 0xe52a <__divmodhi4>
    b482:	07 2e       	mov	r0, r23
    b484:	00 0c       	add	r0, r0
    b486:	88 0b       	sbc	r24, r24
    b488:	99 0b       	sbc	r25, r25
    b48a:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    b48e:	9b 01       	movw	r18, r22
    b490:	ac 01       	movw	r20, r24
    b492:	c3 01       	movw	r24, r6
    b494:	b2 01       	movw	r22, r4
    b496:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b49a:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    b49e:	07 2e       	mov	r0, r23
    b4a0:	00 0c       	add	r0, r0
    b4a2:	88 0b       	sbc	r24, r24
    b4a4:	99 0b       	sbc	r25, r25
    b4a6:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    b4aa:	2b 01       	movw	r4, r22
    b4ac:	3c 01       	movw	r6, r24
    b4ae:	a5 01       	movw	r20, r10
    b4b0:	94 01       	movw	r18, r8
    b4b2:	c7 01       	movw	r24, r14
    b4b4:	b6 01       	movw	r22, r12
    b4b6:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b4ba:	6b 01       	movw	r12, r22
    b4bc:	7c 01       	movw	r14, r24
    b4be:	b8 01       	movw	r22, r16
    b4c0:	11 0f       	add	r17, r17
    b4c2:	88 0b       	sbc	r24, r24
    b4c4:	99 0b       	sbc	r25, r25
    b4c6:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    b4ca:	9b 01       	movw	r18, r22
    b4cc:	ac 01       	movw	r20, r24
    b4ce:	c7 01       	movw	r24, r14
    b4d0:	b6 01       	movw	r22, r12
    b4d2:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b4d6:	9b 01       	movw	r18, r22
    b4d8:	ac 01       	movw	r20, r24
    b4da:	c3 01       	movw	r24, r6
    b4dc:	b2 01       	movw	r22, r4
    b4de:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b4e2:	20 e0       	ldi	r18, 0x00	; 0
    b4e4:	30 e9       	ldi	r19, 0x90	; 144
    b4e6:	4e eb       	ldi	r20, 0xBE	; 190
    b4e8:	54 e4       	ldi	r21, 0x44	; 68
    b4ea:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    b4ee:	df 91       	pop	r29
    b4f0:	cf 91       	pop	r28
    b4f2:	1f 91       	pop	r17
    b4f4:	0f 91       	pop	r16
    b4f6:	ff 90       	pop	r15
    b4f8:	ef 90       	pop	r14
    b4fa:	df 90       	pop	r13
    b4fc:	cf 90       	pop	r12
    b4fe:	bf 90       	pop	r11
    b500:	af 90       	pop	r10
    b502:	9f 90       	pop	r9
    b504:	8f 90       	pop	r8
    b506:	7f 90       	pop	r7
    b508:	6f 90       	pop	r6
    b50a:	5f 90       	pop	r5
    b50c:	4f 90       	pop	r4
    b50e:	08 95       	ret

0000b510 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)>:
_ZN9Dusk2Dawn10sunriseSetEbiiib():
    b510:	4f 92       	push	r4
    b512:	5f 92       	push	r5
    b514:	6f 92       	push	r6
    b516:	7f 92       	push	r7
    b518:	8f 92       	push	r8
    b51a:	9f 92       	push	r9
    b51c:	af 92       	push	r10
    b51e:	bf 92       	push	r11
    b520:	cf 92       	push	r12
    b522:	df 92       	push	r13
    b524:	ef 92       	push	r14
    b526:	ff 92       	push	r15
    b528:	0f 93       	push	r16
    b52a:	1f 93       	push	r17
    b52c:	cf 93       	push	r28
    b52e:	df 93       	push	r29
    b530:	cd b7       	in	r28, 0x3d	; 61
    b532:	de b7       	in	r29, 0x3e	; 62
    b534:	2a 97       	sbiw	r28, 0x0a	; 10
    b536:	0f b6       	in	r0, 0x3f	; 63
    b538:	f8 94       	cli
    b53a:	de bf       	out	0x3e, r29	; 62
    b53c:	0f be       	out	0x3f, r0	; 63
    b53e:	cd bf       	out	0x3d, r28	; 61
    b540:	4c 01       	movw	r8, r24
    b542:	69 87       	std	Y+9, r22	; 0x09
    b544:	ba 01       	movw	r22, r20
    b546:	a9 01       	movw	r20, r18
    b548:	98 01       	movw	r18, r16
    b54a:	ea 86       	std	Y+10, r14	; 0x0a
    b54c:	0e 94 ea 59 	call	0xb3d4	; 0xb3d4 <Dusk2Dawn::jDay(int, int, int)>
    b550:	6d 83       	std	Y+5, r22	; 0x05
    b552:	7e 83       	std	Y+6, r23	; 0x06
    b554:	8f 83       	std	Y+7, r24	; 0x07
    b556:	98 87       	std	Y+8, r25	; 0x08
    b558:	d4 01       	movw	r26, r8
    b55a:	14 96       	adiw	r26, 0x04	; 4
    b55c:	4d 90       	ld	r4, X+
    b55e:	5d 90       	ld	r5, X+
    b560:	6d 90       	ld	r6, X+
    b562:	7c 90       	ld	r7, X
    b564:	17 97       	sbiw	r26, 0x07	; 7
    b566:	8d 91       	ld	r24, X+
    b568:	9d 91       	ld	r25, X+
    b56a:	0d 90       	ld	r0, X+
    b56c:	bc 91       	ld	r27, X
    b56e:	a0 2d       	mov	r26, r0
    b570:	89 83       	std	Y+1, r24	; 0x01
    b572:	9a 83       	std	Y+2, r25	; 0x02
    b574:	ab 83       	std	Y+3, r26	; 0x03
    b576:	bc 83       	std	Y+4, r27	; 0x04
    b578:	63 01       	movw	r12, r6
    b57a:	52 01       	movw	r10, r4
    b57c:	7c 01       	movw	r14, r24
    b57e:	8d 01       	movw	r16, r26
    b580:	2d 81       	ldd	r18, Y+5	; 0x05
    b582:	3e 81       	ldd	r19, Y+6	; 0x06
    b584:	4f 81       	ldd	r20, Y+7	; 0x07
    b586:	58 85       	ldd	r21, Y+8	; 0x08
    b588:	69 85       	ldd	r22, Y+9	; 0x09
    b58a:	c4 01       	movw	r24, r8
    b58c:	0e 94 65 59 	call	0xb2ca	; 0xb2ca <Dusk2Dawn::sunriseSetUTC(bool, float, float, float)>
    b590:	20 e0       	ldi	r18, 0x00	; 0
    b592:	30 e0       	ldi	r19, 0x00	; 0
    b594:	44 eb       	ldi	r20, 0xB4	; 180
    b596:	54 e4       	ldi	r21, 0x44	; 68
    b598:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    b59c:	2d 81       	ldd	r18, Y+5	; 0x05
    b59e:	3e 81       	ldd	r19, Y+6	; 0x06
    b5a0:	4f 81       	ldd	r20, Y+7	; 0x07
    b5a2:	58 85       	ldd	r21, Y+8	; 0x08
    b5a4:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b5a8:	9b 01       	movw	r18, r22
    b5aa:	ac 01       	movw	r20, r24
    b5ac:	e9 80       	ldd	r14, Y+1	; 0x01
    b5ae:	fa 80       	ldd	r15, Y+2	; 0x02
    b5b0:	0b 81       	ldd	r16, Y+3	; 0x03
    b5b2:	1c 81       	ldd	r17, Y+4	; 0x04
    b5b4:	69 85       	ldd	r22, Y+9	; 0x09
    b5b6:	c4 01       	movw	r24, r8
    b5b8:	0e 94 65 59 	call	0xb2ca	; 0xb2ca <Dusk2Dawn::sunriseSetUTC(bool, float, float, float)>
    b5bc:	2b 01       	movw	r4, r22
    b5be:	3c 01       	movw	r6, r24
    b5c0:	ac 01       	movw	r20, r24
    b5c2:	9b 01       	movw	r18, r22
    b5c4:	0e 94 6d 72 	call	0xe4da	; 0xe4da <__unordsf2>
    b5c8:	81 11       	cpse	r24, r1
    b5ca:	4b c0       	rjmp	.+150    	; 0xb662 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)+0x152>
    b5cc:	f4 01       	movw	r30, r8
    b5ce:	80 85       	ldd	r24, Z+8	; 0x08
    b5d0:	91 85       	ldd	r25, Z+9	; 0x09
    b5d2:	2c e3       	ldi	r18, 0x3C	; 60
    b5d4:	28 9f       	mul	r18, r24
    b5d6:	b0 01       	movw	r22, r0
    b5d8:	29 9f       	mul	r18, r25
    b5da:	70 0d       	add	r23, r0
    b5dc:	11 24       	eor	r1, r1
    b5de:	07 2e       	mov	r0, r23
    b5e0:	00 0c       	add	r0, r0
    b5e2:	88 0b       	sbc	r24, r24
    b5e4:	99 0b       	sbc	r25, r25
    b5e6:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    b5ea:	a3 01       	movw	r20, r6
    b5ec:	92 01       	movw	r18, r4
    b5ee:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b5f2:	2b 01       	movw	r4, r22
    b5f4:	3c 01       	movw	r6, r24
    b5f6:	20 e0       	ldi	r18, 0x00	; 0
    b5f8:	30 e0       	ldi	r19, 0x00	; 0
    b5fa:	a9 01       	movw	r20, r18
    b5fc:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    b600:	20 e0       	ldi	r18, 0x00	; 0
    b602:	30 e0       	ldi	r19, 0x00	; 0
    b604:	40 e0       	ldi	r20, 0x00	; 0
    b606:	5f e3       	ldi	r21, 0x3F	; 63
    b608:	87 fd       	sbrc	r24, 7
    b60a:	26 c0       	rjmp	.+76     	; 0xb658 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)+0x148>
    b60c:	c3 01       	movw	r24, r6
    b60e:	b2 01       	movw	r22, r4
    b610:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b614:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    b618:	fa 85       	ldd	r31, Y+10	; 0x0a
    b61a:	90 e0       	ldi	r25, 0x00	; 0
    b61c:	80 e0       	ldi	r24, 0x00	; 0
    b61e:	ff 23       	and	r31, r31
    b620:	11 f0       	breq	.+4      	; 0xb626 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)+0x116>
    b622:	8c e3       	ldi	r24, 0x3C	; 60
    b624:	90 e0       	ldi	r25, 0x00	; 0
    b626:	86 0f       	add	r24, r22
    b628:	97 1f       	adc	r25, r23
    b62a:	2a 96       	adiw	r28, 0x0a	; 10
    b62c:	0f b6       	in	r0, 0x3f	; 63
    b62e:	f8 94       	cli
    b630:	de bf       	out	0x3e, r29	; 62
    b632:	0f be       	out	0x3f, r0	; 63
    b634:	cd bf       	out	0x3d, r28	; 61
    b636:	df 91       	pop	r29
    b638:	cf 91       	pop	r28
    b63a:	1f 91       	pop	r17
    b63c:	0f 91       	pop	r16
    b63e:	ff 90       	pop	r15
    b640:	ef 90       	pop	r14
    b642:	df 90       	pop	r13
    b644:	cf 90       	pop	r12
    b646:	bf 90       	pop	r11
    b648:	af 90       	pop	r10
    b64a:	9f 90       	pop	r9
    b64c:	8f 90       	pop	r8
    b64e:	7f 90       	pop	r7
    b650:	6f 90       	pop	r6
    b652:	5f 90       	pop	r5
    b654:	4f 90       	pop	r4
    b656:	08 95       	ret
    b658:	c3 01       	movw	r24, r6
    b65a:	b2 01       	movw	r22, r4
    b65c:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    b660:	d9 cf       	rjmp	.-78     	; 0xb614 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)+0x104>
    b662:	8f ef       	ldi	r24, 0xFF	; 255
    b664:	9f ef       	ldi	r25, 0xFF	; 255
    b666:	e1 cf       	rjmp	.-62     	; 0xb62a <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)+0x11a>

0000b668 <Dusk2Dawn::sunrise(int, int, int, bool)>:
_ZN9Dusk2Dawn7sunriseEiiib():
    b668:	ef 92       	push	r14
    b66a:	0f 93       	push	r16
    b66c:	1f 93       	push	r17
    b66e:	e0 2e       	mov	r14, r16
    b670:	89 01       	movw	r16, r18
    b672:	9a 01       	movw	r18, r20
    b674:	ab 01       	movw	r20, r22
    b676:	61 e0       	ldi	r22, 0x01	; 1
    b678:	0e 94 88 5a 	call	0xb510	; 0xb510 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)>
    b67c:	1f 91       	pop	r17
    b67e:	0f 91       	pop	r16
    b680:	ef 90       	pop	r14
    b682:	08 95       	ret

0000b684 <Dusk2Dawn::sunset(int, int, int, bool)>:
_ZN9Dusk2Dawn6sunsetEiiib():
    b684:	ef 92       	push	r14
    b686:	0f 93       	push	r16
    b688:	1f 93       	push	r17
    b68a:	e0 2e       	mov	r14, r16
    b68c:	89 01       	movw	r16, r18
    b68e:	9a 01       	movw	r18, r20
    b690:	ab 01       	movw	r20, r22
    b692:	60 e0       	ldi	r22, 0x00	; 0
    b694:	0e 94 88 5a 	call	0xb510	; 0xb510 <Dusk2Dawn::sunriseSet(bool, int, int, int, bool)>
    b698:	1f 91       	pop	r17
    b69a:	0f 91       	pop	r16
    b69c:	ef 90       	pop	r14
    b69e:	08 95       	ret

0000b6a0 <Dusk2Dawn::zeroPadTime(char*, unsigned char)>:
_ZN9Dusk2Dawn11zeroPadTimeEPch():
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:293

/* Zero-pad a component of time, e.g. 1 → "01", 24 → "24".
 *
 * NOTE: Supports integers of up to only two digits.
 */
bool Dusk2Dawn::zeroPadTime(char *str, byte timeComponent) {
    b6a0:	1f 93       	push	r17
    b6a2:	cf 93       	push	r28
    b6a4:	df 93       	push	r29
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:294
  if (timeComponent >= 100) { return false; }
    b6a6:	64 36       	cpi	r22, 0x64	; 100
    b6a8:	e0 f4       	brcc	.+56     	; 0xb6e2 <Dusk2Dawn::zeroPadTime(char*, unsigned char)+0x42>
    b6aa:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:296

  str[0] = (floor(timeComponent / 10)) + '0';
    b6ac:	86 2f       	mov	r24, r22
    b6ae:	6a e0       	ldi	r22, 0x0A	; 10
    b6b0:	0e 94 89 72 	call	0xe512	; 0xe512 <__udivmodqi4>
    b6b4:	19 2f       	mov	r17, r25
    b6b6:	68 2f       	mov	r22, r24
    b6b8:	70 e0       	ldi	r23, 0x00	; 0
    b6ba:	90 e0       	ldi	r25, 0x00	; 0
    b6bc:	80 e0       	ldi	r24, 0x00	; 0
    b6be:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    b6c2:	20 e0       	ldi	r18, 0x00	; 0
    b6c4:	30 e0       	ldi	r19, 0x00	; 0
    b6c6:	40 e4       	ldi	r20, 0x40	; 64
    b6c8:	52 e4       	ldi	r21, 0x42	; 66
    b6ca:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    b6ce:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    b6d2:	68 83       	st	Y, r22
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:297
  str[1] = (timeComponent % 10) + '0';
    b6d4:	10 5d       	subi	r17, 0xD0	; 208
    b6d6:	19 83       	std	Y+1, r17	; 0x01
    b6d8:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:299
  return true;
}
    b6da:	df 91       	pop	r29
    b6dc:	cf 91       	pop	r28
    b6de:	1f 91       	pop	r17
    b6e0:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:294
/* Zero-pad a component of time, e.g. 1 → "01", 24 → "24".
 *
 * NOTE: Supports integers of up to only two digits.
 */
bool Dusk2Dawn::zeroPadTime(char *str, byte timeComponent) {
  if (timeComponent >= 100) { return false; }
    b6e2:	80 e0       	ldi	r24, 0x00	; 0
    b6e4:	fa cf       	rjmp	.-12     	; 0xb6da <Dusk2Dawn::zeroPadTime(char*, unsigned char)+0x3a>

0000b6e6 <Dusk2Dawn::min2str(char*, int)>:
_ZN9Dusk2Dawn7min2strEPci():
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:52
 * sunrise and sunset, the solar noon can be calculated, at which point it can
 * be converted to a 24-hour clock format.
 *
 * String classes are avoided to keep memory use to a minimum.
 */
bool Dusk2Dawn::min2str(char *str, int minutes) {
    b6e6:	4f 92       	push	r4
    b6e8:	5f 92       	push	r5
    b6ea:	6f 92       	push	r6
    b6ec:	7f 92       	push	r7
    b6ee:	8f 92       	push	r8
    b6f0:	9f 92       	push	r9
    b6f2:	af 92       	push	r10
    b6f4:	bf 92       	push	r11
    b6f6:	cf 92       	push	r12
    b6f8:	df 92       	push	r13
    b6fa:	ef 92       	push	r14
    b6fc:	ff 92       	push	r15
    b6fe:	0f 93       	push	r16
    b700:	1f 93       	push	r17
    b702:	cf 93       	push	r28
    b704:	df 93       	push	r29
    b706:	00 d0       	rcall	.+0      	; 0xb708 <Dusk2Dawn::min2str(char*, int)+0x22>
    b708:	00 d0       	rcall	.+0      	; 0xb70a <Dusk2Dawn::min2str(char*, int)+0x24>
    b70a:	00 d0       	rcall	.+0      	; 0xb70c <Dusk2Dawn::min2str(char*, int)+0x26>
    b70c:	cd b7       	in	r28, 0x3d	; 61
    b70e:	de b7       	in	r29, 0x3e	; 62
    b710:	8c 01       	movw	r16, r24
    b712:	6b 01       	movw	r12, r22
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:59

  if (minutes < 0 || minutes >= 1440) {
    isError = true;
  }

   float floatHour   = minutes / 60.0;
    b714:	07 2e       	mov	r0, r23
    b716:	00 0c       	add	r0, r0
    b718:	88 0b       	sbc	r24, r24
    b71a:	99 0b       	sbc	r25, r25
    b71c:	0e 94 da 6f 	call	0xdfb4	; 0xdfb4 <__floatsisf>
    b720:	20 e0       	ldi	r18, 0x00	; 0
    b722:	30 e0       	ldi	r19, 0x00	; 0
    b724:	40 e7       	ldi	r20, 0x70	; 112
    b726:	52 e4       	ldi	r21, 0x42	; 66
    b728:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    b72c:	4b 01       	movw	r8, r22
    b72e:	5c 01       	movw	r10, r24
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:60
   float floatMinute = 60.0 * (floatHour - floor(floatHour));
    b730:	0e 94 15 70 	call	0xe02a	; 0xe02a <floor>
    b734:	2b 01       	movw	r4, r22
    b736:	3c 01       	movw	r6, r24
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:61
   byte  byteHour    = (byte) floatHour;
    b738:	c5 01       	movw	r24, r10
    b73a:	b4 01       	movw	r22, r8
    b73c:	0e 94 a9 6f 	call	0xdf52	; 0xdf52 <__fixunssfsi>
    b740:	e6 2e       	mov	r14, r22
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:60
  if (minutes < 0 || minutes >= 1440) {
    isError = true;
  }

   float floatHour   = minutes / 60.0;
   float floatMinute = 60.0 * (floatHour - floor(floatHour));
    b742:	a3 01       	movw	r20, r6
    b744:	92 01       	movw	r18, r4
    b746:	c5 01       	movw	r24, r10
    b748:	b4 01       	movw	r22, r8
    b74a:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    b74e:	20 e0       	ldi	r18, 0x00	; 0
    b750:	30 e0       	ldi	r19, 0x00	; 0
    b752:	40 e7       	ldi	r20, 0x70	; 112
    b754:	52 e4       	ldi	r21, 0x42	; 66
    b756:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:62
   byte  byteHour    = (byte) floatHour;
   byte  byteMinute  = (byte) floatMinute;
    b75a:	0e 94 a9 6f 	call	0xdf52	; 0xdf52 <__fixunssfsi>
    b75e:	f6 2e       	mov	r15, r22
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:64

   if (byteMinute > 59) {
    b760:	8b e3       	ldi	r24, 0x3B	; 59
    b762:	8f 15       	cp	r24, r15
    b764:	10 f4       	brcc	.+4      	; 0xb76a <Dusk2Dawn::min2str(char*, int)+0x84>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:65
     byteHour   += 1;
    b766:	e3 94       	inc	r14
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:66
     byteMinute  = 0;
    b768:	f1 2c       	mov	r15, r1
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:69
   }

   char strHour[]   = "00";
    b76a:	80 91 79 02 	lds	r24, 0x0279	; 0x800279 <vtable for TwoWire+0x12>
    b76e:	90 91 7a 02 	lds	r25, 0x027A	; 0x80027a <vtable for TwoWire+0x13>
    b772:	a0 91 7b 02 	lds	r26, 0x027B	; 0x80027b <vtable for TwoWire+0x14>
    b776:	8c 83       	std	Y+4, r24	; 0x04
    b778:	9d 83       	std	Y+5, r25	; 0x05
    b77a:	ae 83       	std	Y+6, r26	; 0x06
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:70
   char strMinute[] = "00";
    b77c:	89 83       	std	Y+1, r24	; 0x01
    b77e:	9a 83       	std	Y+2, r25	; 0x02
    b780:	ab 83       	std	Y+3, r26	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:73

   // In case of an error, keep passing it down.
   isError = isError ? isError : !zeroPadTime(strHour, byteHour);
    b782:	e0 ea       	ldi	r30, 0xA0	; 160
    b784:	ce 16       	cp	r12, r30
    b786:	e5 e0       	ldi	r30, 0x05	; 5
    b788:	de 06       	cpc	r13, r30
    b78a:	88 f5       	brcc	.+98     	; 0xb7ee <Dusk2Dawn::min2str(char*, int)+0x108>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:73 (discriminator 2)
    b78c:	6e 2d       	mov	r22, r14
    b78e:	ce 01       	movw	r24, r28
    b790:	04 96       	adiw	r24, 0x04	; 4
    b792:	0e 94 50 5b 	call	0xb6a0	; 0xb6a0 <Dusk2Dawn::zeroPadTime(char*, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:74 (discriminator 2)
   isError = isError ? isError : !zeroPadTime(strMinute, byteMinute);
    b796:	88 23       	and	r24, r24
    b798:	51 f1       	breq	.+84     	; 0xb7ee <Dusk2Dawn::min2str(char*, int)+0x108>
    b79a:	6f 2d       	mov	r22, r15
    b79c:	ce 01       	movw	r24, r28
    b79e:	01 96       	adiw	r24, 0x01	; 1
    b7a0:	0e 94 50 5b 	call	0xb6a0	; 0xb6a0 <Dusk2Dawn::zeroPadTime(char*, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:77 (discriminator 2)

   // This is fugly but I can't think of a better way....
   if (!isError) {
    b7a4:	88 23       	and	r24, r24
    b7a6:	19 f1       	breq	.+70     	; 0xb7ee <Dusk2Dawn::min2str(char*, int)+0x108>
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:78
     str[0] = strHour[0];
    b7a8:	9c 81       	ldd	r25, Y+4	; 0x04
    b7aa:	f8 01       	movw	r30, r16
    b7ac:	90 83       	st	Z, r25
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:79
     str[1] = strHour[1];
    b7ae:	9d 81       	ldd	r25, Y+5	; 0x05
    b7b0:	91 83       	std	Z+1, r25	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:80
     str[2] = ':';
    b7b2:	9a e3       	ldi	r25, 0x3A	; 58
    b7b4:	92 83       	std	Z+2, r25	; 0x02
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:81
     str[3] = strMinute[0];
    b7b6:	99 81       	ldd	r25, Y+1	; 0x01
    b7b8:	93 83       	std	Z+3, r25	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:82
     str[4] = strMinute[1];
    b7ba:	9a 81       	ldd	r25, Y+2	; 0x02
    b7bc:	94 83       	std	Z+4, r25	; 0x04
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:83
     str[5] = '\0';
    b7be:	15 82       	std	Z+5, r1	; 0x05
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:94
     str[4] = 'R';
     str[5] = '\0';
   }

   return !isError;
}
    b7c0:	26 96       	adiw	r28, 0x06	; 6
    b7c2:	0f b6       	in	r0, 0x3f	; 63
    b7c4:	f8 94       	cli
    b7c6:	de bf       	out	0x3e, r29	; 62
    b7c8:	0f be       	out	0x3f, r0	; 63
    b7ca:	cd bf       	out	0x3d, r28	; 61
    b7cc:	df 91       	pop	r29
    b7ce:	cf 91       	pop	r28
    b7d0:	1f 91       	pop	r17
    b7d2:	0f 91       	pop	r16
    b7d4:	ff 90       	pop	r15
    b7d6:	ef 90       	pop	r14
    b7d8:	df 90       	pop	r13
    b7da:	cf 90       	pop	r12
    b7dc:	bf 90       	pop	r11
    b7de:	af 90       	pop	r10
    b7e0:	9f 90       	pop	r9
    b7e2:	8f 90       	pop	r8
    b7e4:	7f 90       	pop	r7
    b7e6:	6f 90       	pop	r6
    b7e8:	5f 90       	pop	r5
    b7ea:	4f 90       	pop	r4
    b7ec:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:85
     str[2] = ':';
     str[3] = strMinute[0];
     str[4] = strMinute[1];
     str[5] = '\0';
   } else {
     str[0] = 'E';
    b7ee:	85 e4       	ldi	r24, 0x45	; 69
    b7f0:	f8 01       	movw	r30, r16
    b7f2:	80 83       	st	Z, r24
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:86
     str[1] = 'R';
    b7f4:	82 e5       	ldi	r24, 0x52	; 82
    b7f6:	81 83       	std	Z+1, r24	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:87
     str[2] = 'R';
    b7f8:	82 83       	std	Z+2, r24	; 0x02
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:88
     str[3] = 'O';
    b7fa:	9f e4       	ldi	r25, 0x4F	; 79
    b7fc:	93 83       	std	Z+3, r25	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:89
     str[4] = 'R';
    b7fe:	84 83       	std	Z+4, r24	; 0x04
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:90
     str[5] = '\0';
    b800:	15 82       	std	Z+5, r1	; 0x05
    b802:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\Dusk2Dawn/Dusk2Dawn.cpp:93
   }

   return !isError;
    b804:	dd cf       	rjmp	.-70     	; 0xb7c0 <Dusk2Dawn::min2str(char*, int)+0xda>

0000b806 <LSM303::LSM303()>:
_ZN6LSM303C2Ev():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:337
  {
    return readMagReg(reg);
  }
  else
  {
    return readAccReg(reg);
    b806:	cf 93       	push	r28
    b808:	df 93       	push	r29
    b80a:	ec 01       	movw	r28, r24
    b80c:	86 e0       	ldi	r24, 0x06	; 6
    b80e:	e9 ed       	ldi	r30, 0xD9	; 217
    b810:	f1 e0       	ldi	r31, 0x01	; 1
    b812:	de 01       	movw	r26, r28
    b814:	52 96       	adiw	r26, 0x12	; 18
    b816:	01 90       	ld	r0, Z+
    b818:	0d 92       	st	X+, r0
    b81a:	8a 95       	dec	r24
    b81c:	e1 f7       	brne	.-8      	; 0xb816 <LSM303::LSM303()+0x10>
    b81e:	86 e0       	ldi	r24, 0x06	; 6
    b820:	ef ed       	ldi	r30, 0xDF	; 223
    b822:	f1 e0       	ldi	r31, 0x01	; 1
    b824:	de 01       	movw	r26, r28
    b826:	1c 96       	adiw	r26, 0x0c	; 12
    b828:	01 90       	ld	r0, Z+
    b82a:	0d 92       	st	X+, r0
    b82c:	8a 95       	dec	r24
    b82e:	e1 f7       	brne	.-8      	; 0xb828 <LSM303::LSM303()+0x22>
    b830:	84 e0       	ldi	r24, 0x04	; 4
    b832:	90 e0       	ldi	r25, 0x00	; 0
    b834:	9a 8f       	std	Y+26, r25	; 0x1a
    b836:	89 8f       	std	Y+25, r24	; 0x19
    b838:	1c a6       	std	Y+44, r1	; 0x2c
    b83a:	1b a6       	std	Y+43, r1	; 0x2b
    b83c:	1d a6       	std	Y+45, r1	; 0x2d
    b83e:	df 91       	pop	r29
    b840:	cf 91       	pop	r28
    b842:	08 95       	ret

0000b844 <LSM303::writeAccReg(unsigned char, unsigned char)>:
_ZN6LSM30311writeAccRegEhh():
    b844:	0f 93       	push	r16
    b846:	1f 93       	push	r17
    b848:	cf 93       	push	r28
    b84a:	df 93       	push	r29
    b84c:	ec 01       	movw	r28, r24
    b84e:	06 2f       	mov	r16, r22
    b850:	14 2f       	mov	r17, r20
    b852:	6b 8d       	ldd	r22, Y+27	; 0x1b
    b854:	83 ea       	ldi	r24, 0xA3	; 163
    b856:	99 e0       	ldi	r25, 0x09	; 9
    b858:	0e 94 1f 52 	call	0xa43e	; 0xa43e <TwoWire::beginTransmission(unsigned char)>
    b85c:	60 2f       	mov	r22, r16
    b85e:	83 ea       	ldi	r24, 0xA3	; 163
    b860:	99 e0       	ldi	r25, 0x09	; 9
    b862:	0e 94 ad 51 	call	0xa35a	; 0xa35a <TwoWire::write(unsigned char)>
    b866:	61 2f       	mov	r22, r17
    b868:	83 ea       	ldi	r24, 0xA3	; 163
    b86a:	99 e0       	ldi	r25, 0x09	; 9
    b86c:	0e 94 ad 51 	call	0xa35a	; 0xa35a <TwoWire::write(unsigned char)>
    b870:	83 ea       	ldi	r24, 0xA3	; 163
    b872:	99 e0       	ldi	r25, 0x09	; 9
    b874:	0e 94 a4 52 	call	0xa548	; 0xa548 <TwoWire::endTransmission()>
    b878:	88 8f       	std	Y+24, r24	; 0x18
    b87a:	df 91       	pop	r29
    b87c:	cf 91       	pop	r28
    b87e:	1f 91       	pop	r17
    b880:	0f 91       	pop	r16
    b882:	08 95       	ret

0000b884 <LSM303::writeMagReg(unsigned char, unsigned char)>:
_ZN6LSM30311writeMagRegEhh():
    b884:	0f 93       	push	r16
    b886:	1f 93       	push	r17
    b888:	cf 93       	push	r28
    b88a:	df 93       	push	r29
    b88c:	ec 01       	movw	r28, r24
    b88e:	06 2f       	mov	r16, r22
    b890:	14 2f       	mov	r17, r20
    b892:	6c 8d       	ldd	r22, Y+28	; 0x1c
    b894:	83 ea       	ldi	r24, 0xA3	; 163
    b896:	99 e0       	ldi	r25, 0x09	; 9
    b898:	0e 94 1f 52 	call	0xa43e	; 0xa43e <TwoWire::beginTransmission(unsigned char)>
    b89c:	60 2f       	mov	r22, r16
    b89e:	83 ea       	ldi	r24, 0xA3	; 163
    b8a0:	99 e0       	ldi	r25, 0x09	; 9
    b8a2:	0e 94 ad 51 	call	0xa35a	; 0xa35a <TwoWire::write(unsigned char)>
    b8a6:	61 2f       	mov	r22, r17
    b8a8:	83 ea       	ldi	r24, 0xA3	; 163
    b8aa:	99 e0       	ldi	r25, 0x09	; 9
    b8ac:	0e 94 ad 51 	call	0xa35a	; 0xa35a <TwoWire::write(unsigned char)>
    b8b0:	83 ea       	ldi	r24, 0xA3	; 163
    b8b2:	99 e0       	ldi	r25, 0x09	; 9
    b8b4:	0e 94 a4 52 	call	0xa548	; 0xa548 <TwoWire::endTransmission()>
    b8b8:	88 8f       	std	Y+24, r24	; 0x18
    b8ba:	df 91       	pop	r29
    b8bc:	cf 91       	pop	r28
    b8be:	1f 91       	pop	r17
    b8c0:	0f 91       	pop	r16
    b8c2:	08 95       	ret

0000b8c4 <LSM303::writeReg(unsigned char, unsigned char)>:
_ZN6LSM3038writeRegEhh():
    b8c4:	fc 01       	movw	r30, r24
    b8c6:	21 8d       	ldd	r18, Z+25	; 0x19
    b8c8:	32 8d       	ldd	r19, Z+26	; 0x1a
    b8ca:	23 30       	cpi	r18, 0x03	; 3
    b8cc:	31 05       	cpc	r19, r1
    b8ce:	11 f0       	breq	.+4      	; 0xb8d4 <LSM303::writeReg(unsigned char, unsigned char)+0x10>
    b8d0:	60 32       	cpi	r22, 0x20	; 32
    b8d2:	10 f4       	brcc	.+4      	; 0xb8d8 <LSM303::writeReg(unsigned char, unsigned char)+0x14>
    b8d4:	0c 94 42 5c 	jmp	0xb884	; 0xb884 <LSM303::writeMagReg(unsigned char, unsigned char)>
    b8d8:	0c 94 22 5c 	jmp	0xb844	; 0xb844 <LSM303::writeAccReg(unsigned char, unsigned char)>

0000b8dc <LSM303::enableDefault()>:
_ZN6LSM30313enableDefaultEv():
    b8dc:	cf 93       	push	r28
    b8de:	df 93       	push	r29
    b8e0:	ec 01       	movw	r28, r24
    b8e2:	89 8d       	ldd	r24, Y+25	; 0x19
    b8e4:	9a 8d       	ldd	r25, Y+26	; 0x1a
    b8e6:	83 30       	cpi	r24, 0x03	; 3
    b8e8:	91 05       	cpc	r25, r1
    b8ea:	d9 f4       	brne	.+54     	; 0xb922 <LSM303::enableDefault()+0x46>
    b8ec:	40 e0       	ldi	r20, 0x00	; 0
    b8ee:	61 e2       	ldi	r22, 0x21	; 33
    b8f0:	ce 01       	movw	r24, r28
    b8f2:	0e 94 62 5c 	call	0xb8c4	; 0xb8c4 <LSM303::writeReg(unsigned char, unsigned char)>
    b8f6:	47 e5       	ldi	r20, 0x57	; 87
    b8f8:	60 e2       	ldi	r22, 0x20	; 32
    b8fa:	ce 01       	movw	r24, r28
    b8fc:	0e 94 62 5c 	call	0xb8c4	; 0xb8c4 <LSM303::writeReg(unsigned char, unsigned char)>
    b900:	44 e6       	ldi	r20, 0x64	; 100
    b902:	64 e2       	ldi	r22, 0x24	; 36
    b904:	ce 01       	movw	r24, r28
    b906:	0e 94 62 5c 	call	0xb8c4	; 0xb8c4 <LSM303::writeReg(unsigned char, unsigned char)>
    b90a:	40 e2       	ldi	r20, 0x20	; 32
    b90c:	65 e2       	ldi	r22, 0x25	; 37
    b90e:	ce 01       	movw	r24, r28
    b910:	0e 94 62 5c 	call	0xb8c4	; 0xb8c4 <LSM303::writeReg(unsigned char, unsigned char)>
    b914:	40 e0       	ldi	r20, 0x00	; 0
    b916:	66 e2       	ldi	r22, 0x26	; 38
    b918:	ce 01       	movw	r24, r28
    b91a:	df 91       	pop	r29
    b91c:	cf 91       	pop	r28
    b91e:	0c 94 62 5c 	jmp	0xb8c4	; 0xb8c4 <LSM303::writeReg(unsigned char, unsigned char)>
    b922:	02 97       	sbiw	r24, 0x02	; 2
    b924:	d9 f4       	brne	.+54     	; 0xb95c <LSM303::enableDefault()+0x80>
    b926:	48 e0       	ldi	r20, 0x08	; 8
    b928:	63 e2       	ldi	r22, 0x23	; 35
    b92a:	ce 01       	movw	r24, r28
    b92c:	0e 94 22 5c 	call	0xb844	; 0xb844 <LSM303::writeAccReg(unsigned char, unsigned char)>
    b930:	47 e4       	ldi	r20, 0x47	; 71
    b932:	60 e2       	ldi	r22, 0x20	; 32
    b934:	ce 01       	movw	r24, r28
    b936:	0e 94 22 5c 	call	0xb844	; 0xb844 <LSM303::writeAccReg(unsigned char, unsigned char)>
    b93a:	4c e0       	ldi	r20, 0x0C	; 12
    b93c:	60 e0       	ldi	r22, 0x00	; 0
    b93e:	ce 01       	movw	r24, r28
    b940:	0e 94 42 5c 	call	0xb884	; 0xb884 <LSM303::writeMagReg(unsigned char, unsigned char)>
    b944:	40 e2       	ldi	r20, 0x20	; 32
    b946:	61 e0       	ldi	r22, 0x01	; 1
    b948:	ce 01       	movw	r24, r28
    b94a:	0e 94 42 5c 	call	0xb884	; 0xb884 <LSM303::writeMagReg(unsigned char, unsigned char)>
    b94e:	40 e0       	ldi	r20, 0x00	; 0
    b950:	62 e0       	ldi	r22, 0x02	; 2
    b952:	ce 01       	movw	r24, r28
    b954:	df 91       	pop	r29
    b956:	cf 91       	pop	r28
    b958:	0c 94 42 5c 	jmp	0xb884	; 0xb884 <LSM303::writeMagReg(unsigned char, unsigned char)>
    b95c:	40 e0       	ldi	r20, 0x00	; 0
    b95e:	63 e2       	ldi	r22, 0x23	; 35
    b960:	ce 01       	movw	r24, r28
    b962:	0e 94 22 5c 	call	0xb844	; 0xb844 <LSM303::writeAccReg(unsigned char, unsigned char)>
    b966:	47 e2       	ldi	r20, 0x27	; 39
    b968:	e4 cf       	rjmp	.-56     	; 0xb932 <LSM303::enableDefault()+0x56>

0000b96a <LSM303::readAcc()>:
_ZN6LSM3037readAccEv():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:343
  }
}

// Reads the 3 accelerometer channels and stores them in vector a
void LSM303::readAcc(void)
{
    b96a:	df 92       	push	r13
    b96c:	ef 92       	push	r14
    b96e:	ff 92       	push	r15
    b970:	0f 93       	push	r16
    b972:	1f 93       	push	r17
    b974:	cf 93       	push	r28
    b976:	df 93       	push	r29
    b978:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:344
  Wire.beginTransmission(acc_address);
    b97a:	6b 8d       	ldd	r22, Y+27	; 0x1b
    b97c:	83 ea       	ldi	r24, 0xA3	; 163
    b97e:	99 e0       	ldi	r25, 0x09	; 9
    b980:	0e 94 1f 52 	call	0xa43e	; 0xa43e <TwoWire::beginTransmission(unsigned char)>
_ZN7TwoWire5writeEi():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src/Wire.h:81
    void onRequest( void (*)(void) );

    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
    b984:	68 ea       	ldi	r22, 0xA8	; 168
    b986:	83 ea       	ldi	r24, 0xA3	; 163
    b988:	99 e0       	ldi	r25, 0x09	; 9
    b98a:	0e 94 ad 51 	call	0xa35a	; 0xa35a <TwoWire::write(unsigned char)>
_ZN6LSM3037readAccEv():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:348
  // assert the MSB of the address to get the accelerometer
  // to do slave-transmit subaddress updating.
  Wire.write(OUT_X_L_A | (1 << 7));
  last_status = Wire.endTransmission();
    b98e:	83 ea       	ldi	r24, 0xA3	; 163
    b990:	99 e0       	ldi	r25, 0x09	; 9
    b992:	0e 94 a4 52 	call	0xa548	; 0xa548 <TwoWire::endTransmission()>
    b996:	88 8f       	std	Y+24, r24	; 0x18
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:349
  Wire.requestFrom(acc_address, (byte)6);
    b998:	46 e0       	ldi	r20, 0x06	; 6
    b99a:	6b 8d       	ldd	r22, Y+27	; 0x1b
    b99c:	83 ea       	ldi	r24, 0xA3	; 163
    b99e:	99 e0       	ldi	r25, 0x09	; 9
    b9a0:	0e 94 a1 52 	call	0xa542	; 0xa542 <TwoWire::requestFrom(unsigned char, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:351

  unsigned int millis_start = millis();
    b9a4:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    b9a8:	8b 01       	movw	r16, r22
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:352
  while (Wire.available() < 6) {
    b9aa:	83 ea       	ldi	r24, 0xA3	; 163
    b9ac:	99 e0       	ldi	r25, 0x09	; 9
    b9ae:	0e 94 4d 51 	call	0xa29a	; 0xa29a <TwoWire::available()>
    b9b2:	06 97       	sbiw	r24, 0x06	; 6
    b9b4:	bc f4       	brge	.+46     	; 0xb9e4 <LSM303::readAcc()+0x7a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:353
    if (io_timeout > 0 && ((unsigned int)millis() - millis_start) > io_timeout)
    b9b6:	8b a5       	ldd	r24, Y+43	; 0x2b
    b9b8:	9c a5       	ldd	r25, Y+44	; 0x2c
    b9ba:	89 2b       	or	r24, r25
    b9bc:	b1 f3       	breq	.-20     	; 0xb9aa <LSM303::readAcc()+0x40>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:353 (discriminator 1)
    b9be:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    b9c2:	60 1b       	sub	r22, r16
    b9c4:	71 0b       	sbc	r23, r17
    b9c6:	8b a5       	ldd	r24, Y+43	; 0x2b
    b9c8:	9c a5       	ldd	r25, Y+44	; 0x2c
    b9ca:	86 17       	cp	r24, r22
    b9cc:	97 07       	cpc	r25, r23
    b9ce:	68 f7       	brcc	.-38     	; 0xb9aa <LSM303::readAcc()+0x40>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:355
    {
      did_timeout = true;
    b9d0:	81 e0       	ldi	r24, 0x01	; 1
    b9d2:	8d a7       	std	Y+45, r24	; 0x2d
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:373
  // This no longer drops the lowest 4 bits of the readings from the DLH/DLM/DLHC, which are always 0
  // (12-bit resolution, left-aligned). The D has 16-bit resolution
  a.x = (int16_t)(xha << 8 | xla);
  a.y = (int16_t)(yha << 8 | yla);
  a.z = (int16_t)(zha << 8 | zla);
}
    b9d4:	df 91       	pop	r29
    b9d6:	cf 91       	pop	r28
    b9d8:	1f 91       	pop	r17
    b9da:	0f 91       	pop	r16
    b9dc:	ff 90       	pop	r15
    b9de:	ef 90       	pop	r14
    b9e0:	df 90       	pop	r13
    b9e2:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:360
      did_timeout = true;
      return;
    }
  }

  byte xla = Wire.read();
    b9e4:	83 ea       	ldi	r24, 0xA3	; 163
    b9e6:	99 e0       	ldi	r25, 0x09	; 9
    b9e8:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    b9ec:	e8 2e       	mov	r14, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:361
  byte xha = Wire.read();
    b9ee:	83 ea       	ldi	r24, 0xA3	; 163
    b9f0:	99 e0       	ldi	r25, 0x09	; 9
    b9f2:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    b9f6:	d8 2e       	mov	r13, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:362
  byte yla = Wire.read();
    b9f8:	83 ea       	ldi	r24, 0xA3	; 163
    b9fa:	99 e0       	ldi	r25, 0x09	; 9
    b9fc:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    ba00:	08 2f       	mov	r16, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:363
  byte yha = Wire.read();
    ba02:	83 ea       	ldi	r24, 0xA3	; 163
    ba04:	99 e0       	ldi	r25, 0x09	; 9
    ba06:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    ba0a:	f8 2e       	mov	r15, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:364
  byte zla = Wire.read();
    ba0c:	83 ea       	ldi	r24, 0xA3	; 163
    ba0e:	99 e0       	ldi	r25, 0x09	; 9
    ba10:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    ba14:	18 2f       	mov	r17, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:365
  byte zha = Wire.read();
    ba16:	83 ea       	ldi	r24, 0xA3	; 163
    ba18:	99 e0       	ldi	r25, 0x09	; 9
    ba1a:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:370

  // combine high and low bytes
  // This no longer drops the lowest 4 bits of the readings from the DLH/DLM/DLHC, which are always 0
  // (12-bit resolution, left-aligned). The D has 16-bit resolution
  a.x = (int16_t)(xha << 8 | xla);
    ba1e:	20 e0       	ldi	r18, 0x00	; 0
    ba20:	3d 2d       	mov	r19, r13
    ba22:	2e 29       	or	r18, r14
    ba24:	39 83       	std	Y+1, r19	; 0x01
    ba26:	28 83       	st	Y, r18
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:371
  a.y = (int16_t)(yha << 8 | yla);
    ba28:	20 e0       	ldi	r18, 0x00	; 0
    ba2a:	3f 2d       	mov	r19, r15
    ba2c:	20 2b       	or	r18, r16
    ba2e:	3b 83       	std	Y+3, r19	; 0x03
    ba30:	2a 83       	std	Y+2, r18	; 0x02
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:372
  a.z = (int16_t)(zha << 8 | zla);
    ba32:	20 e0       	ldi	r18, 0x00	; 0
    ba34:	38 2f       	mov	r19, r24
    ba36:	21 2b       	or	r18, r17
    ba38:	3d 83       	std	Y+5, r19	; 0x05
    ba3a:	2c 83       	std	Y+4, r18	; 0x04
    ba3c:	cb cf       	rjmp	.-106    	; 0xb9d4 <LSM303::readAcc()+0x6a>

0000ba3e <LSM303::readMag()>:
_ZN6LSM3037readMagEv():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:377
}

// Reads the 3 magnetometer channels and stores them in vector m
void LSM303::readMag(void)
{
    ba3e:	cf 92       	push	r12
    ba40:	df 92       	push	r13
    ba42:	ef 92       	push	r14
    ba44:	ff 92       	push	r15
    ba46:	0f 93       	push	r16
    ba48:	1f 93       	push	r17
    ba4a:	cf 93       	push	r28
    ba4c:	df 93       	push	r29
    ba4e:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:378
  Wire.beginTransmission(mag_address);
    ba50:	6c 8d       	ldd	r22, Y+28	; 0x1c
    ba52:	83 ea       	ldi	r24, 0xA3	; 163
    ba54:	99 e0       	ldi	r25, 0x09	; 9
    ba56:	0e 94 1f 52 	call	0xa43e	; 0xa43e <TwoWire::beginTransmission(unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:381
  // If LSM303D, assert MSB to enable subaddress updating
  // OUT_X_L_M comes first on D, OUT_X_H_M on others
  Wire.write((_device == device_D) ? translated_regs[-OUT_X_L_M] | (1 << 7) : translated_regs[-OUT_X_H_M]);
    ba5a:	89 8d       	ldd	r24, Y+25	; 0x19
    ba5c:	9a 8d       	ldd	r25, Y+26	; 0x1a
    ba5e:	03 97       	sbiw	r24, 0x03	; 3
    ba60:	99 f5       	brne	.+102    	; 0xbac8 <LSM303::readMag()+0x8a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:381 (discriminator 1)
    ba62:	69 a1       	ldd	r22, Y+33	; 0x21
    ba64:	7a a1       	ldd	r23, Y+34	; 0x22
    ba66:	60 68       	ori	r22, 0x80	; 128
_ZN7TwoWire5writeEi():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\Wire\src/Wire.h:81 (discriminator 4)
    ba68:	83 ea       	ldi	r24, 0xA3	; 163
    ba6a:	99 e0       	ldi	r25, 0x09	; 9
    ba6c:	0e 94 ad 51 	call	0xa35a	; 0xa35a <TwoWire::write(unsigned char)>
_ZN6LSM3037readMagEv():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:382 (discriminator 4)
  last_status = Wire.endTransmission();
    ba70:	83 ea       	ldi	r24, 0xA3	; 163
    ba72:	99 e0       	ldi	r25, 0x09	; 9
    ba74:	0e 94 a4 52 	call	0xa548	; 0xa548 <TwoWire::endTransmission()>
    ba78:	88 8f       	std	Y+24, r24	; 0x18
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:383 (discriminator 4)
  Wire.requestFrom(mag_address, (byte)6);
    ba7a:	46 e0       	ldi	r20, 0x06	; 6
    ba7c:	6c 8d       	ldd	r22, Y+28	; 0x1c
    ba7e:	83 ea       	ldi	r24, 0xA3	; 163
    ba80:	99 e0       	ldi	r25, 0x09	; 9
    ba82:	0e 94 a1 52 	call	0xa542	; 0xa542 <TwoWire::requestFrom(unsigned char, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:385 (discriminator 4)

  unsigned int millis_start = millis();
    ba86:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    ba8a:	8b 01       	movw	r16, r22
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:386
  while (Wire.available() < 6) {
    ba8c:	83 ea       	ldi	r24, 0xA3	; 163
    ba8e:	99 e0       	ldi	r25, 0x09	; 9
    ba90:	0e 94 4d 51 	call	0xa29a	; 0xa29a <TwoWire::available()>
    ba94:	06 97       	sbiw	r24, 0x06	; 6
    ba96:	dc f4       	brge	.+54     	; 0xbace <LSM303::readMag()+0x90>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:387
    if (io_timeout > 0 && ((unsigned int)millis() - millis_start) > io_timeout)
    ba98:	8b a5       	ldd	r24, Y+43	; 0x2b
    ba9a:	9c a5       	ldd	r25, Y+44	; 0x2c
    ba9c:	89 2b       	or	r24, r25
    ba9e:	b1 f3       	breq	.-20     	; 0xba8c <LSM303::readMag()+0x4e>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:387 (discriminator 1)
    baa0:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    baa4:	60 1b       	sub	r22, r16
    baa6:	71 0b       	sbc	r23, r17
    baa8:	8b a5       	ldd	r24, Y+43	; 0x2b
    baaa:	9c a5       	ldd	r25, Y+44	; 0x2c
    baac:	86 17       	cp	r24, r22
    baae:	97 07       	cpc	r25, r23
    bab0:	68 f7       	brcc	.-38     	; 0xba8c <LSM303::readMag()+0x4e>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:389
    {
      did_timeout = true;
    bab2:	81 e0       	ldi	r24, 0x01	; 1
    bab4:	8d a7       	std	Y+45, r24	; 0x2d
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:434

  // combine high and low bytes
  m.x = (int16_t)(xhm << 8 | xlm);
  m.y = (int16_t)(yhm << 8 | ylm);
  m.z = (int16_t)(zhm << 8 | zlm);
}
    bab6:	df 91       	pop	r29
    bab8:	cf 91       	pop	r28
    baba:	1f 91       	pop	r17
    babc:	0f 91       	pop	r16
    babe:	ff 90       	pop	r15
    bac0:	ef 90       	pop	r14
    bac2:	df 90       	pop	r13
    bac4:	cf 90       	pop	r12
    bac6:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:381 (discriminator 2)
void LSM303::readMag(void)
{
  Wire.beginTransmission(mag_address);
  // If LSM303D, assert MSB to enable subaddress updating
  // OUT_X_L_M comes first on D, OUT_X_H_M on others
  Wire.write((_device == device_D) ? translated_regs[-OUT_X_L_M] | (1 << 7) : translated_regs[-OUT_X_H_M]);
    bac8:	6f 8d       	ldd	r22, Y+31	; 0x1f
    baca:	78 a1       	ldd	r23, Y+32	; 0x20
    bacc:	cd cf       	rjmp	.-102    	; 0xba68 <LSM303::readMag()+0x2a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:396
    }
  }

  byte xlm, xhm, ylm, yhm, zlm, zhm;

  if (_device == device_D)
    bace:	89 8d       	ldd	r24, Y+25	; 0x19
    bad0:	9a 8d       	ldd	r25, Y+26	; 0x1a
    bad2:	03 97       	sbiw	r24, 0x03	; 3
    bad4:	51 f5       	brne	.+84     	; 0xbb2a <LSM303::readMag()+0xec>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:399
  {
    // D: X_L, X_H, Y_L, Y_H, Z_L, Z_H
    xlm = Wire.read();
    bad6:	83 ea       	ldi	r24, 0xA3	; 163
    bad8:	99 e0       	ldi	r25, 0x09	; 9
    bada:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bade:	c8 2e       	mov	r12, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:400
    xhm = Wire.read();
    bae0:	83 ea       	ldi	r24, 0xA3	; 163
    bae2:	99 e0       	ldi	r25, 0x09	; 9
    bae4:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bae8:	f8 2e       	mov	r15, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:401
    ylm = Wire.read();
    baea:	83 ea       	ldi	r24, 0xA3	; 163
    baec:	99 e0       	ldi	r25, 0x09	; 9
    baee:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    baf2:	d8 2e       	mov	r13, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:402
    yhm = Wire.read();
    baf4:	83 ea       	ldi	r24, 0xA3	; 163
    baf6:	99 e0       	ldi	r25, 0x09	; 9
    baf8:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bafc:	08 2f       	mov	r16, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:403
    zlm = Wire.read();
    bafe:	83 ea       	ldi	r24, 0xA3	; 163
    bb00:	99 e0       	ldi	r25, 0x09	; 9
    bb02:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb06:	e8 2e       	mov	r14, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:404
    zhm = Wire.read();
    bb08:	83 ea       	ldi	r24, 0xA3	; 163
    bb0a:	99 e0       	ldi	r25, 0x09	; 9
    bb0c:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb10:	18 2f       	mov	r17, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:431
      ylm = Wire.read();
    }
  }

  // combine high and low bytes
  m.x = (int16_t)(xhm << 8 | xlm);
    bb12:	9f 2d       	mov	r25, r15
    bb14:	8c 2d       	mov	r24, r12
    bb16:	9f 83       	std	Y+7, r25	; 0x07
    bb18:	8e 83       	std	Y+6, r24	; 0x06
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:432
  m.y = (int16_t)(yhm << 8 | ylm);
    bb1a:	90 2f       	mov	r25, r16
    bb1c:	8d 2d       	mov	r24, r13
    bb1e:	99 87       	std	Y+9, r25	; 0x09
    bb20:	88 87       	std	Y+8, r24	; 0x08
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:433
  m.z = (int16_t)(zhm << 8 | zlm);
    bb22:	f1 2e       	mov	r15, r17
    bb24:	fb 86       	std	Y+11, r15	; 0x0b
    bb26:	ea 86       	std	Y+10, r14	; 0x0a
    bb28:	c6 cf       	rjmp	.-116    	; 0xbab6 <LSM303::readMag()+0x78>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:409
    zhm = Wire.read();
  }
  else
  {
    // DLHC, DLM, DLH: X_H, X_L...
    xhm = Wire.read();
    bb2a:	83 ea       	ldi	r24, 0xA3	; 163
    bb2c:	99 e0       	ldi	r25, 0x09	; 9
    bb2e:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb32:	f8 2e       	mov	r15, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:410
    xlm = Wire.read();
    bb34:	83 ea       	ldi	r24, 0xA3	; 163
    bb36:	99 e0       	ldi	r25, 0x09	; 9
    bb38:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb3c:	c8 2e       	mov	r12, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:412

    if (_device == device_DLH)
    bb3e:	89 8d       	ldd	r24, Y+25	; 0x19
    bb40:	9a 8d       	ldd	r25, Y+26	; 0x1a
    bb42:	89 2b       	or	r24, r25
    bb44:	a9 f4       	brne	.+42     	; 0xbb70 <LSM303::readMag()+0x132>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:415
    {
      // DLH: ...Y_H, Y_L, Z_H, Z_L
      yhm = Wire.read();
    bb46:	83 ea       	ldi	r24, 0xA3	; 163
    bb48:	99 e0       	ldi	r25, 0x09	; 9
    bb4a:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb4e:	08 2f       	mov	r16, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:416
      ylm = Wire.read();
    bb50:	83 ea       	ldi	r24, 0xA3	; 163
    bb52:	99 e0       	ldi	r25, 0x09	; 9
    bb54:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb58:	d8 2e       	mov	r13, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:417
      zhm = Wire.read();
    bb5a:	83 ea       	ldi	r24, 0xA3	; 163
    bb5c:	99 e0       	ldi	r25, 0x09	; 9
    bb5e:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb62:	18 2f       	mov	r17, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:418
      zlm = Wire.read();
    bb64:	83 ea       	ldi	r24, 0xA3	; 163
    bb66:	99 e0       	ldi	r25, 0x09	; 9
    bb68:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb6c:	e8 2e       	mov	r14, r24
    bb6e:	d1 cf       	rjmp	.-94     	; 0xbb12 <LSM303::readMag()+0xd4>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:423
    }
    else
    {
      // DLM, DLHC: ...Z_H, Z_L, Y_H, Y_L
      zhm = Wire.read();
    bb70:	83 ea       	ldi	r24, 0xA3	; 163
    bb72:	99 e0       	ldi	r25, 0x09	; 9
    bb74:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb78:	18 2f       	mov	r17, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:424
      zlm = Wire.read();
    bb7a:	83 ea       	ldi	r24, 0xA3	; 163
    bb7c:	99 e0       	ldi	r25, 0x09	; 9
    bb7e:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb82:	e8 2e       	mov	r14, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:425
      yhm = Wire.read();
    bb84:	83 ea       	ldi	r24, 0xA3	; 163
    bb86:	99 e0       	ldi	r25, 0x09	; 9
    bb88:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb8c:	08 2f       	mov	r16, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:426
      ylm = Wire.read();
    bb8e:	83 ea       	ldi	r24, 0xA3	; 163
    bb90:	99 e0       	ldi	r25, 0x09	; 9
    bb92:	0e 94 54 51 	call	0xa2a8	; 0xa2a8 <TwoWire::read()>
    bb96:	d8 2e       	mov	r13, r24
    bb98:	bc cf       	rjmp	.-136    	; 0xbb12 <LSM303::readMag()+0xd4>

0000bb9a <LSM303::read()>:
_ZN6LSM3034readEv():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:438
  m.z = (int16_t)(zhm << 8 | zlm);
}

// Reads all 6 channels of the LSM303 and stores them in the object variables
void LSM303::read(void)
{
    bb9a:	cf 93       	push	r28
    bb9c:	df 93       	push	r29
    bb9e:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:439
  readAcc();
    bba0:	0e 94 b5 5c 	call	0xb96a	; 0xb96a <LSM303::readAcc()>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:440
  readMag();
    bba4:	ce 01       	movw	r24, r28
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:441
}
    bba6:	df 91       	pop	r29
    bba8:	cf 91       	pop	r28
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:440

// Reads all 6 channels of the LSM303 and stores them in the object variables
void LSM303::read(void)
{
  readAcc();
  readMag();
    bbaa:	0c 94 1f 5d 	jmp	0xba3e	; 0xba3e <LSM303::readMag()>

0000bbae <LSM303::testReg(unsigned char, LSM303::regAddr)>:
_ZN6LSM3037testRegEhNS_7regAddrE():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:475
}

// Private Methods //////////////////////////////////////////////////////////////

int LSM303::testReg(byte address, regAddr reg)
{
    bbae:	cf 93       	push	r28
    bbb0:	df 93       	push	r29
    bbb2:	c6 2f       	mov	r28, r22
    bbb4:	d4 2f       	mov	r29, r20
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:476
  Wire.beginTransmission(address);
    bbb6:	83 ea       	ldi	r24, 0xA3	; 163
    bbb8:	99 e0       	ldi	r25, 0x09	; 9
    bbba:	0e 94 1f 52 	call	0xa43e	; 0xa43e <TwoWire::beginTransmission(unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:477
  Wire.write((byte)reg);
    bbbe:	6d 2f       	mov	r22, r29
    bbc0:	83 ea       	ldi	r24, 0xA3	; 163
    bbc2:	99 e0       	ldi	r25, 0x09	; 9
    bbc4:	0e 94 ad 51 	call	0xa35a	; 0xa35a <TwoWire::write(unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:478
  if (Wire.endTransmission() != 0)
    bbc8:	83 ea       	ldi	r24, 0xA3	; 163
    bbca:	99 e0       	ldi	r25, 0x09	; 9
    bbcc:	0e 94 a4 52 	call	0xa548	; 0xa548 <TwoWire::endTransmission()>
    bbd0:	81 11       	cpse	r24, r1
    bbd2:	12 c0       	rjmp	.+36     	; 0xbbf8 <LSM303::testReg(unsigned char, LSM303::regAddr)+0x4a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:483
  {
    return TEST_REG_ERROR;
  }

  Wire.requestFrom(address, (byte)1);
    bbd4:	41 e0       	ldi	r20, 0x01	; 1
    bbd6:	6c 2f       	mov	r22, r28
    bbd8:	83 ea       	ldi	r24, 0xA3	; 163
    bbda:	99 e0       	ldi	r25, 0x09	; 9
    bbdc:	0e 94 a1 52 	call	0xa542	; 0xa542 <TwoWire::requestFrom(unsigned char, unsigned char)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:484
  if (Wire.available())
    bbe0:	83 ea       	ldi	r24, 0xA3	; 163
    bbe2:	99 e0       	ldi	r25, 0x09	; 9
    bbe4:	0e 94 4d 51 	call	0xa29a	; 0xa29a <TwoWire::available()>
    bbe8:	89 2b       	or	r24, r25
    bbea:	31 f0       	breq	.+12     	; 0xbbf8 <LSM303::testReg(unsigned char, LSM303::regAddr)+0x4a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:486
  {
    return Wire.read();
    bbec:	83 ea       	ldi	r24, 0xA3	; 163
    bbee:	99 e0       	ldi	r25, 0x09	; 9
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:492
  }
  else
  {
    return TEST_REG_ERROR;
  }
    bbf0:	df 91       	pop	r29
    bbf2:	cf 91       	pop	r28
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:486
  }

  Wire.requestFrom(address, (byte)1);
  if (Wire.available())
  {
    return Wire.read();
    bbf4:	0c 94 54 51 	jmp	0xa2a8	; 0xa2a8 <TwoWire::read()>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:492
  }
  else
  {
    return TEST_REG_ERROR;
  }
    bbf8:	8f ef       	ldi	r24, 0xFF	; 255
    bbfa:	9f ef       	ldi	r25, 0xFF	; 255
    bbfc:	df 91       	pop	r29
    bbfe:	cf 91       	pop	r28
    bc00:	08 95       	ret

0000bc02 <LSM303::init(LSM303::deviceType, LSM303::sa0State)>:
_ZN6LSM3034initENS_10deviceTypeENS_8sa0StateE():
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:60
{
  return io_timeout;
}

bool LSM303::init(deviceType device, sa0State sa0)
{
    bc02:	ef 92       	push	r14
    bc04:	ff 92       	push	r15
    bc06:	0f 93       	push	r16
    bc08:	1f 93       	push	r17
    bc0a:	cf 93       	push	r28
    bc0c:	df 93       	push	r29
    bc0e:	ec 01       	movw	r28, r24
    bc10:	8b 01       	movw	r16, r22
    bc12:	7a 01       	movw	r14, r20
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:62
  // perform auto-detection unless device type and SA0 state were both specified
  if (device == device_auto || sa0 == sa0_auto)
    bc14:	64 30       	cpi	r22, 0x04	; 4
    bc16:	71 05       	cpc	r23, r1
    bc18:	21 f0       	breq	.+8      	; 0xbc22 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x20>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:62 (discriminator 1)
    bc1a:	42 30       	cpi	r20, 0x02	; 2
    bc1c:	51 05       	cpc	r21, r1
    bc1e:	09 f0       	breq	.+2      	; 0xbc22 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x20>
    bc20:	8b c0       	rjmp	.+278    	; 0xbd38 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:65
  {
    // check for LSM303D if device is unidentified or was specified to be this type
    if (device == device_auto || device == device_D)
    bc22:	c8 01       	movw	r24, r16
    bc24:	03 97       	sbiw	r24, 0x03	; 3
    bc26:	02 97       	sbiw	r24, 0x02	; 2
    bc28:	88 f1       	brcs	.+98     	; 0xbc8c <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x8a>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:84
        sa0 = sa0_low;
      }
    }
    
    // check for LSM303DLHC, DLM, DLH if device is still unidentified or was specified to be one of these types
    if (device == device_auto || device == device_DLHC || device == device_DLM || device == device_DLH)
    bc2a:	02 30       	cpi	r16, 0x02	; 2
    bc2c:	11 05       	cpc	r17, r1
    bc2e:	09 f0       	breq	.+2      	; 0xbc32 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x30>
    bc30:	56 c0       	rjmp	.+172    	; 0xbcde <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xdc>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:87
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
    bc32:	e1 14       	cp	r14, r1
    bc34:	f1 04       	cpc	r15, r1
    bc36:	71 f0       	breq	.+28     	; 0xbc54 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x52>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:87 (discriminator 1)
    bc38:	40 e2       	ldi	r20, 0x20	; 32
    bc3a:	50 e0       	ldi	r21, 0x00	; 0
    bc3c:	69 e1       	ldi	r22, 0x19	; 25
    bc3e:	ce 01       	movw	r24, r28
    bc40:	0e 94 d7 5d 	call	0xbbae	; 0xbbae <LSM303::testReg(unsigned char, LSM303::regAddr)>
    bc44:	01 96       	adiw	r24, 0x01	; 1
    bc46:	09 f0       	breq	.+2      	; 0xbc4a <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x48>
    bc48:	5d c0       	rjmp	.+186    	; 0xbd04 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x102>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:104 (discriminator 4)
          // magnetometer gives the DLM ID is actually a DLHC.
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLHC : device_DLH;
        }
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(DLM_DLH_ACC_SA0_LOW_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
    bc4a:	81 e0       	ldi	r24, 0x01	; 1
    bc4c:	e8 16       	cp	r14, r24
    bc4e:	f1 04       	cpc	r15, r1
    bc50:	09 f4       	brne	.+2      	; 0xbc54 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x52>
    bc52:	e6 c0       	rjmp	.+460    	; 0xbe20 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x21e>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:104 (discriminator 1)
    bc54:	40 e2       	ldi	r20, 0x20	; 32
    bc56:	50 e0       	ldi	r21, 0x00	; 0
    bc58:	68 e1       	ldi	r22, 0x18	; 24
    bc5a:	ce 01       	movw	r24, r28
    bc5c:	0e 94 d7 5d 	call	0xbbae	; 0xbbae <LSM303::testReg(unsigned char, LSM303::regAddr)>
    bc60:	01 96       	adiw	r24, 0x01	; 1
    bc62:	09 f4       	brne	.+2      	; 0xbc66 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x64>
    bc64:	44 c0       	rjmp	.+136    	; 0xbcee <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xec>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:108
      {
        // device responds to address 0011000; it's a DLM with SA0 low or DLH with SA0 low
        sa0 = sa0_low;
        if (device == device_auto)
    bc66:	04 30       	cpi	r16, 0x04	; 4
    bc68:	11 05       	cpc	r17, r1
    bc6a:	69 f4       	brne	.+26     	; 0xbc86 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x84>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:111
        {
          // use magnetometer WHO_AM_I register to determine device type
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLM : device_DLH;
    bc6c:	4f e0       	ldi	r20, 0x0F	; 15
    bc6e:	50 e0       	ldi	r21, 0x00	; 0
    bc70:	6e e1       	ldi	r22, 0x1E	; 30
    bc72:	ce 01       	movw	r24, r28
    bc74:	0e 94 d7 5d 	call	0xbbae	; 0xbbae <LSM303::testReg(unsigned char, LSM303::regAddr)>
    bc78:	31 e0       	ldi	r19, 0x01	; 1
    bc7a:	20 e0       	ldi	r18, 0x00	; 0
    bc7c:	cc 97       	sbiw	r24, 0x3c	; 60
    bc7e:	09 f0       	breq	.+2      	; 0xbc82 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x80>
    bc80:	30 e0       	ldi	r19, 0x00	; 0
    bc82:	03 2f       	mov	r16, r19
    bc84:	12 2f       	mov	r17, r18
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:107
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(DLM_DLH_ACC_SA0_LOW_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
      {
        // device responds to address 0011000; it's a DLM with SA0 low or DLH with SA0 low
        sa0 = sa0_low;
    bc86:	f1 2c       	mov	r15, r1
    bc88:	e1 2c       	mov	r14, r1
    bc8a:	56 c0       	rjmp	.+172    	; 0xbd38 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:68
  {
    // check for LSM303D if device is unidentified or was specified to be this type
    if (device == device_auto || device == device_D)
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
    bc8c:	e1 14       	cp	r14, r1
    bc8e:	f1 04       	cpc	r15, r1
    bc90:	71 f4       	brne	.+28     	; 0xbcae <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xac>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:75
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
        sa0 = sa0_high;
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(D_SA0_LOW_ADDRESS, WHO_AM_I) == D_WHO_ID)
    bc92:	4f e0       	ldi	r20, 0x0F	; 15
    bc94:	50 e0       	ldi	r21, 0x00	; 0
    bc96:	6e e1       	ldi	r22, 0x1E	; 30
    bc98:	ce 01       	movw	r24, r28
    bc9a:	0e 94 d7 5d 	call	0xbbae	; 0xbbae <LSM303::testReg(unsigned char, LSM303::regAddr)>
    bc9e:	89 34       	cpi	r24, 0x49	; 73
    bca0:	91 05       	cpc	r25, r1
    bca2:	c1 f4       	brne	.+48     	; 0xbcd4 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xd2>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:79
      {
        // device responds to address 0011110 with D ID; it's a D with SA0 low
        device = device_D;
        sa0 = sa0_low;
    bca4:	f1 2c       	mov	r15, r1
    bca6:	e1 2c       	mov	r14, r1
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:71
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
      {
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
    bca8:	03 e0       	ldi	r16, 0x03	; 3
    bcaa:	10 e0       	ldi	r17, 0x00	; 0
    bcac:	45 c0       	rjmp	.+138    	; 0xbd38 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:68 (discriminator 1)
  {
    // check for LSM303D if device is unidentified or was specified to be this type
    if (device == device_auto || device == device_D)
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
    bcae:	4f e0       	ldi	r20, 0x0F	; 15
    bcb0:	50 e0       	ldi	r21, 0x00	; 0
    bcb2:	6d e1       	ldi	r22, 0x1D	; 29
    bcb4:	ce 01       	movw	r24, r28
    bcb6:	0e 94 d7 5d 	call	0xbbae	; 0xbbae <LSM303::testReg(unsigned char, LSM303::regAddr)>
    bcba:	89 34       	cpi	r24, 0x49	; 73
    bcbc:	91 05       	cpc	r25, r1
    bcbe:	09 f4       	brne	.+2      	; 0xbcc2 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xc0>
    bcc0:	6a c0       	rjmp	.+212    	; 0xbd96 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x194>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:75 (discriminator 4)
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
        sa0 = sa0_high;
      }
      // check SA0 low address unless SA0 was specified to be high
      else if (sa0 != sa0_high && testReg(D_SA0_LOW_ADDRESS, WHO_AM_I) == D_WHO_ID)
    bcc2:	81 e0       	ldi	r24, 0x01	; 1
    bcc4:	e8 16       	cp	r14, r24
    bcc6:	f1 04       	cpc	r15, r1
    bcc8:	21 f7       	brne	.-56     	; 0xbc92 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x90>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:84
        sa0 = sa0_low;
      }
    }
    
    // check for LSM303DLHC, DLM, DLH if device is still unidentified or was specified to be one of these types
    if (device == device_auto || device == device_DLHC || device == device_DLM || device == device_DLH)
    bcca:	04 30       	cpi	r16, 0x04	; 4
    bccc:	11 05       	cpc	r17, r1
    bcce:	09 f4       	brne	.+2      	; 0xbcd2 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xd0>
    bcd0:	b3 cf       	rjmp	.-154    	; 0xbc38 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x36>
    bcd2:	09 c0       	rjmp	.+18     	; 0xbce6 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xe4>
    bcd4:	04 30       	cpi	r16, 0x04	; 4
    bcd6:	11 05       	cpc	r17, r1
    bcd8:	09 f4       	brne	.+2      	; 0xbcdc <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xda>
    bcda:	ab cf       	rjmp	.-170    	; 0xbc32 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x30>
    bcdc:	a6 cf       	rjmp	.-180    	; 0xbc2a <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x28>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:84 (discriminator 2)
    bcde:	01 30       	cpi	r16, 0x01	; 1
    bce0:	11 05       	cpc	r17, r1
    bce2:	09 f4       	brne	.+2      	; 0xbce6 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xe4>
    bce4:	a6 cf       	rjmp	.-180    	; 0xbc32 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x30>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:84 (discriminator 3)
    bce6:	01 15       	cp	r16, r1
    bce8:	11 05       	cpc	r17, r1
    bcea:	09 f4       	brne	.+2      	; 0xbcee <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xec>
    bcec:	a2 cf       	rjmp	.-188    	; 0xbc32 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x30>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:117
        }
      }
    }
    
    // make sure device and SA0 were successfully detected; otherwise, indicate failure
    if (device == device_auto || sa0 == sa0_auto)
    bcee:	04 30       	cpi	r16, 0x04	; 4
    bcf0:	11 05       	cpc	r17, r1
    bcf2:	f1 f4       	brne	.+60     	; 0xbd30 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x12e>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:119
    {
      return false;
    bcf4:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:173
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
      break;
  }
  
  return true;
}
    bcf6:	df 91       	pop	r29
    bcf8:	cf 91       	pop	r28
    bcfa:	1f 91       	pop	r17
    bcfc:	0f 91       	pop	r16
    bcfe:	ff 90       	pop	r15
    bd00:	ef 90       	pop	r14
    bd02:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:90
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
      {
        // device responds to address 0011001; it's a DLHC, DLM with SA0 high, or DLH with SA0 high
        sa0 = sa0_high;
    bd04:	ee 24       	eor	r14, r14
    bd06:	e3 94       	inc	r14
    bd08:	f1 2c       	mov	r15, r1
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:91
        if (device == device_auto)
    bd0a:	04 30       	cpi	r16, 0x04	; 4
    bd0c:	11 05       	cpc	r17, r1
    bd0e:	a1 f4       	brne	.+40     	; 0xbd38 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:100
          // DLHC seems to respond to WHO_AM_I request the same way as DLM, even though this
          // register isn't documented in its datasheet. Since the DLHC accelerometer address is the
          // same as the DLM with SA0 high, but Pololu DLM boards pull SA0 low by default, we'll
          // guess that a device whose accelerometer responds to the SA0 high address and whose
          // magnetometer gives the DLM ID is actually a DLHC.
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLHC : device_DLH;
    bd10:	4f e0       	ldi	r20, 0x0F	; 15
    bd12:	50 e0       	ldi	r21, 0x00	; 0
    bd14:	6e e1       	ldi	r22, 0x1E	; 30
    bd16:	ce 01       	movw	r24, r28
    bd18:	0e 94 d7 5d 	call	0xbbae	; 0xbbae <LSM303::testReg(unsigned char, LSM303::regAddr)>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:90
    {
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS, CTRL_REG1_A) != TEST_REG_ERROR)
      {
        // device responds to address 0011001; it's a DLHC, DLM with SA0 high, or DLH with SA0 high
        sa0 = sa0_high;
    bd1c:	ee 24       	eor	r14, r14
    bd1e:	e3 94       	inc	r14
    bd20:	f1 2c       	mov	r15, r1
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:100
          // DLHC seems to respond to WHO_AM_I request the same way as DLM, even though this
          // register isn't documented in its datasheet. Since the DLHC accelerometer address is the
          // same as the DLM with SA0 high, but Pololu DLM boards pull SA0 low by default, we'll
          // guess that a device whose accelerometer responds to the SA0 high address and whose
          // magnetometer gives the DLM ID is actually a DLHC.
          device = (testReg(DLHC_DLM_DLH_MAG_ADDRESS, WHO_AM_I_M) == DLM_WHO_ID) ? device_DLHC : device_DLH;
    bd22:	10 e0       	ldi	r17, 0x00	; 0
    bd24:	00 e0       	ldi	r16, 0x00	; 0
    bd26:	cc 97       	sbiw	r24, 0x3c	; 60
    bd28:	39 f4       	brne	.+14     	; 0xbd38 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
    bd2a:	02 e0       	ldi	r16, 0x02	; 2
    bd2c:	10 e0       	ldi	r17, 0x00	; 0
    bd2e:	04 c0       	rjmp	.+8      	; 0xbd38 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:117 (discriminator 1)
        }
      }
    }
    
    // make sure device and SA0 were successfully detected; otherwise, indicate failure
    if (device == device_auto || sa0 == sa0_auto)
    bd30:	82 e0       	ldi	r24, 0x02	; 2
    bd32:	e8 16       	cp	r14, r24
    bd34:	f1 04       	cpc	r15, r1
    bd36:	f1 f2       	breq	.-68     	; 0xbcf4 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xf2>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:123
    {
      return false;
    }
  }
  
  _device = device;
    bd38:	1a 8f       	std	Y+26, r17	; 0x1a
    bd3a:	09 8f       	std	Y+25, r16	; 0x19
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:126
  
  // set device addresses and translated register addresses
  switch (device)
    bd3c:	01 30       	cpi	r16, 0x01	; 1
    bd3e:	11 05       	cpc	r17, r1
    bd40:	71 f1       	breq	.+92     	; 0xbd9e <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x19c>
    bd42:	08 f4       	brcc	.+2      	; 0xbd46 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x144>
    bd44:	4e c0       	rjmp	.+156    	; 0xbde2 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1e0>
    bd46:	02 30       	cpi	r16, 0x02	; 2
    bd48:	11 05       	cpc	r17, r1
    bd4a:	09 f4       	brne	.+2      	; 0xbd4e <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x14c>
    bd4c:	48 c0       	rjmp	.+144    	; 0xbdde <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1dc>
    bd4e:	03 30       	cpi	r16, 0x03	; 3
    bd50:	11 05       	cpc	r17, r1
    bd52:	f9 f4       	brne	.+62     	; 0xbd92 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x190>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:129
  {
    case device_D:
      acc_address = mag_address = (sa0 == sa0_high) ? D_SA0_HIGH_ADDRESS : D_SA0_LOW_ADDRESS;
    bd54:	8e e1       	ldi	r24, 0x1E	; 30
    bd56:	ea 94       	dec	r14
    bd58:	ef 28       	or	r14, r15
    bd5a:	09 f4       	brne	.+2      	; 0xbd5e <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x15c>
    bd5c:	8d e1       	ldi	r24, 0x1D	; 29
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:129 (discriminator 4)
    bd5e:	8c 8f       	std	Y+28, r24	; 0x1c
    bd60:	8b 8f       	std	Y+27, r24	; 0x1b
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:130 (discriminator 4)
      translated_regs[-OUT_X_L_M] = D_OUT_X_L_M;
    bd62:	88 e0       	ldi	r24, 0x08	; 8
    bd64:	90 e0       	ldi	r25, 0x00	; 0
    bd66:	9a a3       	std	Y+34, r25	; 0x22
    bd68:	89 a3       	std	Y+33, r24	; 0x21
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:131 (discriminator 4)
      translated_regs[-OUT_X_H_M] = D_OUT_X_H_M;
    bd6a:	89 e0       	ldi	r24, 0x09	; 9
    bd6c:	90 e0       	ldi	r25, 0x00	; 0
    bd6e:	98 a3       	std	Y+32, r25	; 0x20
    bd70:	8f 8f       	std	Y+31, r24	; 0x1f
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:132 (discriminator 4)
      translated_regs[-OUT_Y_L_M] = D_OUT_Y_L_M;
    bd72:	8a e0       	ldi	r24, 0x0A	; 10
    bd74:	90 e0       	ldi	r25, 0x00	; 0
    bd76:	9e a3       	std	Y+38, r25	; 0x26
    bd78:	8d a3       	std	Y+37, r24	; 0x25
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:133 (discriminator 4)
      translated_regs[-OUT_Y_H_M] = D_OUT_Y_H_M;
    bd7a:	8b e0       	ldi	r24, 0x0B	; 11
    bd7c:	90 e0       	ldi	r25, 0x00	; 0
    bd7e:	9c a3       	std	Y+36, r25	; 0x24
    bd80:	8b a3       	std	Y+35, r24	; 0x23
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:134 (discriminator 4)
      translated_regs[-OUT_Z_L_M] = D_OUT_Z_L_M;
    bd82:	8c e0       	ldi	r24, 0x0C	; 12
    bd84:	90 e0       	ldi	r25, 0x00	; 0
    bd86:	9a a7       	std	Y+42, r25	; 0x2a
    bd88:	89 a7       	std	Y+41, r24	; 0x29
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:135 (discriminator 4)
      translated_regs[-OUT_Z_H_M] = D_OUT_Z_H_M;
    bd8a:	8d e0       	ldi	r24, 0x0D	; 13
    bd8c:	90 e0       	ldi	r25, 0x00	; 0
    bd8e:	98 a7       	std	Y+40, r25	; 0x28
    bd90:	8f a3       	std	Y+39, r24	; 0x27
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:172
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
      break;
  }
  
  return true;
    bd92:	81 e0       	ldi	r24, 0x01	; 1
    bd94:	b0 cf       	rjmp	.-160    	; 0xbcf6 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xf4>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:72
      // check SA0 high address unless SA0 was specified to be low
      if (sa0 != sa0_low && testReg(D_SA0_HIGH_ADDRESS, WHO_AM_I) == D_WHO_ID)
      {
        // device responds to address 0011101 with D ID; it's a D with SA0 high
        device = device_D;
        sa0 = sa0_high;
    bd96:	ee 24       	eor	r14, r14
    bd98:	e3 94       	inc	r14
    bd9a:	f1 2c       	mov	r15, r1
    bd9c:	85 cf       	rjmp	.-246    	; 0xbca8 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xa6>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:150
      translated_regs[-OUT_Z_H_M] = DLHC_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLHC_OUT_Z_L_M;
      break;

    case device_DLM:
      acc_address = (sa0 == sa0_high) ? DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS : DLM_DLH_ACC_SA0_LOW_ADDRESS;
    bd9e:	ea 94       	dec	r14
    bda0:	ef 28       	or	r14, r15
    bda2:	e9 f0       	breq	.+58     	; 0xbdde <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1dc>
    bda4:	88 e1       	ldi	r24, 0x18	; 24
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:150 (discriminator 4)
    bda6:	8b 8f       	std	Y+27, r24	; 0x1b
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:151 (discriminator 4)
      mag_address = DLHC_DLM_DLH_MAG_ADDRESS;
    bda8:	8e e1       	ldi	r24, 0x1E	; 30
    bdaa:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:152 (discriminator 4)
      translated_regs[-OUT_X_H_M] = DLM_OUT_X_H_M;
    bdac:	83 e0       	ldi	r24, 0x03	; 3
    bdae:	90 e0       	ldi	r25, 0x00	; 0
    bdb0:	98 a3       	std	Y+32, r25	; 0x20
    bdb2:	8f 8f       	std	Y+31, r24	; 0x1f
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:153 (discriminator 4)
      translated_regs[-OUT_X_L_M] = DLM_OUT_X_L_M;
    bdb4:	84 e0       	ldi	r24, 0x04	; 4
    bdb6:	90 e0       	ldi	r25, 0x00	; 0
    bdb8:	9a a3       	std	Y+34, r25	; 0x22
    bdba:	89 a3       	std	Y+33, r24	; 0x21
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:154 (discriminator 4)
      translated_regs[-OUT_Y_H_M] = DLM_OUT_Y_H_M;
    bdbc:	87 e0       	ldi	r24, 0x07	; 7
    bdbe:	90 e0       	ldi	r25, 0x00	; 0
    bdc0:	9c a3       	std	Y+36, r25	; 0x24
    bdc2:	8b a3       	std	Y+35, r24	; 0x23
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:155 (discriminator 4)
      translated_regs[-OUT_Y_L_M] = DLM_OUT_Y_L_M;
    bdc4:	88 e0       	ldi	r24, 0x08	; 8
    bdc6:	90 e0       	ldi	r25, 0x00	; 0
    bdc8:	9e a3       	std	Y+38, r25	; 0x26
    bdca:	8d a3       	std	Y+37, r24	; 0x25
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:156 (discriminator 4)
      translated_regs[-OUT_Z_H_M] = DLM_OUT_Z_H_M;
    bdcc:	85 e0       	ldi	r24, 0x05	; 5
    bdce:	90 e0       	ldi	r25, 0x00	; 0
    bdd0:	98 a7       	std	Y+40, r25	; 0x28
    bdd2:	8f a3       	std	Y+39, r24	; 0x27
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:157 (discriminator 4)
      translated_regs[-OUT_Z_L_M] = DLM_OUT_Z_L_M;
    bdd4:	86 e0       	ldi	r24, 0x06	; 6
    bdd6:	90 e0       	ldi	r25, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:168 (discriminator 4)
      translated_regs[-OUT_X_H_M] = DLH_OUT_X_H_M;
      translated_regs[-OUT_X_L_M] = DLH_OUT_X_L_M;
      translated_regs[-OUT_Y_H_M] = DLH_OUT_Y_H_M;
      translated_regs[-OUT_Y_L_M] = DLH_OUT_Y_L_M;
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
    bdd8:	9a a7       	std	Y+42, r25	; 0x2a
    bdda:	89 a7       	std	Y+41, r24	; 0x29
    bddc:	da cf       	rjmp	.-76     	; 0xbd92 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x190>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:150
      translated_regs[-OUT_Z_H_M] = DLHC_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLHC_OUT_Z_L_M;
      break;

    case device_DLM:
      acc_address = (sa0 == sa0_high) ? DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS : DLM_DLH_ACC_SA0_LOW_ADDRESS;
    bdde:	89 e1       	ldi	r24, 0x19	; 25
    bde0:	e2 cf       	rjmp	.-60     	; 0xbda6 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1a4>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:161
      translated_regs[-OUT_Z_H_M] = DLM_OUT_Z_H_M;
      translated_regs[-OUT_Z_L_M] = DLM_OUT_Z_L_M;
      break;

    case device_DLH:
      acc_address = (sa0 == sa0_high) ? DLHC_DLM_DLH_ACC_SA0_HIGH_ADDRESS : DLM_DLH_ACC_SA0_LOW_ADDRESS;
    bde2:	88 e1       	ldi	r24, 0x18	; 24
    bde4:	ea 94       	dec	r14
    bde6:	ef 28       	or	r14, r15
    bde8:	09 f4       	brne	.+2      	; 0xbdec <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1ea>
    bdea:	89 e1       	ldi	r24, 0x19	; 25
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:161 (discriminator 4)
    bdec:	8b 8f       	std	Y+27, r24	; 0x1b
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:162 (discriminator 4)
      mag_address = DLHC_DLM_DLH_MAG_ADDRESS;
    bdee:	8e e1       	ldi	r24, 0x1E	; 30
    bdf0:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:163 (discriminator 4)
      translated_regs[-OUT_X_H_M] = DLH_OUT_X_H_M;
    bdf2:	83 e0       	ldi	r24, 0x03	; 3
    bdf4:	90 e0       	ldi	r25, 0x00	; 0
    bdf6:	98 a3       	std	Y+32, r25	; 0x20
    bdf8:	8f 8f       	std	Y+31, r24	; 0x1f
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:164 (discriminator 4)
      translated_regs[-OUT_X_L_M] = DLH_OUT_X_L_M;
    bdfa:	84 e0       	ldi	r24, 0x04	; 4
    bdfc:	90 e0       	ldi	r25, 0x00	; 0
    bdfe:	9a a3       	std	Y+34, r25	; 0x22
    be00:	89 a3       	std	Y+33, r24	; 0x21
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:165 (discriminator 4)
      translated_regs[-OUT_Y_H_M] = DLH_OUT_Y_H_M;
    be02:	85 e0       	ldi	r24, 0x05	; 5
    be04:	90 e0       	ldi	r25, 0x00	; 0
    be06:	9c a3       	std	Y+36, r25	; 0x24
    be08:	8b a3       	std	Y+35, r24	; 0x23
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:166 (discriminator 4)
      translated_regs[-OUT_Y_L_M] = DLH_OUT_Y_L_M;
    be0a:	86 e0       	ldi	r24, 0x06	; 6
    be0c:	90 e0       	ldi	r25, 0x00	; 0
    be0e:	9e a3       	std	Y+38, r25	; 0x26
    be10:	8d a3       	std	Y+37, r24	; 0x25
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:167 (discriminator 4)
      translated_regs[-OUT_Z_H_M] = DLH_OUT_Z_H_M;
    be12:	87 e0       	ldi	r24, 0x07	; 7
    be14:	90 e0       	ldi	r25, 0x00	; 0
    be16:	98 a7       	std	Y+40, r25	; 0x28
    be18:	8f a3       	std	Y+39, r24	; 0x27
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:168 (discriminator 4)
      translated_regs[-OUT_Z_L_M] = DLH_OUT_Z_L_M;
    be1a:	88 e0       	ldi	r24, 0x08	; 8
    be1c:	90 e0       	ldi	r25, 0x00	; 0
    be1e:	dc cf       	rjmp	.-72     	; 0xbdd8 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x1d6>
C:\Users\nyvir\Documents\Arduino\libraries\lsm303-arduino-master/LSM303.cpp:117
        }
      }
    }
    
    // make sure device and SA0 were successfully detected; otherwise, indicate failure
    if (device == device_auto || sa0 == sa0_auto)
    be20:	04 30       	cpi	r16, 0x04	; 4
    be22:	11 05       	cpc	r17, r1
    be24:	09 f4       	brne	.+2      	; 0xbe28 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x226>
    be26:	66 cf       	rjmp	.-308    	; 0xbcf4 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0xf2>
    be28:	87 cf       	rjmp	.-242    	; 0xbd38 <LSM303::init(LSM303::deviceType, LSM303::sa0State)+0x136>

0000be2a <SoftwareSerial::read()>:
_ZN14SoftwareSerial4readEv():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:308
uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    return num - sub;
  else
    return 1;
}
    be2a:	20 91 a9 0a 	lds	r18, 0x0AA9	; 0x800aa9 <SoftwareSerial::active_object>
    be2e:	30 91 aa 0a 	lds	r19, 0x0AAA	; 0x800aaa <SoftwareSerial::active_object+0x1>
    be32:	28 17       	cp	r18, r24
    be34:	39 07       	cpc	r19, r25
    be36:	b9 f4       	brne	.+46     	; 0xbe66 <SoftwareSerial::read()+0x3c>
    be38:	90 91 67 0a 	lds	r25, 0x0A67	; 0x800a67 <SoftwareSerial::_receive_buffer_head>
    be3c:	80 91 68 0a 	lds	r24, 0x0A68	; 0x800a68 <SoftwareSerial::_receive_buffer_tail>
    be40:	98 17       	cp	r25, r24
    be42:	89 f0       	breq	.+34     	; 0xbe66 <SoftwareSerial::read()+0x3c>
    be44:	e0 91 67 0a 	lds	r30, 0x0A67	; 0x800a67 <SoftwareSerial::_receive_buffer_head>
    be48:	f0 e0       	ldi	r31, 0x00	; 0
    be4a:	e7 59       	subi	r30, 0x97	; 151
    be4c:	f5 4f       	sbci	r31, 0xF5	; 245
    be4e:	80 81       	ld	r24, Z
    be50:	20 91 67 0a 	lds	r18, 0x0A67	; 0x800a67 <SoftwareSerial::_receive_buffer_head>
    be54:	30 e0       	ldi	r19, 0x00	; 0
    be56:	2f 5f       	subi	r18, 0xFF	; 255
    be58:	3f 4f       	sbci	r19, 0xFF	; 255
    be5a:	2f 73       	andi	r18, 0x3F	; 63
    be5c:	33 27       	eor	r19, r19
    be5e:	20 93 67 0a 	sts	0x0A67, r18	; 0x800a67 <SoftwareSerial::_receive_buffer_head>
    be62:	90 e0       	ldi	r25, 0x00	; 0
    be64:	08 95       	ret
    be66:	8f ef       	ldi	r24, 0xFF	; 255
    be68:	9f ef       	ldi	r25, 0xFF	; 255
    be6a:	08 95       	ret

0000be6c <SoftwareSerial::write(unsigned char)>:
_ZN14SoftwareSerial5writeEh():
    be6c:	ef 92       	push	r14
    be6e:	ff 92       	push	r15
    be70:	0f 93       	push	r16
    be72:	1f 93       	push	r17
    be74:	cf 93       	push	r28
    be76:	df 93       	push	r29
    be78:	dc 01       	movw	r26, r24
    be7a:	5c 96       	adiw	r26, 0x1c	; 28
    be7c:	ed 90       	ld	r14, X+
    be7e:	fc 90       	ld	r15, X
    be80:	5d 97       	sbiw	r26, 0x1d	; 29
    be82:	e1 14       	cp	r14, r1
    be84:	f1 04       	cpc	r15, r1
    be86:	79 f4       	brne	.+30     	; 0xbea6 <SoftwareSerial::write(unsigned char)+0x3a>
_ZN5Print13setWriteErrorEi():
    be88:	81 e0       	ldi	r24, 0x01	; 1
    be8a:	90 e0       	ldi	r25, 0x00	; 0
    be8c:	13 96       	adiw	r26, 0x03	; 3
    be8e:	9c 93       	st	X, r25
    be90:	8e 93       	st	-X, r24
    be92:	12 97       	sbiw	r26, 0x02	; 2
_ZN14SoftwareSerial5writeEh():
    be94:	90 e0       	ldi	r25, 0x00	; 0
    be96:	80 e0       	ldi	r24, 0x00	; 0
    be98:	df 91       	pop	r29
    be9a:	cf 91       	pop	r28
    be9c:	1f 91       	pop	r17
    be9e:	0f 91       	pop	r16
    bea0:	ff 90       	pop	r15
    bea2:	ef 90       	pop	r14
    bea4:	08 95       	ret
    bea6:	51 96       	adiw	r26, 0x11	; 17
    bea8:	ed 91       	ld	r30, X+
    beaa:	fc 91       	ld	r31, X
    beac:	52 97       	sbiw	r26, 0x12	; 18
    beae:	50 96       	adiw	r26, 0x10	; 16
    beb0:	8c 91       	ld	r24, X
    beb2:	50 97       	sbiw	r26, 0x10	; 16
    beb4:	98 2f       	mov	r25, r24
    beb6:	90 95       	com	r25
    beb8:	0f b7       	in	r16, 0x3f	; 63
    beba:	5e 96       	adiw	r26, 0x1e	; 30
    bebc:	2c 91       	ld	r18, X
    bebe:	5e 97       	sbiw	r26, 0x1e	; 30
    bec0:	12 2f       	mov	r17, r18
    bec2:	12 70       	andi	r17, 0x02	; 2
    bec4:	21 fd       	sbrc	r18, 1
    bec6:	60 95       	com	r22
    bec8:	f8 94       	cli
    beca:	20 81       	ld	r18, Z
    becc:	11 23       	and	r17, r17
    bece:	19 f1       	breq	.+70     	; 0xbf16 <SoftwareSerial::write(unsigned char)+0xaa>
    bed0:	28 2b       	or	r18, r24
    bed2:	20 83       	st	Z, r18
_delay_loop_2():
    bed4:	e7 01       	movw	r28, r14
    bed6:	21 97       	sbiw	r28, 0x01	; 1
    bed8:	f1 f7       	brne	.-4      	; 0xbed6 <SoftwareSerial::write(unsigned char)+0x6a>
    beda:	28 e0       	ldi	r18, 0x08	; 8
_ZN14SoftwareSerial5writeEh():
    bedc:	46 2f       	mov	r20, r22
    bede:	50 e0       	ldi	r21, 0x00	; 0
    bee0:	30 81       	ld	r19, Z
    bee2:	60 ff       	sbrs	r22, 0
    bee4:	1a c0       	rjmp	.+52     	; 0xbf1a <SoftwareSerial::write(unsigned char)+0xae>
    bee6:	38 2b       	or	r19, r24
    bee8:	30 83       	st	Z, r19
_delay_loop_2():
    beea:	e7 01       	movw	r28, r14
    beec:	21 97       	sbiw	r28, 0x01	; 1
    beee:	f1 f7       	brne	.-4      	; 0xbeec <SoftwareSerial::write(unsigned char)+0x80>
_ZN14SoftwareSerial5writeEh():
    bef0:	ba 01       	movw	r22, r20
    bef2:	75 95       	asr	r23
    bef4:	67 95       	ror	r22
    bef6:	21 50       	subi	r18, 0x01	; 1
    bef8:	89 f7       	brne	.-30     	; 0xbedc <SoftwareSerial::write(unsigned char)+0x70>
    befa:	11 23       	and	r17, r17
    befc:	81 f0       	breq	.+32     	; 0xbf1e <SoftwareSerial::write(unsigned char)+0xb2>
    befe:	80 81       	ld	r24, Z
    bf00:	89 23       	and	r24, r25
    bf02:	80 83       	st	Z, r24
    bf04:	0f bf       	out	0x3f, r16	; 63
_delay_loop_2():
    bf06:	5c 96       	adiw	r26, 0x1c	; 28
    bf08:	8d 91       	ld	r24, X+
    bf0a:	9c 91       	ld	r25, X
    bf0c:	01 97       	sbiw	r24, 0x01	; 1
    bf0e:	f1 f7       	brne	.-4      	; 0xbf0c <SoftwareSerial::write(unsigned char)+0xa0>
_ZN14SoftwareSerial5writeEh():
    bf10:	81 e0       	ldi	r24, 0x01	; 1
    bf12:	90 e0       	ldi	r25, 0x00	; 0
    bf14:	c1 cf       	rjmp	.-126    	; 0xbe98 <SoftwareSerial::write(unsigned char)+0x2c>
    bf16:	29 23       	and	r18, r25
    bf18:	dc cf       	rjmp	.-72     	; 0xbed2 <SoftwareSerial::write(unsigned char)+0x66>
    bf1a:	39 23       	and	r19, r25
    bf1c:	e5 cf       	rjmp	.-54     	; 0xbee8 <SoftwareSerial::write(unsigned char)+0x7c>
    bf1e:	90 81       	ld	r25, Z
    bf20:	89 2b       	or	r24, r25
    bf22:	ef cf       	rjmp	.-34     	; 0xbf02 <SoftwareSerial::write(unsigned char)+0x96>

0000bf24 <SoftwareSerial::flush()>:
_ZN14SoftwareSerial5flushEv():
    bf24:	08 95       	ret

0000bf26 <SoftwareSerial::peek()>:
_ZN14SoftwareSerial4peekEv():
    bf26:	20 91 a9 0a 	lds	r18, 0x0AA9	; 0x800aa9 <SoftwareSerial::active_object>
    bf2a:	30 91 aa 0a 	lds	r19, 0x0AAA	; 0x800aaa <SoftwareSerial::active_object+0x1>
    bf2e:	28 17       	cp	r18, r24
    bf30:	39 07       	cpc	r19, r25
    bf32:	71 f4       	brne	.+28     	; 0xbf50 <SoftwareSerial::peek()+0x2a>
    bf34:	90 91 67 0a 	lds	r25, 0x0A67	; 0x800a67 <SoftwareSerial::_receive_buffer_head>
    bf38:	80 91 68 0a 	lds	r24, 0x0A68	; 0x800a68 <SoftwareSerial::_receive_buffer_tail>
    bf3c:	98 17       	cp	r25, r24
    bf3e:	41 f0       	breq	.+16     	; 0xbf50 <SoftwareSerial::peek()+0x2a>
    bf40:	e0 91 67 0a 	lds	r30, 0x0A67	; 0x800a67 <SoftwareSerial::_receive_buffer_head>
    bf44:	f0 e0       	ldi	r31, 0x00	; 0
    bf46:	e7 59       	subi	r30, 0x97	; 151
    bf48:	f5 4f       	sbci	r31, 0xF5	; 245
    bf4a:	80 81       	ld	r24, Z
    bf4c:	90 e0       	ldi	r25, 0x00	; 0
    bf4e:	08 95       	ret
    bf50:	8f ef       	ldi	r24, 0xFF	; 255
    bf52:	9f ef       	ldi	r25, 0xFF	; 255
    bf54:	08 95       	ret

0000bf56 <SoftwareSerial::available()>:
_ZN14SoftwareSerial9availableEv():
    bf56:	20 91 a9 0a 	lds	r18, 0x0AA9	; 0x800aa9 <SoftwareSerial::active_object>
    bf5a:	30 91 aa 0a 	lds	r19, 0x0AAA	; 0x800aaa <SoftwareSerial::active_object+0x1>
    bf5e:	28 17       	cp	r18, r24
    bf60:	39 07       	cpc	r19, r25
    bf62:	71 f4       	brne	.+28     	; 0xbf80 <SoftwareSerial::available()+0x2a>
    bf64:	80 91 68 0a 	lds	r24, 0x0A68	; 0x800a68 <SoftwareSerial::_receive_buffer_tail>
    bf68:	20 91 67 0a 	lds	r18, 0x0A67	; 0x800a67 <SoftwareSerial::_receive_buffer_head>
    bf6c:	90 e0       	ldi	r25, 0x00	; 0
    bf6e:	80 5c       	subi	r24, 0xC0	; 192
    bf70:	9f 4f       	sbci	r25, 0xFF	; 255
    bf72:	82 1b       	sub	r24, r18
    bf74:	91 09       	sbc	r25, r1
    bf76:	60 e4       	ldi	r22, 0x40	; 64
    bf78:	70 e0       	ldi	r23, 0x00	; 0
    bf7a:	0e 94 95 72 	call	0xe52a	; 0xe52a <__divmodhi4>
    bf7e:	08 95       	ret
    bf80:	90 e0       	ldi	r25, 0x00	; 0
    bf82:	80 e0       	ldi	r24, 0x00	; 0
    bf84:	08 95       	ret

0000bf86 <SoftwareSerial::stopListening()>:
_ZN14SoftwareSerial13stopListeningEv():
    bf86:	e0 91 a9 0a 	lds	r30, 0x0AA9	; 0x800aa9 <SoftwareSerial::active_object>
    bf8a:	f0 91 aa 0a 	lds	r31, 0x0AAA	; 0x800aaa <SoftwareSerial::active_object+0x1>
    bf8e:	e8 17       	cp	r30, r24
    bf90:	f9 07       	cpc	r31, r25
    bf92:	69 f4       	brne	.+26     	; 0xbfae <SoftwareSerial::stopListening()+0x28>
_ZN14SoftwareSerial11setRxIntMskEb():
    bf94:	a3 89       	ldd	r26, Z+19	; 0x13
    bf96:	b4 89       	ldd	r27, Z+20	; 0x14
    bf98:	9c 91       	ld	r25, X
    bf9a:	85 89       	ldd	r24, Z+21	; 0x15
    bf9c:	80 95       	com	r24
    bf9e:	89 23       	and	r24, r25
    bfa0:	8c 93       	st	X, r24
_ZN14SoftwareSerial13stopListeningEv():
    bfa2:	10 92 aa 0a 	sts	0x0AAA, r1	; 0x800aaa <SoftwareSerial::active_object+0x1>
    bfa6:	10 92 a9 0a 	sts	0x0AA9, r1	; 0x800aa9 <SoftwareSerial::active_object>
    bfaa:	81 e0       	ldi	r24, 0x01	; 1
    bfac:	08 95       	ret
    bfae:	80 e0       	ldi	r24, 0x00	; 0
    bfb0:	08 95       	ret

0000bfb2 <SoftwareSerial::listen()>:
_ZN14SoftwareSerial6listenEv():
    bfb2:	cf 93       	push	r28
    bfb4:	df 93       	push	r29
    bfb6:	ec 01       	movw	r28, r24
    bfb8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    bfba:	9b 8d       	ldd	r25, Y+27	; 0x1b
    bfbc:	89 2b       	or	r24, r25
    bfbe:	01 f1       	breq	.+64     	; 0xc000 <SoftwareSerial::listen()+0x4e>
    bfc0:	80 91 a9 0a 	lds	r24, 0x0AA9	; 0x800aa9 <SoftwareSerial::active_object>
    bfc4:	90 91 aa 0a 	lds	r25, 0x0AAA	; 0x800aaa <SoftwareSerial::active_object+0x1>
    bfc8:	8c 17       	cp	r24, r28
    bfca:	9d 07       	cpc	r25, r29
    bfcc:	c9 f0       	breq	.+50     	; 0xc000 <SoftwareSerial::listen()+0x4e>
    bfce:	00 97       	sbiw	r24, 0x00	; 0
    bfd0:	11 f0       	breq	.+4      	; 0xbfd6 <SoftwareSerial::listen()+0x24>
    bfd2:	0e 94 c3 5f 	call	0xbf86	; 0xbf86 <SoftwareSerial::stopListening()>
    bfd6:	8e 8d       	ldd	r24, Y+30	; 0x1e
    bfd8:	8e 7f       	andi	r24, 0xFE	; 254
    bfda:	8e 8f       	std	Y+30, r24	; 0x1e
    bfdc:	10 92 68 0a 	sts	0x0A68, r1	; 0x800a68 <SoftwareSerial::_receive_buffer_tail>
    bfe0:	10 92 67 0a 	sts	0x0A67, r1	; 0x800a67 <SoftwareSerial::_receive_buffer_head>
    bfe4:	d0 93 aa 0a 	sts	0x0AAA, r29	; 0x800aaa <SoftwareSerial::active_object+0x1>
    bfe8:	c0 93 a9 0a 	sts	0x0AA9, r28	; 0x800aa9 <SoftwareSerial::active_object>
_ZN14SoftwareSerial11setRxIntMskEb():
    bfec:	eb 89       	ldd	r30, Y+19	; 0x13
    bfee:	fc 89       	ldd	r31, Y+20	; 0x14
    bff0:	80 81       	ld	r24, Z
    bff2:	9d 89       	ldd	r25, Y+21	; 0x15
    bff4:	89 2b       	or	r24, r25
    bff6:	80 83       	st	Z, r24
    bff8:	81 e0       	ldi	r24, 0x01	; 1
_ZN14SoftwareSerial6listenEv():
    bffa:	df 91       	pop	r29
    bffc:	cf 91       	pop	r28
    bffe:	08 95       	ret
    c000:	80 e0       	ldi	r24, 0x00	; 0
    c002:	fb cf       	rjmp	.-10     	; 0xbffa <SoftwareSerial::listen()+0x48>

0000c004 <__vector_4>:
__vector_6():
    c004:	1f 92       	push	r1
    c006:	0f 92       	push	r0
    c008:	0f b6       	in	r0, 0x3f	; 63
    c00a:	0f 92       	push	r0
    c00c:	11 24       	eor	r1, r1
    c00e:	0b b6       	in	r0, 0x3b	; 59
    c010:	0f 92       	push	r0
    c012:	2f 93       	push	r18
    c014:	3f 93       	push	r19
    c016:	4f 93       	push	r20
    c018:	5f 93       	push	r21
    c01a:	6f 93       	push	r22
    c01c:	7f 93       	push	r23
    c01e:	8f 93       	push	r24
    c020:	9f 93       	push	r25
    c022:	af 93       	push	r26
    c024:	bf 93       	push	r27
    c026:	ef 93       	push	r30
    c028:	ff 93       	push	r31
_ZN14SoftwareSerial16handle_interruptEv():
    c02a:	e0 91 a9 0a 	lds	r30, 0x0AA9	; 0x800aa9 <SoftwareSerial::active_object>
    c02e:	f0 91 aa 0a 	lds	r31, 0x0AAA	; 0x800aaa <SoftwareSerial::active_object+0x1>
    c032:	30 97       	sbiw	r30, 0x00	; 0
    c034:	49 f0       	breq	.+18     	; 0xc048 <__vector_4+0x44>
    c036:	a6 85       	ldd	r26, Z+14	; 0x0e
    c038:	b7 85       	ldd	r27, Z+15	; 0x0f
    c03a:	85 85       	ldd	r24, Z+13	; 0x0d
_ZN14SoftwareSerial4recvEv():
    c03c:	96 8d       	ldd	r25, Z+30	; 0x1e
    c03e:	91 ff       	sbrs	r25, 1
    c040:	16 c0       	rjmp	.+44     	; 0xc06e <__vector_4+0x6a>
_ZN14SoftwareSerial11rx_pin_readEv():
    c042:	9c 91       	ld	r25, X
    c044:	89 23       	and	r24, r25
_ZN14SoftwareSerial4recvEv():
    c046:	b1 f4       	brne	.+44     	; 0xc074 <__vector_4+0x70>
__vector_6():
    c048:	ff 91       	pop	r31
    c04a:	ef 91       	pop	r30
    c04c:	bf 91       	pop	r27
    c04e:	af 91       	pop	r26
    c050:	9f 91       	pop	r25
    c052:	8f 91       	pop	r24
    c054:	7f 91       	pop	r23
    c056:	6f 91       	pop	r22
    c058:	5f 91       	pop	r21
    c05a:	4f 91       	pop	r20
    c05c:	3f 91       	pop	r19
    c05e:	2f 91       	pop	r18
    c060:	0f 90       	pop	r0
    c062:	0b be       	out	0x3b, r0	; 59
    c064:	0f 90       	pop	r0
    c066:	0f be       	out	0x3f, r0	; 63
    c068:	0f 90       	pop	r0
    c06a:	1f 90       	pop	r1
    c06c:	18 95       	reti
_ZN14SoftwareSerial11rx_pin_readEv():
    c06e:	9c 91       	ld	r25, X
    c070:	89 23       	and	r24, r25
_ZN14SoftwareSerial4recvEv():
    c072:	51 f7       	brne	.-44     	; 0xc048 <__vector_4+0x44>
_ZN14SoftwareSerial11setRxIntMskEb():
    c074:	a3 89       	ldd	r26, Z+19	; 0x13
    c076:	b4 89       	ldd	r27, Z+20	; 0x14
    c078:	9c 91       	ld	r25, X
    c07a:	85 89       	ldd	r24, Z+21	; 0x15
    c07c:	80 95       	com	r24
    c07e:	89 23       	and	r24, r25
    c080:	8c 93       	st	X, r24
_delay_loop_2():
    c082:	86 89       	ldd	r24, Z+22	; 0x16
    c084:	97 89       	ldd	r25, Z+23	; 0x17
    c086:	01 97       	sbiw	r24, 0x01	; 1
    c088:	f1 f7       	brne	.-4      	; 0xc086 <__vector_4+0x82>
_ZN14SoftwareSerial4recvEv():
    c08a:	60 8d       	ldd	r22, Z+24	; 0x18
    c08c:	71 8d       	ldd	r23, Z+25	; 0x19
_ZN14SoftwareSerial11rx_pin_readEv():
    c08e:	a6 85       	ldd	r26, Z+14	; 0x0e
    c090:	b7 85       	ldd	r27, Z+15	; 0x0f
    c092:	55 85       	ldd	r21, Z+13	; 0x0d
    c094:	38 e0       	ldi	r19, 0x08	; 8
_ZN14SoftwareSerial4recvEv():
    c096:	20 e0       	ldi	r18, 0x00	; 0
_delay_loop_2():
    c098:	cb 01       	movw	r24, r22
    c09a:	01 97       	sbiw	r24, 0x01	; 1
    c09c:	f1 f7       	brne	.-4      	; 0xc09a <__vector_4+0x96>
_ZN14SoftwareSerial4recvEv():
    c09e:	82 2f       	mov	r24, r18
    c0a0:	90 e0       	ldi	r25, 0x00	; 0
    c0a2:	95 95       	asr	r25
    c0a4:	87 95       	ror	r24
    c0a6:	28 2f       	mov	r18, r24
_ZN14SoftwareSerial11rx_pin_readEv():
    c0a8:	4c 91       	ld	r20, X
    c0aa:	45 23       	and	r20, r21
_ZN14SoftwareSerial4recvEv():
    c0ac:	09 f0       	breq	.+2      	; 0xc0b0 <__vector_4+0xac>
    c0ae:	20 68       	ori	r18, 0x80	; 128
    c0b0:	31 50       	subi	r19, 0x01	; 1
    c0b2:	91 f7       	brne	.-28     	; 0xc098 <__vector_4+0x94>
    c0b4:	86 8d       	ldd	r24, Z+30	; 0x1e
    c0b6:	81 fd       	sbrc	r24, 1
    c0b8:	20 95       	com	r18
    c0ba:	80 91 68 0a 	lds	r24, 0x0A68	; 0x800a68 <SoftwareSerial::_receive_buffer_tail>
    c0be:	90 e0       	ldi	r25, 0x00	; 0
    c0c0:	01 96       	adiw	r24, 0x01	; 1
    c0c2:	8f 73       	andi	r24, 0x3F	; 63
    c0c4:	99 27       	eor	r25, r25
    c0c6:	30 91 67 0a 	lds	r19, 0x0A67	; 0x800a67 <SoftwareSerial::_receive_buffer_head>
    c0ca:	38 17       	cp	r19, r24
    c0cc:	99 f0       	breq	.+38     	; 0xc0f4 <__vector_4+0xf0>
    c0ce:	a0 91 68 0a 	lds	r26, 0x0A68	; 0x800a68 <SoftwareSerial::_receive_buffer_tail>
    c0d2:	b0 e0       	ldi	r27, 0x00	; 0
    c0d4:	a7 59       	subi	r26, 0x97	; 151
    c0d6:	b5 4f       	sbci	r27, 0xF5	; 245
    c0d8:	2c 93       	st	X, r18
    c0da:	80 93 68 0a 	sts	0x0A68, r24	; 0x800a68 <SoftwareSerial::_receive_buffer_tail>
_delay_loop_2():
    c0de:	82 8d       	ldd	r24, Z+26	; 0x1a
    c0e0:	93 8d       	ldd	r25, Z+27	; 0x1b
    c0e2:	01 97       	sbiw	r24, 0x01	; 1
    c0e4:	f1 f7       	brne	.-4      	; 0xc0e2 <__vector_4+0xde>
_ZN14SoftwareSerial11setRxIntMskEb():
    c0e6:	a3 89       	ldd	r26, Z+19	; 0x13
    c0e8:	b4 89       	ldd	r27, Z+20	; 0x14
    c0ea:	8c 91       	ld	r24, X
    c0ec:	95 89       	ldd	r25, Z+21	; 0x15
    c0ee:	89 2b       	or	r24, r25
    c0f0:	8c 93       	st	X, r24
__vector_6():
    c0f2:	aa cf       	rjmp	.-172    	; 0xc048 <__vector_4+0x44>
_ZN14SoftwareSerial4recvEv():
    c0f4:	86 8d       	ldd	r24, Z+30	; 0x1e
    c0f6:	81 60       	ori	r24, 0x01	; 1
    c0f8:	86 8f       	std	Z+30, r24	; 0x1e
    c0fa:	f1 cf       	rjmp	.-30     	; 0xc0de <__vector_4+0xda>

0000c0fc <SoftwareSerial::~SoftwareSerial()>:
_ZN14SoftwareSerialD2Ev():
    c0fc:	20 e8       	ldi	r18, 0x80	; 128
    c0fe:	32 e0       	ldi	r19, 0x02	; 2
    c100:	fc 01       	movw	r30, r24
    c102:	31 83       	std	Z+1, r19	; 0x01
    c104:	20 83       	st	Z, r18
_ZN14SoftwareSerial3endEv():
    c106:	0c 94 c3 5f 	jmp	0xbf86	; 0xbf86 <SoftwareSerial::stopListening()>

0000c10a <SoftwareSerial::setTX(signed char)>:
_ZN14SoftwareSerial5setTXEa():
    c10a:	1f 93       	push	r17
    c10c:	cf 93       	push	r28
    c10e:	df 93       	push	r29
    c110:	ec 01       	movw	r28, r24
    c112:	16 2f       	mov	r17, r22
    c114:	6e 8d       	ldd	r22, Y+30	; 0x1e
    c116:	66 95       	lsr	r22
    c118:	61 70       	andi	r22, 0x01	; 1
    c11a:	81 e0       	ldi	r24, 0x01	; 1
    c11c:	68 27       	eor	r22, r24
    c11e:	81 2f       	mov	r24, r17
    c120:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
    c124:	61 e0       	ldi	r22, 0x01	; 1
    c126:	81 2f       	mov	r24, r17
    c128:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
    c12c:	81 2f       	mov	r24, r17
    c12e:	11 0f       	add	r17, r17
    c130:	99 0b       	sbc	r25, r25
    c132:	fc 01       	movw	r30, r24
    c134:	e0 59       	subi	r30, 0x90	; 144
    c136:	ff 4d       	sbci	r31, 0xDF	; 223
    c138:	e4 91       	lpm	r30, Z
    c13a:	e8 8b       	std	Y+16, r30	; 0x10
    c13c:	fc 01       	movw	r30, r24
    c13e:	e0 57       	subi	r30, 0x70	; 112
    c140:	ff 4d       	sbci	r31, 0xDF	; 223
    c142:	e4 91       	lpm	r30, Z
    c144:	f0 e0       	ldi	r31, 0x00	; 0
    c146:	ee 0f       	add	r30, r30
    c148:	ff 1f       	adc	r31, r31
    c14a:	e6 54       	subi	r30, 0x46	; 70
    c14c:	ff 4d       	sbci	r31, 0xDF	; 223
    c14e:	85 91       	lpm	r24, Z+
    c150:	94 91       	lpm	r25, Z
    c152:	9a 8b       	std	Y+18, r25	; 0x12
    c154:	89 8b       	std	Y+17, r24	; 0x11
    c156:	df 91       	pop	r29
    c158:	cf 91       	pop	r28
    c15a:	1f 91       	pop	r17
    c15c:	08 95       	ret

0000c15e <SoftwareSerial::setRX(signed char)>:
_ZN14SoftwareSerial5setRXEa():
    c15e:	1f 93       	push	r17
    c160:	cf 93       	push	r28
    c162:	df 93       	push	r29
    c164:	ec 01       	movw	r28, r24
    c166:	16 2f       	mov	r17, r22
    c168:	60 e0       	ldi	r22, 0x00	; 0
    c16a:	81 2f       	mov	r24, r17
    c16c:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
    c170:	8e 8d       	ldd	r24, Y+30	; 0x1e
    c172:	81 fd       	sbrc	r24, 1
    c174:	04 c0       	rjmp	.+8      	; 0xc17e <SoftwareSerial::setRX(signed char)+0x20>
    c176:	61 e0       	ldi	r22, 0x01	; 1
    c178:	81 2f       	mov	r24, r17
    c17a:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
    c17e:	1c 87       	std	Y+12, r17	; 0x0c
    c180:	81 2f       	mov	r24, r17
    c182:	11 0f       	add	r17, r17
    c184:	99 0b       	sbc	r25, r25
    c186:	fc 01       	movw	r30, r24
    c188:	e0 59       	subi	r30, 0x90	; 144
    c18a:	ff 4d       	sbci	r31, 0xDF	; 223
    c18c:	e4 91       	lpm	r30, Z
    c18e:	ed 87       	std	Y+13, r30	; 0x0d
    c190:	fc 01       	movw	r30, r24
    c192:	e0 57       	subi	r30, 0x70	; 112
    c194:	ff 4d       	sbci	r31, 0xDF	; 223
    c196:	e4 91       	lpm	r30, Z
    c198:	f0 e0       	ldi	r31, 0x00	; 0
    c19a:	ee 0f       	add	r30, r30
    c19c:	ff 1f       	adc	r31, r31
    c19e:	e0 55       	subi	r30, 0x50	; 80
    c1a0:	ff 4d       	sbci	r31, 0xDF	; 223
    c1a2:	85 91       	lpm	r24, Z+
    c1a4:	94 91       	lpm	r25, Z
    c1a6:	9f 87       	std	Y+15, r25	; 0x0f
    c1a8:	8e 87       	std	Y+14, r24	; 0x0e
    c1aa:	df 91       	pop	r29
    c1ac:	cf 91       	pop	r28
    c1ae:	1f 91       	pop	r17
    c1b0:	08 95       	ret

0000c1b2 <SoftwareSerial::SoftwareSerial(signed char, signed char, bool)>:
_ZN14SoftwareSerialC2Eaab():
    c1b2:	1f 93       	push	r17
    c1b4:	cf 93       	push	r28
    c1b6:	df 93       	push	r29
    c1b8:	ec 01       	movw	r28, r24
    c1ba:	16 2f       	mov	r17, r22
_ZN5PrintC4Ev():
    c1bc:	1b 82       	std	Y+3, r1	; 0x03
    c1be:	1a 82       	std	Y+2, r1	; 0x02
_ZN6StreamC4Ev():
    c1c0:	88 ee       	ldi	r24, 0xE8	; 232
    c1c2:	93 e0       	ldi	r25, 0x03	; 3
    c1c4:	a0 e0       	ldi	r26, 0x00	; 0
    c1c6:	b0 e0       	ldi	r27, 0x00	; 0
    c1c8:	8c 83       	std	Y+4, r24	; 0x04
    c1ca:	9d 83       	std	Y+5, r25	; 0x05
    c1cc:	ae 83       	std	Y+6, r26	; 0x06
    c1ce:	bf 83       	std	Y+7, r27	; 0x07
_ZN14SoftwareSerialC2Eaab():
    c1d0:	80 e8       	ldi	r24, 0x80	; 128
    c1d2:	92 e0       	ldi	r25, 0x02	; 2
    c1d4:	99 83       	std	Y+1, r25	; 0x01
    c1d6:	88 83       	st	Y, r24
    c1d8:	1f 8a       	std	Y+23, r1	; 0x17
    c1da:	1e 8a       	std	Y+22, r1	; 0x16
    c1dc:	19 8e       	std	Y+25, r1	; 0x19
    c1de:	18 8e       	std	Y+24, r1	; 0x18
    c1e0:	1b 8e       	std	Y+27, r1	; 0x1b
    c1e2:	1a 8e       	std	Y+26, r1	; 0x1a
    c1e4:	1d 8e       	std	Y+29, r1	; 0x1d
    c1e6:	1c 8e       	std	Y+28, r1	; 0x1c
    c1e8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    c1ea:	8e 7f       	andi	r24, 0xFE	; 254
    c1ec:	20 fb       	bst	r18, 0
    c1ee:	81 f9       	bld	r24, 1
    c1f0:	8e 8f       	std	Y+30, r24	; 0x1e
    c1f2:	64 2f       	mov	r22, r20
    c1f4:	ce 01       	movw	r24, r28
    c1f6:	0e 94 85 60 	call	0xc10a	; 0xc10a <SoftwareSerial::setTX(signed char)>
    c1fa:	61 2f       	mov	r22, r17
    c1fc:	ce 01       	movw	r24, r28
    c1fe:	df 91       	pop	r29
    c200:	cf 91       	pop	r28
    c202:	1f 91       	pop	r17
    c204:	0c 94 af 60 	jmp	0xc15e	; 0xc15e <SoftwareSerial::setRX(signed char)>

0000c208 <SoftwareSerial::begin(long)>:
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:315
//
// Public methods
//

void SoftwareSerial::begin(long speed)
{ 
    c208:	cf 93       	push	r28
    c20a:	df 93       	push	r29
    c20c:	ec 01       	movw	r28, r24
    c20e:	9a 01       	movw	r18, r20
    c210:	ab 01       	movw	r20, r22
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:316
  _rx_delay_centering = _rx_delay_intrabit = _rx_delay_stopbit = _tx_delay = 0;
    c212:	1b 8e       	std	Y+27, r1	; 0x1b
    c214:	1a 8e       	std	Y+26, r1	; 0x1a
    c216:	19 8e       	std	Y+25, r1	; 0x19
    c218:	18 8e       	std	Y+24, r1	; 0x18
    c21a:	1f 8a       	std	Y+23, r1	; 0x17
    c21c:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:319

  // Precalculate the various delays, in number of 4-cycle delays
  uint16_t bit_delay = (F_CPU / speed) / 4;
    c21e:	60 e0       	ldi	r22, 0x00	; 0
    c220:	79 e0       	ldi	r23, 0x09	; 9
    c222:	8d e3       	ldi	r24, 0x3D	; 61
    c224:	90 e0       	ldi	r25, 0x00	; 0
    c226:	0e 94 cb 72 	call	0xe596	; 0xe596 <__divmodsi4>
    c22a:	f9 01       	movw	r30, r18
_ZN14SoftwareSerial12subtract_capEjj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:305
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    return num - sub;
    c22c:	c9 01       	movw	r24, r18
    c22e:	03 97       	sbiw	r24, 0x03	; 3
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:304
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    c230:	24 30       	cpi	r18, 0x04	; 4
    c232:	31 05       	cpc	r19, r1
    c234:	10 f4       	brcc	.+4      	; 0xc23a <SoftwareSerial::begin(long)+0x32>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:307
    return num - sub;
  else
    return 1;
    c236:	81 e0       	ldi	r24, 0x01	; 1
    c238:	90 e0       	ldi	r25, 0x00	; 0
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:326
  // 12 (gcc 4.8.2) or 13 (gcc 4.3.2) cycles from start bit to first bit,
  // 15 (gcc 4.8.2) or 16 (gcc 4.3.2) cycles between bits,
  // 12 (gcc 4.8.2) or 14 (gcc 4.3.2) cycles from last bit to stop bit
  // These are all close enough to just use 15 cycles, since the inter-bit
  // timings are the most critical (deviations stack 8 times)
  _tx_delay = subtract_cap(bit_delay, 15 / 4);
    c23a:	9d 8f       	std	Y+29, r25	; 0x1d
    c23c:	8c 8f       	std	Y+28, r24	; 0x1c
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:330

#if defined(PCINT_ONLY) || defined(INT_AND_PCINT)
  // Only setup rx when we have a valid PCINT for this pin
  if (digitalPinToPCICR(_receivePin)) {
    c23e:	6c 85       	ldd	r22, Y+12	; 0x0c
    c240:	60 32       	cpi	r22, 0x20	; 32
    c242:	08 f0       	brcs	.+2      	; 0xc246 <SoftwareSerial::begin(long)+0x3e>
    c244:	52 c0       	rjmp	.+164    	; 0xc2ea <SoftwareSerial::begin(long)+0xe2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:345
    // are 17 more cycles until the pin value is read (excluding the
    // delay in the loop).
    // We want to have a total delay of 1.5 bit time. Inside the loop,
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);
    c246:	c9 01       	movw	r24, r18
    c248:	96 95       	lsr	r25
    c24a:	87 95       	ror	r24
_ZN14SoftwareSerial12subtract_capEjj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:304
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    c24c:	84 31       	cpi	r24, 0x14	; 20
    c24e:	91 05       	cpc	r25, r1
    c250:	08 f4       	brcc	.+2      	; 0xc254 <SoftwareSerial::begin(long)+0x4c>
    c252:	50 c0       	rjmp	.+160    	; 0xc2f4 <SoftwareSerial::begin(long)+0xec>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:305
    return num - sub;
    c254:	43 97       	sbiw	r24, 0x13	; 19
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:345
    // are 17 more cycles until the pin value is read (excluding the
    // delay in the loop).
    // We want to have a total delay of 1.5 bit time. Inside the loop,
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);
    c256:	9f 8b       	std	Y+23, r25	; 0x17
    c258:	8e 8b       	std	Y+22, r24	; 0x16
_ZN14SoftwareSerial12subtract_capEjj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:305
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    return num - sub;
    c25a:	c9 01       	movw	r24, r18
    c25c:	05 97       	sbiw	r24, 0x05	; 5
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:304
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    c25e:	36 97       	sbiw	r30, 0x06	; 6
    c260:	10 f4       	brcc	.+4      	; 0xc266 <SoftwareSerial::begin(long)+0x5e>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:307
    return num - sub;
  else
    return 1;
    c262:	81 e0       	ldi	r24, 0x01	; 1
    c264:	90 e0       	ldi	r25, 0x00	; 0
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:348
    // we already wait for 1 bit time - 23 cycles, so here we wait for
    // 0.5 bit time - (71 + 18 - 22) cycles.
    _rx_delay_centering = subtract_cap(bit_delay / 2, (4 + 4 + 75 + 17 - 23) / 4);

    // There are 23 cycles in each loop iteration (excluding the delay)
    _rx_delay_intrabit = subtract_cap(bit_delay, 23 / 4);
    c266:	99 8f       	std	Y+25, r25	; 0x19
    c268:	88 8f       	std	Y+24, r24	; 0x18
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:357
    // mask is enabled again (which _must_ happen during the stopbit).
    // This delay aims at 3/4 of a bit time, meaning the end of the
    // delay will be at 1/4th of the stopbit. This allows some extra
    // time for ISR cleanup, which makes 115200 baud at 16Mhz work more
    // reliably
    _rx_delay_stopbit = subtract_cap(bit_delay * 3 / 4, (37 + 11) / 4);
    c26a:	c9 01       	movw	r24, r18
    c26c:	88 0f       	add	r24, r24
    c26e:	99 1f       	adc	r25, r25
    c270:	28 0f       	add	r18, r24
    c272:	39 1f       	adc	r19, r25
    c274:	36 95       	lsr	r19
    c276:	27 95       	ror	r18
    c278:	36 95       	lsr	r19
    c27a:	27 95       	ror	r18
_ZN14SoftwareSerial12subtract_capEjj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:304
  uint8_t port = digitalPinToPort(rx);
  _receivePortRegister = portInputRegister(port);
}

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    c27c:	2d 30       	cpi	r18, 0x0D	; 13
    c27e:	31 05       	cpc	r19, r1
    c280:	e0 f1       	brcs	.+120    	; 0xc2fa <SoftwareSerial::begin(long)+0xf2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:305
    return num - sub;
    c282:	2c 50       	subi	r18, 0x0C	; 12
    c284:	31 09       	sbc	r19, r1
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:357
    // mask is enabled again (which _must_ happen during the stopbit).
    // This delay aims at 3/4 of a bit time, meaning the end of the
    // delay will be at 1/4th of the stopbit. This allows some extra
    // time for ISR cleanup, which makes 115200 baud at 16Mhz work more
    // reliably
    _rx_delay_stopbit = subtract_cap(bit_delay * 3 / 4, (37 + 11) / 4);
    c286:	3b 8f       	std	Y+27, r19	; 0x1b
    c288:	2a 8f       	std	Y+26, r18	; 0x1a
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371


    // Enable the PCINT for the entire port here, but never disable it
    // (others might also need it, so we disable the interrupt by using
    // the per-pin PCMSK register).
    *digitalPinToPCICR(_receivePin) |= _BV(digitalPinToPCICRbit(_receivePin));
    c28a:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    c28e:	82 e0       	ldi	r24, 0x02	; 2
    c290:	68 30       	cpi	r22, 0x08	; 8
    c292:	3c f0       	brlt	.+14     	; 0xc2a2 <SoftwareSerial::begin(long)+0x9a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371 (discriminator 5)
    c294:	88 e0       	ldi	r24, 0x08	; 8
    c296:	60 31       	cpi	r22, 0x10	; 16
    c298:	24 f0       	brlt	.+8      	; 0xc2a2 <SoftwareSerial::begin(long)+0x9a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371 (discriminator 7)
    c29a:	81 e0       	ldi	r24, 0x01	; 1
    c29c:	68 31       	cpi	r22, 0x18	; 24
    c29e:	0c f4       	brge	.+2      	; 0xc2a2 <SoftwareSerial::begin(long)+0x9a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371
    c2a0:	84 e0       	ldi	r24, 0x04	; 4
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:371 (discriminator 16)
    c2a2:	89 2b       	or	r24, r25
    c2a4:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:374 (discriminator 16)
    // Precalculate the pcint mask register and value, so setRxIntMask
    // can be used inside the ISR without costing too much time.
    _pcint_maskreg = digitalPinToPCMSK(_receivePin);
    c2a8:	8c 85       	ldd	r24, Y+12	; 0x0c
    c2aa:	2c e6       	ldi	r18, 0x6C	; 108
    c2ac:	30 e0       	ldi	r19, 0x00	; 0
    c2ae:	88 30       	cpi	r24, 0x08	; 8
    c2b0:	54 f0       	brlt	.+20     	; 0xc2c6 <SoftwareSerial::begin(long)+0xbe>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:374 (discriminator 1)
    c2b2:	23 e7       	ldi	r18, 0x73	; 115
    c2b4:	30 e0       	ldi	r19, 0x00	; 0
    c2b6:	80 31       	cpi	r24, 0x10	; 16
    c2b8:	34 f0       	brlt	.+12     	; 0xc2c6 <SoftwareSerial::begin(long)+0xbe>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:374 (discriminator 3)
    c2ba:	2b e6       	ldi	r18, 0x6B	; 107
    c2bc:	30 e0       	ldi	r19, 0x00	; 0
    c2be:	88 31       	cpi	r24, 0x18	; 24
    c2c0:	14 f4       	brge	.+4      	; 0xc2c6 <SoftwareSerial::begin(long)+0xbe>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:374
    c2c2:	2d e6       	ldi	r18, 0x6D	; 109
    c2c4:	30 e0       	ldi	r19, 0x00	; 0
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:374 (discriminator 12)
    c2c6:	3c 8b       	std	Y+20, r19	; 0x14
    c2c8:	2b 8b       	std	Y+19, r18	; 0x13
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:375 (discriminator 12)
    _pcint_maskvalue = _BV(digitalPinToPCMSKbit(_receivePin));
    c2ca:	87 78       	andi	r24, 0x87	; 135
    c2cc:	87 ff       	sbrs	r24, 7
    c2ce:	03 c0       	rjmp	.+6      	; 0xc2d6 <SoftwareSerial::begin(long)+0xce>
    c2d0:	81 50       	subi	r24, 0x01	; 1
    c2d2:	88 6f       	ori	r24, 0xF8	; 248
    c2d4:	8f 5f       	subi	r24, 0xFF	; 255
    c2d6:	91 e0       	ldi	r25, 0x01	; 1
    c2d8:	01 c0       	rjmp	.+2      	; 0xc2dc <SoftwareSerial::begin(long)+0xd4>
    c2da:	99 0f       	add	r25, r25
    c2dc:	8a 95       	dec	r24
    c2de:	ea f7       	brpl	.-6      	; 0xc2da <SoftwareSerial::begin(long)+0xd2>
    c2e0:	9d 8b       	std	Y+21, r25	; 0x15
_delay_loop_2():
c:\users\nyvir\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay_basic.h:110 (discriminator 12)
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    c2e2:	8c 8d       	ldd	r24, Y+28	; 0x1c
    c2e4:	9d 8d       	ldd	r25, Y+29	; 0x1d
    c2e6:	01 97       	sbiw	r24, 0x01	; 1
    c2e8:	f1 f7       	brne	.-4      	; 0xc2e6 <SoftwareSerial::begin(long)+0xde>
_ZN14SoftwareSerial5beginEl():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:442
#if _DEBUG
  pinMode(_DEBUG_PIN1, OUTPUT);
  pinMode(_DEBUG_PIN2, OUTPUT);
#endif

  listen();
    c2ea:	ce 01       	movw	r24, r28
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:443
}
    c2ec:	df 91       	pop	r29
    c2ee:	cf 91       	pop	r28
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:442
#if _DEBUG
  pinMode(_DEBUG_PIN1, OUTPUT);
  pinMode(_DEBUG_PIN2, OUTPUT);
#endif

  listen();
    c2f0:	0c 94 d9 5f 	jmp	0xbfb2	; 0xbfb2 <SoftwareSerial::listen()>
_ZN14SoftwareSerial12subtract_capEjj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\libraries\SoftwareSerial\src/SoftwareSerial.cpp:307

uint16_t SoftwareSerial::subtract_cap(uint16_t num, uint16_t sub) {
  if (num > sub)
    return num - sub;
  else
    return 1;
    c2f4:	81 e0       	ldi	r24, 0x01	; 1
    c2f6:	90 e0       	ldi	r25, 0x00	; 0
    c2f8:	ae cf       	rjmp	.-164    	; 0xc256 <SoftwareSerial::begin(long)+0x4e>
    c2fa:	21 e0       	ldi	r18, 0x01	; 1
    c2fc:	30 e0       	ldi	r19, 0x00	; 0
    c2fe:	c3 cf       	rjmp	.-122    	; 0xc286 <SoftwareSerial::begin(long)+0x7e>

0000c300 <TinyGPSPlus::TinyGPSPlus()>:
_ZN11TinyGPSPlusC2Ev():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:434

uint8_t TinyGPSTime::centisecond()
{
   updated = false;
   return time % 100;
}
    c300:	fc 01       	movw	r30, r24
_ZN15TinyGPSLocationC4Ev():
    c302:	10 82       	st	Z, r1
    c304:	11 82       	std	Z+1, r1	; 0x01
_ZN10RawDegreesC4Ev():
    c306:	13 82       	std	Z+3, r1	; 0x03
    c308:	12 82       	std	Z+2, r1	; 0x02
    c30a:	14 82       	std	Z+4, r1	; 0x04
    c30c:	15 82       	std	Z+5, r1	; 0x05
    c30e:	16 82       	std	Z+6, r1	; 0x06
    c310:	17 82       	std	Z+7, r1	; 0x07
    c312:	10 86       	std	Z+8, r1	; 0x08
    c314:	12 86       	std	Z+10, r1	; 0x0a
    c316:	11 86       	std	Z+9, r1	; 0x09
    c318:	13 86       	std	Z+11, r1	; 0x0b
    c31a:	14 86       	std	Z+12, r1	; 0x0c
    c31c:	15 86       	std	Z+13, r1	; 0x0d
    c31e:	16 86       	std	Z+14, r1	; 0x0e
    c320:	17 86       	std	Z+15, r1	; 0x0f
    c322:	11 8a       	std	Z+17, r1	; 0x11
    c324:	10 8a       	std	Z+16, r1	; 0x10
    c326:	12 8a       	std	Z+18, r1	; 0x12
    c328:	13 8a       	std	Z+19, r1	; 0x13
    c32a:	14 8a       	std	Z+20, r1	; 0x14
    c32c:	15 8a       	std	Z+21, r1	; 0x15
    c32e:	16 8a       	std	Z+22, r1	; 0x16
    c330:	10 8e       	std	Z+24, r1	; 0x18
    c332:	17 8a       	std	Z+23, r1	; 0x17
    c334:	11 8e       	std	Z+25, r1	; 0x19
    c336:	12 8e       	std	Z+26, r1	; 0x1a
    c338:	13 8e       	std	Z+27, r1	; 0x1b
    c33a:	14 8e       	std	Z+28, r1	; 0x1c
    c33c:	15 8e       	std	Z+29, r1	; 0x1d
_ZN11TinyGPSDateC4Ev():
    c33e:	12 a2       	std	Z+34, r1	; 0x22
    c340:	13 a2       	std	Z+35, r1	; 0x23
    c342:	14 a2       	std	Z+36, r1	; 0x24
    c344:	15 a2       	std	Z+37, r1	; 0x25
    c346:	16 a2       	std	Z+38, r1	; 0x26
    c348:	17 a2       	std	Z+39, r1	; 0x27
_ZN11TinyGPSTimeC4Ev():
    c34a:	10 aa       	std	Z+48, r1	; 0x30
    c34c:	11 aa       	std	Z+49, r1	; 0x31
    c34e:	12 aa       	std	Z+50, r1	; 0x32
    c350:	13 aa       	std	Z+51, r1	; 0x33
    c352:	14 aa       	std	Z+52, r1	; 0x34
    c354:	15 aa       	std	Z+53, r1	; 0x35
_ZN14TinyGPSDecimalC4Ev():
    c356:	16 ae       	std	Z+62, r1	; 0x3e
    c358:	17 ae       	std	Z+63, r1	; 0x3f
    c35a:	dc 01       	movw	r26, r24
    c35c:	de 96       	adiw	r26, 0x3e	; 62
    c35e:	16 96       	adiw	r26, 0x06	; 6
    c360:	1d 92       	st	X+, r1
    c362:	1d 92       	st	X+, r1
    c364:	1d 92       	st	X+, r1
    c366:	1c 92       	st	X, r1
    c368:	19 97       	sbiw	r26, 0x09	; 9
    c36a:	1e 96       	adiw	r26, 0x0e	; 14
    c36c:	1c 92       	st	X, r1
    c36e:	11 96       	adiw	r26, 0x01	; 1
    c370:	1c 92       	st	X, r1
    c372:	11 97       	sbiw	r26, 0x01	; 1
    c374:	16 96       	adiw	r26, 0x06	; 6
    c376:	1d 92       	st	X+, r1
    c378:	1d 92       	st	X+, r1
    c37a:	1d 92       	st	X+, r1
    c37c:	1c 92       	st	X, r1
    c37e:	19 97       	sbiw	r26, 0x09	; 9
    c380:	1e 96       	adiw	r26, 0x0e	; 14
    c382:	1c 92       	st	X, r1
    c384:	11 96       	adiw	r26, 0x01	; 1
    c386:	1c 92       	st	X, r1
    c388:	11 97       	sbiw	r26, 0x01	; 1
    c38a:	16 96       	adiw	r26, 0x06	; 6
    c38c:	1d 92       	st	X+, r1
    c38e:	1d 92       	st	X+, r1
    c390:	1d 92       	st	X+, r1
    c392:	1c 92       	st	X, r1
    c394:	19 97       	sbiw	r26, 0x09	; 9
_ZN14TinyGPSIntegerC4Ev():
    c396:	1e 96       	adiw	r26, 0x0e	; 14
    c398:	1c 92       	st	X, r1
    c39a:	11 96       	adiw	r26, 0x01	; 1
    c39c:	1c 92       	st	X, r1
    c39e:	11 97       	sbiw	r26, 0x01	; 1
    c3a0:	16 96       	adiw	r26, 0x06	; 6
    c3a2:	1d 92       	st	X+, r1
    c3a4:	1d 92       	st	X+, r1
    c3a6:	1d 92       	st	X+, r1
    c3a8:	1c 92       	st	X, r1
    c3aa:	19 97       	sbiw	r26, 0x09	; 9
_ZN14TinyGPSDecimalC4Ev():
    c3ac:	1e 96       	adiw	r26, 0x0e	; 14
    c3ae:	1c 92       	st	X, r1
    c3b0:	11 96       	adiw	r26, 0x01	; 1
    c3b2:	1c 92       	st	X, r1
    c3b4:	11 97       	sbiw	r26, 0x01	; 1
    c3b6:	16 96       	adiw	r26, 0x06	; 6
    c3b8:	1d 92       	st	X+, r1
    c3ba:	1d 92       	st	X+, r1
    c3bc:	1d 92       	st	X+, r1
    c3be:	1c 92       	st	X, r1
    c3c0:	19 97       	sbiw	r26, 0x09	; 9
_ZN11TinyGPSPlusC2Ev():
    c3c2:	1e 96       	adiw	r26, 0x0e	; 14
    c3c4:	1c 92       	st	X, r1
    c3c6:	11 96       	adiw	r26, 0x01	; 1
    c3c8:	1c 92       	st	X, r1
    c3ca:	50 96       	adiw	r26, 0x10	; 16
    c3cc:	82 e0       	ldi	r24, 0x02	; 2
    c3ce:	8c 93       	st	X, r24
    c3d0:	11 96       	adiw	r26, 0x01	; 1
    c3d2:	1c 92       	st	X, r1
    c3d4:	11 96       	adiw	r26, 0x01	; 1
    c3d6:	1c 92       	st	X, r1
    c3d8:	11 96       	adiw	r26, 0x01	; 1
    c3da:	1c 92       	st	X, r1
    c3dc:	11 96       	adiw	r26, 0x01	; 1
    c3de:	11 96       	adiw	r26, 0x01	; 1
    c3e0:	1c 92       	st	X, r1
    c3e2:	1e 92       	st	-X, r1
    c3e4:	12 96       	adiw	r26, 0x02	; 2
    c3e6:	11 96       	adiw	r26, 0x01	; 1
    c3e8:	1c 92       	st	X, r1
    c3ea:	1e 92       	st	-X, r1
    c3ec:	12 96       	adiw	r26, 0x02	; 2
    c3ee:	1d 92       	st	X+, r1
    c3f0:	1d 92       	st	X+, r1
    c3f2:	1d 92       	st	X+, r1
    c3f4:	1c 92       	st	X, r1
    c3f6:	13 97       	sbiw	r26, 0x03	; 3
    c3f8:	14 96       	adiw	r26, 0x04	; 4
    c3fa:	1d 92       	st	X+, r1
    c3fc:	1d 92       	st	X+, r1
    c3fe:	1d 92       	st	X+, r1
    c400:	1c 92       	st	X, r1
    c402:	13 97       	sbiw	r26, 0x03	; 3
    c404:	14 96       	adiw	r26, 0x04	; 4
    c406:	1d 92       	st	X+, r1
    c408:	1d 92       	st	X+, r1
    c40a:	1d 92       	st	X+, r1
    c40c:	1c 92       	st	X, r1
    c40e:	13 97       	sbiw	r26, 0x03	; 3
    c410:	14 96       	adiw	r26, 0x04	; 4
    c412:	1d 92       	st	X+, r1
    c414:	1d 92       	st	X+, r1
    c416:	1d 92       	st	X+, r1
    c418:	1c 92       	st	X, r1
    c41a:	13 97       	sbiw	r26, 0x03	; 3
    c41c:	ea 57       	subi	r30, 0x7A	; 122
    c41e:	ff 4f       	sbci	r31, 0xFF	; 255
    c420:	10 82       	st	Z, r1
    c422:	08 95       	ret

0000c424 <TinyGPSPlus::fromHex(char)>:
_ZN11TinyGPSPlus7fromHexEc():
    c424:	86 2f       	mov	r24, r22
    c426:	06 2e       	mov	r0, r22
    c428:	00 0c       	add	r0, r0
    c42a:	99 0b       	sbc	r25, r25
    c42c:	2f eb       	ldi	r18, 0xBF	; 191
    c42e:	26 0f       	add	r18, r22
    c430:	26 30       	cpi	r18, 0x06	; 6
    c432:	10 f4       	brcc	.+4      	; 0xc438 <TinyGPSPlus::fromHex(char)+0x14>
    c434:	c7 97       	sbiw	r24, 0x37	; 55
    c436:	08 95       	ret
    c438:	61 56       	subi	r22, 0x61	; 97
    c43a:	66 30       	cpi	r22, 0x06	; 6
    c43c:	18 f4       	brcc	.+6      	; 0xc444 <TinyGPSPlus::fromHex(char)+0x20>
    c43e:	87 55       	subi	r24, 0x57	; 87
    c440:	91 09       	sbc	r25, r1
    c442:	08 95       	ret
    c444:	c0 97       	sbiw	r24, 0x30	; 48
    c446:	08 95       	ret

0000c448 <TinyGPSPlus::parseDecimal(char const*)>:
_ZN11TinyGPSPlus12parseDecimalEPKc():
    c448:	1f 93       	push	r17
    c44a:	cf 93       	push	r28
    c44c:	df 93       	push	r29
    c44e:	ec 01       	movw	r28, r24
    c450:	18 81       	ld	r17, Y
    c452:	1d 32       	cpi	r17, 0x2D	; 45
    c454:	09 f4       	brne	.+2      	; 0xc458 <TinyGPSPlus::parseDecimal(char const*)+0x10>
    c456:	21 96       	adiw	r28, 0x01	; 1
    c458:	ce 01       	movw	r24, r28
    c45a:	0e 94 71 74 	call	0xe8e2	; 0xe8e2 <atol>
    c45e:	9b 01       	movw	r18, r22
    c460:	ac 01       	movw	r20, r24
    c462:	a4 e6       	ldi	r26, 0x64	; 100
    c464:	b0 e0       	ldi	r27, 0x00	; 0
    c466:	0e 94 02 73 	call	0xe604	; 0xe604 <__muluhisi3>
    c46a:	ab 01       	movw	r20, r22
    c46c:	bc 01       	movw	r22, r24
    c46e:	fe 01       	movw	r30, r28
    c470:	29 91       	ld	r18, Y+
    c472:	82 2f       	mov	r24, r18
    c474:	02 2e       	mov	r0, r18
    c476:	00 0c       	add	r0, r0
    c478:	99 0b       	sbc	r25, r25
    c47a:	c0 97       	sbiw	r24, 0x30	; 48
    c47c:	0a 97       	sbiw	r24, 0x0a	; 10
    c47e:	b8 f3       	brcs	.-18     	; 0xc46e <TinyGPSPlus::parseDecimal(char const*)+0x26>
    c480:	2e 32       	cpi	r18, 0x2E	; 46
    c482:	31 f5       	brne	.+76     	; 0xc4d0 <TinyGPSPlus::parseDecimal(char const*)+0x88>
    c484:	81 81       	ldd	r24, Z+1	; 0x01
    c486:	08 2e       	mov	r0, r24
    c488:	00 0c       	add	r0, r0
    c48a:	99 0b       	sbc	r25, r25
    c48c:	c0 97       	sbiw	r24, 0x30	; 48
    c48e:	8a 30       	cpi	r24, 0x0A	; 10
    c490:	91 05       	cpc	r25, r1
    c492:	f0 f4       	brcc	.+60     	; 0xc4d0 <TinyGPSPlus::parseDecimal(char const*)+0x88>
    c494:	aa e0       	ldi	r26, 0x0A	; 10
    c496:	a8 9f       	mul	r26, r24
    c498:	90 01       	movw	r18, r0
    c49a:	a9 9f       	mul	r26, r25
    c49c:	30 0d       	add	r19, r0
    c49e:	11 24       	eor	r1, r1
    c4a0:	c9 01       	movw	r24, r18
    c4a2:	33 0f       	add	r19, r19
    c4a4:	aa 0b       	sbc	r26, r26
    c4a6:	bb 0b       	sbc	r27, r27
    c4a8:	48 0f       	add	r20, r24
    c4aa:	59 1f       	adc	r21, r25
    c4ac:	6a 1f       	adc	r22, r26
    c4ae:	7b 1f       	adc	r23, r27
    c4b0:	82 81       	ldd	r24, Z+2	; 0x02
    c4b2:	08 2e       	mov	r0, r24
    c4b4:	00 0c       	add	r0, r0
    c4b6:	99 0b       	sbc	r25, r25
    c4b8:	c0 97       	sbiw	r24, 0x30	; 48
    c4ba:	8a 30       	cpi	r24, 0x0A	; 10
    c4bc:	91 05       	cpc	r25, r1
    c4be:	40 f4       	brcc	.+16     	; 0xc4d0 <TinyGPSPlus::parseDecimal(char const*)+0x88>
    c4c0:	09 2e       	mov	r0, r25
    c4c2:	00 0c       	add	r0, r0
    c4c4:	aa 0b       	sbc	r26, r26
    c4c6:	bb 0b       	sbc	r27, r27
    c4c8:	48 0f       	add	r20, r24
    c4ca:	59 1f       	adc	r21, r25
    c4cc:	6a 1f       	adc	r22, r26
    c4ce:	7b 1f       	adc	r23, r27
    c4d0:	1d 32       	cpi	r17, 0x2D	; 45
    c4d2:	39 f4       	brne	.+14     	; 0xc4e2 <TinyGPSPlus::parseDecimal(char const*)+0x9a>
    c4d4:	70 95       	com	r23
    c4d6:	60 95       	com	r22
    c4d8:	50 95       	com	r21
    c4da:	41 95       	neg	r20
    c4dc:	5f 4f       	sbci	r21, 0xFF	; 255
    c4de:	6f 4f       	sbci	r22, 0xFF	; 255
    c4e0:	7f 4f       	sbci	r23, 0xFF	; 255
    c4e2:	cb 01       	movw	r24, r22
    c4e4:	ba 01       	movw	r22, r20
    c4e6:	df 91       	pop	r29
    c4e8:	cf 91       	pop	r28
    c4ea:	1f 91       	pop	r17
    c4ec:	08 95       	ret

0000c4ee <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)>:
_ZN11TinyGPSPlus12parseDegreesEPKcR10RawDegrees():
    c4ee:	2f 92       	push	r2
    c4f0:	3f 92       	push	r3
    c4f2:	4f 92       	push	r4
    c4f4:	5f 92       	push	r5
    c4f6:	6f 92       	push	r6
    c4f8:	7f 92       	push	r7
    c4fa:	8f 92       	push	r8
    c4fc:	9f 92       	push	r9
    c4fe:	af 92       	push	r10
    c500:	bf 92       	push	r11
    c502:	cf 92       	push	r12
    c504:	df 92       	push	r13
    c506:	ef 92       	push	r14
    c508:	ff 92       	push	r15
    c50a:	0f 93       	push	r16
    c50c:	1f 93       	push	r17
    c50e:	cf 93       	push	r28
    c510:	df 93       	push	r29
    c512:	d8 2f       	mov	r29, r24
    c514:	c9 2f       	mov	r28, r25
    c516:	8b 01       	movw	r16, r22
    c518:	0e 94 71 74 	call	0xe8e2	; 0xe8e2 <atol>
    c51c:	24 e6       	ldi	r18, 0x64	; 100
    c51e:	30 e0       	ldi	r19, 0x00	; 0
    c520:	40 e0       	ldi	r20, 0x00	; 0
    c522:	50 e0       	ldi	r21, 0x00	; 0
    c524:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    c528:	49 01       	movw	r8, r18
    c52a:	9b 01       	movw	r18, r22
    c52c:	ac 01       	movw	r20, r24
    c52e:	60 e8       	ldi	r22, 0x80	; 128
    c530:	76 e9       	ldi	r23, 0x96	; 150
    c532:	88 e9       	ldi	r24, 0x98	; 152
    c534:	90 e0       	ldi	r25, 0x00	; 0
    c536:	0e 94 79 72 	call	0xe4f2	; 0xe4f2 <__mulsi3>
    c53a:	6b 01       	movw	r12, r22
    c53c:	7c 01       	movw	r14, r24
    c53e:	f8 01       	movw	r30, r16
    c540:	91 82       	std	Z+1, r9	; 0x01
    c542:	80 82       	st	Z, r8
    c544:	ed 2f       	mov	r30, r29
    c546:	fc 2f       	mov	r31, r28
    c548:	21 91       	ld	r18, Z+
    c54a:	82 2f       	mov	r24, r18
    c54c:	02 2e       	mov	r0, r18
    c54e:	00 0c       	add	r0, r0
    c550:	99 0b       	sbc	r25, r25
    c552:	c0 97       	sbiw	r24, 0x30	; 48
    c554:	0a 97       	sbiw	r24, 0x0a	; 10
    c556:	c0 f3       	brcs	.-16     	; 0xc548 <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)+0x5a>
    c558:	2e 32       	cpi	r18, 0x2E	; 46
    c55a:	39 f5       	brne	.+78     	; 0xc5aa <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)+0xbc>
    c55c:	1f 01       	movw	r2, r30
    c55e:	80 e8       	ldi	r24, 0x80	; 128
    c560:	88 2e       	mov	r8, r24
    c562:	86 e9       	ldi	r24, 0x96	; 150
    c564:	98 2e       	mov	r9, r24
    c566:	88 e9       	ldi	r24, 0x98	; 152
    c568:	a8 2e       	mov	r10, r24
    c56a:	b1 2c       	mov	r11, r1
    c56c:	9a e0       	ldi	r25, 0x0A	; 10
    c56e:	49 2e       	mov	r4, r25
    c570:	51 2c       	mov	r5, r1
    c572:	61 2c       	mov	r6, r1
    c574:	71 2c       	mov	r7, r1
    c576:	f1 01       	movw	r30, r2
    c578:	c1 91       	ld	r28, Z+
    c57a:	1f 01       	movw	r2, r30
    c57c:	0c 2e       	mov	r0, r28
    c57e:	00 0c       	add	r0, r0
    c580:	dd 0b       	sbc	r29, r29
    c582:	e0 97       	sbiw	r28, 0x30	; 48
    c584:	ca 30       	cpi	r28, 0x0A	; 10
    c586:	d1 05       	cpc	r29, r1
    c588:	80 f4       	brcc	.+32     	; 0xc5aa <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)+0xbc>
    c58a:	c5 01       	movw	r24, r10
    c58c:	b4 01       	movw	r22, r8
    c58e:	a3 01       	movw	r20, r6
    c590:	92 01       	movw	r18, r4
    c592:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    c596:	49 01       	movw	r8, r18
    c598:	5a 01       	movw	r10, r20
    c59a:	de 01       	movw	r26, r28
    c59c:	0e 94 0d 73 	call	0xe61a	; 0xe61a <__mulshisi3>
    c5a0:	c6 0e       	add	r12, r22
    c5a2:	d7 1e       	adc	r13, r23
    c5a4:	e8 1e       	adc	r14, r24
    c5a6:	f9 1e       	adc	r15, r25
    c5a8:	e6 cf       	rjmp	.-52     	; 0xc576 <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)+0x88>
    c5aa:	a5 e0       	ldi	r26, 0x05	; 5
    c5ac:	b0 e0       	ldi	r27, 0x00	; 0
    c5ae:	a7 01       	movw	r20, r14
    c5b0:	96 01       	movw	r18, r12
    c5b2:	0e 94 02 73 	call	0xe604	; 0xe604 <__muluhisi3>
    c5b6:	6f 5f       	subi	r22, 0xFF	; 255
    c5b8:	7f 4f       	sbci	r23, 0xFF	; 255
    c5ba:	8f 4f       	sbci	r24, 0xFF	; 255
    c5bc:	9f 4f       	sbci	r25, 0xFF	; 255
    c5be:	23 e0       	ldi	r18, 0x03	; 3
    c5c0:	30 e0       	ldi	r19, 0x00	; 0
    c5c2:	40 e0       	ldi	r20, 0x00	; 0
    c5c4:	50 e0       	ldi	r21, 0x00	; 0
    c5c6:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    c5ca:	f8 01       	movw	r30, r16
    c5cc:	22 83       	std	Z+2, r18	; 0x02
    c5ce:	33 83       	std	Z+3, r19	; 0x03
    c5d0:	44 83       	std	Z+4, r20	; 0x04
    c5d2:	55 83       	std	Z+5, r21	; 0x05
    c5d4:	16 82       	std	Z+6, r1	; 0x06
    c5d6:	df 91       	pop	r29
    c5d8:	cf 91       	pop	r28
    c5da:	1f 91       	pop	r17
    c5dc:	0f 91       	pop	r16
    c5de:	ff 90       	pop	r15
    c5e0:	ef 90       	pop	r14
    c5e2:	df 90       	pop	r13
    c5e4:	cf 90       	pop	r12
    c5e6:	bf 90       	pop	r11
    c5e8:	af 90       	pop	r10
    c5ea:	9f 90       	pop	r9
    c5ec:	8f 90       	pop	r8
    c5ee:	7f 90       	pop	r7
    c5f0:	6f 90       	pop	r6
    c5f2:	5f 90       	pop	r5
    c5f4:	4f 90       	pop	r4
    c5f6:	3f 90       	pop	r3
    c5f8:	2f 90       	pop	r2
    c5fa:	08 95       	ret

0000c5fc <TinyGPSPlus::distanceBetween(double, double, double, double)>:
_ZN11TinyGPSPlus15distanceBetweenEdddd():
    c5fc:	4f 92       	push	r4
    c5fe:	5f 92       	push	r5
    c600:	6f 92       	push	r6
    c602:	7f 92       	push	r7
    c604:	8f 92       	push	r8
    c606:	9f 92       	push	r9
    c608:	af 92       	push	r10
    c60a:	bf 92       	push	r11
    c60c:	cf 92       	push	r12
    c60e:	df 92       	push	r13
    c610:	ef 92       	push	r14
    c612:	ff 92       	push	r15
    c614:	0f 93       	push	r16
    c616:	1f 93       	push	r17
    c618:	cf 93       	push	r28
    c61a:	df 93       	push	r29
    c61c:	cd b7       	in	r28, 0x3d	; 61
    c61e:	de b7       	in	r29, 0x3e	; 62
    c620:	60 97       	sbiw	r28, 0x10	; 16
    c622:	0f b6       	in	r0, 0x3f	; 63
    c624:	f8 94       	cli
    c626:	de bf       	out	0x3e, r29	; 62
    c628:	0f be       	out	0x3f, r0	; 63
    c62a:	cd bf       	out	0x3d, r28	; 61
    c62c:	69 83       	std	Y+1, r22	; 0x01
    c62e:	7a 83       	std	Y+2, r23	; 0x02
    c630:	8b 83       	std	Y+3, r24	; 0x03
    c632:	9c 83       	std	Y+4, r25	; 0x04
    c634:	ca 01       	movw	r24, r20
    c636:	b9 01       	movw	r22, r18
    c638:	27 01       	movw	r4, r14
    c63a:	a6 01       	movw	r20, r12
    c63c:	95 01       	movw	r18, r10
    c63e:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    c642:	25 e3       	ldi	r18, 0x35	; 53
    c644:	3a ef       	ldi	r19, 0xFA	; 250
    c646:	4e e8       	ldi	r20, 0x8E	; 142
    c648:	5c e3       	ldi	r21, 0x3C	; 60
    c64a:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c64e:	6b 01       	movw	r12, r22
    c650:	7c 01       	movw	r14, r24
    c652:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    c656:	4b 01       	movw	r8, r22
    c658:	5c 01       	movw	r10, r24
    c65a:	c7 01       	movw	r24, r14
    c65c:	b6 01       	movw	r22, r12
    c65e:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    c662:	6d 83       	std	Y+5, r22	; 0x05
    c664:	7e 83       	std	Y+6, r23	; 0x06
    c666:	8f 83       	std	Y+7, r24	; 0x07
    c668:	98 87       	std	Y+8, r25	; 0x08
    c66a:	25 e3       	ldi	r18, 0x35	; 53
    c66c:	3a ef       	ldi	r19, 0xFA	; 250
    c66e:	4e e8       	ldi	r20, 0x8E	; 142
    c670:	5c e3       	ldi	r21, 0x3C	; 60
    c672:	69 81       	ldd	r22, Y+1	; 0x01
    c674:	7a 81       	ldd	r23, Y+2	; 0x02
    c676:	8b 81       	ldd	r24, Y+3	; 0x03
    c678:	9c 81       	ldd	r25, Y+4	; 0x04
    c67a:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c67e:	6b 01       	movw	r12, r22
    c680:	7c 01       	movw	r14, r24
    c682:	25 e3       	ldi	r18, 0x35	; 53
    c684:	3a ef       	ldi	r19, 0xFA	; 250
    c686:	4e e8       	ldi	r20, 0x8E	; 142
    c688:	5c e3       	ldi	r21, 0x3C	; 60
    c68a:	c8 01       	movw	r24, r16
    c68c:	b2 01       	movw	r22, r4
    c68e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c692:	2b 01       	movw	r4, r22
    c694:	3c 01       	movw	r6, r24
    c696:	c7 01       	movw	r24, r14
    c698:	b6 01       	movw	r22, r12
    c69a:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    c69e:	69 83       	std	Y+1, r22	; 0x01
    c6a0:	7a 83       	std	Y+2, r23	; 0x02
    c6a2:	8b 83       	std	Y+3, r24	; 0x03
    c6a4:	9c 83       	std	Y+4, r25	; 0x04
    c6a6:	c7 01       	movw	r24, r14
    c6a8:	b6 01       	movw	r22, r12
    c6aa:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    c6ae:	69 87       	std	Y+9, r22	; 0x09
    c6b0:	7a 87       	std	Y+10, r23	; 0x0a
    c6b2:	8b 87       	std	Y+11, r24	; 0x0b
    c6b4:	9c 87       	std	Y+12, r25	; 0x0c
    c6b6:	c3 01       	movw	r24, r6
    c6b8:	b2 01       	movw	r22, r4
    c6ba:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    c6be:	6d 87       	std	Y+13, r22	; 0x0d
    c6c0:	7e 87       	std	Y+14, r23	; 0x0e
    c6c2:	8f 87       	std	Y+15, r24	; 0x0f
    c6c4:	98 8b       	std	Y+16, r25	; 0x10
    c6c6:	c3 01       	movw	r24, r6
    c6c8:	b2 01       	movw	r22, r4
    c6ca:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    c6ce:	6b 01       	movw	r12, r22
    c6d0:	7c 01       	movw	r14, r24
    c6d2:	2d 85       	ldd	r18, Y+13	; 0x0d
    c6d4:	3e 85       	ldd	r19, Y+14	; 0x0e
    c6d6:	4f 85       	ldd	r20, Y+15	; 0x0f
    c6d8:	58 89       	ldd	r21, Y+16	; 0x10
    c6da:	69 85       	ldd	r22, Y+9	; 0x09
    c6dc:	7a 85       	ldd	r23, Y+10	; 0x0a
    c6de:	8b 85       	ldd	r24, Y+11	; 0x0b
    c6e0:	9c 85       	ldd	r25, Y+12	; 0x0c
    c6e2:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c6e6:	2b 01       	movw	r4, r22
    c6e8:	3c 01       	movw	r6, r24
    c6ea:	a7 01       	movw	r20, r14
    c6ec:	96 01       	movw	r18, r12
    c6ee:	69 81       	ldd	r22, Y+1	; 0x01
    c6f0:	7a 81       	ldd	r23, Y+2	; 0x02
    c6f2:	8b 81       	ldd	r24, Y+3	; 0x03
    c6f4:	9c 81       	ldd	r25, Y+4	; 0x04
    c6f6:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c6fa:	2d 81       	ldd	r18, Y+5	; 0x05
    c6fc:	3e 81       	ldd	r19, Y+6	; 0x06
    c6fe:	4f 81       	ldd	r20, Y+7	; 0x07
    c700:	58 85       	ldd	r21, Y+8	; 0x08
    c702:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c706:	9b 01       	movw	r18, r22
    c708:	ac 01       	movw	r20, r24
    c70a:	c3 01       	movw	r24, r6
    c70c:	b2 01       	movw	r22, r4
    c70e:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    c712:	2b 01       	movw	r4, r22
    c714:	3c 01       	movw	r6, r24
    c716:	a7 01       	movw	r20, r14
    c718:	96 01       	movw	r18, r12
    c71a:	c5 01       	movw	r24, r10
    c71c:	b4 01       	movw	r22, r8
    c71e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c722:	4b 01       	movw	r8, r22
    c724:	5c 01       	movw	r10, r24
    c726:	a3 01       	movw	r20, r6
    c728:	92 01       	movw	r18, r4
    c72a:	c3 01       	movw	r24, r6
    c72c:	b2 01       	movw	r22, r4
    c72e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c732:	2b 01       	movw	r4, r22
    c734:	3c 01       	movw	r6, r24
    c736:	a5 01       	movw	r20, r10
    c738:	94 01       	movw	r18, r8
    c73a:	c5 01       	movw	r24, r10
    c73c:	b4 01       	movw	r22, r8
    c73e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c742:	9b 01       	movw	r18, r22
    c744:	ac 01       	movw	r20, r24
    c746:	c3 01       	movw	r24, r6
    c748:	b2 01       	movw	r22, r4
    c74a:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    c74e:	0e 94 04 72 	call	0xe408	; 0xe408 <sqrt>
    c752:	4b 01       	movw	r8, r22
    c754:	5c 01       	movw	r10, r24
    c756:	a7 01       	movw	r20, r14
    c758:	96 01       	movw	r18, r12
    c75a:	69 85       	ldd	r22, Y+9	; 0x09
    c75c:	7a 85       	ldd	r23, Y+10	; 0x0a
    c75e:	8b 85       	ldd	r24, Y+11	; 0x0b
    c760:	9c 85       	ldd	r25, Y+12	; 0x0c
    c762:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c766:	2d 81       	ldd	r18, Y+5	; 0x05
    c768:	3e 81       	ldd	r19, Y+6	; 0x06
    c76a:	4f 81       	ldd	r20, Y+7	; 0x07
    c76c:	58 85       	ldd	r21, Y+8	; 0x08
    c76e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c772:	6b 01       	movw	r12, r22
    c774:	7c 01       	movw	r14, r24
    c776:	2d 85       	ldd	r18, Y+13	; 0x0d
    c778:	3e 85       	ldd	r19, Y+14	; 0x0e
    c77a:	4f 85       	ldd	r20, Y+15	; 0x0f
    c77c:	58 89       	ldd	r21, Y+16	; 0x10
    c77e:	69 81       	ldd	r22, Y+1	; 0x01
    c780:	7a 81       	ldd	r23, Y+2	; 0x02
    c782:	8b 81       	ldd	r24, Y+3	; 0x03
    c784:	9c 81       	ldd	r25, Y+4	; 0x04
    c786:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c78a:	9b 01       	movw	r18, r22
    c78c:	ac 01       	movw	r20, r24
    c78e:	c7 01       	movw	r24, r14
    c790:	b6 01       	movw	r22, r12
    c792:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    c796:	9b 01       	movw	r18, r22
    c798:	ac 01       	movw	r20, r24
    c79a:	c5 01       	movw	r24, r10
    c79c:	b4 01       	movw	r22, r8
    c79e:	0e 94 c7 6e 	call	0xdd8e	; 0xdd8e <atan2>
    c7a2:	26 e7       	ldi	r18, 0x76	; 118
    c7a4:	3b e7       	ldi	r19, 0x7B	; 123
    c7a6:	42 ec       	ldi	r20, 0xC2	; 194
    c7a8:	5a e4       	ldi	r21, 0x4A	; 74
    c7aa:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c7ae:	60 96       	adiw	r28, 0x10	; 16
    c7b0:	0f b6       	in	r0, 0x3f	; 63
    c7b2:	f8 94       	cli
    c7b4:	de bf       	out	0x3e, r29	; 62
    c7b6:	0f be       	out	0x3f, r0	; 63
    c7b8:	cd bf       	out	0x3d, r28	; 61
    c7ba:	df 91       	pop	r29
    c7bc:	cf 91       	pop	r28
    c7be:	1f 91       	pop	r17
    c7c0:	0f 91       	pop	r16
    c7c2:	ff 90       	pop	r15
    c7c4:	ef 90       	pop	r14
    c7c6:	df 90       	pop	r13
    c7c8:	cf 90       	pop	r12
    c7ca:	bf 90       	pop	r11
    c7cc:	af 90       	pop	r10
    c7ce:	9f 90       	pop	r9
    c7d0:	8f 90       	pop	r8
    c7d2:	7f 90       	pop	r7
    c7d4:	6f 90       	pop	r6
    c7d6:	5f 90       	pop	r5
    c7d8:	4f 90       	pop	r4
    c7da:	08 95       	ret

0000c7dc <TinyGPSPlus::courseTo(double, double, double, double)>:
_ZN11TinyGPSPlus8courseToEdddd():
    c7dc:	4f 92       	push	r4
    c7de:	5f 92       	push	r5
    c7e0:	6f 92       	push	r6
    c7e2:	7f 92       	push	r7
    c7e4:	8f 92       	push	r8
    c7e6:	9f 92       	push	r9
    c7e8:	af 92       	push	r10
    c7ea:	bf 92       	push	r11
    c7ec:	cf 92       	push	r12
    c7ee:	df 92       	push	r13
    c7f0:	ef 92       	push	r14
    c7f2:	ff 92       	push	r15
    c7f4:	0f 93       	push	r16
    c7f6:	1f 93       	push	r17
    c7f8:	cf 93       	push	r28
    c7fa:	df 93       	push	r29
    c7fc:	cd b7       	in	r28, 0x3d	; 61
    c7fe:	de b7       	in	r29, 0x3e	; 62
    c800:	2c 97       	sbiw	r28, 0x0c	; 12
    c802:	0f b6       	in	r0, 0x3f	; 63
    c804:	f8 94       	cli
    c806:	de bf       	out	0x3e, r29	; 62
    c808:	0f be       	out	0x3f, r0	; 63
    c80a:	cd bf       	out	0x3d, r28	; 61
    c80c:	69 83       	std	Y+1, r22	; 0x01
    c80e:	7a 83       	std	Y+2, r23	; 0x02
    c810:	8b 83       	std	Y+3, r24	; 0x03
    c812:	9c 83       	std	Y+4, r25	; 0x04
    c814:	ed 82       	std	Y+5, r14	; 0x05
    c816:	fe 82       	std	Y+6, r15	; 0x06
    c818:	0f 83       	std	Y+7, r16	; 0x07
    c81a:	18 87       	std	Y+8, r17	; 0x08
    c81c:	c6 01       	movw	r24, r12
    c81e:	b5 01       	movw	r22, r10
    c820:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    c824:	25 e3       	ldi	r18, 0x35	; 53
    c826:	3a ef       	ldi	r19, 0xFA	; 250
    c828:	4e e8       	ldi	r20, 0x8E	; 142
    c82a:	5c e3       	ldi	r21, 0x3C	; 60
    c82c:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c830:	2b 01       	movw	r4, r22
    c832:	3c 01       	movw	r6, r24
    c834:	25 e3       	ldi	r18, 0x35	; 53
    c836:	3a ef       	ldi	r19, 0xFA	; 250
    c838:	4e e8       	ldi	r20, 0x8E	; 142
    c83a:	5c e3       	ldi	r21, 0x3C	; 60
    c83c:	69 81       	ldd	r22, Y+1	; 0x01
    c83e:	7a 81       	ldd	r23, Y+2	; 0x02
    c840:	8b 81       	ldd	r24, Y+3	; 0x03
    c842:	9c 81       	ldd	r25, Y+4	; 0x04
    c844:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c848:	4b 01       	movw	r8, r22
    c84a:	5c 01       	movw	r10, r24
    c84c:	25 e3       	ldi	r18, 0x35	; 53
    c84e:	3a ef       	ldi	r19, 0xFA	; 250
    c850:	4e e8       	ldi	r20, 0x8E	; 142
    c852:	5c e3       	ldi	r21, 0x3C	; 60
    c854:	c8 01       	movw	r24, r16
    c856:	b7 01       	movw	r22, r14
    c858:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c85c:	6b 01       	movw	r12, r22
    c85e:	7c 01       	movw	r14, r24
    c860:	c3 01       	movw	r24, r6
    c862:	b2 01       	movw	r22, r4
    c864:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    c868:	6d 83       	std	Y+5, r22	; 0x05
    c86a:	7e 83       	std	Y+6, r23	; 0x06
    c86c:	8f 83       	std	Y+7, r24	; 0x07
    c86e:	98 87       	std	Y+8, r25	; 0x08
    c870:	c7 01       	movw	r24, r14
    c872:	b6 01       	movw	r22, r12
    c874:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    c878:	69 83       	std	Y+1, r22	; 0x01
    c87a:	7a 83       	std	Y+2, r23	; 0x02
    c87c:	8b 83       	std	Y+3, r24	; 0x03
    c87e:	9c 83       	std	Y+4, r25	; 0x04
    c880:	c5 01       	movw	r24, r10
    c882:	b4 01       	movw	r22, r8
    c884:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    c888:	69 87       	std	Y+9, r22	; 0x09
    c88a:	7a 87       	std	Y+10, r23	; 0x0a
    c88c:	8b 87       	std	Y+11, r24	; 0x0b
    c88e:	9c 87       	std	Y+12, r25	; 0x0c
    c890:	c3 01       	movw	r24, r6
    c892:	b2 01       	movw	r22, r4
    c894:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    c898:	2b 01       	movw	r4, r22
    c89a:	3c 01       	movw	r6, r24
    c89c:	c5 01       	movw	r24, r10
    c89e:	b4 01       	movw	r22, r8
    c8a0:	0e 94 2b 6f 	call	0xde56	; 0xde56 <cos>
    c8a4:	4b 01       	movw	r8, r22
    c8a6:	5c 01       	movw	r10, r24
    c8a8:	c7 01       	movw	r24, r14
    c8aa:	b6 01       	movw	r22, r12
    c8ac:	0e 94 f6 71 	call	0xe3ec	; 0xe3ec <sin>
    c8b0:	9b 01       	movw	r18, r22
    c8b2:	ac 01       	movw	r20, r24
    c8b4:	c5 01       	movw	r24, r10
    c8b6:	b4 01       	movw	r22, r8
    c8b8:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c8bc:	6b 01       	movw	r12, r22
    c8be:	7c 01       	movw	r14, r24
    c8c0:	29 85       	ldd	r18, Y+9	; 0x09
    c8c2:	3a 85       	ldd	r19, Y+10	; 0x0a
    c8c4:	4b 85       	ldd	r20, Y+11	; 0x0b
    c8c6:	5c 85       	ldd	r21, Y+12	; 0x0c
    c8c8:	69 81       	ldd	r22, Y+1	; 0x01
    c8ca:	7a 81       	ldd	r23, Y+2	; 0x02
    c8cc:	8b 81       	ldd	r24, Y+3	; 0x03
    c8ce:	9c 81       	ldd	r25, Y+4	; 0x04
    c8d0:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c8d4:	a3 01       	movw	r20, r6
    c8d6:	92 01       	movw	r18, r4
    c8d8:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c8dc:	9b 01       	movw	r18, r22
    c8de:	ac 01       	movw	r20, r24
    c8e0:	c7 01       	movw	r24, r14
    c8e2:	b6 01       	movw	r22, r12
    c8e4:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    c8e8:	6b 01       	movw	r12, r22
    c8ea:	7c 01       	movw	r14, r24
    c8ec:	29 81       	ldd	r18, Y+1	; 0x01
    c8ee:	3a 81       	ldd	r19, Y+2	; 0x02
    c8f0:	4b 81       	ldd	r20, Y+3	; 0x03
    c8f2:	5c 81       	ldd	r21, Y+4	; 0x04
    c8f4:	6d 81       	ldd	r22, Y+5	; 0x05
    c8f6:	7e 81       	ldd	r23, Y+6	; 0x06
    c8f8:	8f 81       	ldd	r24, Y+7	; 0x07
    c8fa:	98 85       	ldd	r25, Y+8	; 0x08
    c8fc:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c900:	a7 01       	movw	r20, r14
    c902:	96 01       	movw	r18, r12
    c904:	0e 94 c7 6e 	call	0xdd8e	; 0xdd8e <atan2>
    c908:	6b 01       	movw	r12, r22
    c90a:	7c 01       	movw	r14, r24
    c90c:	20 e0       	ldi	r18, 0x00	; 0
    c90e:	30 e0       	ldi	r19, 0x00	; 0
    c910:	a9 01       	movw	r20, r18
    c912:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    c916:	87 ff       	sbrs	r24, 7
    c918:	0a c0       	rjmp	.+20     	; 0xc92e <TinyGPSPlus::courseTo(double, double, double, double)+0x152>
    c91a:	2b ed       	ldi	r18, 0xDB	; 219
    c91c:	3f e0       	ldi	r19, 0x0F	; 15
    c91e:	49 ec       	ldi	r20, 0xC9	; 201
    c920:	50 e4       	ldi	r21, 0x40	; 64
    c922:	c7 01       	movw	r24, r14
    c924:	b6 01       	movw	r22, r12
    c926:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    c92a:	6b 01       	movw	r12, r22
    c92c:	7c 01       	movw	r14, r24
    c92e:	21 ee       	ldi	r18, 0xE1	; 225
    c930:	3e e2       	ldi	r19, 0x2E	; 46
    c932:	45 e6       	ldi	r20, 0x65	; 101
    c934:	52 e4       	ldi	r21, 0x42	; 66
    c936:	c7 01       	movw	r24, r14
    c938:	b6 01       	movw	r22, r12
    c93a:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    c93e:	2c 96       	adiw	r28, 0x0c	; 12
    c940:	0f b6       	in	r0, 0x3f	; 63
    c942:	f8 94       	cli
    c944:	de bf       	out	0x3e, r29	; 62
    c946:	0f be       	out	0x3f, r0	; 63
    c948:	cd bf       	out	0x3d, r28	; 61
    c94a:	df 91       	pop	r29
    c94c:	cf 91       	pop	r28
    c94e:	1f 91       	pop	r17
    c950:	0f 91       	pop	r16
    c952:	ff 90       	pop	r15
    c954:	ef 90       	pop	r14
    c956:	df 90       	pop	r13
    c958:	cf 90       	pop	r12
    c95a:	bf 90       	pop	r11
    c95c:	af 90       	pop	r10
    c95e:	9f 90       	pop	r9
    c960:	8f 90       	pop	r8
    c962:	7f 90       	pop	r7
    c964:	6f 90       	pop	r6
    c966:	5f 90       	pop	r5
    c968:	4f 90       	pop	r4
    c96a:	08 95       	ret

0000c96c <TinyGPSPlus::cardinal(double)>:
_ZN11TinyGPSPlus8cardinalEd():
    c96c:	20 e0       	ldi	r18, 0x00	; 0
    c96e:	30 e0       	ldi	r19, 0x00	; 0
    c970:	44 e3       	ldi	r20, 0x34	; 52
    c972:	51 e4       	ldi	r21, 0x41	; 65
    c974:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    c978:	20 e0       	ldi	r18, 0x00	; 0
    c97a:	30 e0       	ldi	r19, 0x00	; 0
    c97c:	44 eb       	ldi	r20, 0xB4	; 180
    c97e:	51 e4       	ldi	r21, 0x41	; 65
    c980:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    c984:	0e 94 a2 6f 	call	0xdf44	; 0xdf44 <__fixsfsi>
    c988:	cb 01       	movw	r24, r22
    c98a:	60 e1       	ldi	r22, 0x10	; 16
    c98c:	70 e0       	ldi	r23, 0x00	; 0
    c98e:	0e 94 95 72 	call	0xe52a	; 0xe52a <__divmodhi4>
    c992:	fc 01       	movw	r30, r24
    c994:	ee 0f       	add	r30, r30
    c996:	ff 1f       	adc	r31, r31
    c998:	e6 53       	subi	r30, 0x36	; 54
    c99a:	fd 4f       	sbci	r31, 0xFD	; 253
    c99c:	80 81       	ld	r24, Z
    c99e:	91 81       	ldd	r25, Z+1	; 0x01
    c9a0:	08 95       	ret

0000c9a2 <TinyGPSLocation::commit()>:
_ZN15TinyGPSLocation6commitEv():
    c9a2:	cf 93       	push	r28
    c9a4:	df 93       	push	r29
    c9a6:	ec 01       	movw	r28, r24
    c9a8:	87 e0       	ldi	r24, 0x07	; 7
    c9aa:	fe 01       	movw	r30, r28
    c9ac:	70 96       	adiw	r30, 0x10	; 16
    c9ae:	de 01       	movw	r26, r28
    c9b0:	12 96       	adiw	r26, 0x02	; 2
    c9b2:	01 90       	ld	r0, Z+
    c9b4:	0d 92       	st	X+, r0
    c9b6:	8a 95       	dec	r24
    c9b8:	e1 f7       	brne	.-8      	; 0xc9b2 <TinyGPSLocation::commit()+0x10>
    c9ba:	87 e0       	ldi	r24, 0x07	; 7
    c9bc:	fe 01       	movw	r30, r28
    c9be:	77 96       	adiw	r30, 0x17	; 23
    c9c0:	de 01       	movw	r26, r28
    c9c2:	19 96       	adiw	r26, 0x09	; 9
    c9c4:	01 90       	ld	r0, Z+
    c9c6:	0d 92       	st	X+, r0
    c9c8:	8a 95       	dec	r24
    c9ca:	e1 f7       	brne	.-8      	; 0xc9c4 <TinyGPSLocation::commit()+0x22>
    c9cc:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    c9d0:	6e 8f       	std	Y+30, r22	; 0x1e
    c9d2:	7f 8f       	std	Y+31, r23	; 0x1f
    c9d4:	88 a3       	std	Y+32, r24	; 0x20
    c9d6:	99 a3       	std	Y+33, r25	; 0x21
    c9d8:	81 e0       	ldi	r24, 0x01	; 1
    c9da:	89 83       	std	Y+1, r24	; 0x01
    c9dc:	88 83       	st	Y, r24
    c9de:	df 91       	pop	r29
    c9e0:	cf 91       	pop	r28
    c9e2:	08 95       	ret

0000c9e4 <TinyGPSLocation::lat()>:
_ZN15TinyGPSLocation3latEv():
    c9e4:	cf 92       	push	r12
    c9e6:	df 92       	push	r13
    c9e8:	ef 92       	push	r14
    c9ea:	ff 92       	push	r15
    c9ec:	cf 93       	push	r28
    c9ee:	df 93       	push	r29
    c9f0:	ec 01       	movw	r28, r24
    c9f2:	19 82       	std	Y+1, r1	; 0x01
    c9f4:	6c 81       	ldd	r22, Y+4	; 0x04
    c9f6:	7d 81       	ldd	r23, Y+5	; 0x05
    c9f8:	8e 81       	ldd	r24, Y+6	; 0x06
    c9fa:	9f 81       	ldd	r25, Y+7	; 0x07
    c9fc:	0e 94 d8 6f 	call	0xdfb0	; 0xdfb0 <__floatunsisf>
    ca00:	28 e2       	ldi	r18, 0x28	; 40
    ca02:	3b e6       	ldi	r19, 0x6B	; 107
    ca04:	4e e6       	ldi	r20, 0x6E	; 110
    ca06:	5e e4       	ldi	r21, 0x4E	; 78
    ca08:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    ca0c:	6b 01       	movw	r12, r22
    ca0e:	7c 01       	movw	r14, r24
    ca10:	6a 81       	ldd	r22, Y+2	; 0x02
    ca12:	7b 81       	ldd	r23, Y+3	; 0x03
    ca14:	90 e0       	ldi	r25, 0x00	; 0
    ca16:	80 e0       	ldi	r24, 0x00	; 0
    ca18:	0e 94 d8 6f 	call	0xdfb0	; 0xdfb0 <__floatunsisf>
    ca1c:	9b 01       	movw	r18, r22
    ca1e:	ac 01       	movw	r20, r24
    ca20:	c7 01       	movw	r24, r14
    ca22:	b6 01       	movw	r22, r12
    ca24:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    ca28:	28 85       	ldd	r18, Y+8	; 0x08
    ca2a:	21 11       	cpse	r18, r1
    ca2c:	90 58       	subi	r25, 0x80	; 128
    ca2e:	df 91       	pop	r29
    ca30:	cf 91       	pop	r28
    ca32:	ff 90       	pop	r15
    ca34:	ef 90       	pop	r14
    ca36:	df 90       	pop	r13
    ca38:	cf 90       	pop	r12
    ca3a:	08 95       	ret

0000ca3c <TinyGPSLocation::lng()>:
_ZN15TinyGPSLocation3lngEv():
    ca3c:	cf 92       	push	r12
    ca3e:	df 92       	push	r13
    ca40:	ef 92       	push	r14
    ca42:	ff 92       	push	r15
    ca44:	cf 93       	push	r28
    ca46:	df 93       	push	r29
    ca48:	ec 01       	movw	r28, r24
    ca4a:	19 82       	std	Y+1, r1	; 0x01
    ca4c:	6b 85       	ldd	r22, Y+11	; 0x0b
    ca4e:	7c 85       	ldd	r23, Y+12	; 0x0c
    ca50:	8d 85       	ldd	r24, Y+13	; 0x0d
    ca52:	9e 85       	ldd	r25, Y+14	; 0x0e
    ca54:	0e 94 d8 6f 	call	0xdfb0	; 0xdfb0 <__floatunsisf>
    ca58:	28 e2       	ldi	r18, 0x28	; 40
    ca5a:	3b e6       	ldi	r19, 0x6B	; 107
    ca5c:	4e e6       	ldi	r20, 0x6E	; 110
    ca5e:	5e e4       	ldi	r21, 0x4E	; 78
    ca60:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
    ca64:	6b 01       	movw	r12, r22
    ca66:	7c 01       	movw	r14, r24
    ca68:	69 85       	ldd	r22, Y+9	; 0x09
    ca6a:	7a 85       	ldd	r23, Y+10	; 0x0a
    ca6c:	90 e0       	ldi	r25, 0x00	; 0
    ca6e:	80 e0       	ldi	r24, 0x00	; 0
    ca70:	0e 94 d8 6f 	call	0xdfb0	; 0xdfb0 <__floatunsisf>
    ca74:	9b 01       	movw	r18, r22
    ca76:	ac 01       	movw	r20, r24
    ca78:	c7 01       	movw	r24, r14
    ca7a:	b6 01       	movw	r22, r12
    ca7c:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    ca80:	2f 85       	ldd	r18, Y+15	; 0x0f
    ca82:	21 11       	cpse	r18, r1
    ca84:	90 58       	subi	r25, 0x80	; 128
    ca86:	df 91       	pop	r29
    ca88:	cf 91       	pop	r28
    ca8a:	ff 90       	pop	r15
    ca8c:	ef 90       	pop	r14
    ca8e:	df 90       	pop	r13
    ca90:	cf 90       	pop	r12
    ca92:	08 95       	ret

0000ca94 <TinyGPSDate::commit()>:
_ZN11TinyGPSDate6commitEv():
    ca94:	cf 93       	push	r28
    ca96:	df 93       	push	r29
    ca98:	ec 01       	movw	r28, r24
    ca9a:	8e 81       	ldd	r24, Y+6	; 0x06
    ca9c:	9f 81       	ldd	r25, Y+7	; 0x07
    ca9e:	a8 85       	ldd	r26, Y+8	; 0x08
    caa0:	b9 85       	ldd	r27, Y+9	; 0x09
    caa2:	8a 83       	std	Y+2, r24	; 0x02
    caa4:	9b 83       	std	Y+3, r25	; 0x03
    caa6:	ac 83       	std	Y+4, r26	; 0x04
    caa8:	bd 83       	std	Y+5, r27	; 0x05
    caaa:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    caae:	6a 87       	std	Y+10, r22	; 0x0a
    cab0:	7b 87       	std	Y+11, r23	; 0x0b
    cab2:	8c 87       	std	Y+12, r24	; 0x0c
    cab4:	9d 87       	std	Y+13, r25	; 0x0d
    cab6:	81 e0       	ldi	r24, 0x01	; 1
    cab8:	89 83       	std	Y+1, r24	; 0x01
    caba:	88 83       	st	Y, r24
    cabc:	df 91       	pop	r29
    cabe:	cf 91       	pop	r28
    cac0:	08 95       	ret

0000cac2 <TinyGPSTime::commit()>:
_ZN11TinyGPSTime6commitEv():
    cac2:	cf 93       	push	r28
    cac4:	df 93       	push	r29
    cac6:	ec 01       	movw	r28, r24
    cac8:	8e 81       	ldd	r24, Y+6	; 0x06
    caca:	9f 81       	ldd	r25, Y+7	; 0x07
    cacc:	a8 85       	ldd	r26, Y+8	; 0x08
    cace:	b9 85       	ldd	r27, Y+9	; 0x09
    cad0:	8a 83       	std	Y+2, r24	; 0x02
    cad2:	9b 83       	std	Y+3, r25	; 0x03
    cad4:	ac 83       	std	Y+4, r26	; 0x04
    cad6:	bd 83       	std	Y+5, r27	; 0x05
    cad8:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    cadc:	6a 87       	std	Y+10, r22	; 0x0a
    cade:	7b 87       	std	Y+11, r23	; 0x0b
    cae0:	8c 87       	std	Y+12, r24	; 0x0c
    cae2:	9d 87       	std	Y+13, r25	; 0x0d
    cae4:	81 e0       	ldi	r24, 0x01	; 1
    cae6:	89 83       	std	Y+1, r24	; 0x01
    cae8:	88 83       	st	Y, r24
    caea:	df 91       	pop	r29
    caec:	cf 91       	pop	r28
    caee:	08 95       	ret

0000caf0 <TinyGPSTime::setTime(char const*)>:
_ZN11TinyGPSTime7setTimeEPKc():
    caf0:	cf 93       	push	r28
    caf2:	df 93       	push	r29
    caf4:	ec 01       	movw	r28, r24
    caf6:	cb 01       	movw	r24, r22
    caf8:	0e 94 24 62 	call	0xc448	; 0xc448 <TinyGPSPlus::parseDecimal(char const*)>
    cafc:	6e 83       	std	Y+6, r22	; 0x06
    cafe:	7f 83       	std	Y+7, r23	; 0x07
    cb00:	88 87       	std	Y+8, r24	; 0x08
    cb02:	99 87       	std	Y+9, r25	; 0x09
    cb04:	df 91       	pop	r29
    cb06:	cf 91       	pop	r28
    cb08:	08 95       	ret

0000cb0a <TinyGPSDate::setDate(char const*)>:
_ZN11TinyGPSDate7setDateEPKc():
    cb0a:	cf 93       	push	r28
    cb0c:	df 93       	push	r29
    cb0e:	ec 01       	movw	r28, r24
    cb10:	cb 01       	movw	r24, r22
    cb12:	0e 94 71 74 	call	0xe8e2	; 0xe8e2 <atol>
    cb16:	6e 83       	std	Y+6, r22	; 0x06
    cb18:	7f 83       	std	Y+7, r23	; 0x07
    cb1a:	88 87       	std	Y+8, r24	; 0x08
    cb1c:	99 87       	std	Y+9, r25	; 0x09
    cb1e:	df 91       	pop	r29
    cb20:	cf 91       	pop	r28
    cb22:	08 95       	ret

0000cb24 <TinyGPSDate::year()>:
_ZN11TinyGPSDate4yearEv():
    cb24:	fc 01       	movw	r30, r24
    cb26:	11 82       	std	Z+1, r1	; 0x01
    cb28:	62 81       	ldd	r22, Z+2	; 0x02
    cb2a:	73 81       	ldd	r23, Z+3	; 0x03
    cb2c:	84 81       	ldd	r24, Z+4	; 0x04
    cb2e:	95 81       	ldd	r25, Z+5	; 0x05
    cb30:	24 e6       	ldi	r18, 0x64	; 100
    cb32:	30 e0       	ldi	r19, 0x00	; 0
    cb34:	40 e0       	ldi	r20, 0x00	; 0
    cb36:	50 e0       	ldi	r21, 0x00	; 0
    cb38:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    cb3c:	cb 01       	movw	r24, r22
    cb3e:	80 53       	subi	r24, 0x30	; 48
    cb40:	98 4f       	sbci	r25, 0xF8	; 248
    cb42:	08 95       	ret

0000cb44 <TinyGPSDate::month()>:
_ZN11TinyGPSDate5monthEv():
    cb44:	cf 92       	push	r12
    cb46:	df 92       	push	r13
    cb48:	ef 92       	push	r14
    cb4a:	ff 92       	push	r15
    cb4c:	fc 01       	movw	r30, r24
    cb4e:	11 82       	std	Z+1, r1	; 0x01
    cb50:	62 81       	ldd	r22, Z+2	; 0x02
    cb52:	73 81       	ldd	r23, Z+3	; 0x03
    cb54:	84 81       	ldd	r24, Z+4	; 0x04
    cb56:	95 81       	ldd	r25, Z+5	; 0x05
    cb58:	24 e6       	ldi	r18, 0x64	; 100
    cb5a:	c2 2e       	mov	r12, r18
    cb5c:	d1 2c       	mov	r13, r1
    cb5e:	e1 2c       	mov	r14, r1
    cb60:	f1 2c       	mov	r15, r1
    cb62:	a7 01       	movw	r20, r14
    cb64:	96 01       	movw	r18, r12
    cb66:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    cb6a:	ca 01       	movw	r24, r20
    cb6c:	b9 01       	movw	r22, r18
    cb6e:	a7 01       	movw	r20, r14
    cb70:	96 01       	movw	r18, r12
    cb72:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    cb76:	86 2f       	mov	r24, r22
    cb78:	ff 90       	pop	r15
    cb7a:	ef 90       	pop	r14
    cb7c:	df 90       	pop	r13
    cb7e:	cf 90       	pop	r12
    cb80:	08 95       	ret

0000cb82 <TinyGPSDate::day()>:
_ZN11TinyGPSDate3dayEv():
    cb82:	fc 01       	movw	r30, r24
    cb84:	11 82       	std	Z+1, r1	; 0x01
    cb86:	62 81       	ldd	r22, Z+2	; 0x02
    cb88:	73 81       	ldd	r23, Z+3	; 0x03
    cb8a:	84 81       	ldd	r24, Z+4	; 0x04
    cb8c:	95 81       	ldd	r25, Z+5	; 0x05
    cb8e:	20 e1       	ldi	r18, 0x10	; 16
    cb90:	37 e2       	ldi	r19, 0x27	; 39
    cb92:	40 e0       	ldi	r20, 0x00	; 0
    cb94:	50 e0       	ldi	r21, 0x00	; 0
    cb96:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    cb9a:	82 2f       	mov	r24, r18
    cb9c:	08 95       	ret

0000cb9e <TinyGPSTime::hour()>:
_ZN11TinyGPSTime4hourEv():
    cb9e:	fc 01       	movw	r30, r24
    cba0:	11 82       	std	Z+1, r1	; 0x01
    cba2:	62 81       	ldd	r22, Z+2	; 0x02
    cba4:	73 81       	ldd	r23, Z+3	; 0x03
    cba6:	84 81       	ldd	r24, Z+4	; 0x04
    cba8:	95 81       	ldd	r25, Z+5	; 0x05
    cbaa:	20 e4       	ldi	r18, 0x40	; 64
    cbac:	32 e4       	ldi	r19, 0x42	; 66
    cbae:	4f e0       	ldi	r20, 0x0F	; 15
    cbb0:	50 e0       	ldi	r21, 0x00	; 0
    cbb2:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    cbb6:	82 2f       	mov	r24, r18
    cbb8:	08 95       	ret

0000cbba <TinyGPSTime::minute()>:
_ZN11TinyGPSTime6minuteEv():
    cbba:	fc 01       	movw	r30, r24
    cbbc:	11 82       	std	Z+1, r1	; 0x01
    cbbe:	62 81       	ldd	r22, Z+2	; 0x02
    cbc0:	73 81       	ldd	r23, Z+3	; 0x03
    cbc2:	84 81       	ldd	r24, Z+4	; 0x04
    cbc4:	95 81       	ldd	r25, Z+5	; 0x05
    cbc6:	20 e1       	ldi	r18, 0x10	; 16
    cbc8:	37 e2       	ldi	r19, 0x27	; 39
    cbca:	40 e0       	ldi	r20, 0x00	; 0
    cbcc:	50 e0       	ldi	r21, 0x00	; 0
    cbce:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    cbd2:	ca 01       	movw	r24, r20
    cbd4:	b9 01       	movw	r22, r18
    cbd6:	24 e6       	ldi	r18, 0x64	; 100
    cbd8:	30 e0       	ldi	r19, 0x00	; 0
    cbda:	40 e0       	ldi	r20, 0x00	; 0
    cbdc:	50 e0       	ldi	r21, 0x00	; 0
    cbde:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    cbe2:	86 2f       	mov	r24, r22
    cbe4:	08 95       	ret

0000cbe6 <TinyGPSTime::second()>:
_ZN11TinyGPSTime6secondEv():
    cbe6:	cf 92       	push	r12
    cbe8:	df 92       	push	r13
    cbea:	ef 92       	push	r14
    cbec:	ff 92       	push	r15
    cbee:	fc 01       	movw	r30, r24
    cbf0:	11 82       	std	Z+1, r1	; 0x01
    cbf2:	62 81       	ldd	r22, Z+2	; 0x02
    cbf4:	73 81       	ldd	r23, Z+3	; 0x03
    cbf6:	84 81       	ldd	r24, Z+4	; 0x04
    cbf8:	95 81       	ldd	r25, Z+5	; 0x05
    cbfa:	24 e6       	ldi	r18, 0x64	; 100
    cbfc:	c2 2e       	mov	r12, r18
    cbfe:	d1 2c       	mov	r13, r1
    cc00:	e1 2c       	mov	r14, r1
    cc02:	f1 2c       	mov	r15, r1
    cc04:	a7 01       	movw	r20, r14
    cc06:	96 01       	movw	r18, r12
    cc08:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    cc0c:	ca 01       	movw	r24, r20
    cc0e:	b9 01       	movw	r22, r18
    cc10:	a7 01       	movw	r20, r14
    cc12:	96 01       	movw	r18, r12
    cc14:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    cc18:	86 2f       	mov	r24, r22
    cc1a:	ff 90       	pop	r15
    cc1c:	ef 90       	pop	r14
    cc1e:	df 90       	pop	r13
    cc20:	cf 90       	pop	r12
    cc22:	08 95       	ret

0000cc24 <TinyGPSDecimal::commit()>:
_ZN14TinyGPSDecimal6commitEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:437

void TinyGPSDecimal::commit()
{
    cc24:	cf 93       	push	r28
    cc26:	df 93       	push	r29
    cc28:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:438
   val = newval;
    cc2a:	8a 85       	ldd	r24, Y+10	; 0x0a
    cc2c:	9b 85       	ldd	r25, Y+11	; 0x0b
    cc2e:	ac 85       	ldd	r26, Y+12	; 0x0c
    cc30:	bd 85       	ldd	r27, Y+13	; 0x0d
    cc32:	8e 83       	std	Y+6, r24	; 0x06
    cc34:	9f 83       	std	Y+7, r25	; 0x07
    cc36:	a8 87       	std	Y+8, r26	; 0x08
    cc38:	b9 87       	std	Y+9, r27	; 0x09
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:439
   lastCommitTime = millis();
    cc3a:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    cc3e:	6a 83       	std	Y+2, r22	; 0x02
    cc40:	7b 83       	std	Y+3, r23	; 0x03
    cc42:	8c 83       	std	Y+4, r24	; 0x04
    cc44:	9d 83       	std	Y+5, r25	; 0x05
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:440
   valid = updated = true;
    cc46:	81 e0       	ldi	r24, 0x01	; 1
    cc48:	89 83       	std	Y+1, r24	; 0x01
    cc4a:	88 83       	st	Y, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:441
}
    cc4c:	df 91       	pop	r29
    cc4e:	cf 91       	pop	r28
    cc50:	08 95       	ret

0000cc52 <TinyGPSDecimal::set(char const*)>:
_ZN14TinyGPSDecimal3setEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:444

void TinyGPSDecimal::set(const char *term)
{
    cc52:	cf 93       	push	r28
    cc54:	df 93       	push	r29
    cc56:	ec 01       	movw	r28, r24
    cc58:	cb 01       	movw	r24, r22
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:445
   newval = TinyGPSPlus::parseDecimal(term);
    cc5a:	0e 94 24 62 	call	0xc448	; 0xc448 <TinyGPSPlus::parseDecimal(char const*)>
    cc5e:	6a 87       	std	Y+10, r22	; 0x0a
    cc60:	7b 87       	std	Y+11, r23	; 0x0b
    cc62:	8c 87       	std	Y+12, r24	; 0x0c
    cc64:	9d 87       	std	Y+13, r25	; 0x0d
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:446
}
    cc66:	df 91       	pop	r29
    cc68:	cf 91       	pop	r28
    cc6a:	08 95       	ret

0000cc6c <TinyGPSInteger::commit()>:
_ZN14TinyGPSInteger6commitEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:449

void TinyGPSInteger::commit()
{
    cc6c:	cf 93       	push	r28
    cc6e:	df 93       	push	r29
    cc70:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:450
   val = newval;
    cc72:	8a 85       	ldd	r24, Y+10	; 0x0a
    cc74:	9b 85       	ldd	r25, Y+11	; 0x0b
    cc76:	ac 85       	ldd	r26, Y+12	; 0x0c
    cc78:	bd 85       	ldd	r27, Y+13	; 0x0d
    cc7a:	8e 83       	std	Y+6, r24	; 0x06
    cc7c:	9f 83       	std	Y+7, r25	; 0x07
    cc7e:	a8 87       	std	Y+8, r26	; 0x08
    cc80:	b9 87       	std	Y+9, r27	; 0x09
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:451
   lastCommitTime = millis();
    cc82:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    cc86:	6a 83       	std	Y+2, r22	; 0x02
    cc88:	7b 83       	std	Y+3, r23	; 0x03
    cc8a:	8c 83       	std	Y+4, r24	; 0x04
    cc8c:	9d 83       	std	Y+5, r25	; 0x05
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:452
   valid = updated = true;
    cc8e:	81 e0       	ldi	r24, 0x01	; 1
    cc90:	89 83       	std	Y+1, r24	; 0x01
    cc92:	88 83       	st	Y, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:453
}
    cc94:	df 91       	pop	r29
    cc96:	cf 91       	pop	r28
    cc98:	08 95       	ret

0000cc9a <TinyGPSInteger::set(char const*)>:
_ZN14TinyGPSInteger3setEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:456

void TinyGPSInteger::set(const char *term)
{
    cc9a:	cf 93       	push	r28
    cc9c:	df 93       	push	r29
    cc9e:	ec 01       	movw	r28, r24
    cca0:	cb 01       	movw	r24, r22
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:457
   newval = atol(term);
    cca2:	0e 94 71 74 	call	0xe8e2	; 0xe8e2 <atol>
    cca6:	6a 87       	std	Y+10, r22	; 0x0a
    cca8:	7b 87       	std	Y+11, r23	; 0x0b
    ccaa:	8c 87       	std	Y+12, r24	; 0x0c
    ccac:	9d 87       	std	Y+13, r25	; 0x0d
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:458
}
    ccae:	df 91       	pop	r29
    ccb0:	cf 91       	pop	r28
    ccb2:	08 95       	ret

0000ccb4 <TinyGPSCustom::commit()>:
_ZN13TinyGPSCustom6commitEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:479
   // Insert this item into the GPS tree
   gps.insertCustom(this, _sentenceName, _termNumber);
}

void TinyGPSCustom::commit()
{
    ccb4:	cf 93       	push	r28
    ccb6:	df 93       	push	r29
    ccb8:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:480
   strcpy(this->buffer, this->stagingBuffer);
    ccba:	bc 01       	movw	r22, r24
    ccbc:	40 96       	adiw	r24, 0x10	; 16
    ccbe:	0e 94 a8 74 	call	0xe950	; 0xe950 <strcpy>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:481
   lastCommitTime = millis();
    ccc2:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <millis>
    ccc6:	68 a3       	std	Y+32, r22	; 0x20
    ccc8:	79 a3       	std	Y+33, r23	; 0x21
    ccca:	8a a3       	std	Y+34, r24	; 0x22
    cccc:	9b a3       	std	Y+35, r25	; 0x23
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:482
   valid = updated = true;
    ccce:	81 e0       	ldi	r24, 0x01	; 1
    ccd0:	8d a3       	std	Y+37, r24	; 0x25
    ccd2:	8c a3       	std	Y+36, r24	; 0x24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:483
}
    ccd4:	df 91       	pop	r29
    ccd6:	cf 91       	pop	r28
    ccd8:	08 95       	ret

0000ccda <TinyGPSCustom::set(char const*)>:
_ZN13TinyGPSCustom3setEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:487

void TinyGPSCustom::set(const char *term)
{
   strncpy(this->stagingBuffer, term, sizeof(this->stagingBuffer));
    ccda:	40 e1       	ldi	r20, 0x10	; 16
    ccdc:	50 e0       	ldi	r21, 0x00	; 0
    ccde:	0c 94 af 74 	jmp	0xe95e	; 0xe95e <strncpy>

0000cce2 <TinyGPSPlus::endOfTermHandler()>:
_ZN11TinyGPSPlus16endOfTermHandlerEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:160
#define COMBINE(sentence_type, term_number) (((unsigned)(sentence_type) << 5) | term_number)

// Processes a just-completed term
// Returns true if new sentence has just passed checksum test and is validated
bool TinyGPSPlus::endOfTermHandler()
{
    cce2:	af 92       	push	r10
    cce4:	bf 92       	push	r11
    cce6:	df 92       	push	r13
    cce8:	ef 92       	push	r14
    ccea:	ff 92       	push	r15
    ccec:	0f 93       	push	r16
    ccee:	1f 93       	push	r17
    ccf0:	cf 93       	push	r28
    ccf2:	df 93       	push	r29
    ccf4:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:162
  // If it's the checksum term, and the checksum checks out, commit
  if (isChecksumTerm)
    ccf6:	fc 01       	movw	r30, r24
    ccf8:	eb 57       	subi	r30, 0x7B	; 123
    ccfa:	ff 4f       	sbci	r31, 0xFF	; 255
    ccfc:	d0 80       	ld	r13, Z
    ccfe:	dd 20       	and	r13, r13
    cd00:	09 f4       	brne	.+2      	; 0xcd04 <TinyGPSPlus::endOfTermHandler()+0x22>
    cd02:	a0 c0       	rjmp	.+320    	; 0xce44 <TinyGPSPlus::endOfTermHandler()+0x162>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:164
  {
    byte checksum = 16 * fromHex(term[0]) + fromHex(term[1]);
    cd04:	31 96       	adiw	r30, 0x01	; 1
    cd06:	60 81       	ld	r22, Z
    cd08:	0e 94 12 62 	call	0xc424	; 0xc424 <TinyGPSPlus::fromHex(char)>
    cd0c:	18 2f       	mov	r17, r24
    cd0e:	fe 01       	movw	r30, r28
    cd10:	e9 57       	subi	r30, 0x79	; 121
    cd12:	ff 4f       	sbci	r31, 0xFF	; 255
    cd14:	60 81       	ld	r22, Z
    cd16:	ce 01       	movw	r24, r28
    cd18:	0e 94 12 62 	call	0xc424	; 0xc424 <TinyGPSPlus::fromHex(char)>
    cd1c:	12 95       	swap	r17
    cd1e:	10 7f       	andi	r17, 0xF0	; 240
    cd20:	18 0f       	add	r17, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:165
    if (checksum == parity)
    cd22:	fe 01       	movw	r30, r28
    cd24:	ec 57       	subi	r30, 0x7C	; 124
    cd26:	ff 4f       	sbci	r31, 0xFF	; 255
    cd28:	80 81       	ld	r24, Z
    cd2a:	81 13       	cpse	r24, r17
    cd2c:	72 c0       	rjmp	.+228    	; 0xce12 <TinyGPSPlus::endOfTermHandler()+0x130>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:167
    {
      passedChecksumCount++;
    cd2e:	b5 96       	adiw	r30, 0x25	; 37
    cd30:	80 81       	ld	r24, Z
    cd32:	91 81       	ldd	r25, Z+1	; 0x01
    cd34:	a2 81       	ldd	r26, Z+2	; 0x02
    cd36:	b3 81       	ldd	r27, Z+3	; 0x03
    cd38:	01 96       	adiw	r24, 0x01	; 1
    cd3a:	a1 1d       	adc	r26, r1
    cd3c:	b1 1d       	adc	r27, r1
    cd3e:	80 83       	st	Z, r24
    cd40:	91 83       	std	Z+1, r25	; 0x01
    cd42:	a2 83       	std	Z+2, r26	; 0x02
    cd44:	b3 83       	std	Z+3, r27	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:168
      if (sentenceHasFix)
    cd46:	8e 01       	movw	r16, r28
    cd48:	08 56       	subi	r16, 0x68	; 104
    cd4a:	1f 4f       	sbci	r17, 0xFF	; 255
    cd4c:	d8 01       	movw	r26, r16
    cd4e:	8c 91       	ld	r24, X
    cd50:	88 23       	and	r24, r24
    cd52:	61 f0       	breq	.+24     	; 0xcd6c <TinyGPSPlus::endOfTermHandler()+0x8a>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:169
        ++sentencesWithFixCount;
    cd54:	38 97       	sbiw	r30, 0x08	; 8
    cd56:	80 81       	ld	r24, Z
    cd58:	91 81       	ldd	r25, Z+1	; 0x01
    cd5a:	a2 81       	ldd	r26, Z+2	; 0x02
    cd5c:	b3 81       	ldd	r27, Z+3	; 0x03
    cd5e:	01 96       	adiw	r24, 0x01	; 1
    cd60:	a1 1d       	adc	r26, r1
    cd62:	b1 1d       	adc	r27, r1
    cd64:	80 83       	st	Z, r24
    cd66:	91 83       	std	Z+1, r25	; 0x01
    cd68:	a2 83       	std	Z+2, r26	; 0x02
    cd6a:	b3 83       	std	Z+3, r27	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:171

      switch(curSentenceType)
    cd6c:	fe 01       	movw	r30, r28
    cd6e:	eb 56       	subi	r30, 0x6B	; 107
    cd70:	ff 4f       	sbci	r31, 0xFF	; 255
    cd72:	80 81       	ld	r24, Z
    cd74:	88 23       	and	r24, r24
    cd76:	a1 f1       	breq	.+104    	; 0xcde0 <TinyGPSPlus::endOfTermHandler()+0xfe>
    cd78:	81 30       	cpi	r24, 0x01	; 1
    cd7a:	c1 f4       	brne	.+48     	; 0xcdac <TinyGPSPlus::endOfTermHandler()+0xca>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:174
      {
      case GPS_SENTENCE_GPRMC:
        date.commit();
    cd7c:	ce 01       	movw	r24, r28
    cd7e:	82 96       	adiw	r24, 0x22	; 34
    cd80:	0e 94 4a 65 	call	0xca94	; 0xca94 <TinyGPSDate::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:175
        time.commit();
    cd84:	ce 01       	movw	r24, r28
    cd86:	c0 96       	adiw	r24, 0x30	; 48
    cd88:	0e 94 61 65 	call	0xcac2	; 0xcac2 <TinyGPSTime::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:176
        if (sentenceHasFix)
    cd8c:	f8 01       	movw	r30, r16
    cd8e:	80 81       	ld	r24, Z
    cd90:	88 23       	and	r24, r24
    cd92:	61 f0       	breq	.+24     	; 0xcdac <TinyGPSPlus::endOfTermHandler()+0xca>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:178
        {
           location.commit();
    cd94:	ce 01       	movw	r24, r28
    cd96:	0e 94 d1 64 	call	0xc9a2	; 0xc9a2 <TinyGPSLocation::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:179
           speed.commit();
    cd9a:	ce 01       	movw	r24, r28
    cd9c:	ce 96       	adiw	r24, 0x3e	; 62
    cd9e:	0e 94 12 66 	call	0xcc24	; 0xcc24 <TinyGPSDecimal::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:180
           course.commit();
    cda2:	ce 01       	movw	r24, r28
    cda4:	84 5b       	subi	r24, 0xB4	; 180
    cda6:	9f 4f       	sbci	r25, 0xFF	; 255
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:191
        {
          location.commit();
          altitude.commit();
        }
        satellites.commit();
        hdop.commit();
    cda8:	0e 94 12 66 	call	0xcc24	; 0xcc24 <TinyGPSDecimal::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:196
        break;
      }

      // Commit all custom listeners of this sentence type
      for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0; p = p->next)
    cdac:	8e 01       	movw	r16, r28
    cdae:	05 56       	subi	r16, 0x65	; 101
    cdb0:	1f 4f       	sbci	r17, 0xFF	; 255
    cdb2:	f8 01       	movw	r30, r16
    cdb4:	c0 81       	ld	r28, Z
    cdb6:	d1 81       	ldd	r29, Z+1	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:196 (discriminator 4)
    cdb8:	20 97       	sbiw	r28, 0x00	; 0
    cdba:	c9 f1       	breq	.+114    	; 0xce2e <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:196 (discriminator 2)
    cdbc:	d8 01       	movw	r26, r16
    cdbe:	ed 91       	ld	r30, X+
    cdc0:	fc 91       	ld	r31, X
    cdc2:	66 a1       	ldd	r22, Z+38	; 0x26
    cdc4:	77 a1       	ldd	r23, Z+39	; 0x27
    cdc6:	8e a1       	ldd	r24, Y+38	; 0x26
    cdc8:	9f a1       	ldd	r25, Y+39	; 0x27
    cdca:	0e 94 9f 74 	call	0xe93e	; 0xe93e <strcmp>
    cdce:	89 2b       	or	r24, r25
    cdd0:	71 f5       	brne	.+92     	; 0xce2e <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:197 (discriminator 3)
         p->commit();
    cdd2:	ce 01       	movw	r24, r28
    cdd4:	0e 94 5a 66 	call	0xccb4	; 0xccb4 <TinyGPSCustom::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:196 (discriminator 3)
        hdop.commit();
        break;
      }

      // Commit all custom listeners of this sentence type
      for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0; p = p->next)
    cdd8:	0a a4       	ldd	r0, Y+42	; 0x2a
    cdda:	db a5       	ldd	r29, Y+43	; 0x2b
    cddc:	c0 2d       	mov	r28, r0
    cdde:	ec cf       	rjmp	.-40     	; 0xcdb8 <TinyGPSPlus::endOfTermHandler()+0xd6>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:184
           speed.commit();
           course.commit();
        }
        break;
      case GPS_SENTENCE_GPGGA:
        time.commit();
    cde0:	ce 01       	movw	r24, r28
    cde2:	c0 96       	adiw	r24, 0x30	; 48
    cde4:	0e 94 61 65 	call	0xcac2	; 0xcac2 <TinyGPSTime::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:185
        if (sentenceHasFix)
    cde8:	d8 01       	movw	r26, r16
    cdea:	8c 91       	ld	r24, X
    cdec:	88 23       	and	r24, r24
    cdee:	41 f0       	breq	.+16     	; 0xce00 <TinyGPSPlus::endOfTermHandler()+0x11e>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:187
        {
          location.commit();
    cdf0:	ce 01       	movw	r24, r28
    cdf2:	0e 94 d1 64 	call	0xc9a2	; 0xc9a2 <TinyGPSLocation::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:188
          altitude.commit();
    cdf6:	ce 01       	movw	r24, r28
    cdf8:	86 5a       	subi	r24, 0xA6	; 166
    cdfa:	9f 4f       	sbci	r25, 0xFF	; 255
    cdfc:	0e 94 12 66 	call	0xcc24	; 0xcc24 <TinyGPSDecimal::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:190
        }
        satellites.commit();
    ce00:	ce 01       	movw	r24, r28
    ce02:	88 59       	subi	r24, 0x98	; 152
    ce04:	9f 4f       	sbci	r25, 0xFF	; 255
    ce06:	0e 94 36 66 	call	0xcc6c	; 0xcc6c <TinyGPSInteger::commit()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:191
        hdop.commit();
    ce0a:	ce 01       	movw	r24, r28
    ce0c:	8a 58       	subi	r24, 0x8A	; 138
    ce0e:	9f 4f       	sbci	r25, 0xFF	; 255
    ce10:	cb cf       	rjmp	.-106    	; 0xcda8 <TinyGPSPlus::endOfTermHandler()+0xc6>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:203
      return true;
    }

    else
    {
      ++failedChecksumCount;
    ce12:	cb 55       	subi	r28, 0x5B	; 91
    ce14:	df 4f       	sbci	r29, 0xFF	; 255
    ce16:	88 81       	ld	r24, Y
    ce18:	99 81       	ldd	r25, Y+1	; 0x01
    ce1a:	aa 81       	ldd	r26, Y+2	; 0x02
    ce1c:	bb 81       	ldd	r27, Y+3	; 0x03
    ce1e:	01 96       	adiw	r24, 0x01	; 1
    ce20:	a1 1d       	adc	r26, r1
    ce22:	b1 1d       	adc	r27, r1
    ce24:	88 83       	st	Y, r24
    ce26:	99 83       	std	Y+1, r25	; 0x01
    ce28:	aa 83       	std	Y+2, r26	; 0x02
    ce2a:	bb 83       	std	Y+3, r27	; 0x03
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:206
    }

    return false;
    ce2c:	d1 2c       	mov	r13, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:282
  for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0 && p->termNumber <= curTermNumber; p = p->next)
    if (p->termNumber == curTermNumber)
         p->set(term);

  return false;
}
    ce2e:	8d 2d       	mov	r24, r13
    ce30:	df 91       	pop	r29
    ce32:	cf 91       	pop	r28
    ce34:	1f 91       	pop	r17
    ce36:	0f 91       	pop	r16
    ce38:	ff 90       	pop	r15
    ce3a:	ef 90       	pop	r14
    ce3c:	df 90       	pop	r13
    ce3e:	bf 90       	pop	r11
    ce40:	af 90       	pop	r10
    ce42:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:210

    return false;
  }

  // the first term determines the sentence type
  if (curTermNumber == 0)
    ce44:	7c 01       	movw	r14, r24
    ce46:	b6 e9       	ldi	r27, 0x96	; 150
    ce48:	eb 0e       	add	r14, r27
    ce4a:	f1 1c       	adc	r15, r1
    ce4c:	f7 01       	movw	r30, r14
    ce4e:	30 81       	ld	r19, Z
    ce50:	8b 56       	subi	r24, 0x6B	; 107
    ce52:	9f 4f       	sbci	r25, 0xFF	; 255
    ce54:	5c 01       	movw	r10, r24
    ce56:	8e 01       	movw	r16, r28
    ce58:	05 56       	subi	r16, 0x65	; 101
    ce5a:	1f 4f       	sbci	r17, 0xFF	; 255
    ce5c:	31 11       	cpse	r19, r1
    ce5e:	3e c0       	rjmp	.+124    	; 0xcedc <TinyGPSPlus::endOfTermHandler()+0x1fa>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:212
  {
    if (!strcmp(term, _GPRMCterm) || !strcmp(term, _GNRMCterm))
    ce60:	7e 01       	movw	r14, r28
    ce62:	96 e8       	ldi	r25, 0x86	; 134
    ce64:	e9 0e       	add	r14, r25
    ce66:	f1 1c       	adc	r15, r1
    ce68:	6e e8       	ldi	r22, 0x8E	; 142
    ce6a:	72 e0       	ldi	r23, 0x02	; 2
    ce6c:	c7 01       	movw	r24, r14
    ce6e:	0e 94 9f 74 	call	0xe93e	; 0xe93e <strcmp>
    ce72:	89 2b       	or	r24, r25
    ce74:	39 f0       	breq	.+14     	; 0xce84 <TinyGPSPlus::endOfTermHandler()+0x1a2>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:212 (discriminator 1)
    ce76:	64 e9       	ldi	r22, 0x94	; 148
    ce78:	72 e0       	ldi	r23, 0x02	; 2
    ce7a:	c7 01       	movw	r24, r14
    ce7c:	0e 94 9f 74 	call	0xe93e	; 0xe93e <strcmp>
    ce80:	89 2b       	or	r24, r25
    ce82:	21 f4       	brne	.+8      	; 0xce8c <TinyGPSPlus::endOfTermHandler()+0x1aa>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:213
      curSentenceType = GPS_SENTENCE_GPRMC;
    ce84:	81 e0       	ldi	r24, 0x01	; 1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:217
    else if (!strcmp(term, _GPGGAterm) || !strcmp(term, _GNGGAterm))
      curSentenceType = GPS_SENTENCE_GPGGA;
    else
      curSentenceType = GPS_SENTENCE_OTHER;
    ce86:	d5 01       	movw	r26, r10
    ce88:	8c 93       	st	X, r24
    ce8a:	10 c0       	rjmp	.+32     	; 0xceac <TinyGPSPlus::endOfTermHandler()+0x1ca>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:214
  // the first term determines the sentence type
  if (curTermNumber == 0)
  {
    if (!strcmp(term, _GPRMCterm) || !strcmp(term, _GNRMCterm))
      curSentenceType = GPS_SENTENCE_GPRMC;
    else if (!strcmp(term, _GPGGAterm) || !strcmp(term, _GNGGAterm))
    ce8c:	6a e9       	ldi	r22, 0x9A	; 154
    ce8e:	72 e0       	ldi	r23, 0x02	; 2
    ce90:	c7 01       	movw	r24, r14
    ce92:	0e 94 9f 74 	call	0xe93e	; 0xe93e <strcmp>
    ce96:	89 2b       	or	r24, r25
    ce98:	39 f0       	breq	.+14     	; 0xcea8 <TinyGPSPlus::endOfTermHandler()+0x1c6>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:214 (discriminator 1)
    ce9a:	60 ea       	ldi	r22, 0xA0	; 160
    ce9c:	72 e0       	ldi	r23, 0x02	; 2
    ce9e:	c7 01       	movw	r24, r14
    cea0:	0e 94 9f 74 	call	0xe93e	; 0xe93e <strcmp>
    cea4:	89 2b       	or	r24, r25
    cea6:	c1 f4       	brne	.+48     	; 0xced8 <TinyGPSPlus::endOfTermHandler()+0x1f6>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:215
      curSentenceType = GPS_SENTENCE_GPGGA;
    cea8:	f5 01       	movw	r30, r10
    ceaa:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:220
    else
      curSentenceType = GPS_SENTENCE_OTHER;

    // Any custom candidates of this sentence type?
    for (customCandidates = customElts; customCandidates != NULL && strcmp(customCandidates->sentenceName, term) < 0; customCandidates = customCandidates->next);
    ceac:	c7 56       	subi	r28, 0x67	; 103
    ceae:	df 4f       	sbci	r29, 0xFF	; 255
    ceb0:	88 81       	ld	r24, Y
    ceb2:	99 81       	ldd	r25, Y+1	; 0x01
    ceb4:	f8 01       	movw	r30, r16
    ceb6:	91 83       	std	Z+1, r25	; 0x01
    ceb8:	80 83       	st	Z, r24
    ceba:	c0 81       	ld	r28, Z
    cebc:	d1 81       	ldd	r29, Z+1	; 0x01
    cebe:	20 97       	sbiw	r28, 0x00	; 0
    cec0:	09 f4       	brne	.+2      	; 0xcec4 <TinyGPSPlus::endOfTermHandler()+0x1e2>
    cec2:	b5 cf       	rjmp	.-150    	; 0xce2e <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:220 (discriminator 2)
    cec4:	b7 01       	movw	r22, r14
    cec6:	8e a1       	ldd	r24, Y+38	; 0x26
    cec8:	9f a1       	ldd	r25, Y+39	; 0x27
    ceca:	0e 94 9f 74 	call	0xe93e	; 0xe93e <strcmp>
    cece:	97 ff       	sbrs	r25, 7
    ced0:	c3 c0       	rjmp	.+390    	; 0xd058 <TinyGPSPlus::endOfTermHandler()+0x376>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:220 (discriminator 3)
    ced2:	8a a5       	ldd	r24, Y+42	; 0x2a
    ced4:	9b a5       	ldd	r25, Y+43	; 0x2b
    ced6:	ee cf       	rjmp	.-36     	; 0xceb4 <TinyGPSPlus::endOfTermHandler()+0x1d2>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:217
    if (!strcmp(term, _GPRMCterm) || !strcmp(term, _GNRMCterm))
      curSentenceType = GPS_SENTENCE_GPRMC;
    else if (!strcmp(term, _GPGGAterm) || !strcmp(term, _GNGGAterm))
      curSentenceType = GPS_SENTENCE_GPGGA;
    else
      curSentenceType = GPS_SENTENCE_OTHER;
    ced8:	82 e0       	ldi	r24, 0x02	; 2
    ceda:	d5 cf       	rjmp	.-86     	; 0xce86 <TinyGPSPlus::endOfTermHandler()+0x1a4>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:227
       customCandidates = NULL;

    return false;
  }

  if (curSentenceType != GPS_SENTENCE_OTHER && term[0])
    cedc:	dc 01       	movw	r26, r24
    cede:	ec 91       	ld	r30, X
    cee0:	e2 30       	cpi	r30, 0x02	; 2
    cee2:	09 f4       	brne	.+2      	; 0xcee6 <TinyGPSPlus::endOfTermHandler()+0x204>
    cee4:	44 c0       	rjmp	.+136    	; 0xcf6e <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:227 (discriminator 1)
    cee6:	ce 01       	movw	r24, r28
    cee8:	8a 57       	subi	r24, 0x7A	; 122
    ceea:	9f 4f       	sbci	r25, 0xFF	; 255
    ceec:	dc 01       	movw	r26, r24
    ceee:	2c 91       	ld	r18, X
    cef0:	22 23       	and	r18, r18
    cef2:	09 f4       	brne	.+2      	; 0xcef6 <TinyGPSPlus::endOfTermHandler()+0x214>
    cef4:	3c c0       	rjmp	.+120    	; 0xcf6e <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:228
    switch(COMBINE(curSentenceType, curTermNumber))
    cef6:	b0 e2       	ldi	r27, 0x20	; 32
    cef8:	eb 9f       	mul	r30, r27
    cefa:	f0 01       	movw	r30, r0
    cefc:	11 24       	eor	r1, r1
    cefe:	e3 2b       	or	r30, r19
    cf00:	31 97       	sbiw	r30, 0x01	; 1
    cf02:	e9 32       	cpi	r30, 0x29	; 41
    cf04:	f1 05       	cpc	r31, r1
    cf06:	08 f0       	brcs	.+2      	; 0xcf0a <TinyGPSPlus::endOfTermHandler()+0x228>
    cf08:	32 c0       	rjmp	.+100    	; 0xcf6e <TinyGPSPlus::endOfTermHandler()+0x28c>
    cf0a:	e7 57       	subi	r30, 0x77	; 119
    cf0c:	f8 49       	sbci	r31, 0x98	; 152
    cf0e:	0c 94 ea 72 	jmp	0xe5d4	; 0xe5d4 <__tablejump2__>
    cf12:	b2 67       	ori	r27, 0x72	; 114
    cf14:	ec 67       	ori	r30, 0x7C	; 124
    cf16:	f2 67       	ori	r31, 0x72	; 114
    cf18:	f8 67       	ori	r31, 0x78	; 120
    cf1a:	fc 67       	ori	r31, 0x7C	; 124
    cf1c:	13 68       	ori	r17, 0x83	; 131
    cf1e:	1b 68       	ori	r17, 0x8B	; 139
    cf20:	22 68       	ori	r18, 0x82	; 130
    cf22:	27 68       	ori	r18, 0x87	; 135
    cf24:	b7 67       	ori	r27, 0x77	; 119
    cf26:	b7 67       	ori	r27, 0x77	; 119
    cf28:	b7 67       	ori	r27, 0x77	; 119
    cf2a:	b7 67       	ori	r27, 0x77	; 119
    cf2c:	b7 67       	ori	r27, 0x77	; 119
    cf2e:	b7 67       	ori	r27, 0x77	; 119
    cf30:	b7 67       	ori	r27, 0x77	; 119
    cf32:	b7 67       	ori	r27, 0x77	; 119
    cf34:	b7 67       	ori	r27, 0x77	; 119
    cf36:	b7 67       	ori	r27, 0x77	; 119
    cf38:	b7 67       	ori	r27, 0x77	; 119
    cf3a:	b7 67       	ori	r27, 0x77	; 119
    cf3c:	b7 67       	ori	r27, 0x77	; 119
    cf3e:	b7 67       	ori	r27, 0x77	; 119
    cf40:	b7 67       	ori	r27, 0x77	; 119
    cf42:	b7 67       	ori	r27, 0x77	; 119
    cf44:	b7 67       	ori	r27, 0x77	; 119
    cf46:	b7 67       	ori	r27, 0x77	; 119
    cf48:	b7 67       	ori	r27, 0x77	; 119
    cf4a:	b7 67       	ori	r27, 0x77	; 119
    cf4c:	b7 67       	ori	r27, 0x77	; 119
    cf4e:	b7 67       	ori	r27, 0x77	; 119
    cf50:	b7 67       	ori	r27, 0x77	; 119
    cf52:	b2 67       	ori	r27, 0x72	; 114
    cf54:	e4 67       	ori	r30, 0x74	; 116
    cf56:	ec 67       	ori	r30, 0x7C	; 124
    cf58:	f2 67       	ori	r31, 0x72	; 114
    cf5a:	f8 67       	ori	r31, 0x78	; 120
    cf5c:	fc 67       	ori	r31, 0x7C	; 124
    cf5e:	02 68       	ori	r16, 0x82	; 130
    cf60:	08 68       	ori	r16, 0x88	; 136
    cf62:	0d 68       	ori	r16, 0x8D	; 141
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:232
  {
    case COMBINE(GPS_SENTENCE_GPRMC, 1): // Time in both sentences
    case COMBINE(GPS_SENTENCE_GPGGA, 1):
      time.setTime(term);
    cf64:	bc 01       	movw	r22, r24
    cf66:	ce 01       	movw	r24, r28
    cf68:	c0 96       	adiw	r24, 0x30	; 48
    cf6a:	0e 94 78 65 	call	0xcaf0	; 0xcaf0 <TinyGPSTime::setTime(char const*)>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:277
      altitude.set(term);
      break;
  }

  // Set custom values as needed
  for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0 && p->termNumber <= curTermNumber; p = p->next)
    cf6e:	f8 01       	movw	r30, r16
    cf70:	a0 80       	ld	r10, Z
    cf72:	b1 80       	ldd	r11, Z+1	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:279
    if (p->termNumber == curTermNumber)
         p->set(term);
    cf74:	ca 57       	subi	r28, 0x7A	; 122
    cf76:	df 4f       	sbci	r29, 0xFF	; 255
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:277 (discriminator 1)
      altitude.set(term);
      break;
  }

  // Set custom values as needed
  for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0 && p->termNumber <= curTermNumber; p = p->next)
    cf78:	a1 14       	cp	r10, r1
    cf7a:	b1 04       	cpc	r11, r1
    cf7c:	09 f4       	brne	.+2      	; 0xcf80 <TinyGPSPlus::endOfTermHandler()+0x29e>
    cf7e:	57 cf       	rjmp	.-338    	; 0xce2e <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:277 (discriminator 2)
    cf80:	d8 01       	movw	r26, r16
    cf82:	ed 91       	ld	r30, X+
    cf84:	fc 91       	ld	r31, X
    cf86:	66 a1       	ldd	r22, Z+38	; 0x26
    cf88:	77 a1       	ldd	r23, Z+39	; 0x27
    cf8a:	f5 01       	movw	r30, r10
    cf8c:	86 a1       	ldd	r24, Z+38	; 0x26
    cf8e:	97 a1       	ldd	r25, Z+39	; 0x27
    cf90:	0e 94 9f 74 	call	0xe93e	; 0xe93e <strcmp>
    cf94:	89 2b       	or	r24, r25
    cf96:	09 f0       	breq	.+2      	; 0xcf9a <TinyGPSPlus::endOfTermHandler()+0x2b8>
    cf98:	4a cf       	rjmp	.-364    	; 0xce2e <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:277 (discriminator 3)
    cf9a:	d5 01       	movw	r26, r10
    cf9c:	98 96       	adiw	r26, 0x28	; 40
    cf9e:	2d 91       	ld	r18, X+
    cfa0:	3c 91       	ld	r19, X
    cfa2:	f7 01       	movw	r30, r14
    cfa4:	80 81       	ld	r24, Z
    cfa6:	90 e0       	ldi	r25, 0x00	; 0
    cfa8:	82 17       	cp	r24, r18
    cfaa:	93 07       	cpc	r25, r19
    cfac:	0c f4       	brge	.+2      	; 0xcfb0 <TinyGPSPlus::endOfTermHandler()+0x2ce>
    cfae:	3f cf       	rjmp	.-386    	; 0xce2e <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:278
    if (p->termNumber == curTermNumber)
    cfb0:	28 17       	cp	r18, r24
    cfb2:	39 07       	cpc	r19, r25
    cfb4:	21 f4       	brne	.+8      	; 0xcfbe <TinyGPSPlus::endOfTermHandler()+0x2dc>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:279
         p->set(term);
    cfb6:	be 01       	movw	r22, r28
    cfb8:	c5 01       	movw	r24, r10
    cfba:	0e 94 6d 66 	call	0xccda	; 0xccda <TinyGPSCustom::set(char const*)>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:277 (discriminator 4)
      altitude.set(term);
      break;
  }

  // Set custom values as needed
  for (TinyGPSCustom *p = customCandidates; p != NULL && strcmp(p->sentenceName, customCandidates->sentenceName) == 0 && p->termNumber <= curTermNumber; p = p->next)
    cfbe:	d5 01       	movw	r26, r10
    cfc0:	9a 96       	adiw	r26, 0x2a	; 42
    cfc2:	ad 90       	ld	r10, X+
    cfc4:	bc 90       	ld	r11, X
    cfc6:	d8 cf       	rjmp	.-80     	; 0xcf78 <TinyGPSPlus::endOfTermHandler()+0x296>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:235
    case COMBINE(GPS_SENTENCE_GPRMC, 1): // Time in both sentences
    case COMBINE(GPS_SENTENCE_GPGGA, 1):
      time.setTime(term);
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 2): // GPRMC validity
      sentenceHasFix = term[0] == 'A';
    cfc8:	fe 01       	movw	r30, r28
    cfca:	e8 56       	subi	r30, 0x68	; 104
    cfcc:	ff 4f       	sbci	r31, 0xFF	; 255
    cfce:	81 e0       	ldi	r24, 0x01	; 1
    cfd0:	21 34       	cpi	r18, 0x41	; 65
    cfd2:	79 f1       	breq	.+94     	; 0xd032 <TinyGPSPlus::endOfTermHandler()+0x350>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:263
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 9): // Date (GPRMC)
      date.setDate(term);
      break;
    case COMBINE(GPS_SENTENCE_GPGGA, 6): // Fix data (GPGGA)
      sentenceHasFix = term[0] > '0';
    cfd4:	80 e0       	ldi	r24, 0x00	; 0
    cfd6:	2d c0       	rjmp	.+90     	; 0xd032 <TinyGPSPlus::endOfTermHandler()+0x350>
_ZN15TinyGPSLocation11setLatitudeEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:347
   valid = updated = true;
}

void TinyGPSLocation::setLatitude(const char *term)
{
   TinyGPSPlus::parseDegrees(term, rawNewLatData);
    cfd8:	be 01       	movw	r22, r28
    cfda:	60 5f       	subi	r22, 0xF0	; 240
    cfdc:	7f 4f       	sbci	r23, 0xFF	; 255
_ZN15TinyGPSLocation12setLongitudeEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:352
}

void TinyGPSLocation::setLongitude(const char *term)
{
   TinyGPSPlus::parseDegrees(term, rawNewLngData);
    cfde:	0e 94 77 62 	call	0xc4ee	; 0xc4ee <TinyGPSPlus::parseDegrees(char const*, RawDegrees&)>
    cfe2:	c5 cf       	rjmp	.-118    	; 0xcf6e <TinyGPSPlus::endOfTermHandler()+0x28c>
_ZN11TinyGPSPlus16endOfTermHandlerEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:243
    case COMBINE(GPS_SENTENCE_GPGGA, 2):
      location.setLatitude(term);
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 4): // N/S
    case COMBINE(GPS_SENTENCE_GPGGA, 3):
      location.rawNewLatData.negative = term[0] == 'S';
    cfe4:	81 e0       	ldi	r24, 0x01	; 1
    cfe6:	23 35       	cpi	r18, 0x53	; 83
    cfe8:	09 f0       	breq	.+2      	; 0xcfec <TinyGPSPlus::endOfTermHandler()+0x30a>
    cfea:	80 e0       	ldi	r24, 0x00	; 0
    cfec:	8e 8b       	std	Y+22, r24	; 0x16
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:244
      break;
    cfee:	bf cf       	rjmp	.-130    	; 0xcf6e <TinyGPSPlus::endOfTermHandler()+0x28c>
_ZN15TinyGPSLocation12setLongitudeEPKc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:352
   TinyGPSPlus::parseDegrees(term, rawNewLatData);
}

void TinyGPSLocation::setLongitude(const char *term)
{
   TinyGPSPlus::parseDegrees(term, rawNewLngData);
    cff0:	be 01       	movw	r22, r28
    cff2:	69 5e       	subi	r22, 0xE9	; 233
    cff4:	7f 4f       	sbci	r23, 0xFF	; 255
    cff6:	f3 cf       	rjmp	.-26     	; 0xcfde <TinyGPSPlus::endOfTermHandler()+0x2fc>
_ZN11TinyGPSPlus16endOfTermHandlerEv():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:251
    case COMBINE(GPS_SENTENCE_GPGGA, 4):
      location.setLongitude(term);
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 6): // E/W
    case COMBINE(GPS_SENTENCE_GPGGA, 5):
      location.rawNewLngData.negative = term[0] == 'W';
    cff8:	81 e0       	ldi	r24, 0x01	; 1
    cffa:	27 35       	cpi	r18, 0x57	; 87
    cffc:	09 f0       	breq	.+2      	; 0xd000 <TinyGPSPlus::endOfTermHandler()+0x31e>
    cffe:	80 e0       	ldi	r24, 0x00	; 0
    d000:	8d 8f       	std	Y+29, r24	; 0x1d
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:252
      break;
    d002:	b5 cf       	rjmp	.-150    	; 0xcf6e <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:254
    case COMBINE(GPS_SENTENCE_GPRMC, 7): // Speed (GPRMC)
      speed.set(term);
    d004:	bc 01       	movw	r22, r24
    d006:	ce 01       	movw	r24, r28
    d008:	ce 96       	adiw	r24, 0x3e	; 62
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:272
      break;
    case COMBINE(GPS_SENTENCE_GPGGA, 8): // HDOP
      hdop.set(term);
      break;
    case COMBINE(GPS_SENTENCE_GPGGA, 9): // Altitude (GPGGA)
      altitude.set(term);
    d00a:	0e 94 29 66 	call	0xcc52	; 0xcc52 <TinyGPSDecimal::set(char const*)>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:273
      break;
    d00e:	af cf       	rjmp	.-162    	; 0xcf6e <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:257
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 7): // Speed (GPRMC)
      speed.set(term);
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 8): // Course (GPRMC)
      course.set(term);
    d010:	bc 01       	movw	r22, r24
    d012:	ce 01       	movw	r24, r28
    d014:	84 5b       	subi	r24, 0xB4	; 180
    d016:	9f 4f       	sbci	r25, 0xFF	; 255
    d018:	f8 cf       	rjmp	.-16     	; 0xd00a <TinyGPSPlus::endOfTermHandler()+0x328>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:260
      break;
    case COMBINE(GPS_SENTENCE_GPRMC, 9): // Date (GPRMC)
      date.setDate(term);
    d01a:	bc 01       	movw	r22, r24
    d01c:	ce 01       	movw	r24, r28
    d01e:	82 96       	adiw	r24, 0x22	; 34
    d020:	0e 94 85 65 	call	0xcb0a	; 0xcb0a <TinyGPSDate::setDate(char const*)>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:261
      break;
    d024:	a4 cf       	rjmp	.-184    	; 0xcf6e <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:263
    case COMBINE(GPS_SENTENCE_GPGGA, 6): // Fix data (GPGGA)
      sentenceHasFix = term[0] > '0';
    d026:	fe 01       	movw	r30, r28
    d028:	e8 56       	subi	r30, 0x68	; 104
    d02a:	ff 4f       	sbci	r31, 0xFF	; 255
    d02c:	81 e0       	ldi	r24, 0x01	; 1
    d02e:	21 33       	cpi	r18, 0x31	; 49
    d030:	8c f2       	brlt	.-94     	; 0xcfd4 <TinyGPSPlus::endOfTermHandler()+0x2f2>
    d032:	80 83       	st	Z, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:264
      break;
    d034:	9c cf       	rjmp	.-200    	; 0xcf6e <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:266
    case COMBINE(GPS_SENTENCE_GPGGA, 7): // Satellites used (GPGGA)
      satellites.set(term);
    d036:	bc 01       	movw	r22, r24
    d038:	ce 01       	movw	r24, r28
    d03a:	88 59       	subi	r24, 0x98	; 152
    d03c:	9f 4f       	sbci	r25, 0xFF	; 255
    d03e:	0e 94 4d 66 	call	0xcc9a	; 0xcc9a <TinyGPSInteger::set(char const*)>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:267
      break;
    d042:	95 cf       	rjmp	.-214    	; 0xcf6e <TinyGPSPlus::endOfTermHandler()+0x28c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:269
    case COMBINE(GPS_SENTENCE_GPGGA, 8): // HDOP
      hdop.set(term);
    d044:	bc 01       	movw	r22, r24
    d046:	ce 01       	movw	r24, r28
    d048:	8a 58       	subi	r24, 0x8A	; 138
    d04a:	9f 4f       	sbci	r25, 0xFF	; 255
    d04c:	de cf       	rjmp	.-68     	; 0xd00a <TinyGPSPlus::endOfTermHandler()+0x328>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:272
      break;
    case COMBINE(GPS_SENTENCE_GPGGA, 9): // Altitude (GPGGA)
      altitude.set(term);
    d04e:	bc 01       	movw	r22, r24
    d050:	ce 01       	movw	r24, r28
    d052:	86 5a       	subi	r24, 0xA6	; 166
    d054:	9f 4f       	sbci	r25, 0xFF	; 255
    d056:	d9 cf       	rjmp	.-78     	; 0xd00a <TinyGPSPlus::endOfTermHandler()+0x328>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:221
    else
      curSentenceType = GPS_SENTENCE_OTHER;

    // Any custom candidates of this sentence type?
    for (customCandidates = customElts; customCandidates != NULL && strcmp(customCandidates->sentenceName, term) < 0; customCandidates = customCandidates->next);
    if (customCandidates != NULL && strcmp(customCandidates->sentenceName, term) > 0)
    d058:	89 2b       	or	r24, r25
    d05a:	09 f4       	brne	.+2      	; 0xd05e <TinyGPSPlus::endOfTermHandler()+0x37c>
    d05c:	e8 ce       	rjmp	.-560    	; 0xce2e <TinyGPSPlus::endOfTermHandler()+0x14c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:222
       customCandidates = NULL;
    d05e:	d8 01       	movw	r26, r16
    d060:	1d 92       	st	X+, r1
    d062:	1c 92       	st	X, r1
    d064:	e4 ce       	rjmp	.-568    	; 0xce2e <TinyGPSPlus::endOfTermHandler()+0x14c>

0000d066 <TinyGPSPlus::encode(char)>:
_ZN11TinyGPSPlus6encodeEc():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:57
//
// public methods
//

bool TinyGPSPlus::encode(char c)
{
    d066:	cf 92       	push	r12
    d068:	df 92       	push	r13
    d06a:	ef 92       	push	r14
    d06c:	ff 92       	push	r15
    d06e:	1f 93       	push	r17
    d070:	cf 93       	push	r28
    d072:	df 93       	push	r29
    d074:	9c 01       	movw	r18, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:58
  ++encodedCharCount;
    d076:	fc 01       	movw	r30, r24
    d078:	e3 56       	subi	r30, 0x63	; 99
    d07a:	ff 4f       	sbci	r31, 0xFF	; 255
    d07c:	80 81       	ld	r24, Z
    d07e:	91 81       	ldd	r25, Z+1	; 0x01
    d080:	a2 81       	ldd	r26, Z+2	; 0x02
    d082:	b3 81       	ldd	r27, Z+3	; 0x03
    d084:	01 96       	adiw	r24, 0x01	; 1
    d086:	a1 1d       	adc	r26, r1
    d088:	b1 1d       	adc	r27, r1
    d08a:	80 83       	st	Z, r24
    d08c:	91 83       	std	Z+1, r25	; 0x01
    d08e:	a2 83       	std	Z+2, r26	; 0x02
    d090:	b3 83       	std	Z+3, r27	; 0x03
    d092:	c9 01       	movw	r24, r18
    d094:	89 56       	subi	r24, 0x69	; 105
    d096:	9f 4f       	sbci	r25, 0xFF	; 255
    d098:	6c 01       	movw	r12, r24
    d09a:	d9 01       	movw	r26, r18
    d09c:	ab 57       	subi	r26, 0x7B	; 123
    d09e:	bf 4f       	sbci	r27, 0xFF	; 255
    d0a0:	7d 01       	movw	r14, r26
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:60

  switch(c)
    d0a2:	64 32       	cpi	r22, 0x24	; 36
    d0a4:	b1 f1       	breq	.+108    	; 0xd112 <TinyGPSPlus::encode(char)+0xac>
    d0a6:	54 f5       	brge	.+84     	; 0xd0fc <TinyGPSPlus::encode(char)+0x96>
    d0a8:	6a 30       	cpi	r22, 0x0A	; 10
    d0aa:	19 f0       	breq	.+6      	; 0xd0b2 <TinyGPSPlus::encode(char)+0x4c>
    d0ac:	6d 30       	cpi	r22, 0x0D	; 13
    d0ae:	09 f0       	breq	.+2      	; 0xd0b2 <TinyGPSPlus::encode(char)+0x4c>
    d0b0:	42 c0       	rjmp	.+132    	; 0xd136 <TinyGPSPlus::encode(char)+0xd0>
    d0b2:	16 2f       	mov	r17, r22
    d0b4:	e9 01       	movw	r28, r18
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:69
  case '\r':
  case '\n':
  case '*':
    {
      bool isValidSentence = false;
      if (curTermOffset < sizeof(term))
    d0b6:	d6 01       	movw	r26, r12
    d0b8:	ec 91       	ld	r30, X
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:68
    parity ^= (uint8_t)c;
  case '\r':
  case '\n':
  case '*':
    {
      bool isValidSentence = false;
    d0ba:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:69
      if (curTermOffset < sizeof(term))
    d0bc:	ef 30       	cpi	r30, 0x0F	; 15
    d0be:	48 f4       	brcc	.+18     	; 0xd0d2 <TinyGPSPlus::encode(char)+0x6c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:71
      {
        term[curTermOffset] = 0;
    d0c0:	e2 0f       	add	r30, r18
    d0c2:	f3 2f       	mov	r31, r19
    d0c4:	f1 1d       	adc	r31, r1
    d0c6:	ea 57       	subi	r30, 0x7A	; 122
    d0c8:	ff 4f       	sbci	r31, 0xFF	; 255
    d0ca:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:72
        isValidSentence = endOfTermHandler();
    d0cc:	c9 01       	movw	r24, r18
    d0ce:	0e 94 71 66 	call	0xcce2	; 0xcce2 <TinyGPSPlus::endOfTermHandler()>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:74
      }
      ++curTermNumber;
    d0d2:	ca 56       	subi	r28, 0x6A	; 106
    d0d4:	df 4f       	sbci	r29, 0xFF	; 255
    d0d6:	98 81       	ld	r25, Y
    d0d8:	9f 5f       	subi	r25, 0xFF	; 255
    d0da:	98 83       	st	Y, r25
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:75
      curTermOffset = 0;
    d0dc:	f6 01       	movw	r30, r12
    d0de:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:76
      isChecksumTerm = c == '*';
    d0e0:	91 e0       	ldi	r25, 0x01	; 1
    d0e2:	1a 32       	cpi	r17, 0x2A	; 42
    d0e4:	09 f0       	breq	.+2      	; 0xd0e8 <TinyGPSPlus::encode(char)+0x82>
    d0e6:	90 e0       	ldi	r25, 0x00	; 0
    d0e8:	d7 01       	movw	r26, r14
    d0ea:	9c 93       	st	X, r25
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:98
      parity ^= c;
    return false;
  }

  return false;
}
    d0ec:	df 91       	pop	r29
    d0ee:	cf 91       	pop	r28
    d0f0:	1f 91       	pop	r17
    d0f2:	ff 90       	pop	r15
    d0f4:	ef 90       	pop	r14
    d0f6:	df 90       	pop	r13
    d0f8:	cf 90       	pop	r12
    d0fa:	08 95       	ret
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:60

bool TinyGPSPlus::encode(char c)
{
  ++encodedCharCount;

  switch(c)
    d0fc:	6a 32       	cpi	r22, 0x2A	; 42
    d0fe:	c9 f2       	breq	.-78     	; 0xd0b2 <TinyGPSPlus::encode(char)+0x4c>
    d100:	6c 32       	cpi	r22, 0x2C	; 44
    d102:	c9 f4       	brne	.+50     	; 0xd136 <TinyGPSPlus::encode(char)+0xd0>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:63
  {
  case ',': // term terminators
    parity ^= (uint8_t)c;
    d104:	f9 01       	movw	r30, r18
    d106:	ec 57       	subi	r30, 0x7C	; 124
    d108:	ff 4f       	sbci	r31, 0xFF	; 255
    d10a:	80 81       	ld	r24, Z
    d10c:	86 27       	eor	r24, r22
    d10e:	80 83       	st	Z, r24
    d110:	d0 cf       	rjmp	.-96     	; 0xd0b2 <TinyGPSPlus::encode(char)+0x4c>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:82
      return isValidSentence;
    }
    break;

  case '$': // sentence begin
    curTermNumber = curTermOffset = 0;
    d112:	fc 01       	movw	r30, r24
    d114:	10 82       	st	Z, r1
    d116:	f9 01       	movw	r30, r18
    d118:	ea 56       	subi	r30, 0x6A	; 106
    d11a:	ff 4f       	sbci	r31, 0xFF	; 255
    d11c:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:83
    parity = 0;
    d11e:	72 97       	sbiw	r30, 0x12	; 18
    d120:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:84
    curSentenceType = GPS_SENTENCE_OTHER;
    d122:	71 96       	adiw	r30, 0x11	; 17
    d124:	82 e0       	ldi	r24, 0x02	; 2
    d126:	80 83       	st	Z, r24
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:85
    isChecksumTerm = false;
    d128:	1c 92       	st	X, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:86
    sentenceHasFix = false;
    d12a:	28 56       	subi	r18, 0x68	; 104
    d12c:	3f 4f       	sbci	r19, 0xFF	; 255
    d12e:	f9 01       	movw	r30, r18
    d130:	10 82       	st	Z, r1
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:94
  default: // ordinary characters
    if (curTermOffset < sizeof(term) - 1)
      term[curTermOffset++] = c;
    if (!isChecksumTerm)
      parity ^= c;
    return false;
    d132:	80 e0       	ldi	r24, 0x00	; 0
    d134:	db cf       	rjmp	.-74     	; 0xd0ec <TinyGPSPlus::encode(char)+0x86>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:90
    isChecksumTerm = false;
    sentenceHasFix = false;
    return false;

  default: // ordinary characters
    if (curTermOffset < sizeof(term) - 1)
    d136:	d6 01       	movw	r26, r12
    d138:	ec 91       	ld	r30, X
    d13a:	ee 30       	cpi	r30, 0x0E	; 14
    d13c:	48 f4       	brcc	.+18     	; 0xd150 <TinyGPSPlus::encode(char)+0xea>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:91
      term[curTermOffset++] = c;
    d13e:	81 e0       	ldi	r24, 0x01	; 1
    d140:	8e 0f       	add	r24, r30
    d142:	8c 93       	st	X, r24
    d144:	e2 0f       	add	r30, r18
    d146:	f3 2f       	mov	r31, r19
    d148:	f1 1d       	adc	r31, r1
    d14a:	ea 57       	subi	r30, 0x7A	; 122
    d14c:	ff 4f       	sbci	r31, 0xFF	; 255
    d14e:	60 83       	st	Z, r22
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:92
    if (!isChecksumTerm)
    d150:	f7 01       	movw	r30, r14
    d152:	80 81       	ld	r24, Z
    d154:	81 11       	cpse	r24, r1
    d156:	ed cf       	rjmp	.-38     	; 0xd132 <TinyGPSPlus::encode(char)+0xcc>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:93
      parity ^= c;
    d158:	f9 01       	movw	r30, r18
    d15a:	ec 57       	subi	r30, 0x7C	; 124
    d15c:	ff 4f       	sbci	r31, 0xFF	; 255
    d15e:	90 81       	ld	r25, Z
    d160:	69 27       	eor	r22, r25
    d162:	60 83       	st	Z, r22
    d164:	c3 cf       	rjmp	.-122    	; 0xd0ec <TinyGPSPlus::encode(char)+0x86>

0000d166 <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)>:
_ZN11TinyGPSPlus12insertCustomEP13TinyGPSCustomPKci():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:491
{
   strncpy(this->stagingBuffer, term, sizeof(this->stagingBuffer));
}

void TinyGPSPlus::insertCustom(TinyGPSCustom *pElt, const char *sentenceName, int termNumber)
{
    d166:	af 92       	push	r10
    d168:	bf 92       	push	r11
    d16a:	cf 92       	push	r12
    d16c:	df 92       	push	r13
    d16e:	ef 92       	push	r14
    d170:	ff 92       	push	r15
    d172:	0f 93       	push	r16
    d174:	1f 93       	push	r17
    d176:	cf 93       	push	r28
    d178:	df 93       	push	r29
    d17a:	7b 01       	movw	r14, r22
    d17c:	5a 01       	movw	r10, r20
    d17e:	69 01       	movw	r12, r18
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:494
   TinyGPSCustom **ppelt;

   for (ppelt = &this->customElts; *ppelt != NULL; ppelt = &(*ppelt)->next)
    d180:	8c 01       	movw	r16, r24
    d182:	07 56       	subi	r16, 0x67	; 103
    d184:	1f 4f       	sbci	r17, 0xFF	; 255
    d186:	f8 01       	movw	r30, r16
    d188:	c0 81       	ld	r28, Z
    d18a:	d1 81       	ldd	r29, Z+1	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:494 (discriminator 1)
    d18c:	20 97       	sbiw	r28, 0x00	; 0
    d18e:	a9 f0       	breq	.+42     	; 0xd1ba <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)+0x54>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:496
   {
      int cmp = strcmp(sentenceName, (*ppelt)->sentenceName);
    d190:	6e a1       	ldd	r22, Y+38	; 0x26
    d192:	7f a1       	ldd	r23, Y+39	; 0x27
    d194:	c5 01       	movw	r24, r10
    d196:	0e 94 9f 74 	call	0xe93e	; 0xe93e <strcmp>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:497
      if (cmp < 0 || (cmp == 0 && termNumber < (*ppelt)->termNumber))
    d19a:	97 fd       	sbrc	r25, 7
    d19c:	0e c0       	rjmp	.+28     	; 0xd1ba <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)+0x54>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:497 (discriminator 1)
    d19e:	89 2b       	or	r24, r25
    d1a0:	29 f4       	brne	.+10     	; 0xd1ac <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)+0x46>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:497 (discriminator 2)
    d1a2:	88 a5       	ldd	r24, Y+40	; 0x28
    d1a4:	99 a5       	ldd	r25, Y+41	; 0x29
    d1a6:	c8 16       	cp	r12, r24
    d1a8:	d9 06       	cpc	r13, r25
    d1aa:	3c f0       	brlt	.+14     	; 0xd1ba <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)+0x54>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:494 (discriminator 2)

void TinyGPSPlus::insertCustom(TinyGPSCustom *pElt, const char *sentenceName, int termNumber)
{
   TinyGPSCustom **ppelt;

   for (ppelt = &this->customElts; *ppelt != NULL; ppelt = &(*ppelt)->next)
    d1ac:	8e 01       	movw	r16, r28
    d1ae:	06 5d       	subi	r16, 0xD6	; 214
    d1b0:	1f 4f       	sbci	r17, 0xFF	; 255
    d1b2:	0a a4       	ldd	r0, Y+42	; 0x2a
    d1b4:	db a5       	ldd	r29, Y+43	; 0x2b
    d1b6:	c0 2d       	mov	r28, r0
    d1b8:	e9 cf       	rjmp	.-46     	; 0xd18c <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)+0x26>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:501
      int cmp = strcmp(sentenceName, (*ppelt)->sentenceName);
      if (cmp < 0 || (cmp == 0 && termNumber < (*ppelt)->termNumber))
         break;
   }

   pElt->next = *ppelt;
    d1ba:	f7 01       	movw	r30, r14
    d1bc:	d3 a7       	std	Z+43, r29	; 0x2b
    d1be:	c2 a7       	std	Z+42, r28	; 0x2a
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:502
   *ppelt = pElt;
    d1c0:	f8 01       	movw	r30, r16
    d1c2:	f1 82       	std	Z+1, r15	; 0x01
    d1c4:	e0 82       	st	Z, r14
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:503
}
    d1c6:	df 91       	pop	r29
    d1c8:	cf 91       	pop	r28
    d1ca:	1f 91       	pop	r17
    d1cc:	0f 91       	pop	r16
    d1ce:	ff 90       	pop	r15
    d1d0:	ef 90       	pop	r14
    d1d2:	df 90       	pop	r13
    d1d4:	cf 90       	pop	r12
    d1d6:	bf 90       	pop	r11
    d1d8:	af 90       	pop	r10
    d1da:	08 95       	ret

0000d1dc <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>:
_ZN13TinyGPSCustom5beginER11TinyGPSPlusPKci():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:466
{
   begin(gps, _sentenceName, _termNumber);
}

void TinyGPSCustom::begin(TinyGPSPlus &gps, const char *_sentenceName, int _termNumber)
{
    d1dc:	cf 93       	push	r28
    d1de:	df 93       	push	r29
    d1e0:	fc 01       	movw	r30, r24
    d1e2:	db 01       	movw	r26, r22
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:467
   lastCommitTime = 0;
    d1e4:	10 a2       	std	Z+32, r1	; 0x20
    d1e6:	11 a2       	std	Z+33, r1	; 0x21
    d1e8:	12 a2       	std	Z+34, r1	; 0x22
    d1ea:	13 a2       	std	Z+35, r1	; 0x23
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:468
   updated = valid = false;
    d1ec:	14 a2       	std	Z+36, r1	; 0x24
    d1ee:	15 a2       	std	Z+37, r1	; 0x25
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:469
   sentenceName = _sentenceName;
    d1f0:	57 a3       	std	Z+39, r21	; 0x27
    d1f2:	46 a3       	std	Z+38, r20	; 0x26
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:470
   termNumber = _termNumber;
    d1f4:	31 a7       	std	Z+41, r19	; 0x29
    d1f6:	20 a7       	std	Z+40, r18	; 0x28
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:471
   memset(stagingBuffer, '\0', sizeof(stagingBuffer));
    d1f8:	90 e1       	ldi	r25, 0x10	; 16
    d1fa:	ef 01       	movw	r28, r30
    d1fc:	89 2f       	mov	r24, r25
    d1fe:	19 92       	st	Y+, r1
    d200:	8a 95       	dec	r24
    d202:	e9 f7       	brne	.-6      	; 0xd1fe <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)+0x22>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:472
   memset(buffer, '\0', sizeof(buffer));
    d204:	bf 01       	movw	r22, r30
    d206:	60 5f       	subi	r22, 0xF0	; 240
    d208:	7f 4f       	sbci	r23, 0xFF	; 255
    d20a:	eb 01       	movw	r28, r22
    d20c:	19 92       	st	Y+, r1
    d20e:	9a 95       	dec	r25
    d210:	e9 f7       	brne	.-6      	; 0xd20c <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)+0x30>
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:475

   // Insert this item into the GPS tree
   gps.insertCustom(this, _sentenceName, _termNumber);
    d212:	bf 01       	movw	r22, r30
    d214:	cd 01       	movw	r24, r26
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:476
}
    d216:	df 91       	pop	r29
    d218:	cf 91       	pop	r28
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:475
   termNumber = _termNumber;
   memset(stagingBuffer, '\0', sizeof(stagingBuffer));
   memset(buffer, '\0', sizeof(buffer));

   // Insert this item into the GPS tree
   gps.insertCustom(this, _sentenceName, _termNumber);
    d21a:	0c 94 b3 68 	jmp	0xd166	; 0xd166 <TinyGPSPlus::insertCustom(TinyGPSCustom*, char const*, int)>

0000d21e <TinyGPSCustom::TinyGPSCustom(TinyGPSPlus&, char const*, int)>:
_ZN13TinyGPSCustomC2ER11TinyGPSPlusPKci():
C:\Users\nyvir\Documents\Arduino\libraries\TinyGPSPlus-1.0.2b\src/TinyGPS++.cpp:462
   newval = atol(term);
}

TinyGPSCustom::TinyGPSCustom(TinyGPSPlus &gps, const char *_sentenceName, int _termNumber)
{
   begin(gps, _sentenceName, _termNumber);
    d21e:	0c 94 ee 68 	jmp	0xd1dc	; 0xd1dc <TinyGPSCustom::begin(TinyGPSPlus&, char const*, int)>

0000d222 <DHTNEW::reset()>:
_ZN6DHTNEW5resetEv():
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:85
  reset();
};


void DHTNEW::reset()
{
    d222:	cf 93       	push	r28
    d224:	df 93       	push	r29
    d226:	ec 01       	movw	r28, r24
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:87
  // Data-bus's free status is high voltage level.
  pinMode(_dataPin, OUTPUT);
    d228:	61 e0       	ldi	r22, 0x01	; 1
    d22a:	88 81       	ld	r24, Y
    d22c:	0e 94 2b 6b 	call	0xd656	; 0xd656 <pinMode>
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:88
  digitalWrite(_dataPin, HIGH);
    d230:	61 e0       	ldi	r22, 0x01	; 1
    d232:	88 81       	ld	r24, Y
    d234:	0e 94 67 6b 	call	0xd6ce	; 0xd6ce <digitalWrite>
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:90

  _wakeupDelay   = 0;
    d238:	19 82       	std	Y+1, r1	; 0x01
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:91
  _type          = 0;
    d23a:	1a 82       	std	Y+2, r1	; 0x02
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:92
  _humOffset     = 0.0;
    d23c:	1b 82       	std	Y+3, r1	; 0x03
    d23e:	1c 82       	std	Y+4, r1	; 0x04
    d240:	1d 82       	std	Y+5, r1	; 0x05
    d242:	1e 82       	std	Y+6, r1	; 0x06
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:93
  _tempOffset    = 0.0;
    d244:	1f 82       	std	Y+7, r1	; 0x07
    d246:	18 86       	std	Y+8, r1	; 0x08
    d248:	19 86       	std	Y+9, r1	; 0x09
    d24a:	1a 86       	std	Y+10, r1	; 0x0a
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:94
  _humidity      = 0.0;
    d24c:	1b 86       	std	Y+11, r1	; 0x0b
    d24e:	1c 86       	std	Y+12, r1	; 0x0c
    d250:	1d 86       	std	Y+13, r1	; 0x0d
    d252:	1e 86       	std	Y+14, r1	; 0x0e
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:95
  _temperature   = 0.0;
    d254:	1f 86       	std	Y+15, r1	; 0x0f
    d256:	18 8a       	std	Y+16, r1	; 0x10
    d258:	19 8a       	std	Y+17, r1	; 0x11
    d25a:	1a 8a       	std	Y+18, r1	; 0x12
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:96
  _lastRead      = 0;
    d25c:	1b 8a       	std	Y+19, r1	; 0x13
    d25e:	1c 8a       	std	Y+20, r1	; 0x14
    d260:	1d 8a       	std	Y+21, r1	; 0x15
    d262:	1e 8a       	std	Y+22, r1	; 0x16
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:98
  _disableIRQ    = true;
  _waitForRead   = false;
    d264:	18 8e       	std	Y+24, r1	; 0x18
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:99
  _suppressError = false;
    d266:	19 8e       	std	Y+25, r1	; 0x19
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:100
  _readDelay     = 0;
    d268:	1b 8e       	std	Y+27, r1	; 0x1b
    d26a:	1a 8e       	std	Y+26, r1	; 0x1a
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:102
#if defined(__AVR__)
  _disableIRQ    = false;
    d26c:	1f 8a       	std	Y+23, r1	; 0x17
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:107
#endif
// #if defined(MKR1010)  // TODO find out real define 
  // _disableIRQ    = false;
// #endif
}
    d26e:	df 91       	pop	r29
    d270:	cf 91       	pop	r28
    d272:	08 95       	ret

0000d274 <DHTNEW::DHTNEW(unsigned char)>:
_ZN6DHTNEWC2Eh():
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:77

/////////////////////////////////////////////////////
//
// PUBLIC
//
DHTNEW::DHTNEW(uint8_t pin)
    d274:	fc 01       	movw	r30, r24
    d276:	11 82       	std	Z+1, r1	; 0x01
    d278:	12 82       	std	Z+2, r1	; 0x02
    d27a:	13 82       	std	Z+3, r1	; 0x03
    d27c:	14 82       	std	Z+4, r1	; 0x04
    d27e:	15 82       	std	Z+5, r1	; 0x05
    d280:	16 82       	std	Z+6, r1	; 0x06
    d282:	17 82       	std	Z+7, r1	; 0x07
    d284:	10 86       	std	Z+8, r1	; 0x08
    d286:	11 86       	std	Z+9, r1	; 0x09
    d288:	12 86       	std	Z+10, r1	; 0x0a
    d28a:	13 86       	std	Z+11, r1	; 0x0b
    d28c:	14 86       	std	Z+12, r1	; 0x0c
    d28e:	15 86       	std	Z+13, r1	; 0x0d
    d290:	16 86       	std	Z+14, r1	; 0x0e
    d292:	17 86       	std	Z+15, r1	; 0x0f
    d294:	10 8a       	std	Z+16, r1	; 0x10
    d296:	11 8a       	std	Z+17, r1	; 0x11
    d298:	12 8a       	std	Z+18, r1	; 0x12
    d29a:	13 8a       	std	Z+19, r1	; 0x13
    d29c:	14 8a       	std	Z+20, r1	; 0x14
    d29e:	15 8a       	std	Z+21, r1	; 0x15
    d2a0:	16 8a       	std	Z+22, r1	; 0x16
    d2a2:	81 e0       	ldi	r24, 0x01	; 1
    d2a4:	87 8b       	std	Z+23, r24	; 0x17
    d2a6:	10 8e       	std	Z+24, r1	; 0x18
    d2a8:	11 8e       	std	Z+25, r1	; 0x19
    d2aa:	13 8e       	std	Z+27, r1	; 0x1b
    d2ac:	12 8e       	std	Z+26, r1	; 0x1a
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:79
{
  _dataPin = pin;
    d2ae:	60 83       	st	Z, r22
C:\Users\nyvir\Documents\Arduino\libraries\DHTNEW/dhtnew.cpp:80
  reset();
    d2b0:	cf 01       	movw	r24, r30
    d2b2:	0c 94 11 69 	jmp	0xd222	; 0xd222 <DHTNEW::reset()>

0000d2b6 <nothing>:
nothing():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WInterrupts.c:358
        case 1:
          EIMSK &= ~(1 << INT1);
          break;
        case 2:
          EIMSK &= ~(1 << INT2);
          break; 
    d2b6:	08 95       	ret

0000d2b8 <attachInterrupt>:
attachInterrupt():
    d2b8:	83 30       	cpi	r24, 0x03	; 3
    d2ba:	60 f5       	brcc	.+88     	; 0xd314 <attachInterrupt+0x5c>
    d2bc:	e8 2f       	mov	r30, r24
    d2be:	f0 e0       	ldi	r31, 0x00	; 0
    d2c0:	ee 0f       	add	r30, r30
    d2c2:	ff 1f       	adc	r31, r31
    d2c4:	e9 56       	subi	r30, 0x69	; 105
    d2c6:	fe 4f       	sbci	r31, 0xFE	; 254
    d2c8:	71 83       	std	Z+1, r23	; 0x01
    d2ca:	60 83       	st	Z, r22
    d2cc:	81 30       	cpi	r24, 0x01	; 1
    d2ce:	51 f0       	breq	.+20     	; 0xd2e4 <attachInterrupt+0x2c>
    d2d0:	82 30       	cpi	r24, 0x02	; 2
    d2d2:	a1 f0       	breq	.+40     	; 0xd2fc <attachInterrupt+0x44>
    d2d4:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d2d8:	8c 7f       	andi	r24, 0xFC	; 252
    d2da:	48 2b       	or	r20, r24
    d2dc:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d2e0:	e8 9a       	sbi	0x1d, 0	; 29
    d2e2:	08 95       	ret
    d2e4:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d2e8:	83 7f       	andi	r24, 0xF3	; 243
    d2ea:	44 0f       	add	r20, r20
    d2ec:	55 1f       	adc	r21, r21
    d2ee:	44 0f       	add	r20, r20
    d2f0:	55 1f       	adc	r21, r21
    d2f2:	48 2b       	or	r20, r24
    d2f4:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d2f8:	e9 9a       	sbi	0x1d, 1	; 29
    d2fa:	08 95       	ret
    d2fc:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d300:	8f 7c       	andi	r24, 0xCF	; 207
    d302:	94 e0       	ldi	r25, 0x04	; 4
    d304:	44 0f       	add	r20, r20
    d306:	55 1f       	adc	r21, r21
    d308:	9a 95       	dec	r25
    d30a:	e1 f7       	brne	.-8      	; 0xd304 <attachInterrupt+0x4c>
    d30c:	48 2b       	or	r20, r24
    d30e:	40 93 69 00 	sts	0x0069, r20	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
    d312:	ea 9a       	sbi	0x1d, 2	; 29
    d314:	08 95       	ret

0000d316 <__vector_1>:
__vector_1():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WInterrupts.c:432
// ATmega164A/P, ATmega324A/P/PA/PB, ATmega644/P, ATmega1284/P    
#elif defined(__AVR_ATmega164A__) || defined(__AVR_ATmega164P__) || defined(__AVR_ATmega324A__) \
|| defined(__AVR_ATmega324P__) || defined(__AVR_ATmega324PA__) || defined(__AVR_ATmega324PB__) \
|| defined(__AVR_ATmega644__) || defined(__AVR_ATmega644P__) || defined(__AVR_ATmega1284__) \
|| defined(__AVR_ATmega1284P__)
  IMPLEMENT_ISR(INT0_vect, EXTERNAL_INT_0)
    d316:	1f 92       	push	r1
    d318:	0f 92       	push	r0
    d31a:	0f b6       	in	r0, 0x3f	; 63
    d31c:	0f 92       	push	r0
    d31e:	11 24       	eor	r1, r1
    d320:	0b b6       	in	r0, 0x3b	; 59
    d322:	0f 92       	push	r0
    d324:	2f 93       	push	r18
    d326:	3f 93       	push	r19
    d328:	4f 93       	push	r20
    d32a:	5f 93       	push	r21
    d32c:	6f 93       	push	r22
    d32e:	7f 93       	push	r23
    d330:	8f 93       	push	r24
    d332:	9f 93       	push	r25
    d334:	af 93       	push	r26
    d336:	bf 93       	push	r27
    d338:	ef 93       	push	r30
    d33a:	ff 93       	push	r31
    d33c:	e0 91 97 01 	lds	r30, 0x0197	; 0x800197 <intFunc>
    d340:	f0 91 98 01 	lds	r31, 0x0198	; 0x800198 <intFunc+0x1>
    d344:	09 95       	icall
    d346:	ff 91       	pop	r31
    d348:	ef 91       	pop	r30
    d34a:	bf 91       	pop	r27
    d34c:	af 91       	pop	r26
    d34e:	9f 91       	pop	r25
    d350:	8f 91       	pop	r24
    d352:	7f 91       	pop	r23
    d354:	6f 91       	pop	r22
    d356:	5f 91       	pop	r21
    d358:	4f 91       	pop	r20
    d35a:	3f 91       	pop	r19
    d35c:	2f 91       	pop	r18
    d35e:	0f 90       	pop	r0
    d360:	0b be       	out	0x3b, r0	; 59
    d362:	0f 90       	pop	r0
    d364:	0f be       	out	0x3f, r0	; 63
    d366:	0f 90       	pop	r0
    d368:	1f 90       	pop	r1
    d36a:	18 95       	reti

0000d36c <__vector_2>:
__vector_2():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WInterrupts.c:433
  IMPLEMENT_ISR(INT1_vect, EXTERNAL_INT_1)
    d36c:	1f 92       	push	r1
    d36e:	0f 92       	push	r0
    d370:	0f b6       	in	r0, 0x3f	; 63
    d372:	0f 92       	push	r0
    d374:	11 24       	eor	r1, r1
    d376:	0b b6       	in	r0, 0x3b	; 59
    d378:	0f 92       	push	r0
    d37a:	2f 93       	push	r18
    d37c:	3f 93       	push	r19
    d37e:	4f 93       	push	r20
    d380:	5f 93       	push	r21
    d382:	6f 93       	push	r22
    d384:	7f 93       	push	r23
    d386:	8f 93       	push	r24
    d388:	9f 93       	push	r25
    d38a:	af 93       	push	r26
    d38c:	bf 93       	push	r27
    d38e:	ef 93       	push	r30
    d390:	ff 93       	push	r31
    d392:	e0 91 99 01 	lds	r30, 0x0199	; 0x800199 <intFunc+0x2>
    d396:	f0 91 9a 01 	lds	r31, 0x019A	; 0x80019a <intFunc+0x3>
    d39a:	09 95       	icall
    d39c:	ff 91       	pop	r31
    d39e:	ef 91       	pop	r30
    d3a0:	bf 91       	pop	r27
    d3a2:	af 91       	pop	r26
    d3a4:	9f 91       	pop	r25
    d3a6:	8f 91       	pop	r24
    d3a8:	7f 91       	pop	r23
    d3aa:	6f 91       	pop	r22
    d3ac:	5f 91       	pop	r21
    d3ae:	4f 91       	pop	r20
    d3b0:	3f 91       	pop	r19
    d3b2:	2f 91       	pop	r18
    d3b4:	0f 90       	pop	r0
    d3b6:	0b be       	out	0x3b, r0	; 59
    d3b8:	0f 90       	pop	r0
    d3ba:	0f be       	out	0x3f, r0	; 63
    d3bc:	0f 90       	pop	r0
    d3be:	1f 90       	pop	r1
    d3c0:	18 95       	reti

0000d3c2 <__vector_3>:
__vector_3():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WInterrupts.c:434
  IMPLEMENT_ISR(INT2_vect, EXTERNAL_INT_2)  
    d3c2:	1f 92       	push	r1
    d3c4:	0f 92       	push	r0
    d3c6:	0f b6       	in	r0, 0x3f	; 63
    d3c8:	0f 92       	push	r0
    d3ca:	11 24       	eor	r1, r1
    d3cc:	0b b6       	in	r0, 0x3b	; 59
    d3ce:	0f 92       	push	r0
    d3d0:	2f 93       	push	r18
    d3d2:	3f 93       	push	r19
    d3d4:	4f 93       	push	r20
    d3d6:	5f 93       	push	r21
    d3d8:	6f 93       	push	r22
    d3da:	7f 93       	push	r23
    d3dc:	8f 93       	push	r24
    d3de:	9f 93       	push	r25
    d3e0:	af 93       	push	r26
    d3e2:	bf 93       	push	r27
    d3e4:	ef 93       	push	r30
    d3e6:	ff 93       	push	r31
    d3e8:	e0 91 9b 01 	lds	r30, 0x019B	; 0x80019b <intFunc+0x4>
    d3ec:	f0 91 9c 01 	lds	r31, 0x019C	; 0x80019c <intFunc+0x5>
    d3f0:	09 95       	icall
    d3f2:	ff 91       	pop	r31
    d3f4:	ef 91       	pop	r30
    d3f6:	bf 91       	pop	r27
    d3f8:	af 91       	pop	r26
    d3fa:	9f 91       	pop	r25
    d3fc:	8f 91       	pop	r24
    d3fe:	7f 91       	pop	r23
    d400:	6f 91       	pop	r22
    d402:	5f 91       	pop	r21
    d404:	4f 91       	pop	r20
    d406:	3f 91       	pop	r19
    d408:	2f 91       	pop	r18
    d40a:	0f 90       	pop	r0
    d40c:	0b be       	out	0x3b, r0	; 59
    d40e:	0f 90       	pop	r0
    d410:	0f be       	out	0x3f, r0	; 63
    d412:	0f 90       	pop	r0
    d414:	1f 90       	pop	r1
    d416:	18 95       	reti

0000d418 <yield>:
__empty():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/hooks.c:30
 * Its defined as a weak symbol and it can be redefined to implement a
 * real cooperative scheduler.
 */
static void __empty() {
  // Empty
}
    d418:	08 95       	ret

0000d41a <__vector_18>:
__vector_18():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:939
    "   brne 1b"                     // 2 cycles
    : /* no outputs */
    : "w" (us)
  );
  // return = 4 cycles
}
    d41a:	1f 92       	push	r1
    d41c:	0f 92       	push	r0
    d41e:	0f b6       	in	r0, 0x3f	; 63
    d420:	0f 92       	push	r0
    d422:	11 24       	eor	r1, r1
    d424:	2f 93       	push	r18
    d426:	3f 93       	push	r19
    d428:	8f 93       	push	r24
    d42a:	9f 93       	push	r25
    d42c:	af 93       	push	r26
    d42e:	bf 93       	push	r27
    d430:	80 91 b0 0a 	lds	r24, 0x0AB0	; 0x800ab0 <timer0_millis>
    d434:	90 91 b1 0a 	lds	r25, 0x0AB1	; 0x800ab1 <timer0_millis+0x1>
    d438:	a0 91 b2 0a 	lds	r26, 0x0AB2	; 0x800ab2 <timer0_millis+0x2>
    d43c:	b0 91 b3 0a 	lds	r27, 0x0AB3	; 0x800ab3 <timer0_millis+0x3>
    d440:	30 91 af 0a 	lds	r19, 0x0AAF	; 0x800aaf <timer0_fract>
    d444:	23 e0       	ldi	r18, 0x03	; 3
    d446:	23 0f       	add	r18, r19
    d448:	2d 37       	cpi	r18, 0x7D	; 125
    d44a:	68 f1       	brcs	.+90     	; 0xd4a6 <__vector_18+0x8c>
    d44c:	26 e8       	ldi	r18, 0x86	; 134
    d44e:	23 0f       	add	r18, r19
    d450:	02 96       	adiw	r24, 0x02	; 2
    d452:	a1 1d       	adc	r26, r1
    d454:	b1 1d       	adc	r27, r1
    d456:	20 93 af 0a 	sts	0x0AAF, r18	; 0x800aaf <timer0_fract>
    d45a:	80 93 b0 0a 	sts	0x0AB0, r24	; 0x800ab0 <timer0_millis>
    d45e:	90 93 b1 0a 	sts	0x0AB1, r25	; 0x800ab1 <timer0_millis+0x1>
    d462:	a0 93 b2 0a 	sts	0x0AB2, r26	; 0x800ab2 <timer0_millis+0x2>
    d466:	b0 93 b3 0a 	sts	0x0AB3, r27	; 0x800ab3 <timer0_millis+0x3>
    d46a:	80 91 ab 0a 	lds	r24, 0x0AAB	; 0x800aab <timer0_overflow_count>
    d46e:	90 91 ac 0a 	lds	r25, 0x0AAC	; 0x800aac <timer0_overflow_count+0x1>
    d472:	a0 91 ad 0a 	lds	r26, 0x0AAD	; 0x800aad <timer0_overflow_count+0x2>
    d476:	b0 91 ae 0a 	lds	r27, 0x0AAE	; 0x800aae <timer0_overflow_count+0x3>
    d47a:	01 96       	adiw	r24, 0x01	; 1
    d47c:	a1 1d       	adc	r26, r1
    d47e:	b1 1d       	adc	r27, r1
    d480:	80 93 ab 0a 	sts	0x0AAB, r24	; 0x800aab <timer0_overflow_count>
    d484:	90 93 ac 0a 	sts	0x0AAC, r25	; 0x800aac <timer0_overflow_count+0x1>
    d488:	a0 93 ad 0a 	sts	0x0AAD, r26	; 0x800aad <timer0_overflow_count+0x2>
    d48c:	b0 93 ae 0a 	sts	0x0AAE, r27	; 0x800aae <timer0_overflow_count+0x3>
    d490:	bf 91       	pop	r27
    d492:	af 91       	pop	r26
    d494:	9f 91       	pop	r25
    d496:	8f 91       	pop	r24
    d498:	3f 91       	pop	r19
    d49a:	2f 91       	pop	r18
    d49c:	0f 90       	pop	r0
    d49e:	0f be       	out	0x3f, r0	; 63
    d4a0:	0f 90       	pop	r0
    d4a2:	1f 90       	pop	r1
    d4a4:	18 95       	reti
    d4a6:	01 96       	adiw	r24, 0x01	; 1
    d4a8:	a1 1d       	adc	r26, r1
    d4aa:	b1 1d       	adc	r27, r1
    d4ac:	d4 cf       	rjmp	.-88     	; 0xd456 <__vector_18+0x3c>

0000d4ae <millis>:
millis():
    d4ae:	2f b7       	in	r18, 0x3f	; 63
    d4b0:	f8 94       	cli
    d4b2:	60 91 b0 0a 	lds	r22, 0x0AB0	; 0x800ab0 <timer0_millis>
    d4b6:	70 91 b1 0a 	lds	r23, 0x0AB1	; 0x800ab1 <timer0_millis+0x1>
    d4ba:	80 91 b2 0a 	lds	r24, 0x0AB2	; 0x800ab2 <timer0_millis+0x2>
    d4be:	90 91 b3 0a 	lds	r25, 0x0AB3	; 0x800ab3 <timer0_millis+0x3>
    d4c2:	2f bf       	out	0x3f, r18	; 63
    d4c4:	08 95       	ret

0000d4c6 <micros>:
micros():
    d4c6:	3f b7       	in	r19, 0x3f	; 63
    d4c8:	f8 94       	cli
    d4ca:	80 91 ab 0a 	lds	r24, 0x0AAB	; 0x800aab <timer0_overflow_count>
    d4ce:	90 91 ac 0a 	lds	r25, 0x0AAC	; 0x800aac <timer0_overflow_count+0x1>
    d4d2:	a0 91 ad 0a 	lds	r26, 0x0AAD	; 0x800aad <timer0_overflow_count+0x2>
    d4d6:	b0 91 ae 0a 	lds	r27, 0x0AAE	; 0x800aae <timer0_overflow_count+0x3>
    d4da:	26 b5       	in	r18, 0x26	; 38
    d4dc:	a8 9b       	sbis	0x15, 0	; 21
    d4de:	05 c0       	rjmp	.+10     	; 0xd4ea <micros+0x24>
    d4e0:	2f 3f       	cpi	r18, 0xFF	; 255
    d4e2:	19 f0       	breq	.+6      	; 0xd4ea <micros+0x24>
    d4e4:	01 96       	adiw	r24, 0x01	; 1
    d4e6:	a1 1d       	adc	r26, r1
    d4e8:	b1 1d       	adc	r27, r1
    d4ea:	3f bf       	out	0x3f, r19	; 63
    d4ec:	ba 2f       	mov	r27, r26
    d4ee:	a9 2f       	mov	r26, r25
    d4f0:	98 2f       	mov	r25, r24
    d4f2:	88 27       	eor	r24, r24
    d4f4:	bc 01       	movw	r22, r24
    d4f6:	cd 01       	movw	r24, r26
    d4f8:	62 0f       	add	r22, r18
    d4fa:	71 1d       	adc	r23, r1
    d4fc:	81 1d       	adc	r24, r1
    d4fe:	91 1d       	adc	r25, r1
    d500:	42 e0       	ldi	r20, 0x02	; 2
    d502:	66 0f       	add	r22, r22
    d504:	77 1f       	adc	r23, r23
    d506:	88 1f       	adc	r24, r24
    d508:	99 1f       	adc	r25, r25
    d50a:	4a 95       	dec	r20
    d50c:	d1 f7       	brne	.-12     	; 0xd502 <micros+0x3c>
    d50e:	08 95       	ret

0000d510 <delay>:
delay():
    d510:	8f 92       	push	r8
    d512:	9f 92       	push	r9
    d514:	af 92       	push	r10
    d516:	bf 92       	push	r11
    d518:	cf 92       	push	r12
    d51a:	df 92       	push	r13
    d51c:	ef 92       	push	r14
    d51e:	ff 92       	push	r15
    d520:	6b 01       	movw	r12, r22
    d522:	7c 01       	movw	r14, r24
    d524:	0e 94 63 6a 	call	0xd4c6	; 0xd4c6 <micros>
    d528:	4b 01       	movw	r8, r22
    d52a:	5c 01       	movw	r10, r24
    d52c:	c1 14       	cp	r12, r1
    d52e:	d1 04       	cpc	r13, r1
    d530:	e1 04       	cpc	r14, r1
    d532:	f1 04       	cpc	r15, r1
    d534:	e9 f0       	breq	.+58     	; 0xd570 <delay+0x60>
    d536:	0e 94 0c 6a 	call	0xd418	; 0xd418 <yield>
    d53a:	0e 94 63 6a 	call	0xd4c6	; 0xd4c6 <micros>
    d53e:	68 19       	sub	r22, r8
    d540:	79 09       	sbc	r23, r9
    d542:	8a 09       	sbc	r24, r10
    d544:	9b 09       	sbc	r25, r11
    d546:	68 3e       	cpi	r22, 0xE8	; 232
    d548:	73 40       	sbci	r23, 0x03	; 3
    d54a:	81 05       	cpc	r24, r1
    d54c:	91 05       	cpc	r25, r1
    d54e:	70 f3       	brcs	.-36     	; 0xd52c <delay+0x1c>
    d550:	21 e0       	ldi	r18, 0x01	; 1
    d552:	c2 1a       	sub	r12, r18
    d554:	d1 08       	sbc	r13, r1
    d556:	e1 08       	sbc	r14, r1
    d558:	f1 08       	sbc	r15, r1
    d55a:	88 ee       	ldi	r24, 0xE8	; 232
    d55c:	88 0e       	add	r8, r24
    d55e:	83 e0       	ldi	r24, 0x03	; 3
    d560:	98 1e       	adc	r9, r24
    d562:	a1 1c       	adc	r10, r1
    d564:	b1 1c       	adc	r11, r1
    d566:	c1 14       	cp	r12, r1
    d568:	d1 04       	cpc	r13, r1
    d56a:	e1 04       	cpc	r14, r1
    d56c:	f1 04       	cpc	r15, r1
    d56e:	29 f7       	brne	.-54     	; 0xd53a <delay+0x2a>
    d570:	ff 90       	pop	r15
    d572:	ef 90       	pop	r14
    d574:	df 90       	pop	r13
    d576:	cf 90       	pop	r12
    d578:	bf 90       	pop	r11
    d57a:	af 90       	pop	r10
    d57c:	9f 90       	pop	r9
    d57e:	8f 90       	pop	r8
    d580:	08 95       	ret

0000d582 <init>:
init():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:945

void init()
{
  // this needs to be called before setup() or some functions won't
  // work there
  sei();
    d582:	78 94       	sei
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:957

  // On the ATmega168, timer 0 is also used for fast hardware pwm
  // (using phase-correct PWM would mean that timer 0 overflowed half as often
  // resulting in different millis() behavior on the ATmega8 and ATmega168)
#if defined(TCCR0A) && defined(WGM01)
  TCCR0A |= _BV(WGM01) | _BV(WGM00);
    d584:	84 b5       	in	r24, 0x24	; 36
    d586:	83 60       	ori	r24, 0x03	; 3
    d588:	84 bd       	out	0x24, r24	; 36
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:972
  #if defined(WGM00) && defined(WGM01) // The ATmega8 doesn't have WGM00 and WGM01
    TCCR0 |= _BV(WGM01) | _BV(WGM00);
  #endif
#elif defined(TCCR0B) && defined(CS01) && defined(CS00)
  // This combination is for the standard 168/328/640/1280/1281/2560/2561
  TCCR0B |= _BV(CS01) | _BV(CS00);
    d58a:	85 b5       	in	r24, 0x25	; 37
    d58c:	83 60       	ori	r24, 0x03	; 3
    d58e:	85 bd       	out	0x25, r24	; 37
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:984

// Enable timer 0 overflow interrupt
#if defined(TIMSK) && defined(TOIE0)
  TIMSK |= _BV(TOIE0);
#elif defined(TIMSK0) && defined(TOIE0)
  TIMSK0 |= _BV(TOIE0);
    d590:	ee e6       	ldi	r30, 0x6E	; 110
    d592:	f0 e0       	ldi	r31, 0x00	; 0
    d594:	80 81       	ld	r24, Z
    d596:	81 60       	ori	r24, 0x01	; 1
    d598:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:995
// this is better for motors as it ensures an even waveform
// note, however, that fast pwm mode can achieve a frequency of up
// 8 MHz (with a 16 MHz clock) at 50% duty cycle

#if defined(TCCR1B) && defined(CS11) && defined(CS10)
  TCCR1B = _BV(CS11); // Set timer 1 prescale factor to 64
    d59a:	e1 e8       	ldi	r30, 0x81	; 129
    d59c:	f0 e0       	ldi	r31, 0x00	; 0
    d59e:	82 e0       	ldi	r24, 0x02	; 2
    d5a0:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:997
#if F_CPU >= 8000000L
  TCCR1B |= _BV(CS10);
    d5a2:	80 81       	ld	r24, Z
    d5a4:	81 60       	ori	r24, 0x01	; 1
    d5a6:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1006
#if F_CPU >= 8000000L
  TCCR1 |= _BV(CS10);
#endif
#endif
#if defined(TCCR1A) && defined(WGM10)
  TCCR1A |= _BV(WGM10); // Put timer 1 in 8-bit phase correct pwm mode
    d5a8:	e0 e8       	ldi	r30, 0x80	; 128
    d5aa:	f0 e0       	ldi	r31, 0x00	; 0
    d5ac:	80 81       	ld	r24, Z
    d5ae:	81 60       	ori	r24, 0x01	; 1
    d5b0:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1013

// Set timer 2 prescale factor to 64
#if defined(TCCR2) && defined(CS22)
  TCCR2 |= _BV(CS22);
#elif defined(TCCR2B) && defined(CS22)
  TCCR2B |= _BV(CS22);
    d5b2:	e1 eb       	ldi	r30, 0xB1	; 177
    d5b4:	f0 e0       	ldi	r31, 0x00	; 0
    d5b6:	80 81       	ld	r24, Z
    d5b8:	84 60       	ori	r24, 0x04	; 4
    d5ba:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1022

// Configure timer 2 for phase correct pwm (8-bit)
#if defined(TCCR2) && defined(WGM20)
  TCCR2 |= _BV(WGM20);
#elif defined(TCCR2A) && defined(WGM20)
  TCCR2A |= _BV(WGM20);
    d5bc:	e0 eb       	ldi	r30, 0xB0	; 176
    d5be:	f0 e0       	ldi	r31, 0x00	; 0
    d5c0:	80 81       	ld	r24, Z
    d5c2:	81 60       	ori	r24, 0x01	; 1
    d5c4:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1028
//#else
  // Timer 2 not finished (may not be present on this CPU)
#endif

#if defined(TCCR3B) && defined(CS31) && defined(WGM30)
  TCCR3B |= _BV(CS31) | _BV(CS30); // Set timer 3 prescale factor to 64
    d5c6:	e1 e9       	ldi	r30, 0x91	; 145
    d5c8:	f0 e0       	ldi	r31, 0x00	; 0
    d5ca:	80 81       	ld	r24, Z
    d5cc:	83 60       	ori	r24, 0x03	; 3
    d5ce:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1029
  TCCR3A |= _BV(WGM30);            // Put timer 3 in 8-bit phase correct pwm mode
    d5d0:	e0 e9       	ldi	r30, 0x90	; 144
    d5d2:	f0 e0       	ldi	r31, 0x00	; 0
    d5d4:	80 81       	ld	r24, Z
    d5d6:	81 60       	ori	r24, 0x01	; 1
    d5d8:	80 83       	st	Z, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1050
#endif

#if defined(ADCSRA)
  // set a2d prescaler so we are inside the desired 50-200 KHz range.
  #if F_CPU >= 16000000 // 16 MHz / 128 = 125 KHz
    ADCSRA = _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0) | _BV(ADEN);
    d5da:	87 e8       	ldi	r24, 0x87	; 135
    d5dc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1070
  // here so they can be used as normal digital i/o; they will be
  // reconnected in Serial.begin()
#if defined(UCSRB)
  UCSRB = 0;
#elif defined(UCSR0B)
  UCSR0B = 0;
    d5e0:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring.c:1072
#endif
}
    d5e4:	08 95       	ret

0000d5e6 <turnOffPWM>:
turnOffPWM():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:77
//
//static inline void turnOffPWM(uint8_t timer) __attribute__ ((always_inline));
//static inline void turnOffPWM(uint8_t timer)
static void turnOffPWM(uint8_t timer)
{
  switch (timer)
    d5e6:	82 50       	subi	r24, 0x02	; 2
    d5e8:	8a 30       	cpi	r24, 0x0A	; 10
    d5ea:	88 f5       	brcc	.+98     	; 0xd64e <turnOffPWM+0x68>
    d5ec:	e8 2f       	mov	r30, r24
    d5ee:	f0 e0       	ldi	r31, 0x00	; 0
    d5f0:	e4 50       	subi	r30, 0x04	; 4
    d5f2:	f5 49       	sbci	r31, 0x95	; 149
    d5f4:	0c 94 ea 72 	jmp	0xe5d4	; 0xe5d4 <__tablejump2__>
    d5f8:	24 6b       	ori	r18, 0xB4	; 180
    d5fa:	28 6b       	ori	r18, 0xB8	; 184
    d5fc:	06 6b       	ori	r16, 0xB6	; 182
    d5fe:	0c 6b       	ori	r16, 0xBC	; 188
    d600:	27 6b       	ori	r18, 0xB7	; 183
    d602:	27 6b       	ori	r18, 0xB7	; 183
    d604:	10 6b       	ori	r17, 0xB0	; 176
    d606:	16 6b       	ori	r17, 0xB6	; 182
    d608:	1a 6b       	ori	r17, 0xBA	; 186
    d60a:	20 6b       	ori	r18, 0xB0	; 176
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:82
  {
    // Timer1
    #if defined(TCCR1A) && defined(COM1A1)
      case TIMER1A:
        TCCR1A &= ~_BV(COM1A1);
    d60c:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    d610:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:87
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
    d612:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:88
        break;
    d616:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:87
        TCCR1A &= ~_BV(COM1A1);
        break;
    #endif
    #if defined(TCCR1A) && defined(COM1B1)
      case TIMER1B:
        TCCR1A &= ~_BV(COM1B1);
    d618:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    d61c:	8f 7d       	andi	r24, 0xDF	; 223
    d61e:	f9 cf       	rjmp	.-14     	; 0xd612 <turnOffPWM+0x2c>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:104
        TCCR2 &= ~_BV(COM21);
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2A1)
      case TIMER2A:
        TCCR2A &= ~_BV(COM2A1);
    d620:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    d624:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:109
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2B1)
      case TIMER2B:
        TCCR2A &= ~_BV(COM2B1);
    d626:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:110
        break;
    d62a:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:109
        TCCR2A &= ~_BV(COM2A1);
        break;
    #endif
    #if defined(TCCR2A) && defined(COM2B1)
      case TIMER2B:
        TCCR2A &= ~_BV(COM2B1);
    d62c:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    d630:	8f 7d       	andi	r24, 0xDF	; 223
    d632:	f9 cf       	rjmp	.-14     	; 0xd626 <turnOffPWM+0x40>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:116
    #endif

    // Timer3
    #if defined(TCCR3A) && defined(COM3A1)
      case TIMER3A:
        TCCR3A &= ~_BV(COM3A1);
    d634:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    d638:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:121
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3B1)
      case TIMER3B:
        TCCR3A &= ~_BV(COM3B1);
    d63a:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:122
        break;
    d63e:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:121
        TCCR3A &= ~_BV(COM3A1);
        break;
    #endif
    #if defined(TCCR3A) && defined(COM3B1)
      case TIMER3B:
        TCCR3A &= ~_BV(COM3B1);
    d640:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
    d644:	8f 7d       	andi	r24, 0xDF	; 223
    d646:	f9 cf       	rjmp	.-14     	; 0xd63a <turnOffPWM+0x54>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:176
        TCCR0 &= ~_BV(COM01);
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0A1)
      case TIMER0A:
        TCCR0A &= ~_BV(COM0A1);
    d648:	84 b5       	in	r24, 0x24	; 36
    d64a:	8f 77       	andi	r24, 0x7F	; 127
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:181
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0B1)
      case TIMER0B:
        TCCR0A &= ~_BV(COM0B1);
    d64c:	84 bd       	out	0x24, r24	; 36
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:185
        break;
    #endif
  }
}
    d64e:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:181
        TCCR0A &= ~_BV(COM0A1);
        break;
    #endif
    #if defined(TCCR0A) && defined(COM0B1)
      case TIMER0B:
        TCCR0A &= ~_BV(COM0B1);
    d650:	84 b5       	in	r24, 0x24	; 36
    d652:	8f 7d       	andi	r24, 0xDF	; 223
    d654:	fb cf       	rjmp	.-10     	; 0xd64c <turnOffPWM+0x66>

0000d656 <pinMode>:
pinMode():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:30
#define ARDUINO_MAIN
#include "wiring_private.h"
#include "pins_arduino.h"

void pinMode(uint8_t pin, uint8_t mode)
{
    d656:	cf 93       	push	r28
    d658:	df 93       	push	r29
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:31
  uint8_t bit = digitalPinToBitMask(pin);
    d65a:	90 e0       	ldi	r25, 0x00	; 0
    d65c:	fc 01       	movw	r30, r24
    d65e:	e0 59       	subi	r30, 0x90	; 144
    d660:	ff 4d       	sbci	r31, 0xDF	; 223
    d662:	24 91       	lpm	r18, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:32
  uint8_t port = digitalPinToPort(pin);
    d664:	80 57       	subi	r24, 0x70	; 112
    d666:	9f 4d       	sbci	r25, 0xDF	; 223
    d668:	fc 01       	movw	r30, r24
    d66a:	84 91       	lpm	r24, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:35
  volatile uint8_t *reg, *out;

  if (port == NOT_A_PIN) return;
    d66c:	88 23       	and	r24, r24
    d66e:	c9 f0       	breq	.+50     	; 0xd6a2 <pinMode+0x4c>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:38

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
    d670:	90 e0       	ldi	r25, 0x00	; 0
    d672:	88 0f       	add	r24, r24
    d674:	99 1f       	adc	r25, r25
    d676:	fc 01       	movw	r30, r24
    d678:	ec 53       	subi	r30, 0x3C	; 60
    d67a:	ff 4d       	sbci	r31, 0xDF	; 223
    d67c:	a5 91       	lpm	r26, Z+
    d67e:	b4 91       	lpm	r27, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:39
  out = portOutputRegister(port);
    d680:	fc 01       	movw	r30, r24
    d682:	e6 54       	subi	r30, 0x46	; 70
    d684:	ff 4d       	sbci	r31, 0xDF	; 223
    d686:	c5 91       	lpm	r28, Z+
    d688:	d4 91       	lpm	r29, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:41

  if (mode == INPUT) { 
    d68a:	61 11       	cpse	r22, r1
    d68c:	0d c0       	rjmp	.+26     	; 0xd6a8 <pinMode+0x52>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:42
    uint8_t oldSREG = SREG;
    d68e:	9f b7       	in	r25, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:43
    cli();
    d690:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:44
    *reg &= ~bit;
    d692:	8c 91       	ld	r24, X
    d694:	20 95       	com	r18
    d696:	82 23       	and	r24, r18
    d698:	8c 93       	st	X, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:45
    *out &= ~bit;
    d69a:	88 81       	ld	r24, Y
    d69c:	28 23       	and	r18, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:51
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out |= bit;
    d69e:	28 83       	st	Y, r18
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:52
    SREG = oldSREG;
    d6a0:	9f bf       	out	0x3f, r25	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:59
    uint8_t oldSREG = SREG;
    cli();
    *reg |= bit;
    SREG = oldSREG;
  }
}
    d6a2:	df 91       	pop	r29
    d6a4:	cf 91       	pop	r28
    d6a6:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:47
    uint8_t oldSREG = SREG;
    cli();
    *reg &= ~bit;
    *out &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
    d6a8:	62 30       	cpi	r22, 0x02	; 2
    d6aa:	51 f4       	brne	.+20     	; 0xd6c0 <pinMode+0x6a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:48
    uint8_t oldSREG = SREG;
    d6ac:	9f b7       	in	r25, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:49
    cli();
    d6ae:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:50
    *reg &= ~bit;
    d6b0:	3c 91       	ld	r19, X
    d6b2:	82 2f       	mov	r24, r18
    d6b4:	80 95       	com	r24
    d6b6:	83 23       	and	r24, r19
    d6b8:	8c 93       	st	X, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:51
    *out |= bit;
    d6ba:	e8 81       	ld	r30, Y
    d6bc:	2e 2b       	or	r18, r30
    d6be:	ef cf       	rjmp	.-34     	; 0xd69e <pinMode+0x48>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:54
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
    d6c0:	8f b7       	in	r24, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:55
    cli();
    d6c2:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:56
    *reg |= bit;
    d6c4:	ec 91       	ld	r30, X
    d6c6:	2e 2b       	or	r18, r30
    d6c8:	2c 93       	st	X, r18
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:57
    SREG = oldSREG;
    d6ca:	8f bf       	out	0x3f, r24	; 63
    d6cc:	ea cf       	rjmp	.-44     	; 0xd6a2 <pinMode+0x4c>

0000d6ce <digitalWrite>:
digitalWrite():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:188
    #endif
  }
}

void digitalWrite(uint8_t pin, uint8_t val)
{
    d6ce:	1f 93       	push	r17
    d6d0:	cf 93       	push	r28
    d6d2:	df 93       	push	r29
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:189
  uint8_t timer = digitalPinToTimer(pin);
    d6d4:	28 2f       	mov	r18, r24
    d6d6:	30 e0       	ldi	r19, 0x00	; 0
    d6d8:	f9 01       	movw	r30, r18
    d6da:	e0 5b       	subi	r30, 0xB0	; 176
    d6dc:	ff 4d       	sbci	r31, 0xDF	; 223
    d6de:	84 91       	lpm	r24, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:190
  uint8_t bit = digitalPinToBitMask(pin);
    d6e0:	f9 01       	movw	r30, r18
    d6e2:	e0 59       	subi	r30, 0x90	; 144
    d6e4:	ff 4d       	sbci	r31, 0xDF	; 223
    d6e6:	d4 91       	lpm	r29, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:191
  uint8_t port = digitalPinToPort(pin);
    d6e8:	f9 01       	movw	r30, r18
    d6ea:	e0 57       	subi	r30, 0x70	; 112
    d6ec:	ff 4d       	sbci	r31, 0xDF	; 223
    d6ee:	c4 91       	lpm	r28, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:194
  volatile uint8_t *out;

  if (port == NOT_A_PIN) return;
    d6f0:	cc 23       	and	r28, r28
    d6f2:	a9 f0       	breq	.+42     	; 0xd71e <digitalWrite+0x50>
    d6f4:	16 2f       	mov	r17, r22
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:198

  // If the pin that support PWM output, we need to turn it off
  // before doing a digital write.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    d6f6:	81 11       	cpse	r24, r1
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:198 (discriminator 1)
    d6f8:	0e 94 f3 6a 	call	0xd5e6	; 0xd5e6 <turnOffPWM>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:200

  out = portOutputRegister(port);
    d6fc:	ec 2f       	mov	r30, r28
    d6fe:	f0 e0       	ldi	r31, 0x00	; 0
    d700:	ee 0f       	add	r30, r30
    d702:	ff 1f       	adc	r31, r31
    d704:	e6 54       	subi	r30, 0x46	; 70
    d706:	ff 4d       	sbci	r31, 0xDF	; 223
    d708:	a5 91       	lpm	r26, Z+
    d70a:	b4 91       	lpm	r27, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:202

  uint8_t oldSREG = SREG;
    d70c:	8f b7       	in	r24, 0x3f	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:203
  cli();
    d70e:	f8 94       	cli
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:206

  if (val == LOW) {
    *out &= ~bit;
    d710:	ec 91       	ld	r30, X
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:205
  out = portOutputRegister(port);

  uint8_t oldSREG = SREG;
  cli();

  if (val == LOW) {
    d712:	11 11       	cpse	r17, r1
    d714:	08 c0       	rjmp	.+16     	; 0xd726 <digitalWrite+0x58>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:206
    *out &= ~bit;
    d716:	d0 95       	com	r29
    d718:	de 23       	and	r29, r30
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:208
  } else {
    *out |= bit;
    d71a:	dc 93       	st	X, r29
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:211
  }

  SREG = oldSREG;
    d71c:	8f bf       	out	0x3f, r24	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:212
}
    d71e:	df 91       	pop	r29
    d720:	cf 91       	pop	r28
    d722:	1f 91       	pop	r17
    d724:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:208
  cli();

  if (val == LOW) {
    *out &= ~bit;
  } else {
    *out |= bit;
    d726:	de 2b       	or	r29, r30
    d728:	f8 cf       	rjmp	.-16     	; 0xd71a <digitalWrite+0x4c>

0000d72a <digitalRead>:
digitalRead():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:215

  SREG = oldSREG;
}

int digitalRead(uint8_t pin)
{
    d72a:	cf 93       	push	r28
    d72c:	df 93       	push	r29
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:216
  uint8_t timer = digitalPinToTimer(pin);
    d72e:	28 2f       	mov	r18, r24
    d730:	30 e0       	ldi	r19, 0x00	; 0
    d732:	f9 01       	movw	r30, r18
    d734:	e0 5b       	subi	r30, 0xB0	; 176
    d736:	ff 4d       	sbci	r31, 0xDF	; 223
    d738:	84 91       	lpm	r24, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:217
  uint8_t bit = digitalPinToBitMask(pin);
    d73a:	f9 01       	movw	r30, r18
    d73c:	e0 59       	subi	r30, 0x90	; 144
    d73e:	ff 4d       	sbci	r31, 0xDF	; 223
    d740:	d4 91       	lpm	r29, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:218
  uint8_t port = digitalPinToPort(pin);
    d742:	f9 01       	movw	r30, r18
    d744:	e0 57       	subi	r30, 0x70	; 112
    d746:	ff 4d       	sbci	r31, 0xDF	; 223
    d748:	c4 91       	lpm	r28, Z
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:220

  if (port == NOT_A_PIN) return LOW;
    d74a:	cc 23       	and	r28, r28
    d74c:	a1 f0       	breq	.+40     	; 0xd776 <digitalRead+0x4c>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:224

  // If the pin that support PWM output, we need to turn it off
  // before getting a digital reading.
  if (timer != NOT_ON_TIMER) turnOffPWM(timer);
    d74e:	81 11       	cpse	r24, r1
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:224 (discriminator 1)
    d750:	0e 94 f3 6a 	call	0xd5e6	; 0xd5e6 <turnOffPWM>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:226

  if (*portInputRegister(port) & bit) return HIGH;
    d754:	ec 2f       	mov	r30, r28
    d756:	f0 e0       	ldi	r31, 0x00	; 0
    d758:	ee 0f       	add	r30, r30
    d75a:	ff 1f       	adc	r31, r31
    d75c:	e0 55       	subi	r30, 0x50	; 80
    d75e:	ff 4d       	sbci	r31, 0xDF	; 223
    d760:	a5 91       	lpm	r26, Z+
    d762:	b4 91       	lpm	r27, Z
    d764:	ec 91       	ld	r30, X
    d766:	ed 23       	and	r30, r29
    d768:	81 e0       	ldi	r24, 0x01	; 1
    d76a:	90 e0       	ldi	r25, 0x00	; 0
    d76c:	09 f4       	brne	.+2      	; 0xd770 <digitalRead+0x46>
    d76e:	80 e0       	ldi	r24, 0x00	; 0
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:228
  return LOW;
}
    d770:	df 91       	pop	r29
    d772:	cf 91       	pop	r28
    d774:	08 95       	ret
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/wiring_digital.c:220
{
  uint8_t timer = digitalPinToTimer(pin);
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);

  if (port == NOT_A_PIN) return LOW;
    d776:	80 e0       	ldi	r24, 0x00	; 0
    d778:	90 e0       	ldi	r25, 0x00	; 0
    d77a:	fa cf       	rjmp	.-12     	; 0xd770 <digitalRead+0x46>

0000d77c <Print::write(unsigned char const*, unsigned int)>:
_ZN5Print5writeEPKhj():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:185
size_t Print::println(unsigned long num, int base)
{
  size_t n = print(num, base);
  n += println();
  return n;
}
    d77c:	af 92       	push	r10
    d77e:	bf 92       	push	r11
    d780:	cf 92       	push	r12
    d782:	df 92       	push	r13
    d784:	ef 92       	push	r14
    d786:	ff 92       	push	r15
    d788:	0f 93       	push	r16
    d78a:	1f 93       	push	r17
    d78c:	cf 93       	push	r28
    d78e:	df 93       	push	r29
    d790:	6c 01       	movw	r12, r24
    d792:	7b 01       	movw	r14, r22
    d794:	8b 01       	movw	r16, r22
    d796:	04 0f       	add	r16, r20
    d798:	15 1f       	adc	r17, r21
    d79a:	eb 01       	movw	r28, r22
    d79c:	5e 01       	movw	r10, r28
    d79e:	ae 18       	sub	r10, r14
    d7a0:	bf 08       	sbc	r11, r15
    d7a2:	c0 17       	cp	r28, r16
    d7a4:	d1 07       	cpc	r29, r17
    d7a6:	59 f0       	breq	.+22     	; 0xd7be <Print::write(unsigned char const*, unsigned int)+0x42>
    d7a8:	69 91       	ld	r22, Y+
    d7aa:	d6 01       	movw	r26, r12
    d7ac:	ed 91       	ld	r30, X+
    d7ae:	fc 91       	ld	r31, X
    d7b0:	01 90       	ld	r0, Z+
    d7b2:	f0 81       	ld	r31, Z
    d7b4:	e0 2d       	mov	r30, r0
    d7b6:	c6 01       	movw	r24, r12
    d7b8:	09 95       	icall
    d7ba:	89 2b       	or	r24, r25
    d7bc:	79 f7       	brne	.-34     	; 0xd79c <Print::write(unsigned char const*, unsigned int)+0x20>
    d7be:	c5 01       	movw	r24, r10
    d7c0:	df 91       	pop	r29
    d7c2:	cf 91       	pop	r28
    d7c4:	1f 91       	pop	r17
    d7c6:	0f 91       	pop	r16
    d7c8:	ff 90       	pop	r15
    d7ca:	ef 90       	pop	r14
    d7cc:	df 90       	pop	r13
    d7ce:	cf 90       	pop	r12
    d7d0:	bf 90       	pop	r11
    d7d2:	af 90       	pop	r10
    d7d4:	08 95       	ret

0000d7d6 <Print::write(char const*) [clone .part.2]>:
_ZN5Print5writeEPKc():
    d7d6:	fb 01       	movw	r30, r22
    d7d8:	01 90       	ld	r0, Z+
    d7da:	00 20       	and	r0, r0
    d7dc:	e9 f7       	brne	.-6      	; 0xd7d8 <Print::write(char const*) [clone .part.2]+0x2>
    d7de:	31 97       	sbiw	r30, 0x01	; 1
    d7e0:	af 01       	movw	r20, r30
    d7e2:	46 1b       	sub	r20, r22
    d7e4:	57 0b       	sbc	r21, r23
    d7e6:	dc 01       	movw	r26, r24
    d7e8:	ed 91       	ld	r30, X+
    d7ea:	fc 91       	ld	r31, X
    d7ec:	02 80       	ldd	r0, Z+2	; 0x02
    d7ee:	f3 81       	ldd	r31, Z+3	; 0x03
    d7f0:	e0 2d       	mov	r30, r0
    d7f2:	09 94       	ijmp

0000d7f4 <Print::print(__FlashStringHelper const*)>:
_ZN5Print5printEPK19__FlashStringHelper():
    d7f4:	ef 92       	push	r14
    d7f6:	ff 92       	push	r15
    d7f8:	0f 93       	push	r16
    d7fa:	1f 93       	push	r17
    d7fc:	cf 93       	push	r28
    d7fe:	df 93       	push	r29
    d800:	8c 01       	movw	r16, r24
    d802:	7b 01       	movw	r14, r22
    d804:	d0 e0       	ldi	r29, 0x00	; 0
    d806:	c0 e0       	ldi	r28, 0x00	; 0
    d808:	f7 01       	movw	r30, r14
    d80a:	ec 0f       	add	r30, r28
    d80c:	fd 1f       	adc	r31, r29
    d80e:	64 91       	lpm	r22, Z
    d810:	66 23       	and	r22, r22
    d812:	61 f0       	breq	.+24     	; 0xd82c <Print::print(__FlashStringHelper const*)+0x38>
    d814:	d8 01       	movw	r26, r16
    d816:	ed 91       	ld	r30, X+
    d818:	fc 91       	ld	r31, X
    d81a:	01 90       	ld	r0, Z+
    d81c:	f0 81       	ld	r31, Z
    d81e:	e0 2d       	mov	r30, r0
    d820:	c8 01       	movw	r24, r16
    d822:	09 95       	icall
    d824:	89 2b       	or	r24, r25
    d826:	11 f0       	breq	.+4      	; 0xd82c <Print::print(__FlashStringHelper const*)+0x38>
    d828:	21 96       	adiw	r28, 0x01	; 1
    d82a:	ee cf       	rjmp	.-36     	; 0xd808 <Print::print(__FlashStringHelper const*)+0x14>
    d82c:	ce 01       	movw	r24, r28
    d82e:	df 91       	pop	r29
    d830:	cf 91       	pop	r28
    d832:	1f 91       	pop	r17
    d834:	0f 91       	pop	r16
    d836:	ff 90       	pop	r15
    d838:	ef 90       	pop	r14
    d83a:	08 95       	ret

0000d83c <Print::print(char const*)>:
_ZN5Print5writeEPKc():
    d83c:	61 15       	cp	r22, r1
    d83e:	71 05       	cpc	r23, r1
    d840:	11 f0       	breq	.+4      	; 0xd846 <Print::print(char const*)+0xa>
    d842:	0c 94 eb 6b 	jmp	0xd7d6	; 0xd7d6 <Print::write(char const*) [clone .part.2]>
_ZN5Print5printEPKc():
    d846:	90 e0       	ldi	r25, 0x00	; 0
    d848:	80 e0       	ldi	r24, 0x00	; 0
    d84a:	08 95       	ret

0000d84c <Print::print(char)>:
_ZN5Print5printEc():
    d84c:	dc 01       	movw	r26, r24
    d84e:	ed 91       	ld	r30, X+
    d850:	fc 91       	ld	r31, X
    d852:	01 90       	ld	r0, Z+
    d854:	f0 81       	ld	r31, Z
    d856:	e0 2d       	mov	r30, r0
    d858:	09 94       	ijmp

0000d85a <Print::printNumber(unsigned long, unsigned char)>:
_ZN5Print11printNumberEmh():
    d85a:	8f 92       	push	r8
    d85c:	9f 92       	push	r9
    d85e:	af 92       	push	r10
    d860:	bf 92       	push	r11
    d862:	ef 92       	push	r14
    d864:	ff 92       	push	r15
    d866:	0f 93       	push	r16
    d868:	1f 93       	push	r17
    d86a:	cf 93       	push	r28
    d86c:	df 93       	push	r29
    d86e:	cd b7       	in	r28, 0x3d	; 61
    d870:	de b7       	in	r29, 0x3e	; 62
    d872:	a1 97       	sbiw	r28, 0x21	; 33
    d874:	0f b6       	in	r0, 0x3f	; 63
    d876:	f8 94       	cli
    d878:	de bf       	out	0x3e, r29	; 62
    d87a:	0f be       	out	0x3f, r0	; 63
    d87c:	cd bf       	out	0x3d, r28	; 61
    d87e:	7c 01       	movw	r14, r24
    d880:	fa 01       	movw	r30, r20
    d882:	cb 01       	movw	r24, r22
    d884:	19 a2       	std	Y+33, r1	; 0x21
    d886:	22 30       	cpi	r18, 0x02	; 2
    d888:	08 f4       	brcc	.+2      	; 0xd88c <Print::printNumber(unsigned long, unsigned char)+0x32>
    d88a:	2a e0       	ldi	r18, 0x0A	; 10
    d88c:	8e 01       	movw	r16, r28
    d88e:	0f 5d       	subi	r16, 0xDF	; 223
    d890:	1f 4f       	sbci	r17, 0xFF	; 255
    d892:	82 2e       	mov	r8, r18
    d894:	91 2c       	mov	r9, r1
    d896:	b1 2c       	mov	r11, r1
    d898:	a1 2c       	mov	r10, r1
    d89a:	bf 01       	movw	r22, r30
    d89c:	a5 01       	movw	r20, r10
    d89e:	94 01       	movw	r18, r8
    d8a0:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
    d8a4:	f9 01       	movw	r30, r18
    d8a6:	ca 01       	movw	r24, r20
    d8a8:	6a 30       	cpi	r22, 0x0A	; 10
    d8aa:	0c f5       	brge	.+66     	; 0xd8ee <Print::printNumber(unsigned long, unsigned char)+0x94>
    d8ac:	60 5d       	subi	r22, 0xD0	; 208
    d8ae:	d8 01       	movw	r26, r16
    d8b0:	6e 93       	st	-X, r22
    d8b2:	8d 01       	movw	r16, r26
    d8b4:	23 2b       	or	r18, r19
    d8b6:	24 2b       	or	r18, r20
    d8b8:	25 2b       	or	r18, r21
    d8ba:	79 f7       	brne	.-34     	; 0xd89a <Print::printNumber(unsigned long, unsigned char)+0x40>
_ZN5Print5writeEPKc():
    d8bc:	90 e0       	ldi	r25, 0x00	; 0
    d8be:	80 e0       	ldi	r24, 0x00	; 0
    d8c0:	10 97       	sbiw	r26, 0x00	; 0
    d8c2:	21 f0       	breq	.+8      	; 0xd8cc <Print::printNumber(unsigned long, unsigned char)+0x72>
    d8c4:	bd 01       	movw	r22, r26
    d8c6:	c7 01       	movw	r24, r14
    d8c8:	0e 94 eb 6b 	call	0xd7d6	; 0xd7d6 <Print::write(char const*) [clone .part.2]>
_ZN5Print11printNumberEmh():
    d8cc:	a1 96       	adiw	r28, 0x21	; 33
    d8ce:	0f b6       	in	r0, 0x3f	; 63
    d8d0:	f8 94       	cli
    d8d2:	de bf       	out	0x3e, r29	; 62
    d8d4:	0f be       	out	0x3f, r0	; 63
    d8d6:	cd bf       	out	0x3d, r28	; 61
    d8d8:	df 91       	pop	r29
    d8da:	cf 91       	pop	r28
    d8dc:	1f 91       	pop	r17
    d8de:	0f 91       	pop	r16
    d8e0:	ff 90       	pop	r15
    d8e2:	ef 90       	pop	r14
    d8e4:	bf 90       	pop	r11
    d8e6:	af 90       	pop	r10
    d8e8:	9f 90       	pop	r9
    d8ea:	8f 90       	pop	r8
    d8ec:	08 95       	ret
    d8ee:	69 5c       	subi	r22, 0xC9	; 201
    d8f0:	de cf       	rjmp	.-68     	; 0xd8ae <Print::printNumber(unsigned long, unsigned char)+0x54>

0000d8f2 <Print::print(long, int)>:
_ZN5Print5printEli():
    d8f2:	cf 92       	push	r12
    d8f4:	df 92       	push	r13
    d8f6:	ef 92       	push	r14
    d8f8:	ff 92       	push	r15
    d8fa:	0f 93       	push	r16
    d8fc:	1f 93       	push	r17
    d8fe:	cf 93       	push	r28
    d900:	df 93       	push	r29
    d902:	21 15       	cp	r18, r1
    d904:	31 05       	cpc	r19, r1
    d906:	81 f4       	brne	.+32     	; 0xd928 <Print::print(long, int)+0x36>
    d908:	dc 01       	movw	r26, r24
    d90a:	ed 91       	ld	r30, X+
    d90c:	fc 91       	ld	r31, X
    d90e:	01 90       	ld	r0, Z+
    d910:	f0 81       	ld	r31, Z
    d912:	e0 2d       	mov	r30, r0
    d914:	64 2f       	mov	r22, r20
    d916:	df 91       	pop	r29
    d918:	cf 91       	pop	r28
    d91a:	1f 91       	pop	r17
    d91c:	0f 91       	pop	r16
    d91e:	ff 90       	pop	r15
    d920:	ef 90       	pop	r14
    d922:	df 90       	pop	r13
    d924:	cf 90       	pop	r12
    d926:	09 94       	ijmp
    d928:	2a 30       	cpi	r18, 0x0A	; 10
    d92a:	31 05       	cpc	r19, r1
    d92c:	01 f5       	brne	.+64     	; 0xd96e <Print::print(long, int)+0x7c>
    d92e:	2a e0       	ldi	r18, 0x0A	; 10
    d930:	77 ff       	sbrs	r23, 7
    d932:	1d c0       	rjmp	.+58     	; 0xd96e <Print::print(long, int)+0x7c>
    d934:	6a 01       	movw	r12, r20
    d936:	7b 01       	movw	r14, r22
    d938:	ec 01       	movw	r28, r24
    d93a:	6d e2       	ldi	r22, 0x2D	; 45
    d93c:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    d940:	8c 01       	movw	r16, r24
    d942:	44 27       	eor	r20, r20
    d944:	55 27       	eor	r21, r21
    d946:	ba 01       	movw	r22, r20
    d948:	4c 19       	sub	r20, r12
    d94a:	5d 09       	sbc	r21, r13
    d94c:	6e 09       	sbc	r22, r14
    d94e:	7f 09       	sbc	r23, r15
    d950:	2a e0       	ldi	r18, 0x0A	; 10
    d952:	ce 01       	movw	r24, r28
    d954:	0e 94 2d 6c 	call	0xd85a	; 0xd85a <Print::printNumber(unsigned long, unsigned char)>
    d958:	80 0f       	add	r24, r16
    d95a:	91 1f       	adc	r25, r17
    d95c:	df 91       	pop	r29
    d95e:	cf 91       	pop	r28
    d960:	1f 91       	pop	r17
    d962:	0f 91       	pop	r16
    d964:	ff 90       	pop	r15
    d966:	ef 90       	pop	r14
    d968:	df 90       	pop	r13
    d96a:	cf 90       	pop	r12
    d96c:	08 95       	ret
    d96e:	df 91       	pop	r29
    d970:	cf 91       	pop	r28
    d972:	1f 91       	pop	r17
    d974:	0f 91       	pop	r16
    d976:	ff 90       	pop	r15
    d978:	ef 90       	pop	r14
    d97a:	df 90       	pop	r13
    d97c:	cf 90       	pop	r12
    d97e:	0c 94 2d 6c 	jmp	0xd85a	; 0xd85a <Print::printNumber(unsigned long, unsigned char)>

0000d982 <Print::print(int, int)>:
_ZN5Print5printEii():
    d982:	9a 01       	movw	r18, r20
    d984:	ab 01       	movw	r20, r22
    d986:	77 0f       	add	r23, r23
    d988:	66 0b       	sbc	r22, r22
    d98a:	77 0b       	sbc	r23, r23
    d98c:	0c 94 79 6c 	jmp	0xd8f2	; 0xd8f2 <Print::print(long, int)>

0000d990 <Print::print(unsigned long, int)>:
_ZN5Print5printEmi():
    d990:	21 15       	cp	r18, r1
    d992:	31 05       	cpc	r19, r1
    d994:	41 f4       	brne	.+16     	; 0xd9a6 <Print::print(unsigned long, int)+0x16>
    d996:	dc 01       	movw	r26, r24
    d998:	ed 91       	ld	r30, X+
    d99a:	fc 91       	ld	r31, X
    d99c:	01 90       	ld	r0, Z+
    d99e:	f0 81       	ld	r31, Z
    d9a0:	e0 2d       	mov	r30, r0
    d9a2:	64 2f       	mov	r22, r20
    d9a4:	09 94       	ijmp
    d9a6:	0c 94 2d 6c 	jmp	0xd85a	; 0xd85a <Print::printNumber(unsigned long, unsigned char)>

0000d9aa <Print::print(unsigned char, int)>:
_ZN5Print5printEhi():
    d9aa:	9a 01       	movw	r18, r20
    d9ac:	46 2f       	mov	r20, r22
    d9ae:	50 e0       	ldi	r21, 0x00	; 0
    d9b0:	70 e0       	ldi	r23, 0x00	; 0
    d9b2:	60 e0       	ldi	r22, 0x00	; 0
    d9b4:	0c 94 c8 6c 	jmp	0xd990	; 0xd990 <Print::print(unsigned long, int)>

0000d9b8 <Print::print(unsigned int, int)>:
_ZN5Print5printEji():
    d9b8:	9a 01       	movw	r18, r20
    d9ba:	ab 01       	movw	r20, r22
    d9bc:	70 e0       	ldi	r23, 0x00	; 0
    d9be:	60 e0       	ldi	r22, 0x00	; 0
    d9c0:	0c 94 c8 6c 	jmp	0xd990	; 0xd990 <Print::print(unsigned long, int)>

0000d9c4 <Print::printFloat(double, unsigned char)>:
_ZN5Print10printFloatEdh():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:253

  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
    d9c4:	2f 92       	push	r2
    d9c6:	3f 92       	push	r3
    d9c8:	4f 92       	push	r4
    d9ca:	5f 92       	push	r5
    d9cc:	6f 92       	push	r6
    d9ce:	7f 92       	push	r7
    d9d0:	8f 92       	push	r8
    d9d2:	9f 92       	push	r9
    d9d4:	af 92       	push	r10
    d9d6:	bf 92       	push	r11
    d9d8:	cf 92       	push	r12
    d9da:	df 92       	push	r13
    d9dc:	ef 92       	push	r14
    d9de:	ff 92       	push	r15
    d9e0:	1f 93       	push	r17
    d9e2:	cf 93       	push	r28
    d9e4:	df 93       	push	r29
    d9e6:	ec 01       	movw	r28, r24
    d9e8:	6a 01       	movw	r12, r20
    d9ea:	7b 01       	movw	r14, r22
    d9ec:	72 2e       	mov	r7, r18
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:256
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
    d9ee:	ab 01       	movw	r20, r22
    d9f0:	96 01       	movw	r18, r12
    d9f2:	cb 01       	movw	r24, r22
    d9f4:	b6 01       	movw	r22, r12
    d9f6:	0e 94 6d 72 	call	0xe4da	; 0xe4da <__unordsf2>
_ZN5Print5writeEPKc():
    d9fa:	6a ee       	ldi	r22, 0xEA	; 234
    d9fc:	72 e0       	ldi	r23, 0x02	; 2
_ZN5Print10printFloatEdh():
    d9fe:	81 11       	cpse	r24, r1
    da00:	26 c0       	rjmp	.+76     	; 0xda4e <Print::printFloat(double, unsigned char)+0x8a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:257
  if (isinf(number)) return print("inf");
    da02:	46 01       	movw	r8, r12
    da04:	57 01       	movw	r10, r14
    da06:	e8 94       	clt
    da08:	b7 f8       	bld	r11, 7
    da0a:	2f ef       	ldi	r18, 0xFF	; 255
    da0c:	3f ef       	ldi	r19, 0xFF	; 255
    da0e:	4f e7       	ldi	r20, 0x7F	; 127
    da10:	5f e7       	ldi	r21, 0x7F	; 127
    da12:	c5 01       	movw	r24, r10
    da14:	b4 01       	movw	r22, r8
    da16:	0e 94 6d 72 	call	0xe4da	; 0xe4da <__unordsf2>
    da1a:	81 11       	cpse	r24, r1
    da1c:	0c c0       	rjmp	.+24     	; 0xda36 <Print::printFloat(double, unsigned char)+0x72>
    da1e:	2f ef       	ldi	r18, 0xFF	; 255
    da20:	3f ef       	ldi	r19, 0xFF	; 255
    da22:	4f e7       	ldi	r20, 0x7F	; 127
    da24:	5f e7       	ldi	r21, 0x7F	; 127
    da26:	c5 01       	movw	r24, r10
    da28:	b4 01       	movw	r22, r8
    da2a:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
_ZN5Print5writeEPKc():
    da2e:	6e ee       	ldi	r22, 0xEE	; 238
    da30:	72 e0       	ldi	r23, 0x02	; 2
_ZN5Print10printFloatEdh():
    da32:	18 16       	cp	r1, r24
    da34:	64 f0       	brlt	.+24     	; 0xda4e <Print::printFloat(double, unsigned char)+0x8a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:258
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
    da36:	2f ef       	ldi	r18, 0xFF	; 255
    da38:	3f ef       	ldi	r19, 0xFF	; 255
    da3a:	4f e7       	ldi	r20, 0x7F	; 127
    da3c:	5f e4       	ldi	r21, 0x4F	; 79
    da3e:	c7 01       	movw	r24, r14
    da40:	b6 01       	movw	r22, r12
    da42:	0e 94 7c 71 	call	0xe2f8	; 0xe2f8 <__gesf2>
    da46:	18 16       	cp	r1, r24
    da48:	b4 f4       	brge	.+44     	; 0xda76 <Print::printFloat(double, unsigned char)+0xb2>
_ZN5Print5writeEPKc():
    da4a:	62 ef       	ldi	r22, 0xF2	; 242
    da4c:	72 e0       	ldi	r23, 0x02	; 2
    da4e:	ce 01       	movw	r24, r28
_ZN5Print10printFloatEdh():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:295
    n += print(toPrint);
    remainder -= toPrint; 
  } 
  
  return n;
}
    da50:	df 91       	pop	r29
    da52:	cf 91       	pop	r28
    da54:	1f 91       	pop	r17
    da56:	ff 90       	pop	r15
    da58:	ef 90       	pop	r14
    da5a:	df 90       	pop	r13
    da5c:	cf 90       	pop	r12
    da5e:	bf 90       	pop	r11
    da60:	af 90       	pop	r10
    da62:	9f 90       	pop	r9
    da64:	8f 90       	pop	r8
    da66:	7f 90       	pop	r7
    da68:	6f 90       	pop	r6
    da6a:	5f 90       	pop	r5
    da6c:	4f 90       	pop	r4
    da6e:	3f 90       	pop	r3
    da70:	2f 90       	pop	r2
_ZN5Print5writeEPKc():
    da72:	0c 94 eb 6b 	jmp	0xd7d6	; 0xd7d6 <Print::write(char const*) [clone .part.2]>
_ZN5Print10printFloatEdh():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:259
  size_t n = 0;
  
  if (isnan(number)) return print("nan");
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
    da76:	2f ef       	ldi	r18, 0xFF	; 255
    da78:	3f ef       	ldi	r19, 0xFF	; 255
    da7a:	4f e7       	ldi	r20, 0x7F	; 127
    da7c:	5f ec       	ldi	r21, 0xCF	; 207
    da7e:	c7 01       	movw	r24, r14
    da80:	b6 01       	movw	r22, r12
    da82:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
    da86:	87 fd       	sbrc	r24, 7
    da88:	e0 cf       	rjmp	.-64     	; 0xda4a <Print::printFloat(double, unsigned char)+0x86>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:262
  
  // Handle negative numbers
  if (number < 0.0)
    da8a:	20 e0       	ldi	r18, 0x00	; 0
    da8c:	30 e0       	ldi	r19, 0x00	; 0
    da8e:	a9 01       	movw	r20, r18
    da90:	c7 01       	movw	r24, r14
    da92:	b6 01       	movw	r22, r12
    da94:	0e 94 26 6f 	call	0xde4c	; 0xde4c <__cmpsf2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:254
  return write(str);
}

size_t Print::printFloat(double number, uint8_t digits) 
{ 
  size_t n = 0;
    da98:	31 2c       	mov	r3, r1
    da9a:	21 2c       	mov	r2, r1
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:262
  if (isinf(number)) return print("inf");
  if (number > 4294967040.0) return print ("ovf");  // constant determined empirically
  if (number <-4294967040.0) return print ("ovf");  // constant determined empirically
  
  // Handle negative numbers
  if (number < 0.0)
    da9c:	87 ff       	sbrs	r24, 7
    da9e:	09 c0       	rjmp	.+18     	; 0xdab2 <Print::printFloat(double, unsigned char)+0xee>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:264
  {
     n += print('-');
    daa0:	6d e2       	ldi	r22, 0x2D	; 45
    daa2:	ce 01       	movw	r24, r28
    daa4:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    daa8:	1c 01       	movw	r2, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:265
     number = -number;
    daaa:	f7 fa       	bst	r15, 7
    daac:	f0 94       	com	r15
    daae:	f7 f8       	bld	r15, 7
    dab0:	f0 94       	com	r15
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:270
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    dab2:	10 e0       	ldi	r17, 0x00	; 0
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:269
     n += print('-');
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
    dab4:	60 e0       	ldi	r22, 0x00	; 0
    dab6:	70 e0       	ldi	r23, 0x00	; 0
    dab8:	80 e0       	ldi	r24, 0x00	; 0
    daba:	9f e3       	ldi	r25, 0x3F	; 63
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:270
  for (uint8_t i=0; i<digits; ++i)
    dabc:	71 16       	cp	r7, r17
    dabe:	41 f0       	breq	.+16     	; 0xdad0 <Print::printFloat(double, unsigned char)+0x10c>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:271
    rounding /= 10.0;
    dac0:	20 e0       	ldi	r18, 0x00	; 0
    dac2:	30 e0       	ldi	r19, 0x00	; 0
    dac4:	40 e2       	ldi	r20, 0x20	; 32
    dac6:	51 e4       	ldi	r21, 0x41	; 65
    dac8:	0e 94 30 6f 	call	0xde60	; 0xde60 <__divsf3>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:270
     number = -number;
  }

  // Round correctly so that print(1.999, 2) prints as "2.00"
  double rounding = 0.5;
  for (uint8_t i=0; i<digits; ++i)
    dacc:	1f 5f       	subi	r17, 0xFF	; 255
    dace:	f6 cf       	rjmp	.-20     	; 0xdabc <Print::printFloat(double, unsigned char)+0xf8>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:273
    rounding /= 10.0;
  
  number += rounding;
    dad0:	a7 01       	movw	r20, r14
    dad2:	96 01       	movw	r18, r12
    dad4:	0e 94 2d 6e 	call	0xdc5a	; 0xdc5a <__addsf3>
    dad8:	2b 01       	movw	r4, r22
    dada:	3c 01       	movw	r6, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:276

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
    dadc:	0e 94 a9 6f 	call	0xdf52	; 0xdf52 <__fixunssfsi>
    dae0:	4b 01       	movw	r8, r22
    dae2:	5c 01       	movw	r10, r24
_ZN5Print5printEmi():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:106
}

size_t Print::print(unsigned long n, int base)
{
  if (base == 0) return write(n);
  else return printNumber(n, base);
    dae4:	2a e0       	ldi	r18, 0x0A	; 10
    dae6:	bc 01       	movw	r22, r24
    dae8:	a4 01       	movw	r20, r8
    daea:	ce 01       	movw	r24, r28
    daec:	0e 94 2d 6c 	call	0xd85a	; 0xd85a <Print::printNumber(unsigned long, unsigned char)>
_ZN5Print10printFloatEdh():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:278
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
  n += print(int_part);
    daf0:	7c 01       	movw	r14, r24
    daf2:	e2 0c       	add	r14, r2
    daf4:	f3 1c       	adc	r15, r3
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:281

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    daf6:	11 23       	and	r17, r17
    daf8:	b1 f1       	breq	.+108    	; 0xdb66 <Print::printFloat(double, unsigned char)+0x1a2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:277
  
  number += rounding;

  // Extract the integer part of the number and print it
  unsigned long int_part = (unsigned long)number;
  double remainder = number - (double)int_part;
    dafa:	c5 01       	movw	r24, r10
    dafc:	b4 01       	movw	r22, r8
    dafe:	0e 94 d8 6f 	call	0xdfb0	; 0xdfb0 <__floatunsisf>
    db02:	9b 01       	movw	r18, r22
    db04:	ac 01       	movw	r20, r24
    db06:	c3 01       	movw	r24, r6
    db08:	b2 01       	movw	r22, r4
    db0a:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    db0e:	4b 01       	movw	r8, r22
    db10:	5c 01       	movw	r10, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:282
  n += print(int_part);

  // Print the decimal point, but only if there are digits beyond
  if (digits > 0) {
    n += print('.'); 
    db12:	6e e2       	ldi	r22, 0x2E	; 46
    db14:	ce 01       	movw	r24, r28
    db16:	0e 94 26 6c 	call	0xd84c	; 0xd84c <Print::print(char)>
    db1a:	e8 0e       	add	r14, r24
    db1c:	f9 1e       	adc	r15, r25
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:286
  }

  // Extract digits from the remainder one at a time
  while (digits-- > 0)
    db1e:	11 50       	subi	r17, 0x01	; 1
    db20:	10 f1       	brcs	.+68     	; 0xdb66 <Print::printFloat(double, unsigned char)+0x1a2>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:288
  {
    remainder *= 10.0;
    db22:	20 e0       	ldi	r18, 0x00	; 0
    db24:	30 e0       	ldi	r19, 0x00	; 0
    db26:	40 e2       	ldi	r20, 0x20	; 32
    db28:	51 e4       	ldi	r21, 0x41	; 65
    db2a:	c5 01       	movw	r24, r10
    db2c:	b4 01       	movw	r22, r8
    db2e:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    db32:	2b 01       	movw	r4, r22
    db34:	3c 01       	movw	r6, r24
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:289
    unsigned int toPrint = (unsigned int)(remainder);
    db36:	0e 94 a9 6f 	call	0xdf52	; 0xdf52 <__fixunssfsi>
    db3a:	4b 01       	movw	r8, r22
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:290
    n += print(toPrint);
    db3c:	4a e0       	ldi	r20, 0x0A	; 10
    db3e:	50 e0       	ldi	r21, 0x00	; 0
    db40:	ce 01       	movw	r24, r28
    db42:	0e 94 dc 6c 	call	0xd9b8	; 0xd9b8 <Print::print(unsigned int, int)>
    db46:	e8 0e       	add	r14, r24
    db48:	f9 1e       	adc	r15, r25
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:291
    remainder -= toPrint; 
    db4a:	b4 01       	movw	r22, r8
    db4c:	90 e0       	ldi	r25, 0x00	; 0
    db4e:	80 e0       	ldi	r24, 0x00	; 0
    db50:	0e 94 d8 6f 	call	0xdfb0	; 0xdfb0 <__floatunsisf>
    db54:	9b 01       	movw	r18, r22
    db56:	ac 01       	movw	r20, r24
    db58:	c3 01       	movw	r24, r6
    db5a:	b2 01       	movw	r22, r4
    db5c:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    db60:	4b 01       	movw	r8, r22
    db62:	5c 01       	movw	r10, r24
    db64:	dc cf       	rjmp	.-72     	; 0xdb1e <Print::printFloat(double, unsigned char)+0x15a>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:295
  } 
  
  return n;
}
    db66:	c7 01       	movw	r24, r14
    db68:	df 91       	pop	r29
    db6a:	cf 91       	pop	r28
    db6c:	1f 91       	pop	r17
    db6e:	ff 90       	pop	r15
    db70:	ef 90       	pop	r14
    db72:	df 90       	pop	r13
    db74:	cf 90       	pop	r12
    db76:	bf 90       	pop	r11
    db78:	af 90       	pop	r10
    db7a:	9f 90       	pop	r9
    db7c:	8f 90       	pop	r8
    db7e:	7f 90       	pop	r7
    db80:	6f 90       	pop	r6
    db82:	5f 90       	pop	r5
    db84:	4f 90       	pop	r4
    db86:	3f 90       	pop	r3
    db88:	2f 90       	pop	r2
    db8a:	08 95       	ret

0000db8c <Print::print(double, int)>:
_ZN5Print5printEdi():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/Print.cpp:111
  else return printNumber(n, base);
}

size_t Print::print(double n, int digits)
{
  return printFloat(n, digits);
    db8c:	0c 94 e2 6c 	jmp	0xd9c4	; 0xd9c4 <Print::printFloat(double, unsigned char)>

0000db90 <map(long, long, long, long, long)>:
_Z3maplllll():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WMath.cpp:53
  long diff = howbig - howsmall;
  return random(diff) + howsmall;
}

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
    db90:	4f 92       	push	r4
    db92:	5f 92       	push	r5
    db94:	6f 92       	push	r6
    db96:	7f 92       	push	r7
    db98:	af 92       	push	r10
    db9a:	bf 92       	push	r11
    db9c:	cf 92       	push	r12
    db9e:	df 92       	push	r13
    dba0:	ef 92       	push	r14
    dba2:	ff 92       	push	r15
    dba4:	0f 93       	push	r16
    dba6:	1f 93       	push	r17
    dba8:	cf 93       	push	r28
    dbaa:	df 93       	push	r29
    dbac:	cd b7       	in	r28, 0x3d	; 61
    dbae:	de b7       	in	r29, 0x3e	; 62
    dbb0:	29 01       	movw	r4, r18
    dbb2:	3a 01       	movw	r6, r20
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WMath.cpp:54
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
    dbb4:	9b 01       	movw	r18, r22
    dbb6:	ac 01       	movw	r20, r24
    dbb8:	24 19       	sub	r18, r4
    dbba:	35 09       	sbc	r19, r5
    dbbc:	46 09       	sbc	r20, r6
    dbbe:	57 09       	sbc	r21, r7
    dbc0:	89 89       	ldd	r24, Y+17	; 0x11
    dbc2:	9a 89       	ldd	r25, Y+18	; 0x12
    dbc4:	ab 89       	ldd	r26, Y+19	; 0x13
    dbc6:	bc 89       	ldd	r27, Y+20	; 0x14
    dbc8:	bc 01       	movw	r22, r24
    dbca:	cd 01       	movw	r24, r26
    dbcc:	6a 19       	sub	r22, r10
    dbce:	7b 09       	sbc	r23, r11
    dbd0:	8c 09       	sbc	r24, r12
    dbd2:	9d 09       	sbc	r25, r13
    dbd4:	0e 94 79 72 	call	0xe4f2	; 0xe4f2 <__mulsi3>
    dbd8:	a8 01       	movw	r20, r16
    dbda:	97 01       	movw	r18, r14
    dbdc:	24 19       	sub	r18, r4
    dbde:	35 09       	sbc	r19, r5
    dbe0:	46 09       	sbc	r20, r6
    dbe2:	57 09       	sbc	r21, r7
    dbe4:	0e 94 cb 72 	call	0xe596	; 0xe596 <__divmodsi4>
    dbe8:	ca 01       	movw	r24, r20
    dbea:	b9 01       	movw	r22, r18
    dbec:	6a 0d       	add	r22, r10
    dbee:	7b 1d       	adc	r23, r11
    dbf0:	8c 1d       	adc	r24, r12
    dbf2:	9d 1d       	adc	r25, r13
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/WMath.cpp:55
}
    dbf4:	df 91       	pop	r29
    dbf6:	cf 91       	pop	r28
    dbf8:	1f 91       	pop	r17
    dbfa:	0f 91       	pop	r16
    dbfc:	ff 90       	pop	r15
    dbfe:	ef 90       	pop	r14
    dc00:	df 90       	pop	r13
    dc02:	cf 90       	pop	r12
    dc04:	bf 90       	pop	r11
    dc06:	af 90       	pop	r10
    dc08:	7f 90       	pop	r7
    dc0a:	6f 90       	pop	r6
    dc0c:	5f 90       	pop	r5
    dc0e:	4f 90       	pop	r4
    dc10:	08 95       	ret

0000dc12 <__cxa_pure_virtual>:
__cxa_pure_virtual():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/abi.cpp:27
extern "C" void __cxa_deleted_virtual(void) __attribute__ ((__noreturn__));

void __cxa_pure_virtual(void) {
  // We might want to write some diagnostics to uart in this case
  //std::terminate();
  abort();
    dc12:	0e 94 4e 74 	call	0xe89c	; 0xe89c <abort>

0000dc16 <initVariant>:
initVariant():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:28
int atexit(void (* /*func*/ )()) { return 0; }

// Weak empty variant initialization function.
// May be redefined by variant files.
void initVariant() __attribute__((weak));
void initVariant() { }
    dc16:	08 95       	ret

0000dc18 <main>:
main():
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:35
//void setupUSB() __attribute__((weak));
//void setupUSB() { }

int main(void)
{
  init();
    dc18:	0e 94 c1 6a 	call	0xd582	; 0xd582 <init>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:37

  initVariant();
    dc1c:	0e 94 0b 6e 	call	0xdc16	; 0xdc16 <initVariant>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:43

#if defined(USBCON)
  USBDevice.attach();
#endif
  
  setup();
    dc20:	0e 94 f3 1a 	call	0x35e6	; 0x35e6 <setup>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:47
    
  for (;;) {
    loop();
    if (serialEventRun) serialEventRun();
    dc24:	c0 e0       	ldi	r28, 0x00	; 0
    dc26:	d0 e0       	ldi	r29, 0x00	; 0
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:46
#endif
  
  setup();
    
  for (;;) {
    loop();
    dc28:	0e 94 55 3f 	call	0x7eaa	; 0x7eaa <loop>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:47
    if (serialEventRun) serialEventRun();
    dc2c:	20 97       	sbiw	r28, 0x00	; 0
    dc2e:	e1 f3       	breq	.-8      	; 0xdc28 <main+0x10>
C:\Users\nyvir\AppData\Local\Arduino15\packages\MightyCore\hardware\avr\2.1.3\cores\MCUdude_corefiles/main.cpp:47 (discriminator 1)
    dc30:	0e 94 00 00 	call	0	; 0x0 <__vectors>
    dc34:	f9 cf       	rjmp	.-14     	; 0xdc28 <main+0x10>

0000dc36 <acos>:
acos():
    dc36:	9f 93       	push	r25
    dc38:	9f 77       	andi	r25, 0x7F	; 127
    dc3a:	0e 94 2c 70 	call	0xe058	; 0xe058 <__fp_arccos>
    dc3e:	0f 90       	pop	r0
    dc40:	00 20       	and	r0, r0
    dc42:	42 f4       	brpl	.+16     	; 0xdc54 <acos+0x1e>
    dc44:	90 58       	subi	r25, 0x80	; 128
    dc46:	a2 ea       	ldi	r26, 0xA2	; 162
    dc48:	2a ed       	ldi	r18, 0xDA	; 218
    dc4a:	3f e0       	ldi	r19, 0x0F	; 15
    dc4c:	49 e4       	ldi	r20, 0x49	; 73
    dc4e:	50 e4       	ldi	r21, 0x40	; 64
    dc50:	0e 94 44 6e 	call	0xdc88	; 0xdc88 <__addsf3x>
    dc54:	0c 94 16 71 	jmp	0xe22c	; 0xe22c <__fp_round>

0000dc58 <__subsf3>:
__subsf3():
    dc58:	50 58       	subi	r21, 0x80	; 128

0000dc5a <__addsf3>:
    dc5a:	bb 27       	eor	r27, r27
    dc5c:	aa 27       	eor	r26, r26
    dc5e:	0e 94 44 6e 	call	0xdc88	; 0xdc88 <__addsf3x>
    dc62:	0c 94 16 71 	jmp	0xe22c	; 0xe22c <__fp_round>
__addsf3():
    dc66:	0e 94 dd 70 	call	0xe1ba	; 0xe1ba <__fp_pscA>
    dc6a:	38 f0       	brcs	.+14     	; 0xdc7a <__addsf3+0x20>
    dc6c:	0e 94 e4 70 	call	0xe1c8	; 0xe1c8 <__fp_pscB>
    dc70:	20 f0       	brcs	.+8      	; 0xdc7a <__addsf3+0x20>
    dc72:	39 f4       	brne	.+14     	; 0xdc82 <__addsf3+0x28>
    dc74:	9f 3f       	cpi	r25, 0xFF	; 255
    dc76:	19 f4       	brne	.+6      	; 0xdc7e <__addsf3+0x24>
    dc78:	26 f4       	brtc	.+8      	; 0xdc82 <__addsf3+0x28>
    dc7a:	0c 94 9f 70 	jmp	0xe13e	; 0xe13e <__fp_nan>
    dc7e:	0e f4       	brtc	.+2      	; 0xdc82 <__addsf3+0x28>
    dc80:	e0 95       	com	r30
    dc82:	e7 fb       	bst	r30, 7
    dc84:	0c 94 70 70 	jmp	0xe0e0	; 0xe0e0 <__fp_inf>

0000dc88 <__addsf3x>:
__addsf3x():
    dc88:	e9 2f       	mov	r30, r25
    dc8a:	0e 94 3b 71 	call	0xe276	; 0xe276 <__fp_split3>
    dc8e:	58 f3       	brcs	.-42     	; 0xdc66 <__addsf3+0xc>
    dc90:	ba 17       	cp	r27, r26
    dc92:	62 07       	cpc	r22, r18
    dc94:	73 07       	cpc	r23, r19
    dc96:	84 07       	cpc	r24, r20
    dc98:	95 07       	cpc	r25, r21
    dc9a:	20 f0       	brcs	.+8      	; 0xdca4 <__addsf3x+0x1c>
    dc9c:	79 f4       	brne	.+30     	; 0xdcbc <__addsf3x+0x34>
    dc9e:	a6 f5       	brtc	.+104    	; 0xdd08 <__addsf3x+0x80>
    dca0:	0c 94 75 71 	jmp	0xe2ea	; 0xe2ea <__fp_zero>
    dca4:	0e f4       	brtc	.+2      	; 0xdca8 <__addsf3x+0x20>
    dca6:	e0 95       	com	r30
    dca8:	0b 2e       	mov	r0, r27
    dcaa:	ba 2f       	mov	r27, r26
    dcac:	a0 2d       	mov	r26, r0
    dcae:	0b 01       	movw	r0, r22
    dcb0:	b9 01       	movw	r22, r18
    dcb2:	90 01       	movw	r18, r0
    dcb4:	0c 01       	movw	r0, r24
    dcb6:	ca 01       	movw	r24, r20
    dcb8:	a0 01       	movw	r20, r0
    dcba:	11 24       	eor	r1, r1
    dcbc:	ff 27       	eor	r31, r31
    dcbe:	59 1b       	sub	r21, r25
    dcc0:	99 f0       	breq	.+38     	; 0xdce8 <__addsf3x+0x60>
    dcc2:	59 3f       	cpi	r21, 0xF9	; 249
    dcc4:	50 f4       	brcc	.+20     	; 0xdcda <__addsf3x+0x52>
    dcc6:	50 3e       	cpi	r21, 0xE0	; 224
    dcc8:	68 f1       	brcs	.+90     	; 0xdd24 <__addsf3x+0x9c>
    dcca:	1a 16       	cp	r1, r26
    dccc:	f0 40       	sbci	r31, 0x00	; 0
    dcce:	a2 2f       	mov	r26, r18
    dcd0:	23 2f       	mov	r18, r19
    dcd2:	34 2f       	mov	r19, r20
    dcd4:	44 27       	eor	r20, r20
    dcd6:	58 5f       	subi	r21, 0xF8	; 248
    dcd8:	f3 cf       	rjmp	.-26     	; 0xdcc0 <__addsf3x+0x38>
    dcda:	46 95       	lsr	r20
    dcdc:	37 95       	ror	r19
    dcde:	27 95       	ror	r18
    dce0:	a7 95       	ror	r26
    dce2:	f0 40       	sbci	r31, 0x00	; 0
    dce4:	53 95       	inc	r21
    dce6:	c9 f7       	brne	.-14     	; 0xdcda <__addsf3x+0x52>
    dce8:	7e f4       	brtc	.+30     	; 0xdd08 <__addsf3x+0x80>
    dcea:	1f 16       	cp	r1, r31
    dcec:	ba 0b       	sbc	r27, r26
    dcee:	62 0b       	sbc	r22, r18
    dcf0:	73 0b       	sbc	r23, r19
    dcf2:	84 0b       	sbc	r24, r20
    dcf4:	ba f0       	brmi	.+46     	; 0xdd24 <__addsf3x+0x9c>
    dcf6:	91 50       	subi	r25, 0x01	; 1
    dcf8:	a1 f0       	breq	.+40     	; 0xdd22 <__addsf3x+0x9a>
    dcfa:	ff 0f       	add	r31, r31
    dcfc:	bb 1f       	adc	r27, r27
    dcfe:	66 1f       	adc	r22, r22
    dd00:	77 1f       	adc	r23, r23
    dd02:	88 1f       	adc	r24, r24
    dd04:	c2 f7       	brpl	.-16     	; 0xdcf6 <__addsf3x+0x6e>
    dd06:	0e c0       	rjmp	.+28     	; 0xdd24 <__addsf3x+0x9c>
    dd08:	ba 0f       	add	r27, r26
    dd0a:	62 1f       	adc	r22, r18
    dd0c:	73 1f       	adc	r23, r19
    dd0e:	84 1f       	adc	r24, r20
    dd10:	48 f4       	brcc	.+18     	; 0xdd24 <__addsf3x+0x9c>
    dd12:	87 95       	ror	r24
    dd14:	77 95       	ror	r23
    dd16:	67 95       	ror	r22
    dd18:	b7 95       	ror	r27
    dd1a:	f7 95       	ror	r31
    dd1c:	9e 3f       	cpi	r25, 0xFE	; 254
    dd1e:	08 f0       	brcs	.+2      	; 0xdd22 <__addsf3x+0x9a>
    dd20:	b0 cf       	rjmp	.-160    	; 0xdc82 <__addsf3+0x28>
    dd22:	93 95       	inc	r25
    dd24:	88 0f       	add	r24, r24
    dd26:	08 f0       	brcs	.+2      	; 0xdd2a <__addsf3x+0xa2>
    dd28:	99 27       	eor	r25, r25
    dd2a:	ee 0f       	add	r30, r30
    dd2c:	97 95       	ror	r25
    dd2e:	87 95       	ror	r24
    dd30:	08 95       	ret

0000dd32 <asin>:
    dd32:	9f 93       	push	r25
    dd34:	9f 77       	andi	r25, 0x7F	; 127
    dd36:	ee e3       	ldi	r30, 0x3E	; 62
    dd38:	89 37       	cpi	r24, 0x79	; 121
    dd3a:	9e 07       	cpc	r25, r30
    dd3c:	28 f4       	brcc	.+10     	; 0xdd48 <asin+0x16>
    dd3e:	ec e8       	ldi	r30, 0x8C	; 140
    dd40:	f0 e0       	ldi	r31, 0x00	; 0
    dd42:	0e 94 c9 70 	call	0xe192	; 0xe192 <__fp_powsodd>
    dd46:	0c c0       	rjmp	.+24     	; 0xdd60 <asin+0x2e>
    dd48:	0e 94 2c 70 	call	0xe058	; 0xe058 <__fp_arccos>
    dd4c:	90 58       	subi	r25, 0x80	; 128
    dd4e:	a2 ea       	ldi	r26, 0xA2	; 162
    dd50:	2a ed       	ldi	r18, 0xDA	; 218
    dd52:	3f e0       	ldi	r19, 0x0F	; 15
asin():
    dd54:	49 ec       	ldi	r20, 0xC9	; 201
    dd56:	5f e3       	ldi	r21, 0x3F	; 63
    dd58:	0e 94 44 6e 	call	0xdc88	; 0xdc88 <__addsf3x>
    dd5c:	0e 94 16 71 	call	0xe22c	; 0xe22c <__fp_round>
    dd60:	0f 90       	pop	r0
    dd62:	07 fc       	sbrc	r0, 7
    dd64:	90 58       	subi	r25, 0x80	; 128
    dd66:	08 95       	ret
    dd68:	0e 94 dd 70 	call	0xe1ba	; 0xe1ba <__fp_pscA>
    dd6c:	60 f0       	brcs	.+24     	; 0xdd86 <asin+0x54>
    dd6e:	80 e8       	ldi	r24, 0x80	; 128
    dd70:	91 e0       	ldi	r25, 0x01	; 1
    dd72:	09 f4       	brne	.+2      	; 0xdd76 <asin+0x44>
    dd74:	9e ef       	ldi	r25, 0xFE	; 254
    dd76:	0e 94 e4 70 	call	0xe1c8	; 0xe1c8 <__fp_pscB>
    dd7a:	28 f0       	brcs	.+10     	; 0xdd86 <asin+0x54>
    dd7c:	40 e8       	ldi	r20, 0x80	; 128
    dd7e:	51 e0       	ldi	r21, 0x01	; 1
    dd80:	71 f4       	brne	.+28     	; 0xdd9e <atan2+0x10>
    dd82:	5e ef       	ldi	r21, 0xFE	; 254
    dd84:	0c c0       	rjmp	.+24     	; 0xdd9e <atan2+0x10>
    dd86:	0c 94 9f 70 	jmp	0xe13e	; 0xe13e <__fp_nan>
    dd8a:	0c 94 75 71 	jmp	0xe2ea	; 0xe2ea <__fp_zero>

0000dd8e <atan2>:
atan2():
    dd8e:	e9 2f       	mov	r30, r25
    dd90:	e0 78       	andi	r30, 0x80	; 128
    dd92:	0e 94 3b 71 	call	0xe276	; 0xe276 <__fp_split3>
    dd96:	40 f3       	brcs	.-48     	; 0xdd68 <asin+0x36>
    dd98:	09 2e       	mov	r0, r25
    dd9a:	05 2a       	or	r0, r21
    dd9c:	b1 f3       	breq	.-20     	; 0xdd8a <asin+0x58>
    dd9e:	26 17       	cp	r18, r22
    dda0:	37 07       	cpc	r19, r23
    dda2:	48 07       	cpc	r20, r24
    dda4:	59 07       	cpc	r21, r25
    dda6:	38 f0       	brcs	.+14     	; 0xddb6 <atan2+0x28>
    dda8:	0e 2e       	mov	r0, r30
    ddaa:	07 f8       	bld	r0, 7
    ddac:	e0 25       	eor	r30, r0
    ddae:	69 f0       	breq	.+26     	; 0xddca <atan2+0x3c>
    ddb0:	e0 25       	eor	r30, r0
    ddb2:	e0 64       	ori	r30, 0x40	; 64
    ddb4:	0a c0       	rjmp	.+20     	; 0xddca <atan2+0x3c>
    ddb6:	ef 63       	ori	r30, 0x3F	; 63
    ddb8:	07 f8       	bld	r0, 7
    ddba:	00 94       	com	r0
    ddbc:	07 fa       	bst	r0, 7
    ddbe:	db 01       	movw	r26, r22
    ddc0:	b9 01       	movw	r22, r18
    ddc2:	9d 01       	movw	r18, r26
    ddc4:	dc 01       	movw	r26, r24
    ddc6:	ca 01       	movw	r24, r20
    ddc8:	ad 01       	movw	r20, r26
    ddca:	ef 93       	push	r30
    ddcc:	0e 94 47 6f 	call	0xde8e	; 0xde8e <__divsf3_pse>
    ddd0:	0e 94 16 71 	call	0xe22c	; 0xe22c <__fp_round>
    ddd4:	0e 94 f7 6e 	call	0xddee	; 0xddee <atan>
    ddd8:	5f 91       	pop	r21
    ddda:	55 23       	and	r21, r21
    dddc:	39 f0       	breq	.+14     	; 0xddec <atan2+0x5e>
    ddde:	2b ed       	ldi	r18, 0xDB	; 219
    dde0:	3f e0       	ldi	r19, 0x0F	; 15
    dde2:	49 e4       	ldi	r20, 0x49	; 73
    dde4:	50 fd       	sbrc	r21, 0
    dde6:	49 ec       	ldi	r20, 0xC9	; 201
    dde8:	0c 94 2d 6e 	jmp	0xdc5a	; 0xdc5a <__addsf3>
    ddec:	08 95       	ret

0000ddee <atan>:
    ddee:	df 93       	push	r29
    ddf0:	dd 27       	eor	r29, r29
    ddf2:	b9 2f       	mov	r27, r25
    ddf4:	bf 77       	andi	r27, 0x7F	; 127
    ddf6:	40 e8       	ldi	r20, 0x80	; 128
    ddf8:	5f e3       	ldi	r21, 0x3F	; 63
    ddfa:	16 16       	cp	r1, r22
    ddfc:	17 06       	cpc	r1, r23
    ddfe:	48 07       	cpc	r20, r24
    de00:	5b 07       	cpc	r21, r27
    de02:	18 f4       	brcc	.+6      	; 0xde0a <atan+0x1c>
    de04:	d9 2f       	mov	r29, r25
    de06:	0e 94 81 71 	call	0xe302	; 0xe302 <inverse>
    de0a:	9f 93       	push	r25
    de0c:	8f 93       	push	r24
    de0e:	7f 93       	push	r23
    de10:	6f 93       	push	r22
    de12:	0e 94 44 72 	call	0xe488	; 0xe488 <square>
atan():
    de16:	e0 ea       	ldi	r30, 0xA0	; 160
    de18:	f0 e0       	ldi	r31, 0x00	; 0
    de1a:	0e 94 a2 70 	call	0xe144	; 0xe144 <__fp_powser>
    de1e:	0e 94 16 71 	call	0xe22c	; 0xe22c <__fp_round>
    de22:	2f 91       	pop	r18
    de24:	3f 91       	pop	r19
    de26:	4f 91       	pop	r20
    de28:	5f 91       	pop	r21
    de2a:	0e 94 9c 71 	call	0xe338	; 0xe338 <__mulsf3x>
    de2e:	dd 23       	and	r29, r29
    de30:	51 f0       	breq	.+20     	; 0xde46 <atan+0x58>
    de32:	90 58       	subi	r25, 0x80	; 128
    de34:	a2 ea       	ldi	r26, 0xA2	; 162
    de36:	2a ed       	ldi	r18, 0xDA	; 218
    de38:	3f e0       	ldi	r19, 0x0F	; 15
    de3a:	49 ec       	ldi	r20, 0xC9	; 201
    de3c:	5f e3       	ldi	r21, 0x3F	; 63
    de3e:	d0 78       	andi	r29, 0x80	; 128
    de40:	5d 27       	eor	r21, r29
    de42:	0e 94 44 6e 	call	0xdc88	; 0xdc88 <__addsf3x>
    de46:	df 91       	pop	r29
    de48:	0c 94 16 71 	jmp	0xe22c	; 0xe22c <__fp_round>

0000de4c <__cmpsf2>:
__cmpsf2():
    de4c:	0e 94 4c 70 	call	0xe098	; 0xe098 <__fp_cmp>
    de50:	08 f4       	brcc	.+2      	; 0xde54 <__cmpsf2+0x8>
    de52:	81 e0       	ldi	r24, 0x01	; 1
    de54:	08 95       	ret

0000de56 <cos>:
cos():
    de56:	0e 94 ed 70 	call	0xe1da	; 0xe1da <__fp_rempio2>
    de5a:	e3 95       	inc	r30
    de5c:	0c 94 27 71 	jmp	0xe24e	; 0xe24e <__fp_sinus>

0000de60 <__divsf3>:
__divsf3():
    de60:	0e 94 44 6f 	call	0xde88	; 0xde88 <__divsf3x>
    de64:	0c 94 16 71 	jmp	0xe22c	; 0xe22c <__fp_round>
    de68:	0e 94 e4 70 	call	0xe1c8	; 0xe1c8 <__fp_pscB>
    de6c:	58 f0       	brcs	.+22     	; 0xde84 <__divsf3+0x24>
    de6e:	0e 94 dd 70 	call	0xe1ba	; 0xe1ba <__fp_pscA>
    de72:	40 f0       	brcs	.+16     	; 0xde84 <__divsf3+0x24>
    de74:	29 f4       	brne	.+10     	; 0xde80 <__divsf3+0x20>
    de76:	5f 3f       	cpi	r21, 0xFF	; 255
    de78:	29 f0       	breq	.+10     	; 0xde84 <__divsf3+0x24>
    de7a:	0c 94 70 70 	jmp	0xe0e0	; 0xe0e0 <__fp_inf>
    de7e:	51 11       	cpse	r21, r1
    de80:	0c 94 76 71 	jmp	0xe2ec	; 0xe2ec <__fp_szero>
    de84:	0c 94 9f 70 	jmp	0xe13e	; 0xe13e <__fp_nan>

0000de88 <__divsf3x>:
__divsf3x():
    de88:	0e 94 3b 71 	call	0xe276	; 0xe276 <__fp_split3>
    de8c:	68 f3       	brcs	.-38     	; 0xde68 <__divsf3+0x8>

0000de8e <__divsf3_pse>:
    de8e:	99 23       	and	r25, r25
    de90:	b1 f3       	breq	.-20     	; 0xde7e <__divsf3+0x1e>
    de92:	55 23       	and	r21, r21
    de94:	91 f3       	breq	.-28     	; 0xde7a <__divsf3+0x1a>
    de96:	95 1b       	sub	r25, r21
    de98:	55 0b       	sbc	r21, r21
    de9a:	bb 27       	eor	r27, r27
    de9c:	aa 27       	eor	r26, r26
    de9e:	62 17       	cp	r22, r18
    dea0:	73 07       	cpc	r23, r19
    dea2:	84 07       	cpc	r24, r20
    dea4:	38 f0       	brcs	.+14     	; 0xdeb4 <__divsf3_pse+0x26>
    dea6:	9f 5f       	subi	r25, 0xFF	; 255
    dea8:	5f 4f       	sbci	r21, 0xFF	; 255
    deaa:	22 0f       	add	r18, r18
    deac:	33 1f       	adc	r19, r19
    deae:	44 1f       	adc	r20, r20
    deb0:	aa 1f       	adc	r26, r26
    deb2:	a9 f3       	breq	.-22     	; 0xde9e <__divsf3_pse+0x10>
    deb4:	35 d0       	rcall	.+106    	; 0xdf20 <__divsf3_pse+0x92>
    deb6:	0e 2e       	mov	r0, r30
    deb8:	3a f0       	brmi	.+14     	; 0xdec8 <__divsf3_pse+0x3a>
    deba:	e0 e8       	ldi	r30, 0x80	; 128
    debc:	32 d0       	rcall	.+100    	; 0xdf22 <__divsf3_pse+0x94>
    debe:	91 50       	subi	r25, 0x01	; 1
    dec0:	50 40       	sbci	r21, 0x00	; 0
    dec2:	e6 95       	lsr	r30
    dec4:	00 1c       	adc	r0, r0
    dec6:	ca f7       	brpl	.-14     	; 0xdeba <__divsf3_pse+0x2c>
    dec8:	2b d0       	rcall	.+86     	; 0xdf20 <__divsf3_pse+0x92>
    deca:	fe 2f       	mov	r31, r30
    decc:	29 d0       	rcall	.+82     	; 0xdf20 <__divsf3_pse+0x92>
    dece:	66 0f       	add	r22, r22
    ded0:	77 1f       	adc	r23, r23
    ded2:	88 1f       	adc	r24, r24
    ded4:	bb 1f       	adc	r27, r27
    ded6:	26 17       	cp	r18, r22
    ded8:	37 07       	cpc	r19, r23
    deda:	48 07       	cpc	r20, r24
    dedc:	ab 07       	cpc	r26, r27
    dede:	b0 e8       	ldi	r27, 0x80	; 128
    dee0:	09 f0       	breq	.+2      	; 0xdee4 <__divsf3_pse+0x56>
    dee2:	bb 0b       	sbc	r27, r27
    dee4:	80 2d       	mov	r24, r0
    dee6:	bf 01       	movw	r22, r30
    dee8:	ff 27       	eor	r31, r31
    deea:	93 58       	subi	r25, 0x83	; 131
    deec:	5f 4f       	sbci	r21, 0xFF	; 255
    deee:	3a f0       	brmi	.+14     	; 0xdefe <__divsf3_pse+0x70>
    def0:	9e 3f       	cpi	r25, 0xFE	; 254
    def2:	51 05       	cpc	r21, r1
    def4:	78 f0       	brcs	.+30     	; 0xdf14 <__divsf3_pse+0x86>
    def6:	0c 94 70 70 	jmp	0xe0e0	; 0xe0e0 <__fp_inf>
    defa:	0c 94 76 71 	jmp	0xe2ec	; 0xe2ec <__fp_szero>
    defe:	5f 3f       	cpi	r21, 0xFF	; 255
    df00:	e4 f3       	brlt	.-8      	; 0xdefa <__divsf3_pse+0x6c>
    df02:	98 3e       	cpi	r25, 0xE8	; 232
    df04:	d4 f3       	brlt	.-12     	; 0xdefa <__divsf3_pse+0x6c>
    df06:	86 95       	lsr	r24
    df08:	77 95       	ror	r23
    df0a:	67 95       	ror	r22
    df0c:	b7 95       	ror	r27
    df0e:	f7 95       	ror	r31
    df10:	9f 5f       	subi	r25, 0xFF	; 255
    df12:	c9 f7       	brne	.-14     	; 0xdf06 <__divsf3_pse+0x78>
    df14:	88 0f       	add	r24, r24
    df16:	91 1d       	adc	r25, r1
    df18:	96 95       	lsr	r25
    df1a:	87 95       	ror	r24
    df1c:	97 f9       	bld	r25, 7
    df1e:	08 95       	ret
    df20:	e1 e0       	ldi	r30, 0x01	; 1
    df22:	66 0f       	add	r22, r22
    df24:	77 1f       	adc	r23, r23
    df26:	88 1f       	adc	r24, r24
    df28:	bb 1f       	adc	r27, r27
    df2a:	62 17       	cp	r22, r18
    df2c:	73 07       	cpc	r23, r19
    df2e:	84 07       	cpc	r24, r20
    df30:	ba 07       	cpc	r27, r26
    df32:	20 f0       	brcs	.+8      	; 0xdf3c <__divsf3_pse+0xae>
    df34:	62 1b       	sub	r22, r18
    df36:	73 0b       	sbc	r23, r19
    df38:	84 0b       	sbc	r24, r20
    df3a:	ba 0b       	sbc	r27, r26
    df3c:	ee 1f       	adc	r30, r30
    df3e:	88 f7       	brcc	.-30     	; 0xdf22 <__divsf3_pse+0x94>
    df40:	e0 95       	com	r30
    df42:	08 95       	ret

0000df44 <__fixsfsi>:
    df44:	0e 94 a9 6f 	call	0xdf52	; 0xdf52 <__fixunssfsi>
    df48:	68 94       	set
    df4a:	b1 11       	cpse	r27, r1
    df4c:	0c 94 76 71 	jmp	0xe2ec	; 0xe2ec <__fp_szero>
    df50:	08 95       	ret

0000df52 <__fixunssfsi>:
    df52:	0e 94 43 71 	call	0xe286	; 0xe286 <__fp_splitA>
    df56:	88 f0       	brcs	.+34     	; 0xdf7a <__fixunssfsi+0x28>
    df58:	9f 57       	subi	r25, 0x7F	; 127
    df5a:	98 f0       	brcs	.+38     	; 0xdf82 <__fixunssfsi+0x30>
    df5c:	b9 2f       	mov	r27, r25
    df5e:	99 27       	eor	r25, r25
    df60:	b7 51       	subi	r27, 0x17	; 23
    df62:	b0 f0       	brcs	.+44     	; 0xdf90 <__fixunssfsi+0x3e>
__fixunssfsi():
    df64:	e1 f0       	breq	.+56     	; 0xdf9e <__fixunssfsi+0x4c>
    df66:	66 0f       	add	r22, r22
    df68:	77 1f       	adc	r23, r23
    df6a:	88 1f       	adc	r24, r24
    df6c:	99 1f       	adc	r25, r25
    df6e:	1a f0       	brmi	.+6      	; 0xdf76 <__fixunssfsi+0x24>
    df70:	ba 95       	dec	r27
    df72:	c9 f7       	brne	.-14     	; 0xdf66 <__fixunssfsi+0x14>
    df74:	14 c0       	rjmp	.+40     	; 0xdf9e <__fixunssfsi+0x4c>
    df76:	b1 30       	cpi	r27, 0x01	; 1
    df78:	91 f0       	breq	.+36     	; 0xdf9e <__fixunssfsi+0x4c>
    df7a:	0e 94 75 71 	call	0xe2ea	; 0xe2ea <__fp_zero>
    df7e:	b1 e0       	ldi	r27, 0x01	; 1
    df80:	08 95       	ret
    df82:	0c 94 75 71 	jmp	0xe2ea	; 0xe2ea <__fp_zero>
    df86:	67 2f       	mov	r22, r23
    df88:	78 2f       	mov	r23, r24
    df8a:	88 27       	eor	r24, r24
    df8c:	b8 5f       	subi	r27, 0xF8	; 248
    df8e:	39 f0       	breq	.+14     	; 0xdf9e <__fixunssfsi+0x4c>
    df90:	b9 3f       	cpi	r27, 0xF9	; 249
    df92:	cc f3       	brlt	.-14     	; 0xdf86 <__fixunssfsi+0x34>
    df94:	86 95       	lsr	r24
    df96:	77 95       	ror	r23
    df98:	67 95       	ror	r22
    df9a:	b3 95       	inc	r27
    df9c:	d9 f7       	brne	.-10     	; 0xdf94 <__fixunssfsi+0x42>
    df9e:	3e f4       	brtc	.+14     	; 0xdfae <__fixunssfsi+0x5c>
    dfa0:	90 95       	com	r25
    dfa2:	80 95       	com	r24
    dfa4:	70 95       	com	r23
    dfa6:	61 95       	neg	r22
    dfa8:	7f 4f       	sbci	r23, 0xFF	; 255
    dfaa:	8f 4f       	sbci	r24, 0xFF	; 255
    dfac:	9f 4f       	sbci	r25, 0xFF	; 255
    dfae:	08 95       	ret

0000dfb0 <__floatunsisf>:
__floatunsisf():
    dfb0:	e8 94       	clt
    dfb2:	09 c0       	rjmp	.+18     	; 0xdfc6 <__floatsisf+0x12>

0000dfb4 <__floatsisf>:
    dfb4:	97 fb       	bst	r25, 7
    dfb6:	3e f4       	brtc	.+14     	; 0xdfc6 <__floatsisf+0x12>
    dfb8:	90 95       	com	r25
    dfba:	80 95       	com	r24
    dfbc:	70 95       	com	r23
    dfbe:	61 95       	neg	r22
    dfc0:	7f 4f       	sbci	r23, 0xFF	; 255
    dfc2:	8f 4f       	sbci	r24, 0xFF	; 255
    dfc4:	9f 4f       	sbci	r25, 0xFF	; 255
    dfc6:	99 23       	and	r25, r25
    dfc8:	a9 f0       	breq	.+42     	; 0xdff4 <__floatsisf+0x40>
    dfca:	f9 2f       	mov	r31, r25
    dfcc:	96 e9       	ldi	r25, 0x96	; 150
    dfce:	bb 27       	eor	r27, r27
    dfd0:	93 95       	inc	r25
    dfd2:	f6 95       	lsr	r31
    dfd4:	87 95       	ror	r24
    dfd6:	77 95       	ror	r23
    dfd8:	67 95       	ror	r22
    dfda:	b7 95       	ror	r27
    dfdc:	f1 11       	cpse	r31, r1
    dfde:	f8 cf       	rjmp	.-16     	; 0xdfd0 <__floatsisf+0x1c>
    dfe0:	fa f4       	brpl	.+62     	; 0xe020 <__floatsisf+0x6c>
    dfe2:	bb 0f       	add	r27, r27
    dfe4:	11 f4       	brne	.+4      	; 0xdfea <__floatsisf+0x36>
    dfe6:	60 ff       	sbrs	r22, 0
    dfe8:	1b c0       	rjmp	.+54     	; 0xe020 <__floatsisf+0x6c>
    dfea:	6f 5f       	subi	r22, 0xFF	; 255
    dfec:	7f 4f       	sbci	r23, 0xFF	; 255
    dfee:	8f 4f       	sbci	r24, 0xFF	; 255
    dff0:	9f 4f       	sbci	r25, 0xFF	; 255
    dff2:	16 c0       	rjmp	.+44     	; 0xe020 <__floatsisf+0x6c>
    dff4:	88 23       	and	r24, r24
    dff6:	11 f0       	breq	.+4      	; 0xdffc <__floatsisf+0x48>
    dff8:	96 e9       	ldi	r25, 0x96	; 150
    dffa:	11 c0       	rjmp	.+34     	; 0xe01e <__floatsisf+0x6a>
    dffc:	77 23       	and	r23, r23
    dffe:	21 f0       	breq	.+8      	; 0xe008 <__floatsisf+0x54>
    e000:	9e e8       	ldi	r25, 0x8E	; 142
    e002:	87 2f       	mov	r24, r23
    e004:	76 2f       	mov	r23, r22
    e006:	05 c0       	rjmp	.+10     	; 0xe012 <__floatsisf+0x5e>
    e008:	66 23       	and	r22, r22
    e00a:	71 f0       	breq	.+28     	; 0xe028 <__floatsisf+0x74>
    e00c:	96 e8       	ldi	r25, 0x86	; 134
    e00e:	86 2f       	mov	r24, r22
    e010:	70 e0       	ldi	r23, 0x00	; 0
    e012:	60 e0       	ldi	r22, 0x00	; 0
    e014:	2a f0       	brmi	.+10     	; 0xe020 <__floatsisf+0x6c>
    e016:	9a 95       	dec	r25
    e018:	66 0f       	add	r22, r22
    e01a:	77 1f       	adc	r23, r23
    e01c:	88 1f       	adc	r24, r24
    e01e:	da f7       	brpl	.-10     	; 0xe016 <__floatsisf+0x62>
    e020:	88 0f       	add	r24, r24
    e022:	96 95       	lsr	r25
    e024:	87 95       	ror	r24
    e026:	97 f9       	bld	r25, 7
    e028:	08 95       	ret

0000e02a <floor>:
floor():
    e02a:	0e 94 5d 71 	call	0xe2ba	; 0xe2ba <__fp_trunc>
    e02e:	90 f0       	brcs	.+36     	; 0xe054 <floor+0x2a>
    e030:	9f 37       	cpi	r25, 0x7F	; 127
    e032:	48 f4       	brcc	.+18     	; 0xe046 <floor+0x1c>
    e034:	91 11       	cpse	r25, r1
    e036:	16 f0       	brts	.+4      	; 0xe03c <floor+0x12>
    e038:	0c 94 76 71 	jmp	0xe2ec	; 0xe2ec <__fp_szero>
    e03c:	60 e0       	ldi	r22, 0x00	; 0
    e03e:	70 e0       	ldi	r23, 0x00	; 0
    e040:	80 e8       	ldi	r24, 0x80	; 128
    e042:	9f eb       	ldi	r25, 0xBF	; 191
    e044:	08 95       	ret
    e046:	26 f4       	brtc	.+8      	; 0xe050 <floor+0x26>
    e048:	1b 16       	cp	r1, r27
    e04a:	61 1d       	adc	r22, r1
    e04c:	71 1d       	adc	r23, r1
    e04e:	81 1d       	adc	r24, r1
    e050:	0c 94 76 70 	jmp	0xe0ec	; 0xe0ec <__fp_mintl>
    e054:	0c 94 91 70 	jmp	0xe122	; 0xe122 <__fp_mpack>

0000e058 <__fp_arccos>:
__fp_arccos():
    e058:	df 93       	push	r29
    e05a:	cf 93       	push	r28
    e05c:	1f 93       	push	r17
    e05e:	0f 93       	push	r16
    e060:	8b 01       	movw	r16, r22
    e062:	ec 01       	movw	r28, r24
    e064:	ed ec       	ldi	r30, 0xCD	; 205
    e066:	f0 e0       	ldi	r31, 0x00	; 0
    e068:	0e 94 a2 70 	call	0xe144	; 0xe144 <__fp_powser>
    e06c:	0e 94 16 71 	call	0xe22c	; 0xe22c <__fp_round>
    e070:	98 01       	movw	r18, r16
    e072:	ae 01       	movw	r20, r28
    e074:	8b 01       	movw	r16, r22
    e076:	ec 01       	movw	r28, r24
    e078:	60 e0       	ldi	r22, 0x00	; 0
    e07a:	70 e0       	ldi	r23, 0x00	; 0
    e07c:	80 e8       	ldi	r24, 0x80	; 128
    e07e:	9f e3       	ldi	r25, 0x3F	; 63
    e080:	0e 94 2c 6e 	call	0xdc58	; 0xdc58 <__subsf3>
    e084:	0e 94 04 72 	call	0xe408	; 0xe408 <sqrt>
    e088:	98 01       	movw	r18, r16
    e08a:	ae 01       	movw	r20, r28
    e08c:	0f 91       	pop	r16
    e08e:	1f 91       	pop	r17
    e090:	cf 91       	pop	r28
    e092:	df 91       	pop	r29
    e094:	0c 94 9c 71 	jmp	0xe338	; 0xe338 <__mulsf3x>

0000e098 <__fp_cmp>:
__fp_cmp():
    e098:	99 0f       	add	r25, r25
    e09a:	00 08       	sbc	r0, r0
    e09c:	55 0f       	add	r21, r21
    e09e:	aa 0b       	sbc	r26, r26
    e0a0:	e0 e8       	ldi	r30, 0x80	; 128
    e0a2:	fe ef       	ldi	r31, 0xFE	; 254
    e0a4:	16 16       	cp	r1, r22
    e0a6:	17 06       	cpc	r1, r23
    e0a8:	e8 07       	cpc	r30, r24
    e0aa:	f9 07       	cpc	r31, r25
    e0ac:	c0 f0       	brcs	.+48     	; 0xe0de <__fp_cmp+0x46>
    e0ae:	12 16       	cp	r1, r18
    e0b0:	13 06       	cpc	r1, r19
    e0b2:	e4 07       	cpc	r30, r20
    e0b4:	f5 07       	cpc	r31, r21
    e0b6:	98 f0       	brcs	.+38     	; 0xe0de <__fp_cmp+0x46>
    e0b8:	62 1b       	sub	r22, r18
    e0ba:	73 0b       	sbc	r23, r19
    e0bc:	84 0b       	sbc	r24, r20
    e0be:	95 0b       	sbc	r25, r21
    e0c0:	39 f4       	brne	.+14     	; 0xe0d0 <__fp_cmp+0x38>
    e0c2:	0a 26       	eor	r0, r26
    e0c4:	61 f0       	breq	.+24     	; 0xe0de <__fp_cmp+0x46>
    e0c6:	23 2b       	or	r18, r19
    e0c8:	24 2b       	or	r18, r20
    e0ca:	25 2b       	or	r18, r21
    e0cc:	21 f4       	brne	.+8      	; 0xe0d6 <__fp_cmp+0x3e>
    e0ce:	08 95       	ret
    e0d0:	0a 26       	eor	r0, r26
    e0d2:	09 f4       	brne	.+2      	; 0xe0d6 <__fp_cmp+0x3e>
    e0d4:	a1 40       	sbci	r26, 0x01	; 1
    e0d6:	a6 95       	lsr	r26
    e0d8:	8f ef       	ldi	r24, 0xFF	; 255
    e0da:	81 1d       	adc	r24, r1
    e0dc:	81 1d       	adc	r24, r1
    e0de:	08 95       	ret

0000e0e0 <__fp_inf>:
__fp_inf():
    e0e0:	97 f9       	bld	r25, 7
    e0e2:	9f 67       	ori	r25, 0x7F	; 127
    e0e4:	80 e8       	ldi	r24, 0x80	; 128
    e0e6:	70 e0       	ldi	r23, 0x00	; 0
    e0e8:	60 e0       	ldi	r22, 0x00	; 0
    e0ea:	08 95       	ret

0000e0ec <__fp_mintl>:
__fp_mintl():
    e0ec:	88 23       	and	r24, r24
    e0ee:	71 f4       	brne	.+28     	; 0xe10c <__fp_mintl+0x20>
    e0f0:	77 23       	and	r23, r23
    e0f2:	21 f0       	breq	.+8      	; 0xe0fc <__fp_mintl+0x10>
    e0f4:	98 50       	subi	r25, 0x08	; 8
    e0f6:	87 2b       	or	r24, r23
    e0f8:	76 2f       	mov	r23, r22
    e0fa:	07 c0       	rjmp	.+14     	; 0xe10a <__fp_mintl+0x1e>
    e0fc:	66 23       	and	r22, r22
    e0fe:	11 f4       	brne	.+4      	; 0xe104 <__fp_mintl+0x18>
    e100:	99 27       	eor	r25, r25
    e102:	0d c0       	rjmp	.+26     	; 0xe11e <__fp_mintl+0x32>
    e104:	90 51       	subi	r25, 0x10	; 16
    e106:	86 2b       	or	r24, r22
    e108:	70 e0       	ldi	r23, 0x00	; 0
    e10a:	60 e0       	ldi	r22, 0x00	; 0
    e10c:	2a f0       	brmi	.+10     	; 0xe118 <__fp_mintl+0x2c>
    e10e:	9a 95       	dec	r25
    e110:	66 0f       	add	r22, r22
    e112:	77 1f       	adc	r23, r23
    e114:	88 1f       	adc	r24, r24
    e116:	da f7       	brpl	.-10     	; 0xe10e <__fp_mintl+0x22>
    e118:	88 0f       	add	r24, r24
    e11a:	96 95       	lsr	r25
    e11c:	87 95       	ror	r24
    e11e:	97 f9       	bld	r25, 7
    e120:	08 95       	ret

0000e122 <__fp_mpack>:
__fp_mpack():
    e122:	9f 3f       	cpi	r25, 0xFF	; 255
    e124:	31 f0       	breq	.+12     	; 0xe132 <__fp_mpack_finite+0xc>

0000e126 <__fp_mpack_finite>:
    e126:	91 50       	subi	r25, 0x01	; 1
    e128:	20 f4       	brcc	.+8      	; 0xe132 <__fp_mpack_finite+0xc>
    e12a:	87 95       	ror	r24
    e12c:	77 95       	ror	r23
    e12e:	67 95       	ror	r22
    e130:	b7 95       	ror	r27
    e132:	88 0f       	add	r24, r24
    e134:	91 1d       	adc	r25, r1
    e136:	96 95       	lsr	r25
    e138:	87 95       	ror	r24
    e13a:	97 f9       	bld	r25, 7
    e13c:	08 95       	ret

0000e13e <__fp_nan>:
__fp_nan():
    e13e:	9f ef       	ldi	r25, 0xFF	; 255
    e140:	80 ec       	ldi	r24, 0xC0	; 192
    e142:	08 95       	ret

0000e144 <__fp_powser>:
__fp_powser():
    e144:	df 93       	push	r29
    e146:	cf 93       	push	r28
    e148:	1f 93       	push	r17
    e14a:	0f 93       	push	r16
    e14c:	ff 92       	push	r15
    e14e:	ef 92       	push	r14
    e150:	df 92       	push	r13
    e152:	7b 01       	movw	r14, r22
    e154:	8c 01       	movw	r16, r24
    e156:	68 94       	set
    e158:	06 c0       	rjmp	.+12     	; 0xe166 <__fp_powser+0x22>
    e15a:	da 2e       	mov	r13, r26
    e15c:	ef 01       	movw	r28, r30
    e15e:	0e 94 9c 71 	call	0xe338	; 0xe338 <__mulsf3x>
    e162:	fe 01       	movw	r30, r28
    e164:	e8 94       	clt
    e166:	a5 91       	lpm	r26, Z+
    e168:	25 91       	lpm	r18, Z+
    e16a:	35 91       	lpm	r19, Z+
    e16c:	45 91       	lpm	r20, Z+
    e16e:	55 91       	lpm	r21, Z+
    e170:	a6 f3       	brts	.-24     	; 0xe15a <__fp_powser+0x16>
    e172:	ef 01       	movw	r28, r30
    e174:	0e 94 44 6e 	call	0xdc88	; 0xdc88 <__addsf3x>
    e178:	fe 01       	movw	r30, r28
    e17a:	97 01       	movw	r18, r14
    e17c:	a8 01       	movw	r20, r16
    e17e:	da 94       	dec	r13
    e180:	69 f7       	brne	.-38     	; 0xe15c <__fp_powser+0x18>
    e182:	df 90       	pop	r13
    e184:	ef 90       	pop	r14
    e186:	ff 90       	pop	r15
    e188:	0f 91       	pop	r16
    e18a:	1f 91       	pop	r17
    e18c:	cf 91       	pop	r28
    e18e:	df 91       	pop	r29
    e190:	08 95       	ret

0000e192 <__fp_powsodd>:
__fp_powsodd():
    e192:	9f 93       	push	r25
    e194:	8f 93       	push	r24
    e196:	7f 93       	push	r23
    e198:	6f 93       	push	r22
    e19a:	ff 93       	push	r31
    e19c:	ef 93       	push	r30
    e19e:	9b 01       	movw	r18, r22
    e1a0:	ac 01       	movw	r20, r24
    e1a2:	0e 94 89 71 	call	0xe312	; 0xe312 <__mulsf3>
    e1a6:	ef 91       	pop	r30
    e1a8:	ff 91       	pop	r31
    e1aa:	0e 94 a2 70 	call	0xe144	; 0xe144 <__fp_powser>
    e1ae:	2f 91       	pop	r18
    e1b0:	3f 91       	pop	r19
    e1b2:	4f 91       	pop	r20
    e1b4:	5f 91       	pop	r21
    e1b6:	0c 94 89 71 	jmp	0xe312	; 0xe312 <__mulsf3>

0000e1ba <__fp_pscA>:
__fp_pscA():
    e1ba:	00 24       	eor	r0, r0
    e1bc:	0a 94       	dec	r0
    e1be:	16 16       	cp	r1, r22
    e1c0:	17 06       	cpc	r1, r23
    e1c2:	18 06       	cpc	r1, r24
    e1c4:	09 06       	cpc	r0, r25
    e1c6:	08 95       	ret

0000e1c8 <__fp_pscB>:
__fp_pscB():
    e1c8:	00 24       	eor	r0, r0
    e1ca:	0a 94       	dec	r0
    e1cc:	12 16       	cp	r1, r18
    e1ce:	13 06       	cpc	r1, r19
    e1d0:	14 06       	cpc	r1, r20
    e1d2:	05 06       	cpc	r0, r21
    e1d4:	08 95       	ret
    e1d6:	0c 94 9f 70 	jmp	0xe13e	; 0xe13e <__fp_nan>

0000e1da <__fp_rempio2>:
__fp_rempio2():
    e1da:	0e 94 43 71 	call	0xe286	; 0xe286 <__fp_splitA>
    e1de:	d8 f3       	brcs	.-10     	; 0xe1d6 <__fp_pscB+0xe>
    e1e0:	e8 94       	clt
    e1e2:	e0 e0       	ldi	r30, 0x00	; 0
    e1e4:	bb 27       	eor	r27, r27
    e1e6:	9f 57       	subi	r25, 0x7F	; 127
    e1e8:	f0 f0       	brcs	.+60     	; 0xe226 <__fp_rempio2+0x4c>
    e1ea:	2a ed       	ldi	r18, 0xDA	; 218
    e1ec:	3f e0       	ldi	r19, 0x0F	; 15
    e1ee:	49 ec       	ldi	r20, 0xC9	; 201
    e1f0:	06 c0       	rjmp	.+12     	; 0xe1fe <__fp_rempio2+0x24>
    e1f2:	ee 0f       	add	r30, r30
    e1f4:	bb 0f       	add	r27, r27
    e1f6:	66 1f       	adc	r22, r22
    e1f8:	77 1f       	adc	r23, r23
    e1fa:	88 1f       	adc	r24, r24
    e1fc:	28 f0       	brcs	.+10     	; 0xe208 <__fp_rempio2+0x2e>
    e1fe:	b2 3a       	cpi	r27, 0xA2	; 162
    e200:	62 07       	cpc	r22, r18
    e202:	73 07       	cpc	r23, r19
    e204:	84 07       	cpc	r24, r20
    e206:	28 f0       	brcs	.+10     	; 0xe212 <__fp_rempio2+0x38>
    e208:	b2 5a       	subi	r27, 0xA2	; 162
    e20a:	62 0b       	sbc	r22, r18
    e20c:	73 0b       	sbc	r23, r19
    e20e:	84 0b       	sbc	r24, r20
    e210:	e3 95       	inc	r30
    e212:	9a 95       	dec	r25
    e214:	72 f7       	brpl	.-36     	; 0xe1f2 <__fp_rempio2+0x18>
    e216:	80 38       	cpi	r24, 0x80	; 128
    e218:	30 f4       	brcc	.+12     	; 0xe226 <__fp_rempio2+0x4c>
    e21a:	9a 95       	dec	r25
    e21c:	bb 0f       	add	r27, r27
    e21e:	66 1f       	adc	r22, r22
    e220:	77 1f       	adc	r23, r23
    e222:	88 1f       	adc	r24, r24
    e224:	d2 f7       	brpl	.-12     	; 0xe21a <__fp_rempio2+0x40>
    e226:	90 48       	sbci	r25, 0x80	; 128
    e228:	0c 94 93 70 	jmp	0xe126	; 0xe126 <__fp_mpack_finite>

0000e22c <__fp_round>:
    e22c:	09 2e       	mov	r0, r25
    e22e:	03 94       	inc	r0
__fp_round():
    e230:	00 0c       	add	r0, r0
    e232:	11 f4       	brne	.+4      	; 0xe238 <__fp_round+0xc>
    e234:	88 23       	and	r24, r24
    e236:	52 f0       	brmi	.+20     	; 0xe24c <__fp_round+0x20>
    e238:	bb 0f       	add	r27, r27
    e23a:	40 f4       	brcc	.+16     	; 0xe24c <__fp_round+0x20>
    e23c:	bf 2b       	or	r27, r31
    e23e:	11 f4       	brne	.+4      	; 0xe244 <__fp_round+0x18>
    e240:	60 ff       	sbrs	r22, 0
    e242:	04 c0       	rjmp	.+8      	; 0xe24c <__fp_round+0x20>
    e244:	6f 5f       	subi	r22, 0xFF	; 255
    e246:	7f 4f       	sbci	r23, 0xFF	; 255
    e248:	8f 4f       	sbci	r24, 0xFF	; 255
    e24a:	9f 4f       	sbci	r25, 0xFF	; 255
    e24c:	08 95       	ret

0000e24e <__fp_sinus>:
__fp_sinus():
    e24e:	ef 93       	push	r30
    e250:	e0 ff       	sbrs	r30, 0
    e252:	07 c0       	rjmp	.+14     	; 0xe262 <__fp_sinus+0x14>
    e254:	a2 ea       	ldi	r26, 0xA2	; 162
    e256:	2a ed       	ldi	r18, 0xDA	; 218
    e258:	3f e0       	ldi	r19, 0x0F	; 15
    e25a:	49 ec       	ldi	r20, 0xC9	; 201
    e25c:	5f eb       	ldi	r21, 0xBF	; 191
    e25e:	0e 94 44 6e 	call	0xdc88	; 0xdc88 <__addsf3x>
    e262:	0e 94 16 71 	call	0xe22c	; 0xe22c <__fp_round>
    e266:	0f 90       	pop	r0
    e268:	03 94       	inc	r0
    e26a:	01 fc       	sbrc	r0, 1
    e26c:	90 58       	subi	r25, 0x80	; 128
    e26e:	e5 ef       	ldi	r30, 0xF5	; 245
    e270:	f0 e0       	ldi	r31, 0x00	; 0
    e272:	0c 94 c9 70 	jmp	0xe192	; 0xe192 <__fp_powsodd>

0000e276 <__fp_split3>:
__fp_split3():
    e276:	57 fd       	sbrc	r21, 7
    e278:	90 58       	subi	r25, 0x80	; 128
    e27a:	44 0f       	add	r20, r20
    e27c:	55 1f       	adc	r21, r21
    e27e:	59 f0       	breq	.+22     	; 0xe296 <__fp_splitA+0x10>
    e280:	5f 3f       	cpi	r21, 0xFF	; 255
    e282:	71 f0       	breq	.+28     	; 0xe2a0 <__fp_splitA+0x1a>
    e284:	47 95       	ror	r20

0000e286 <__fp_splitA>:
    e286:	88 0f       	add	r24, r24
    e288:	97 fb       	bst	r25, 7
    e28a:	99 1f       	adc	r25, r25
    e28c:	61 f0       	breq	.+24     	; 0xe2a6 <__fp_splitA+0x20>
    e28e:	9f 3f       	cpi	r25, 0xFF	; 255
    e290:	79 f0       	breq	.+30     	; 0xe2b0 <__fp_splitA+0x2a>
    e292:	87 95       	ror	r24
    e294:	08 95       	ret
    e296:	12 16       	cp	r1, r18
    e298:	13 06       	cpc	r1, r19
    e29a:	14 06       	cpc	r1, r20
    e29c:	55 1f       	adc	r21, r21
    e29e:	f2 cf       	rjmp	.-28     	; 0xe284 <__fp_split3+0xe>
    e2a0:	46 95       	lsr	r20
    e2a2:	f1 df       	rcall	.-30     	; 0xe286 <__fp_splitA>
    e2a4:	08 c0       	rjmp	.+16     	; 0xe2b6 <__fp_splitA+0x30>
    e2a6:	16 16       	cp	r1, r22
    e2a8:	17 06       	cpc	r1, r23
    e2aa:	18 06       	cpc	r1, r24
    e2ac:	99 1f       	adc	r25, r25
    e2ae:	f1 cf       	rjmp	.-30     	; 0xe292 <__fp_splitA+0xc>
    e2b0:	86 95       	lsr	r24
    e2b2:	71 05       	cpc	r23, r1
    e2b4:	61 05       	cpc	r22, r1
    e2b6:	08 94       	sec
    e2b8:	08 95       	ret

0000e2ba <__fp_trunc>:
__fp_trunc():
    e2ba:	0e 94 43 71 	call	0xe286	; 0xe286 <__fp_splitA>
    e2be:	a0 f0       	brcs	.+40     	; 0xe2e8 <__fp_trunc+0x2e>
    e2c0:	be e7       	ldi	r27, 0x7E	; 126
    e2c2:	b9 17       	cp	r27, r25
    e2c4:	88 f4       	brcc	.+34     	; 0xe2e8 <__fp_trunc+0x2e>
    e2c6:	bb 27       	eor	r27, r27
    e2c8:	9f 38       	cpi	r25, 0x8F	; 143
    e2ca:	60 f4       	brcc	.+24     	; 0xe2e4 <__fp_trunc+0x2a>
    e2cc:	16 16       	cp	r1, r22
    e2ce:	b1 1d       	adc	r27, r1
    e2d0:	67 2f       	mov	r22, r23
    e2d2:	78 2f       	mov	r23, r24
    e2d4:	88 27       	eor	r24, r24
    e2d6:	98 5f       	subi	r25, 0xF8	; 248
    e2d8:	f7 cf       	rjmp	.-18     	; 0xe2c8 <__fp_trunc+0xe>
    e2da:	86 95       	lsr	r24
    e2dc:	77 95       	ror	r23
    e2de:	67 95       	ror	r22
    e2e0:	b1 1d       	adc	r27, r1
    e2e2:	93 95       	inc	r25
    e2e4:	96 39       	cpi	r25, 0x96	; 150
    e2e6:	c8 f3       	brcs	.-14     	; 0xe2da <__fp_trunc+0x20>
    e2e8:	08 95       	ret

0000e2ea <__fp_zero>:
__fp_zero():
    e2ea:	e8 94       	clt

0000e2ec <__fp_szero>:
    e2ec:	bb 27       	eor	r27, r27
    e2ee:	66 27       	eor	r22, r22
    e2f0:	77 27       	eor	r23, r23
    e2f2:	cb 01       	movw	r24, r22
    e2f4:	97 f9       	bld	r25, 7
    e2f6:	08 95       	ret

0000e2f8 <__gesf2>:
__gesf2():
    e2f8:	0e 94 4c 70 	call	0xe098	; 0xe098 <__fp_cmp>
    e2fc:	08 f4       	brcc	.+2      	; 0xe300 <__gesf2+0x8>
    e2fe:	8f ef       	ldi	r24, 0xFF	; 255
    e300:	08 95       	ret

0000e302 <inverse>:
inverse():
    e302:	9b 01       	movw	r18, r22
    e304:	ac 01       	movw	r20, r24
    e306:	60 e0       	ldi	r22, 0x00	; 0
    e308:	70 e0       	ldi	r23, 0x00	; 0
    e30a:	80 e8       	ldi	r24, 0x80	; 128
    e30c:	9f e3       	ldi	r25, 0x3F	; 63
    e30e:	0c 94 30 6f 	jmp	0xde60	; 0xde60 <__divsf3>

0000e312 <__mulsf3>:
__mulsf3():
    e312:	0e 94 9c 71 	call	0xe338	; 0xe338 <__mulsf3x>
    e316:	0c 94 16 71 	jmp	0xe22c	; 0xe22c <__fp_round>
    e31a:	0e 94 dd 70 	call	0xe1ba	; 0xe1ba <__fp_pscA>
    e31e:	38 f0       	brcs	.+14     	; 0xe32e <__mulsf3+0x1c>
    e320:	0e 94 e4 70 	call	0xe1c8	; 0xe1c8 <__fp_pscB>
    e324:	20 f0       	brcs	.+8      	; 0xe32e <__mulsf3+0x1c>
    e326:	95 23       	and	r25, r21
    e328:	11 f0       	breq	.+4      	; 0xe32e <__mulsf3+0x1c>
    e32a:	0c 94 70 70 	jmp	0xe0e0	; 0xe0e0 <__fp_inf>
    e32e:	0c 94 9f 70 	jmp	0xe13e	; 0xe13e <__fp_nan>
    e332:	11 24       	eor	r1, r1
    e334:	0c 94 76 71 	jmp	0xe2ec	; 0xe2ec <__fp_szero>

0000e338 <__mulsf3x>:
__mulsf3x():
    e338:	0e 94 3b 71 	call	0xe276	; 0xe276 <__fp_split3>
    e33c:	70 f3       	brcs	.-36     	; 0xe31a <__mulsf3+0x8>

0000e33e <__mulsf3_pse>:
    e33e:	95 9f       	mul	r25, r21
    e340:	c1 f3       	breq	.-16     	; 0xe332 <__mulsf3+0x20>
    e342:	95 0f       	add	r25, r21
    e344:	50 e0       	ldi	r21, 0x00	; 0
    e346:	55 1f       	adc	r21, r21
    e348:	62 9f       	mul	r22, r18
    e34a:	f0 01       	movw	r30, r0
    e34c:	72 9f       	mul	r23, r18
    e34e:	bb 27       	eor	r27, r27
    e350:	f0 0d       	add	r31, r0
    e352:	b1 1d       	adc	r27, r1
    e354:	63 9f       	mul	r22, r19
    e356:	aa 27       	eor	r26, r26
    e358:	f0 0d       	add	r31, r0
    e35a:	b1 1d       	adc	r27, r1
    e35c:	aa 1f       	adc	r26, r26
    e35e:	64 9f       	mul	r22, r20
    e360:	66 27       	eor	r22, r22
    e362:	b0 0d       	add	r27, r0
    e364:	a1 1d       	adc	r26, r1
    e366:	66 1f       	adc	r22, r22
    e368:	82 9f       	mul	r24, r18
    e36a:	22 27       	eor	r18, r18
    e36c:	b0 0d       	add	r27, r0
    e36e:	a1 1d       	adc	r26, r1
    e370:	62 1f       	adc	r22, r18
    e372:	73 9f       	mul	r23, r19
    e374:	b0 0d       	add	r27, r0
    e376:	a1 1d       	adc	r26, r1
    e378:	62 1f       	adc	r22, r18
    e37a:	83 9f       	mul	r24, r19
    e37c:	a0 0d       	add	r26, r0
    e37e:	61 1d       	adc	r22, r1
    e380:	22 1f       	adc	r18, r18
    e382:	74 9f       	mul	r23, r20
    e384:	33 27       	eor	r19, r19
    e386:	a0 0d       	add	r26, r0
    e388:	61 1d       	adc	r22, r1
    e38a:	23 1f       	adc	r18, r19
    e38c:	84 9f       	mul	r24, r20
    e38e:	60 0d       	add	r22, r0
    e390:	21 1d       	adc	r18, r1
    e392:	82 2f       	mov	r24, r18
    e394:	76 2f       	mov	r23, r22
    e396:	6a 2f       	mov	r22, r26
    e398:	11 24       	eor	r1, r1
    e39a:	9f 57       	subi	r25, 0x7F	; 127
    e39c:	50 40       	sbci	r21, 0x00	; 0
    e39e:	9a f0       	brmi	.+38     	; 0xe3c6 <__mulsf3_pse+0x88>
    e3a0:	f1 f0       	breq	.+60     	; 0xe3de <__mulsf3_pse+0xa0>
    e3a2:	88 23       	and	r24, r24
    e3a4:	4a f0       	brmi	.+18     	; 0xe3b8 <__mulsf3_pse+0x7a>
    e3a6:	ee 0f       	add	r30, r30
    e3a8:	ff 1f       	adc	r31, r31
    e3aa:	bb 1f       	adc	r27, r27
    e3ac:	66 1f       	adc	r22, r22
    e3ae:	77 1f       	adc	r23, r23
    e3b0:	88 1f       	adc	r24, r24
    e3b2:	91 50       	subi	r25, 0x01	; 1
    e3b4:	50 40       	sbci	r21, 0x00	; 0
    e3b6:	a9 f7       	brne	.-22     	; 0xe3a2 <__mulsf3_pse+0x64>
    e3b8:	9e 3f       	cpi	r25, 0xFE	; 254
    e3ba:	51 05       	cpc	r21, r1
    e3bc:	80 f0       	brcs	.+32     	; 0xe3de <__mulsf3_pse+0xa0>
    e3be:	0c 94 70 70 	jmp	0xe0e0	; 0xe0e0 <__fp_inf>
    e3c2:	0c 94 76 71 	jmp	0xe2ec	; 0xe2ec <__fp_szero>
    e3c6:	5f 3f       	cpi	r21, 0xFF	; 255
    e3c8:	e4 f3       	brlt	.-8      	; 0xe3c2 <__mulsf3_pse+0x84>
    e3ca:	98 3e       	cpi	r25, 0xE8	; 232
    e3cc:	d4 f3       	brlt	.-12     	; 0xe3c2 <__mulsf3_pse+0x84>
    e3ce:	86 95       	lsr	r24
    e3d0:	77 95       	ror	r23
    e3d2:	67 95       	ror	r22
    e3d4:	b7 95       	ror	r27
    e3d6:	f7 95       	ror	r31
    e3d8:	e7 95       	ror	r30
    e3da:	9f 5f       	subi	r25, 0xFF	; 255
    e3dc:	c1 f7       	brne	.-16     	; 0xe3ce <__mulsf3_pse+0x90>
    e3de:	fe 2b       	or	r31, r30
    e3e0:	88 0f       	add	r24, r24
    e3e2:	91 1d       	adc	r25, r1
    e3e4:	96 95       	lsr	r25
    e3e6:	87 95       	ror	r24
    e3e8:	97 f9       	bld	r25, 7
    e3ea:	08 95       	ret

0000e3ec <sin>:
    e3ec:	9f 93       	push	r25
    e3ee:	0e 94 ed 70 	call	0xe1da	; 0xe1da <__fp_rempio2>
    e3f2:	0f 90       	pop	r0
    e3f4:	07 fc       	sbrc	r0, 7
    e3f6:	ee 5f       	subi	r30, 0xFE	; 254
    e3f8:	0c 94 27 71 	jmp	0xe24e	; 0xe24e <__fp_sinus>
    e3fc:	19 f4       	brne	.+6      	; 0xe404 <sin+0x18>
    e3fe:	16 f4       	brtc	.+4      	; 0xe404 <sin+0x18>
    e400:	0c 94 9f 70 	jmp	0xe13e	; 0xe13e <__fp_nan>
    e404:	0c 94 91 70 	jmp	0xe122	; 0xe122 <__fp_mpack>

0000e408 <sqrt>:
    e408:	0e 94 43 71 	call	0xe286	; 0xe286 <__fp_splitA>
sqrt():
    e40c:	b8 f3       	brcs	.-18     	; 0xe3fc <sin+0x10>
    e40e:	99 23       	and	r25, r25
    e410:	c9 f3       	breq	.-14     	; 0xe404 <sin+0x18>
    e412:	b6 f3       	brts	.-20     	; 0xe400 <sin+0x14>
    e414:	9f 57       	subi	r25, 0x7F	; 127
    e416:	55 0b       	sbc	r21, r21
    e418:	87 ff       	sbrs	r24, 7
    e41a:	0e 94 72 72 	call	0xe4e4	; 0xe4e4 <__fp_norm2>
    e41e:	00 24       	eor	r0, r0
    e420:	a0 e6       	ldi	r26, 0x60	; 96
    e422:	40 ea       	ldi	r20, 0xA0	; 160
    e424:	90 01       	movw	r18, r0
    e426:	80 58       	subi	r24, 0x80	; 128
    e428:	56 95       	lsr	r21
    e42a:	97 95       	ror	r25
    e42c:	28 f4       	brcc	.+10     	; 0xe438 <sqrt+0x30>
    e42e:	80 5c       	subi	r24, 0xC0	; 192
    e430:	66 0f       	add	r22, r22
    e432:	77 1f       	adc	r23, r23
    e434:	88 1f       	adc	r24, r24
    e436:	20 f0       	brcs	.+8      	; 0xe440 <sqrt+0x38>
    e438:	26 17       	cp	r18, r22
    e43a:	37 07       	cpc	r19, r23
    e43c:	48 07       	cpc	r20, r24
    e43e:	30 f4       	brcc	.+12     	; 0xe44c <sqrt+0x44>
    e440:	62 1b       	sub	r22, r18
    e442:	73 0b       	sbc	r23, r19
    e444:	84 0b       	sbc	r24, r20
    e446:	20 29       	or	r18, r0
    e448:	31 29       	or	r19, r1
    e44a:	4a 2b       	or	r20, r26
    e44c:	a6 95       	lsr	r26
    e44e:	17 94       	ror	r1
    e450:	07 94       	ror	r0
    e452:	20 25       	eor	r18, r0
    e454:	31 25       	eor	r19, r1
    e456:	4a 27       	eor	r20, r26
    e458:	58 f7       	brcc	.-42     	; 0xe430 <sqrt+0x28>
    e45a:	66 0f       	add	r22, r22
    e45c:	77 1f       	adc	r23, r23
    e45e:	88 1f       	adc	r24, r24
    e460:	20 f0       	brcs	.+8      	; 0xe46a <sqrt+0x62>
    e462:	26 17       	cp	r18, r22
    e464:	37 07       	cpc	r19, r23
    e466:	48 07       	cpc	r20, r24
    e468:	30 f4       	brcc	.+12     	; 0xe476 <sqrt+0x6e>
    e46a:	62 0b       	sbc	r22, r18
    e46c:	73 0b       	sbc	r23, r19
    e46e:	84 0b       	sbc	r24, r20
    e470:	20 0d       	add	r18, r0
    e472:	31 1d       	adc	r19, r1
    e474:	41 1d       	adc	r20, r1
    e476:	a0 95       	com	r26
    e478:	81 f7       	brne	.-32     	; 0xe45a <sqrt+0x52>
    e47a:	b9 01       	movw	r22, r18
    e47c:	84 2f       	mov	r24, r20
    e47e:	91 58       	subi	r25, 0x81	; 129
    e480:	88 0f       	add	r24, r24
    e482:	96 95       	lsr	r25
    e484:	87 95       	ror	r24
    e486:	08 95       	ret

0000e488 <square>:
    e488:	9b 01       	movw	r18, r22
    e48a:	ac 01       	movw	r20, r24
    e48c:	0c 94 89 71 	jmp	0xe312	; 0xe312 <__mulsf3>

0000e490 <tan>:
    e490:	df 93       	push	r29
    e492:	d9 2f       	mov	r29, r25
tan():
    e494:	0e 94 ed 70 	call	0xe1da	; 0xe1da <__fp_rempio2>
    e498:	e6 95       	lsr	r30
    e49a:	d7 95       	ror	r29
    e49c:	2a ed       	ldi	r18, 0xDA	; 218
    e49e:	3f e0       	ldi	r19, 0x0F	; 15
    e4a0:	49 e4       	ldi	r20, 0x49	; 73
    e4a2:	5f e3       	ldi	r21, 0x3F	; 63
    e4a4:	b3 3a       	cpi	r27, 0xA3	; 163
    e4a6:	62 07       	cpc	r22, r18
    e4a8:	73 07       	cpc	r23, r19
    e4aa:	84 07       	cpc	r24, r20
    e4ac:	95 07       	cpc	r25, r21
    e4ae:	d7 95       	ror	r29
    e4b0:	3a f0       	brmi	.+14     	; 0xe4c0 <tan+0x30>
    e4b2:	a2 ea       	ldi	r26, 0xA2	; 162
    e4b4:	49 ec       	ldi	r20, 0xC9	; 201
    e4b6:	90 68       	ori	r25, 0x80	; 128
    e4b8:	0e 94 44 6e 	call	0xdc88	; 0xdc88 <__addsf3x>
    e4bc:	0e 94 16 71 	call	0xe22c	; 0xe22c <__fp_round>
    e4c0:	e3 e1       	ldi	r30, 0x13	; 19
    e4c2:	f1 e0       	ldi	r31, 0x01	; 1
    e4c4:	0e 94 c9 70 	call	0xe192	; 0xe192 <__fp_powsodd>
    e4c8:	dd 0f       	add	r29, r29
    e4ca:	13 f0       	brvs	.+4      	; 0xe4d0 <tan+0x40>
    e4cc:	0e 94 81 71 	call	0xe302	; 0xe302 <inverse>
    e4d0:	dd 0f       	add	r29, r29
    e4d2:	0b f4       	brvc	.+2      	; 0xe4d6 <tan+0x46>
    e4d4:	90 58       	subi	r25, 0x80	; 128
    e4d6:	df 91       	pop	r29
    e4d8:	08 95       	ret

0000e4da <__unordsf2>:
__unordsf2():
    e4da:	0e 94 4c 70 	call	0xe098	; 0xe098 <__fp_cmp>
    e4de:	88 0b       	sbc	r24, r24
    e4e0:	99 0b       	sbc	r25, r25
    e4e2:	08 95       	ret

0000e4e4 <__fp_norm2>:
__fp_norm2():
    e4e4:	91 50       	subi	r25, 0x01	; 1
    e4e6:	50 40       	sbci	r21, 0x00	; 0
    e4e8:	66 0f       	add	r22, r22
    e4ea:	77 1f       	adc	r23, r23
    e4ec:	88 1f       	adc	r24, r24
    e4ee:	d2 f7       	brpl	.-12     	; 0xe4e4 <__fp_norm2>
    e4f0:	08 95       	ret

0000e4f2 <__mulsi3>:
__mulsi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:648
    e4f2:	db 01       	movw	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:649
    e4f4:	8f 93       	push	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:650
    e4f6:	9f 93       	push	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:651
    e4f8:	0e 94 02 73 	call	0xe604	; 0xe604 <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:652
    e4fc:	bf 91       	pop	r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:653
    e4fe:	af 91       	pop	r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:655
    e500:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:656
    e502:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:657
    e504:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:658
    e506:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:659
    e508:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:660
    e50a:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:661
    e50c:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:662
    e50e:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:663
    e510:	08 95       	ret

0000e512 <__udivmodqi4>:
__udivmodqi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1346
    e512:	99 1b       	sub	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1347
    e514:	79 e0       	ldi	r23, 0x09	; 9
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1348
    e516:	04 c0       	rjmp	.+8      	; 0xe520 <__udivmodqi4_ep>

0000e518 <__udivmodqi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1350
    e518:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1351
    e51a:	96 17       	cp	r25, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1352
    e51c:	08 f0       	brcs	.+2      	; 0xe520 <__udivmodqi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1353
    e51e:	96 1b       	sub	r25, r22

0000e520 <__udivmodqi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1355
    e520:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1356
    e522:	7a 95       	dec	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1357
    e524:	c9 f7       	brne	.-14     	; 0xe518 <__udivmodqi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1358
    e526:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1360
    e528:	08 95       	ret

0000e52a <__divmodhi4>:
__divmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1440
    e52a:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1441
    e52c:	07 2e       	mov	r0, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1442
    e52e:	16 f4       	brtc	.+4      	; 0xe534 <__divmodhi4+0xa>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1443
    e530:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1444
    e532:	07 d0       	rcall	.+14     	; 0xe542 <__divmodhi4_neg1>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1446
    e534:	77 fd       	sbrc	r23, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1447
    e536:	09 d0       	rcall	.+18     	; 0xe54a <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1448
    e538:	0e 94 15 73 	call	0xe62a	; 0xe62a <__udivmodhi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1449
    e53c:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1450
    e53e:	05 d0       	rcall	.+10     	; 0xe54a <__divmodhi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1451
    e540:	3e f4       	brtc	.+14     	; 0xe550 <__divmodhi4_exit>

0000e542 <__divmodhi4_neg1>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1454
    e542:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1455
    e544:	81 95       	neg	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1456
    e546:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1457
    e548:	08 95       	ret

0000e54a <__divmodhi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1460
    e54a:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1461
    e54c:	61 95       	neg	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1462
    e54e:	7f 4f       	sbci	r23, 0xFF	; 255

0000e550 <__divmodhi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1464
    e550:	08 95       	ret

0000e552 <__udivmodsi4>:
__udivmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1638
    e552:	a1 e2       	ldi	r26, 0x21	; 33
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1639
    e554:	1a 2e       	mov	r1, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1640
    e556:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1641
    e558:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1642
    e55a:	fd 01       	movw	r30, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1644
    e55c:	0d c0       	rjmp	.+26     	; 0xe578 <__udivmodsi4_ep>

0000e55e <__udivmodsi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1646
    e55e:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1647
    e560:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1648
    e562:	ee 1f       	adc	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1649
    e564:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1650
    e566:	a2 17       	cp	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1651
    e568:	b3 07       	cpc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1652
    e56a:	e4 07       	cpc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1653
    e56c:	f5 07       	cpc	r31, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1654
    e56e:	20 f0       	brcs	.+8      	; 0xe578 <__udivmodsi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1655
    e570:	a2 1b       	sub	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1656
    e572:	b3 0b       	sbc	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1657
    e574:	e4 0b       	sbc	r30, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1658
    e576:	f5 0b       	sbc	r31, r21

0000e578 <__udivmodsi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1660
    e578:	66 1f       	adc	r22, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1661
    e57a:	77 1f       	adc	r23, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1662
    e57c:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1663
    e57e:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1664
    e580:	1a 94       	dec	r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1665
    e582:	69 f7       	brne	.-38     	; 0xe55e <__udivmodsi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1667
    e584:	60 95       	com	r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1668
    e586:	70 95       	com	r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1669
    e588:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1670
    e58a:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1672
    e58c:	9b 01       	movw	r18, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1674
    e58e:	ac 01       	movw	r20, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1676
    e590:	bd 01       	movw	r22, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1678
    e592:	cf 01       	movw	r24, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1680
    e594:	08 95       	ret

0000e596 <__divmodsi4>:
__divmodsi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1686
    e596:	05 2e       	mov	r0, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1687
    e598:	97 fb       	bst	r25, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1688
    e59a:	1e f4       	brtc	.+6      	; 0xe5a2 <__divmodsi4+0xc>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1689
    e59c:	00 94       	com	r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1690
    e59e:	0e 94 e2 72 	call	0xe5c4	; 0xe5c4 <__negsi2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1692
    e5a2:	57 fd       	sbrc	r21, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1693
    e5a4:	07 d0       	rcall	.+14     	; 0xe5b4 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1694
    e5a6:	0e 94 a9 72 	call	0xe552	; 0xe552 <__udivmodsi4>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1695
    e5aa:	07 fc       	sbrc	r0, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1696
    e5ac:	03 d0       	rcall	.+6      	; 0xe5b4 <__divmodsi4_neg2>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1697
    e5ae:	4e f4       	brtc	.+18     	; 0xe5c2 <__divmodsi4_exit>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1698
    e5b0:	0c 94 e2 72 	jmp	0xe5c4	; 0xe5c4 <__negsi2>

0000e5b4 <__divmodsi4_neg2>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1701
    e5b4:	50 95       	com	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1702
    e5b6:	40 95       	com	r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1703
    e5b8:	30 95       	com	r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1704
    e5ba:	21 95       	neg	r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1705
    e5bc:	3f 4f       	sbci	r19, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1706
    e5be:	4f 4f       	sbci	r20, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1707
    e5c0:	5f 4f       	sbci	r21, 0xFF	; 255

0000e5c2 <__divmodsi4_exit>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1709
    e5c2:	08 95       	ret

0000e5c4 <__negsi2>:
__negsi2():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1718
    e5c4:	90 95       	com	r25
    e5c6:	80 95       	com	r24
    e5c8:	70 95       	com	r23
    e5ca:	61 95       	neg	r22
    e5cc:	7f 4f       	sbci	r23, 0xFF	; 255
    e5ce:	8f 4f       	sbci	r24, 0xFF	; 255
    e5d0:	9f 4f       	sbci	r25, 0xFF	; 255
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1719
    e5d2:	08 95       	ret

0000e5d4 <__tablejump2__>:
__tablejump2__():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    e5d4:	ee 0f       	add	r30, r30
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    e5d6:	ff 1f       	adc	r31, r31
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2304
    e5d8:	00 24       	eor	r0, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2305
    e5da:	00 1c       	adc	r0, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2306
    e5dc:	0b be       	out	0x3b, r0	; 59
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2312
    e5de:	07 90       	elpm	r0, Z+
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2313
    e5e0:	f6 91       	elpm	r31, Z
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2314
    e5e2:	e0 2d       	mov	r30, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2319
    e5e4:	09 94       	ijmp

0000e5e6 <__umulhisi3>:
__umulhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:564
    e5e6:	a2 9f       	mul	r26, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:565
    e5e8:	b0 01       	movw	r22, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:566
    e5ea:	b3 9f       	mul	r27, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:567
    e5ec:	c0 01       	movw	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:568
    e5ee:	a3 9f       	mul	r26, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:573
    e5f0:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:574
    e5f2:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:575
    e5f4:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:576
    e5f6:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:580
    e5f8:	b2 9f       	mul	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:581
    e5fa:	70 0d       	add	r23, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:582
    e5fc:	81 1d       	adc	r24, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:583
    e5fe:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:584
    e600:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:585
    e602:	08 95       	ret

0000e604 <__muluhisi3>:
__muluhisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:626
    e604:	0e 94 f3 72 	call	0xe5e6	; 0xe5e6 <__umulhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:627
    e608:	a5 9f       	mul	r26, r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:628
    e60a:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:629
    e60c:	b4 9f       	mul	r27, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:630
    e60e:	90 0d       	add	r25, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:631
    e610:	a4 9f       	mul	r26, r20
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:632
    e612:	80 0d       	add	r24, r0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:633
    e614:	91 1d       	adc	r25, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:634
    e616:	11 24       	eor	r1, r1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:635
    e618:	08 95       	ret

0000e61a <__mulshisi3>:
__mulshisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:603
    e61a:	b7 ff       	sbrs	r27, 7
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:605
    e61c:	0c 94 02 73 	jmp	0xe604	; 0xe604 <__muluhisi3>

0000e620 <__mulohisi3>:
__mulohisi3():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:613
    e620:	0e 94 02 73 	call	0xe604	; 0xe604 <__muluhisi3>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:615
    e624:	82 1b       	sub	r24, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:616
    e626:	93 0b       	sbc	r25, r19
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:617
    e628:	08 95       	ret

0000e62a <__udivmodhi4>:
__udivmodhi4():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1408
    e62a:	aa 1b       	sub	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1409
    e62c:	bb 1b       	sub	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1410
    e62e:	51 e1       	ldi	r21, 0x11	; 17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1411
    e630:	07 c0       	rjmp	.+14     	; 0xe640 <__udivmodhi4_ep>

0000e632 <__udivmodhi4_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1413
    e632:	aa 1f       	adc	r26, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1414
    e634:	bb 1f       	adc	r27, r27
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1415
    e636:	a6 17       	cp	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1416
    e638:	b7 07       	cpc	r27, r23
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1417
    e63a:	10 f0       	brcs	.+4      	; 0xe640 <__udivmodhi4_ep>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1418
    e63c:	a6 1b       	sub	r26, r22
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1419
    e63e:	b7 0b       	sbc	r27, r23

0000e640 <__udivmodhi4_ep>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1421
    e640:	88 1f       	adc	r24, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1422
    e642:	99 1f       	adc	r25, r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1423
    e644:	5a 95       	dec	r21
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1424
    e646:	a9 f7       	brne	.-22     	; 0xe632 <__udivmodhi4_loop>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1425
    e648:	80 95       	com	r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1426
    e64a:	90 95       	com	r25
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1428
    e64c:	bc 01       	movw	r22, r24
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1430
    e64e:	cd 01       	movw	r24, r26
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:1432
    e650:	08 95       	ret

0000e652 <malloc>:
malloc():
    e652:	0f 93       	push	r16
    e654:	1f 93       	push	r17
    e656:	cf 93       	push	r28
    e658:	df 93       	push	r29
    e65a:	82 30       	cpi	r24, 0x02	; 2
    e65c:	91 05       	cpc	r25, r1
    e65e:	10 f4       	brcc	.+4      	; 0xe664 <malloc+0x12>
    e660:	82 e0       	ldi	r24, 0x02	; 2
    e662:	90 e0       	ldi	r25, 0x00	; 0
    e664:	e0 91 b6 0a 	lds	r30, 0x0AB6	; 0x800ab6 <__flp>
    e668:	f0 91 b7 0a 	lds	r31, 0x0AB7	; 0x800ab7 <__flp+0x1>
    e66c:	30 e0       	ldi	r19, 0x00	; 0
    e66e:	20 e0       	ldi	r18, 0x00	; 0
    e670:	b0 e0       	ldi	r27, 0x00	; 0
    e672:	a0 e0       	ldi	r26, 0x00	; 0
    e674:	30 97       	sbiw	r30, 0x00	; 0
    e676:	99 f4       	brne	.+38     	; 0xe69e <malloc+0x4c>
    e678:	21 15       	cp	r18, r1
    e67a:	31 05       	cpc	r19, r1
    e67c:	09 f4       	brne	.+2      	; 0xe680 <malloc+0x2e>
    e67e:	4a c0       	rjmp	.+148    	; 0xe714 <malloc+0xc2>
    e680:	28 1b       	sub	r18, r24
    e682:	39 0b       	sbc	r19, r25
    e684:	24 30       	cpi	r18, 0x04	; 4
    e686:	31 05       	cpc	r19, r1
    e688:	d8 f5       	brcc	.+118    	; 0xe700 <malloc+0xae>
    e68a:	8a 81       	ldd	r24, Y+2	; 0x02
    e68c:	9b 81       	ldd	r25, Y+3	; 0x03
    e68e:	61 15       	cp	r22, r1
    e690:	71 05       	cpc	r23, r1
    e692:	89 f1       	breq	.+98     	; 0xe6f6 <malloc+0xa4>
    e694:	fb 01       	movw	r30, r22
    e696:	93 83       	std	Z+3, r25	; 0x03
    e698:	82 83       	std	Z+2, r24	; 0x02
    e69a:	fe 01       	movw	r30, r28
    e69c:	11 c0       	rjmp	.+34     	; 0xe6c0 <malloc+0x6e>
    e69e:	40 81       	ld	r20, Z
    e6a0:	51 81       	ldd	r21, Z+1	; 0x01
    e6a2:	02 81       	ldd	r16, Z+2	; 0x02
    e6a4:	13 81       	ldd	r17, Z+3	; 0x03
    e6a6:	48 17       	cp	r20, r24
    e6a8:	59 07       	cpc	r21, r25
    e6aa:	e0 f0       	brcs	.+56     	; 0xe6e4 <malloc+0x92>
    e6ac:	48 17       	cp	r20, r24
    e6ae:	59 07       	cpc	r21, r25
    e6b0:	99 f4       	brne	.+38     	; 0xe6d8 <malloc+0x86>
    e6b2:	10 97       	sbiw	r26, 0x00	; 0
    e6b4:	61 f0       	breq	.+24     	; 0xe6ce <malloc+0x7c>
    e6b6:	12 96       	adiw	r26, 0x02	; 2
    e6b8:	0c 93       	st	X, r16
    e6ba:	12 97       	sbiw	r26, 0x02	; 2
    e6bc:	13 96       	adiw	r26, 0x03	; 3
    e6be:	1c 93       	st	X, r17
    e6c0:	32 96       	adiw	r30, 0x02	; 2
    e6c2:	cf 01       	movw	r24, r30
    e6c4:	df 91       	pop	r29
    e6c6:	cf 91       	pop	r28
    e6c8:	1f 91       	pop	r17
    e6ca:	0f 91       	pop	r16
    e6cc:	08 95       	ret
    e6ce:	00 93 b6 0a 	sts	0x0AB6, r16	; 0x800ab6 <__flp>
    e6d2:	10 93 b7 0a 	sts	0x0AB7, r17	; 0x800ab7 <__flp+0x1>
    e6d6:	f4 cf       	rjmp	.-24     	; 0xe6c0 <malloc+0x6e>
    e6d8:	21 15       	cp	r18, r1
    e6da:	31 05       	cpc	r19, r1
    e6dc:	51 f0       	breq	.+20     	; 0xe6f2 <malloc+0xa0>
    e6de:	42 17       	cp	r20, r18
    e6e0:	53 07       	cpc	r21, r19
    e6e2:	38 f0       	brcs	.+14     	; 0xe6f2 <malloc+0xa0>
    e6e4:	a9 01       	movw	r20, r18
    e6e6:	db 01       	movw	r26, r22
    e6e8:	9a 01       	movw	r18, r20
    e6ea:	bd 01       	movw	r22, r26
    e6ec:	df 01       	movw	r26, r30
    e6ee:	f8 01       	movw	r30, r16
    e6f0:	c1 cf       	rjmp	.-126    	; 0xe674 <malloc+0x22>
    e6f2:	ef 01       	movw	r28, r30
    e6f4:	f9 cf       	rjmp	.-14     	; 0xe6e8 <malloc+0x96>
    e6f6:	90 93 b7 0a 	sts	0x0AB7, r25	; 0x800ab7 <__flp+0x1>
    e6fa:	80 93 b6 0a 	sts	0x0AB6, r24	; 0x800ab6 <__flp>
    e6fe:	cd cf       	rjmp	.-102    	; 0xe69a <malloc+0x48>
    e700:	fe 01       	movw	r30, r28
    e702:	e2 0f       	add	r30, r18
    e704:	f3 1f       	adc	r31, r19
    e706:	81 93       	st	Z+, r24
    e708:	91 93       	st	Z+, r25
    e70a:	22 50       	subi	r18, 0x02	; 2
    e70c:	31 09       	sbc	r19, r1
    e70e:	39 83       	std	Y+1, r19	; 0x01
    e710:	28 83       	st	Y, r18
    e712:	d7 cf       	rjmp	.-82     	; 0xe6c2 <malloc+0x70>
    e714:	20 91 b4 0a 	lds	r18, 0x0AB4	; 0x800ab4 <__brkval>
    e718:	30 91 b5 0a 	lds	r19, 0x0AB5	; 0x800ab5 <__brkval+0x1>
    e71c:	23 2b       	or	r18, r19
    e71e:	41 f4       	brne	.+16     	; 0xe730 <malloc+0xde>
    e720:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    e724:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    e728:	30 93 b5 0a 	sts	0x0AB5, r19	; 0x800ab5 <__brkval+0x1>
    e72c:	20 93 b4 0a 	sts	0x0AB4, r18	; 0x800ab4 <__brkval>
    e730:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    e734:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    e738:	21 15       	cp	r18, r1
    e73a:	31 05       	cpc	r19, r1
    e73c:	41 f4       	brne	.+16     	; 0xe74e <malloc+0xfc>
    e73e:	2d b7       	in	r18, 0x3d	; 61
    e740:	3e b7       	in	r19, 0x3e	; 62
    e742:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    e746:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    e74a:	24 1b       	sub	r18, r20
    e74c:	35 0b       	sbc	r19, r21
    e74e:	e0 91 b4 0a 	lds	r30, 0x0AB4	; 0x800ab4 <__brkval>
    e752:	f0 91 b5 0a 	lds	r31, 0x0AB5	; 0x800ab5 <__brkval+0x1>
    e756:	e2 17       	cp	r30, r18
    e758:	f3 07       	cpc	r31, r19
    e75a:	a0 f4       	brcc	.+40     	; 0xe784 <malloc+0x132>
    e75c:	2e 1b       	sub	r18, r30
    e75e:	3f 0b       	sbc	r19, r31
    e760:	28 17       	cp	r18, r24
    e762:	39 07       	cpc	r19, r25
    e764:	78 f0       	brcs	.+30     	; 0xe784 <malloc+0x132>
    e766:	ac 01       	movw	r20, r24
    e768:	4e 5f       	subi	r20, 0xFE	; 254
    e76a:	5f 4f       	sbci	r21, 0xFF	; 255
    e76c:	24 17       	cp	r18, r20
    e76e:	35 07       	cpc	r19, r21
    e770:	48 f0       	brcs	.+18     	; 0xe784 <malloc+0x132>
    e772:	4e 0f       	add	r20, r30
    e774:	5f 1f       	adc	r21, r31
    e776:	50 93 b5 0a 	sts	0x0AB5, r21	; 0x800ab5 <__brkval+0x1>
    e77a:	40 93 b4 0a 	sts	0x0AB4, r20	; 0x800ab4 <__brkval>
    e77e:	81 93       	st	Z+, r24
    e780:	91 93       	st	Z+, r25
    e782:	9f cf       	rjmp	.-194    	; 0xe6c2 <malloc+0x70>
    e784:	f0 e0       	ldi	r31, 0x00	; 0
    e786:	e0 e0       	ldi	r30, 0x00	; 0
    e788:	9c cf       	rjmp	.-200    	; 0xe6c2 <malloc+0x70>

0000e78a <free>:
free():
    e78a:	cf 93       	push	r28
    e78c:	df 93       	push	r29
    e78e:	00 97       	sbiw	r24, 0x00	; 0
    e790:	e9 f0       	breq	.+58     	; 0xe7cc <free+0x42>
    e792:	fc 01       	movw	r30, r24
    e794:	32 97       	sbiw	r30, 0x02	; 2
    e796:	13 82       	std	Z+3, r1	; 0x03
    e798:	12 82       	std	Z+2, r1	; 0x02
    e79a:	a0 91 b6 0a 	lds	r26, 0x0AB6	; 0x800ab6 <__flp>
    e79e:	b0 91 b7 0a 	lds	r27, 0x0AB7	; 0x800ab7 <__flp+0x1>
    e7a2:	ed 01       	movw	r28, r26
    e7a4:	30 e0       	ldi	r19, 0x00	; 0
    e7a6:	20 e0       	ldi	r18, 0x00	; 0
    e7a8:	10 97       	sbiw	r26, 0x00	; 0
    e7aa:	a1 f4       	brne	.+40     	; 0xe7d4 <free+0x4a>
    e7ac:	20 81       	ld	r18, Z
    e7ae:	31 81       	ldd	r19, Z+1	; 0x01
    e7b0:	82 0f       	add	r24, r18
    e7b2:	93 1f       	adc	r25, r19
    e7b4:	20 91 b4 0a 	lds	r18, 0x0AB4	; 0x800ab4 <__brkval>
    e7b8:	30 91 b5 0a 	lds	r19, 0x0AB5	; 0x800ab5 <__brkval+0x1>
    e7bc:	28 17       	cp	r18, r24
    e7be:	39 07       	cpc	r19, r25
    e7c0:	09 f0       	breq	.+2      	; 0xe7c4 <free+0x3a>
    e7c2:	61 c0       	rjmp	.+194    	; 0xe886 <free+0xfc>
    e7c4:	f0 93 b5 0a 	sts	0x0AB5, r31	; 0x800ab5 <__brkval+0x1>
    e7c8:	e0 93 b4 0a 	sts	0x0AB4, r30	; 0x800ab4 <__brkval>
    e7cc:	df 91       	pop	r29
    e7ce:	cf 91       	pop	r28
    e7d0:	08 95       	ret
    e7d2:	ea 01       	movw	r28, r20
    e7d4:	ce 17       	cp	r28, r30
    e7d6:	df 07       	cpc	r29, r31
    e7d8:	e8 f5       	brcc	.+122    	; 0xe854 <free+0xca>
    e7da:	4a 81       	ldd	r20, Y+2	; 0x02
    e7dc:	5b 81       	ldd	r21, Y+3	; 0x03
    e7de:	9e 01       	movw	r18, r28
    e7e0:	41 15       	cp	r20, r1
    e7e2:	51 05       	cpc	r21, r1
    e7e4:	b1 f7       	brne	.-20     	; 0xe7d2 <free+0x48>
    e7e6:	e9 01       	movw	r28, r18
    e7e8:	fb 83       	std	Y+3, r31	; 0x03
    e7ea:	ea 83       	std	Y+2, r30	; 0x02
    e7ec:	49 91       	ld	r20, Y+
    e7ee:	59 91       	ld	r21, Y+
    e7f0:	c4 0f       	add	r28, r20
    e7f2:	d5 1f       	adc	r29, r21
    e7f4:	ec 17       	cp	r30, r28
    e7f6:	fd 07       	cpc	r31, r29
    e7f8:	61 f4       	brne	.+24     	; 0xe812 <free+0x88>
    e7fa:	80 81       	ld	r24, Z
    e7fc:	91 81       	ldd	r25, Z+1	; 0x01
    e7fe:	02 96       	adiw	r24, 0x02	; 2
    e800:	84 0f       	add	r24, r20
    e802:	95 1f       	adc	r25, r21
    e804:	e9 01       	movw	r28, r18
    e806:	99 83       	std	Y+1, r25	; 0x01
    e808:	88 83       	st	Y, r24
    e80a:	82 81       	ldd	r24, Z+2	; 0x02
    e80c:	93 81       	ldd	r25, Z+3	; 0x03
    e80e:	9b 83       	std	Y+3, r25	; 0x03
    e810:	8a 83       	std	Y+2, r24	; 0x02
    e812:	f0 e0       	ldi	r31, 0x00	; 0
    e814:	e0 e0       	ldi	r30, 0x00	; 0
    e816:	12 96       	adiw	r26, 0x02	; 2
    e818:	8d 91       	ld	r24, X+
    e81a:	9c 91       	ld	r25, X
    e81c:	13 97       	sbiw	r26, 0x03	; 3
    e81e:	00 97       	sbiw	r24, 0x00	; 0
    e820:	b9 f5       	brne	.+110    	; 0xe890 <free+0x106>
    e822:	2d 91       	ld	r18, X+
    e824:	3c 91       	ld	r19, X
    e826:	11 97       	sbiw	r26, 0x01	; 1
    e828:	cd 01       	movw	r24, r26
    e82a:	02 96       	adiw	r24, 0x02	; 2
    e82c:	82 0f       	add	r24, r18
    e82e:	93 1f       	adc	r25, r19
    e830:	20 91 b4 0a 	lds	r18, 0x0AB4	; 0x800ab4 <__brkval>
    e834:	30 91 b5 0a 	lds	r19, 0x0AB5	; 0x800ab5 <__brkval+0x1>
    e838:	28 17       	cp	r18, r24
    e83a:	39 07       	cpc	r19, r25
    e83c:	39 f6       	brne	.-114    	; 0xe7cc <free+0x42>
    e83e:	30 97       	sbiw	r30, 0x00	; 0
    e840:	51 f5       	brne	.+84     	; 0xe896 <free+0x10c>
    e842:	10 92 b7 0a 	sts	0x0AB7, r1	; 0x800ab7 <__flp+0x1>
    e846:	10 92 b6 0a 	sts	0x0AB6, r1	; 0x800ab6 <__flp>
    e84a:	b0 93 b5 0a 	sts	0x0AB5, r27	; 0x800ab5 <__brkval+0x1>
    e84e:	a0 93 b4 0a 	sts	0x0AB4, r26	; 0x800ab4 <__brkval>
    e852:	bc cf       	rjmp	.-136    	; 0xe7cc <free+0x42>
    e854:	d3 83       	std	Z+3, r29	; 0x03
    e856:	c2 83       	std	Z+2, r28	; 0x02
    e858:	40 81       	ld	r20, Z
    e85a:	51 81       	ldd	r21, Z+1	; 0x01
    e85c:	84 0f       	add	r24, r20
    e85e:	95 1f       	adc	r25, r21
    e860:	c8 17       	cp	r28, r24
    e862:	d9 07       	cpc	r29, r25
    e864:	61 f4       	brne	.+24     	; 0xe87e <free+0xf4>
    e866:	4e 5f       	subi	r20, 0xFE	; 254
    e868:	5f 4f       	sbci	r21, 0xFF	; 255
    e86a:	88 81       	ld	r24, Y
    e86c:	99 81       	ldd	r25, Y+1	; 0x01
    e86e:	48 0f       	add	r20, r24
    e870:	59 1f       	adc	r21, r25
    e872:	51 83       	std	Z+1, r21	; 0x01
    e874:	40 83       	st	Z, r20
    e876:	8a 81       	ldd	r24, Y+2	; 0x02
    e878:	9b 81       	ldd	r25, Y+3	; 0x03
    e87a:	93 83       	std	Z+3, r25	; 0x03
    e87c:	82 83       	std	Z+2, r24	; 0x02
    e87e:	21 15       	cp	r18, r1
    e880:	31 05       	cpc	r19, r1
    e882:	09 f0       	breq	.+2      	; 0xe886 <free+0xfc>
    e884:	b0 cf       	rjmp	.-160    	; 0xe7e6 <free+0x5c>
    e886:	f0 93 b7 0a 	sts	0x0AB7, r31	; 0x800ab7 <__flp+0x1>
    e88a:	e0 93 b6 0a 	sts	0x0AB6, r30	; 0x800ab6 <__flp>
    e88e:	9e cf       	rjmp	.-196    	; 0xe7cc <free+0x42>
    e890:	fd 01       	movw	r30, r26
    e892:	dc 01       	movw	r26, r24
    e894:	c0 cf       	rjmp	.-128    	; 0xe816 <free+0x8c>
    e896:	13 82       	std	Z+3, r1	; 0x03
    e898:	12 82       	std	Z+2, r1	; 0x02
    e89a:	d7 cf       	rjmp	.-82     	; 0xe84a <free+0xc0>

0000e89c <abort>:
abort():
    e89c:	81 e0       	ldi	r24, 0x01	; 1
    e89e:	90 e0       	ldi	r25, 0x00	; 0
    e8a0:	f8 94       	cli
    e8a2:	0c 94 f1 74 	jmp	0xe9e2	; 0xe9e2 <__do_global_dtors>

0000e8a6 <atoi>:
atoi():
    e8a6:	fc 01       	movw	r30, r24
    e8a8:	88 27       	eor	r24, r24
    e8aa:	99 27       	eor	r25, r25
    e8ac:	e8 94       	clt
    e8ae:	21 91       	ld	r18, Z+
    e8b0:	20 32       	cpi	r18, 0x20	; 32
    e8b2:	e9 f3       	breq	.-6      	; 0xe8ae <atoi+0x8>
    e8b4:	29 30       	cpi	r18, 0x09	; 9
    e8b6:	10 f0       	brcs	.+4      	; 0xe8bc <atoi+0x16>
    e8b8:	2e 30       	cpi	r18, 0x0E	; 14
    e8ba:	c8 f3       	brcs	.-14     	; 0xe8ae <atoi+0x8>
    e8bc:	2b 32       	cpi	r18, 0x2B	; 43
    e8be:	41 f0       	breq	.+16     	; 0xe8d0 <atoi+0x2a>
    e8c0:	2d 32       	cpi	r18, 0x2D	; 45
    e8c2:	39 f4       	brne	.+14     	; 0xe8d2 <atoi+0x2c>
    e8c4:	68 94       	set
    e8c6:	04 c0       	rjmp	.+8      	; 0xe8d0 <atoi+0x2a>
    e8c8:	0e 94 d3 74 	call	0xe9a6	; 0xe9a6 <__mulhi_const_10>
    e8cc:	82 0f       	add	r24, r18
    e8ce:	91 1d       	adc	r25, r1
    e8d0:	21 91       	ld	r18, Z+
    e8d2:	20 53       	subi	r18, 0x30	; 48
    e8d4:	2a 30       	cpi	r18, 0x0A	; 10
    e8d6:	c0 f3       	brcs	.-16     	; 0xe8c8 <atoi+0x22>
    e8d8:	1e f4       	brtc	.+6      	; 0xe8e0 <atoi+0x3a>
    e8da:	90 95       	com	r25
    e8dc:	81 95       	neg	r24
    e8de:	9f 4f       	sbci	r25, 0xFF	; 255
    e8e0:	08 95       	ret

0000e8e2 <atol>:
atol():
    e8e2:	1f 93       	push	r17
    e8e4:	fc 01       	movw	r30, r24
    e8e6:	99 27       	eor	r25, r25
    e8e8:	88 27       	eor	r24, r24
    e8ea:	bc 01       	movw	r22, r24
    e8ec:	e8 94       	clt
    e8ee:	11 91       	ld	r17, Z+
    e8f0:	10 32       	cpi	r17, 0x20	; 32
    e8f2:	e9 f3       	breq	.-6      	; 0xe8ee <atol+0xc>
    e8f4:	19 30       	cpi	r17, 0x09	; 9
    e8f6:	10 f0       	brcs	.+4      	; 0xe8fc <atol+0x1a>
    e8f8:	1e 30       	cpi	r17, 0x0E	; 14
    e8fa:	c8 f3       	brcs	.-14     	; 0xe8ee <atol+0xc>
    e8fc:	1b 32       	cpi	r17, 0x2B	; 43
    e8fe:	51 f0       	breq	.+20     	; 0xe914 <atol+0x32>
    e900:	1d 32       	cpi	r17, 0x2D	; 45
    e902:	49 f4       	brne	.+18     	; 0xe916 <atol+0x34>
    e904:	68 94       	set
    e906:	06 c0       	rjmp	.+12     	; 0xe914 <atol+0x32>
    e908:	0e 94 be 74 	call	0xe97c	; 0xe97c <__mulsi_const_10>
    e90c:	61 0f       	add	r22, r17
    e90e:	71 1d       	adc	r23, r1
    e910:	81 1d       	adc	r24, r1
    e912:	91 1d       	adc	r25, r1
    e914:	11 91       	ld	r17, Z+
    e916:	10 53       	subi	r17, 0x30	; 48
    e918:	1a 30       	cpi	r17, 0x0A	; 10
    e91a:	b0 f3       	brcs	.-20     	; 0xe908 <atol+0x26>
    e91c:	3e f4       	brtc	.+14     	; 0xe92c <atol+0x4a>
    e91e:	90 95       	com	r25
    e920:	80 95       	com	r24
    e922:	70 95       	com	r23
    e924:	61 95       	neg	r22
    e926:	7f 4f       	sbci	r23, 0xFF	; 255
    e928:	8f 4f       	sbci	r24, 0xFF	; 255
    e92a:	9f 4f       	sbci	r25, 0xFF	; 255
    e92c:	1f 91       	pop	r17
    e92e:	08 95       	ret

0000e930 <memset>:
memset():
    e930:	dc 01       	movw	r26, r24
    e932:	01 c0       	rjmp	.+2      	; 0xe936 <memset+0x6>
    e934:	6d 93       	st	X+, r22
    e936:	41 50       	subi	r20, 0x01	; 1
    e938:	50 40       	sbci	r21, 0x00	; 0
    e93a:	e0 f7       	brcc	.-8      	; 0xe934 <memset+0x4>
    e93c:	08 95       	ret

0000e93e <strcmp>:
strcmp():
    e93e:	fb 01       	movw	r30, r22
    e940:	dc 01       	movw	r26, r24
    e942:	8d 91       	ld	r24, X+
    e944:	01 90       	ld	r0, Z+
    e946:	80 19       	sub	r24, r0
    e948:	01 10       	cpse	r0, r1
    e94a:	d9 f3       	breq	.-10     	; 0xe942 <strcmp+0x4>
    e94c:	99 0b       	sbc	r25, r25
    e94e:	08 95       	ret

0000e950 <strcpy>:
strcpy():
    e950:	fb 01       	movw	r30, r22
    e952:	dc 01       	movw	r26, r24
    e954:	01 90       	ld	r0, Z+
    e956:	0d 92       	st	X+, r0
    e958:	00 20       	and	r0, r0
    e95a:	e1 f7       	brne	.-8      	; 0xe954 <strcpy+0x4>
    e95c:	08 95       	ret

0000e95e <strncpy>:
strncpy():
    e95e:	fb 01       	movw	r30, r22
    e960:	dc 01       	movw	r26, r24
    e962:	41 50       	subi	r20, 0x01	; 1
    e964:	50 40       	sbci	r21, 0x00	; 0
    e966:	48 f0       	brcs	.+18     	; 0xe97a <strncpy+0x1c>
    e968:	01 90       	ld	r0, Z+
    e96a:	0d 92       	st	X+, r0
    e96c:	00 20       	and	r0, r0
    e96e:	c9 f7       	brne	.-14     	; 0xe962 <strncpy+0x4>
    e970:	01 c0       	rjmp	.+2      	; 0xe974 <strncpy+0x16>
    e972:	1d 92       	st	X+, r1
    e974:	41 50       	subi	r20, 0x01	; 1
    e976:	50 40       	sbci	r21, 0x00	; 0
    e978:	e0 f7       	brcc	.-8      	; 0xe972 <strncpy+0x14>
    e97a:	08 95       	ret

0000e97c <__mulsi_const_10>:
__mulsi_const_10():
    e97c:	59 2f       	mov	r21, r25
    e97e:	48 2f       	mov	r20, r24
    e980:	37 2f       	mov	r19, r23
    e982:	26 2f       	mov	r18, r22
    e984:	66 0f       	add	r22, r22
    e986:	77 1f       	adc	r23, r23
    e988:	88 1f       	adc	r24, r24
    e98a:	99 1f       	adc	r25, r25
    e98c:	66 0f       	add	r22, r22
    e98e:	77 1f       	adc	r23, r23
    e990:	88 1f       	adc	r24, r24
    e992:	99 1f       	adc	r25, r25
    e994:	62 0f       	add	r22, r18
    e996:	73 1f       	adc	r23, r19
    e998:	84 1f       	adc	r24, r20
    e99a:	95 1f       	adc	r25, r21
    e99c:	66 0f       	add	r22, r22
    e99e:	77 1f       	adc	r23, r23
    e9a0:	88 1f       	adc	r24, r24
    e9a2:	99 1f       	adc	r25, r25
    e9a4:	08 95       	ret

0000e9a6 <__mulhi_const_10>:
__mulhi_const_10():
    e9a6:	7a e0       	ldi	r23, 0x0A	; 10
    e9a8:	97 9f       	mul	r25, r23
    e9aa:	90 2d       	mov	r25, r0
    e9ac:	87 9f       	mul	r24, r23
    e9ae:	80 2d       	mov	r24, r0
    e9b0:	91 0d       	add	r25, r1
    e9b2:	11 24       	eor	r1, r1
    e9b4:	08 95       	ret

0000e9b6 <eeprom_read_byte>:
eeprom_read_byte():
    e9b6:	f9 99       	sbic	0x1f, 1	; 31
    e9b8:	fe cf       	rjmp	.-4      	; 0xe9b6 <eeprom_read_byte>
    e9ba:	92 bd       	out	0x22, r25	; 34
    e9bc:	81 bd       	out	0x21, r24	; 33
    e9be:	f8 9a       	sbi	0x1f, 0	; 31
    e9c0:	99 27       	eor	r25, r25
    e9c2:	80 b5       	in	r24, 0x20	; 32
    e9c4:	08 95       	ret

0000e9c6 <eeprom_write_byte>:
eeprom_write_byte():
    e9c6:	26 2f       	mov	r18, r22

0000e9c8 <eeprom_write_r18>:
    e9c8:	f9 99       	sbic	0x1f, 1	; 31
    e9ca:	fe cf       	rjmp	.-4      	; 0xe9c8 <eeprom_write_r18>
    e9cc:	1f ba       	out	0x1f, r1	; 31
    e9ce:	92 bd       	out	0x22, r25	; 34
    e9d0:	81 bd       	out	0x21, r24	; 33
    e9d2:	20 bd       	out	0x20, r18	; 32
    e9d4:	0f b6       	in	r0, 0x3f	; 63
    e9d6:	f8 94       	cli
    e9d8:	fa 9a       	sbi	0x1f, 2	; 31
    e9da:	f9 9a       	sbi	0x1f, 1	; 31
    e9dc:	0f be       	out	0x3f, r0	; 63
    e9de:	01 96       	adiw	r24, 0x01	; 1
    e9e0:	08 95       	ret

0000e9e2 <__do_global_dtors>:
__do_global_dtors():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2496
    e9e2:	10 e1       	ldi	r17, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2497
    e9e4:	c9 e6       	ldi	r28, 0x69	; 105
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2498
    e9e6:	d0 e1       	ldi	r29, 0x10	; 16
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2502
    e9e8:	04 c0       	rjmp	.+8      	; 0xe9f2 <__do_global_dtors+0x10>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2508
    e9ea:	fe 01       	movw	r30, r28
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2509
    e9ec:	0e 94 ea 72 	call	0xe5d4	; 0xe5d4 <__tablejump2__>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2510
    e9f0:	21 96       	adiw	r28, 0x01	; 1
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2515
    e9f2:	ca 36       	cpi	r28, 0x6A	; 106
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2516
    e9f4:	d1 07       	cpc	r29, r17
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2521
    e9f6:	c9 f7       	brne	.-14     	; 0xe9ea <__do_global_dtors+0x8>
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    e9f8:	f8 94       	cli

0000e9fa <__stop_program>:
__stop_program():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr51/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    e9fa:	ff cf       	rjmp	.-2      	; 0xe9fa <__stop_program>
